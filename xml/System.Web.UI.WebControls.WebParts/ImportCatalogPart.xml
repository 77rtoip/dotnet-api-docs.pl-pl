<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9f2b0bb2d48d11e3c00fcd8776e0fc19707f001" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53521955" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importuje plik opis dla <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki (lub inne formant serwera ASP.NET, używane jako <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> sterowania), dzięki czemu użytkownicy mogą dodawać kontrolki do strony sieci Web ze wstępnie zdefiniowanymi ustawieniami. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Control umożliwia użytkownikom import pliku opisu, który opisuje ustawienia na <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki lub kontrolki serwera, które użytkownik chce, aby dodać do <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy.  
  
 Po użytkownik importuje plik opis <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, do którego odwołuje się plik, który pojawia się w obrębie <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli, a użytkownik może dodać formant do strony.  
  
 Plik opisu nie jest taka sama jak sama kontrolka. Jest to plik XML, który kończy się. Rozszerzenia składnik Web Part i zawiera nazwę/pary wartości — przeważnie wartości właściwości--opisujące stan kontrolki. Plik opisu jest tworzony zgodnie z określonym formacie XML, zgodnie z opisem w temacie [plików opis kontrola części sieci Web](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8).  
  
 Jak w przypadku formantu, który dotyczy pliku opisu albo może być kompilowane do zestawu, lub może być kontrolki użytkownika zdefiniowane w pliku .ascx. W obu przypadkach formantu w pliku importowanych opisu musi istnieć na serwerze sieci Web, który hostuje strony, który próbuje zaimportować formantu. Plik opisu odwołuje się do formantu nazwy i zestawu (lub pliku), który zawiera kontrolkę, a pliku opisu zawiera ustawienia, które mają wpływ na wartości właściwości formantu, wygląd i zachowanie.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Control umożliwia użytkownikom udostępnianie ustawień kontrolek. Formant złożony może mieć wielu ustawień i właściwości. Na przykład w w intranecie typowe w dużej firmie niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> formant może zawierać wiele właściwości, używane do przechowywania wartości specyficzne dla środowiska użytkowników, takich jak ich połączenia z bazą danych, informacje dla działu i tak dalej. Formant może także zawierać wiele właściwości, które wpływają na jego wyglądu. Jeden użytkownik może spersonalizować kontrolki w określonej lokacji i jego działa prawidłowo, eksportowania pliku opisu dla formantu i następnie Udostępnij plik opis z innymi użytkownikami, którzy można zaimportować pliku, aby dodać formant pełni skonfigurowanej do innych sieci intranet witryn, które mogą personalizować. Tak długo, jak skompilowanego zestawu lub plik kontrolki użytkownika zawierająca formant istnieje na serwerze sieci Web, który jest hostem ich lokacji, użytkownicy mogą dodawać kontrolki do innych witryn sieci Web.  
  
 Mechanizm, za pomocą którego użytkownicy importować pliku opisu (i dlatego kontrolować jego skojarzonego serwera) na stronie sieci Web jest <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formant, który deweloper strony należy dodać do strony sieci Web. Gdy użytkownik przełącza tryb wyświetlania katalogu, strona <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formant jest widoczny, a użytkownik może użytkownika tej kontrolki, aby przejść do. Odpowiadający formant serwera, jaki mu pasuje, aby zaimportować plik opis składnika Web Part. Korzystania z interfejsu użytkownika i instrukcjami <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli, użytkownik będzie mógł dodać kontrolkę żądanego serwera na stronie sieci Web za pomocą jego wygląd i właściwości, w pełni skonfigurowane jako określony w pliku importowanych opisu.  
  
 Przed <xref:System.Web.UI.WebControls.WebParts.WebPart> można zaimportować pliku opisu kontrolki, użytkownik musi najpierw utworzyć (Eksportowanie) opartą na plikach na istniejącym <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli. Kontrolki można wyeksportować z pliku opisu pod warunkiem, że są spełnione następujące warunki:  
  
-   Kontrolka ma właściwości oznaczone `Personalizable` atrybutu.  
  
-   Plik Web.config zawiera `enableExport` ustawiona na wartość atrybutu `true` na `<webParts>` elementu.  
  
-   Deweloper ustawia wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> właściwości kontrolki na wartość inną niż domyślna wartość <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>, co uniemożliwia używanie eksportu. Jeśli <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> wartość właściwości jest równa <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, dowolnej właściwości, która zawiera <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> parametrem `Personalizable` atrybut nie jest eksportowane, gdy użytkownik eksportuje pliku opisu. Dzięki temu deweloperzy kontroli uniemożliwić eksportowanych w niektórych sytuacjach poufnych danych, takich jak parametry połączenia.  
  
 Użytkownik może wyeksportować formant, który został włączony dla eksportu, klikając zlecenie eksportu, która pojawia się w menu zleceń, kontrolki i postępując zgodnie z instrukcjami, aby zapisać. Plik opisu składnika Web Part dla formantu. Inni użytkownicy można następnie zaimportować ten plik, aby skonfigurować własne wystąpienia formantu.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Klasa zawiera wiele właściwości. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Właściwość zawiera tekst z instrukcjami dla użytkowników przeglądających można zlokalizować pliku opisu. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Właściwość zawiera tekst, który służy jako etykieta kontrolki importowanych brzmieniu podanym w ramach <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Zawiera tekst, który jest wyświetlany, jeśli wystąpi błąd, po zaimportowaniu opis kontrolki. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Właściwość zastępuje właściwość podstawowy, aby przypisać tytuł domyślny <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, jeżeli deweloper nie ma przypisanego tytuł. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Właściwość zawiera tekst dla przycisku, który użytkownik klika w celu przekazania pliku opisu i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwość zawiera instrukcje dotyczące procesu przekazywania.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Klasa zawiera także kilka metod unikatowy. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metoda pobiera <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekt dla każdego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli w katalogu, który umożliwia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu, aby wyświetlić informacje o każdej kontrolki serwera bez konieczności tworzenia jego wystąpienie. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Metoda pobiera wystąpienia określonego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, na podstawie opisu przekazywany do metody.  
  
 Istnieją pewne ryzykiem związanych z korzystaniem z <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Przykładem jest możliwość importowania szkodliwe dane do aplikacji sieci Web za pomocą plików opis używane do importowania. Jeśli ktoś umieścił kod złośliwy skrypt jako wartość właściwości ciągu w pliku opisu, następnie tego skryptu potencjalnie może wykonywane, gdy użytkownik importuje plik opis, a także dodaje formant serwera odwołania do strony sieci Web. Aby zminimalizować ryzyko importowania plików opis za szkodliwe dane, formantów serwera, które mają wpisane parametrów właściwości powinny zawsze kodowania danych właściwości. Inny ryzyka obejmuje importowania typów za pomocą plików opis (zobacz [plików opis kontrola części sieci Web](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). Złośliwy użytkownik może przesyłać żądania można załadować wiele zestawów w <xref:System.AppDomain>, dając w efekcie w nadmiernej ilości pamięci, które są używane.  
  
 Aby uniknąć ryzyka związanego z importu, możesz wyłączyć funkcję całkowicie przez nie przy użyciu funkcji importu lub <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Lub można ograniczyć, jakie użytkownicy mają dostęp do formantu. Użytkownik może to zrobić programowo, za pomocą zarządzania rolami (zobacz [Zarządzanie rolami przy użyciu autoryzacji](https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)). Na przykład podczas ładowania strony można przetestować aby zobaczyć, czy użytkownik znajduje się w niektórych ról, takiej jak roli administratora. Jeśli użytkownik jest w tej roli, można programowo dodać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu do strony dla tego użytkownika. Można także użyć podejścia deklaratywnego ograniczyć zestaw użytkowników, których można użyć <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli.  W ramach strony sieci web, która zawiera katalog, możesz umieścić dwa <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolki: jeden dla użytkowników, którzy będą mogli zaimportować i jeden dla osób, które nie. Strefy dla użytkowników, którzy będą mogli zaimportować będzie zawierał <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Samej strefie, można umieścić wewnątrz <xref:System.Web.UI.WebControls.LoginView> formant, który umożliwiłby można ograniczyć użycie sterowania w strefie, aby tylko te uwierzytelnienia użytkowników lub ról, które określisz.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolować sposób deklaratywny i programowy na stronie sieci Web. W przykładzie przedstawiono cztery części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie sieci Web Part.  
  
-   Strony sieci Web, która zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
-   Wyjaśnienie, jak działa przykład podczas ładowania strony w przeglądarce.  
  
 Pierwsza część w tym przykładzie kodu jest kontrolki użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Należy umieścić następujący kod źródłowy w pliku i nadaj jej nazwę, Displaymodemenucs.ascx lub Displaymodemenuvb.ascx (w zależności od języka, w którym używasz). Wyświetlane szczegóły dotyczące trybów i opis kodu źródłowego w tym elemencie sterującym, w temacie [instruktażu: Zmiana trybów wyświetlania w sieci Web części strony](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 Druga część przykładowy kod jest strona sieci Web. W górnej części strony są dwa `register` dyrektywy, jeden dla kontrolki użytkownika i jeden dla skompilowanych składnik, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Należy zauważyć, że strona ma deklaratywne odwołanie do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, zagnieżdżone w obrębie hierarchii odpowiednich elementów deklaratywnych. Zwróć uwagę, że kilka wartości właściwości są przypisywane deklaratywnie w `<asp:importcatalogpart>` elementu. Ponadto `Button1_Click` metoda aktualizuje wartości właściwości na <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli.  
  
 Na stronie <xref:System.Web.UI.WebControls.WebParts.WebPartZone> formant, niestandardowe dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty są zadeklarowane. `<aspSample:userinfowebpart>` Kontrolkę `exportmode="all"` atrybutu na nim. Ten atrybut jest wymagany, aby umożliwić użytkownikom eksportowanie pliku opisu dla formantu, który można następnie zaimportować przez innych użytkowników, którzy chcą importowania kontroli przy użyciu pliku opisu.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji Web Part do wyeksportowania pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, należy również włączyć funkcję eksportu w aplikacji sieci Web, dodając `enableExport="true"` atrybutu `<webParts>` element (który jest elementem podrzędnym `<system.web>`elementu) w pliku Web.config. Eksport jest domyślnie wyłączona, dlatego jeśli eksportu nie zostały jeszcze włączone dla aplikacji, edytować plik Web.config i zrób to teraz.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 Trzecia część przykładowy kod jest kodem źródłowym dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Należy zauważyć, że niektóre właściwości tych kontrolek są oznaczone `WebBrowsable` atrybutu. Dzięki temu <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> kontroli w celu dynamicznego generowania interfejsu użytkownika (UI) dla użytkownika edytować te właściwości, w przypadku formantów w trybie edycji. Właściwości są również oznaczane za pomocą `WebDisplayName` atrybutu, aby określić tekst etykiety, która pojawia się obok każdego formantu w Interfejsie użytkownika edycji. Aby uzyskać przykładowy kod zadziałał należy skompilować ten kod źródłowy. Można skompilować go jawnie i umieścić Wynikowy zestaw w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, gdzie go zostanie dynamicznie skompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej. Przewodnik pokazuje obie metody kompilacji, zobacz [instruktażu: Tworzenie i używanie niestandardowej kontrolki serwera internetowej](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 Kontrolki niestandardowej o nazwie `TextDisplayWebPart` odwołuje się do strony sieci Web za pomocą `<aspSample:TextDisplayWebPart>` elementu. Inne kontrolki, o nazwie `UserInfoWebPart`, także jest zadeklarowany na stronie sieci Web wstępnie, chociaż usunie je później, aby zademonstrować możliwość importowania pliku opisu dla formantu.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 Teraz można uruchamiać w przykładzie kodu. Ładowanie strony sieci Web w przeglądarce. Pierwszym krokiem jest edycja `UserInfoWebPart` kontroli. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz pozycję **Edytuj** do przełączania strony do trybu edycji. Kliknij przycisk menu zleceń `UserInfoWebPart` kontroli (Strzałka w dół na pasku tytułu), a następnie kliknij **Edytuj**. Gdy pojawi się interfejs użytkownika, kilka formantów edycji są wyświetlone poniżej `UserInfoWebPart` formant, który służy do edytowania wartości pól. Edytować niektóre pola, kliknij **OK**, a następnie użyj **tryb wyświetlania** rozwijanej, aby powrócić na stronę, aby tryb przeglądania.  
  
 Drugim krokiem jest do wyeksportowania. Plik opisu składnika Web Part dla `UserInfoWebPart` kontroli. Kliknij przycisk menu zleceń kontrolki niestandardowej (reprezentowany przez strzałki w dół na pasku tytułu), a następnie kliknij przycisk **wyeksportować**. Postępuj zgodnie z instrukcjami, aby zapisać. Plik opisu składnika Web Part dla formantu. Teraz zamknij stronę sieci Web, a następnie Edytuj źródło strony w edytorze. Usuń `<aspSample:userinfowebpart>` kontrolować deklaracji elementu, a następnie zapisz i zamknij plik. (Robią ten krok, aby symulować użytkownika, który nie ma jeszcze `UserInfoWebPart` kontrolować, dzięki czemu można zaimportować formantu do strony).  
  
 Ładowanie strony sieci Web, ponownie w przeglądarce. `UserInfoWebPart` Formantu nie powinien pojawić się, ponieważ zostały usunięte. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz pozycję **katalogu** do przełączania strony na tryb katalogu. W <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> sterowania, kliknij przycisk **Przeglądaj** przycisk, a następnie przejdź do. Składnik Web Part utworzonego pliku, a następnie kliknij przycisk **przekazywanie** przycisku. Odwołanie do formantu powinno zostać wyświetlone pole wyboru obok niego. Zaznacz pole wyboru, a następnie kliknij przycisk **Dodaj** można dodać kontrolki do strony.  
  
 Gdy jesteś w tym widoku strony, kliknij przycisk **ImportCatalogPart aktualizacji** przycisk w dolnej części strony Aby zobaczyć efekt programową aktualizację liczba wartości właściwości na <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Po kliknięciu przycisku, obserwuj, jak różne właściwości zostały zmienione w Interfejsie użytkownika.  
  
 Na koniec kliknij **Zamknij** wyjść z trybu wykazu i wróć na stronę, aby tryb przeglądania. `UserInfoWebPart` Kontrolki powinien zostać wyświetlony na stronie, zawierające wartości, które był wykorzystywany podczas został wcześniej wyeksportowany.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">Pliki opis kontrola części sieci Web</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> Konstruktor jest domyślny; żaden konstruktor jest zadeklarowany w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> klasy i dlatego nie specjalne zadania podrzędne są przeprowadzane, gdy tworzone jest nowe wystąpienie klasy. .NET Framework używa konstruktora wewnętrznie, aby utworzyć wystąpienie klasy.  
  
 Zwykle nie należy używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> Konstruktor programowo we własnym kodzie. Przeznaczeniem formantu jest strona deweloperom dodawać go deklaratywne do strony w czasie projektowania.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wiadomość SMS, która sprawia, że użytkownicy, aby przejść do lokalizacji pliku opisu.</summary>
        <value>Ciąg, który zawiera tekst komunikatu. Wartość domyślna to komunikat specyficzny dla kultury dostarczonych przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Właściwości zapewnia użytkownikom proste omówienie pierwszą rzeczą, którą muszą zrobić w trakcie Dodawanie importowanych kontrolki: podać lokalizację pliku opisu, wpisując w ścieżce lub przechodząc do pliku. Typową przyczyną podać niestandardową wartość tej właściwości jest, jeśli masz specjalne instrukcje dla użytkowników, na przykład do udziału określonej sieci, do której należy Przeglądaj, aby zlokalizować plik opisu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> właściwość sposób deklaratywny i programowy. Pełny kod i instrukcje niezbędne do uruchomienia przykładu, można znaleźć sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> klasa — Przegląd.  
  
 W poniższej sekcji kodu, należy zauważyć, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> deklaratywne Ustawianie wartości właściwości dla formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, możesz użyć **tryb wyświetlania** kontrolkę listy rozwijanej wybierz **trybu katalogu** i strony Przełącz się do trybu katalogu. Za pomocą strony w trybie katalogu i pliku opis, który został przekazany, pamiętaj, różne ciągi tekstowe, wyświetlana w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Jeśli klikniesz **przekazywanie pliku opisu** przycisku, tekst kilka właściwości w interfejsie użytkownika zostanie zmieniony, łącznie z tekstem do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, jaki przycisk w interfejsie użytkownika (UI) jest traktowana jako przycisk domyślny, który otrzymuje fokus, kiedy formularz, który zawiera ten przycisk jest renderowany. Ta właściwość nie jest przeznaczona do wywoływania z kodu dla deweloperów strony.</summary>
        <value>Ciąg, który zawiera identyfikator <see cref="T:System.Web.UI.WebControls.Button" /> odbierająca domyślnego zespołu w <see cref="T:System.Web.UI.WebControls.Panel" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kod dla tej właściwości zastępuje właściwość podstawowy odziedziczone <xref:System.Web.UI.WebControls.Panel> klasy, aby ukryć właściwość projektantów i zapobiec wpływowi motywów. Chociaż nie jest publiczny, ta właściwość jest używana wewnętrznie przez formant Web Part dla domyślne renderowanie tej kontrolki i nie jest przeznaczona do użycia przez deweloperów strony.  
  
 Nie można ustawić tę właściwość, motywy lub motywy arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [motywów programu ASP.NET i skórek](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję opisy dostępnych <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolek w wykazie.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> zawierający <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> dla każdego formantu w wykazie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metoda dostarcza implementację dla abstrakcyjna Metoda podstawowa jest zadeklarowana w <xref:System.Web.UI.WebControls.WebParts.CatalogPart> klasy. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metoda zwraca informacje dotyczące opisu dla każdego formantu w wykazie. Należy pamiętać, że w przypadku właściwości <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> sterowania, może istnieć tylko jeden serwer kontroli w wykazie w czasie, nawet jeśli metoda będzie działać, jeśli wystąpiły wielu kontrolek.  
  
 A <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekt jest obiektem, który zawiera podstawowe informacje o <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu, łącznie z jego Identyfikatora, odwołanie do obiektu do formantu i wartości kilka ważnych właściwości, które są dziedziczone z <xref:System.Web.UI.WebControls.WebParts.Part> klasy, takie jak <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> i <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metody zwiększa wydajność. Po utworzeniu katalogu musi niektóre informacje na temat każdego formantu, który zawiera, w tym tytuł, opis, ikony (jeśli istnieje) i identyfikator. Zamiast konieczności utworzenia wystąpienia każdej kontrolki, aby uzyskać te informacje <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy, który tworzy wykaz wywołania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metoda i wywołanie zwraca tylko te informacje opis kontrolki, a nie wystąpieniem formant.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metody na stronie sieci Web. W przykładzie przedstawiono cztery części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie sieci Web Part.  
  
-   Strony sieci Web, która zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, wraz z kodem, który używa <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metody.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
-   Wyjaśnienie, jak działa przykład podczas ładowania strony w przeglądarce.  
  
 Pierwsza część w tym przykładzie kodu jest kontrolki użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Należy umieścić następujący kod źródłowy w pliku i nadaj jej nazwę, Displaymodemenucs.ascx lub Displaymodemenuvb.ascx (w zależności od języka, w którym używasz). Wyświetlane szczegóły dotyczące trybów i opis kodu źródłowego w tym elemencie sterującym, w temacie [instruktażu: Zmiana trybów wyświetlania w sieci Web części strony](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Druga część przykładowy kod jest strona sieci Web. W górnej części strony są dwa `register` dyrektywy, jeden dla kontrolki użytkownika i jeden dla skompilowanych składnik, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Oba formanty odwołuje się deklaratywnie w znaczniku strony. Na deklaratywne odwołania do <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (zarówno zaczynają się od `aspSample` prefiks), należy pamiętać, że każdy ma `exportMode="all"` atrybutów dodawanych do niego. Ten atrybut umożliwia eksport. Plik opisu składnika Web Part dla formantu, którego będziesz używać w późniejszej Aby wkraczać do zaimportowania formantu do strony.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji Web Part do wyeksportowania pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, należy również włączyć funkcję eksportu w aplikacji sieci Web, dodając `enableExport="true"` atrybutu `<webParts>` element (który jest elementem podrzędnym `<system.web>`elementu) w pliku Web.config. Eksport jest domyślnie wyłączona, dlatego jeśli eksportu nie zostały jeszcze włączone dla aplikacji, edytować plik Web.config i zrób to teraz.  
  
 Strony sieci Web również deklaratywne odwołuje się do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, zagnieżdżone w obrębie hierarchii odpowiednich elementów deklaratywnych. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Kod wywoływana jest metoda `Button1_Click` metody.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Trzecia część przykładowy kod jest kodem źródłowym dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Aby uzyskać przykładowy kod zadziałał należy skompilować ten kod źródłowy. Można skompilować go jawnie i umieścić Wynikowy zestaw w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, gdzie go zostanie dynamicznie skompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej. Przewodnik pokazuje obie metody kompilacji, zobacz [instruktażu: Tworzenie i używanie niestandardowej kontrolki serwera internetowej](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Teraz można uruchamiać w przykładzie kodu. Ładowanie strony sieci Web w przeglądarce. Pierwszym krokiem jest eksportu. Plik opisu składnika Web Part dla każdego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli (dla `TextDisplayWebPart` i `UserInfoWebPart` kontroli). Dla każdego formantu, kliknij przycisk menu zleceń kontroli (reprezentowany przez strzałki w dół na pasku tytułu), a następnie kliknij przycisk **wyeksportować**. Postępuj zgodnie z instrukcjami, aby zapisać. Plik opisu składnika Web Part dla formantu. Po wyeksportowaniu pliku opisu dla każdego formantu, zamknij stronę sieci Web, a następnie Edytuj źródło strony w edytorze. Usuń `<aspSample:userinfowebpart>` i `<aspSample:textdisplaywebpart>` kontroluje elementy, deklaracji, a następnie zapisz i zamknij plik. (Którą wykonujesz ten krok, aby symulować użytkowników, którzy jeszcze nie ma tych kontrolek, dzięki czemu można zaimportować kontrolek do strony).  
  
 Ładowanie strony sieci Web, ponownie w przeglądarce. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz pozycję **katalogu** do przełączania strony na tryb katalogu. W <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> sterowania, kliknij przycisk **Przeglądaj** przycisku, przejdź do. Pliki składników Web Part został utworzony, wybierz jedną, a następnie kliknij **przekazywanie** przycisku. Odwołanie do formantu powinno zostać wyświetlone pole wyboru obok niego. Zaznacz pole wyboru, a następnie kliknij przycisk **Dodaj** można dodać kontrolki do strony. Powtórz ten proces dla innej kontrolki.  
  
 Gdy jesteś w tym widoku strony, kliknij przycisk **Pobierz opis składnika Web Part** przycisk w dolnej części strony Aby zobaczyć efekt programowo uzyskują dostęp do <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekt opis kontrolki obecnie załadowane w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Metoda umożliwiający dostęp do szczegółowych informacji, znaleziono w `Button1_Click` metoda źródła strony jest <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metody. Etykieta poniżej przycisku Wyświetla podstawowe informacje o kontrolce.  
  
 Po dodaniu pierwszą kontrolkę, powtórz te czynności, aby dodać drugi formant do strony. Na koniec kliknij **Zamknij** wyjść z trybu wykazu i wróć na stronę, aby tryb przeglądania. Obie kontrolki niestandardowej powinien zostać wyświetlony na stronie zawierająca wartości, które miały podczas wcześniej wyeksportowane pliki opis.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">Element <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> zawierający szczegółowe informacje o kontrolce.</param>
        <summary>Zwraca odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli na podstawie wartości w opisie przekazana do metody.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu, którego opis odpowiada wartości w <paramref name="description" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Metoda zwraca odwołanie do <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, których szczegóły opis zgodne z wartościami <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekt przekazany do metody. Zazwyczaj ta metoda jest używana razem z <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> metody, która służy do pobierania opisy kontrolek w wykazie. Poszczególne <xref:System.Web.UI.WebControls.WebParts.WebPart> następnie można pobrać lub zmieniane, zgodnie z potrzebami, przekazując poszczególnych formantów <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekty do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metody na stronie sieci Web. W przykładzie przedstawiono cztery części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie sieci Web Part.  
  
-   Strony sieci Web, która zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, wraz z kodem, który używa <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metody.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
-   Wyjaśnienie, jak działa przykład podczas ładowania strony w przeglądarce.  
  
 Pierwsza część w tym przykładzie kodu jest kontrolki użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Należy umieścić następujący kod źródłowy w pliku i nadaj jej nazwę, Displaymodemenucs.ascx lub Displaymodemenuvb.ascx (w zależności od języka, w którym używasz). Wyświetlane szczegóły dotyczące trybów i opis kodu źródłowego w tym elemencie sterującym, w temacie [instruktażu: Zmiana trybów wyświetlania w sieci Web części strony](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Druga część przykładowy kod jest strona sieci Web. W górnej części strony są dwa `register` dyrektywy, jeden dla kontrolki użytkownika i jeden dla skompilowanych składnik, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Oba formanty odwołuje się deklaratywnie w znaczniku strony. Na deklaratywne odwołania do <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (zarówno zaczynają się od `aspSample` prefiks), należy pamiętać, że każdy ma `exportMode="all"` atrybutów dodawanych do niego. Ten atrybut umożliwia eksport. Plik opisu składnika Web Part dla formantu, którego będziesz używać w późniejszej Aby wkraczać do zaimportowania formantu do strony.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji Web Part do wyeksportowania pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, należy również włączyć funkcję eksportu w aplikacji sieci Web, dodając `enableExport="true"` atrybutu `<webParts>` element (który jest elementem podrzędnym `<system.web>`elementu) w pliku Web.config. Eksport jest domyślnie wyłączona, dlatego jeśli eksportu nie zostały jeszcze włączone dla aplikacji, edytować plik Web.config i zrób to teraz.  
  
 Strony sieci Web również deklaratywne odwołuje się do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, zagnieżdżone w obrębie hierarchii odpowiednich elementów deklaratywnych. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Kod wywoływana jest metoda `Button2_Click` metody.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Trzecia część przykładowy kod jest kodem źródłowym dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Aby uzyskać przykładowy kod zadziałał należy skompilować ten kod źródłowy. Można skompilować go jawnie i umieścić Wynikowy zestaw w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, gdzie go zostanie dynamicznie skompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej. Przewodnik pokazuje obie metody kompilacji, zobacz [instruktażu: Tworzenie i używanie niestandardowej kontrolki serwera internetowej](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Teraz można uruchamiać w przykładzie kodu. Ładowanie strony sieci Web w przeglądarce. Pierwszym krokiem jest eksportu. Plik opisu składnika Web Part dla każdego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli (dla `TextDisplayWebPart` i `UserInfoWebPart` kontroli). Dla każdego formantu, kliknij przycisk menu zleceń kontroli (reprezentowany przez strzałki w dół na pasku tytułu), a następnie kliknij przycisk **wyeksportować**. Postępuj zgodnie z instrukcjami, aby zapisać. Plik opisu składnika Web Part dla formantu. Po wyeksportowaniu pliku opisu dla każdego formantu, zamknij stronę sieci Web, a następnie Edytuj źródło strony w edytorze. Usuń `<aspSample:userinfowebpart>` i `<aspSample:textdisplaywebpart>` kontroluje elementy, deklaracji, a następnie zapisz i zamknij plik. (Którą wykonujesz ten krok, aby symulować użytkowników, którzy jeszcze nie ma tych kontrolek, dzięki czemu można zaimportować kontrolek do strony).  
  
 Ładowanie strony sieci Web, ponownie w przeglądarce. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz pozycję **katalogu** do przełączania strony na tryb katalogu. W <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> sterowania, kliknij przycisk **Przeglądaj** przycisku, przejdź do. Pliki składników Web Part został utworzony, wybierz jedną, a następnie kliknij **przekazywanie** przycisku. Odwołanie do formantu powinno zostać wyświetlone pole wyboru obok niego. Teraz, że opis kontrolki zostanie przekazany do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> sterowania, kliknij przycisk **GetWebPart użyj** przycisk w dolnej części strony. To zademonstruje efekt wywoływania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metody i przekazanie do niego opis kontrolki, w obecnie załadowanym <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Należy pamiętać, że skojarzonego serwera formant jest dodawany bezpośrednio do strony sieci Web bez użytkownika, po kliknięciu **Dodaj** przycisku. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Metody, która jest wywoływana w `Button2_Click` metoda źródła strony zwraca <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki skojarzone z bieżącym opis, który jest ładowany w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Następny <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metoda jest wywoływana i <xref:System.Web.UI.WebControls.WebParts.WebPart> formant bezpośrednio jest dodawany do strony. Oznacza to, jak dodać kontrolkę programowo z <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli bez interwencji użytkownika.  
  
 Po dodaniu pierwszą kontrolkę, powtórz te czynności, aby dodać drugi formant do strony. Na koniec kliknij **Zamknij** wyjść z trybu wykazu i wróć na stronę, aby tryb przeglądania. Obie kontrolki niestandardowej powinien zostać wyświetlony na stronie zawierająca wartości, które miały podczas wcześniej wyeksportowane pliki opis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="description" /> nie jest dostępna <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> wartość.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany po użytkownik importuje plik opis do reprezentowania lub opisać importowanych kontroli w wykazie importowanych kontrolki.</summary>
        <value>Ciąg, który zawiera tekst etykiety. Wartość domyślna to komunikat specyficzny dla kultury dostarczonych przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Właściwość jest zwykle używana do zawiera krótkie, ogólne etykietę, która opisuje formantu zawartego w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> właściwość sposób deklaratywny i programowy. Pełny kod i instrukcje niezbędne do uruchomienia przykładu, można znaleźć sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> klasa — Przegląd.  
  
 W poniższej sekcji kodu, należy zauważyć, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> deklaratywne Ustawianie wartości właściwości dla formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, możesz użyć **tryb wyświetlania** kontrolkę listy rozwijanej wybierz **trybu katalogu** i strony Przełącz się do trybu katalogu. Za pomocą strony w trybie katalogu i pliku opis, który został przekazany, pamiętaj, różne ciągi tekstowe, wyświetlana w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Jeśli klikniesz **przekazywanie pliku opisu** przycisku, tekst kilka właściwości w interfejsie użytkownika zostanie zmieniony, łącznie z tekstem do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia komunikat o błędzie jest wyświetlany, jeśli wystąpi błąd podczas procesu importowania.</summary>
        <value>Ciąg, który zawiera tekst etykiety. Wartość domyślna to komunikat specyficzny dla kultury dostarczonych przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Właściwość jest przydatna do powiadamiania użytkownika, jeśli niektóre problem lub błąd występuje, gdy strona próbuje zaimportować pliku opisu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> właściwość sposób deklaratywny i programowy. Pełny kod i instrukcje niezbędne do uruchomienia przykładu, można znaleźć sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> klasa — Przegląd.  
  
 W poniższej sekcji kodu, należy zauważyć, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> deklaratywne Ustawianie wartości właściwości dla formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, możesz użyć **tryb wyświetlania** kontrolkę listy rozwijanej wybierz **trybu katalogu** i strony Przełącz się do trybu katalogu. Za pomocą strony w trybie katalogu i pliku opis, który został przekazany, pamiętaj, różne ciągi tekstowe, wyświetlana w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Jeśli klikniesz **przekazywanie pliku opisu** przycisku, tekst kilka właściwości w interfejsie użytkownika zostanie zmieniony, łącznie z tekstem do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tytuł, który pojawia się w pasku tytułu <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> kontroli.</summary>
        <value>Ciąg, który jest używany jako nazwa formantu. Wartością domyślną jest nazwa formantu obliczeniowego, dostarczone przez zestaw formantów części sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Wartość właściwości jest wyświetlana na pasku tytułu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli, gdy kontrolka jest widoczna w trybie katalogu. Gdy kontrolka jest zadeklarowany na stronie, można ustawić wartości dla właściwości, używając `Title` atrybutu. Jeśli nie zostanie podana wartość dla tytułu, wartości domyślne specyficzne dla kultury jest używany do opisania rodzaju właściwości, które ta kontrolka umożliwia użytkownikom edytowanie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> właściwość sposób deklaratywny i programowy. Pełny kod i instrukcje niezbędne do uruchomienia przykładu, można znaleźć sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> klasa — Przegląd.  
  
 W poniższej sekcji kodu, należy zauważyć, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> deklaratywne Ustawianie wartości właściwości dla formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, możesz użyć **tryb wyświetlania** kontrolkę listy rozwijanej wybierz **trybu katalogu** i strony Przełącz się do trybu katalogu. Za pomocą strony w trybie katalogu i pliku opis, który został przekazany, pamiętaj, różne ciągi tekstowe, wyświetlana w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Jeśli klikniesz **przekazywanie pliku opisu** przycisku, tekst kilka właściwości w interfejsie użytkownika zostanie zmieniony, łącznie z tekstem do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst <see cref="T:System.Web.UI.WebControls.Button" /> formant, który inicjuje przekazywania pliku opisu.</summary>
        <value>Ciąg, który jest używany jako tekst <see cref="T:System.Web.UI.WebControls.Button" />. Wartość domyślna to ciąg specyficzny dla kultury dostarczonych przez zestaw formantów części sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Właściwość zawiera tekst <xref:System.Web.UI.WebControls.Button> formant, który inicjuje proces przekazywania. Jeśli przypisujesz niestandardowego tekstu do tej właściwości lub <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwość tekst upewnić jasne, że użytkownik jest przekazanie pliku opisu. Tekst nie powinien powiedzieć lub w sposób sugerujący proces przekazywania faktycznie przekazywania sama kontrolka.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> właściwość sposób deklaratywny i programowy. Pełny kod i instrukcje niezbędne do uruchomienia przykładu, można znaleźć sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> klasa — Przegląd.  
  
 W poniższej sekcji kodu, należy zauważyć, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> deklaratywne Ustawianie wartości właściwości dla formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, możesz użyć **tryb wyświetlania** kontrolkę listy rozwijanej wybierz **trybu katalogu** i strony Przełącz się do trybu katalogu. Za pomocą strony w trybie katalogu i pliku opis, który został przekazany, pamiętaj, różne ciągi tekstowe, wyświetlana w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Jeśli klikniesz **przekazywanie pliku opisu** przycisku, tekst kilka właściwości w interfejsie użytkownika zostanie zmieniony, łącznie z tekstem do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst komunikatu, informujący użytkownika, jak przekazać pliku opisu.</summary>
        <value>Ciąg, który jest używany jako instrukcje dla użytkownika można przekazać pliku opisu. Wartość domyślna to ciąg specyficzny dla kultury dostarczonych przez zestaw formantów części sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Właściwość zawiera krótkie zdanie lub frazy instrukcje dla użytkowników, informującą ich o kliknięcie przycisku można przekazać pliku opisu. Jeśli przypisujesz niestandardowego tekstu do tej właściwości lub <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> właściwość tekst upewnić jasne, że użytkownik jest przekazanie pliku opisu. Tekst nie powinien powiedzieć lub w sposób sugerujący proces przekazywania faktycznie przekazywania sama kontrolka.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwość sposób deklaratywny i programowy. Pełny kod i instrukcje niezbędne do uruchomienia przykładu, można znaleźć sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> klasa — Przegląd.  
  
 W poniższej sekcji kodu, należy zauważyć, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> deklaratywne Ustawianie wartości właściwości dla formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, możesz użyć **tryb wyświetlania** kontrolkę listy rozwijanej wybierz **trybu katalogu** i strony Przełącz się do trybu katalogu. Za pomocą strony w trybie katalogu i pliku opis, który został przekazany, pamiętaj, różne ciągi tekstowe, wyświetlana w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Jeśli klikniesz **przekazywanie pliku opisu** przycisku, tekst kilka właściwości w interfejsie użytkownika zostanie zmieniony, łącznie z tekstem do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Części sieci Web platformy ASP.NET, stron</related>
      </Docs>
    </Member>
  </Members>
</Type>