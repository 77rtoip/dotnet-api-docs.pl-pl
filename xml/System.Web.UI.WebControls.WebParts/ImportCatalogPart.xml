<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e60f977d3d6771beaef772d23c2c80d4825bd9b9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36385912" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importuje plik opis dla <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu (lub inne kontrolka serwerowa ASP.NET używane jako <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli), dzięki czemu użytkownicy mogą dodawać kontrolki do strony sieci Web przy użyciu wstępnie zdefiniowanych ustawień. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Formant umożliwia importowanie pliku opisu, który opisuje ustawienia na <xref:System.Web.UI.WebControls.WebParts.WebPart> formant lub formantu serwera, który użytkownik chce, aby dodać do <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy.  
  
 Po użytkownik importuje plik opis <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu, do którego odwołuje się plik pojawia się w obrębie <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli, a użytkownik może dodać kontrolki do strony.  
  
 Plik Opis nie jest taka sama jak samego formantu. Jest to plik XML, który kończy się wyrazem. Składnik Web Part rozszerzenia i zawiera pary nazwa/wartość — przeważnie wartości właściwości — opisujące stan formantu. Plik Opis jest utworzony zgodnie z określonym formacie XML, zgodnie z opisem w temacie [pliki opis kontrolek części sieci Web](http://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8).  
  
 Podobnie jak w przypadku formantu odnoszący się do pliku opisu albo mogą być kompilowane do zestawu, lub może być zdefiniowana w pliku ascx kontrolki użytkownika. W obu przypadkach formantu w pliku opisu importowanych musi istnieć na serwerze sieci Web obsługującym strony, który próbuje zaimportować formantu. Plik opisu odwołuje się do formantu nazwy i zestawu (lub pliku), który zawiera formant, a plik opis zawiera ustawienia, które mają wpływ na wartości właściwości formantu, wygląd i zachowanie.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Formant umożliwia współużytkowanie ustawień kontrolek. Sterowania złożonego może mieć wielu właściwości i ustawień. Na przykład w typowej intranecie w dużej firmie niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> formant może zawierać wiele właściwości, które mają wartości specyficznych dla środowiska użytkownika, takie jak ich połączenia bazy danych, informacje dla działu i tak dalej. Formant może także zawierać wiele właściwości, które mają wpływ na jego wyglądu. Jeden użytkownik może spersonalizować kontrolki w określonej lokacji i go działa prawidłowo, eksportu pliku opisu dla formantu i następnie udostępnić innym użytkownikom, którzy można zaimportować plik, aby dodać kontrolki pełni skonfigurowany do innych intranetu pliku opisu Lokacje, które mogą się personalizacji. Tak długo, jak skompilowanego zestawu lub pliku kontrolki użytkownika zawierająca formant nie istnieje na serwerze sieci Web obsługującym ich lokacji, użytkownicy mogą dodawać kontrolki do innych witryn sieci Web.  
  
 Mechanizm, za pomocą którego użytkownicy importować pliku opisu (i dlatego jego skojarzone serwerem kontroli) do strony sieci Web jest <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Określanie dewelopera strony należy dodać do strony sieci Web. Gdy użytkownik przełącza tryb wyświetlania katalogu, strona <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formant jest widoczny, a użytkownik może użytkownika, aby przejść do tego formantu. Plik opisu składnika Web Part odpowiadający formantu serwera, potrzebnego do zaimportowania. Interfejs użytkownika i instrukcjami <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli, użytkownik będzie mógł Dodawanie formantu żądanego serwera do strony sieci Web z jej wygląd i właściwości w pliku opisu importowanych w pełni skonfigurowany jako określony.  
  
 Przed <xref:System.Web.UI.WebControls.WebParts.WebPart> można zaimportować pliku opis formantu, użytkownik musi najpierw utworzyć (Eksportowanie) na istniejącym opartą na plikach <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Formant można wyeksportować z pliku opisu pod warunkiem, że zostały spełnione następujące warunki:  
  
-   Kontrolka ma właściwości oznaczonych `Personalizable` atrybutu.  
  
-   Plik Web.config ma `enableExport` ustawioną wartość atrybutu `true` na `<webParts>` elementu.  
  
-   Projektant ustawia wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> właściwości formantu ma wartość inną niż domyślna wartość <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>, co uniemożliwia używanie eksportu. Jeśli <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> ma ustawioną wartość właściwości <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, dowolnej właściwości, która zawiera <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> parametr `Personalizable` atrybut nie jest eksportowane, gdy użytkownik eksportuje pliku opisu. Pozwala to deweloperom kontroli uniemożliwić eksportowane w niektórych sytuacjach poufnych danych, takich jak parametry połączenia.  
  
 Użytkownik może eksportować formant, który został włączony dla eksportu, klikając zlecenie eksportu, która jest wyświetlana w menu zleceń formantu i wykonując instrukcje dotyczące zapisywania. Plik opisu składnika Web Part dla formantu. Inni użytkownicy można następnie zaimportować ten plik, aby skonfigurować własne wystąpienia formantu.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Klasa zawiera wiele właściwości. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Właściwość zawiera tekst z instrukcjami dla użytkowników przeglądających można znaleźć pliku opisu. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Właściwość zawiera tekst, który służy jako etykieta importowanych formantu, pojawiającą się w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Zawiera tekst, który jest wyświetlany, jeśli wystąpi błąd podczas importowania opis formantu. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Właściwość zastępuje właściwość podstawowej można przypisać tytuł domyślny <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, jeżeli projektanta nie ma przypisanego tytuł. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Właściwość zawiera tekst dla przycisku, który użytkownik klika w celu przekazania pliku opisu i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwość zawiera instrukcje dotyczące procesu przekazywania.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Klasa zawiera także kilka metod unikatowy. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metoda pobiera <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekt dla każdego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli w katalogu, co umożliwia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu, aby wyświetlić informacje o każdej kontrolki serwera bez konieczności tworzenia wystąpienia. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Metoda pobiera wystąpienia określonego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, na podstawie opisu przekazywany do metody.  
  
 Istnieją pewne ryzykiem w przypadku używania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Przykładem jest możliwość importowania szkodliwe dane do aplikacji sieci Web za pomocą plików opis używany do importowania. Jeśli ktoś umieścił kodu złośliwy skrypt jako wartość właściwości ciągu w pliku opisu, następnie tego skryptu potencjalnie można wykonywać, gdy użytkownik importuje plik opis i dodaje sterowanie serwer z którym związane są odwołania do strony sieci Web. Aby zminimalizować ryzyko importowanie plików opis z szkodliwe dane, kontrolki serwera, których właściwości typu ciąg zawsze należy zakodować danych właściwości. Innego ryzyka obejmuje importowanie typów za pomocą plików opisu (zobacz [pliki opis kontrolek części sieci Web](http://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). Złośliwy użytkownik może przesłać żądania załadować wiele zestawów w <xref:System.AppDomain>, co nadmiernej ilości pamięci, które są używane.  
  
 Aby uniknąć ryzyka związanego z importu, można wyłączyć funkcję całkowicie nie korzystając z funkcji importu lub <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Lub można ograniczyć, jakie użytkownicy mają dostęp do formantu. Można w tym programowo, za pomocą zarządzania rolami (zobacz [Zarządzanie rolami autoryzacji przy użyciu](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)). Na przykład podczas ładowania strony można przetestować sprawdzić, czy użytkownik jest w niektórych role, takie jak rola administratora. Jeśli użytkownik znajduje się w roli, można programowo dodać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu do strony dla tego użytkownika. Podejście deklaratywne można również użyć do ograniczenia zbiór użytkowników, których można użyć <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu.  W ramach strony sieci web, która zawiera katalog, można umieścić dwa <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolki: jeden dla użytkowników, którzy mogą importować i jeden dla tych, którzy nie. Strefę dla użytkowników, którzy mogą importować zawierałoby <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Samej strefie można umieścić wewnątrz <xref:System.Web.UI.WebControls.LoginView> kontroli, które umożliwią ograniczyć sterowaniu w strefie, tylko te uwierzytelnienia użytkowników lub ról, które określisz.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli deklaratywnie i programowo na stronie sieci Web. W przykładzie przedstawiono czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strony sieci Web, który zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
-   Opis działania przykładzie podczas ładowania strony w przeglądarce.  
  
 Pierwsza część w tym przykładzie kodu jest kontrola użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Należy umieścić następujące kodu źródłowego w pliku i nadaj jej nazwę, Displaymodemenucs.ascx lub Displaymodemenuvb.ascx (w zależności od języka, w którym są używane). Aby uzyskać szczegółowe informacje dotyczące wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 Druga część przykładowy kod jest strony sieci Web. W górnej części strony są dwa `register` dyrektywy: jeden dla kontrolki użytkownika, a drugi skompilowanych składnika, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Zwróć uwagę, że strona ma deklaratywne odwołanie do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli zagnieżdżone w hierarchii odpowiednich elementów deklaratywne. Spójrz również kilka wartości właściwości przypisanych deklaratywnie na `<asp:importcatalogpart>` elementu. Ponadto `Button1_Click` metody aktualizacji wartości właściwości <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu.  
  
 Na stronie <xref:System.Web.UI.WebControls.WebParts.WebPartZone> sterowania, niestandardowe dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty został zadeklarowany. `<aspSample:userinfowebpart>` Formant ma `exportmode="all"` atrybutu na nim. Ten atrybut jest wymagany, aby umożliwić użytkownikom eksportu pliku opisu dla formantu, który można następnie zaimportować przez innych użytkowników, które chcesz zaimportować formantu przy użyciu pliku opisu.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji składników Web Part można wyeksportować pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, należy również włączyć funkcję eksportu w aplikacji sieci Web, dodając `enableExport="true"` atrybutu `<webParts>` elementu (który jest elementem podrzędnym `<system.web>`element) w pliku Web.config. Eksport jest domyślnie wyłączona, więc jeśli eksportu nie jest jeszcze włączone dla aplikacji, edytowania pliku Web.config i należy to zrobić teraz.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 Trzeci część przykładowy kod jest kod źródłowy dla dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Należy zauważyć, że niektóre właściwości tych kontrolek są oznaczone ikoną z `WebBrowsable` atrybutu. Dzięki temu <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> formantu do dynamicznego generowania interfejsu użytkownika (UI) dla użytkownika edytować te właściwości, jeśli formanty są w trybie edycji. Właściwości są również oznaczane `WebDisplayName` atrybutu określenie tekstu etykietę wyświetlaną obok każdego formantu w Interfejsie użytkownika do edycji. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie kodu używane kompilacji dynamicznej. Aby uzyskać wskazówki, który pokazuje obie metody tworzenia, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 Kontrolka niestandardowa o nazwie `TextDisplayWebPart` odwołuje się do strony sieci Web z `<aspSample:TextDisplayWebPart>` elementu. Inne formantu o nazwie `UserInfoWebPart`, jest również zadeklarowany na stronie sieci Web początkowo, chociaż usunie go później, aby zademonstrować możliwość importowania pliku opisu dla formantu.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 Teraz uruchom przykładów kodu. Ładowanie strony sieci Web w przeglądarce. Pierwszym krokiem jest Edytuj `UserInfoWebPart` formantu. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **Edytuj** można przełączać strony do trybu edycji. Kliknij menu zleceń `UserInfoWebPart` formantu (Strzałka w dół na pasku tytułu), a następnie kliknij przycisk **Edytuj**. Gdy zostanie wyświetlony interfejs użytkownika, kilka formantów edycji są wyświetlane poniżej `UserInfoWebPart` formant, który służy do edycji jej wartości pól. Przeprowadź edycję niektóre pola, klikając **OK**, a następnie użyj **tryb wyświetlania** rozwijanej, aby powrócić do strony, aby tryb przeglądania.  
  
 Drugim krokiem jest do wyeksportowania. Plik opisu składnika Web Part dla `UserInfoWebPart` formantu. Kliknij menu zleceń formantu niestandardowego (reprezentowane przez strzałkę w dół na pasku tytułu), a następnie kliknij przycisk **wyeksportować**. Postępuj zgodnie z instrukcjami, aby zapisać. Plik opisu składnika Web Part dla formantu. Teraz zamknąć stronę sieci Web, a następnie Edytuj źródło strony w edytorze. Usuń `<aspSample:userinfowebpart>` kontrolować deklaracji elementu, a następnie zapisz i zamknij plik. (Ten krok, aby użytkownik, który nie ma jeszcze symulacji operacji `UserInfoWebPart` kontrolować, więc można zaimportować formantu do strony).  
  
 Załaduj ponownie w przeglądarce strony sieci Web. `UserInfoWebPart` Kontrolki nie mogą występować, ponieważ usunięto go. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **katalogu** Aby włączyć tryb katalogu strony. W <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> sterowania, kliknij przycisk **Przeglądaj** przycisk i przejdź do. Składnik Web Part utworzonego pliku, a następnie kliknij przycisk **przekazać** przycisku. Odwołanie do formantu powinna zostać wyświetlona z polem wyboru obok niej. Zaznacz pole wyboru, a następnie kliknij przycisk **Dodaj** można dodać formantu do strony.  
  
 Gdy jesteś w tym widoku strony, kliknij opcję **ImportCatalogPart aktualizacji** znajdujący się u dołu strony, aby zobaczyć efekt programowane aktualizowanie wartości właściwości na <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Po kliknięciu przycisku obserwować, jak różne właściwości zostały zmienione w interfejsie użytkownika.  
  
 Na koniec kliknij **Zamknij** wyjść z trybu katalogu i przywrócić do trybu przeglądania strony. `UserInfoWebPart` Formant powinien zostać wyświetlony na stronie zawierające wartości, które znajdował się, gdy zostanie wyeksportowany wcześniej.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> Konstruktor jest domyślnie; żaden konstruktor nie jest zadeklarowana w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> klasy i dlatego nie specjalnych zadań są przeprowadzane po utworzeniu nowego wystąpienia klasy. .NET Framework wewnętrznie używa konstruktora do utworzenia wystąpienia klasy.  
  
 Zwykle nie należy używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> konstruktora w swoim własnym kodem. Zamierzonym użyciem formantu jest dla deweloperów strony go dodać do strony deklaratywnie w czasie projektowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wiadomość tekstowa, która sprawia, że użytkownicy, aby przejść do lokalizacji pliku opisu.</summary>
        <value>Ciąg zawierający tekst wiadomości. Wartość domyślna to specyficzne dla kultury wiadomość dostarczona przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Właściwości umożliwia użytkownikom proste omówienie najpierw konieczne właśnie Dodawanie importowanych formantu: podać lokalizację pliku opisu, wpisując w ścieżce lub przechodząc do pliku. Typowe przyczyny podania niestandardowe wartości dla tej właściwości jest, jeśli masz specjalne instrukcje dla użytkowników, na przykład do udziału określonej sieci, do której należy Przeglądaj, aby zlokalizować plik opisu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> właściwości deklaratywnie i programowo. Pełny kod i instrukcji wymaganych do uruchomienia w przykładzie znajdują się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Przegląd klasy.  
  
 W poniższej sekcji kodu, zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> deklaratywnie ustawić wartość właściwości formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, można użyć **tryb wyświetlania** formant listy rozwijanej, aby wybrać **trybu katalogu** i przełączać strony do trybu katalogu. Na stronie w trybie katalogu i pliku opisu przekazać Uwaga różne ciągi wyświetlane w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Jeśli klikniesz przycisk **przekazywanie pliku opisu** przycisku, tekst dla kilku właściwości w interfejsie użytkownika została zmieniona, łącznie z tekstem dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia działania przycisku w interfejsie użytkownika (UI) jest traktowany jako przycisk domyślny, który otrzymuje fokus podczas renderowania formularz, który zawiera przycisk. Ta właściwość nie jest przeznaczona do wywoływania z kodu dewelopera strony.</summary>
        <value>Ciąg zawierający identyfikator <see cref="T:System.Web.UI.WebControls.Button" /> odbierająca domyślnego zespołu w <see cref="T:System.Web.UI.WebControls.Panel" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kod dla tej właściwości zastępuje właściwość podstawowej odziedziczone <xref:System.Web.UI.WebControls.Panel> klasę, aby ukryć właściwości z projektantów i zapobiec wpływowi motywów. Chociaż nie jest publiczny, ta właściwość jest używana wewnętrznie przez formant części sieci Web dla domyślnej renderowania tego formantu i nie jest przeznaczona do użycia przez deweloperów strony.  
  
 Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [kompozycji ASP.NET i karnacji](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję opisy dostępnych <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów w katalogu.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> zawierający <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> dla każdego formantu w katalogu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metody udostępnia implementację dla metody abstrakcyjnej podstawowej zadeklarowany w <xref:System.Web.UI.WebControls.WebParts.CatalogPart> klasy. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metoda zwraca informacje o opisie dla każdego formantu w katalogu. Należy pamiętać, że w przypadku liczby <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolować, może istnieć tylko jeden serwer kontroli w katalogu jednocześnie, nawet, jeśli metoda będzie działać, jeśli jest wiele formantów.  
  
 A <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekt jest obiektem, który zawiera ważne informacje o <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu, łącznie z jej identyfikator odwołania do obiektu do formantu i wartości kilka ważnych właściwości, które są dziedziczone z <xref:System.Web.UI.WebControls.WebParts.Part> klas, takich jak <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> i <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metody poprawia wydajność. Podczas tworzenia katalogu, musi on niektóre informacje na temat każdego formantu, który zawiera, w tym tytuł, opis, ikona (jeśli istnieje) i identyfikator. Nie można utworzyć wystąpienia każdej kontrolki, aby uzyskać informacje o tym, <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy, który tworzy katalog wywołania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> — metoda i wywołania zwraca tylko te informacje opis dla formantu, a nie wystąpienia formant.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metody na stronie sieci Web. W przykładzie przedstawiono czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strony sieci Web, który zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli, wraz z kodu korzystającego z <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metody.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
-   Opis działania przykładzie podczas ładowania strony w przeglądarce.  
  
 Pierwsza część w tym przykładzie kodu jest kontrola użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Należy umieścić następujące kodu źródłowego w pliku i nadaj jej nazwę, Displaymodemenucs.ascx lub Displaymodemenuvb.ascx (w zależności od języka, w którym są używane). Aby uzyskać szczegółowe informacje dotyczące wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Druga część przykładowy kod jest strony sieci Web. W górnej części strony są dwa `register` dyrektywy: jeden dla kontrolki użytkownika, a drugi skompilowanych składnika, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Oba formanty odwołuje się deklaratywnie w znacznikach strony. Na deklaratywne odwołania do <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (zarówno zaczynać `aspSample` prefiks), należy pamiętać, że każdy ma `exportMode="all"` dodany atrybut. Ten atrybut umożliwia eksportowanie. Plik opisu składnika Web Part dla formantu, który będzie używany w późniejszej, aby wkraczać do zaimportowania formantu do strony.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji składników Web Part można wyeksportować pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, należy również włączyć funkcję eksportu w aplikacji sieci Web, dodając `enableExport="true"` atrybutu `<webParts>` elementu (który jest elementem podrzędnym `<system.web>`element) w pliku Web.config. Eksport jest domyślnie wyłączona, więc jeśli eksportu nie jest jeszcze włączone dla aplikacji, edytowania pliku Web.config i należy to zrobić teraz.  
  
 Strony sieci Web również deklaratywne odwołuje się do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli zagnieżdżone w hierarchii odpowiednich elementów deklaratywne. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metoda jest wywoływana z kodem dla `Button1_Click` metody.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Trzeci część przykładowy kod jest kod źródłowy dla dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie kodu używane kompilacji dynamicznej. Aby uzyskać wskazówki, który pokazuje obie metody tworzenia, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Teraz uruchom przykładów kodu. Ładowanie strony sieci Web w przeglądarce. Pierwszym krokiem jest eksportu. Plik opisu składnika Web Part dla każdego <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu (dla `TextDisplayWebPart` i `UserInfoWebPart` kontroli). Dla każdego formantu, kliknij menu zleceń formantu (reprezentowane przez strzałkę w dół na pasku tytułu), a następnie kliknij przycisk **wyeksportować**. Postępuj zgodnie z instrukcjami, aby zapisać. Plik opisu składnika Web Part dla formantu. Po wyeksportowaniu pliku opisu dla każdego formantu, zamknij stronę sieci Web, a następnie Edytuj źródło strony w edytorze. Usuń `<aspSample:userinfowebpart>` i `<aspSample:textdisplaywebpart>` kontrolować elementy deklaracji, Zapisz i zamknij plik. (Ten krok, aby symulować użytkownika, który nie ma jeszcze tych kontrolek, więc formanty można importować do strony są wykonywanie.)  
  
 Załaduj ponownie w przeglądarce strony sieci Web. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **katalogu** Aby włączyć tryb katalogu strony. W <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> sterowania, kliknij przycisk **Przeglądaj** przycisku, przejdź do. Pliki składnika Web Part został utworzony, wybierz jedną, a następnie kliknij przycisk **przekazać** przycisku. Odwołanie do formantu powinna zostać wyświetlona z polem wyboru obok niej. Zaznacz pole wyboru, a następnie kliknij przycisk **Dodaj** można dodać formantu do strony. Powtórz ten proces dla innych formantu.  
  
 Gdy jesteś w tym widoku strony, kliknij opcję **uzyskać opis składnika Web Part** znajdujący się u dołu strony, aby zobaczyć efekt uzyskiwania dostępu do <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekt opis formantu załadowanych obecnie do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Znaleziono metody umożliwiają dostęp do szczegółowych informacji, w `Button1_Click` metoda źródło strony jest <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> metody. Etykieta poniżej przycisk przedstawia podstawowe informacje o formancie.  
  
 Po dodaniu pierwszą kontrolkę, należy powtórzyć ten proces, aby dodać drugi formant do strony. Na koniec kliknij **Zamknij** wyjść z trybu katalogu i przywrócić do trybu przeglądania strony. Zarówno Kontrolki niestandardowe powinien zostać wyświetlony na stronie zawierający wartości, które miały podczas eksportowania plików opisu wcześniej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> zawierający szczegółowe informacje o formancie.</param>
        <summary>Zwraca odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu na podstawie wartości w opisie przekazany do metody.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli, których opis odpowiada wartości w <paramref name="description" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Metoda zwraca odwołanie do <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, których szczegóły opis takie same jak wartości <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekt przekazywany do metody. Zwykle ta metoda jest używana razem z <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> metodę, która służy do pobierania opisy kontrolek w katalogu. Poszczególne <xref:System.Web.UI.WebControls.WebParts.WebPart> następnie można pobrać lub manipulować zgodnie z potrzebami, przekazując poszczególnych kontrolek <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekty do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metody na stronie sieci Web. W przykładzie przedstawiono czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strony sieci Web, który zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli, wraz z kodu korzystającego z <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metody.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
-   Opis działania przykładzie podczas ładowania strony w przeglądarce.  
  
 Pierwsza część w tym przykładzie kodu jest kontrola użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Należy umieścić następujące kodu źródłowego w pliku i nadaj jej nazwę, Displaymodemenucs.ascx lub Displaymodemenuvb.ascx (w zależności od języka, w którym są używane). Aby uzyskać szczegółowe informacje dotyczące wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Druga część przykładowy kod jest strony sieci Web. W górnej części strony są dwa `register` dyrektywy: jeden dla kontrolki użytkownika, a drugi skompilowanych składnika, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Oba formanty odwołuje się deklaratywnie w znacznikach strony. Na deklaratywne odwołania do <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (zarówno zaczynać `aspSample` prefiks), należy pamiętać, że każdy ma `exportMode="all"` dodany atrybut. Ten atrybut umożliwia eksportowanie. Plik opisu składnika Web Part dla formantu, który będzie używany w późniejszej, aby wkraczać do zaimportowania formantu do strony.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji składników Web Part można wyeksportować pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, należy również włączyć funkcję eksportu w aplikacji sieci Web, dodając `enableExport="true"` atrybutu `<webParts>` elementu (który jest elementem podrzędnym `<system.web>`element) w pliku Web.config. Eksport jest domyślnie wyłączona, więc jeśli eksportu nie jest jeszcze włączone dla aplikacji, edytowania pliku Web.config i należy to zrobić teraz.  
  
 Strony sieci Web również deklaratywne odwołuje się do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli zagnieżdżone w hierarchii odpowiednich elementów deklaratywne. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Metoda jest wywoływana z kodem dla `Button2_Click` metody.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Trzeci część przykładowy kod jest kod źródłowy dla dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie kodu używane kompilacji dynamicznej. Aby uzyskać wskazówki, który pokazuje obie metody tworzenia, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Teraz uruchom przykładów kodu. Ładowanie strony sieci Web w przeglądarce. Pierwszym krokiem jest eksportu. Plik opisu składnika Web Part dla każdego <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu (dla `TextDisplayWebPart` i `UserInfoWebPart` kontroli). Dla każdego formantu, kliknij menu zleceń formantu (reprezentowane przez strzałkę w dół na pasku tytułu), a następnie kliknij przycisk **wyeksportować**. Postępuj zgodnie z instrukcjami, aby zapisać. Plik opisu składnika Web Part dla formantu. Po wyeksportowaniu pliku opisu dla każdego formantu, zamknij stronę sieci Web, a następnie Edytuj źródło strony w edytorze. Usuń `<aspSample:userinfowebpart>` i `<aspSample:textdisplaywebpart>` kontrolować elementy deklaracji, Zapisz i zamknij plik. (Ten krok, aby symulować użytkownika, który nie ma jeszcze tych kontrolek, więc formanty można importować do strony są wykonywanie.)  
  
 Załaduj ponownie w przeglądarce strony sieci Web. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **katalogu** Aby włączyć tryb katalogu strony. W <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> sterowania, kliknij przycisk **Przeglądaj** przycisku, przejdź do. Pliki składnika Web Part został utworzony, wybierz jedną, a następnie kliknij przycisk **przekazać** przycisku. Odwołanie do formantu powinna zostać wyświetlona z polem wyboru obok niej. Teraz, gdy zostanie przesłany opis formantu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> sterowania, kliknij przycisk **GetWebPart użyj** znajdujący się u dołu strony. Ten przedstawi efekt wywołania metody <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> — metoda i przekazanie do niego opis formantu załadowanych obecnie do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Należy pamiętać, że skojarzone serwerem formant został dodany bezpośrednio do strony sieci Web bez konieczności kliknij użytkownika **Dodaj** przycisku. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Metodę, która jest wywoływana w `Button2_Click` źródło strony, metoda zwraca <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu skojarzony z bieżącym opis, który jest ładowany w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Następny <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metoda jest wywoływana i <xref:System.Web.UI.WebControls.WebParts.WebPart> formant bezpośrednio został dodany do strony. Oznacza to, jak dodać kontrolki programowo z <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli bez interwencji użytkownika.  
  
 Po dodaniu pierwszą kontrolkę, należy powtórzyć ten proces, aby dodać drugi formant do strony. Na koniec kliknij **Zamknij** wyjść z trybu katalogu i przywrócić do trybu przeglądania strony. Zarówno Kontrolki niestandardowe powinien zostać wyświetlony na stronie zawierający wartości, które miały podczas eksportowania plików opisu wcześniej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="description" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="description" /> nie jest dostępna <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> wartość.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany po użytkownik importuje plik opis reprezentują lub opisano importowanych kontroli w katalogu importowanych kontrolki.</summary>
        <value>Ciąg, który zawiera tekst etykiety. Wartość domyślna to specyficzne dla kultury wiadomość dostarczona przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Właściwość jest zwykle używana zawiera krótkie, ogólne etykietę, którą opisuje kontroli zawarte w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> właściwości deklaratywnie i programowo. Pełny kod i instrukcji wymaganych do uruchomienia w przykładzie znajdują się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Przegląd klasy.  
  
 W poniższej sekcji kodu, zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> deklaratywnie ustawić wartość właściwości formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, można użyć **tryb wyświetlania** formant listy rozwijanej, aby wybrać **trybu katalogu** i przełączać strony do trybu katalogu. Na stronie w trybie katalogu i pliku opisu przekazać Uwaga różne ciągi wyświetlane w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Jeśli klikniesz przycisk **przekazywanie pliku opisu** przycisku, tekst dla kilku właściwości w interfejsie użytkownika została zmieniona, łącznie z tekstem dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia komunikat o błędzie, który jest wyświetlany w przypadku wystąpienia błędu podczas procesu importowania.</summary>
        <value>Ciąg, który zawiera tekst etykiety. Wartość domyślna to specyficzne dla kultury wiadomość dostarczona przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Właściwość jest przydatna do powiadamiania użytkownika, jeśli niektóre problem lub błąd występuje, gdy strona próbuje zaimportować z pliku opisu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> właściwości deklaratywnie i programowo. Pełny kod i instrukcji wymaganych do uruchomienia w przykładzie znajdują się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Przegląd klasy.  
  
 W poniższej sekcji kodu, zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> deklaratywnie ustawić wartość właściwości formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, można użyć **tryb wyświetlania** formant listy rozwijanej, aby wybrać **trybu katalogu** i przełączać strony do trybu katalogu. Na stronie w trybie katalogu i pliku opisu przekazać Uwaga różne ciągi wyświetlane w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Jeśli klikniesz przycisk **przekazywanie pliku opisu** przycisku, tekst dla kilku właściwości w interfejsie użytkownika została zmieniona, łącznie z tekstem dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tytuł, który jest wyświetlany w pasku tytułu <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> formantu.</summary>
        <value>Ciąg, który jest używany jako tytuł formantu. Wartość domyślna to nazwa formantu obliczeniowego, dostarczonych przez zestaw kontroli części sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Wartość właściwości jest wyświetlany w pasku tytułu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli, gdy formant jest widoczny w trybie katalogu. Po zadeklarowaniu kontrolki na stronie można ustawić wartości dla właściwości, używając `Title` atrybutu. Jeśli nie zostanie podana wartość tytułu, wartości domyślne specyficzne dla kultury służy do opisywania rodzaj właściwości, które tego formantu umożliwia użytkownikom edytowanie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> właściwości deklaratywnie i programowo. Pełny kod i instrukcji wymaganych do uruchomienia w przykładzie znajdują się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Przegląd klasy.  
  
 W poniższej sekcji kodu, zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> deklaratywnie ustawić wartość właściwości formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, można użyć **tryb wyświetlania** formant listy rozwijanej, aby wybrać **trybu katalogu** i przełączać strony do trybu katalogu. Na stronie w trybie katalogu i pliku opisu przekazać Uwaga różne ciągi wyświetlane w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Jeśli klikniesz przycisk **przekazywanie pliku opisu** przycisku, tekst dla kilku właściwości w interfejsie użytkownika została zmieniona, łącznie z tekstem dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst <see cref="T:System.Web.UI.WebControls.Button" /> formant, który inicjuje przekazywania pliku opisu.</summary>
        <value>Ciąg, który jest używany jako tekst <see cref="T:System.Web.UI.WebControls.Button" />. Wartość domyślna to ciąg specyficzne dla kultury dostarczonych przez zestaw kontroli części sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Tekst zawiera właściwość <xref:System.Web.UI.WebControls.Button> formantu, który inicjuje procesu przekazywania. Jeśli tekst niestandardowy można przypisać do tej właściwości lub <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwości, tekst powinien wyjaśnić, że użytkownik jest przekazanie pliku opisu. Tekst nie powiedzieć ani oznaczać procesu przekazywania faktycznie przekazuje samego formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> właściwości deklaratywnie i programowo. Pełny kod i instrukcji wymaganych do uruchomienia w przykładzie znajdują się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Przegląd klasy.  
  
 W poniższej sekcji kodu, zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> deklaratywnie ustawić wartość właściwości formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, można użyć **tryb wyświetlania** formant listy rozwijanej, aby wybrać **trybu katalogu** i przełączać strony do trybu katalogu. Na stronie w trybie katalogu i pliku opisu przekazać Uwaga różne ciągi wyświetlane w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Jeśli klikniesz przycisk **przekazywanie pliku opisu** przycisku, tekst dla kilku właściwości w interfejsie użytkownika została zmieniona, łącznie z tekstem dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst komunikatu, który informuje użytkownika, jak można przekazać pliku opisu.</summary>
        <value>Ciąg, który jest używany jako instrukcje dla użytkownika można przekazać pliku opisu. Wartość domyślna to ciąg specyficzne dla kultury dostarczonych przez zestaw kontroli części sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Właściwość zawiera krótki zdanie lub frazę instrukcje dla użytkowników, informacją kliknąć przycisk, aby przekazać plik opisu. Jeśli tekst niestandardowy można przypisać do tej właściwości lub <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> właściwości, tekst powinien wyjaśnić, że użytkownik jest przekazanie pliku opisu. Tekst nie powiedzieć ani oznaczać procesu przekazywania faktycznie przekazuje samego formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwości deklaratywnie i programowo. Pełny kod i instrukcji wymaganych do uruchomienia w przykładzie znajdują się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Przegląd klasy.  
  
 W poniższej sekcji kodu, zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> deklaratywnie ustawić wartość właściwości formantu.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej sekcji kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> wartość właściwości jest przypisany programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, można użyć **tryb wyświetlania** formant listy rozwijanej, aby wybrać **trybu katalogu** i przełączać strony do trybu katalogu. Na stronie w trybie katalogu i pliku opisu przekazać Uwaga różne ciągi wyświetlane w interfejsie użytkownika (UI) <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Jeśli klikniesz przycisk **przekazywanie pliku opisu** przycisku, tekst dla kilku właściwości w interfejsie użytkownika została zmieniona, łącznie z tekstem dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>