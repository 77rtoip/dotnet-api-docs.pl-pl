<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdd982b836c4a2e800a68dfea5d63537526419d1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395156" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importuje plik <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> opisu formantu (lub innego formantu serwera ASP.NET używanego <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> jako kontrolka), dzięki czemu użytkownicy mogą dodać formant do strony sieci Web ze wstępnie zdefiniowanymi ustawieniami. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka pozwala użytkownikom na importowanie pliku opisu opisującego ustawienia <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki formant lub serwer, które użytkownik <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> chce dodać do strefy. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>  
  
 Po zaimportowaniu pliku opisu przez <xref:System.Web.UI.WebControls.WebParts.WebPart> użytkownika kontrolka, do której odwołuje się plik, pojawia się <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> w kontrolce, a użytkownik może dodać formant do strony.  
  
 Plik opisu nie jest taki sam jak sam formant. Jest to plik XML kończący się znakiem. Rozszerzenie WebPart i zawiera pary nazwa/wartość — głównie wartości właściwości--opisujące stan formantu. Plik opisu jest tworzony zgodnie z określonym formatem XML, zgodnie z opisem w temacie [składniki Web Part pliki opisów kontroli](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8).  
  
 Podobnie jak w przypadku kontrolki, do której odwołuje się plik opisu, można go kompilować do zestawu lub może być kontrolką użytkownika zdefiniowaną w pliku. ascx. W obu przypadkach kontrolka, do której odwołuje się plik opisu zaimportowana, musi istnieć na serwerze sieci Web, który jest hostem strony próbującej zaimportować formant. Plik opisu odwołuje się do nazwy kontrolki i zestawu (lub pliku), który zawiera kontrolkę, a plik opisu zawiera ustawienia, które mają wpływ na wartości właściwości, wygląd i zachowanie kontrolki.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Kontrolka umożliwia użytkownikom udostępnianie ustawień w kontrolkach. Formant złożony może mieć wiele właściwości i ustawień. Na przykład w typowej witrynie intranetowej w ramach dużej firmy kontrolka niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPart> może zawierać wiele właściwości, które przechowują wartości specyficzne dla środowiska użytkownika, takie jak połączenia bazy danych, informacje działu i tak dalej. Kontrolka może również zawierać wiele właściwości, które wpływają na jej wygląd. Jeden użytkownik może spersonalizować kontrolę w określonej lokacji i uzyskać prawidłowe działanie, wyeksportować plik opisu dla kontrolki, a następnie udostępnić plik opisu innym użytkownikom, którzy mogą zaimportować plik w celu dodania w pełni skonfigurowanej kontroli do innego intranetu Lokacje, które mogą personalizować. Tak długo, jak skompilowany plik kontrolny zestawu lub użytkownika zawierający formant istnieje na serwerze sieci Web hostującym swoją lokację, użytkownicy mogą dodać formant do innych witryn sieci Web.  
  
 Mechanizm polegający na tym, że użytkownicy importują plik opisu (a w związku z tym skojarzony formant serwera) do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> strony sieci Web jest formantem, który deweloper strony musi dodać do strony sieci Web. Gdy użytkownik przejdzie do trybu wyświetlania katalogu, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> zostanie wyświetlony formant, a użytkownik może wykonać tę kontrolkę, aby przejść do okna. Plik opisu składnika WebPart odpowiadający formantowi serwera, który ma zostać zaimportowany. Po interfejsie użytkownika i instrukcjach dostarczonych <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> przez formant użytkownik może dodać do strony sieci Web żądany formant serwera z jego wyglądem i właściwościami w pełni skonfigurowanymi zgodnie z zaimportowanym plikiem opisu.  
  
 Przed zaimportowaniem pliku opisu <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkiużytkownikmusinajpierwutworzyć(wyeksportować)plikwoparciuoistniejącyformant.<xref:System.Web.UI.WebControls.WebParts.WebPart> Plik opisu można wyeksportować, jeśli spełnione są następujące warunki:  
  
-   Kontrolka ma właściwości oznaczone `Personalizable` atrybutem.  
  
-   Plik Web. config ma `enableExport` wartość atrybutu `true` ustawioną na `<webParts>` element.  
  
-   Deweloper ustawia wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> właściwości w kontrolce na wartość inną niż domyślna <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>wartość, która zabrania eksportowania. Jeśli wartość <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData> <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> właściwości jest ustawiona na, Każda właściwość, która `Personalizable` zawiera parametr z atrybutem, nie jest eksportowana, gdy użytkownik eksportuje plik opisu. <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Umożliwia to kontrolowanie deweloperów w taki sposób, aby zapobiec wyeksportowaniu poufnych danych, takich jak parametry połączenia.  
  
 Użytkownik może wyeksportować formant, który został włączony do eksportu, klikając czasownik eksportu, który pojawia się w menu czasowniks formantu, i postępując zgodnie z instrukcjami, aby zapisać. Plik opisu składnika WebPart dla kontrolki. Inni użytkownicy mogą następnie zaimportować ten plik, aby skonfigurować własne wystąpienia formantu.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Klasa zawiera kilka właściwości. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Właściwość zawiera tekst z instrukcjami dla użytkowników, którzy przeglądają plik opisu. Właściwość zawiera tekst, który służy jako etykieta dla zaimportowanej kontrolki, która pojawia się <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> w kontrolce. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Zawiera tekst, który jest wyświetlany, jeśli wystąpi błąd podczas importowania opisu kontrolki. Właściwość zastępuje właściwość podstawową, aby przypisać tytuł domyślny <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> dla kontrolki, jeśli deweloper nie przypisze tytułu. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Właściwość zawiera tekst przycisku, który użytkownik klika, aby przekazać plik opisu, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> a właściwość zawiera instrukcje dotyczące procesu przekazywania. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Klasa zawiera również kilka unikatowych metod. Metoda pobiera obiekt dla <xref:System.Web.UI.WebControls.WebParts.WebPart> każdej<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki w wykazie, który umożliwia kontrolce wyświetlanie informacji o każdym formancie serwera bez konieczności tworzenia wystąpienia go. <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metoda pobiera wystąpienie konkretnej <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki na podstawie opisu przesłanego do metody. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>  
  
 Istnieje pewne ryzyko związane z używaniem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Przykładem jest możliwość importowania złośliwych danych do aplikacji sieci Web za pomocą plików opisu używanych do importowania. Jeśli ktoś umieści kod złośliwego skryptu jako wartość właściwości String w pliku Description, ten skrypt może być potencjalnie wykonany, gdy użytkownik zaimportuje plik opisu i doda formant serwera, do którego istnieje odwołanie, do strony sieci Web. Aby zminimalizować ryzyko związane z importowaniem plików opisu ze złośliwymi danymi, formanty serwera, które mają właściwości typu String, zawsze kodują dane właściwości. Inne ryzyko obejmuje importowanie typów za poorednictwem plików opisu (zobacz [składniki Web Part Opis kontroli plików](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). Złośliwy użytkownik może przesłać żądania załadowania wielu zestawów do <xref:System.AppDomain>, co spowodowało nadmierne wykorzystanie pamięci.  
  
 Aby uniknąć ryzyka związanego z importem, można wyłączyć tę funkcję całkowicie, nie używając funkcji importowania ani <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki. Można też ograniczyć dostęp użytkowników do kontrolki. Można to zrobić programowo przy użyciu zarządzania rolami (zobacz [zarządzanie autoryzacją przy użyciu ról](https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)). Na przykład podczas ładowania strony można sprawdzić, czy użytkownik znajduje się w określonej roli, takiej jak rola administratora. Jeśli użytkownik znajduje się w roli, można programowo dodać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formant do strony dla tego użytkownika. Można również użyć podejścia deklaracyjnego, aby ograniczyć zbiór użytkowników, którzy mogą korzystać z tej <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki.  Na stronie sieci Web zawierającej wykaz można umieścić dwie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolki: jeden dla użytkowników, którzy mogą importować i jeden dla tych, którzy nie mogą. Strefa dla użytkowników, którzy mogą zaimportować, będzie zawierać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formant. Sama sama strefa może być umieszczona wewnątrz <xref:System.Web.UI.WebControls.LoginView> kontrolki, co pozwoli ograniczyć użycie kontrolki w strefie tylko do tych uwierzytelnionych użytkowników lub ról, które określisz.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki deklaratywnie i programowo na stronie sieci Web. Przykład ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web, która zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolkę <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> i kontrolkę.  
  
-   Plik kodu źródłowego, który zawiera dwa kontrolki niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> .  
  
-   Wyjaśnienie, jak działa przykład podczas ładowania strony w przeglądarce.  
  
 Pierwszym elementem tego przykładu kodu jest kontrolka użytkownika, która umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Należy umieścić następujący kod źródłowy w pliku i nazwać go DisplayModeMenuCS. ascx lub DisplayModeMenuVB. ascx (w zależności od używanego języka). Aby uzyskać szczegółowe informacje na temat trybów wyświetlania i Opis kodu źródłowego w tej kontrolce, [zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 Drugą częścią przykładu kodu jest strona sieci Web. W górnej części strony znajdują się dwie `register` dyrektywy, jeden dla kontrolki użytkownika i jeden dla składnika skompilowanego, który zawiera dwie kontrolki niestandardowe. <xref:System.Web.UI.WebControls.WebParts.WebPart> Zwróć uwagę, że strona ma deklaratywne odwołanie do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu, zagnieżdżone w odpowiedniej hierarchii elementów deklaratywnych. Zwróć również uwagę, że kilka wartości właściwości są przypisywane deklaratywnie w `<asp:importcatalogpart>` elemencie. Ponadto metoda aktualizuje wiele wartości właściwości <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> w formancie. `Button1_Click`  
  
 W <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontrolce strony są deklarowane dwie kontrolki niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> . Kontrolka`exportmode="all"`maatrybut. `<aspSample:userinfowebpart>` Ten atrybut jest wymagany, aby umożliwić użytkownikom eksportowanie pliku opisu dla formantu, który następnie może zostać zaimportowany przez innych użytkowników, którzy chcą zaimportować formant przy użyciu pliku opisu.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji składniki Web Part Eksportowanie pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, należy również włączyć funkcję eksportowania w aplikacji sieci Web przez `enableExport="true"` dodanie atrybutu do `<webParts>` elementu (który jest elementem podrzędnym `<system.web>`element) w pliku Web. config. Eksportowanie jest domyślnie wyłączone, więc jeśli nie włączono jeszcze eksportowania dla aplikacji, edytuj plik Web. config i zrób to teraz.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 Trzecią częścią przykładu kodu jest kod źródłowy dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek. Zauważ, że niektóre właściwości tych kontrolek są oznaczone `WebBrowsable` atrybutem. Dzięki <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> temu formant może dynamicznie generować interfejs użytkownika, aby edytować te właściwości, gdy kontrolki są w trybie edycji. Właściwości są również oznaczone `WebDisplayName` atrybutem, aby określić tekst etykiety, która pojawia się obok każdej kontrolki w interfejsie użytkownika do edycji. Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej. Aby zapoznać się z przewodnikiem, który ilustruje obie metody [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 Wywoływana `TextDisplayWebPart` kontrolka niestandardowa jest przywoływana na stronie `<aspSample:TextDisplayWebPart>` sieci Web za pomocą elementu. Inna kontrolka, wywołana `UserInfoWebPart`, jest również domyślnie zadeklarowana na stronie sieci Web, mimo że zostanie usunięta później, aby zademonstrować możliwość zaimportowania pliku opisu dla kontrolki.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 Teraz uruchom przykładowy kod. Załaduj stronę sieci Web w przeglądarce. Pierwszym krokiem jest edytowanie `UserInfoWebPart` kontrolki. Użyj kontrolki lista rozwijana **tryb wyświetlania** i wybierz pozycję **Edytuj** , aby przełączyć stronę do trybu edycji. Kliknij menu `UserInfoWebPart` czasowniki kontrolki (Strzałka w dół na pasku tytułu), a następnie kliknij przycisk **Edytuj**. Gdy zostanie wyświetlony interfejs użytkownika edytowania, kilka kontrolek edycji jest `UserInfoWebPart` widocznych poniżej kontrolki, za pomocą której można edytować wartości pól. Edytuj niektóre pola, kliknij przycisk **OK**, a następnie użyj listy rozwijanej **tryb wyświetlania** , aby przywrócić stronę do trybu przeglądania.  
  
 Drugim krokiem jest wyeksportowanie a. Plik opisu składnika WebPart dla `UserInfoWebPart` kontrolki. Kliknij menu czasowniki w kontrolce niestandardowej (reprezentowanej przez strzałkę w dół na pasku tytułu), a następnie kliknij pozycję **Eksportuj**. Postępuj zgodnie z instrukcjami, aby zapisać. Plik opisu składnika WebPart dla kontrolki. Teraz zamknij stronę sieci Web i Edytuj źródło strony w edytorze. Usuń element deklaracji kontrolki, a następnie Zapisz i zamknij plik. `<aspSample:userinfowebpart>` (Wykonujesz ten krok, aby symulować użytkownikowi, który nie ma `UserInfoWebPart` jeszcze kontrolki, więc możesz zaimportować formant do strony).  
  
 Ponownie Załaduj stronę sieci Web w przeglądarce. `UserInfoWebPart` Formant nie powinien być wyświetlany, ponieważ został usunięty. Użyj kontrolki lista rozwijana **tryb wyświetlania** i wybierz pozycję **katalog** , aby przełączyć stronę do trybu katalogu. W kontrolce kliknij przycisk Przeglądaj, a następnie przejdź do okna. **** <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Utworzony plik WebPart, a następnie kliknij przycisk **Przekaż** . Odwołanie do kontrolki powinno pojawić się obok pola wyboru. Zaznacz pole wyboru, a następnie kliknij przycisk **Dodaj** , aby dodać formant do strony.  
  
 Gdy jesteś w tym widoku strony, kliknij przycisk **Aktualizuj ImportCatalogPart** w dolnej części strony, aby zobaczyć efekt programowo aktualizować liczbę wartości właściwości w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formancie. Po kliknięciu przycisku Obserwuj różne właściwości w interfejsie użytkownika.  
  
 Na koniec kliknij przycisk **Zamknij** , aby zakończyć tryb katalogowania i zwrócić stronę do trybu przeglądania. `UserInfoWebPart` Kontrolka powinna teraz pojawić się na stronie zawierającej wartości, które zostały wcześniej wyeksportowane.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">Pliki opisu kontrolki składniki Web Part</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor jest wartością domyślną; żaden Konstruktor nie jest zadeklarowany <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> w klasie i dlatego nie są wykonywane żadne specjalne zadania, gdy tworzone jest nowe wystąpienie klasy. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> .NET Framework używa konstruktora wewnętrznie do tworzenia wystąpienia klasy.  
  
 Zwykle nie trzeba używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> konstruktora programowo w własnym kodzie. Zamierzone korzystanie z formantu polega na tym, aby deweloperzy stron mogli ją dodać do strony deklaratywnie w czasie projektowania.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wiadomość tekstową, która instruuje użytkowników, aby przeglądali lokalizację pliku opisu.</summary>
        <value>Ciąg, który zawiera tekst komunikatu. Wartość domyślna to komunikat specyficzny dla kultury dostarczany przez .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Właściwość zapewnia użytkownikom prosty przegląd pierwszego elementu, który musi wykonać w procesie dodawania zaimportowanej kontrolki: Podaj lokalizację pliku opisu, wpisując ścieżkę lub przechodząc do pliku. Typową przyczyną podania niestandardowej wartości tej właściwości jest to, że użytkownik ma specjalne instrukcje dla użytkowników, takie jak określony udział sieciowy, który powinien przeglądać, aby zlokalizować plik opisu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Właściwości deklaratywnie i programowo. Pełny kod i instrukcje wymagane do uruchomienia przykładu znajdują się w sekcji <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> przykładowej klasy Przegląd.  
  
 W poniższej sekcji kodu Zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> wartość właściwości jest ustawiana deklaratywnie dla kontrolki.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej części kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> wartość właściwości jest przypisywana programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce można użyć kontrolki lista rozwijana **tryb wyświetlania** , aby wybrać **tryb katalogu** i przełączyć stronę do trybu katalogu. Na stronie w trybie katalogu i przekazanym pliku opisu należy zwrócić uwagę na różne ciągi tekstowe wyświetlane w interfejsie użytkownika (UI) dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki. Jeśli klikniesz przycisk **Przekaż plik opisu** , tekst kilku właściwości w interfejsie użytkownika zostanie zmieniony, włącznie z tekstem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przycisk w interfejsie użytkownika (UI) jest traktowany jako przycisk domyślny, który odbiera fokus, gdy formularz zawierający przycisk jest renderowany. Ta właściwość nie jest przeznaczona do wywoływania z kodu programisty strony.</summary>
        <value>Ciąg, który zawiera identyfikator <see cref="T:System.Web.UI.WebControls.Button" /> , który odbiera domyślny fokus <see cref="T:System.Web.UI.WebControls.Panel" /> w kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kod dla tej właściwości przesłania Właściwość bazową dziedziczoną z <xref:System.Web.UI.WebControls.Panel> klasy, aby ukryć Właściwość od projektantów i uniemożliwić jej wpływ na motywy. Chociaż jest publiczna, ta właściwość jest używana wewnętrznie przez zestaw kontrolny składniki Web Part dla domyślnego renderowania tej kontrolki i nie jest przeznaczona do użycia przez deweloperów stron.  
  
 Tej właściwości nie można ustawić za pomocą motywów lub motywów arkuszy stylów. Aby uzyskać więcej informacji, <xref:System.Web.UI.ThemeableAttribute> Zobacz temat i [ASP.NET motywy i karnacje](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję opisów dostępnych <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolek w wykazie.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> , który <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> zawiera dla każdej kontrolki w wykazie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zapewnia implementację abstrakcyjnej metody bazowej zadeklarowanej <xref:System.Web.UI.WebControls.WebParts.CatalogPart> w klasie. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metoda zwraca informacje o opisie dla każdej kontrolki w wykazie. Należy zauważyć, że w przypadku <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki w danym momencie może istnieć tylko jeden formant serwera w wykazie, mimo że metoda powinna działać w przypadku wielu kontrolek.  
  
 Obiekt jest obiektem, który zawiera podstawowe informacje <xref:System.Web.UI.WebControls.WebParts.WebPart> o kontrolce, w tym jej identyfikator, odwołanie do obiektu do kontrolki oraz wartości kilku ważnych właściwości, <xref:System.Web.UI.WebControls.WebParts.Part> które są dziedziczone z klasy, na przykład <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> i .<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Metoda poprawia wydajność. Po utworzeniu katalogu potrzebne są pewne informacje dotyczące poszczególnych kontrolek, w tym tytuł, opis, ikona (jeśli istnieje) i identyfikator. Zamiast konieczności tworzenia wystąpienia każdej kontroli w celu uzyskania tych informacji, <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefa, która tworzy wykaz <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> wywołuje metodę, a wywołanie zwraca tylko informacje opisu dla formantu, a nie wystąpienie kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> jak używać metody na stronie sieci Web. Przykład ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web, która zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolkę <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> i kontrolkę wraz <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> z kodem, który używa metody.  
  
-   Plik kodu źródłowego, który zawiera dwa kontrolki niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> .  
  
-   Wyjaśnienie, jak działa przykład podczas ładowania strony w przeglądarce.  
  
 Pierwszym elementem tego przykładu kodu jest kontrolka użytkownika, która umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Należy umieścić następujący kod źródłowy w pliku i nazwać go DisplayModeMenuCS. ascx lub DisplayModeMenuVB. ascx (w zależności od używanego języka). Aby uzyskać szczegółowe informacje na temat trybów wyświetlania i Opis kodu źródłowego w tej kontrolce, [zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Drugą częścią przykładu kodu jest strona sieci Web. W górnej części strony znajdują się dwie `register` dyrektywy, jeden dla kontrolki użytkownika i jeden dla składnika skompilowanego, który zawiera dwie kontrolki niestandardowe. <xref:System.Web.UI.WebControls.WebParts.WebPart> Obie te kontrolki są przywołane w sposób deklaratywny w znaczniku strony. Na odwołaniach deklaratywnych do <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (oba zaczynają `aspSample` się od prefiksu) `exportMode="all"` należy zauważyć, że każdy z nich ma dodany atrybut. Ten atrybut umożliwia wyeksportowanie. Plik opisu składnika WebPart, który zostanie użyty w dalszej części kroku do zaimportowania kontrolki do strony.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji składniki Web Part Eksportowanie pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, należy również włączyć funkcję eksportowania w aplikacji sieci Web przez `enableExport="true"` dodanie atrybutu do `<webParts>` elementu (który jest elementem podrzędnym `<system.web>`element) w pliku Web. config. Eksportowanie jest domyślnie wyłączone, więc jeśli nie włączono jeszcze eksportowania dla aplikacji, edytuj plik Web. config i zrób to teraz.  
  
 Strona sieci Web zawiera również deklaratywne odwołanie do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, zagnieżdżone w odpowiedniej hierarchii elementów deklaratywnych. Metoda jest wywoływana w kodzie `Button1_Click` dla metody. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Trzecią częścią przykładu kodu jest kod źródłowy dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek. Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej. Aby zapoznać się z przewodnikiem, który ilustruje obie metody [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Teraz uruchom przykładowy kod. Załaduj stronę sieci Web w przeglądarce. Pierwszym krokiem jest eksportowanie a. Plik opisu składnika WebPart dla <xref:System.Web.UI.WebControls.WebParts.WebPart> każdej kontrolki ( `TextDisplayWebPart` dla i dla `UserInfoWebPart` kontrolki). Dla każdej kontrolki kliknij menu czasowniki w kontrolce (reprezentowane przez strzałkę w dół na pasku tytułu), a następnie kliknij pozycję **Eksportuj**. Postępuj zgodnie z instrukcjami, aby zapisać. Plik opisu składnika WebPart dla kontrolki. Po wyeksportowaniu pliku opisu dla każdej kontrolki Zamknij stronę sieci Web i Zmień źródło strony w edytorze. Usuń elementy `<aspSample:userinfowebpart>` `<aspSample:textdisplaywebpart>` i deklaracje kontrolki, a następnie Zapisz i zamknij plik. (Wykonujesz ten krok, aby symulować użytkownikowi, który nie ma jeszcze tych kontrolek), dzięki czemu możesz importować kontrolki do strony).  
  
 Ponownie Załaduj stronę sieci Web w przeglądarce. Użyj kontrolki lista rozwijana **tryb wyświetlania** i wybierz pozycję **katalog** , aby przełączyć stronę do trybu katalogu. W kontrolce kliknij przycisk Przeglądaj, a następnie przejdź do okna. **** <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Utworzone pliki WebPart, wybierz je, a następnie kliknij przycisk **Przekaż** . Odwołanie do kontrolki powinno pojawić się obok pola wyboru. Zaznacz pole wyboru, a następnie kliknij przycisk **Dodaj** , aby dodać formant do strony. Powtórz ten proces dla innej kontrolki.  
  
 Gdy jesteś w tym widoku strony, kliknij przycisk **Pobierz składnik WebPart** w dolnej części strony, aby zobaczyć efekt programistycznego uzyskiwania dostępu <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> do obiektu dla opisu formantu, który jest <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> aktualnie załadowany w kontroli. Metoda używana do uzyskiwania dostępu do szczegółów opisu, które znajdują `Button1_Click` się w metodzie źródła strony, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> jest metodą. Etykieta poniżej przycisku zawiera podstawowe informacje o formancie.  
  
 Po dodaniu pierwszego formantu Powtórz ten proces, aby dodać drugi formant do strony. Na koniec kliknij przycisk **Zamknij** , aby zakończyć tryb katalogowania i zwrócić stronę do trybu przeglądania. Na stronie są teraz wyświetlane kontrolki niestandardowe zawierające wartości, które miały podczas wcześniejszego eksportowania plików opisu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> , który zawiera szczegółowe informacje o formancie.</param>
        <summary>Zwraca odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki na podstawie wartości w opisie przekazaną do metody.</summary>
        <returns>Kontrolka, <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> której opis pasuje do wartości <paramref name="description" />w.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca odwołanie do kontrolki, <xref:System.Web.UI.WebControls.WebParts.WebPart> której szczegóły opisu <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> pasują do wartości obiektu przekazaną do metody. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Zazwyczaj ta metoda jest używana razem z <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> metodą, która jest używana do pobierania opisów formantów w wykazie. Poszczególne <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki można następnie pobrać lub zmodyfikować odpowiednio do potrzeb, przekazując poszczególne <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> obiekty do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> jak używać metody na stronie sieci Web. Przykład ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web, która zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolkę <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> i kontrolkę wraz <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> z kodem, który używa metody.  
  
-   Plik kodu źródłowego, który zawiera dwa kontrolki niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> .  
  
-   Wyjaśnienie, jak działa przykład podczas ładowania strony w przeglądarce.  
  
 Pierwszym elementem tego przykładu kodu jest kontrolka użytkownika, która umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Należy umieścić następujący kod źródłowy w pliku i nazwać go DisplayModeMenuCS. ascx lub DisplayModeMenuVB. ascx (w zależności od używanego języka). Aby uzyskać szczegółowe informacje na temat trybów wyświetlania i Opis kodu źródłowego w tej kontrolce, [zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Drugą częścią przykładu kodu jest strona sieci Web. W górnej części strony znajdują się dwie `register` dyrektywy, jeden dla kontrolki użytkownika i jeden dla składnika skompilowanego, który zawiera dwie kontrolki niestandardowe. <xref:System.Web.UI.WebControls.WebParts.WebPart> Obie te kontrolki są przywołane w sposób deklaratywny w znaczniku strony. Na odwołaniach deklaratywnych do <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (oba zaczynają `aspSample` się od prefiksu) `exportMode="all"` należy zauważyć, że każdy z nich ma dodany atrybut. Ten atrybut umożliwia wyeksportowanie. Plik opisu składnika WebPart, który zostanie użyty w dalszej części kroku do zaimportowania kontrolki do strony.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji składniki Web Part Eksportowanie pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, należy również włączyć funkcję eksportowania w aplikacji sieci Web przez `enableExport="true"` dodanie atrybutu do `<webParts>` elementu (który jest elementem podrzędnym `<system.web>`element) w pliku Web. config. Eksportowanie jest domyślnie wyłączone, więc jeśli nie włączono jeszcze eksportowania dla aplikacji, edytuj plik Web. config i zrób to teraz.  
  
 Strona sieci Web zawiera również deklaratywne odwołanie do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, zagnieżdżone w odpowiedniej hierarchii elementów deklaratywnych. Metoda jest wywoływana w kodzie `Button2_Click` dla metody. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Trzecią częścią przykładu kodu jest kod źródłowy dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek. Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej. Aby zapoznać się z przewodnikiem, który ilustruje obie metody [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Teraz uruchom przykładowy kod. Załaduj stronę sieci Web w przeglądarce. Pierwszym krokiem jest eksportowanie a. Plik opisu składnika WebPart dla <xref:System.Web.UI.WebControls.WebParts.WebPart> każdej kontrolki ( `TextDisplayWebPart` dla i dla `UserInfoWebPart` kontrolki). Dla każdej kontrolki kliknij menu czasowniki w kontrolce (reprezentowane przez strzałkę w dół na pasku tytułu), a następnie kliknij pozycję **Eksportuj**. Postępuj zgodnie z instrukcjami, aby zapisać. Plik opisu składnika WebPart dla kontrolki. Po wyeksportowaniu pliku opisu dla każdej kontrolki Zamknij stronę sieci Web i Zmień źródło strony w edytorze. Usuń elementy `<aspSample:userinfowebpart>` `<aspSample:textdisplaywebpart>` i deklaracje kontrolki, a następnie Zapisz i zamknij plik. (Wykonujesz ten krok, aby symulować użytkownikowi, który nie ma jeszcze tych kontrolek), dzięki czemu możesz importować kontrolki do strony).  
  
 Ponownie Załaduj stronę sieci Web w przeglądarce. Użyj kontrolki lista rozwijana **tryb wyświetlania** i wybierz pozycję **katalog** , aby przełączyć stronę do trybu katalogu. W kontrolce kliknij przycisk Przeglądaj, a następnie przejdź do okna. **** <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Utworzone pliki WebPart, wybierz je, a następnie kliknij przycisk **Przekaż** . Odwołanie do kontrolki powinno pojawić się obok pola wyboru. Teraz, gdy opis kontrolki jest przekazywany do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, kliknij przycisk **Użyj GetWebPart** w dolnej części strony. Będzie to zademonstrować efekt wywołania <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> metody i przekazanie do niej opisu kontrolki, która jest aktualnie załadowana <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> w kontrolce. Należy pamiętać, że skojarzony formant serwera jest natychmiast dodawany do strony sieci Web, bez konieczności kliknięcia przycisku **Dodaj** . Metoda, która jest wywoływana `Button2_Click` w metodzie źródła <xref:System.Web.UI.WebControls.WebParts.WebPart> strony, zwraca kontrolkę skojarzoną z bieżącym opisem, który jest ładowany w <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formancie. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Następna Metoda jest wywoływana i formant jest bezpośrednio dodawany do strony. <xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> Pokazuje, jak dodać kontrolkę programowo z <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki bez interwencji użytkownika.  
  
 Po dodaniu pierwszego formantu Powtórz ten proces, aby dodać drugi formant do strony. Na koniec kliknij przycisk **Zamknij** , aby zakończyć tryb katalogowania i zwrócić stronę do trybu przeglądania. Na stronie są teraz wyświetlane kontrolki niestandardowe zawierające wartości, które miały podczas wcześniejszego eksportowania plików opisu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="description" />nie jest wartością dostępną <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> .</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany po zaimportowaniu przez użytkownika pliku opisu do reprezentowania lub opisywania zaimportowanej kontrolki w wykazie zaimportowanych kontrolek.</summary>
        <value>Ciąg, który zawiera tekst etykiety. Wartość domyślna to komunikat specyficzny dla kultury dostarczany przez .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest zwykle używana do umieszczania krótkiej, ogólnej etykiety opisującej formant zawarty <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> w kontrolce. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Właściwości deklaratywnie i programowo. Pełny kod i instrukcje wymagane do uruchomienia przykładu znajdują się w sekcji <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> przykładowej klasy Przegląd.  
  
 W poniższej sekcji kodu Zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> wartość właściwości jest ustawiana deklaratywnie dla kontrolki.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej części kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> wartość właściwości jest przypisywana programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce można użyć kontrolki lista rozwijana **tryb wyświetlania** , aby wybrać **tryb katalogu** i przełączyć stronę do trybu katalogu. Na stronie w trybie katalogu i przekazanym pliku opisu należy zwrócić uwagę na różne ciągi tekstowe wyświetlane w interfejsie użytkownika (UI) dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki. Jeśli klikniesz przycisk **Przekaż plik opisu** , tekst kilku właściwości w interfejsie użytkownika zostanie zmieniony, włącznie z tekstem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia komunikat o błędzie wyświetlany w przypadku wystąpienia błędu podczas procesu importowania.</summary>
        <value>Ciąg, który zawiera tekst etykiety. Wartość domyślna to komunikat specyficzny dla kultury dostarczany przez .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Właściwość jest przydatna do powiadamiania użytkownika o wystąpieniu pewnego problemu lub błędu, gdy strona próbuje zaimportować plik opisu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Właściwości deklaratywnie i programowo. Pełny kod i instrukcje wymagane do uruchomienia przykładu znajdują się w sekcji <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> przykładowej klasy Przegląd.  
  
 W poniższej sekcji kodu Zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> wartość właściwości jest ustawiana deklaratywnie dla kontrolki.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej części kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> wartość właściwości jest przypisywana programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce można użyć kontrolki lista rozwijana **tryb wyświetlania** , aby wybrać **tryb katalogu** i przełączyć stronę do trybu katalogu. Na stronie w trybie katalogu i przekazanym pliku opisu należy zwrócić uwagę na różne ciągi tekstowe wyświetlane w interfejsie użytkownika (UI) dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki. Jeśli klikniesz przycisk **Przekaż plik opisu** , tekst kilku właściwości w interfejsie użytkownika zostanie zmieniony, włącznie z tekstem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tytuł wyświetlany na pasku <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> tytułu kontrolki.</summary>
        <value>Ciąg, który jest używany jako tytuł formantu. Wartość domyślna to obliczona nazwa kontrolki podana przez zestaw kontrolek składniki Web Part.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest wyświetlana na pasku <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> tytułu kontrolki, gdy kontrolka jest widoczna w trybie katalogu. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Gdy kontrolka jest zadeklarowana na stronie, można ustawić wartość właściwości przy użyciu `Title` atrybutu. Jeśli nie podasz wartości dla tytułu, wartość domyślna specyficzna dla kultury zostanie użyta do opisania rodzaju właściwości, które ta kontrolka zezwala użytkownikom na edycję.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Właściwości deklaratywnie i programowo. Pełny kod i instrukcje wymagane do uruchomienia przykładu znajdują się w sekcji <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> przykładowej klasy Przegląd.  
  
 W poniższej sekcji kodu Zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> wartość właściwości jest ustawiana deklaratywnie dla kontrolki.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej części kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> wartość właściwości jest przypisywana programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce można użyć kontrolki lista rozwijana **tryb wyświetlania** , aby wybrać **tryb katalogu** i przełączyć stronę do trybu katalogu. Na stronie w trybie katalogu i przekazanym pliku opisu należy zwrócić uwagę na różne ciągi tekstowe wyświetlane w interfejsie użytkownika (UI) dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki. Jeśli klikniesz przycisk **Przekaż plik opisu** , tekst kilku właściwości w interfejsie użytkownika zostanie zmieniony, włącznie z tekstem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst dla <see cref="T:System.Web.UI.WebControls.Button" /> kontrolki inicjującej przekazywanie pliku opisu.</summary>
        <value>Ciąg, który jest używany jako tekst dla <see cref="T:System.Web.UI.WebControls.Button" />. Wartość domyślna to ciąg specyficzny dla kultury dostarczany przez zestaw kontrolny składniki Web Part.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera tekst <xref:System.Web.UI.WebControls.Button> dla kontrolki inicjującej proces przekazywania. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Jeśli przypiszesz niestandardowy tekst do tej właściwości lub do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwości, tekst powinien być oczywisty, że użytkownik przekazuje plik opisu. Tekst nie powinien powiedzieć ani oznaczać, że proces przekazywania faktycznie przekazuje sam formant.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Właściwości deklaratywnie i programowo. Pełny kod i instrukcje wymagane do uruchomienia przykładu znajdują się w sekcji <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> przykładowej klasy Przegląd.  
  
 W poniższej sekcji kodu Zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> wartość właściwości jest ustawiana deklaratywnie dla kontrolki.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej części kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> wartość właściwości jest przypisywana programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce można użyć kontrolki lista rozwijana **tryb wyświetlania** , aby wybrać **tryb katalogu** i przełączyć stronę do trybu katalogu. Na stronie w trybie katalogu i przekazanym pliku opisu należy zwrócić uwagę na różne ciągi tekstowe wyświetlane w interfejsie użytkownika (UI) dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki. Jeśli klikniesz przycisk **Przekaż plik opisu** , tekst kilku właściwości w interfejsie użytkownika zostanie zmieniony, włącznie z tekstem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst komunikatu informującego użytkownika o tym, jak przekazać plik opisu.</summary>
        <value>Ciąg, który jest używany jako instrukcje dla użytkownika w celu przekazania pliku opisu. Wartość domyślna to ciąg specyficzny dla kultury dostarczany przez zestaw kontrolny składniki Web Part.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Właściwość zawiera krótkie zdanie lub frazę instrukcji dla użytkowników, informując o kliknięciu przycisku w celu przekazania pliku opisu. Jeśli przypiszesz niestandardowy tekst do tej właściwości lub do <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> właściwości, tekst powinien być oczywisty, że użytkownik przekazuje plik opisu. Tekst nie powinien powiedzieć ani oznaczać, że proces przekazywania faktycznie przekazuje sam formant.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Właściwości deklaratywnie i programowo. Pełny kod i instrukcje wymagane do uruchomienia przykładu znajdują się w sekcji <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> przykładowej klasy Przegląd.  
  
 W poniższej sekcji kodu Zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> wartość właściwości jest ustawiana deklaratywnie dla kontrolki.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 W tej części kodu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> wartość właściwości jest przypisywana programowo.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce można użyć kontrolki lista rozwijana **tryb wyświetlania** , aby wybrać **tryb katalogu** i przełączyć stronę do trybu katalogu. Na stronie w trybie katalogu i przekazanym pliku opisu należy zwrócić uwagę na różne ciągi tekstowe wyświetlane w interfejsie użytkownika (UI) dla <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki. Jeśli klikniesz przycisk **Przekaż plik opisu** , tekst kilku właściwości w interfejsie użytkownika zostanie zmieniony, włącznie z tekstem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
