<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cef57369c67df3c744525c16314e7261b734f49a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69402032" /></Metadata><TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Służy jako kontrolka podstawowa w zestawie kontrolek składniki Web Part na potrzeby <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> hostingu formantów na stronie sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ramach zestawu kontrolek składniki Web Part strefa to region na stronie sieci Web, który zawiera kontrolki składniki Web Part. Strefa składniki Web Part jest tworzona przez kontrolkę strefy, która jest typem <xref:System.Web.UI.WebControls.CompositeControl> zaprojektowanym do przechowywania innych kontrolek. Podstawowe funkcje strefy to określenie formantów, które zawiera, oraz udostępnienie wspólnego interfejsu użytkownika dla tych formantów. Aby uzyskać ogólne informacje o strefach i sposobach ich użycia w aplikacjach składniki Web Part, zobacz <xref:System.Web.UI.WebControls.WebParts.WebZone> Klasa bazowa i [składniki Web Part Omówienie zestawu sterującego](https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)).  
  
 Kluczowa funkcja formantów składniki Web Part polega na tym, że użytkownicy końcowi mogą modyfikować (lub personalizować) strony sieci Web zgodnie z ich preferencjami i zapisywać ich spersonalizowane ustawienia w przyszłych sesjach przeglądarki. Jeden z aspektów modyfikowania stron składniki Web Part obejmuje możliwość dodawania <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów lub innych kontrolek serwera do strony składniki Web Part. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Formant zawiera listę lub wykaz formantów, które użytkownicy mogą dodawać do strony.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Kontrolka jest jednym z podstawowych kontrolek w zestawie kontrolek składniki Web Part. Pochodzi ona z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy, a większość jej zachowań jest dziedziczona z tej klasy. Klasa zasadniczo dodaje do klasy podstawowej Szablon strefy, który jest implementacją <xref:System.Web.UI.ITemplate> interfejsu. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Szablon strefy umożliwia deweloperom deklaratywne Dodawanie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek do strefy w formacie trwałości strony.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.WebParts.CatalogPart> <xref:System.Web.UI.WebControls.WebParts.CatalogPart> <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Strefa może zawierać tylko kontrolki i odwrotnie, formanty mogą znajdować się tylko w strefach, które pochodzą z klasy, <xref:System.Web.UI.WebControls.WebParts.CatalogZone>takiej jak. <xref:System.Web.UI.WebControls.WebParts.CatalogZone>  
  
 Kontrolka staną się widoczne tylko wtedy, gdy użytkownik przełącza stronę sieci Web do trybu wyświetlania<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>katalogu (). <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Wykaz może zawierać kilka typów <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek. Każdy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formant jest typem kontenera zawierającego kontrolki serwera, które użytkownicy mogą dodać do strony. <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Kontrolki różnią się w zależności od tego, gdzie znajdują się one na serwerze, z którego pochodzą. Poniższa tabela zawiera podsumowanie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów dostarczanych z zestawem kontrolek składniki Web Part i dla każdej kontrolki, jakiego rodzaju kontrolki serwera zawiera.  
  
|formant|Opis|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Zachowuje odwołania do kontrolek, które zostały zamknięte na stronie. Te kontrolki można otworzyć ponownie (dodać z powrotem do strony) przez użytkowników.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Zawiera odwołania do formantów, które są zadeklarowane w wykazie składniki Web Part w adjustacji strony sieci Web. Te formanty mogą być dodawane do strony sieci Web przez użytkowników.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Udostępnia interfejs użytkownika służący do przekazywania pliku definicji (pliku XML z rozszerzeniem. Rozszerzenie WebPart i określony format zawierający informacje o stanie dla formantu do wykazu, aby można było dodać formant do strony sieci Web.|  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Ponieważ Klasa dodaje tylko szablon strefy do zachowania swojej klasy podstawowej, ma kilku członków. Konstruktor jest konstruktorem bez parametrów; z nim można inicjować nowe wystąpienie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> Właściwość pobiera lub ustawia odwołanie <xref:System.Web.UI.ITemplate> do obiektu, który zawiera kontrolki dla strefy. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Metoda ma krytyczne znaczenie. Zastępuje metodę podstawową, aby utworzyć kolekcję wszystkich <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek zawartych w szablonie strefy.  
  
> [!NOTE]
>  Przyciski w <xref:System.Web.UI.WebControls.WebParts.CatalogZone> interfejsie użytkownika wymagają skryptów po stronie klienta, aby działały prawidłowo. Jeśli obsługa skryptów jest wyłączona w przeglądarce, użytkownik nie będzie mógł wykonywać akcji za pomocą <xref:System.Web.UI.WebControls.WebParts.CatalogZone> interfejsu użytkownika.  
  
## <a name="accessibility"></a>Ułatwienia dostępu  
 Znaczniki renderowane domyślnie dla tego formantu mogą nie być zgodne ze standardami dostępności, takimi jak wskazówki dotyczące dostępności zawartości sieci Web 1,0 (WCAG). Aby uzyskać szczegółowe informacje na temat pomocy technicznej dotyczącej ułatwień dostępu dla tego formantu, zobacz [ASP.NET Controls and Accessibility](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje deklaratywne i programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> formantu. Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie sieci Web.  
  
-   Plik z kodem źródłowym dla kontrolki niestandardowej <xref:System.Web.UI.WebControls.WebParts.CatalogZone> i formantem niestandardowym <xref:System.Web.UI.WebControls.WebParts.WebPart> , który jest importowany przez katalog i dodawany do strony sieci Web.  
  
-   Strona sieci Web, która deklaruje kontrolkę użytkownika i kontrolkę niestandardową <xref:System.Web.UI.WebControls.WebParts.CatalogZone> .  
  
-   Wyjaśnienie, jak uruchomić przykład.  
  
 Pierwszym elementem tego przykładu kodu jest kontrolka użytkownika, która umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Aby uzyskać szczegółowe informacje na temat trybów wyświetlania i Opis kodu źródłowego w tej kontrolce, [zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 Druga część przykładu kodu zawiera kod dla niestandardowych <xref:System.Web.UI.WebControls.WebParts.CatalogZone> i <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek. Kod dla <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolki demonstruje sposób dziedziczenia <xref:System.Web.UI.WebControls.WebParts.CatalogZone> z klasy i dostosowywania jej właściwości przez ustawienie niektórych domyślnych wartości właściwości w konstruktorze. Kod źródłowy ilustruje również sposób tworzenia klasy niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> o nazwie. `TextDisplayWebPart` Jest to kontrolka skojarzona z. Plik opisu składnika WebPart, który zostanie zaimportowany jako część tego przykładu kodu. Po zaimportowaniu pliku opisu przy użyciu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki na stronie sieci Web można `TextDisplayWebPart` dodać kontrolkę do strony, w pełni wstępnie skonfigurowanej, jak określono w pliku opisu.  
  
 Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej, dlatego jeśli chcesz uruchomić przykład w ten sposób, Nazwij plik kodu źródłowego i dodaj go do podfolderu App_Code w katalogu głównym aplikacji sieci Web. Aby zapoznać się z przewodnikiem, który ilustruje obie metody [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 Trzecią częścią przykładu kodu jest strona sieci Web, która zawiera kontrolki. Zawiera `Register` ona dyrektywę dla kontrolki użytkownika, a druga dla pliku źródłowego z kontrolkami niestandardowymi. Należy zauważyć, że w drugiej dyrektywie nie jest to nazwa zestawu, ponieważ przykład nie używa zestawu, używa kompilacji dynamicznej z kodem źródłowym umieszczonym w podfolderze App_Code. Strona sieci Web deklaruje <xref:System.Web.UI.WebControls.WebParts.WebPartZone> formant i w jego <xref:System.Web.UI.WebControls.BulletedList> elemencie podrzędnym `<zonetemplate>` deklaruje formant. Chociaż jest to standardowy formant ASP.NET, będzie on miał pełną funkcjonalność składniki Web Part w czasie wykonywania, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka otacza dowolny formant serwera umieszczony <xref:System.Web.UI.WebControls.WebParts.WebPartZone> w <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiekcie z obiektem, dzięki czemu inne kontrolki serwera mogą uczestniczyć w sieci Web Aplikacje części. Również zadeklarowane w tej strefie jest kontrolką niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPart> o nazwie. `TextDisplayWebPart` Zauważ, że ta kontrolka ma atrybut `ExportMode="All"` zadeklarowany. Dzięki temu można eksportować. Plik opisu składnika WebPart zawierający wartości właściwości kontrolki, które mogą zostać zaimportowane przez innych użytkowników w celu dodania wstępnie skonfigurowanej kontrolki do innych stron sieci Web.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji składniki Web Part Eksportowanie pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, należy również włączyć funkcję eksportowania w aplikacji sieci Web przez `enableExport="true"` dodanie atrybutu do `<webParts>` elementu (który jest elementem podrzędnym `<system.web>`element) w pliku Web. config. Eksportowanie jest domyślnie wyłączone, więc jeśli eksport dla aplikacji nie został jeszcze włączony, edytuj plik Web. config i zrób to teraz.  
  
 Strona sieci Web deklaruje także kontrolkę niestandardową <xref:System.Web.UI.WebControls.WebParts.CatalogZone> , a w niej `<zonetemplate>` element, który <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> zawiera kontrolkę. Użytkownik użyje tej kontrolki w czasie wykonywania w celu zaimportowania. Plik opisu składnika WebPart dla kontrolki niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> .  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 Teraz uruchom przykładowy kod. Załaduj stronę sieci Web w przeglądarce. Pierwszym krokiem jest wyeksportowanie a. Plik opisu składnika WebPart dla `TextDisplayWebPart` kontrolki. Kliknij menu czasowniki w kontrolce niestandardowej (reprezentowanej przez strzałkę w dół na pasku tytułu), a następnie kliknij pozycję **Eksportuj**. Postępuj zgodnie z instrukcjami, aby zapisać plik opisu dla kontrolki. Otwórz okno. Plik opisu składnika WebPart w edytorze i edytowanie wartości tekstu Właściwości tytułu. Znajdź element, który ma atrybut `name="Title"`, i Edytuj tekst tytułu, który jest zawarty między tagiem otwierającym i zamykającym `<property>`. `<property>` Teraz zamknij stronę sieci Web i Edytuj źródło strony w edytorze. Usuń element deklaracji kontrolki, a następnie Zapisz i zamknij plik. `<aspSample:TextDisplayWebPart>`  
  
 Ponownie Załaduj stronę sieci Web w przeglądarce. `TextDisplayWebPart` Formant nie powinien być wyświetlany, ponieważ został usunięty. Użyj kontrolki lista rozwijana **tryb wyświetlania** i wybierz pozycję **katalog** , aby przełączyć stronę do trybu katalogu. Zauważ, że Kontrolka niestandardowa <xref:System.Web.UI.WebControls.WebParts.CatalogZone> pojawia się wraz <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> z kontrolką. Kliknij przycisk **Przeglądaj** , aby zlokalizować. Plik opisu składnika WebPart, który został wyeksportowany `TextDisplayWebPart` dla kontrolki. Możesz kliknąć przycisk **Przekaż**, zaznaczyć pole wyboru obok zaimportowanej kontrolki, a następnie kliknąć przycisk **Dodaj** , aby dodać go do strony. Kliknij przycisk **Zamknij katalog** , aby powrócić do normalnego trybu przeglądania. Zaimportowany formant powinien teraz pojawić się na stronie, a tytuł wyświetlany na pasku tytułu kontrolki powinien być tekstem tytułu dodanym do elementu. Plik opisu elementu WebPart.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">dla działania w środowisku hostowanym. Wartość żądania: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Wartość uprawnienia: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <block subset="none" type="overrides"><para>Możesz utworzyć klasy niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> , jeśli chcesz mieć większą kontrolę nad renderowaniem i zachowaniem interfejsu użytkownika katalogu. Jeśli nie musisz podawać użytkowników kontrolki z możliwością dodawania <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów deklaratywnie, możesz dziedziczyć bezpośrednio <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> z klasy. Jeśli chcesz włączyć kontrolki, które mają być dodawane deklaratywnie, podejście proste ma dziedziczyć z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy, ponieważ zawiera on podstawowy szablon strefy.  
  
Jeśli dziedziczysz <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> z klasy, możesz <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> przesłonić metodę i użyć metody, aby dodać niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolki do, jeśli chcesz większą kontrolę programistyczną nad dodawaniem formantów <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> niestandardowych do strefy .</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Przegląd zestawu kontrolek składniki Web Part</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Omówienie personalizacji składniki Web Part</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ formant implementuje Szablon strefy, jest on zwykle używany deklaratywnie i rzadko trzeba utworzyć nowe wystąpienie klasy <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> przy użyciu konstruktora. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Jednakże w przypadku dziedziczenia z <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy w celu utworzenia strefy niestandardowej można użyć konstruktora do zainicjowania niektórych wartości właściwości i dostosowania jego wyglądu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> programistyczne konstruktora w kontrolce niestandardowej. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Konstruktor służy do inicjowania niektórych domyślnych wartości właściwości formantu. Poniższy kod pokazuje klasę niestandardową <xref:System.Web.UI.WebControls.WebParts.CatalogZone> z konstruktorem zadeklarowanym w górnej części. Pełny kod i instrukcje wymagane do skonfigurowania i uruchomienia przykładu znajdują się w sekcji przykład w <xref:System.Web.UI.WebControls.WebParts.CatalogZone> temacie Omówienie klasy.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie każdego <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> typu zadeklarowanego w strefie.</summary>
        <returns>Z odwołaniami do wszystkich kontrolek w strefie. <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą krytyczną, ponieważ gdy użytkownik przełącza stronę do trybu wyświetlania katalogu, ta metoda tworzy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> wszystkie kontrolki wchodzące w skład wykazu składniki Web Part. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A>  
  
 Metoda w klasie dostarczana z zestawem kontrolek składniki Web Part może utworzyć dowolny <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formant serwera, który dziedziczy z klasy. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Dlatego jeśli utworzysz kontrolkę niestandardową <xref:System.Web.UI.WebControls.WebParts.CatalogPart> i zadeklarujesz ją na stronie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolki, ta metoda spowoduje utworzenie kontrolki, gdy użytkownik przejdzie do trybu katalogu.  
  
 Jednak w różnych sytuacjach możesz chcieć kontrolować <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metodę. Może być konieczne utworzenie tylko określonych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek. Załóżmy na przykład, że tworzysz zestaw kontrolek niestandardowych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> , które mają spójny wygląd i należą do pojedynczego produktu lub organizacji. Jeśli chcesz, aby deweloperzy stron mogli ograniczyć użycie tych niestandardowych kontrolek w wykazie, należy dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy, <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> zastąpić metodę i zezwolić metodzie na tworzenie tylko kontrolek tego samego typu jak kontrolki niestandardowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formant nie ma identyfikatora.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon, który będzie zawierać kontrolki podrzędne <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> w kontrolce w formacie trwałości strony.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> Działa jako kontener dla formantów podrzędnych w strefie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość odwołuje się do szablonu typu <xref:System.Web.UI.ITemplate> , który <xref:System.Web.UI.WebControls.WebParts.CatalogPart> jest używany do zawiera kontrolki w strefie. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> Szablon strefy umożliwia deweloperom stron deklarowanie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek, których chcą używać w formacie trwałości, zamiast konieczności programistycznego tworzenia wszystkich formantów.  
  
 Metoda dostępu set dla <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> właściwości <xref:System.Web.UI.WebControls.WebParts.CatalogPart> wywołuje metodę, która wymusza zbiór formantów, które są zadeklarowane w szablonie strefy na stronie do odświeżenia. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> Zapewnia to, że kolekcja formantów przywoływanych przez strefę pozostaje aktualna za każdym razem, gdy użytkownik zmieni kontrolki faktycznie zadeklarowane w szablonie na stronie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Jeśli chcesz utworzyć strefę niestandardową <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> , ale planujesz <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> utworzyć formanty programowo, zamiast zezwalać deweloperom stron na ich deklarowanie, nie musisz obsługiwać szablonu strefy i można dziedziczyć bezpośrednio z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> określonej.</para></block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
