<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f5707a826eb0e123c3fe221afb6c440fa78435e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688691" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Służy jako podstawowy formantu w formancie części sieci Web, ustaw dla hostingu <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolki na stronie sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W zestawie formantu składników Web Part strefy to region na stronie sieci Web, która zawiera formanty części sieci Web. Strefy składników Web Part jest tworzony przez formant strefy, który jest typem elementu <xref:System.Web.UI.WebControls.CompositeControl> umożliwiającą zawierają inne formanty. Podstawowe funkcje strefy są do określania układu kontrolek, które zawiera oraz w celu zapewnienia wspólny interfejs użytkownika (UI) dla tych kontrolek. Aby uzyskać ogólne informacje dotyczące strefy i sposób ich użycia w aplikacjach części sieci Web, zobacz podstawowym <xref:System.Web.UI.WebControls.WebParts.WebZone> klasy, i [omówienie zestaw kontroli części sieci Web](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 Kluczową funkcją formantów składników Web Part jest ich użytkownicy końcowi mogą ją zmodyfikować (lub spersonalizować) stron sieci Web zgodnie z ich preferencje i Zapisz ich spersonalizowanych ustawień dla przeglądarki przyszłych sesji. Modyfikowanie stron części sieci Web na jednym aspekcie obejmuje możliwość dodawania <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek ani innych kontrolek serwera do strony składników Web Part. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Kontrola zapewnia listy lub katalogu formantów, które użytkownicy mogą dodawać do strony.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Kontroli jest jednym z podstawowych kontrolek w zestawie formantu części sieci Web. Dziedziczy <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy, a większość jego zachowanie jest dziedziczone z tej klasy. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Klasy zasadniczo dodaje do klasy podstawowej Szablon strefy, która jest implementacją elementu <xref:System.Web.UI.ITemplate> interfejsu. Szablon strefy umożliwia deweloperom deklaratywnie dodać <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów do strefy w formacie trwałości strony.  
  
> [!IMPORTANT]
>  A <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefa może zawierać tylko <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów i odwrotnie, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki mogą znajdować się tylko w stref, które pochodzą z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klas, takich jak <xref:System.Web.UI.WebControls.WebParts.CatalogZone>.  
  
 A <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli staje się widoczna tylko gdy użytkownik zmienia strony sieci Web na tryb wyświetlania katalogu (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>). Katalog może zawierać kilka typów <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Każdy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formant jest typu kontenera, który zawiera formanty serwera, użytkownicy mogą dodawać do strony. <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Formanty różnią się zgodnie z którym kontrolki serwera zawierają pochodzą z. Poniższa tabela zawiera podsumowanie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki wprowadzone przy użyciu zestawu kontroli części sieci Web i dla każdej kontrolki, jakiego rodzaju serwera kontrolek zawiera.  
  
|Formant|Opis|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Przechowuje odwołania do formantów, które zostały zamknięte na stronie. Tych kontrolek można otworzyć ponownie (dodany z powrotem do strony) przez użytkowników.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Zawiera odwołania do formantów, które są zadeklarowane w wykazie części sieci Web w znaczniku strony sieci Web. Tych kontrolek można dodać do strony sieci Web przez użytkowników.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Udostępnia interfejs dla użytkownika przekazać plik definicji (plik XML z. Rozszerzenia składnika Web Part i w określonym formacie, który zawiera stan informacji) kontrolki do katalogu, dzięki czemu można dodać formantu do strony sieci Web.|  
  
 Ponieważ <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasa dodaje szablon strefy do zachowania swojej klasy podstawowej, składa się z kilku członków. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> Konstruktor jest konstruktora domyślnego; należy zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> Właściwości pobiera lub ustawia odwołanie do <xref:System.Web.UI.ITemplate> obiekt, który zawiera formanty dla strefy. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Metoda ma kluczowe znaczenie. Zastępuje metodę podstawową, aby utworzyć kolekcję wszystkich <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty zawarte w szablonie strefy.  
  
> [!NOTE]
>  Przyciski w <xref:System.Web.UI.WebControls.WebParts.CatalogZone> interfejsu użytkownika wymaga do poprawnego działania obsługi skryptów po stronie klienta. Jeśli obsługa skryptów jest wyłączone w przeglądarce, użytkownik nie będzie mogła wykonywać działania za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.CatalogZone> interfejsu użytkownika.  
  
## <a name="accessibility"></a>Ułatwienia dostępu  
 Znaczników renderowania domyślnie dla tego formantu nie mogą być zgodne ze standardami ułatwień dostępu, takich jak wytyczne o priorytecie 1 interfejsów sieci Web zawartości dostępności wytyczne 1.0 (WCAG). Aby uzyskać szczegółowe informacje dotyczące obsługi ułatwień dostępu dla tego formantu, zobacz [kontrolki ASP.NET i dostępności](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje deklaratywne i programowy użycia <xref:System.Web.UI.WebControls.WebParts.CatalogZone> formantu. Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie sieci Web.  
  
-   Plik z kodem źródłowym dla niestandardowego <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> formant, który jest zaimportowany przez wykaz dodany do strony sieci Web.  
  
-   Strony sieci Web, który deklaruje kontrolki użytkownika i niestandardowej <xref:System.Web.UI.WebControls.WebParts.CatalogZone> formantu.  
  
-   Wyjaśnienie sposobu uruchamiania w przykładzie.  
  
 Pierwsza część w tym przykładzie kodu jest kontrola użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Aby uzyskać szczegółowe informacje dotyczące wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 Druga część przykładu kodu zawiera kod niestandardowy <xref:System.Web.UI.WebControls.WebParts.CatalogZone> i <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Kod <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli pokazano, jak dziedziczyć <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy i dostosować jego właściwości przez ustawienie pewne domyślne wartości właściwości w konstruktorze. Kod źródłowy również przedstawia sposób tworzenia niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy o nazwie `TextDisplayWebPart`. To jest formant skojarzone z. Pliku opisu składnika Web Part, które zostaną zaimportowane w ramach tego przykładu kodu. Po zaimportowaniu pliku opisu przy użyciu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki na stronie sieci Web będzie mogła dodawać `TextDisplayWebPart` formantu do strony, w pełni wstępnie skonfigurowany jako określony w pliku opisu.  
  
 Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie kodu używane kompilacji dynamicznej, więc jeśli chcesz uruchomić przykład w ten sposób, nazwa pliku źródła kodu i dodaj go do podfolderu App_Code katalog główny aplikacji sieci Web. Aby uzyskać wskazówki, który pokazuje obie metody tworzenia, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 Trzeci część przykładowy kod jest strony sieci Web, który zawiera formanty. Zawiera on `Register` dyrektywy dla formantu użytkownika i jedno dla pliku źródłowego z formantów niestandardowych. Należy pamiętać, że w drugiej dyrektywy go nie nazwę zestawu, ponieważ przykładzie nie korzysta z zestawu, używa kompilacji dynamicznej z kodem źródłowym umieszczone w podfolderze App_Code. Deklaruje strony sieci Web <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontroli i w jego podrzędny `<zonetemplate>` deklaruje element <xref:System.Web.UI.WebControls.BulletedList> formantu. Jest to standardowy kontrolki ASP.NET, będzie mieć pełną funkcjonalność części sieci Web w czasie wykonywania, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować zawija żadnego formantu serwera, umieszczone w <xref:System.Web.UI.WebControls.WebParts.WebPartZone> z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu, tak aby inne formanty serwera mogą uczestniczyć w sieci Web Części aplikacji. Jest również zadeklarowana w tej strefie jest niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu o nazwie `TextDisplayWebPart`. Zwróć uwagę, że formant ma atrybut `ExportMode="All"` zadeklarowane na nim. Dzięki temu można wyeksportować. Plik opisu składnika Web Part, który zawiera wartości właściwości formantu, który można zaimportować przez innych użytkowników, aby dodać kontrolki wstępnie skonfigurowane do innych stron sieci Web.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji składników Web Part można wyeksportować pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, należy również włączyć funkcję eksportu w aplikacji sieci Web, dodając `enableExport="true"` atrybutu `<webParts>` elementu (który jest elementem podrzędnym `<system.web>`element) w pliku Web.config. Eksport jest domyślnie wyłączona, więc jeśli nie jest jeszcze włączone eksportu dla aplikacji, edytowania pliku Web.config i zrób to teraz.  
  
 Strony sieci Web deklaruje element niestandardowego <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i, to `<zonetemplate>` element, który zawiera <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Użytkownik użyje tego formantu w czasie wykonywania do zaimportowania. Plik opisu składnika Web Part niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 Teraz uruchom przykładów kodu. Ładowanie strony sieci Web w przeglądarce. Pierwszym krokiem jest do wyeksportowania. Plik opisu składnika Web Part dla `TextDisplayWebPart` formantu. Kliknij menu zleceń formantu niestandardowego (reprezentowane przez strzałkę w dół na pasku tytułu), a następnie kliknij przycisk **wyeksportować**. Postępuj zgodnie z instrukcjami, aby zapisać plik opis formantu. Otwórz. Opis elementu WebPart plik w edytorze i edytować wartość właściwości tytuł. Znajdź `<property>` element, który ma atrybut `name="Title"`i edytować tekst tytułu, który znajduje się pomiędzy otwierającym, a zamknięcia `<property>` tagów. Teraz zamknąć stronę sieci Web, a następnie Edytuj źródło strony w edytorze. Usuń `<aspSample:TextDisplayWebPart>` kontrolować deklaracji elementu, a następnie zapisz i zamknij plik.  
  
 Załaduj ponownie w przeglądarce strony sieci Web. `TextDisplayWebPart` Kontrolki nie mogą występować, ponieważ usunięto go. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **katalogu** Aby włączyć tryb katalogu strony. Zwróć uwagę, że niestandardowa <xref:System.Web.UI.WebControls.WebParts.CatalogZone> formant jest widoczny, wraz z <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu. Kliknij przycisk **Przeglądaj** przycisk, aby zlokalizować. Pliku opisu składnika Web Part, który został wyeksportowany do `TextDisplayWebPart` formantu. Możesz kliknąć **przekazać**, zaznacz pole wyboru obok kontrolki, importowany i kliknij przycisk **Dodaj** ją dodać do strony. Kliknij przycisk **Zamknij katalog** można przywrócić do trybu normalnego przeglądania strony. Importowany kontroli powinien zostać wyświetlony na stronie i tytuł, który jest wyświetlany na pasku tytułu formantu powinna być dodane do tekstu tytułu. Plik opisu składnika Web Part.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">do pracy w środowisku hostowanej. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Wartość uprawnienia: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <block subset="none" type="overrides">
      <para>Można tworzyć niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy, jeśli chcesz mieć większą kontrolę nad renderowania i zachowaniem katalogu interfejsu użytkownika. Jeśli nie chcesz zapewnić użytkownikom formantu możliwość dodawania <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolki deklaratywnie, a następnie może dziedziczyć bezpośrednio z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> klasy. Jeśli chcesz włączyć kontroli w celu dodania deklaratywnie, podejście simples ma dziedziczyć <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy, ponieważ zapewnia szablon podstawowych strefy.  
  
 Jeśli dziedziczą z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy, można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> — metoda i użyj metody, aby dodać niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formanty <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />, jeśli chcesz programowe kontrolowanie Dodawanie niestandardowych <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów do strefy .</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli implementuje Szablon strefy, jest zwykle używany deklaratywnie i rzadko musisz utworzyć nowe wystąpienie klasy przy użyciu <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> konstruktora. Jednak jeśli dziedziczą z <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy w celu utworzenia niestandardowych strefy, może chcieć użyć konstruktora do zainicjowania niektóre z jej wartości właściwości i dostosowania jego wyglądu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje programowy użycia <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> konstruktora w niestandardowej <xref:System.Web.UI.WebControls.WebParts.CatalogZone> formantu. Konstruktor służy do inicjowania niektóre domyślne wartości właściwości dla formantu. Poniższy kod przedstawia niestandardowego <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy z konstruktorem zadeklarowany u góry. Pełny kod i musi skonfigurować i uruchomić przykład, instrukcje znajdują się sekcji przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Przegląd klasy.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie każdego <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> typu, który jest zadeklarowana w strefie.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> z odwołaniami do wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów w strefie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Metoda jest metodą krytycznych, ponieważ gdy użytkownik zmienia stronę na tryb wyświetlania katalogu, ta metoda tworzy wszystkie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które tworzą wykaz części sieci Web.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Metody w <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy pod warunkiem ze składnikami Web Part zestaw kontroli można utworzyć każdego formantu serwera, który dziedziczy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> klasy. Dlatego w przypadku utworzenia niestandardowego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli i Zadeklaruj ją na stronie w obrębie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli, ta metoda utworzy formantu, gdy użytkownik przełącza tryb katalogu strony.  
  
 Jednak z różnych powodów można kontroli nad <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metody. Można go w celu utworzenia tylko niektórych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Załóżmy na przykład, utworzyć zestaw niestandardowych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które mają spójny wygląd i muszą należeć do jednego produktu lub organizacji. Jeśli chcesz deweloperom strony ograniczone do kontrolek tych w katalogu, a następnie powinny dziedziczyć <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy, Zastąp <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metody i umożliwić metodę w celu utworzenia tylko formanty tego samego typu co Kontrolki niestandardowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formant nie ma identyfikatora.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon zawierać formantów podrzędnych w <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> formantu w formacie trwałości strony.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> Działający jako kontener dla formantów podrzędnych w strefie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> Właściwość odwołuje się do szablonu typu <xref:System.Web.UI.ITemplate> umożliwiające zawierają <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w strefie. Szablon strefy umożliwia deweloperom strony zadeklarować <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które mają być użyte w formacie trwałości, a nie programowo tworzyć wszystkie kontrolki.  
  
 Metody dostępu set dla <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> wywołaniach właściwości <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> metodę, która wymusza Kolekcja <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które są zadeklarowane w szablonie strefy na stronie, aby odświeżyć. Dzięki temu, że kolekcja formantów odwołuje się strefy pozostanie bieżącego zawsze, gdy użytkownik zmienia formanty faktycznie zadeklarowany w szablonie, na stronie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli chcesz utworzyć niestandardowy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> strefy, ale planuje utworzenie <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> steruje programowo, zamiast co umożliwia deweloperom strony zadeklarować je, możesz nie wymagają strefy Obsługa szablonów i może dziedziczyć bezpośrednio z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> Klasa.</para>
        </block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      </Docs>
    </Member>
  </Members>
</Type>