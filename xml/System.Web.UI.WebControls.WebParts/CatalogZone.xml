<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79c0c966fb9465678c7f5249f6196fa4c0aa4d5a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39812991" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Służy jako kontrolki podstawowej w formant Web Part zestawu do hostowania <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów na stronie sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ramach zestawu sterującego składników Web Part strefa jest regionu na stronie sieci Web, który zawiera formanty składników Web Part. Strefy składników Web Part jest tworzony przez formant strefy, który jest typem elementu <xref:System.Web.UI.WebControls.CompositeControl> przeznaczone do wyświetlania innych kontrolek. Podstawowe funkcje strefy są do tworzenia układu kontrolek, które zawiera i zapewnienie wspólnego interfejsu użytkownika (UI) dla tych formantów. Aby uzyskać ogólne informacje dotyczące stref, i jak są one używane w aplikacji Web Part, zobacz base <xref:System.Web.UI.WebControls.WebParts.WebZone> klasy, a [Web Part ustawić informacje o formancie](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 Kluczową funkcją formantów składników Web Part jest mogą zezwolić użytkownikom końcowym modyfikowanie (lub spersonalizować) stron sieci Web zgodnie z ich preferencje i zapisać ich spersonalizowanych ustawień dla przeglądarki przyszłych sesji. Jednym z aspektów modyfikowania strony części sieci Web obejmuje możliwość dodawania <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów lub innych formantów serwera do strony składników Web Part. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Control oferuje listy lub wykaz elementów sterujących, które użytkownicy mogą dodawać do strony.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Kontroli jest jednym z podstawowych kontrolek w zestaw formantów części sieci Web. Pochodzi od klasy <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy, a większość jego zachowanie jest dziedziczone z tej klasy. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Klasa zasadniczo dodaje do klasy bazowej Szablon strefy, która jest implementacją elementu <xref:System.Web.UI.ITemplate> interfejsu. Szablon strefy umożliwia deweloperom dodawanie w sposób deklaratywny <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty do strefy w formacie trwałości strony.  
  
> [!IMPORTANT]
>  A <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefa może zawierać tylko <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek, a z drugiej strony, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki mogą znajdować się tylko w przypadku stref, które wynikają z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy, takie jak <xref:System.Web.UI.WebControls.WebParts.CatalogZone>.  
  
 A <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli staje się widoczna tylko po użytkownik przełączy się strony sieci Web do trybu wyświetlania katalogu (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>). Katalog może zawierać kilka rodzajów <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Każdy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolka jest typem kontenera, który zawiera formanty serwera, użytkownicy mogą dodawać do strony. <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Formantów różnią się zgodnie z skąd pochodzą formantów serwera zawierają. Poniższa tabela zawiera podsumowanie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroluje dostarczone z zestaw formantów części sieci Web i dla każdego formantu, jakiego rodzaju serwera kontroluje ją zawiera.  
  
|Formant|Opis|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Przechowuje odwołania do formantów, które zostały zamknięte, na stronie. Te formanty można otworzyć ponownie (dodać z powrotem do strony) przez użytkowników.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Zawiera odwołania do formantów, które są zadeklarowane w wykazie składników Web Part w znaczniku strony sieci Web. Te formanty można dodać do strony sieci Web przez użytkowników.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Udostępnia interfejs użytkownika dla użytkownika przekazać plik definicji (plik XML z. Rozszerzenie składnika Web Part i określonym formacie, który zawiera informacje stanie) kontrolki do katalogu, tak aby kontrolka mogą być dodawane do strony sieci Web.|  
  
 Ponieważ <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasa dodaje szablon strefy zachowanie jej klasy bazowej, ma ona kilku członków. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> Konstruktor jest konstruktorem domyślnym; dzięki niemu można zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> Właściwości pobiera lub ustawia odwołanie <xref:System.Web.UI.ITemplate> obiektu, który zawiera formanty dla strefy. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Metoda ma kluczowe znaczenie. Zastępuje ona metody podstawowej, aby utworzyć zbiór wszystkich <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek znajdujących się w szablonie strefy.  
  
> [!NOTE]
>  Przyciski w <xref:System.Web.UI.WebControls.WebParts.CatalogZone> interfejsu użytkownika wymaga skryptów po stronie klienta, aby działać poprawnie. Jeśli obsługa skryptów jest wyłączone w przeglądarce, użytkownik nie będzie wykonywać akcji przy użyciu <xref:System.Web.UI.WebControls.WebParts.CatalogZone> interfejsu użytkownika.  
  
## <a name="accessibility"></a>Ułatwienia dostępu  
 Znaczników renderowania domyślny dla tej kontrolki nie mogą być zgodne ze standardami ułatwień dostępu, takich jak wskazówki o priorytecie 1 interfejsów sieci Web zawartości ułatwień dostępu wskazówki wersji 1.0 (WCAG). Aby uzyskać szczegółowe informacje o obsłudze ułatwień dostępu dla tego formantu, zobacz [kontrolki ASP.NET oraz dostępność](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie deklaracyjne i programowe <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli. Przykładowy kod ma cztery części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania strony sieci Web.  
  
-   Plik z kodem źródłowym do niestandardowego <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> formant, który jest zaimportowany przez wykaz i dodany do strony sieci Web.  
  
-   Strony sieci Web, która deklaruje i niestandardowej kontrolki użytkownika <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli.  
  
-   Wyjaśnienie sposobu uruchamiania przykładu.  
  
 Pierwsza część w tym przykładzie kodu jest kontrolki użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Wyświetlane szczegóły dotyczące trybów i opis kodu źródłowego w tym elemencie sterującym, w temacie [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web Part](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 Druga część przykład kodu zawiera kod niestandardowy <xref:System.Web.UI.WebControls.WebParts.CatalogZone> i <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Kod <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolka pokazuje, jak dziedziczyć <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy i dostosować jego właściwości, ustawiając pewne domyślne wartości właściwości w konstruktorze. Kod źródłowy również pokazano, jak utworzyć niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPart> klasę o nazwie `TextDisplayWebPart`. To jest formant skojarzony. Plik opisu składnika Web Part zostaną zaimportowane w ramach tego przykładu kodu. Po zaimportowaniu pliku opisu przy użyciu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki na stronie sieci Web będzie można dodać `TextDisplayWebPart` formantu do strony, w pełni wstępnie skonfigurowany jako określony w pliku opisu.  
  
 Aby uzyskać przykładowy kod zadziałał należy skompilować ten kod źródłowy. Można skompilować go jawnie i umieścić Wynikowy zestaw w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, gdzie go zostanie dynamicznie skompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej, więc jeśli użytkownik chce uruchomić przykład w ten sposób, nazwa pliku źródła kodu i dodaj go do podfolderu App_Code katalog główny aplikacji sieci Web. Przewodnik pokazuje obie metody kompilacji, zobacz [wskazówki: tworzenie i używanie kontrolki serwera sieci Web niestandardowego](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 Trzecia część przykładowy kod jest strony sieci Web, który zawiera formanty. Zawiera on `Register` dyrektywy dla kontrolki użytkownika, a drugi dla pliku źródłowego z formantami niestandardowymi. Należy pamiętać, że w drugą dyrektywę go nie nadaje nazwy zestawu, ponieważ przykładu nie korzysta z zestawu, używa kompilacji dynamicznej z kodem źródłowym, umieszczone w podfolderze App_Code. Strony sieci Web deklaruje <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontrolki i w ramach jego podrzędny `<zonetemplate>` elementu deklaruje <xref:System.Web.UI.WebControls.BulletedList> kontroli. Gdy jest to standardowy formant ASP.NET, będzie ono pełną funkcjonalność składników Web Part w czasie wykonywania, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować zawija dowolnej kontrolki serwera umieszczone w <xref:System.Web.UI.WebControls.WebParts.WebPartZone> za pomocą <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu, dzięki czemu innych formantów serwera mogą uczestniczyć w sieci Web Części aplikacji. Również są deklarowane w tej strefie jest niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu o nazwie `TextDisplayWebPart`. Należy zauważyć, że ten formant ma atrybut `ExportMode="All"` zadeklarowane na nim. Dzięki temu można wyeksportować. Plik opisu składnika Web Part, który zawiera wartości właściwości kontrolki, które mogą być importowane przez innych użytkowników, aby dodać formant wstępnie skonfigurowane do innych stron sieci Web.  
  
> [!NOTE]
>  Aby umożliwić użytkownikom aplikacji Web Part do wyeksportowania pliku opisu dla <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, należy również włączyć funkcję eksportu w aplikacji sieci Web, dodając `enableExport="true"` atrybutu `<webParts>` element (który jest elementem podrzędnym `<system.web>`elementu) w pliku Web.config. Eksport jest domyślnie wyłączona, dlatego jeśli jeszcze nie włączono Eksport dla aplikacji, edytować plik Web.config i zrób to teraz.  
  
 Strony sieci Web deklaruje również niestandardowej <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i znajdujący się w nim, `<zonetemplate>` element, który zawiera <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Użytkownik będzie używał tego formantu w czasie wykonywania do zaimportowania. Plik opisu składnika Web Part dla niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 Teraz można uruchamiać w przykładzie kodu. Ładowanie strony sieci Web w przeglądarce. Pierwszym krokiem jest do wyeksportowania. Plik opisu składnika Web Part dla `TextDisplayWebPart` kontroli. Kliknij przycisk menu zleceń kontrolki niestandardowej (reprezentowany przez strzałki w dół na pasku tytułu), a następnie kliknij przycisk **wyeksportować**. Postępuj zgodnie z instrukcjami, aby zapisać plik opis kontrolki. Otwórz. Opis składnika Web Part w edytorze pliku i edytować wartość właściwości tekst tytułu. Znajdź `<property>` element, który ma atrybut `name="Title"`i edytować tekst tytułu, który znajduje się między otwierającym i zamykającym `<property>` tagów. Teraz zamknij stronę sieci Web, a następnie Edytuj źródło strony w edytorze. Usuń `<aspSample:TextDisplayWebPart>` kontrolować deklaracji elementu, a następnie zapisz i zamknij plik.  
  
 Ładowanie strony sieci Web, ponownie w przeglądarce. `TextDisplayWebPart` Formantu nie powinien pojawić się, ponieważ zostały usunięte. Użyj **tryb wyświetlania** kontrolka listy rozwijanej i wybierz pozycję **katalogu** do przełączania strony na tryb katalogu. Należy zauważyć, że niestandardowej <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli pojawia się wraz z <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli. Kliknij przycisk **Przeglądaj** przycisk, aby zlokalizować. Plik opisu składnika Web Part, który został wyeksportowany do `TextDisplayWebPart` kontroli. Możesz kliknąć pozycję **przekazywanie**, zaznacz pole wyboru obok formantu zaimportowane, a kliknij **Dodaj** Aby dodać go do strony. Kliknij przycisk **Zamknij katalog** do zwrócenia strony do trybu normalnego przeglądania. Zaimportowane kontrolki powinien zostać wyświetlony na stronie, a tytuł, który pojawia się na pasku tytułu formantu powinno być tekst tytułu dodane do. Plik opisu składnika Web Part.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">Aby uzyskać działających w środowisku hostowanym. Zapotrzebowanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Wartość uprawnienia: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <block subset="none" type="overrides">
      <para>Możesz utworzyć niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy, jeśli chcesz mieć większą kontrolę nad renderowania i zachowaniem katalogu interfejsu użytkownika. Jeśli potrzebujesz zapewnić użytkownikom kontrolki możliwość dodawania <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontroluje sposób deklaratywny, a następnie mogą dziedziczyć bezpośrednio z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> klasy. Jeśli chcesz włączyć kontrolki, które mają zostać dodane w sposób deklaratywny, podejście simples jest odziedziczone <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy, ponieważ zawiera ono szablon essential strefy.  Jeśli dziedziczą z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy, można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> metody i użyj metody w celu dodania niestandardowych <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> mające na celu <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />, jeśli chcesz, większa kontrola programistyczna przez dodanie niestandardowych <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formanty do strefy .</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolka implementuje Szablon strefy, jest zwykle używany deklaratywnie i rzadko musisz utworzyć nowe wystąpienie klasy przy użyciu <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> konstruktora. Jednak jeśli dziedziczą z <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy, aby utworzyć strefę niestandardową może chcieć użyć konstruktora do zainicjowania, niektóre z jego wartości właściwości i dostosowania jego wyglądu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie programowe <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> konstruktora w niestandardowym <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli. Konstruktor jest używany do inicjowania niektóre domyślne wartości właściwości dla formantu. Poniższy kod pokazuje niestandardowy <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy za pomocą konstruktora zadeklarowana u góry. Pełny kod i instrukcje, które trzeba skonfigurować i uruchomić przykład, znajdują się w sekcji przykład w <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasa — Przegląd.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie każdej <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> typ, który jest zadeklarowany w strefie.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> z odwołaniami do wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolek w strefie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Metoda jest metodą krytyczna, ponieważ gdy użytkownik przełącza strony do trybu wyświetlania katalogu, ta metoda tworzy wszystkie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolkom, które tworzą katalog składników Web Part.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Method in Class metoda <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy, pod warunkiem ze składnikami Web Part zestawu sterującego można utworzyć dowolną kontrolkę serwera, która dziedziczy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> klasy. Dlatego utworzenie niestandardowego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli i Zadeklaruj go na stronie w obrębie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolki, ta metoda spowoduje utworzenie kontrolki po użytkownik przełącza tryb katalogu strony.  
  
 Jednak z różnych przyczyn może chcesz mieć kontrolę nad <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metody. Można go, aby utworzyć tylko niektórych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Załóżmy na przykład, możesz utworzyć zestaw niestandardowy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które spójny wygląd i należeć do jednego produktu lub organizacji. Jeśli chcesz, aby programistom stron, aby były ograniczane do korzystania z tych kontrolek niestandardowych w katalogu, a następnie powinien dziedziczyć <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy, Zastąp <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metody i umożliwić metodę tworzenia tylko formanty tego samego typu co Kontrolki niestandardowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formant nie ma identyfikatora.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon, który zawiera formanty podrzędne w ramach <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> formantu w formacie trwałości strony.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> Który działa jako kontener dla formantów podrzędnych w strefie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> Właściwości odwołuje się do szablonu typu <xref:System.Web.UI.ITemplate> używanego w celu uwzględnienia <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek w strefie. Szablon strefy umożliwia programistom stron zadeklarować <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które mają być użyte w formacie trwałości, a nie programowo tworzyć wszystkie formanty.  
  
 Metody dostępu set dla <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> wywołaniach właściwości <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> metody, która wymusza kolekcję <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które są zadeklarowane w szablonie strefy na stronie należy odświeżyć. Daje to gwarancję, że kolekcja odwołuje się strefa formantów pozostanie bieżącej, gdy użytkownik zmieni formantów faktycznie zadeklarowany w szablonie, na stronie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli chcesz utworzyć niestandardową <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> strefy, ale planowane jest utworzenie <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontroluje programowo, zamiast umożliwiając programistom stron zadeklarować je, możesz nie należy podzielić na strefy Obsługa szablonów i mogą dziedziczyć bezpośrednio z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> Klasa.</para>
        </block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      </Docs>
    </Member>
  </Members>
</Type>