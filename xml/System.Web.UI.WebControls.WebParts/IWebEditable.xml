<Type Name="IWebEditable" FullName="System.Web.UI.WebControls.WebParts.IWebEditable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c18cbb4e672593a1a3f7e4b34c2af4868f6d8261" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395235" /></Metadata><TypeSignature Language="C#" Value="public interface IWebEditable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebEditable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebEditable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebEditable" />
  <TypeSignature Language="F#" Value="type IWebEditable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs dla deweloperów, aby określić niestandardowe kontrolki edycji, które są skojarzone <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> z kontrolką.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interfejs umożliwia kojarzenie kontrolek niestandardowych <xref:System.Web.UI.WebControls.WebParts.EditorPart> z kontrolką serwera <xref:System.Web.UI.WebControls.WebParts.WebPart> — takich jak kontrolka, kontrolka użytkownika lub niestandardowa kontrolka serwera. <xref:System.Web.UI.WebControls.WebParts.IWebEditable> Kontrolki są zawarte <xref:System.Web.UI.WebControls.WebParts.EditorZone> w kontrolce, a Ta strefa z kontrolkami edycji zapewnia użytkownikom końcowym interfejs użytkownika (UI) do modyfikowania właściwości, wyglądu i zachowania w skojarzonym <xref:System.Web.UI.WebControls.WebParts.WebPart> formancie. <xref:System.Web.UI.WebControls.WebParts.EditorPart>  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> Interfejs zawiera dwóch uwidocznionych członków. <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> Właściwość umożliwia<xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolom uzyskanie odwołania do skojarzonego formantu serwera. Metoda jest używana do tworzenia wystąpienia każdej kontrolki niestandardowej <xref:System.Web.UI.WebControls.WebParts.EditorPart> skojarzonej z kontrolką serwera i zwracania ich jako kolekcji. <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>  
  
 Interfejs jest już zaimplementowany w klasie bazowej <xref:System.Web.UI.WebControls.WebParts.WebPart> , ale Domyślnie ta implementacja nie kojarzy <xref:System.Web.UI.WebControls.WebParts.WebPart> żadnych formantów niestandardowych <xref:System.Web.UI.WebControls.WebParts.EditorPart> z klasą. <xref:System.Web.UI.WebControls.WebParts.IWebEditable> Aby skojarzyć formant pochodny <xref:System.Web.UI.WebControls.WebParts.WebPart> z kontrolkami niestandardowymi <xref:System.Web.UI.WebControls.WebParts.EditorPart> <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> , można zastąpić metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zastąpić <xref:System.Web.UI.WebControls.WebParts.IWebEditable> metody interfejsu w kontrolce niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> , która następnie tworzy wystąpienie kontrolki niestandardowej <xref:System.Web.UI.WebControls.WebParts.EditorPart> , gdy kontrolka przechodzi do <xref:System.Web.UI.WebControls.WebParts.WebPart> trybu edycji.  
  
 Ten przykład ma cztery części:  
  
-   Kod klasy niestandardowej.  
  
-   Strona sieci Web, która hostuje kontrolkę niestandardową.  
  
-   Kontrolka użytkownika, która przełącza stronę do trybu edycji.  
  
-   Opis sposobu działania przykładu w przeglądarce.  
  
 Pierwszą częścią przykładu kodu jest Klasa niestandardowa `TextDisplayWebPart` . Zwróć uwagę, że klasa dziedziczy z <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy i <xref:System.Web.UI.WebControls.WebParts.IWebEditable> implementuje interfejs, <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> dostarczając określone implementacje <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> dla metody i właściwości. Zwróć również uwagę, że zagnieżdżona w `TextDisplayWebPart` klasie jest prywatną, niestandardową `TextDisplayEditorPart` klasą <xref:System.Web.UI.WebControls.WebParts.EditorPart> pochodzącą od klasy bazowej. Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Aby zapoznać się z przewodnikiem, który ilustruje obie metody [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts_IWebEditable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#1)]  
  
 Drugą częścią przykładu kodu jest strona sieci Web, która hostuje kontrolkę niestandardową. Zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.EditorZone> mimo że formant jest zadeklarowany w znaczniku strony, kontrolka niestandardowa <xref:System.Web.UI.WebControls.WebParts.EditorPart> nie musi się do niej odwoływać, ponieważ można ją dodać programowo w czasie wykonywania.  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/editorpart_overview_cs.aspx#7)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/editorpart_overview_vb.aspx#7)]  
  
 Trzecią częścią przykładu kodu jest kontrolka użytkownika, która umożliwia użytkownikowi przełączenie strony do trybu edycji. Zwróć uwagę, że kontrolka użytkownika jest przywoływana na stronie hostingu w sieci Web. Pełny opis sposobu tworzenia tej kontrolki użytkownika znajduje się w temacie [Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/displaymodeuccs.ascx#8)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/displaymodeucvb.ascx#8)]  
  
 Aby uruchomić przykład kodu, Załaduj stronę sieci Web hostingu w przeglądarce, Dodaj tekst do pola tekstowego, a następnie kliknij przycisk **Ustaw zawartość etykiety** , aby zaktualizować etykietę w kontrolce. Aby przełączyć stronę do trybu edycji, z listy rozwijanej zawierającej tryby wyświetlania wybierz opcję **Edytuj** . Aby wyświetlić interfejs użytkownika z kontrolki `TextDisplayEditorPart` niestandardowej, kliknij strzałkę listy rozwijanej `TextDisplayWebPart` w menu zlecenia, a następnie wybierz pozycję **Edytuj**. W interfejsie użytkownika edytowania można użyć listy rozwijanej zawierającej Style czcionki, aby zaktualizować styl tekstu etykiety w `TextDisplayWebPart` formancie. Musisz kliknąć **Tryb przeglądania** na liście rozwijanej tryby wyświetlania, aby powrócić do widoku normalnego i potwierdzić, że tekst w etykiecie ma teraz styl czcionki wybrany w trybie edycji.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Jeśli chcesz użyć formantów serwera, które nie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> są kontrolkami w aplikacji składniki Web Part (to oznacza, że jeśli dodasz te kontrolki <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> do strefy), a jeśli chcesz skojarzyć kontrolki niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> z takimi kontrolkami serwera, musisz Zaimplementuj <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> interfejs. Formanty <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> pochodne nie powinny implementować interfejsu, ponieważ klasa bazowa <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> już istnieje.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="iWebEditable.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję kontrolek niestandardowych <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> skojarzonych z kontrolką serwera, która <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> implementuje interfejs.</summary>
        <returns>Zawiera kolekcję kontrolek niestandardowych <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> skojarzonych z kontrolką serwera. <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda umożliwia utworzenie kolekcji wszystkich kontrolek niestandardowych <xref:System.Web.UI.WebControls.WebParts.EditorPart> skojarzonych z kontrolką niestandardową, <xref:System.Web.UI.WebControls.WebParts.WebPart> formantem lub kontrolką <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> użytkownika i zwrócenie ich jako obiektu. <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> Kontrolka Pobiera kolekcję i tworzy wystąpienia <xref:System.Web.UI.WebControls.WebParts.EditorPart> wszystkich formantów za każdym razem, gdy formant serwera przechodzi do trybu edycji. <xref:System.Web.UI.WebControls.WebParts.WebPartManager>  
  
 Zazwyczaj implementowanie tej metody w kontrolce <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardowej przez zastąpienie jej <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> metody. W metodzie utworzysz wystąpienia kontrolek niestandardowych <xref:System.Web.UI.WebControls.WebParts.EditorPart> , które chcesz skojarzyć z kontrolkami, Dodaj je <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> do obiektu, a następnie Zwróć ten obiekt. Kolekcja <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów jest następnie przypisywana <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> do właściwości <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> strefy.  
  
> [!NOTE]
>  Wszystkie <xref:System.Web.UI.WebControls.WebParts.EditorPart> dodawane do <xref:System.Web.UI.WebControls.WebParts.EditorPart> kolekcji kontrolek <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> w implementacji metody muszą mieć wartość przypisaną do jej właściwości ID. w przeciwnym razie wyjątek zostanie wygenerowany, gdy kolekcja zostanie przypisana do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje przesłonięcie <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> metody w kontrolce niestandardowej. <xref:System.Web.UI.WebControls.WebParts.WebPart> Pełny kod źródłowy wymagany do uruchomienia przykładu znajduje się w sekcji <xref:System.Web.UI.WebControls.WebParts.IWebEditable> przykład tematu Omówienie klas.  
  
 Przykład kodu zawiera obu elementów członkowskich <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfejsu. Należy zauważyć, że <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> przesłonięcie metody <xref:System.Collections.ArrayList> tworzy, aby zebrać jeden lub więcej <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek niestandardowych, <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> a następnie używa listy do utworzenia obiektu.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Obiekt, który zwraca metoda, jest tylko do odczytu i nie ma dostępnej metody do dodawania do niej poszczególnych kontrolek. <see cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" /> <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> Jednak w <see cref="T:System.Collections.ICollection" /> zastępowaniu lub implementacji metody można utworzyć inny rodzaj obiektu, taki <see cref="T:System.Collections.ArrayList" />jak,, aby zawierał wszystkie kontrolki niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> i przekazać go do konstruktora podczas tworzenia nowego <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> obiektu. . Aby zapoznać się z przykładem kodu, zapoznaj się z sekcją przykładową.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowsableObject : obj" Usage="System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu, kontrolki użytkownika lub kontrolki niestandardowej, która będzie edytowana przez <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolki.</summary>
        <value>Odwołanie do obiektu kontrolki skojarzonej z <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolką.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> Właściwość umożliwia<xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolom uzyskanie odwołania do formantów serwera, z którymi są skojarzone.  
  
 Chociaż sama właściwość jest tylko do odczytu, odwołanie do obiektu, które zwraca, umożliwia <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolowanie zmiany wartości w formancie serwera.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> jak właściwość może zostać przesłonięta w kontrolce niestandardowej. <xref:System.Web.UI.WebControls.WebParts.WebPart> Pełny kod źródłowy wymagany do uruchomienia przykładu znajduje się w sekcji <xref:System.Web.UI.WebControls.WebParts.IWebEditable> przykład tematu Omówienie klas.  
  
 Przykład kodu przesłania obu elementów członkowskich <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfejsu.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zwykle podczas implementowania <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> właściwości w formancie serwera, wystarczy zwrócić odwołanie do samego formantu serwera. W przypadku <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> klasy, ponieważ otacza formant podrzędny <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> , aby umożliwić mu działanie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> jako kontrolkę, jego implementacja właściwości zwraca odwołanie do formantu podrzędnego.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
