<Type Name="EditorZone" FullName="System.Web.UI.WebControls.WebParts.EditorZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b3b717a5e501a32ffca5417f047b09903ef48d48" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39749225" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EditorZone : System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditorZone extends System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZone" />
  <TypeSignature Language="VB.NET" Value="Public Class EditorZone&#xA;Inherits EditorZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZone : System::Web::UI::WebControls::WebParts::EditorZoneBase" />
  <TypeSignature Language="F#" Value="type EditorZone = class&#xA;    inherit EditorZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.EditorZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Służy jako kontrolki podstawowej w formant Web Part zestawu do hostowania <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantów na stronie sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ramach Web Part zestawu sterującego strefy jest złożonym formantem, obejmuje zdefiniowanych regionu na stronie sieci Web, która zawiera formanty serwera. Podstawowe funkcje strefy są do tworzenia układu kontrolek, które zawiera i zapewnienie wspólnego interfejsu użytkownika (UI) dla tych formantów. Ogólne informacje o strefach i jak są one używane w aplikacji Web Part, zobacz dokumentację odniesienia dla podstawy <xref:System.Web.UI.WebControls.WebParts.WebZone> klasy, a [Web Part ustawić informacje o formancie](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone> Kontroli jest jednym z podstawowych kontrolek w zestaw formantów części sieci Web. Kluczową cechą składników Web Part jest możliwości użytkowników końcowych, aby zmodyfikować (lub spersonalizować) stron sieci Web zgodnie z preferencjami ich i zapisywanie ich spersonalizowanych ustawień dla przeglądarki przyszłych sesji. Jednym z aspektów modyfikowania strony składników Web Part zawiera Edycja; Użytkownicy mogą edytować wygląd, układ, zachowania i inne właściwości widocznych <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Kilka kontrolek w zestaw formantów części sieci Web zapewnia funkcje edycji, w tym <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone> Kontroli staje się widoczny, gdy strona części sieci Web przechodzi do trybu edycji, a także udostępnia dostępne różne <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów, które mogą służyć do personalizacji <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. <xref:System.Web.UI.WebControls.WebParts.EditorZone> Kontroli jest bardzo podobny do jego obiektu nadrzędnego, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> klasy, z jedną kluczową różnicą: <xref:System.Web.UI.WebControls.WebParts.EditorZone> control oferuje Szablon strefy, do którego odwołuje się jego <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> właściwości. Szablon strefy dodaje możliwość deklarowanie zawartości w formacie trwałości strony. Programistom stron można umieścić <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontrolować w oznaczeniu deklaracyjnym strony sieci Web, Dodaj element podrzędny `<zonetemplate>` element i w ramach `<zonetemplate>` elementu, Dodaj deklaratywne odwołania do <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone> Kontrolka ma również metoda <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>, który zastępuje metodę podstawową w <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> klasy. Ta metoda jest niezbędna, aby <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli można utworzyć szablon strefy zawierać żadnego <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów, które są dodawane do strefy deklaratywnie.  
  
> [!NOTE]
>  Przyciski w <xref:System.Web.UI.WebControls.WebParts.EditorZone> interfejsu użytkownika wymaga skryptów po stronie klienta, aby działać poprawnie. Jeśli obsługa skryptów jest wyłączone w przeglądarce, użytkownik nie będzie wykonywać akcji przy użyciu <xref:System.Web.UI.WebControls.WebParts.EditorZone> interfejsu użytkownika.  
  
## <a name="accessibility"></a>Ułatwienia dostępu  
 Znaczników renderowania domyślny dla tej kontrolki nie mogą być zgodne ze standardami ułatwień dostępu, takich jak wskazówki o priorytecie 1 interfejsów sieci Web zawartości ułatwień dostępu wskazówki wersji 1.0 (WCAG). Aby uzyskać szczegółowe informacje o obsłudze ułatwień dostępu dla tego formantu, zobacz [kontrolki ASP.NET oraz dostępność](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje kilka deklaracyjne i programowe stosowania <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasy. Przykład tworzy strefę niestandardowy edytor, który dziedziczy z <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasy i używa go na stronie sieci Web Part.  
  
 Przykładowy kod ma trzy części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania strony sieci Web.  
  
-   Strony sieci Web, który odwołuje się do niestandardowego <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli.  
  
-   Wyjaśnienie, jak działa przykład.  
  
 Pierwsza część w tym przykładzie kodu jest kontrolki użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Aby uzyskać więcej informacji na temat wyświetlania trybów i opis kodu źródłowego w tym elemencie sterującym, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web Part](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/displaymodevb.ascx#4)]  
  
 Druga część przykładowy kod jest strony sieci Web. W górnej części strony jest `Register` dyrektywy kontrolki użytkownika. Tag kontroli użytkownika jest zadeklarowany na stronie `uc1:` prefiks dla elementu. Zwróć uwagę, poniżej `<asp:WebPartZone>` element jest `<asp:EditorZone>` element, który zawiera kilka <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek z niektórymi tagów i właściwości ustawione w celu określenia jej wyglądu i zachowania. Istnieją również wiele metod, których dostęp do różnych elementów członkowskich <xref:System.Web.UI.WebControls.WebParts.EditorZone> programistycznie sterować.  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#1)]  
  
 Podczas ładowania strony w przeglądarce, możesz wybrać **tryb edycji** na liście rozwijanej, aby przełączyć do trybu edycji. Aby wyświetlić interfejs użytkownika, można kliknąć menu zleceń (Strzałka w dół) na pasku tytułu w jednej z dwóch kontrolek i kliknij przycisk **Edytuj** na edytowanie kontrolki. Za pomocą edycji interfejsu użytkownika widoczne, możesz zobaczyć efekty zastosowania deklaracyjne i programowe <xref:System.Web.UI.WebControls.WebParts.EditorZone> składowych klasy.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Jeśli chcesz utworzyć niestandardową <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> strefy, aby uzyskać większą kontrolę nad renderowania interfejs użytkownika, można dziedziczyć bezpośrednio z <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> klasy, ile potrzebujesz zapewnić obsługę szablonu strefy dla deweloperów strony dodać <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontroluje sposób deklaratywny do strefy. W takim przypadku należy dodać wszystkie <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolki do strefy programowo. Jeśli chcesz zapewnić obsługę szablonu strefy, użytkownik powinien dziedziczyć <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> klasy.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="override this.CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZone.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wszystkie <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantów zadeklarowany w szablonie strefy w formacie trwałości strony.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> Zawierający odwołania do wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantów zadeklarowany w szablonie strefy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> Metoda zastępuje metody podstawowej, aby utworzyć tylko <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów, które są zadeklarowane w szablonie strefy. Inne <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów dodanych do strefy, które muszą zostać dodane programowo. Można to zrobić, na przykład, implementując <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfejsu w <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli. Następnie w zgodnym z przesłoniętą <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> metody, można dodać niestandardowy zbiór <xref:System.Web.UI.WebControls.WebParts.EditorPart> formanty do strefy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formant nie ma identyfikatora.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.EditorZone))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera szablon, który zawiera formanty podrzędne w ramach <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> formantu w formacie trwałości strony.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> Szablon strefy, który działa jako kontener dla formantów podrzędnych w strefie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> Właściwość jest główną różnicą między <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasy a podstawą <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> klasy. Przez dodanie obsługi Szablon strefy <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasa umożliwia programistom stron umieścić podrzędnych <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki w ramach <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli w oznaczeniu deklaracyjnym strony sieci Web. Szablon strefy działa jako kontener dla formantów podrzędnych.  
  
> [!NOTE]
>  Metody dostępu set dla <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> wywołaniach właściwości <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> metody, która wymusza kolekcję <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów zadeklarowany w szablonie, aby utworzyć ponownie. Powoduje to zmiany w treści szablonu do rozpoznany.  
  
 Aby użyć szablonu strefy deklaratywnie w ramach <xref:System.Web.UI.WebControls.WebParts.EditorZone> formantu, Dodaj parę `<zonetemplate>` tagów i odwołania <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki między tagami. Tylko jedną strefę szablonu jest renderowany na wystąpienie <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli (w związku z tym, nie ma powodu do dodawania wielu `<zonetemplate>` elementów <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli). Ponadto strefy szablonu <xref:System.Web.UI.WebControls.WebParts.EditorZone> formant może zawierać tylko formanty części, które wynikają z <xref:System.Web.UI.WebControls.WebParts.EditorPart> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie deklaratywne <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> właściwości. Pełny kod przykładu znajduje się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasa — Przegląd.  
  
 Przykład kodu demonstruje sposób <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki można umieścić w ramach `<zonetemplate>` elementu w <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli.  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce, możesz wybrać **tryb edycji** na liście rozwijanej, aby przełączyć do trybu edycji. Aby wyświetlić edycji interfejsu użytkownika (UI), można kliknąć menu zleceń (Strzałka w dół) na pasku tytułu w jednej z dwóch kontrolek i kliknij przycisk **Edytuj** na edytowanie kontrolki. Za pomocą edycji interfejsu użytkownika widoczne, możesz zobaczyć kilka <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów, które są zadeklarowane w obrębie `<zonetemplate>` elementu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      </Docs>
    </Member>
  </Members>
</Type>