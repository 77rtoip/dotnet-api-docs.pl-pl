<Type Name="EditorZone" FullName="System.Web.UI.WebControls.WebParts.EditorZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab062c9e4bc3a29c3c5a2c44f4a1f0fcb1d33aed" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386063" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EditorZone : System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditorZone extends System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZone" />
  <TypeSignature Language="VB.NET" Value="Public Class EditorZone&#xA;Inherits EditorZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZone : System::Web::UI::WebControls::WebParts::EditorZoneBase" />
  <TypeSignature Language="F#" Value="type EditorZone = class&#xA;    inherit EditorZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.EditorZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Służy jako podstawowy formantu w formancie części sieci Web, ustaw dla hostingu <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolki na stronie sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W zestawie formantu składników Web Part strefa jest złożone formant, który obejmuje zdefiniowany region na stronie sieci Web oraz zawiera kontrolki serwera. Podstawowe funkcje strefy są do określania układu kontrolek, które zawiera oraz w celu zapewnienia wspólny interfejs użytkownika (UI) dla tych kontrolek. Aby uzyskać ogólne informacje dotyczące strefy i sposób ich użycia w aplikacjach części sieci Web, zobacz dokumentację odwołania dla podstawy <xref:System.Web.UI.WebControls.WebParts.WebZone> klasy, i [omówienie zestaw kontroli części sieci Web](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone> Kontroli jest jednym z podstawowych kontrolek w zestawie formantu części sieci Web. Kluczową funkcją części sieci Web jest możliwości użytkowników końcowych, aby zmodyfikować (lub spersonalizować) stron sieci Web zgodnie z ich preferencje, a następnie zapisz ich spersonalizowanych ustawień dla przeglądarki przyszłych sesji. Modyfikowanie stron części sieci Web na jednym aspekcie obejmuje edycji; Użytkownicy mogą edytować wygląd, układ, zachowania i inne właściwości visible <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Kilka formanty w zestawie formantu części sieci Web udostępniają funkcje edycji, takie jak <xref:System.Web.UI.WebControls.WebParts.EditorZone> formantu.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone> Kontroli staje się widoczny, gdy strona części sieci Web przechodzi do trybu edycji, a jego udostępnienie różnych <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki, których można użyć do personalizacji <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. <xref:System.Web.UI.WebControls.WebParts.EditorZone> Formant jest bardzo podobny do elementu nadrzędnego, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> klasy z jednego klucza różnicą: <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontrola zapewnia szablon strefy, do którego odwołuje się jego <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> właściwości. Szablon strefy dodaje możliwość zadeklarować zawartości w formacie trwałości strony. Deweloperzy strony można umieścić <xref:System.Web.UI.WebControls.WebParts.EditorZone> określa deklaratywne znaczników strony sieci Web, Dodaj element podrzędny `<zonetemplate>` elementu i poziomu `<zonetemplate>` elementu, Dodaj deklaratywne odwołania do <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone> Formant ma również metody, <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>, która zastępuje metody podstawowej w <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> klasy. Ta metoda jest niezbędne, aby <xref:System.Web.UI.WebControls.WebParts.EditorZone> formantu można utworzyć szablon strefy zawierać żadnego <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów, które są dodawane do strefy deklaratywnie.  
  
> [!NOTE]
>  Przyciski w <xref:System.Web.UI.WebControls.WebParts.EditorZone> interfejsu użytkownika wymaga do poprawnego działania obsługi skryptów po stronie klienta. Jeśli obsługa skryptów jest wyłączone w przeglądarce, użytkownik nie będzie mogła wykonywać działania za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.EditorZone> interfejsu użytkownika.  
  
## <a name="accessibility"></a>Ułatwienia dostępu  
 Znaczników renderowania domyślnie dla tego formantu nie mogą być zgodne ze standardami ułatwień dostępu, takich jak wytyczne o priorytecie 1 interfejsów sieci Web zawartości dostępności wytyczne 1.0 (WCAG). Aby uzyskać szczegółowe informacje dotyczące obsługi ułatwień dostępu dla tego formantu, zobacz [kontrolki ASP.NET i dostępności](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano kilka deklaratywne i programowe stosowania <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasy. Przykład tworzy strefę niestandardowego edytora, która dziedziczy <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasy i używa go na stronie sieci Web Part.  
  
 Przykładowy kod ma trzy części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie sieci Web.  
  
-   Strony sieci Web, który odwołuje się do niestandardowego <xref:System.Web.UI.WebControls.WebParts.EditorZone> formantu.  
  
-   Opis działania przykładzie.  
  
 Pierwsza część w tym przykładzie kodu jest kontrola użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Aby uzyskać więcej informacji na temat wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/displaymodevb.ascx#4)]  
  
 Druga część przykładowy kod to strona sieci Web. W górnej części strony jest `Register` dyrektywy kontrolki użytkownika. Zadeklarowano tagu kontrolki użytkownika na stronie `uc1:` prefiks dla elementu. Powiadomienie który poniżej `<asp:WebPartZone>` jest element `<asp:EditorZone>` element, który zawiera kilka <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów z niektórymi tagów i właściwości ustawione, aby określić wygląd i zachowanie. Dostępne są także wiele metod, które uzyskują dostęp do różnych elementów członkowskich <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontrolować programowo.  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#1)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **trybu edycji** na liście rozwijanej, aby przełączyć do trybu edycji. Aby wyświetlić interfejs użytkownika, można kliknąć menu zleceń (Strzałka w dół) na pasku tytułu jednej z dwóch formantów i kliknij przycisk **Edytuj** można edytować formantu. Używając widoczne interfejs użytkownika, można zobaczyć skutków zastosowania deklaratywne i programowe <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasy elementów członkowskich.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Jeśli chcesz utworzyć niestandardowy <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> strefy, aby uzyskać większą kontrolę nad renderowanie interfejs użytkownika, może dziedziczyć bezpośrednio z <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> klasy, jak długo nie trzeba zapewnić obsługę szablonu strefy dla deweloperów strony dodać <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formanty do strefy deklaratywnie. W takim przypadku należy dodać wszystkie <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolki do strefy programowo. Jeśli chcesz zapewnić obsługę szablonu strefy, powinny dziedziczyć z <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> klasy.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="override this.CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZone.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wszystkie <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formanty zadeklarowany w ramach szablonu strefy w formacie trwałości strony.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> Zawiera odwołania do wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formanty zadeklarowany w szablonie strefy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> Metoda zastępuje metodę podstawową, aby utworzyć tylko <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów, które są zadeklarowane w szablonie strefy. Inne <xref:System.Web.UI.WebControls.WebParts.EditorPart> formanty dodawane do strefy, które muszą zostać dodane programowo. Można to zrobić, na przykład, implementując <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfejsu w <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Następnie w przesłoniętych <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> metody, można dodać kolekcji niestandardowe <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów do strefy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bieżący <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formant nie ma identyfikatora.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.EditorZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera szablon zawierać formantów podrzędnych w <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> formantu w formacie trwałości strony.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> Szablon strefy, który działa jako kontener dla formantów podrzędnych w strefie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> Właściwości klucza różnią się <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasy i podstawowym <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> klasy. Przez dodanie obsługi dla szablonu strefy <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasa umożliwia deweloperom strony umieść podrzędnych <xref:System.Web.UI.WebControls.WebParts.EditorPart> steruje w obrębie <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontrolki deklaratywne znaczników strony sieci Web. Szablon strefy działa jako kontener dla formantów podrzędnych.  
  
> [!NOTE]
>  Metody dostępu set dla <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> wywołaniach właściwości <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> metodę, która wymusza Kolekcja <xref:System.Web.UI.WebControls.WebParts.EditorPart> formanty zadeklarowany w szablonie do odtworzenia. Powoduje to wszelkie zmiany w zawartości szablonu, aby być rozpoznawane.  
  
 Aby użyć szablonu strefy deklaratywnie w <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontrola, dodać parę `<zonetemplate>` tagów i odwołania <xref:System.Web.UI.WebControls.WebParts.EditorPart> formanty między tagami. Strefy tylko jeden szablon jest renderowany na wystąpienie programu <xref:System.Web.UI.WebControls.WebParts.EditorZone> formantu (w związku z tym nie ma żadnego powodu, aby dodać wiele `<zonetemplate>` elementy <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli). Ponadto Szablon strefy z <xref:System.Web.UI.WebControls.WebParts.EditorZone> formant może zawierać tylko formanty części, które pochodzą z <xref:System.Web.UI.WebControls.WebParts.EditorPart> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie deklaratywne <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> właściwości. Pełny kod dla przykładu znajduje się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.EditorZone> Przegląd klasy.  
  
 Przykład kodu pokazuje, jak <xref:System.Web.UI.WebControls.WebParts.EditorPart> formanty można umieścić w `<zonetemplate>` element <xref:System.Web.UI.WebControls.WebParts.EditorZone> formantu.  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **trybu edycji** na liście rozwijanej, aby przełączyć do trybu edycji. Aby wyświetlić aplikacje do edycji interfejsu użytkownika (UI), można kliknąć menu zleceń (Strzałka w dół) na pasku tytułu jednej z dwóch formantów i kliknij przycisk **Edytuj** można edytować formantu. Używając widoczne interfejs użytkownika, można zobaczyć kilka <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów, które są zadeklarowane w `<zonetemplate>` elementu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      </Docs>
    </Member>
  </Members>
</Type>