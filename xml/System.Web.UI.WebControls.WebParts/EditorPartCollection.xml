<Type Name="EditorPartCollection" FullName="System.Web.UI.WebControls.WebParts.EditorPartCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d12dd62261c3bcbed1175eb5a7a6f0685688345" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395497" /></Metadata><TypeSignature Language="C#" Value="public sealed class EditorPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EditorPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EditorPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type EditorPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolek służącą do edycji właściwości, układu, wyglądu i <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> zachowania kontrolek. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa to <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> kolekcja formantów tylko do odczytu, zazwyczaj używana przez strefę do śledzenia zestawu <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek zawartych w strefie. <xref:System.Web.UI.WebControls.WebParts.EditorPart> <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>  
  
 Gdy strona składniki Web Part przechodzi do trybu edycji, a użytkownik wybierze kontrolkę do edycji, rozpocznie się proces edycji. Strefa tworzy nowy <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> obiekt składający się <xref:System.Web.UI.WebControls.WebParts.EditorPart> z kontrolek zawartych w strefie. Na różnych etapach procesu edycji strefa uzyskuje dostęp <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> do obiektu, aby zapisać lub pobrać wartości właściwości <xref:System.Web.UI.WebControls.WebParts.EditorPart> między kontrolkami <xref:System.Web.UI.WebControls.WebParts.WebPart> w kolekcji i aktualnie edytowanym formantem.  
  
 Można utworzyć <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> kolekcję kontrolek do użytku programistycznego, jeśli na przykład trzeba wykonać pewne operacje masowe na <xref:System.Web.UI.WebControls.WebParts.EditorPart> zestawie kontrolek. Mimo że <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> obiekt jest tylko do odczytu, można wprowadzać programistyczne zmiany właściwości podstawowych formantów, do których odwołuje się kolekcja.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje kilka zastosowania <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> klasy. Ten przykład kodu zawiera cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Klasa kontrolki niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> o nazwie `TextDisplayWebPart`, do której odwołuje się Strona sieci Web <xref:System.Web.UI.WebControls.WebParts.EditorPart> i jest edytowana przez kontrolki.  
  
-   Strona sieci Web, która odwołuje się do `TextDisplayWebPart` kontrolki, <xref:System.Web.UI.WebControls.WebParts.EditorZone> zawiera <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolkę z kilkoma kontrolkami z zestawu kontrolek składniki Web Part zadeklarowanych w strefie i zawiera kod sterowany zdarzeniami służący do tworzenia i manipulowania <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>obiekt.  
  
-   Wyjaśnienie, jak działa przykład kodu po załadowaniu go do przeglądarki.  
  
 Pierwszym elementem tego przykładu kodu jest kontrolka użytkownika, która umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Aby uzyskać szczegółowe informacje na temat trybów wyświetlania i Opis kodu źródłowego w tej kontrolce, [zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/displaymodevb.ascx#4)]  
  
 Drugą częścią przykładu kodu jest `TextDisplayWebPart` kontrolka. Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Aby zapoznać się z przewodnikiem, który ilustruje obie metody [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 Należy zauważyć, że kontrolka ma właściwość `ContentText`o nazwie; ta właściwość zawiera wartość, którą użytkownik wprowadza w polu tekstowym. Tę właściwość niestandardową można edytować, gdy kontrolka jest w trybie edycji, wraz ze <xref:System.Web.UI.WebControls.WebParts.WebPart> standardowymi właściwościami kontrolki.  
  
 [!code-csharp[WebParts_EditorPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_EditorPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 Trzecią częścią przykładu kodu jest strona sieci Web. Zauważ, że `<asp:editorzone>` element strony zawiera deklaracje dla trzech <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek. Dwie z tych kontrolek stają się częścią <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> niestandardowego obiektu, który jest tworzony `Button1_Click` podczas wykonywania metody.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#1)]  
  
 Podczas ładowania strony w przeglądarce możesz przełączyć stronę do trybu edycji, wybierając pozycję **Edytuj** w kontrolce listy rozwijanej **tryb wyświetlania** . Możesz kliknąć menu czasowniki (Strzałka w dół) na pasku `TextDisplayWebPart` tytułu kontrolki, a następnie kliknąć pozycję **Edytuj** , aby edytować formant. Gdy widoczny jest interfejs użytkownika (UI), można zobaczyć wszystkie <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki. Kliknięcie przycisku **Utwórz EditorPartCollection** umożliwia wyświetlenie efektów na <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolkach, które są tworzone przez kod, który operuje <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> na obiekcie. Należy również zauważyć, że <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> kontrolka pozwala edytować właściwość niestandardową `TextDisplayWebPart.ContentText` . Jest to możliwe, ponieważ właściwość jest oznaczona `WebBrowsable` atrybutem w kodzie źródłowym formantu. W przypadku zaktualizowania wartości właściwości w interfejsie użytkownika edycji należy zwrócić stronę do trybu przeglądania normalnego, aby zobaczyć efekt aktualizacji `TextDisplayWebPart.ContentText` właściwości.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> klasy.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje puste nowe wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor inicjuje puste wystąpienie <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> klasy. <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> To przeciążenie konstruktora jest używane wewnętrznie przez <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasę w swojej <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> metodzie do tworzenia pustego obiektu kolekcji. Następnie strefa tworzy wystąpienia wszystkich <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek zadeklarowanych w szablonie strefy podrzędnej i używa metody wewnętrznej w celu dodania ich do kolekcji.  
  
 Nie można użyć tego przeciążenia <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> konstruktora, aby utworzyć nowe <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> wystąpienie i dodać <xref:System.Web.UI.WebControls.WebParts.EditorPart> do niego kontrolki. Zamiast tego należy użyć jednego z innych przeciążeń <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> dla konstruktora.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection (System.Collections.ICollection editorParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection editorParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (editorParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection(System::Collections::ICollection ^ editorParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.EditorPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="new System.Web.UI.WebControls.WebParts.EditorPartCollection editorParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="editorParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="editorParts"><see cref="T:System.Collections.ICollection" /> Kontrolki<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> .</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> klasy przez przekazanie <see cref="T:System.Collections.ICollection" /> kolekcji <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor inicjuje wystąpienie <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> klasy i <xref:System.Web.UI.WebControls.WebParts.EditorPart> przekazuje kolekcję kontrolek. <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> Jest to jedno Przeciążenie <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> konstruktora, którego można użyć do utworzenia nowego <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> obiektu i dodania <xref:System.Web.UI.WebControls.WebParts.EditorPart> do niego kontrolek.  
  
 Mimo że <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> wystąpienie utworzone przez konstruktora jest tylko do odczytu, można nadal uzyskać dostęp do poszczególnych <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek w kolekcji programowo i wywołać ich właściwości i metody.  
  
 Typowym scenariuszem korzystania z <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> konstruktora może być wykonanie niektórych operacji wsadowych na całym <xref:System.Web.UI.WebControls.WebParts.EditorPart> zestawie formantów, takich jak zmiana zawartości, wygląd lub pozycja powiązanej grupy.  
  
 Innym typowym scenariuszem korzystania <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> z konstruktora jest tworzenie <xref:System.Web.UI.WebControls.WebParts.EditorPart> niestandardowych kontrolek, które chcesz skojarzyć z kontrolką serwera, dzięki czemu użytkownicy mogą edytować niestandardowe właściwości kontrolki. W tym scenariuszu formant serwera musi implementować <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfejs i w ramach tego zadania musi <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> implementować metodę. W tej metodzie, aby włączyć kontrolki niestandardowe <xref:System.Web.UI.WebControls.WebParts.EditorPart> do edycji formantu serwera, należy <xref:System.Web.UI.WebControls.WebParts.EditorPart> dodać kontrolki do <xref:System.Collections.ICollection> wystąpienia, takiego jak <xref:System.Collections.ArrayList> obiekt. Następnie można przekazać <xref:System.Web.UI.WebControls.WebParts.EditorPart> kolekcję formantów <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> do konstruktora, aby utworzyć nowy <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> obiekt, który jest używany przez <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> strefę w celu skonfigurowania wszystkich formantów i rozpoczęcia procesu edycji.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób tworzenia niestandardowych <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> i, nawet jeśli kolekcja jest tylko do odczytu, nadal wykonuje operację wsadową, aby zmienić poszczególne <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki w kolekcji. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> przykład omówienia klasy.  
  
 Kod `Button1_Click` w zdarzeniu <xref:System.Web.UI.WebControls.WebParts.EditorPart> <xref:System.Collections.ArrayList> tworzy obiekt, dodaje dwa z trzech formantów na stronie do obiektu, <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> a następnie tworzy nowy <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> Obiekt przy użyciu konstruktora. Przedstawiono w nim również, jak można wprowadzać zmiany w podstawowych <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolkach, nawet jeśli kolekcja jest tylko do odczytu.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 Możesz załadować stronę w przeglądarce i przełączyć ją do trybu edycji, wybierając pozycję **Edytuj** w kontrolce listy rozwijanej **tryb wyświetlania** . Możesz kliknąć menu czasowniki (Strzałka w dół) na pasku `TextDisplayWebPart` tytułu kontrolki, a następnie kliknąć pozycję **Edytuj** , aby edytować formant. Gdy widoczny jest interfejs użytkownika (UI), można zobaczyć wszystkie <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki. Kliknij przycisk **Utwórz EditorPartCollection** , aby zobaczyć wpływ na dwie <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki, które <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> są dodawane do obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection (System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, System.Collections.ICollection editorParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, class System.Collections.ICollection editorParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingEditorParts As EditorPartCollection, editorParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection(System::Web::UI::WebControls::WebParts::EditorPartCollection ^ existingEditorParts, System::Collections::ICollection ^ editorParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.EditorPartCollection : System.Web.UI.WebControls.WebParts.EditorPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="new System.Web.UI.WebControls.WebParts.EditorPartCollection (existingEditorParts, editorParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingEditorParts" Type="System.Web.UI.WebControls.WebParts.EditorPartCollection" />
        <Parameter Name="editorParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingEditorParts"><see cref="T:System.Collections.ICollection" /> Istniejących<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolek w strefie.</param>
        <param name="editorParts"><see cref="T:System.Collections.ICollection" /> Kontrolkipozastrefą<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> , ale tworzone programowo.</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> Inicjuje nowe wystąpienie klasy przez przekazanie <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> kolekcji formantów i <see cref="T:System.Collections.ICollection" /> kolekcji dodatkowych <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolek.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.EditorPart editorPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.EditorPart editorPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::EditorPart ^ editorPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.EditorPart -&gt; bool" Usage="editorPartCollection.Contains editorPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorPart" Type="System.Web.UI.WebControls.WebParts.EditorPart" />
      </Parameters>
      <Docs>
        <param name="editorPart"><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> Testowanie stanu jako elementu członkowskiego kolekcji.</param>
        <summary>Zwraca wartość wskazującą, czy dana kontrolka znajduje się w kolekcji.</summary>
        <returns>Wartość logiczna wskazująca, czy <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> znajduje się w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains%2A> określa, czy konkretna <xref:System.Web.UI.WebControls.WebParts.EditorPart> <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> kontrolka znajduje się już w obiekcie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak ustalić, czy dana <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolka znajduje się <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> w obiekcie. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> przykład omówienia klasy.  
  
 Kod w `Button1_Click` zdarzeniu nie `LayoutEditorPart1` dodaje kontrolki do obiektu, <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> gdy dodaje inne kontrolki. Aby potwierdzić, że `LayoutEditorPart1` formant nie znajduje się w kolekcji, kod <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains%2A> używa metody.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce możesz przełączyć stronę do trybu edycji, wybierając pozycję **Edytuj** w kontrolce listy rozwijanej **tryb wyświetlania** . Możesz kliknąć menu czasowniki (Strzałka w dół) na pasku `TextDisplayWebPart` tytułu kontrolki, a następnie kliknąć pozycję **Edytuj** , aby edytować formant. Gdy widoczny jest interfejs użytkownika (UI), można zobaczyć wszystkie <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki. Po kliknięciu przycisku **Utwórz EditorPartCollection** można zauważyć, że kolor `LayoutEditorPart1` tła kontrolki różni się od innych kontrolek, ponieważ <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> nie jest częścią obiektu.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.EditorPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.EditorPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As EditorPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::EditorPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.EditorPart[] * int -&gt; unit" Usage="editorPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.EditorPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> Aby można było zawierać skopiowaną kolekcję kontrolek.</param>
        <param name="index">Punkt początkowy w tablicy, w której ma zostać umieszczona zawartość kolekcji.</param>
        <summary>Kopiuje kolekcję do tablicy <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest przydatna, gdy chcesz utworzyć tablicę niestandardową, która może <xref:System.Web.UI.WebControls.WebParts.EditorPart> zawierać kontrolki w <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> obiekcie, podzbiór tych formantów lub nadzbiór tych kontrolek. <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A> metody utworzyć niestandardową <xref:System.Web.UI.WebControls.WebParts.EditorPart> tablicę kontrolek. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> przykład omówienia klasy.  
  
 Kod `Button1_Click` w zdarzeniu tworzy `LayoutEditorPart1` <xref:System.Web.UI.WebControls.WebParts.EditorPart> tablicę formantów, dodaje formant <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A> do tablicy, a następnie używa metody do kopiowania kontrolek z <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> obiektu do tablicy.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce możesz przełączyć stronę do trybu edycji, wybierając pozycję **Edytuj** w kontrolce listy rozwijanej **tryb wyświetlania** . Możesz kliknąć menu czasowniki (Strzałka w dół) na pasku `TextDisplayWebPart` tytułu kontrolki, a następnie kliknąć pozycję **Edytuj** , aby edytować formant. Gdy widoczny jest interfejs użytkownika (UI), można zobaczyć wszystkie <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki. Po kliknięciu przycisku **Utwórz EditorPartCollection** można zauważyć, że tytuły wszystkich formantów w tablicy niestandardowej są wyświetlane w dolnej części strony.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.EditorPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.EditorPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As EditorPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::EditorPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Odwołuje się do statycznego, pustego wystąpienia kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Statyczne, tylko do odczytu, puste wystąpienie <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> zmniejsza użycie pamięci w przypadkach, gdy puste wystąpienie kolekcji zwraca właściwy typ obiektu z metody lub do porównania wystąpienia z innym obiektem, ale nie trzeba dodawać elementów członkowskich do np.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.EditorPart editorPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.EditorPart editorPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::EditorPart ^ editorPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.EditorPart -&gt; int" Usage="editorPartCollection.IndexOf editorPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorPart" Type="System.Web.UI.WebControls.WebParts.EditorPart" />
      </Parameters>
      <Docs>
        <param name="editorPart">Element <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> , który jest członkiem kolekcji.</param>
        <summary>Zwraca pozycję określonego elementu członkowskiego kolekcji.</summary>
        <returns>Liczba całkowita, która odnosi się do indeksu <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolki w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest przydatna, jeśli masz wiele <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek na stronie składniki Web Part i musisz zlokalizować konkretną kontrolkę w kolekcji. <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A> jak używać metody do <xref:System.Web.UI.WebControls.WebParts.EditorPart> lokalizowania kontrolki w <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> obiekcie. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> przykład omówienia klasy.  
  
 Kod `Button1_Click` w zdarzeniu <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A> <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> tworzy obiekt, a następnie używa metody do lokalizowania `PropertyGridEditorPart1` kontrolki w kolekcji i ustawiania jej <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce możesz przełączyć stronę do trybu edycji, wybierając pozycję **Edytuj** w kontrolce listy rozwijanej **tryb wyświetlania** . Możesz kliknąć menu czasowniki (Strzałka w dół) na pasku `TextDisplayWebPart` tytułu kontrolki, a następnie kliknąć pozycję **Edytuj** , aby edytować formant. Gdy widoczny jest interfejs użytkownika (UI), można zobaczyć wszystkie <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki. Jeśli klikniesz przycisk **Utwórz EditorPartCollection** , zobaczysz, że `PropertyGridEditorPart1` formant, który znajduje się w dolnej części strony, ma tytuł, ale bez obramowania.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As EditorPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPart ^ default[int] { System::Web::UI::WebControls::WebParts::EditorPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.EditorPart" Usage="System.Web.UI.WebControls.WebParts.EditorPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks określonego <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> w kolekcji.</param>
        <summary>Zwraca określony element członkowski kolekcji zgodnie z unikatowym identyfikatorem.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> O określonym indeksie w kolekcji.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
