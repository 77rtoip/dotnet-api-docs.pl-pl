<Type Name="EditorPart" FullName="System.Web.UI.WebControls.WebParts.EditorPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b176f13c1222d058097c2da0799e9bdd040fbd4d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395571" /></Metadata><TypeSignature Language="C#" Value="public abstract class EditorPart : System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorPart extends System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EditorPart&#xA;Inherits Part" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorPart abstract : System::Web::UI::WebControls::WebParts::Part" />
  <TypeSignature Language="F#" Value="type EditorPart = class&#xA;    inherit Part" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.Part</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Służy jako klasa bazowa dla kontrolek, które znajdują <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> się w strefach i są <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> używane do edytowania kontrolek.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa zawiera podstawowy zestaw właściwości i metod, które są używane przez kontrolki pochodne <xref:System.Web.UI.WebControls.WebParts.EditorPart> dostarczone z zestawem kontrolek składniki Web Part i formantami niestandardowymi <xref:System.Web.UI.WebControls.WebParts.EditorPart>. <xref:System.Web.UI.WebControls.WebParts.EditorPart> Kontrolka umożliwia użytkownikowi edytowanie powiązanej <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, modyfikując jej układ, wygląd, właściwości, zachowanie lub inne cechy. <xref:System.Web.UI.WebControls.WebParts.EditorPart>  
  
 Interfejs użytkownika (UI), który składa się ze <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> stref zawierających <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki, jest wyświetlany po przejściu strony sieci Web w tryb edycji.  
  
> [!NOTE]
>  Kontrolka może być używana tylko w obrębie strefy, która dziedziczy <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> z <xref:System.Web.UI.WebControls.WebParts.EditorZone> klasy, takiej jak kontrolka. <xref:System.Web.UI.WebControls.WebParts.EditorPart>  
  
 Po przejściu strony w tryb edycji użytkownik może wybrać <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkę do edycji, klikając polecenie Edytuj zlecenie w menu czasowniks zaznaczonej kontrolki. Jednocześnie można <xref:System.Web.UI.WebControls.WebParts.WebPart> edytować tylko jedną kontrolkę.  
  
 Do zestawu <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów składniki Web Part są dostarczane kilka formantów pochodnych, jak wymieniono w poniższej tabeli. Te kontrolki zapewniają wszystkie możliwości edytowania, które są niezbędne dla większości aplikacji. Typowym podejściem do używania tych formantów na stronie składniki Web Part jest zadeklarować je w formacie trwałości strony w obrębie `<zonetemplate>` elementu, gdzie `<zonetemplate>` jest elementem `<asp:editorzone>` podrzędnym elementu. Przykładowy kod można znaleźć w sekcji przykład w tym temacie.  
  
|Typ formantu|Opis|  
|---------------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.AppearanceEditorPart>|Edytuje wygląd skojarzonej kontrolki, w tym właściwości, takie jak tekst tytułu, wysokość, Szerokość i atrybuty obramowania.|  
|<xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart>|Edytuje pewne zachowania powiązanej kontrolki, na przykład czy można ją edytować, czy można ją zamknąć, czy można przenieść do innej strefy. Ta kontrolka jest widoczna tylko na stronie, gdy kontrolka jest edytowana w zakresie współużytkowanych personalizacji.|  
|<xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>|Edytuje atrybuty układu skojarzonej kontrolki, na przykład czy znajduje się w normalnym lub zminimalizowanym stanie (zwiniętym) i jakie strefy, w której jest umieszczane.|  
|<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>|Edytuje właściwości skojarzonej kontrolki, jeśli te właściwości zostały zadeklarowane w kodzie źródłowym przy `WebBrowsable` użyciu atrybutu.|  
  
> [!NOTE]
>  Aby ulepszyć ułatwienia dostępu, <xref:System.Web.UI.WebControls.WebParts.EditorPart> wszystkie kontrolki podane w składniki Web Part zestaw kontrolek są renderowane `<fieldset>` w obrębie elementu. Element grupuje powiązany zestaw kontrolek używany do edycji w danym <xref:System.Web.UI.WebControls.WebParts.EditorPart> formancie i ułatwia nawigację z kartami między tymi kontrolkami zarówno dla agentów użytkownika wizualnego (takich jak zwykłe przeglądarki sieci Web), jak i agentów użytkowników zorientowanych na mowę `<fieldset>` (na przykład oprogramowanie do czytania ekranu).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje deklaratywne i programistyczne korzystanie <xref:System.Web.UI.WebControls.WebParts.EditorPart> z kontrolek. Ten przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web zawierająca <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontrolkę z kilkoma <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolkami z zestawu kontrolek składniki Web Part zadeklarowanych w strefie oraz odwołaniem do kontrolki niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> .  
  
-   Klasa, która zawiera kontrolkę <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardową, i <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolkę niestandardową służącą <xref:System.Web.UI.WebControls.WebParts.WebPart> do edytowania właściwości w formancie.  
  
-   Wyjaśnienie, jak działa przykład podczas ładowania strony w przeglądarce.  
  
 Pierwszym elementem tego przykładu kodu jest kontrolka użytkownika, która umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Aby uzyskać szczegółowe informacje na temat trybów wyświetlania i Opis kodu źródłowego w tej kontrolce, [zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 [!code-aspx-csharp[WebParts_EditorPart_Overview#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/displaymodecs.ascx#14)]
 [!code-aspx-vb[WebParts_EditorPart_Overview#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/displaymodevb.ascx#14)]  
  
 Drugą częścią przykładu kodu jest strona sieci Web. Zawiera odwołanie deklaracyjne do <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontrolki, z elementem podrzędnym `<zonetemplate>` , który zawiera deklaratywne odwołania do dwóch formantów składniki Web Part zestawu <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek. Strona odwołuje się również do <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki niestandardowej, `Register` przy użyciu dyrektywy zestawu i `<aspSample:TextDisplayWebPart>` elementu formantu.  
  
 [!code-aspx-csharp[WebParts_EditorPart_Overview#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/editorpart_overview_cs.aspx#12)]
 [!code-aspx-vb[WebParts_EditorPart_Overview#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/editorpart_overview_vb.aspx#12)]  
  
 Trzecią częścią przykładu kodu jest Klasa <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardowa `TextDisplayWebPart`o nazwie. Klasa implementuje <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfejs. W tej klasie jest zagnieżdżona, prywatna Klasa, która zawiera kod klasy prywatnej <xref:System.Web.UI.WebControls.WebParts.EditorPart> skojarzonej `TextDisplayWebPart` z klasą i nazwaną `TextDisplayEditorPart`. W czasie wykonywania `TextDisplayWebPart` , gdy kontrolka przechodzi do trybu edycji, `TextDisplayWebPart.CreateEditorParts` w metodzie `TextDisplayEditorPart` tworzy wystąpienie klasy i wyświetla go w <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontrolce wraz z innymi <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolkami.  
  
 [!code-csharp[WebParts_EditorPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts_EditorPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#1)]  
  
 Załaduj stronę w przeglądarce i w kontrolce **tryb wyświetlania** wybierz **tryb edycji** , aby przełączyć się do trybu edycji. Kliknij menu czasowniki (Strzałka w dół) na pasku `TextDisplayWebPart` tytułu kontrolki, a następnie kliknij przycisk **Edytuj** , aby edytować formant. Gdy interfejs użytkownika edytowania jest widoczny, można zobaczyć trzy <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki, w tym niestandardowy, który umożliwia `TextDisplayWebPart.FontStyle` Edytowanie właściwości. Jeśli wprowadzisz pewne zmiany w interfejsie użytkownika edycji i klikniesz przycisk **Zastosuj** , możesz użyć kontrolki lista rozwijana, aby zwrócić stronę do trybu przeglądania i zobaczyć pełen efekt edycji.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Aby utworzyć kontrolkę <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> niestandardową, należy zastąpić dwie ważne metody. Metoda stosuje zmiany wprowadzone w kontrolce edytora <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> do edytowanej kontrolki. <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" /> Metoda pobiera bieżące wartości <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> edytowanego formantu, tak aby formant edytora mógł je edytować. <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" /> Korzystając z tych dwóch metod krytycznych, uzyskasz i ustawisz wartości między kontrolką niestandardową <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> i kontrolki, którą edytujesz.  
  
Jeśli pochodzi z <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> klasy do tworzenia niestandardowych kontrolek edytora, możesz dodać niestandardowe kontrolki <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> do strefy przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> implementację <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> interfejsu w kontrolce, kontrolce użytkownika lub kontrolce serwerowej. Aby uzyskać więcej informacji i przykład kodu, zobacz <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> Omówienie klasy. Ponadto przykład kodu w sekcji przykład ilustruje sposób implementacji <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> w kontrolce niestandardowej. <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /></para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Omówienie personalizacji składniki Web Part</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorPart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EditorPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje klasę do użycia przez wystąpienie klasy dziedziczonej. Ten konstruktor może być wywoływany tylko przez dziedziczoną klasę.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyChanges">
      <MemberSignature Language="C#" Value="public abstract bool ApplyChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ApplyChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ApplyChanges () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ApplyChanges();" />
      <MemberSignature Language="F#" Value="abstract member ApplyChanges : unit -&gt; bool" Usage="editorPart.ApplyChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje wartości w <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolce do odpowiednich właściwości w skojarzonym <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formancie.</summary>
        <returns><see langword="true" />Jeśli akcja zapisywania wartości z <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantu <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> do kontrolki zakończy się pomyślnie; w przeciwnym razie (Jeśli wystąpi błąd), <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą krytyczną <xref:System.Web.UI.WebControls.WebParts.EditorPart> dla kontrolki. <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> Jest definiowana jako metoda abstrakcyjna w <xref:System.Web.UI.WebControls.WebParts.EditorPart> klasie i musi być implementowana przez dziedziczone kontrolki. Celem metody jest zapisanie wartości wprowadzonych przez użytkownika w <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolce do odpowiednich właściwości <xref:System.Web.UI.WebControls.WebParts.WebPart> w kontrolce <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> , do której odwołuje się właściwość.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> Metoda jest wywoływana, gdy użytkownik kliknie przycisk reprezentujący wyrażenie "OK" lub "Zastosuj czasownik" w edycji interfejsu użytkownika (UI).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób implementacji <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> metody w kontrolce niestandardowej. <xref:System.Web.UI.WebControls.WebParts.EditorPart> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.EditorPart> przykład omówienia klasy.  
  
 W pierwszej części przykładu kodu zademonstrowano implementację <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> metody w klasie niestandardowej <xref:System.Web.UI.WebControls.WebParts.EditorPart> o nazwie `TextDisplayEditorPart`. Ta metoda pobiera odwołanie do skojarzonego `TextDisplayWebPart` formantu <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> przy użyciu właściwości. Następnie aktualizuje wartość `TextDisplayWebPart.FontStyle` właściwości.  
  
 [!code-csharp[WebParts_EditorPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#5)]
 [!code-vb[WebParts_EditorPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#5)]  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> Druga część przykładu kodu pokazuje, `TextDisplayWebPart`jak skojarzona kontrolka, tworzy kolekcję skojarzonych <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek (w tym przypadku istnieje tylko jeden <xref:System.Web.UI.WebControls.WebParts.EditorPart> formant o nazwie `TextDisplayEditorPart` w kolekcji) w jego implementacja <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> metody. Ta metoda jest wykonywana, gdy `TextDisplayWebPart` kontrolka przechodzi do trybu edycji.  
  
 [!code-csharp[WebParts_EditorPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_EditorPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Klasa, która dziedziczy z <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> klasy, musi <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" /> implementować metodę. Zaimplementowana Metoda pobiera odwołanie do skojarzonego formantu przy użyciu <see cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" /> właściwości, a następnie aktualizuje właściwości tej kontrolki wartościami bieżącymi <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> w kontrolce.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public virtual bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.Display" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.EditorPart.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kontrolka ma być wyświetlana, gdy jej skojarzony <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant jest w trybie edycji.</summary>
        <value>Wartość logiczna wskazująca, czy kontrolka ma być wyświetlana. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W określonych punktach w procesie edycji strefa, która zawiera <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolkę, <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> sprawdza właściwość, aby określić, czy kontrolka ma być wyświetlana.  
  
 Istnieją dwa scenariusze, w <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> których zwracana `false` jest właściwość, <xref:System.Web.UI.WebControls.WebParts.EditorPart> a kontrolka nie jest wyświetlana. Pierwszy scenariusz występuje, gdy edytowany formant jest <xref:System.Web.UI.WebControls.WebParts.ProxyWebPart> kontrolką. Drugi scenariusz występuje <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> `true`, gdy edytowana kontrolka ma właściwości i <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> ma ustawioną wartość, natomiast zakres personalizacji strony jest ustawiany na poziomie użytkownika.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Omówienie personalizacji składniki Web Part</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayTitle : string" Usage="System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który zawiera tekst tytułu wyświetlany na pasku <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> tytułu kontrolki.</summary>
        <value>Ciąg, który reprezentuje kompletny, widoczny tytuł formantu. Wartość domyślna to obliczony ciąg specyficzny dla kultury dostarczany przez .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca bieżącą wartość właściwości podstawowej <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> lub, jeśli formant nie ma tytułu, obliczoną wartość. <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> Obliczona wartość składa się z lokalizowalnego ciągu zasobów dla kontrolek bez tytułu. W przypadkach, gdy żadna wartość nie jest przypisana <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> do właściwości, wartość <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> właściwości różni się od <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> właściwości.  
  
 Ponieważ właściwość została zaprojektowana jako tylko do odczytu, obliczona właściwość w celu uzyskania rzeczywistej bieżącej wartości wyświetlanego tytułu w czasie wykonywania, nie należy podejmować próby użycia tej właściwości w celu ustawienia tytułu <xref:System.Web.UI.WebControls.WebParts.EditorPart> dla kontrolki. <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> Aby ustawić tytuł, użyj właściwości bazowej <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="editorPart.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera bieżący stan <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> strefy nadrzędnej kontrolki.</summary>
        <returns>Ma bieżący stan <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> strefy<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />zawierającejformant. <see cref="T:System.Collections.IDictionary" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca informacje o stanie strefy <xref:System.Web.UI.WebControls.WebParts.EditorPart> zawierającej formant. <xref:System.Web.UI.WebControls.WebParts.EditorPart.GetDesignModeState%2A> Informacje o stanie są zwracane w postaci słownika.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState" />
        <altmember cref="M:System.Web.UI.Control.GetDesignModeState" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="editorPart.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oprócz wywoływania metody <xref:System.Web.UI.Control.OnPreRender%2A> <xref:System.Web.UI.WebControls.WebParts.EditorPart.OnPreRender%2A> bazowej Metoda sprawdza <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> również właściwość. Jeśli wartość jest `false`, co oznacza, że kontrolka nie powinna być wyświetlana, <xref:System.Web.UI.Control.Visible%2A> wówczas właściwość jest również ustawiana `false`na.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> Zawiera<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolkę. <see langword="null" /></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="editorPart.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data"><see cref="T:System.Collections.IDictionary" /> Zawierający dane stanu do wyświetlania strefy.</param>
        <summary>Stosuje charakterystykę stanu trybu projektowania do bieżącej <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> strefy, która <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> zawiera kontrolkę.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SyncChanges">
      <MemberSignature Language="C#" Value="public abstract void SyncChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SyncChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SyncChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SyncChanges();" />
      <MemberSignature Language="F#" Value="abstract member SyncChanges : unit -&gt; unit" Usage="editorPart.SyncChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartości właściwości z <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki skojarzonej <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą krytyczną <xref:System.Web.UI.WebControls.WebParts.EditorPart> dla kontrolki. <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> Jest definiowana jako metoda abstrakcyjna w <xref:System.Web.UI.WebControls.WebParts.EditorPart> klasie i musi być implementowana przez dziedziczone kontrolki. Celem metody jest pobranie bieżących wartości z <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, do której odwołuje <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> się właściwość, i <xref:System.Web.UI.WebControls.WebParts.EditorPart> zaktualizowanie pól w kontrolce tymi wartościami, aby użytkownik mógł je edytować.  
  
 Metoda jest wywoływana za każdym razem, gdy wartości w <xref:System.Web.UI.WebControls.WebParts.WebPart> skojarzonym formancie mogły zostać zmienione. <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> Dla każdej <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> strefa, która <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> zawiera kontrolkę, wywołuje metodę natychmiast po wywołaniu <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> metody, tak aby wartości w <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolce były zawsze synchronizowane z wartościami w skojarzona <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka. Innym przypadkiem, <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> gdy wywoływana jest metoda, jest <xref:System.Web.UI.WebControls.WebParts.WebPart> , gdy kontrolka przechodzi do trybu edycji.  
  
> [!NOTE]
>  Metoda nie jest wywoływana <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> po metodzie, jeśli ta metoda zwróci `false`metodę, ponieważ w takim przypadku Wystąpił błąd. <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób implementacji <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> metody w kontrolce niestandardowej. <xref:System.Web.UI.WebControls.WebParts.EditorPart> Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.EditorPart> przykład omówienia klasy.  
  
 W pierwszej części przykładu kodu zademonstrowano implementację <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> metody w klasie niestandardowej <xref:System.Web.UI.WebControls.WebParts.EditorPart> o nazwie `TextDisplayEditorPart`. Ta metoda pobiera odwołanie do skojarzonego `TextDisplayWebPart` formantu <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> przy użyciu właściwości. Następnie pobiera wartość `TextDisplayWebPart.FontStyle` właściwości i aktualizuje element wybrany w kontrolce listy rozwijanej (przywoływany `TextDisplayEditorPart.PartContentFontStyle` przez właściwość) w kontrolce niestandardowej <xref:System.Web.UI.WebControls.WebParts.EditorPart> .  
  
 [!code-csharp[WebParts_EditorPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#6)]
 [!code-vb[WebParts_EditorPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#6)]  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> Druga część przykładu kodu pokazuje, `TextDisplayWebPart`jak skojarzona kontrolka, tworzy kolekcję skojarzonych <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolek (w tym przypadku istnieje tylko jeden <xref:System.Web.UI.WebControls.WebParts.EditorPart> formant o nazwie `TextDisplayEditorPart` w kolekcji) w jego implementacja <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> metody. Ta metoda jest wykonywana, gdy `TextDisplayWebPart` kontrolka przechodzi do trybu edycji.  
  
 [!code-csharp[WebParts_EditorPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_EditorPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Klasa, która dziedziczy z <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> klasy, musi <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" /> implementować metodę. Zaimplementowana Metoda pobiera odwołanie do skojarzonego formantu przy użyciu <see cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" /> właściwości, a następnie <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> aktualizuje formant z wartościami właściwości ze skojarzonego <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartManager As WebPartManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManager ^ WebPartManager { System::Web::UI::WebControls::WebParts::WebPartManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartManager : System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.EditorPart.WebPartManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki skojarzonej z bieżącą stroną sieci Web.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> strony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka wymaga odwołania do wystąpienia, <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ponieważ musi sprawdzić bieżący zakres personalizacji strony, aby <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> określić wartość właściwości. <xref:System.Web.UI.WebControls.WebParts.EditorPart> Zakres personalizacji jest określany przez <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> sprawdzenie właściwości, która jest dostępna <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> za pomocą właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToEdit As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToEdit { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartToEdit : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki, która jest aktualnie edytowana.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Jest to obecnie w trybie edycji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka (lub inny serwer lub kontrolka użytkownika), które są obecnie edytowane, odpowiada wartości <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> właściwości. <xref:System.Web.UI.WebControls.WebParts.WebPart> Jednocześnie można <xref:System.Web.UI.WebControls.WebParts.WebPart> edytować tylko jedną kontrolkę, a gdy kontrolka jest w trybie edycji <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> , właściwość zawiera odwołanie do tej kontrolki.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> <xref:System.Web.UI.WebControls.WebParts.EditorPart> Po dodaniu kontrolki do kolekcji formantów przez strefęprzypiszeonadowłaściwościformantu.<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> <xref:System.Web.UI.WebControls.WebParts.EditorPart>  
  
 Kontrolka<xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> używa właściwości szczególnie w jej dwóch metodach krytycznych--i <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A>--do pobierania i ustawiania wartości właściwości w skojarzonym formancie. <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> <xref:System.Web.UI.WebControls.WebParts.EditorPart>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.EditorZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.Zone" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Zone As EditorZoneBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::EditorZoneBase ^ Zone { System::Web::UI::WebControls::WebParts::EditorZoneBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zone : System.Web.UI.WebControls.WebParts.EditorZoneBase" Usage="System.Web.UI.WebControls.WebParts.EditorPart.Zone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> strefy <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> zawierającej formant.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> , Który zawiera kontrolkę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że <xref:System.Web.UI.WebControls.WebParts.EditorPart> właściwość jest tylko do odczytu, zawiera odwołanie do obiektu strefy, który zawiera kontrolkę i można programowo zmienić wartości właściwości w samej strefie. <xref:System.Web.UI.WebControls.WebParts.EditorPart.Zone%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
