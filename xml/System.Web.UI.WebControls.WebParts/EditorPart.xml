<Type Name="EditorPart" FullName="System.Web.UI.WebControls.WebParts.EditorPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc8deefbeb0a0c09124504aa52429afb5cbbd874" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688811" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EditorPart : System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorPart extends System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EditorPart&#xA;Inherits Part" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorPart abstract : System::Web::UI::WebControls::WebParts::Part" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.Part</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Służy jako klasa bazowa dla kontrolek, które znajdują się w <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> strefy i są używane do edycji <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart> Klasa udostępnia podstawowego zestawu właściwości i metod, które są używane przez pochodnej <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontroli, podana przy użyciu zestawu kontroli części sieci Web i przez niestandardowe <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki. <xref:System.Web.UI.WebControls.WebParts.EditorPart> Kontroli umożliwia użytkownikom edytowanie skojarzony <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, modyfikując jego układ wygląd, właściwości, zachowanie albo inne właściwości.  
  
 Edytowanie interfejsu użytkownika (UI), która składa się z <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> stref, które zawierają <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki, zostanie wyświetlony po stronie sieci Web przechodzi do trybu edycji.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.EditorPart> Formantu można używać tylko w strefie, która jest pochodną <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> klas, takich jak <xref:System.Web.UI.WebControls.WebParts.EditorZone> formantu.  
  
 Po stronie został przełączony w tryb edycji, użytkownik może wybrać <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu, aby edytować, klikając Zlecenie edycji w menu zleceń zaznaczonego formantu. Tylko jeden <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu można edytować w czasie.  
  
 Kilka pochodnych <xref:System.Web.UI.WebControls.WebParts.EditorPart> formanty są dostarczane przy użyciu zestawu kontroli części sieci Web wymienionych w poniższej tabeli. Te elementy sterujące udostępniają wszystkie funkcje edycji, które są niezbędne w przypadku większości aplikacji. Typowa metoda za pomocą tych kontrolek na stronie sieci Web Part jest aby zadeklarować je w formacie trwałości strony `<zonetemplate>` elementu, gdzie `<zonetemplate>` jest elementem podrzędnym `<asp:editorzone>` elementu. Na przykład kod zobacz sekcję przykład tego tematu.  
  
|Typ formantu|Opis|  
|---------------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.AppearanceEditorPart>|Edytuje wyglądu formantu skojarzony, łącznie z właściwości, takie jak tytuł, wysokość, szerokość i atrybuty krawędzi.|  
|<xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart>|Służy do edytowania niektórych zachowań skojarzonym formancie, na przykład tego, czy można edytować, czy może zostać zamknięty lub czy mogą być przenoszone do innej strefy. Ten formant jest widoczny na stronie tylko w przypadku, gdy formant jest edytowany w wspólnego zakresu personalizacji.|  
|<xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>|Zmiany atrybutów układu skojarzonym formancie, takie jak czy jest w stanie normalnym lub w trybie zminimalizowanym (zwinięte) i co strefy są umieszczane w.|  
|<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>|Umożliwia edycję właściwości skojarzonym formancie, jeśli te właściwości zostały zgłoszone w kodzie źródłowym z `WebBrowsable` atrybutu.|  
  
> [!NOTE]
>  W celu zwiększenia dostępności, wszystkie <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki wprowadzone w części sieci Web zestaw kontroli są renderowane w `<fieldset>` elementu. `<fieldset>` Element grupuje pokrewne zbiór kontrolek używanych do edycji w danym <xref:System.Web.UI.WebControls.WebParts.EditorPart> formant który ułatwia kartach nawigacji między tych kontrolek dla agentów użytkownika wizualne (takie jak zwykłe przeglądarki sieci Web) i agenci mowy ukierunkowane na użytkownika (na przykład oprogramowanie odczytywania zawartości ekranu).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje deklaratywne i programowy użycia <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki. Ten przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strony sieci Web, który zawiera <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli z kilku <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów z formantu części sieci Web zestawu zadeklarowane w strefie, a odwołania do niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu.  
  
-   Klasa, która zawiera niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli i niestandardowej <xref:System.Web.UI.WebControls.WebParts.EditorPart> formant do edytowania właściwości w <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu.  
  
-   Opis działania przykładzie podczas ładowania strony w przeglądarce.  
  
 Pierwsza część w tym przykładzie kodu jest kontrola użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Aby uzyskać szczegółowe informacje dotyczące wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_EditorPart_Overview#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/displaymodecs.ascx#14)]
 [!code-aspx-vb[WebParts_EditorPart_Overview#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/displaymodevb.ascx#14)]  
  
 Druga część przykładowy kod jest strony sieci Web. Zawiera ona deklaratywne odwołanie do <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli z elementem podrzędnym `<zonetemplate>` element, który zawiera deklaratywne odwołania do dwóch składników Web Part zestaw kontroli <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów. Strona również odwołuje się do niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować za pomocą `Register` dyrektywy dla zestawu i `<aspSample:TextDisplayWebPart>` element formantu.  
  
 [!code-aspx-csharp[WebParts_EditorPart_Overview#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/editorpart_overview_cs.aspx#12)]
 [!code-aspx-vb[WebParts_EditorPart_Overview#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/editorpart_overview_vb.aspx#12)]  
  
 Trzeci część przykładowy kod jest niestandardowy <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy o nazwie `TextDisplayWebPart`. Implementuje klasy <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfejsu. W ramach tej klasy jest zagnieżdżony, prywatnego klasy, która zawiera kod prywatnej <xref:System.Web.UI.WebControls.WebParts.EditorPart> skojarzonej z klasy `TextDisplayWebPart` klasy o nazwie `TextDisplayEditorPart`. W czasie wykonywania, jako `TextDisplayWebPart` formant przechodzi do trybu edycji, w jego `TextDisplayWebPart.CreateEditorParts` metody, tworzy wystąpienie `TextDisplayEditorPart` klasy i wyświetla go w <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontroli oraz innych <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki.  
  
 [!code-csharp[WebParts_EditorPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts_EditorPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#1)]  
  
 Ładowanie strony w przeglądarce, a na **tryb wyświetlania** sterowania, wybierz opcję **trybu edycji** Aby przełączyć do trybu edycji. Kliknij menu zleceń (Strzałka w dół) w pasku tytułu `TextDisplayWebPart` kontroli, a następnie kliknij przycisk **Edytuj** można edytować formantu. Gdy interfejs użytkownika jest widoczna, zostanie wyświetlony trzy <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki, w tym niestandardowych umożliwia edytowanie `TextDisplayWebPart.FontStyle` właściwości. Niektóre zmiany wprowadzone w pliku edycji interfejsu użytkownika i kliknij przycisk **Zastosuj** przycisk, można użyć formantu listy rozwijanej aby powrócić do strony, aby tryb przeglądania i zobaczyć efekt pełne edycję.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Aby utworzyć niestandardowy <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontroli, konieczne jest przesłonięcie dwie metody ważne. <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" /> Metody stosuje zmiany wprowadzone w kontrolce edytora <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolować edytowany. <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" /> Metoda pobiera bieżące wartości <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolowanie edycji tak, aby je edytować kontrolce edytora. Za pomocą następujących dwóch metod krytycznych, pobieranie i ustawianie wartości między niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> kontroli i <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli jest jego edycji.  
  
 Jeśli pochodzi od <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> klasa do tworzenia edytora niestandardowego formantów, można dodać własne kontrolki <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> strefy zaimplementowanie <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> interfejsu w <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu, kontrolkę użytkownika lub kontrolki serwera. Dalsze szczegółowe informacje i przykładowego kodu, zobacz <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> Przegląd klasy. Ponadto przykładowy kod w sekcji przykład pokazuje, jak zaimplementować <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> w niestandardowej <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorPart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EditorPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje klasę do użycia przez odziedziczone wystąpienie klasy. Ten konstruktor można wywołać tylko przez odziedziczoną klasę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChanges">
      <MemberSignature Language="C#" Value="public abstract bool ApplyChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ApplyChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ApplyChanges () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ApplyChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje wartości w <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantu do odpowiednich właściwości w skojarzonym <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <returns>
          <see langword="true" /> Jeśli akcja zapisywania wartości z <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formant <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli powiodło się; w przeciwnym razie (Jeśli wystąpi błąd), <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> Metoda jest metodą krytyczne na <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu. Jest on zdefiniowany jako metoda abstrakcyjna w <xref:System.Web.UI.WebControls.WebParts.EditorPart> klasy, a musi być implementowana przez formanty dziedziczone. Metoda ma na celu zapisania wartości, użytkownik wprowadził do <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu do odpowiednich właściwości w <xref:System.Web.UI.WebControls.WebParts.WebPart> formant, który odwołuje się do <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> Metoda jest wywoływana, gdy użytkownik kliknie przycisk reprezentujący OK lub Zastosuj Zlecenie edycji interfejsu użytkownika (UI).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wdrożyć <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> w niestandardowej metody <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.EditorPart> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia implementację <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> w niestandardowej metody <xref:System.Web.UI.WebControls.WebParts.EditorPart> klasy o nazwie `TextDisplayEditorPart`. Ta metoda pobiera odwołanie do skojarzonego `TextDisplayWebPart` kontrolować za pomocą <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> właściwości. Następnie aktualizuje wartość `TextDisplayWebPart.FontStyle` właściwości.  
  
 [!code-csharp[WebParts_EditorPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#5)]
 [!code-vb[WebParts_EditorPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#5)]  
  
 Drugiej części przykładowy kod przedstawia sposób skojarzony <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, `TextDisplayWebPart`, tworzy kolekcję skojarzone <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów (w tym przypadku jest tylko jeden <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu o nazwie `TextDisplayEditorPart` w kolekcji) w Implementacja <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> metody. Ta metoda jest wykonywana po `TextDisplayWebPart` formant przechodzi do trybu edycji.  
  
 [!code-csharp[WebParts_EditorPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_EditorPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Klasa, która pochodzi z <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> musi implementować klasę <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" /> metody. Implementowana metoda pobiera odwołanie do skojarzonego formantu przy użyciu <see cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" /> właściwości, a następnie aktualizuje właściwości formantu bieżącymi wartościami w <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantu.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public virtual bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.Display" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Display { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant ma być wyświetlany, gdy jego skojarzony <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant jest w trybie edycji.</summary>
        <value>Wartość logiczna wskazująca, czy formant ma być wyświetlany. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W niektórych punktów edycji przetwarzać, strefy, która zawiera <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolować kontroli <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> właściwości w celu określenia, czy ma być wyświetlany w formancie.  
  
 Istnieją dwa scenariusze, w którym <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> zwraca `false` i <xref:System.Web.UI.WebControls.WebParts.EditorPart> formant nie jest wyświetlany. Pierwszy scenariusz występuje, gdy formant edycji <xref:System.Web.UI.WebControls.WebParts.ProxyWebPart> formantu. Drugi scenariusz występuje, gdy kontrolka edycji ma jego <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> i <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> właściwości `true`, gdy zakresu personalizacji strony jest ustawiony na poziomie użytkownika.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayTitle { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który zawiera tytuł tekst wyświetlany w pasku tytułu <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantu.</summary>
        <value>Ciąg, który reprezentuje pełną, widoczny tytuł formantu. Wartość domyślna to ciąg obliczeniowej, specyficzne dla kultury dostarczonych przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> Właściwość zwraca bieżącą wartość podstawowym <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> właściwości lub, jeśli formant nie ma tytułu, obliczona wartość. Obliczona wartość składa się z ciągu zlokalizowania zasobów do formantów bez tytułu. W przypadkach, gdy żadna wartość nie przypisano do <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> właściwości, wartość <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> właściwości różni się od <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> właściwości.  
  
 Ponieważ <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> właściwość została zaprojektowana jako tylko do odczytu, obliczonej właściwości, aby uzyskać rzeczywiste bieżącą wartość tytuł wyświetlanych w czasie wykonywania, nie należy próbować używać tej właściwości można ustawić tytułu <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu. Aby ustawić tytuł, użyj podstawowym <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera bieżący stan <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> strefy nadrzędnej formantu.</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> Mający bieżący stan <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> strefy, która zawiera <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.GetDesignModeState%2A> Metoda zwraca informacje o stanie strefy, która zawiera <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu. Informacje o stanie jest zwracana w formie słownika.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState" />
        <altmember cref="M:System.Web.UI.Control.GetDesignModeState" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oprócz wywoływania bazie <xref:System.Web.UI.Control.OnPreRender%2A> metody <xref:System.Web.UI.WebControls.WebParts.EditorPart.OnPreRender%2A> sprawdza również metody <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> właściwości. Jeśli wartość jest `false`, co oznacza, że kontrolka nie powinny być wyświetlane, a następnie <xref:System.Web.UI.Control.Visible%2A> również ustawioną właściwość `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> Zawierający <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formant jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" /> Zawiera dane o stanie do wyświetlania strefy.</param>
        <summary>Zastosowanie właściwości stanu tryb projektowania bieżącej <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> strefy, która zawiera <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncChanges">
      <MemberSignature Language="C#" Value="public abstract void SyncChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SyncChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SyncChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SyncChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość właściwości z <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli dla jego skojarzony <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> Metoda jest metodą krytyczne na <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu. Jest on zdefiniowany jako metoda abstrakcyjna w <xref:System.Web.UI.WebControls.WebParts.EditorPart> klasy, a musi być implementowana przez formanty dziedziczone. Metoda służy do pobierania bieżących wartości z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu, do którego odwołuje się <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> właściwości i zaktualizuj pola w <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontrolki z tych wartości, więc użytkownik może edytować je.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> Metoda jest wywoływana przy każdym wartości w skojarzonym <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli mogła ulec zmianie. Dla każdego <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontroli, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> strefy, która zawiera wywołań kontroli <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> metody natychmiast po wywołaniu <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> metody, aby wartości w <xref:System.Web.UI.WebControls.WebParts.EditorPart> formant zawsze są synchronizowane z wartości w skojarzony <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Inny przypadek gdzie <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> metoda jest wywoływana jest, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli jest trybu edycji.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> — Metoda nie jest wywoływana po wykonaniu <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> metodę, jeśli metoda zwraca `false`, ponieważ w takim przypadku wystąpił błąd.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wdrożyć <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> w niestandardowej metody <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.EditorPart> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia implementację <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> w niestandardowej metody <xref:System.Web.UI.WebControls.WebParts.EditorPart> klasy o nazwie `TextDisplayEditorPart`. Ta metoda pobiera odwołanie do skojarzonego `TextDisplayWebPart` kontrolować za pomocą <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> właściwości. Następnie pobiera wartość `TextDisplayWebPart.FontStyle` właściwości i aktualizacji, który element jest zaznaczony w formancie listy rozwijanej (odwołuje `TextDisplayEditorPart.PartContentFontStyle` właściwości) w niestandardowej <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu.  
  
 [!code-csharp[WebParts_EditorPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#6)]
 [!code-vb[WebParts_EditorPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#6)]  
  
 Drugiej części przykładowy kod przedstawia sposób skojarzony <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, `TextDisplayWebPart`, tworzy kolekcję skojarzone <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantów (w tym przypadku jest tylko jeden <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu o nazwie `TextDisplayEditorPart` w kolekcji) w Implementacja <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> metody. Ta metoda jest wykonywana po `TextDisplayWebPart` formant przechodzi do trybu edycji.  
  
 [!code-csharp[WebParts_EditorPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_EditorPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Klasa, która pochodzi z <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> musi implementować klasę <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" /> metody. Implementowana metoda pobiera odwołanie do skojarzonego formantu przy użyciu <see cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" /> właściwości, a następnie aktualizacje <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantu o wartości właściwości z skojarzony <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartManager As WebPartManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManager ^ WebPartManager { System::Web::UI::WebControls::WebParts::WebPartManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontroli powiązanej z bieżącej strony sieci Web.</summary>
        <value>Odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> na stronie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart> Formant wymaga odwołania do <xref:System.Web.UI.WebControls.WebParts.WebPartManager> wystąpienia, ponieważ musi sprawdzić bieżącego zakresu personalizacji strony, aby określić wartość <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> właściwości. Personalizacja zakres jest określany przez sprawdzenie <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> właściwość, która jest dostępna za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToEdit As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToEdit { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant, który jest obecnie edytowany.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> który jest obecnie w trybie edycji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> Formantu (lub inny formant serwera lub użytkownika) to aktualnie edytowany odpowiada wartości <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> właściwości. Tylko jeden <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu można edytować w czasie, a gdy formant jest w trybie edycji <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> właściwość zawiera odwołanie do tego formantu.  
  
 Po <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> strefy został dodany <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu do swojej kolekcji formantów, następnie przypisuje wartość własnych <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> właściwości <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> właściwość <xref:System.Web.UI.WebControls.WebParts.EditorPart> formantu.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart> Kontrolować używa <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> właściwość szczególnie w dwóch metod krytyczne —<xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> i <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A>— do pobierania i ustawiania wartości właściwości w skojarzonym formancie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.EditorZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.Zone" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Zone As EditorZoneBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::EditorZoneBase ^ Zone { System::Web::UI::WebControls::WebParts::EditorZoneBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> strefy, która zawiera <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> formantu.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> Zawierający formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że <xref:System.Web.UI.WebControls.WebParts.EditorPart.Zone%2A> właściwość jest tylko do odczytu, zawiera odwołanie do obiektu strefy, który zawiera <xref:System.Web.UI.WebControls.WebParts.EditorPart> kontroli, a można programowo zmienić wartości właściwości w samej strefie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>