<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4dae6f1431e46eaffaad83dcbab3de06028ce374" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585216" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <TypeSignature Language="F#" Value="type IWebPart = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje wspólne właściwości interfejsu użytkownika używanych przez platformę ASP.NET <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart> Interfejs zapewnia kilka właściwości zorientowane na interfejsu użytkownika, które ulepszanie środowiska użytkownika w pracy z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów. Podczas tworzenia formantów, które pochodzą z bazy <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy, możesz uzyskać implementację wszystkich właściwości w <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy podstawowej implementuje ten interfejs.  
  
 Możesz użyć istniejących formantów użytkownika, kontrolki ASP.NET lub niestandardowe kontrolki serwera nie dziedziczących z <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy jako część aplikacji części sieci Web, i może również użyć tych właściwości zorientowane na interfejsu użytkownika deklarowana przez <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu. Jeśli Umieść istniejące formanty serwera w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy w czasie wykonywania, są one opakowane <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu. Ponieważ <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> klasa dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy podstawowej, umożliwia korzystanie z istniejących formantów serwer do działania jako true <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów i doda do nich właściwości <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu.  
  
 Jeśli umieścisz kontrolki serwera, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli stref, można użyć <xref:System.Web.UI.WebControls.WebParts.IWebPart> właściwości w czasie wykonywania, a także mogą zadeklarować wartości tych właściwości na kontrolek serwera w znaczniku strony (w formacie trwałości strony). Jednak ponieważ te właściwości są dostępne tylko dla kontrolki serwera w czasie wykonywania, kodowania w czasie projektowania funkcje takie jak IntelliSense nie rozpoznają <xref:System.Web.UI.WebControls.WebParts.IWebPart> właściwości, które są zadeklarowane na kontrolki serwera. Właściwości zadeklarowane tych kontrolek nadal działa podczas ładowania strony, ale program Microsoft Visual Studio nie może rozpoznać właściwości jako prawidłowy w czasie projektowania. Jeśli chcesz dodać <xref:System.Web.UI.WebControls.WebParts.IWebPart> właściwości do istniejącego serwera i kontrolek użytkownika ulepszyć środowisko użytkownika w czasie projektowania, można zaimplementować <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu w formancie serwera.  
  
 Możliwe, że głównym powodem do zaimplementowania <xref:System.Web.UI.WebControls.WebParts.IWebPart> jest interfejs dla formantów, które nie obsługują właściwości expando (niestandardowy). Właściwości expando są ciągów, które mogą zostać dodane do klasy dynamicznie jako właściwość, za pomocą klasy <xref:System.Web.UI.IAttributeAccessor> interfejsu. Formanty, które implementują ten interfejs, w tym <xref:System.Web.UI.WebControls.WebControl> klasy i jej funkcji podrzędnych, można użyć właściwości expando. W związku z tym wszystkich kontrolek serwera ASP.NET, niestandardowe kontrolki który pochodzi od ich kontrolek użytkownika sieci Web i <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty obsługują expando właściwości. Ale niestandardowych formantów, które dziedziczą bezpośrednio z bazy <xref:System.Web.UI.Control> klasa nie obsługuje właściwości expando. W związku z tym w przypadku tych kontrolek w <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, nie można zadeklarować typowe <xref:System.Web.UI.WebControls.WebParts.IWebPart> właściwości zawarte w formantach, właściwości, takie jak <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> i <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>. Jeśli chcesz użyć tych właściwości z takich kontroli, musisz zaimplementować <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wdrożyć <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu w formancie użytkownika. Jest to prosty implementację, która zawiera co najmniej implementowania właściwości.  
  
 Pierwsza część przykładowy kod przedstawia kontrolki użytkownika. Formant użytkownika zapewnia wszystkie właściwości <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejs, a także dwa dodatkowe właściwości publiczne powiązane formantów interfejsu użytkownika. Użyj dwóch niestandardowe właściwości `Personalizable` atrybut, który umożliwia wartości tych właściwości można zapisać w wielu sesjach przeglądarki. Należy pamiętać, że w podstawowym <xref:System.Web.UI.WebControls.WebParts.WebPart> implementację klasy, wszystkie właściwości <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu są zaimplementowane jako wartość również, chociaż nie są w tym przykładzie kodu.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 Druga część przykładowy kod przedstawia stronę sieci Web, która obsługuje kontrolki użytkownika. Na stronie <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontroli w ramach odwołuje się formant użytkownika. Zwróć uwagę, że niektóre z <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu wartości właściwości są ustawione deklaratywnie w znacznikach kontrolki użytkownika, który umożliwia zachowanie, a także wyglądać podobnie do <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli w czasie projektowania i w czasie wykonywania. Ładowanie strony w przeglądarce, można użyć interfejsu użytkownika na stronie, aby zademonstrować możliwość programowo zmienić wartości realizowane <xref:System.Web.UI.WebControls.WebParts.IWebPart> właściwości w czasie wykonywania. Po zmianie niektóre wartości właściwości zmiany nie są widoczne na stronie, ale są widoczne w źródle strony ( <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> właściwości), lub są przechowywane w danych o stanie aplikacji ( <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> właściwości).  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Zwykle nie trzeba zaimplementować <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> interfejsu, albo na niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formanty lub serwer kontroluje, ponieważ podstawowym <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> klasa już implementuje interfejs. Niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolek i innych kontrolek serwera, które są umieszczone w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy, można korzystać ze wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> właściwości.  Głównym celem do zaimplementowania <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> interfejsu użytkownika, czy w niestandardowej <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant lub innego formantu serwera, jeśli chcesz zmienić domyślną implementację. Na przykład można podać wartości domyślnej dla niektórych właściwości. Kolejny powód, aby implementował on interfejs w formancie użytkownika lub serwer jest tak, aby czasu projektowania środowiska pracy z tymi właściwościami w formancie zostanie rozszerzona.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu, który reprezentuje <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli w katalogu formantów.</summary>
        <value>Ciąg reprezentujący adres URL obrazu, używany do reprezentowania formantu w katalogu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje części sieci Web często udostępniają katalogu (lub listy) formantów, które użytkownicy mogą dodawać do strony. <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Właściwość w formancie zawiera adres URL obrazu, który reprezentuje kontrolkę, gdy pojawi się on w katalogu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje deklaratywne i programowy użycia <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> właściwości. Kod źródłowy pełny przykład znajduje się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.IWebPart> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia sposób implementuje kontrolki użytkownika <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> właściwości.  
  
 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 Druga część przykładowy kod przedstawia metody w formancie użytkownika, który programowo ustawia wartość <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> właściwości, gdy użytkownik wybierze nazwę odpowiednie właściwości z przycisków radiowych na stronie ustawia nową wartość w polu tekstowym i następnie klika przycisk **aktualizacji** przycisku.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzeci część przykładowy kod przedstawia sposób użytkownika kontroli, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPart> odwołuje się interfejs <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontroli i jak <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> deklaratywnie ustawić właściwości w formancie. Zwróć uwagę, że ponieważ nie ma żadnych katalogu formantów składników Web Part podaną w tym przykładzie, możesz nie rzeczywistym skutkiem ustawienie dla tej właściwości.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia frazę krótkie podsumowanie formantu działania, na potrzeby etykietki narzędzi i katalogów <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
        <value>Ciąg to krótkie podsumowanie funkcji formantu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Wartość właściwości jest zazwyczaj używana jako ciąg opisowy dla formantu w wykazach, które stanowią listę <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, a jako etykietka narzędzia na pasku tytułu formantu. Zawartość właściwości jest wyświetlany w etykietce narzędzia, gdy użytkownik umieszcza wskaźnik myszy nad tekstem tytuł w pasku tytułu formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje deklaratywne i programowy użycia <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> właściwości. Kod źródłowy pełny przykład znajduje się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.IWebPart> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia sposób implementuje kontrolki użytkownika <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> właściwości.  
  
 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 Druga część przykładowy kod przedstawia metody w formancie użytkownika, który programowo ustawia wartość <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> właściwości, gdy użytkownik wybierze nazwę odpowiednie właściwości z przycisków radiowych na stronie ustawia nową wartość w polu tekstowym i następnie klika przycisk **aktualizacji** przycisku.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzeci część przykładowy kod przedstawia sposób użytkownika kontroli, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPart> odwołuje się interfejs <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontroli i jak <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> deklaratywnie ustawić właściwości w formancie. Pamiętaj, że zostanie wyświetlone wartość tej właściwości, umieszczając wskaźnik myszy nad tekstem tytuł w pasku tytułu formantu, po załadowaniu strony w przeglądarce. Poeksperymentuj z programowo zmiana wartości właściwości w czasie wykonywania przez ładowanie strony sieci Web i przy użyciu interfejsu podanego użytkownika (UI), aby zmienić wartość właściwości.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który jest połączony z <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> wartości właściwości do utworzenia pełnej tytuł <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <value>Ciąg, który służy jako pomocniczą dla formantu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> Właściwość służy do zwracania domyślny ciąg podtytuł w celu <xref:System.Web.UI.WebControls.WebParts.WebPart> formant, który jest dołączany do formantu tytuł na pasku tytułu.  
  
 Jeśli podasz wartości domyślnej dla <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> właściwości formantu, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu części sieci Web automatycznie kontroli dołącza go do wartości <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> właściwości formantu w czasie wykonywania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje deklaratywne i programowy użycia <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> właściwości. Kod źródłowy pełny przykład znajduje się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.IWebPart> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia sposób implementuje kontrolki użytkownika <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> właściwości. Należy pamiętać, że właściwość jest tylko do odczytu i ma służyć do zapewnienia podtytuł domyślny jest dołączona do głównego tytuł formantu.  
  
 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 Drugiej części przykładowy kod przedstawia sposób użytkownika kontroli, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPart> odwołuje się interfejs <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontroli, jak i modyfikowalne właściwości z <xref:System.Web.UI.WebControls.WebParts.IWebPart> deklaratywnie ustawić w formancie. Po załadowaniu strony w przeglądarce, należy pamiętać, że wartość domyślna <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> właściwość, która została ustawiona w kodzie implementację kontrolki użytkownika, jest dołączany do tytułu w pasku tytułu formantu.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tytuł <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <value>Ciąg, który zawiera tytuł formantu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst tytułu widoczny na pasku tytułu formantu jest ustawiana przez <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> właściwości.  
  
 Jeśli nie zostanie podana nazwa dla formantu, kontroli części sieci Web automatycznie oblicza domyślny ciąg do użycia jako tytuł. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Ponadto jest możliwe zapewnienie podtytuł domyślny jest dołączany do ciągu tytułu. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje deklaratywne i programowy użycia <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> właściwości. Kod źródłowy pełny przykład znajduje się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.IWebPart> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia sposób implementuje kontrolki użytkownika <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> właściwości.  
  
 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 Druga część przykładowy kod przedstawia metody w formancie użytkownika, który programowo ustawia wartość <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> właściwości, gdy użytkownik wybierze nazwę odpowiednie właściwości z przycisków radiowych na stronie ustawia nową wartość w polu tekstowym i następnie klika przycisk **aktualizacji** przycisku.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzeci część przykładowy kod przedstawia sposób użytkownika kontroli, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPart> odwołuje się interfejs <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontroli i jak <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> deklaratywnie ustawić właściwości w formancie.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu, używany do reprezentowania formantu składników Web Part na pasku tytułu własne kontrolki.</summary>
        <value>Ciąg, który reprezentuje adres URL obrazu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Właściwości umożliwia kojarzenie ikonę z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Ikona jest wyświetlana na pasku tytułu własne kontrolki. Spójności tematyczne, deweloperzy aplikacji może zajść potrzeba dokonania tę ikonę, podobnie jak obraz, który reprezentuje kontrolkę w wykazie części sieci Web, kontrolek (obraz, do którego odwołuje się <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> właściwości).  
  
 Zaimplementowanego w zestawie formantu składników Web Part <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> właściwości można spersonalizować przez użytkowników końcowych, aby zmienić obraz lub ikonę na pasku tytułu formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje deklaratywne i programowy użycia <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> właściwości. Kod źródłowy pełny przykład znajduje się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.IWebPart> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia sposób implementuje kontrolki użytkownika <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> właściwości.  
  
 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 Druga część przykładowy kod przedstawia metody w formancie użytkownika, który programowo ustawia wartość <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> właściwości, gdy użytkownik wybierze nazwę odpowiednie właściwości z przycisków radiowych na stronie ustawia nową wartość w polu tekstowym i następnie klika przycisk **aktualizacji** przycisku.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzeci część przykładowy kod przedstawia sposób użytkownika kontroli, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPart> odwołuje się interfejs <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontroli i jak <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> deklaratywnie ustawić właściwości w formancie. Należy zauważyć, że jeśli adres URL, do rzeczywistych obrazu nie zostanie określona, symbol zastępczy ikony pojawia się na pasku tytułu.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL do dodatkowych informacji <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <value>Ciąg, który reprezentuje adres URL, aby uzyskać więcej informacji o <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po przypisaniu do adresu URL <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> właściwości, tytuł formantu staje się łącza. Ta właściwość jest zapewnienie wygodny sposób umożliwiający użytkownikom końcowym dostęp do dodatkowych informacji dotyczących formantu. Dodatkowe informacje może dostarczyć praw autorskich, dane kontaktowe, szczegółowe informacje dotyczące tworzenia kontrolki lub Podsumowanie celu formantu.  
  
> [!NOTE]
>  Zwykle nie należy używać <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> właściwości, aby utworzyć łącze do zawartości pomocy. Najlepszym sposobem Podaj link do pomocy dla formantu jest użycie <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje deklaratywne i programowy użycia <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> właściwości. Kod źródłowy pełny przykład znajduje się w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.IWebPart> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia sposób implementuje kontrolki użytkownika <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> właściwości.  
  
 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 Druga część przykładowy kod przedstawia metody w formancie użytkownika, który programowo ustawia wartość <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> właściwości, gdy użytkownik wybierze nazwę odpowiednie właściwości z przycisków radiowych na stronie ustawia nową wartość w polu tekstowym i następnie klika przycisk **aktualizacji** przycisku.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzeci część przykładowy kod przedstawia sposób użytkownika kontroli, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPart> odwołuje się interfejs <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontroli i jak <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> deklaratywnie ustawić właściwości w formancie. Należy pamiętać, że jeśli nie podasz adresu URL do rzeczywistego strony, a następnie użytkownik kliknie łącze w pasku tytułu, wyświetlony komunikat o błędzie.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      </Docs>
    </Member>
  </Members>
</Type>