<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="244f2d3d456f34e730d468b1cf8b57cee486f32c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395224" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <TypeSignature Language="F#" Value="type IWebPart = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje właściwości wspólnego interfejsu użytkownika (UI) używane przez formanty <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interfejs zawiera kilka właściwości zorientowanych na interfejs użytkownika, które zwiększają możliwości pracy z <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkami. <xref:System.Web.UI.WebControls.WebParts.IWebPart> Podczas tworzenia formantów, które pochodzą z klasy bazowej <xref:System.Web.UI.WebControls.WebParts.WebPart> , uzyskasz implementację wszystkich właściwości <xref:System.Web.UI.WebControls.WebParts.IWebPart> w interfejsie, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasa bazowa implementuje ten interfejs.  
  
 Można użyć istniejących kontrolek użytkownika, kontrolek ASP.NET lub niestandardowych kontrolek serwera, które nie dziedziczą <xref:System.Web.UI.WebControls.WebParts.WebPart> z klasy jako części aplikacji składniki Web Part i mogą również używać tych właściwości zorientowanych na interfejsie użytkownika zadeklarowanych <xref:System.Web.UI.WebControls.WebParts.IWebPart> przez interfejs. W przypadku umieszczenia w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefie istniejących kontrolek serwera w czasie wykonywania są one zawijane <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> z obiektem. Ponieważ klasa dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPart> z klasy bazowej, umożliwia istniejące kontrolki serwera, które działają jako prawdziwe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki i dodaje do nich właściwości <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu. <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>  
  
 W przypadku umieszczenia formantów serwera, które nie <xref:System.Web.UI.WebControls.WebParts.WebPart> są kontrolkami w strefach, mogą <xref:System.Web.UI.WebControls.WebParts.IWebPart> używać właściwości w czasie wykonywania i można również deklarować wartości dla tych właściwości w kontrolkach serwera w znaczniku strony (w formacie trwałości strony). Jednak ponieważ te właściwości są dostępne tylko dla formantów serwera w czasie wykonywania, funkcje kodowania czasu projektowania, takie jak IntelliSense, nie rozpoznają <xref:System.Web.UI.WebControls.WebParts.IWebPart> właściwości, które są zadeklarowane w kontrolkach serwera. Zadeklarowane właściwości tych formantów nadal działają podczas ładowania strony, ale Microsoft Visual Studio nie rozpoznaje właściwości jako prawidłowych w czasie projektowania. Jeśli chcesz dodać <xref:System.Web.UI.WebControls.WebParts.IWebPart> właściwości do istniejących serwerów i kontrolek użytkownika w celu zwiększenia środowiska użytkownika w czasie projektowania, można <xref:System.Web.UI.WebControls.WebParts.IWebPart> zaimplementować interfejs w kontrolce serwer.  
  
 Prawdopodobnie głównym powodem implementacji <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu jest kontrolki, które nie obsługują właściwości expand (Custom). Właściwości expando są ciągami, które można dodać do klasy dynamicznie jako właściwość, za pomocą <xref:System.Web.UI.IAttributeAccessor> interfejsu. Kontrolki implementujące ten interfejs, łącznie <xref:System.Web.UI.WebControls.WebControl> z klasą i jej elementami podrzędnymi, mogą używać właściwości expando. W związku z tym wszystkie kontrolki serwera ASP.NET, formanty niestandardowe, które pochodzą z nich, kontrolki użytkownika sieci Web i <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty obsługują użycie właściwości expando. Jednak formanty niestandardowe dziedziczące bezpośrednio z klasy podstawowej <xref:System.Web.UI.Control> nie obsługują właściwości expando. W związku z tym, Jeśli zadeklarujesz <xref:System.Web.UI.WebControls.WebParts.WebPartZone>te kontrolki w ramach programu, nie będzie można <xref:System.Web.UI.WebControls.WebParts.IWebPart> zadeklarować wspólnych właściwości w kontrolkach, <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> takich <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>jak i. Jeśli chcesz użyć tych właściwości z takimi kontrolkami, musisz zaimplementować <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejs.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób implementacji <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu w kontrolce użytkownika. Jest to prosta implementacja, która pokazuje minimalny sposób implementacji właściwości.  
  
 Pierwsza część przykładu kodu pokazuje kontrolkę użytkownika. Kontrolka użytkownika implementuje wszystkie właściwości <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu oraz dwie dodatkowe właściwości publiczne powiązane z kontrolkami w interfejsie użytkownika. Dwie właściwości niestandardowe używają `Personalizable` atrybutu, co umożliwia zapisanie wartości tych właściwości w sesjach przeglądarki. Należy zauważyć, że w <xref:System.Web.UI.WebControls.WebParts.WebPart> implementacji klasy podstawowej wszystkie właściwości <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfejsu są implementowane jako Personalizable, ale nie są w tym przykładzie kodu.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 Druga część przykładu kodu pokazuje stronę sieci Web, która hostuje kontrolkę użytkownika. Strona zawiera <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontrolkę, w której znajduje się odwołanie do kontrolki użytkownika. Należy zauważyć, że niektóre <xref:System.Web.UI.WebControls.WebParts.IWebPart> wartości właściwości interfejsu są ustawiane deklaratywnie w znacznikach dla kontrolki użytkownika, co umożliwia jej zachowanie i wygląd podobny <xref:System.Web.UI.WebControls.WebParts.WebPart> do kontrolki w czasie projektowania i w czasie wykonywania. W przypadku załadowania strony w przeglądarce można użyć interfejsu użytkownika na stronie, aby zademonstrować możliwość programistycznej zmiany wartości zaimplementowanych <xref:System.Web.UI.WebControls.WebParts.IWebPart> właściwości w czasie wykonywania. Po zmianie niektórych wartości właściwości, zmiany nie są widoczne na stronie, ale są widoczne we <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> właściwości źródło strony (Właściwość) lub są przechowywane w danych stanu aplikacji <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> (właściwości).  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Zwykle nie trzeba implementować <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> interfejsu, na kontrolkach niestandardowych <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ani w kontrolkach serwera, ponieważ klasa bazowa <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> już implementuje interfejs. Kontrolki niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> i inne kontrolki serwera, które są <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> umieszczone w strefach <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> , mogą używać wszystkich właściwości.  
  
Głównym powodem do zaimplementowania <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> interfejsu samodzielnie, niezależnie od tego, czy w kontrolce niestandardowej <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub innej kontrolce serwerowej jest zmiana implementacji domyślnej. Na przykład możesz chcieć podać wartości domyślne dla niektórych właściwości. Kolejną przyczyną implementacji interfejsu w formancie użytkownika lub serwera jest to, że środowisko czasu projektowania pracy z tymi właściwościami w kontrolce zostanie rozszerzone.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu, który reprezentuje <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolkę w wykazie kontrolek.</summary>
        <value>Ciąg, który reprezentuje adres URL obrazu używanego do reprezentowania kontrolki w wykazie. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje składniki Web Part często udostępniają wykaz formantów, które użytkownicy mogą dodawać do strony. <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Właściwość kontrolki zawiera adres URL obrazu, który reprezentuje kontrolkę wyświetlaną w wykazie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje deklaratywne i programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> właściwości. Pełny kod źródłowy dla przykładu znajduje się w sekcji <xref:System.Web.UI.WebControls.WebParts.IWebPart> przykładowej klasy Przegląd.  
  
 Pierwsza część przykładu kodu pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> jak formant użytkownika implementuje właściwość.  
  
 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 Druga część przykładu kodu demonstruje metodę w kontrolce użytkownika, która programowo ustawia wartość właściwości, <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> gdy użytkownik wybierze odpowiednią nazwę właściwości z przycisków radiowych na stronie, ustawia nową wartość w polu tekstowym i następnie klika przycisk **Aktualizuj** .  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzecią częścią przykładu kodu jest pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> w jaki sposób formant użytkownika, który implementuje interfejs, jest przywoływany w <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> kontrolce oraz jak właściwość jest ustawiana deklaratywnie w formancie. Należy zauważyć, że ponieważ w tym przykładzie nie ma żadnego wykazu formantów składniki Web Part, nie można zobaczyć rzeczywistego efektu ustawiania tej właściwości.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia krótką frazę, która podsumowuje działanie kontrolki do użycia w etykietach narzędzi i wykazach <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolek.</summary>
        <value>Ciąg, który zwięźle podsumowuje funkcjonalność formantu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest zwykle używana jako ciąg opisowy dla kontrolki w wykazach, które udostępniają <xref:System.Web.UI.WebControls.WebParts.WebPart> listy kontrolek i jako etykietka narzędzia na pasku tytułu kontrolki. <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Zawartość właściwości jest wyświetlana w etykietce narzędzia, gdy użytkownik umieści wskaźnik myszy nad tekstem tytułu na pasku tytułu kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje deklaratywne i programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> właściwości. Pełny kod źródłowy dla przykładu znajduje się w sekcji <xref:System.Web.UI.WebControls.WebParts.IWebPart> przykładowej klasy Przegląd.  
  
 Pierwsza część przykładu kodu pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> jak formant użytkownika implementuje właściwość.  
  
 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 Druga część przykładu kodu demonstruje metodę w kontrolce użytkownika, która programowo ustawia wartość właściwości, <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> gdy użytkownik wybierze odpowiednią nazwę właściwości z przycisków radiowych na stronie, ustawia nową wartość w polu tekstowym i następnie klika przycisk **Aktualizuj** .  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzecią częścią przykładu kodu jest pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> w jaki sposób formant użytkownika, który implementuje interfejs, jest przywoływany w <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> kontrolce oraz jak właściwość jest ustawiana deklaratywnie w formancie. Należy zauważyć, że wartość tej właściwości jest wyświetlana, ustawiając wskaźnik myszy nad tekstem tytułu na pasku tytułu kontrolki po załadowaniu strony w przeglądarce. Możesz również eksperymentować, zmieniając wartość właściwości programowo w czasie wykonywania, ładując stronę sieci Web i korzystając z podanego interfejsu użytkownika (UI), aby zmienić wartość właściwości.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który jest połączony z <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> wartością właściwości w celu utworzenia kompletnego tytułu <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dla kontrolki.</summary>
        <value>Ciąg, który służy jako podtytuł dla kontrolki. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość służy do zwracania domyślnego ciągu podtytuł <xref:System.Web.UI.WebControls.WebParts.WebPart> dla kontrolki, która jest dołączana do tytułu kontrolki na pasku tytułu. <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>  
  
 W przypadku podania wartości <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> domyślnej właściwości w kontrolce <xref:System.Web.UI.WebControls.WebParts.IWebPart> implementującej interfejs, zestaw kontrolki składniki Web Part automatycznie dołącza go <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> do wartości właściwości kontrolki w czasie wykonywania.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje deklaratywne i programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> właściwości. Pełny kod źródłowy dla przykładu znajduje się w sekcji <xref:System.Web.UI.WebControls.WebParts.IWebPart> przykładowej klasy Przegląd.  
  
 Pierwsza część przykładu kodu pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> jak formant użytkownika implementuje właściwość. Należy zauważyć, że właściwość jest tylko do odczytu i jest przeznaczona do użycia w celu zapewnienia domyślnego podtytuła, który jest dołączany do głównego tytułu formantu.  
  
 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 Druga część przykładu kodu pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> w jaki sposób formant użytkownika, który implementuje interfejs, jest przywoływany w kontrolce, a <xref:System.Web.UI.WebControls.WebParts.IWebPart> jak właściwości zapisywalne są ustawiane deklaratywnie na formancie. Po załadowaniu strony w przeglądarce należy zauważyć, że wartość <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> domyślna właściwości, która została ustawiona w kodzie implementacji kontrolki użytkownika, jest dołączana do tytułu na pasku tytułu kontrolki.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tytuł <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <value>Ciąg, który zawiera tytuł formantu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Widoczny tekst tytułu na pasku tytułu kontrolki jest ustawiany przez <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> właściwość.  
  
 Jeśli nie podasz tytułu kontrolki, zestaw kontrolki składniki Web Part automatycznie oblicza domyślny ciąg, który będzie używany jako tytuł. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Ponadto można podać domyślny podtytuł, który jest dołączany do ciągu tytułu. Aby uzyskać szczegółowe informacje <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>, zobacz.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje deklaratywne i programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> właściwości. Pełny kod źródłowy dla przykładu znajduje się w sekcji <xref:System.Web.UI.WebControls.WebParts.IWebPart> przykładowej klasy Przegląd.  
  
 Pierwsza część przykładu kodu pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> jak formant użytkownika implementuje właściwość.  
  
 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 Druga część przykładu kodu demonstruje metodę w kontrolce użytkownika, która programowo ustawia wartość właściwości, <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> gdy użytkownik wybierze odpowiednią nazwę właściwości z przycisków radiowych na stronie, ustawia nową wartość w polu tekstowym i następnie klika przycisk **Aktualizuj** .  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzecią częścią przykładu kodu jest pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> w jaki sposób formant użytkownika, który implementuje interfejs, jest przywoływany w <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> kontrolce oraz jak właściwość jest ustawiana deklaratywnie w formancie.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL obrazu służącego do reprezentowania kontrolki składniki Web Part na pasku tytułu kontrolki.</summary>
        <value>Ciąg, który reprezentuje adres URL obrazu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zapewnia sposób skojarzenia ikony <xref:System.Web.UI.WebControls.WebParts.WebPart> z kontrolką. <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Ikona zostanie wyświetlona na pasku tytułu kontrolki. Aby zapewnić spójność tematyczną, deweloperzy aplikacji mogą chcieć, aby ta ikona była podobna do obrazu reprezentującego formant w wykazie kontrolek składniki Web Part (obraz, do <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> którego odwołuje się Właściwość).  
  
 Ponieważ jest zaimplementowany w składniki Web Part zestawie kontrolnym, <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> właściwość może być spersonalizowana przez użytkowników końcowych, aby zmienić obraz lub ikonę, która pojawia się na pasku tytułu kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje deklaratywne i programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> właściwości. Pełny kod źródłowy dla przykładu znajduje się w sekcji <xref:System.Web.UI.WebControls.WebParts.IWebPart> przykładowej klasy Przegląd.  
  
 Pierwsza część przykładu kodu pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> jak formant użytkownika implementuje właściwość.  
  
 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 Druga część przykładu kodu demonstruje metodę w kontrolce użytkownika, która programowo ustawia wartość właściwości, <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> gdy użytkownik wybierze odpowiednią nazwę właściwości z przycisków radiowych na stronie, ustawia nową wartość w polu tekstowym i następnie klika przycisk **Aktualizuj** .  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzecią częścią przykładu kodu jest pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> w jaki sposób formant użytkownika, który implementuje interfejs, jest przywoływany w <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> kontrolce oraz jak właściwość jest ustawiana deklaratywnie w formancie. Należy pamiętać, że jeśli nie podasz adresu URL dla rzeczywistego obrazu, na pasku tytułu zostanie wyświetlony symbol zastępczy ikony.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL do uzupełniających informacji o <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formancie.</summary>
        <value>Ciąg, który reprezentuje adres URL, aby uzyskać więcej informacji <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> o formancie. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy przypiszesz adres URL do <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> właściwości, tytuł kontrolki zmieni się na link. Celem tej właściwości jest zapewnienie wygodnego sposobu na dostęp użytkowników końcowych do dodatkowych informacji o formancie. Dodatkowe informacje mogą zapewnić dane dotyczące praw autorskich, dane kontaktowe, szczegóły dotyczące twórcy kontrolki lub podsumowanie przeznaczenie formantu.  
  
> [!NOTE]
>  Zwykle nie jest używana <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> właściwość do łączenia z zawartością pomocy. Najlepszym sposobem zapewnienia linku do pomocy dla kontrolki jest użycie <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje deklaratywne i programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> właściwości. Pełny kod źródłowy dla przykładu znajduje się w sekcji <xref:System.Web.UI.WebControls.WebParts.IWebPart> przykładowej klasy Przegląd.  
  
 Pierwsza część przykładu kodu pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> jak formant użytkownika implementuje właściwość.  
  
 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 Druga część przykładu kodu demonstruje metodę w kontrolce użytkownika, która programowo ustawia wartość właściwości, <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> gdy użytkownik wybierze odpowiednią nazwę właściwości z przycisków radiowych na stronie, ustawia nową wartość w polu tekstowym i następnie klika przycisk **Aktualizuj** .  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Trzecią częścią przykładu kodu jest pokazuje, <xref:System.Web.UI.WebControls.WebParts.IWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> w jaki sposób formant użytkownika, który implementuje interfejs, jest przywoływany w <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> kontrolce oraz jak właściwość jest ustawiana deklaratywnie w formancie. Należy pamiętać, że jeśli nie podasz adresu URL rzeczywistej strony, a następnie użytkownik kliknie łącze na pasku tytułu, zostanie wyświetlony komunikat o błędzie.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
