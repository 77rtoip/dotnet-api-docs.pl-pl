<Type Name="CatalogZoneBase" FullName="System.Web.UI.WebControls.WebParts.CatalogZoneBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="645ec0e30341333218909acd3fe48761c8661849" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30689117" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CatalogZoneBase : System.Web.UI.WebControls.WebParts.ToolZone, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CatalogZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CatalogZoneBase&#xA;Inherits ToolZone&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Służy jako klasa podstawowa dla wszystkich kontrolek strefy, które działają jako katalogów. Katalogi zawierają listy <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów, które użytkownicy mogą dodawać do strony sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Klasa jest klasą bazową, która dziedziczy po <xref:System.Web.UI.WebControls.WebParts.ToolZone> klasy. Podstawowy zestaw zachowań zapewnia dla stref pochodnych.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Klasa udostępnia interfejs użytkownika unikatowy (UI), która umożliwia użytkownikom dodanie <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i innych kontrolek serwera do stron sieci Web. Formanty, które pochodzą z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klas, takich jak <xref:System.Web.UI.WebControls.WebParts.CatalogZone>, czy formanty faktycznie umieszczonych na stronach sieci Web. Działają jak kontenery dla innych formantów, znany jako <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które tworzenie list kontrolki serwera dla użytkowników w celu dodania do strony. Stref, które pochodzą z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasa może występować tylko, gdy strona jest w trybie wyświetlania katalogu.  
  
> [!NOTE]
>  A <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefa może zawierać tylko <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów i odwrotnie, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki mogą znajdować się tylko w <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy.  
  
 Mechanizm dodawanie formantów serwera do wykazu jest następujący zestaw trzy formanty, które pochodzą z bazy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> klasy.  
  
|Formant|Opis|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Przechowuje odwołania do formantów, które zostały zamknięte na stronie. Tych kontrolek można otworzyć ponownie (dodany z powrotem do strony) przez użytkowników.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Zawiera odwołania do formantów, które są zadeklarowane w wykazie części sieci Web w znaczniku strony sieci Web. Tych kontrolek można dodać do strony sieci Web przez użytkowników.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Udostępnia interfejs użytkownika do przekazania pliku definicji do katalogu, dzięki czemu można dodać formantu do strony sieci Web. Pliki definicji to plik XML z. Rozszerzenie nazwy pliku składnika Web Part, który zaimportować ustawienia dla formantu. Formant musi istnieć na serwerze przed można zaimportować pliku definicji.|  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Klasa ma wiele właściwości, które są przydatne do wyświetlania katalogów <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> Właściwość odwołuje się czasownika, który dodaje wybrany formant z katalogu do strony, gdy <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> zlecenia, który zamyka katalogu i zwraca tryb wyświetlania strony, aby przejść w tryb odwołuje się do właściwości. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> Odwołuje się do właściwości kolekcji wszystkich <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w strefie. Kilka właściwości tekstowych, takich jak <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>, <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>, i <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>, zastąpienie właściwości podstawowej zapewnienie domyślny tekst odpowiednich wykazów. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> Właściwość zawiera tekst obok kontrolkę listy rozwijanej, która umożliwia użytkownikom wybór, która strefa kontrolkę zostaną dodane do.  
  
 Inne właściwości są uwzględnione w <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> Właściwości to identyfikator unikatowy ciąg dla aktualnie wybranego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantu. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A> Właściwość wskazuje, czy wyświetlać ikony, które mogą być związane z formantami przez ustawienie <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A> właściwość <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> Właściwość zawiera atrybuty stylu dla łącza do <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które nie są aktualnie wybrane w strefie. Z kolei <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> właściwość zawiera atrybuty stylu łącze do <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli, użytkownik ma aktualnie wybranego w strefie.  
  
 Oprócz właściwości, istnieją również niektóre metody w <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy oprócz standardowej obsługi zdarzeń i renderowania metody dziedziczone z innych podstawowej formanty, które jednoznacznie zostały zaprojektowane na potrzeby obsługi katalogów formanty. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> Metoda tworzy chrome (peryferyjne elementy interfejsu użytkownika, takie jak obramowanie, zleceń, ikony i tytuł) wokół poszczególnych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli w strefie, a także obsługuje renderowanie kontrolek. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> Metoda to metoda abstrakcyjna; klas pochodnych zastąpienie go w celu utworzenia wystąpienia wszystkich <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty zawarte w strefie. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> Metoda może być wywołana przez klasę pochodną, jeśli kolekcja <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w zmiany strefy dla jakiegoś powodu programowych i klasy pochodnej, wymaga ponownego utworzenia kolekcji. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A> Metody ładuje istniejących stanu pola wyboru obok pozycji <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów w katalogu, gdy strona jest przesyłana z powrotem do serwera; z drugiej strony, <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A> metody zapisuje stan pola wyboru. Na koniec <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A> metoda zapewnia renderowanie łącza do każdego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli zawarte w strefie.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano kilka deklaratywne i programowe stosowania <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy. Ponieważ klasa jest abstrakcyjna, przykłady kodu, użyj pochodnej <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy, która jest dostarczany z zestawem kontroli części sieci Web, prezentacja właściwości i metody, które dziedziczy on z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie sieci Web.  
  
-   Strony sieci Web, który zawiera odwołanie do <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontroli i niektóre kod, który demonstruje użycie niektórych klucza <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy elementów członkowskich.  
  
-   Niestandardowy <xref:System.Web.UI.WebControls.WebParts.WebPart> formant, który jest dodawany do niestandardowego <xref:System.Web.UI.WebControls.WebParts.CatalogZone> formantu.  
  
-   Opis działania przykład w przeglądarce.  
  
 Pierwsza część w tym przykładzie kodu jest formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie. Aby uzyskać szczegółowe informacje dotyczące wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/displaymodemenucs.ascx#8)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/displaymodemenuvb.ascx#8)]  
  
 Druga część przykładowy kod to strona sieci Web, zawierający deklaratywne odwołanie do <xref:System.Web.UI.WebControls.WebParts.CatalogZone> formantu. W górnej części strony są dwa `Register` dyrektywy — jeden dla formantu użytkownika i jeden dla niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Powiadomienie który poniżej `<asp:WebPartZone>` element jest `<asp: CatalogZone>` element zawierający deklaratywne odwołania do niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli oraz do platformy ASP.NET <xref:System.Web.UI.WebControls.Calendar> kontroli. Strefa również ma wiele tagów i ustawić właściwości, aby określić wygląd i zachowanie. Między `<script>` znaczników na stronie jest szereg kod obsługi zdarzeń, najbardziej których pokazano programowe różnych zastosowań <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> elementów członkowskich.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#1)]  
  
 Trzeci część przykładowy kod jest niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu o nazwie `TextDisplayWebPart`. Jest on zadeklarowany w strefie, a użytkownik końcowy może dodać go z katalogu do strony. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. Aby demonstracyjne obu metod kompilacji, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/textdisplaywebpart.cs#9)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/textdisplaywebpart.vb#9)]  
  
 Należy pamiętać, że na przykład kodu działała, ustawienie, które należy dodać w pliku Web.config, aby włączyć eksportowanie plików opisu części sieci Web. Upewnij się, że plik Web.config w tym samym katalogu co strona sieci Web, w tym przykładzie kodu. W ramach `<system.web>` sekcji, upewnij się, że istnieje `<webParts>` element z `enableExport` ustawić atrybutu `true`w następujących znaczników.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** w polu listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Gdy katalogu jest widoczny, można sprawdzić kontrolki serwerowe, które mogą zostać dodane do strony z katalogu i możesz również zaznaczyć w interfejsie użytkownika skutków deklaratywne i programowe korzysta z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy elementów członkowskich.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Jeśli chcesz opracowywanie niestandardowych strefy do hostowania <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów, należy określić, czy chcesz zapewnić obsługę szablonu strefy. Szablon strefy jest tworzony przez typy, które implementują <see cref="T:System.Web.UI.ITemplate" /> interfejsu i jest konieczne, jeśli chcesz włączyć deweloperzy strony za pomocą ustawień niestandardowych strefy odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów w ramach strefy w deklaratywne znaczników strony sieci Web. Jeśli konieczne strefy Obsługa szablonów, powinny dziedziczyć z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klasy. Z kolei jeśli niestandardowych strefy i jego <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formanty mają być niezależny i ich zostanie utworzona programowo bez żadnych opcji Strona deweloperom Określanie sterowania deklaratywnie w szablonie strefy, a następnie może dziedziczyć od bezpośrednio z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> klasy. Jeśli dziedziczą z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> klasy, należy zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" /> metody i Dodaj <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub innych kontrolek serwera w katalogu do <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> obiektu.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CatalogZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CatalogZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje klasę do użycia przez odziedziczone wystąpienie klasy. Ten konstruktor można wywołać tylko przez odziedziczoną klasę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor jest wywoływane, gdy klasa pochodna jest zainicjowany, takich jak <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy przy użyciu zestawu kontroli części sieci Web. Podstawowym <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.%23ctor%2A> Konstruktor pomaga przygotować strony, aby wyświetlić składniki Web Part katalogu interfejsu użytkownika (UI), przekazując odpowiednie <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> do obiektu <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. W szczególności przekazuje konstruktora <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AddVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ AddVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> obiekt, który umożliwia użytkownikom końcowym dodawanie formantów z wykazu do strony składników Web Part.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> , umożliwia użytkownikom końcowym dodawanie formantów z katalogu do strony sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zlecenie Dodaj odwołuje się do niego <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> właściwości formantu pochodną <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy. Zlecenie Dodaj dodaje formant, który użytkownik końcowy został wybrany w katalogu do strony sieci Web. Zazwyczaj zlecenie Dodaj jest wyświetlana w interfejsie użytkownika (UI) jako <xref:System.Web.UI.WebControls.Button> kontrolować, chociaż może to być również łącze lub obraz.  
  
 Dodaj zlecenie jest formant poziomu strefy, co oznacza, że chociaż może istnieć kilka <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w katalogu, Dodaj zlecenie ma zastosowanie do wszystkich kontrolek wybrane przez użytkownika i dodaje je do wybranej strefy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób uzyskiwania dostępu do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> właściwości deklaratywnie i programowo. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia sposób uzyskiwania dostępu do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> właściwości deklaratywnie na stronie sieci Web. W tym przykładzie dostosowuje tekstu dla zlecenia.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Druga część przykładzie pokazano, jak uzyskać dostępu do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> właściwości programowo, za pomocą przycisku przełącznika Włącz lub wyłącz ją.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. W przypadku katalogu jest widoczny, można sprawdzić własny tekst na <xref:System.Web.UI.WebControls.Button> kontroli zlecenie add, i kliknąć przycisk **Włącz lub wyłącz zleceń** przycisk, aby wykazać, że masz dostęp do zlecenia Zastosuj programowo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="CatalogPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogPartChrome As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CatalogPartChrome { System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do wystąpienia <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> skojarzonej z klasy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> strefy.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> skojarzonego ze strefą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> metoda jest wywoływana, tworzy jedno wystąpienie <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome> klasy, a to wystąpienie jest używany do renderowania peryferyjne użytkownika elementy interfejsu użytkownika (zwaną również elementu chrome) dla wszystkich <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w strefie.  
  
 Elementy chrome dla poszczególnych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli obejmują jego tekstu obramowania i tytułu. <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Formantów udostępnionych przez zestaw kontroli części sieci Web nie mają domyślnie zleceniami w nagłówkach.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="CatalogParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogParts As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CatalogParts { System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formanty zawarte w <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> strefy.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> zawierający wszystkie poszczególne <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów w strefie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> Właściwość zawiera odwołanie do kolekcji wszystkie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w strefie. Odwołuje się on do obu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> zestaw kontroli części sieci Web i niestandardowe formanty <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które są dodawane do strefy.  
  
 Kolekcja został początkowo utworzony, gdy uzyskuje dostęp do innej metody <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> właściwości i wywołaniach właściwości <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> metody.  
  
> [!NOTE]
>  Należy pamiętać, że jakaś <xref:System.Web.UI.WebControls.WebParts.CatalogPart> dodana do kolekcji <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w celu wykonania <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> metoda musi mieć wartość przypisana do jego właściwość Identyfikatora, w przeciwnym razie zostanie wygenerowany wyjątek gdy kolekcja jest przypisany do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób uzyskiwania dostępu do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> właściwości programowo. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Przykładowy kod przedstawia sposób uzyskiwania dostępu do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> właściwość iterowania po kolekcji i listy identyfikatorów wszystkich <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w strefie.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#4)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#4)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Katalog jest widoczne, można kliknąć **CatalogParts listy** przycisk, aby zademonstrować sposób <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> właściwości są dostępne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> dodawany do kolekcji nie miał wartość przypisana do jego właściwość Identyfikatora.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmienia strony sieci Web z trybu wyświetlania katalogu do trybu normalnego przeglądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close%2A> Metody ignoruje wszystkie formanty aktualnie wybranego w katalogu. Po prostu wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu, aby powrócić do strony sieci Web do trybu przeglądania.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CloseVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CloseVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> obiektu, który umożliwia użytkownikom końcowym zamknąć interfejs użytkownika (UI) katalogu i przywrócić strony w trybie normalnym przeglądania.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> , umożliwia użytkownikom końcowym zamknąć katalogu interfejsu użytkownika na stronie sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zlecenie zamknięcia odwołuje się do niego <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> właściwości formantu pochodną <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy.  
  
 Użytkownik może kliknąć Zamknij zlecenie stopki strefy. Kiedy użytkownik kliknie zlecenie Zamknij wszystkie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty użytkownik wybrał są ignorowane, powoduje zamknięcie interfejsu użytkownika w katalogu i zwraca stronę do trybu normalnego przeglądania.  
  
 Zlecenie zamknięcia jest formant poziomu strefy, co oznacza, że jego akcja ma zastosowanie na poziomie całej strefy. Gdy użytkownik kliknie Zamknij zlecenie, wszystkie formanty, które zostały wybrane, ale nie został dodany do strony są ignorowane, katalogu jest zamknięty i strony powraca do trybu przeglądania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób uzyskiwania dostępu do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> właściwości deklaratywnie i programowo. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Pierwsza część przykładowy kod przedstawia sposób uzyskiwania dostępu do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> właściwości deklaratywnie na stronie sieci Web. W tym przykładzie dostosowuje <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Description%2A> właściwości dla zlecenia.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Druga część przykładzie pokazano, jak uzyskać dostępu do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> właściwości programowo, za pomocą przycisku przełącznika Włącz lub wyłącz ją.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Gdy katalogu jest widoczna, umieszczając wskaźnik myszy nad **Zamknij** przycisku, można wyświetlić jego tekst opisu w etykietce narzędzia. Możesz również kliknąć **Włącz lub wyłącz zleceń** przycisk, aby wykazać, że masz dostęp Zlecenie zamknięcia programowo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCatalogPartChrome () As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CreateCatalogPartChrome();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> obiekt używany do renderowania elementów interfejsu użytkownika dla użytkownika peryferyjne <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów w strefie.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> która renderuje peryferyjne elementy interfejsu użytkownika dla strefy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> Metoda zwraca <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome> obiektu. Elementy chrome dla poszczególnych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli obejmują jego tekstu obramowania i tytułu. <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Formantów udostępnionych przez zestaw kontroli części sieci Web nie mają domyślnie zleceniami w nagłówkach. Istnieje możliwość określenia <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> właściwość <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolować, dzięki czemu można zminimalizować i przywracać formantu programowo, w razie potrzeby.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Udostępnia deklaracji metodę podstawową, która pochodzi strefy można zastąpić do obsługi szczegółów tworzenia <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formanty zawarte w strefie.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> zawierający kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formanty powiązane z strefy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> Metoda zapewnia żadnej implementacji. Jest przeznaczony do implementacji w klasie pochodnej i powinien być używany do tworzenia wystąpienia kolekcji <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty zawarte w strefie, gdy hostingu strony sieci Web wejdzie w trybie katalogu. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A?displayProperty=nameWithType> Metoda zapewnia przykładem implementacji <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> metody.  
  
> [!NOTE]
>  Należy pamiętać, że jakaś <xref:System.Web.UI.WebControls.WebParts.CatalogPart> dodana do kolekcji <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w celu wykonania <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> metoda musi mieć wartość przypisana do jego właściwość Identyfikatora, w przeciwnym razie zostanie wygenerowany wyjątek gdy kolekcja jest przypisany do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> właściwości.  
  
 Można utworzyć metody <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów z wielu źródeł: formanty, które są zadeklarowane w formacie trwałości <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> kontrolki lub kontrolki, które są trwałe w różnych mechanizmów magazynu, takich jak plik XML lub bazy danych.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy tworzący niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formanty powinny dziedziczyć <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> lub <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> klas i przesłonić tę metodę, jeśli chcesz utworzyć niestandardowy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> obiektu do renderowania ich niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolki.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy zestaw elementu podrzędnego kontrolki skojarzone z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> strefy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia komunikat, który jest wyświetlany, gdy strefa nie zawiera żadnych formantów.</summary>
        <value>Ciąg zawierający komunikat, który pojawia się w pustej strefy. Domyślny ciąg specyficzne dla kultury są dostarczane przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość ciągu <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> właściwości jest wyświetlane, gdy strona sieci Web przejdzie do trybu katalogu, jeśli <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefa nie zawiera nr <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> właściwości deklaratywnie. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Należy zauważyć, że przykładowy kod deklaruje dwa `<asp:catalogzone>` elementy, a drugi nie deklaruje wszelkie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Określa, że przypisanie wartości do <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Gdy katalog jest widoczne, zwróć uwagę, czy poniżej pierwszą strefę, który zawiera dwa <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, druga strefa pojawia się i wyświetla zawartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> właściwości ponieważ zawiera ona żadnych formantów.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst z obszaru nagłówka strefy.</summary>
        <value>Ciąg zawierający tekst nagłówka dla strefy. Domyślny ciąg specyficzne dla kultury są dostarczane przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość ciągu <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> właściwość jest wyświetlana w obszarze nagłówka <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy, który znajduje się na górze strefy. Tekst <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> właściwości jest wyświetlane, gdy strona przejdzie do trybu katalogu i katalogu interfejsu użytkownika (UI) staje się widoczna.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> właściwości deklaratywnie i programowo. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Należy zauważyć, że przykładowy kod deklaruje dwa `<asp:catalogzone>` elementów. Drugi nie deklaruje wszelkie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, ale jednocześnie zadeklarować wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 W drugiej części przykładów kodu, wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> właściwości w pierwszą strefę programowo jest przypisany do innej wartości.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Gdy katalogu jest widoczna, zwróć uwagę, wartości każdego <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> właściwości wyświetlane w obszarze nagłówka każdej strefy. Możesz kliknąć **ustawić właściwości tekst strefy** przycisku i <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> właściwość górny strefy ma ustawioną wartość przypisana do niego w kodzie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst w strefie, który zawiera instrukcje dla użytkowników końcowych.</summary>
        <value>Ciąg, który zawiera instrukcje dla użytkowników końcowych. Domyślnie parametry specyficzne dla kultury są udostępniane przez zestaw kontroli części sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość ciągu <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> właściwość jest wyświetlana poniżej obszaru nagłówka <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy. Tekst <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> właściwości jest wyświetlane, gdy strona przejdzie do trybu katalogu i katalogu interfejsu użytkownika (UI) staje się widoczna.  
  
 Celem <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> właściwości jest zapewnienie użytkownika ogólne wskazówki, co należy zrobić po wyświetleniu katalogu interfejsu użytkownika.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> właściwości deklaratywnie i programowo. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Należy zauważyć, że przykładowy kod deklaruje dwa `<asp:catalogzone>` elementy, a pierwsza z nich deklaruje wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 W drugiej części przykładów kodu, wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> właściwości w pierwszą strefę programowo jest przypisany do innej wartości.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Gdy katalog jest widoczne, zwróć uwagę, wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> właściwości wyświetlane w obszarze nagłówka każdej strefy. Możesz kliknąć **ustawić właściwości tekst strefy** przycisku i <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> właściwość górny strefy ma ustawioną wartość przypisana do niego w kodzie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateCatalogParts">
      <MemberSignature Language="C#" Value="protected void InvalidateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateCatalogParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateCatalogParts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Niszczy Kolekcja <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formanty powiązane z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> Można wywołać metody klasy pochodne Jeśli lista <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty powiązane z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefa została zmieniona z jakiegoś powodu i Klasa pochodna musi uzyskać zaktualizowaną listę <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Klasa pochodna należy najpierw wywołać <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> do zniszczenia bieżącej kolekcji, a następnie klasy podstawowej wywoła <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> potrzebne do utworzenia kolekcji zaktualizowane.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Dane uprzednio zapisanego stanu.</param>
        <summary>Ładuje stan z poprzedniego żądania strony dla właściwości kontrolek, które nie powinny ulegają zmianie ogłaszania zwrotnego, nawet wtedy, gdy stan widoku jest wyłączona w formancie.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> nie jest prawidłowym formantem stanie.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja par nazwa/wartość przesłane do serwera.</param>
        <summary>Stan pola wyboru, które odpowiadają procesów <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów w katalogu, gdy strona jest przesyłana z powrotem do serwera.</summary>
        <returns>Ta metoda, w przeciwieństwie do przesłoniętej metody podstawowej, zawsze zwraca <see langword="false" />, ponieważ klasa nie ujawnia żadnych zdarzeń zmiany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda iteruje po kolekcji <xref:System.Web.UI.WebControls.CheckBox> formantów, aby określić, które <xref:System.Web.UI.WebControls.WebParts.WebPart> lub innych kontrolek serwera w katalogu zostały wybrane przez użytkownika. Wybrane elementy są przypisane do tablicy wewnętrznej, które następnie są przetwarzane do Dodaj formanty odpowiednie do strony sieci Web.  
  
 Metoda nie jest przeznaczony do wywoływania z kodu; jest ona używana wewnętrznie przez zestaw kontroli części sieci Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Dane uprzednio zapisanego stanu.</param>
        <summary>Ładunki wcześniej zapisane informacje o stanie dla strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez infrastrukturę programu .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie. Jednak można przesłonić tę metodę, aby określić, jak formantu niestandardowego serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState%2A> Metoda najpierw wywołuje metodę podstawową, aby załadować żadnych istniejących informacji o stanie. Następnie dodaje obiekt stan widoku danych zawierający informacje o stanie dla zlecenia Dodaj Zlecenie zamknięcia <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> obiektu, a <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Rozmiar <paramref name="savedState" /> obiektu nie jest równa rozmiar bieżącego obiektu stanu widoku.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Rejestruje obiekt strony, aby strona wymaga stan formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzeń i rejestruje obiekt strony tak, że wymaga ogłaszania zwrotnego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style PartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style PartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ PartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt zawierający atrybuty stylu <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów, które nie są aktualnie wybrane w strefie.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> zawierający atrybuty stylu dla formantów, które nie są obecnie wybrane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy, łącza są wyświetlane dla każdego typu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli: <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>, <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>, i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>. Gdy użytkownik kliknie jeden z linków odpowiadającego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolka zostaje wybrany formant i formantów podrzędnych zawarty w tym wybrany formant stają się widoczne.  
  
 <xref:System.Web.UI.WebControls.Style> Zawiera odwołanie do obiektu <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> właściwość zawiera atrybuty stylu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, które nie są obecnie wybrane. Obiekt odwołuje się właściwość jest tylko do odczytu, nadal można go ustawić podstawowych właściwości stylu dla niezaznaczone <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> właściwości deklaratywnie i programowo. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Zwróć uwagę, pierwsza część przykładowy kod deklaruje dwa `<asp:catalogzone>` elementy, a pierwsza z nich deklaruje wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 W drugiej części przykładów kodu, tekst kolor dla niezaznaczone <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów ma ustawioną wartość inną wartość.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Gdy katalog jest widoczne, zwróć uwagę, atrybuty stylu niezaznaczone <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty wymienione w strefie (domyślnie wybrane <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formant jest <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> kontroli). Możesz kliknąć **Zmienianie stylów łączy część** przycisk, aby zmienić kolor tekstu formantów niezaznaczone. Możesz również kliknąć linki niezaznaczone formantów, aby zobaczyć, jak zmienić atrybuty stylu, gdy jest wybrana kontrolka.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">A <see cref="T:System.String" /> zawiera argument zdarzenia.</param>
        <summary>Wykonuje akcje skojarzone z jedną zleceń strefy lub zgłasza zdarzenie, który dokonuje ogłoszenia serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `eventArgument` danych parametru wskazuje, że zlecenie add lub zamknij zlecenie został kliknięty, a następnie <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent%2A> metoda wykonuje akcję skojarzoną z zlecenia, takie jak dodanie <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów strony lub zamknięcia katalogu. Jeśli metoda jest wywoływana z jakiegokolwiek powodu, aby wywołać zdarzenie ogłaszania zwrotnego strony na serwerze jest wywoływany metody podstawowej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli chcesz dodać niestandardowe zlecenia, które mają <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> strefy, należy zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" /> metody do obsługi zdarzenia, jeśli użytkownik kliknie niestandardowego polecenia.</para>
        </block>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera zawartość strefy.</param>
        <summary>Renderuje strefy do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A> Metoda zastępuje metodę podstawową z <xref:System.Web.UI.WebControls.WebControl> klasy do wywołania <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> metodę, która sprawdza, czy formularz HTML jest renderowana dla formantu strefy w czasie wykonywania. Po sprawdzeniu metoda renderuje zawartość pozostałych strefy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera zawartość treści strefy.</param>
        <summary>Zastępuje metodę podstawową do renderowania obszaru treści strefy pochodną <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A> Metoda powoduje renderowanie części treści <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy, która jest obszar zawartości głównych obszarów w nagłówku i stopce i zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A> Metoda zastępuje metodę podstawową w <xref:System.Web.UI.WebControls.WebParts.WebZone> klasy, aby zapewnić specjalne renderowania, który dotyczy układu i stylu atrybuty, które dotyczą tylko <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy. Metoda renderuje tabeli, która zawiera całą zawartość treści i znajdującej się w tabeli, ustawia wartości różnych atrybutów w zależności od różnych warunków, w tym liczbę <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki są w strefie. Jeśli dostępnych jest wiele <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek, link jest tworzony dla każdego formantu i są wyświetlane tylko zawartość aktualnie zaznaczonego formantu. Atrybuty stylu specjalne są ustawiane w <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome%2A> właściwości dla wybranego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> sterowania od komputerów, które nie są obecnie wybrane.  
  
 Jeśli istnieją nie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w strefie <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A> metoda renderuje wartość <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderCatalogPartLinks">
      <MemberSignature Language="C#" Value="protected virtual void RenderCatalogPartLinks (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderCatalogPartLinks(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderCatalogPartLinks (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderCatalogPartLinks(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca zawartość łącza do formantów strefy.</param>
        <summary>Renderuje łącza indywidualnych <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów w <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A> Metoda renderuje łącza indywidualnych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty w strefie, jeśli dostępnych jest wiele <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki.  
  
 Łącze do aktualnie wybranego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> renderowania formantu inaczej, dzięki czemu będą się, od formantów niezaznaczone. Deweloperzy mogą ustawić atrybuty stylu dla formantu zaznaczone i niezaznaczone łączy dla przy użyciu <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> i <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> właściwości, odpowiednio.  
  
 Łącza do <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty w strefie nie są nawigacji; są do wyświetlania interfejsu użytkownika (UI) formantów. Po kliknięciu łącza dla formantu interfejsu użytkownika dla dowolnego wyświetlanych formantu jest ukryty i zostanie wyświetlony interfejs użytkownika dla wybranego formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku utworzenia niestandardowej klasy, która dziedziczy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> klasy, można opcjonalnie zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" /> metody. Ta metoda zapewnia programowy kontrolę nad jak łącza do <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> renderowanych kontrolek w strefie.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RenderFooter">
      <MemberSignature Language="C#" Value="protected override void RenderFooter (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderFooter(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderFooter (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderFooter(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Która renderuje obszaru stopki strefy.</param>
        <summary>Renderuje obszar stopki <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stopki <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefa jest obszarów dolnej zawierający zleceń poziomu strefy, takich jak zlecenie Dodaj i Zlecenie zamknięcia strefy. W znaczniku podstawowej stopka jest po prostu komórek tabeli HTML.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter%2A> Metoda najpierw tworzy atrybuty stylu stopce, a następnie wywołuje <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A> metody w celu renderowania Dodaj i zamknąć zleceń.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Która renderuje zleceń dla strefy.</param>
        <summary>W obszarze stopki zlecenia renderuje <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A> Metoda renderuje zlecenie Dodaj i Zlecenie zamknięcia w obszarze stopki <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" /> — Metoda nie obsługuje renderowania dla niestandardowe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> obiektów, które dewelopera dodaje do niestandardowego <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> strefy. Jeśli chcesz dodać niestandardowe zlecenia, które mają <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> klasy musi dziedziczyć z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> klasy, a następnie zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" /> metodę, która służy do renderowania niestandardowych poleceń dla swojej strefy. Konieczne jest również przesłonięcie <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" /> metoda obsługi zdarzeń po kliknięciu przez użytkownika niestandardowego polecenia.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany w <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> stan formantu, które są wykonywane po strona sieci Web jest przesyłana z powrotem do serwera.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawiera dane o stanie dla formantu. Jeśli nie było żadnych zmian do stanu, metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A> Metoda dotyczy z danymi o stanie, który ma zasadnicze znaczenie dla operacji formantu (na przykład indeksu lub słowa kluczowego) i jest oddzielona od danych stan widoku formantu.  
  
 Najpierw metoda wywołuje metodę podstawową, aby zapisać dane stanu formantu. Następnie określa czy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> obecnie jest wybrana kontrolka w strefie, sprawdzając czy <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> właściwość ma wartość. W przypadku wybrany formant metody aktualizacji do istniejących danych o stanie z danymi o stanie z wybraną kontrolkę, a następnie zwraca wszystkie dane o stanie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Opcjonalnie można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" /> metody w klasie pochodnej, aby można zaktualizować stanu kontroli zapisane dla innych niestandardowych obiektów w strefie.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany stanu widoku, które wystąpiły po strony zostało przesłane do serwera.</summary>
        <returns>Zwraca bieżący stan widoku formantu strefy. Jeśli stan widoku, nie jest skojarzony z strefy, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState%2A> Metoda wywołuje metodę podstawową, można zapisać stanu widoku skojarzone z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy. Następnie zapisuje każdy stan widoku Dodaj i zamknij zlecenia, a także <xref:System.Web.UI.WebControls.Style> obiekty skojarzone z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> i <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedCatalogPartID">
      <MemberSignature Language="C#" Value="public string SelectedCatalogPartID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedCatalogPartID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedCatalogPartID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedCatalogPartID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg jako identyfikator dla aktualnie wybranego <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontroli w strefie.</summary>
        <value>Ciąg, który służy jako identyfikator dla aktualnie zaznaczonego formantu. Wartość domyślna to wartość formantu <see cref="P:System.Web.UI.Control.ID" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> Właściwości można ustawić identyfikator wybranego dla aktualnie wybranego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantu. Nie ma to wpływu formantu <xref:System.Web.UI.Control.ID%2A> wartość właściwości, dzięki czemu można używać tej właściwości do własnych celów programistycznych. Na przykład, jeśli chcesz zawsze wykonania niektórych programowe akcji na aktualnie wybranym <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli, ta właściwość umożliwia dostęp do tego formantu za pośrednictwem żadnej znanej wartości wcześniej skonfigurowane.  
  
 Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute> i [kompozycji ASP.NET i karnacji](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> właściwości deklaratywnie i programowo. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Zwróć uwagę, pierwsza część przykładowy kod deklaruje dwa `<asp:catalogzone>` elementy, a pierwsza z nich deklaruje wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 W drugiej części przykładów kodu, wartość tekst <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> właściwość aktualnie zaznaczonego formantu jest wyświetlana.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#6)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#6)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Gdy katalogu jest widoczny, kliknij jeden z łącza do <xref:System.Web.UI.WebControls.WebParts.CatalogPart> sterowania, aby go wybrać. Następnie kliknij przycisk **Pokaż wybrany identyfikator CatalogPart** przycisk, aby wyświetlić wartość właściwości. Należy zauważyć, że wartość właściwości jest wartość, która została ustawiona deklaratywnie dla strefy. W przypadku wybrania innych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w strefie, wartość staje się taką samą wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> właściwości dla każdego formantu, gdy jest zaznaczone. Jeśli nie zostanie ustawiona wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> właściwości, wartością domyślną jest zawsze wartość <xref:System.Web.UI.Control.ID%2A> właściwości dla aktualnie zaznaczonego formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SelectedPartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SelectedPartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedPartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ SelectedPartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt zawierający atrybuty stylu <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formant, który jest aktualnie wybrane w strefie.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> zawierający atrybuty stylu dla formantu, który jest aktualnie wybrany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy, łącza są wyświetlane dla każdego typu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontroli: <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>, <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>, i <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>. Gdy użytkownik kliknie jeden z linków odpowiadającego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolka zostaje wybrany formant i formantów podrzędnych zawarty w tym wybrany formant stają się widoczne.  
  
 <xref:System.Web.UI.WebControls.Style> Zawiera odwołanie do obiektu <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> właściwość zawiera atrybuty stylu łącza dla <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formant, który jest aktualnie zaznaczony. Obiekt odwołuje się właściwość jest tylko do odczytu, nadal można go ustawić podstawowych właściwości stylu dla wybranego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> właściwości deklaratywnie i programowo. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Zwróć uwagę, pierwsza część przykładowy kod deklaruje dwa `<asp:catalogzone>` elementy, a pierwsza z nich deklaruje wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 W drugiej części przykładów kodu, kolor tekstu dla wybranego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrola została ustawiona na inną wartość.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Gdy katalogu jest widoczny, kliknij łącze dla jednego z wymienionych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty i zwróć uwagę, atrybuty stylu zaznaczonego formantu. Możesz kliknąć **Zmienianie stylów łączy część** przycisk, aby zmienić kolor tekstu zaznaczonego formantu. Możesz również kliknąć linki niezaznaczone formantów, aby zobaczyć, jak zmienić atrybuty stylu, gdy jest wybrana kontrolka.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectTargetZoneText">
      <MemberSignature Language="C#" Value="public virtual string SelectTargetZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectTargetZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectTargetZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectTargetZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst obok kontrolki w katalogu interfejs użytkownika (UI), który umożliwia użytkownikom wybór które strefę, aby dodać ich zaznaczonych formantów.</summary>
        <value>Ciąg, który zawiera tekst do wyświetlenia obok formant wyboru strefy. Domyślny ciąg specyficzne dla kultury są dostarczane przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wyświetleniu katalogu interfejsu użytkownika, użytkownicy mogą wybrać jedną z <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty, takie jak <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>, który zawiera <xref:System.Web.UI.WebControls.WebParts.WebPart> lub innych kontrolek serwera, które mogą zostać dodane do strony sieci Web. Użytkownik wybiera jeden lub kilka formantów i można następnie użyć <xref:System.Web.UI.WebControls.DropDownList> kontroli w obszarze stopki katalogu i wybierz <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontrolki na stronie, w którym można umieścić kontrolek wybranego serwera. Wartość tekstu <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> właściwość jest wyświetlana obok <xref:System.Web.UI.WebControls.DropDownList> formant jako proste instrukcji.  
  
 Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute> i [lokalizacja i globalizacja](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> właściwości deklaratywnie i programowo. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Przegląd klasy.  
  
 Zwróć uwagę, pierwsza część przykładowy kod deklaruje dwa `<asp:catalogzone>` elementy, a pierwsza z nich deklaruje wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 W drugiej części przykładów kodu, wartość <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> programowo zmienić właściwości.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 Podczas ładowania strony w przeglądarce, można wybrać **katalogu** z listy rozwijanej, aby przełączyć do trybu wyświetlania katalogu. Gdy katalogu jest widoczna, należy pamiętać, tekst wyświetlany obok <xref:System.Web.UI.WebControls.DropDownList> formantu w stopce katalogu. Możesz kliknąć **ustawić właściwości tekst strefy** przycisk, aby zmienić właściwości wartości tekstowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCatalogIcons">
      <MemberSignature Language="C#" Value="public virtual bool ShowCatalogIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCatalogIcons" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowCatalogIcons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowCatalogIcons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formanty serwera w katalogu wyświetlić skojarzone z nimi ikony w katalogu.</summary>
        <value>
          <see langword="true" /> Jeśli powinny być wyświetlane ikony skojarzone z formantami serwera w katalogu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> Formanty i innych kontrolek serwera, które są opakowywane jako <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formantów w czasie wykonywania ma <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A> właściwości. Wartość tej właściwości jest adres URL obrazu, który jest używany jako ikona do reprezentowania formantu w katalogu formantów.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A> Właściwość wskazuje, czy ikony skojarzone z <xref:System.Web.UI.WebControls.WebParts.WebPart> i innych kontrolek serwera są wyświetlane w katalogu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja par nazwa/wartość przesłane do serwera.</param>
        <summary>Implementuje <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> metody wywołując <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> metody <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> klasy.</summary>
        <returns>
          <see langword="true" /> Jeśli zdarzenie powinien być wywoływany w celu wskazania, że dane zostały zmienione; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> wystąpienia jest rzutowane na <xref:System.Web.UI.IPostBackDataHandler> interfejsu. Po prostu wywołuje metodę <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A> metoda <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> klasy, która z kolei przetwarza stanu pola wyboru w katalogu, które odpowiadają kontrolek serwera w katalogu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> wystąpienia jest rzutowane na <xref:System.Web.UI.IPostBackDataHandler> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Śledzi zmiany w stan widoku formantu strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState%2A> Najpierw metoda wywołuje metodę podstawową <xref:System.Web.UI.WebControls.WebParts.ToolZone> klasę, aby śledzić stan widoku skojarzone z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy. Następnie metoda rozpoczyna śledzenie stanu widoku Dodaj i zamknij zleceń, jak również <xref:System.Web.UI.WebControls.Style> obiekty skojarzone z <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> i <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>