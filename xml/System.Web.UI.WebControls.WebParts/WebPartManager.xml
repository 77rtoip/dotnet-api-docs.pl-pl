<Type Name="WebPartManager" FullName="System.Web.UI.WebControls.WebParts.WebPartManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39878b0a58d88077e3f60f42a8b9f566fd421748" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30691928" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartManager extends System.Web.UI.Control implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartManager&#xA;Inherits Control&#xA;Implements INamingContainer, IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartManager : System::Web::UI::Control, System::Web::UI::INamingContainer, System::Web::UI::WebControls::WebParts::IPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IPersonalizable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ViewStateModeById</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Pełni rolę centralnej klasy zestawu kontroli części sieci Web, zarządzanie wszystkie składniki Web Part formantów, funkcje i zdarzenia występujące na stronie sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontroli pełni funkcję Centrum koncentratora lub kontroli aplikacji części sieci Web. Musi istnieć jeden — i tylko jeden--<xref:System.Web.UI.WebControls.WebParts.WebPartManager> wystąpienie kontrolki na każdej stronie, która używa kontrolki części sieci Web. Podobnie jak w przypadku większości aspektów aplikacji składników Web Part <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli działa tylko dla użytkowników uwierzytelnionych. Co więcej, jego funkcja działa prawie całkowicie z formantami serwera, które znajdują się w strefach składników Web Part, które dziedziczą z <xref:System.Web.UI.WebControls.WebParts.WebZone> klasy. Formanty serwera, które znajdują się na stronie poza tych stref może mieć bardzo mało funkcji części sieci Web ani możliwości interakcji z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu.  
  
 Jako koncentrator funkcji składników Web Part na stronie <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli wykonuje rodzaje zadań opisanych w poniższej tabeli.  
  
|Kategoria zadania|Co to jest formant|  
|-------------------|---------------------------|  
|Formanty składników Web Part śledzenia|Przechowuje informacje o wiele różnych formantów na stronie, które zapewniają funkcje części sieci Web, w tym <xref:System.Web.UI.WebControls.WebParts.WebPart> , połączeń, stref, a inne.|  
|Dodawanie i usuwanie składników Web Part formantów|Udostępnia metody dodawania, usuwania i zamykania <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów na stronie.|  
|Administrowanie połączeń|Tworzy połączenia między formantami i monitoruje połączenia, a także procesy dodawania i usuwania ich.|  
|Personalizowanie kontrolek i stron|Umożliwia użytkownikom przenoszenie formantów do różnych lokalizacji na stronie, a następnie uruchamia widoków, w których użytkownicy mogą edytować wygląd, właściwości i zachowanie kontroli. Przechowuje ustawienia personalizacji specyficzne dla użytkownika na każdej stronie.|  
|Przełączanie między widokami innej strony|Zmienia strony między różne widoki specjalne strony, dzięki czemu użytkownicy mogą przeprowadzać niektórych zadań, takich jak zmiana układ strony lub formantów edycji.|  
|Wywoływanie zdarzeń cyklu życia części sieci Web|Definiuje, generuje i umożliwiają deweloperom do obsługi zdarzeń cyklu życia formantów części sieci Web, na przykład jeśli formanty są dodawane, przeniesione, połączony, usunięte lub.|  
|Włączanie importowanie i eksportowanie formantów|Eksportuje strumieni XML, które zawierają stan właściwości <xref:System.Web.UI.WebControls.WebParts.WebPart> steruje i umożliwia importowanie plików dla wygody w personalizowanie złożonych kontrolek w innych stron lub witryn.|  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasa ma duży zbiór właściwości. Zgodne z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> roli śledzenia inne formanty, ma wiele właściwości, które odwołują się do kolekcji formantów części sieci Web lub innych obiektów specjalnych części sieci Web. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, I <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> właściwości są wszystkie kolekcje używane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli dla jego śledzenia i innych zadania zarządzania.  
  
 Innej grupy właściwości zawiera dostosowania ostrzeżenia, które są stosowane w niektórych scenariuszach, które występują w aplikacji sieci Web Part. Obejmują one <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasa zastępuje niektóre podstawowe właściwości dziedziczone, które są używane przez wiele kontrolki serwera sieci Web. Obejmują one <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> właściwości.  
  
 Na koniec istnieje grupa właściwości przydatne w przypadku uzyskiwania dostępu do bieżącego stanu aplikacji. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> Właściwość wskazuje bieżący tryb wyświetlania należącego do strony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> Właściwość wskazuje, czy formant może renderować skryptu po stronie klienta, które jest odpowiednie w sytuacjach, gdy użytkownicy mogą mają przeglądarki z różne możliwości lub skryptów wyłączone. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Właściwość jest przydatna dla odwołania do klasy narzędzia, która zawiera wywołania do liczby ważne metody części sieci Web, które są używane w przypadku rozszerzeń. Ukrywając wywołania tych metod w klasie oddzielne ( <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> klasy), <xref:System.Web.UI.WebControls.WebParts.WebPartManager> własne klasy interfejsu API jest uproszczone. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Właściwość zapewnia dostęp do obiektów personalizacji, które przechowują ustawień personalizacji użytkowników i zachować te dane w magazynie trwałym. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Wskazuje właściwość, która <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu na stronie jest obecnie wybrane przez użytkownika lub aplikacji. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Właściwość wskazuje, czy dane personalizacji niestandardowe na <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki została zmieniona.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Formant zawiera pięć trybów wyświetlania wbudowanych lub widoki strony sieci Web. Deweloperzy mogą rozszerzać tej funkcji tworzenia trybów wyświetlania niestandardowych rozszerzając typów, takie jak <xref:System.Web.UI.WebControls.WebParts.WebZone> klasy lub <xref:System.Web.UI.WebControls.WebParts.ToolZone> klasy. Użytkownicy można przełączać strony do różnych trybów wyświetlania, pod warunkiem, że właściwy rodzaj formantów, które odpowiadają tryb wyświetlania danego znajdują się na stronie.  
  
> [!NOTE]
>  Istnieje możliwość rozszerzanie tej funkcji, dzięki czemu użytkownicy mogą przełączać w tryb wyświetlania niestandardowych bez konieczności odpowiadającą strefę na stronie. Domyślnym zachowaniem jest jednak trybów wyświetlania odnoszą się do strefy.  
  
 Tryby wyświetlania standardowe są reprezentowane przez pola publiczne w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy. W poniższej tabeli przedstawiono pola i trybów wyświetlania, których dotyczą. Bieżący tryb wyświetlania strony, jak wspomniano powyżej, zawsze odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwości wraz z zestawem trybów wyświetlania, jaki jest dostępny na stronie podany rodzaj stref, które znajdują się na stronie znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwości.  
  
|Pole|Szczegóły trybu wyświetlania|  
|-----------|--------------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|Zwykły użytkownik widok strony sieci Web; domyślną i najbardziej typowych tryb wyświetlania.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|Widok, w którym użytkownicy mogą rozmieszczanie lub usunąć formantów, aby zmienić układ strony.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|Widok, w którym edycji interfejsu użytkownika (UI) staje się widoczna; Użytkownicy mogą edytować wygląd, właściwości i zachowanie formantów, które są widoczne w trybie normalnym przeglądania.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|Widok, w którym katalogu interfejsu użytkownika staje się widoczna; Użytkownicy mogą dodawać formanty do strony z katalogów dostępnych formantów.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|Widok, w którym połączenie interfejsu użytkownika staje się widoczna; Użytkownicy mogą połączyć, zarządzania i rozłączenie połączeń między formantami.|  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Formant zawiera również liczbę zdarzeń, które są niezbędne w cyklu życia składników Web Part stron i kontrolek. Zdarzenia te zapewniają dokładne programowe kontrolę nad zachowanie formantów składników Web Part. Większości metod odnoszą się bezpośrednio do <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (lub inne formanty serwera lub użytkownika, które są umieszczone w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy, dzięki czemu działają jako <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów). Jednak kilka zdarzeń odnoszą się do stanu strony lub połączeń na stronie. Poniższej tabeli wymieniono dostępne zdarzenia i podsumowanie ich celów.  
  
> [!NOTE]
>  We wszystkich przypadkach w poniższej tabeli, word "control" odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPart> formant lub każdego formantu serwera, który znajduje się w strefie i jest opakowane <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu w czasie wykonywania.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>|Występuje zaraz przed formant został dodany do strony, aby sprawdzić, czy jest autoryzowany.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>|Występuje po uaktywnieniu wszystkich połączeń na stronie.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>|Występuje tuż przed proces aktywacji wszystkich połączeń na stronie.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>|Występuje po zmianie bieżącego trybu wyświetlania strony.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>|Występuje tuż przed proces zmiany trybu wyświetlania strony.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>|Występuje, gdy zaznaczenie formantu zostało anulowane.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>|Występuje tuż przed proces anulowanie zaznaczenia formantu.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>|Występuje, gdy formant został dodany do strefy.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>|Występuje tuż przed proces dodawania formantu do strefy.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>|Występuje, gdy formant został zamknięty (usunięta ze strony).|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>|Występuje tuż przed proces zamykania formantu.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>|Występuje, gdy wystąpienie kontrolki dynamicznej (po jednym utworzonych programowo lub dodać z wykazu) zostały trwale usunięte.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>|Występuje tuż przed proces usuwania dynamicznej kontroli.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>|Występuje, gdy formant zostanie przeniesiona w ramach strefy lub do innej strefy.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>|Występuje tuż przed proces przechodzenia formantu.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>|Występuje po dwóch formantów wybrane do udziału w połączenie zostało ustanowione połączenie.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>|Występuje tuż przed proces łączenia dwóch formantów.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>|Występuje po rozłączeniu dwóch formantów połączonych.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>|Występuje tuż przed procesu rozłączenia dwóch formantów.|  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Formant ma wiele metod do zarządzania stronami części sieci Web. Duży zbiór metod, niewymienione w tym metodami, których nazwy formę na*EventName*. Te metody zwykle podnieść ich skojarzonego zdarzenia i podaj zdarzenia z obsługą typu <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>. Większość tych metod może zostać przesłonięta przez deweloperów, którzy dziedziczyć <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy. Ponadto strona deweloperzy mogą podać niestandardowe programy obsługi dla zdarzenia powiązane z tych metod. Na przykład w odniesieniu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> zdarzeń, deweloper strony można dodać `OnWebPartAdded` atrybutu `<asp:webpartmanager>` elementu w znaczniku strony sieci Web, a następnie przypisz metody niestandardowej nazwy atrybutu by zapewnić niestandardową obsługę zdarzenia. Atrybut odpowiada <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> — metoda i ten podstawowy wzorzec działa w przypadku większości zdarzeń części sieci Web i ich skojarzonych metody obsługi zdarzeń.  
  
 Ponadto <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant ma określonych metod do zarządzania <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (i kontrolki serwera lub użytkownika używany jako <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów). Te metody obejmują <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.  
  
 Inny zestaw metod jest przeznaczone do połączenia. Obejmuje to metody takie jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.  
  
 Ponadto niektóre <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metody skupić się na temat funkcji personalizacji. Obejmują one <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.  
  
 Aby uzyskać więcej informacji na temat innych <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metod, które są dostępne za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> właściwości, zobacz dokumentację <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie zarówno deklaratywne i programowe <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strona sieci Web zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą zostać nawiązane połączenie, i `<asp:webpartmanager>` elementu.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i niestandardowy interfejs.  
  
-   Opis działania przykład w przeglądarce.  
  
 Formant użytkownika ma kontrolkę listy rozwijanej, która trybów wyświetlania możliwe jest wyświetlany na stronie podane formantów składników Web Part, które znajdują się na stronie. Na stronie sieci Web w tym przykładzie kodu tego formantu użytkownika zadeklarowano poniżej <xref:System.Web.UI.WebControls.WebParts.WebPartManager> elementu w znaczniku strony i ma `Register` dyrektywy w górnej części strony sieci Web, aby zarejestrować formantu. Aby uzyskać szczegółowe informacje dotyczące wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/DisplayModeMenuVB.ascx#6)]  
  
 Deklaracyjne znaczników dla strony sieci Web zawiera `Register` dyrektywy dla formantu użytkownika i kontrolek niestandardowych. Brak `<asp:webpartmanager>` elementu `<asp:webpartzone>` element zawiera formanty niestandardowe i `<asp:connectionszone>` elementu. Strona zawiera również niektóre wbudowany kod, który obsługuje zdarzenia związane z połączeniem dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować; można zobaczyć efekt ten kod, jak nawiązywanie i zakańczanie kontrolki.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Trzeci część przykładzie jest kontroli kodu źródłowego. Należy pamiętać, że interfejs o nazwie `IZipCode`, a ten interfejs jest wdrażany w `ZipCodeWebPart` klasy. Ta klasa ma metodę wywołania zwrotnego specjalne o nazwie `ProvideIZipCode` służy jako dostawca. Innego typu, o nazwie `WeatherWebPart`, również jest implementowana przy użyciu specjalnej metody o nazwie `GetIZipCode`, co pozwala formantu do działania jako konsumenta innych formantu.  
  
 Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. Ten przykład kodu zakłada, że źródło ma skompilowany w zestawie i `Register` dyrektywy na stronie sieci Web odwołuje się do nazwy zestawu. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/ZipCodeComponent.vb#2)]  
  
 Po załadowaniu w przeglądarce strony sieci Web, kliknij przycisk **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **Connect** przełączyć stronę, aby połączyć tryb. Połącz używa trybu `<asp:connectionszone>` elementu umożliwiają tworzenie połączenia między formantami. W trybie łączenia, kliknij strzałkę w dół w pasku tytułu **kod POCZTOWY** sterowania do aktywacji jego menu zleceń, a następnie kliknij przycisk **Connect**. Gdy zostanie wyświetlony interfejs użytkownika połączenia, kliknij przycisk **Utwórz połączenie z klientem** łącza. Komórki zostanie zawiera formant listy rozwijanej. Wybierz **kontroli pogody** w listy rozwijanej, a następnie kliknij przycisk **Connect** do zakończenia połączenia dwóch formantów. Kliknij przycisk **Zamknij**, a następnie użyć **tryb wyświetlania** listy rozwijanej, aby powrócić do trybu normalnego przeglądania strony. Można wprowadzić kod POCZTOWY i kontroli klienta zostaną zaktualizowane wprowadzane wartości. Ponieważ `ZipCode` właściwość została oznaczona atrybutem `Personalizable` atrybutu w kodzie źródłowym, a wartość tej właściwości będzie zachowywane między sesjami przeglądarki, w związku z tym zapisywania wartości wprowadzonej przez użytkownika. Bardziej złożone kontroli klienta można uwzględnienia informacji kod POCZTOWY, wyszukiwanie informacji o pogodzie na podstawie kodu i wyświetl ją do użytkownika.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Formantu ma zostać rozszerzony. Ponieważ jest więc centralnej do części sieci Web aplikacji, jeśli chcesz rozszerzyć niektóre określonego typu lub kontrolować w zestawie formantu składników Web Part w wielu przypadkach muszą obejmować <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy, ponieważ prawdopodobnie będą istnieć niektórych właściwości lub metody, która jest wymagana do udostępnienia  danego typu niestandardowego działają w kontekście aplikacji części sieci Web. Składniki Web Part odwołania dokumentacji (zobacz <see cref="N:System.Web.UI.WebControls.WebParts" />), gdy dyskutować jak rozszerzyć składników Web Part typ, często uwagi co trzeba zrobić, aby rozszerzyć <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> również klasy lub pokazuje, jak rozszerzyć w przykładzie kodu.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.%23ctor%2A> Konstruktor inicjuje kilka ważnych zmiennych <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Przypisanie co bezpośrednio wpływa na wszystkich stronach składników Web Part jest fakt, że ustawiono tryb przeglądania domyślny tryb wyświetlania strony (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateConnections">
      <MemberSignature Language="C#" Value="protected virtual void ActivateConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ActivateConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ActivateConnections ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ActivateConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uaktywnia wszystkich połączeń na stronie sieci Web, które nie są obecnie aktywne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Metoda jest wywoływana na każde żądanie strony do aktywowania istniejących połączeń między <xref:System.Web.UI.WebControls.WebParts.WebPart> i innych kontrolek serwera znajdującej się w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy. W niektórych przypadkach do wystąpienia, jeśli istnieje konflikt w połączeniach aktywowana, ta metoda z kolei wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metodę, aby zakończyć połączenie powodować problemy. Podczas procesu rozłączania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenia. Zwykle deweloperzy może anulować to zdarzenie, ale w przypadku tam, gdzie to konflikt między połączenia nie może być anulowana, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka wymaga rozwiązać konflikt, aby zakończyć proces aktywacji połączenia. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPart AddWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPart ^ AddWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (Lub serwera lub użytkownika) do dodania do strony sieci Web lub otworzyć na stronie.</param>
        <param name="zone">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> Który <c>składnika Web Part</c> jest dodawany do.</param>
        <param name="zoneIndex">Liczba całkowita, która reprezentuje numer pozycji, które <c>składnika Web Part</c> zajmuje w <c>strefy</c>, względnym w stosunku do innych kontrolek w <c>strefy</c>.</param>
        <summary>Zawiera standardowe programowe metoda dodawania <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formanty do strony sieci Web.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant, który został dodany do strony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> Metoda jest używana zarówno do dodawania nowych dynamicznie <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki na stronie i ponownie otworzyć formanty statyczne lub dynamiczne, które wcześniej zostały zamknięte na stronie. Po wywołaniu metody, aby dodać nową kontrolkę, faktycznie tworzy kopię formantu, do którego odwołuje się `webPart` parametru. Nowy identyfikator jest generowany kopii formantu, więc deweloperzy powinien odwoływać <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli zwrócona przez metodę, aby uzyskać nową wartość Identyfikatora. Aby ponownie otworzyć wcześniej zamknięte formantu ma zostać wywołana metoda, zwraca bezpośrednie odwołanie do formantu odwołuje się `webPart` parametru.  
  
> [!IMPORTANT]
>  Zawsze należy używać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metody, a nie <xref:System.Web.UI.ControlCollection.Add%2A> metody kolekcji formantów odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=nameWithType> właściwości, aby dodać <xref:System.Web.UI.WebControls.WebParts.WebPart> programowo kontrolki do strony, ponieważ używa <xref:System.Web.UI.ControlCollection.Add%2A> Metoda zgłasza wyjątek. Aby dodać kontrolkę, która nie jest <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu (innymi słowy, formantu serwera, który będzie ujęte w <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formantu w czasie wykonywania), należy najpierw wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metodę, aby utworzyć formantu, a następnie wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metody w celu dodania formant. Pokaz tego podejścia znajduje się w sekcji przykładu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metody w celu dodania kontrolki serwera programowo do strony. Znaczników zawiera pustą `<asp:webpartzone>` elementu i `<asp:webpartmanager>` elementu. Po raz pierwszy **dodać kalendarza** kliknięciu przycisku kod w przypadku obsługi tworzy <xref:System.Web.UI.WebControls.Calendar> kontroli i dodaje go do strefy jako <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektów i wywoływania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> — metoda.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> jest <see langword="null" />.  
  
 \- lub -  
  
 <paramref name="zone" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="zone" /> nie jest zarejestrowany w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu zbioru stref.  
  
 \- lub -  
  
 <paramref name="webPart" /> jest już <paramref name="zone" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <paramref name="zoneIndex" /> jest mniejsza od zera.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AuthorizeWebPart">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeWebPart As WebPartAuthorizationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventHandler ^ AuthorizeWebPart;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" /> metoda jest wywoływana w celu określenia czy <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolki serwera można dodać do strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Zawsze, gdy wystąpi zdarzenie <xref:System.Web.UI.WebControls.WebParts.WebPart> formant jest dodawany do strony. Istnieje wiele typowych scenariuszy, w którym można dodać formantu do strony. Pełny opis tych, zobacz sekcję uwag dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody. Po dodaniu formantu musi zaznaczone aby zobaczyć, czy jego <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwość została ustawiona, a jeśli tak, czy formant jest autoryzowany do dodania do strony.  
  
 Deweloperzy mogą tworzyć obsługi zdarzeń <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzeń, aby zapewnić filtrowania dla formantów. Jeśli formantu <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> wartość właściwości nie spełnia kryteriów w kodzie programu obsługi zdarzeń, formant nie został dodany do strony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak ustawić programu obsługi zdarzeń niestandardowych dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzenie, które automatycznie zastępuje domyślną <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metody.  
  
 Kod w `mgr1_AuthorizeWebPart` metoda sprawdza, czy formanty na stronie odpowiednich <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> wartości właściwości ustawiane na `user` i jeśli tak, zwraca `true`, co oznacza, że będzie można autoryzacji i dodany do strony. Przyjęto założenie, że podejście domyślny jest umożliwienie użytkownikom na wyświetlanie formantów za pomocą strony w zakresie personalizacji użytkownika. Zwróć uwagę, że w przykładzie jedną formantów ma jego <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> ustawioną wartość właściwości `admin`. Deweloperzy mogą umieścić filtru na specjalistyczne formant, który zostało zaprojektowane na potrzeby tylko użytkownicy z uprawnieniami administracyjnymi zobaczyć. Ten formant zakończy się niepowodzeniem podczas sprawdzania autoryzacji <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzeń, a nie będą wyświetlane. Formanty, które nie mają zestaw właściwości są wyświetlane również; są one przyjmowane jako nie powinien być częścią scenariusza filtrowania, ponieważ ich <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> nie ustawiono właściwości.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
      </Docs>
    </Member>
    <Member MemberName="AvailableTransformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableTransformers As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ AvailableTransformers { System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> obiektów, które są dostępne dla używany do tworzenia składników Web Part połączeń między formantami serwera.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" /> zawierający zestaw <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość używa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> metodę w celu utworzenia kolekcji. Domyślnie jest odczytywana dostępnych funkcji przekształcania z pliku konfiguracji aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartConnecting(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartConnecting(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Formant, dla której utworzona jest połączenie.</param>
        <summary>Uruchamia proces łączenia dwóch <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> Istnieje metoda, dzięki czemu proces tworzenia połączenia między formantami może odbywać się w różnych etapach, podając deweloperom większą kontrolę nad procesem połączenia. Metoda przeprowadza zestawu testów początkowej, aby upewnić się, że `webPart` jest w stanie, w którym połączenie legalnego można tworzone. Jeśli `webPart` pomyślnie przejdzie wszystkie testy, następnie jest ustawiona jako aktualnie zaznaczonego formantu (zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> właściwości), i kontynuować proces łączenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nie jest bieżący tryb wyświetlania na stronie <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> jest zamknięty.  
  
 \- lub -  
  
 <paramref name="webPart" /> to nie jest częścią <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> kolekcji.  
  
 - lub -  
  
 <paramref name="webPart" /> jest równa <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> formantu.</exception>
        <block subset="none" type="overrides">
          <para>Deweloperzy, którzy chcą rozszerzyć <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontroli chcieć przesłonić tę metodę w klasie pochodnej. Jeden z nich będzie wywoływać metodę podstawową, a następnie dodaj dodatkowe Obsługa niestandardowych; można też dostosować proces uruchamiania połączenia między formantami. Na przykład można sprawdzić, czy niektóre dane są dostępne, przed utworzeniem połączenia.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartEditing(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartEditing(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Formant do edycji.</param>
        <summary>Uruchamia proces edycji <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Istnieje metoda, dzięki czemu proces formantów edycji może odbywać się w różnych etapach, podając deweloperom większą kontrolę nad procesem. Metoda przeprowadza zestawu testów początkowej, aby upewnić się, że `webPart` jest w stanie, w którym można edytować. Jeśli `webPart` pomyślnie przejdzie wszystkie testy, następnie jest ustawiona jako aktualnie zaznaczonego formantu (zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> właściwości), i kontynuować proces edycji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nie jest bieżący tryb wyświetlania na stronie <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> jest zamknięty.  
  
 \- lub -  
  
 <paramref name="webPart" /> to nie jest częścią <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> kolekcji.  
  
 - lub -  
  
 <paramref name="webPart" /> jest równa <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> formantu.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      </Docs>
    </Member>
    <Member MemberName="BrowseDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrowseDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ BrowseDisplayMode;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje domyślny tryb wyświetlania dla stron, które zawierają formanty części sieci Web. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Odwołuje się do pola niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy bez konieczności wystąpienia formantu.  
  
 Jeśli strona zawierająca składników Web Part steruje pierwszy obciążeń, znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (tryb przeglądania) domyślnie. Gdy użytkownicy są po prostu przeglądanie tak samo jak na stronie sieci Web normalne, strony pozostaje w trybie przeglądania. Użytkownicy chcą spersonalizować na stronie układu, kontrolek, wygląd lub zachowanie, ich strony przełączyć na jeden z trybów wyświetlania specjalne dostępne za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób pracy z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> pola programowo. Kod wypełnia listy rozwijanej z trybów wyświetlania obsługiwanych, będące w tym przypadku przeglądania i projektowania. Zwróć uwagę, że w `Page_PreRender` metoda, kontroli kodu czy bieżące <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>. Jeśli tak, `Label1` będą widoczne, a jeśli nie, `Label1` zostanie ukryta.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/CS/wpmgrBrowseDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/VB/wpmgrBrowseDisplayModevb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, są w trybie przeglądania domyślnie. Zwróć uwagę na etykiecie strony, który wskazuje, że jesteś w trybie przeglądania. Formant listy rozwijanej, aby przełączyć do trybu projektowania strony. Zwróć uwagę, że, ze względu na kod w `Page_PreRender` metody etykiety jest teraz ukryte.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawdza <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów, które będą uczestniczyć w ramach połączenia, aby ustalić, czy są w stanie połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> Metoda jest używana do określenia, czy dwa <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty mogą zostać połączone. Metoda jest zwykle używana w celu sprawdzenia warunkowego przed wywołaniem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> metody.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> Metoda sprawdza liczbę kryteriów, które muszą zostać spełnione przed dwóch formantów może się komunikować. Poniższa lista zawiera podsumowanie głównej kryteria tworzenia połączenia. Jeśli są spełnione wszystkie te kryteria (oraz pewne dodatkowe warunki wewnętrznego), metoda zwraca `true`, to znaczy podłączona kontrolki:  
  
-   Formanty dostawcy i klienta nie może być `null`, i muszą być zawarte w kolekcji formantów odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwości.  
  
-   Dostawcy i klienta nie może mieć tej samej kontrolki. Innymi słowy <xref:System.Web.UI.WebControls.WebParts.WebPart> formant nie może połączyć się do samej siebie.  
  
-   <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Obiektów (punkty połączenia) dla dostawcy i klienta nie może być `null`.  
  
-   Nie można zamknąć dostawcy i klienta (formant nie <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> właściwość może być `true`).  
  
-   <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Właściwości formantu punktu połączenia musi odpowiadać typowi formantu użytkownika i dostawcy.  
  
-   Punkty połączenia zarówno należy włączyć (ich <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metody muszą zarówno zwracać `true`).  
  
-   Każdy punkt połączenia musi nie należy próbować tworzą więcej połączeń niż informacjami określonymi we własnym <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> właściwości.  
  
-   Jeśli <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu (transformatora) są wymagane do połączenia niezgodne formantów, nie może być `null`. Jednak jeśli formanty są już zgodne, transformator musi być `null`.  
  
-   Transformator (jeśli jest używany) muszą odwoływać się do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A> kolekcji.  
  
-   Transformator (jeśli jest używany) muszą mieć interfejsów, które są zgodne z dostawcy i klienta, dzięki czemu można przekształcać dane między dwa formanty. Dodatkowej interfejsów użytkownika i dostawcy również muszą być zgodne.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Formant, który dostarcza dane do <c>konsumenta</c> po nawiązaniu połączenia kontrolki.</param>
        <param name="providerConnectionPoint">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> , który umożliwia <c>dostawcy</c> brać udziału w połączeniu.</param>
        <param name="consumer">Formant, który odbiera dane z <c>dostawcy</c> po nawiązaniu połączenia kontrolki.</param>
        <param name="consumerConnectionPoint">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> działający jako metoda wywołania zwrotnego tak że <c>konsumenta</c> mogą uczestniczyć w połączeniu.</param>
        <summary>Sprawdza <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów, które będą uczestniczyć w ramach połączenia, aby określić, czy są w stanie połączenia, jeżeli kontroli klienta i dostawcy interfejsy zgodne i na <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> obiektu nie jest wymagana.</summary>
        <returns>Wartość logiczna, która wskazuje, czy <paramref name="provider" /> i <paramref name="consumer" /> mogą zostać połączone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do łączenia `provider` i `consumer` gdy oba formanty mają niezgodne połączenia punktu typy, tak aby <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu nie jest wymagana. Można użyć tej metody do Sprawdź, czy dwa formanty można połączenie przed wywołaniem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> Aby utworzyć połączenie programowe.  
  
 To przeciążenie używa tej samej implementacji jako <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> przeciążenie metody, z wyjątkiem jest to przeciążenie nie wymaga transformatora.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak użyć tej metody.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strona sieci Web zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą zostać połączone, `<asp:webpartmanager>` element i niektóre kod obsługi zdarzeń, który tworzy połączenia za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> — metoda.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i niestandardowy interfejs.  
  
-   Opis działania przykład w przeglądarce.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać więcej informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Deklaracyjne znaczników dla strony sieci Web zawiera `Register` dyrektywy dla formantu użytkownika i kontrolek niestandardowych. Brak `<asp:webpartmanager>` elementu `<asp:webpartzone>` element zawiera formanty niestandardowe i `<asp:connectionszone>` elementu. Zwróć uwagę, że w `Page_Load` metody kod sprawdza, czy połączenie jest możliwe i, jeśli tak, określa dostawcę, konsumenta i ich punkty połączenia odpowiednich, a następnie dodaje nowe połączenie do zestawu połączenia statyczne odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>właściwości.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Trzeci część przykładzie jest kontroli kodu źródłowego. Zawiera on interfejs i dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroluje jedno działający jako dostawca i innych klientów. Ponieważ mają one punktów połączeń (oba rozpoznaje `IZipCode` interfejsu), transformatora nie jest wymagane do nawiązania połączenia. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/ZipCodeComponent.vb#2)]  
  
 Po załadowaniu w przeglądarce strony sieci Web, kliknij przycisk **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **Connect** przełączyć stronę, aby połączyć tryb. Połącz używa trybu `<asp:connectionszone>` elementu umożliwiają tworzenie połączenia między formantami. W trybie łączenia, kliknij strzałkę w dół w pasku tytułu **kod POCZTOWY** sterowania do aktywacji jego menu zleceń, a następnie kliknij przycisk **Connect**. Gdy zostanie wyświetlony połączenia interfejsu użytkownika (UI), zwróć uwagę, połączenie już zostały utworzone przez kod zawarty w `Page_Load` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Formant, który dostarcza dane do <c>konsumenta</c> po nawiązaniu połączenia kontrolki.</param>
        <param name="providerConnectionPoint">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> działający jako metoda wywołania zwrotnego tak że <c>dostawcy</c> mogą uczestniczyć w połączeniu.</param>
        <param name="consumer">Formant, który odbiera dane z <c>dostawcy</c> po nawiązaniu połączenia kontrolki.</param>
        <param name="consumerConnectionPoint">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> działający jako metoda wywołania zwrotnego tak że <c>konsumenta</c> mogą uczestniczyć w połączeniu.</param>
        <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> , który umożliwia niezgodną <c>dostawcy</c> i <c>konsumenta</c> się połączyć.</param>
        <summary>Sprawdza <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów, które będą uczestniczyć w ramach połączenia, aby ustalić, czy są w stanie połączenia i używa <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> obiekt, aby utworzyć połączenie między niezgodne klienta oraz dostawcy.</summary>
        <returns>Wartość logiczna, która wskazuje, czy <paramref name="provider" /> i <paramref name="consumer" /> może się komunikować.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do łączenia `provider` i `consumer` gdy oba formanty mają niezgodne połączenia punktu typy, tak aby <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> wymagany jest obiekt. Można użyć tej metody do Sprawdź, czy dwa formanty można połączenie przed wywołaniem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> Aby utworzyć połączenie programowe.  
  
 To przeciążenie używa tej samej implementacji jako <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29> przeciążenie metody, z wyjątkiem jest, że to przeciążenie wymaga transformatora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CatalogDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ CatalogDisplayMode;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje tryb wyświetlania służąca do dodawania formantów serwera z katalogu formantów do strony sieci Web. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> Odwołuje się do pola niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy bez konieczności wystąpienia formantu.  
  
 Kiedy użytkownik chce dodawanie formantów do strony, jeśli katalog formantów serwera jest dostępny, można przełączyć się strony, aby <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> (tryb katalogu), i zostanie wyświetlony katalogu interfejs użytkownika (UI). Interfejs użytkownika dla wykaz części sieci Web są udostępniane przez <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy kontroli. Deweloperzy tej strefy, Dodaj do strony w czasie projektowania, a następnie dodaj formanty serwera do strefy, dzięki czemu użytkownicy będą mogli dodawać tych kontrolek do stron w czasie wykonywania. Po dodaniu tych kontrolek dewelopera trybu katalogu staje się tryb wyświetlania obsługiwane na tej stronie, ponieważ istnieją niezbędnych opcji Aby włączyć tryb katalogu.  
  
 Gdy użytkownik przełącza strony do katalogu tryb, strefie i wszystkich kontrolek serwera, które zostały dodane do niego stają się widoczne i użytkownik może wybrać formantów z katalogu, aby dodać do strony lub usuwanie kontrolek na stronie. Po dodaniu kontrolki na stronie pojawią się one w trybie normalnym przeglądania i aktualizacji strony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób pracy z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> pola programowo. Kod wypełnia menu rozwijanego z trybami obsługiwanych wyświetlania dla strony, będące w tym przypadku przeglądania, projektowania i katalogu. Tryb wykazu jest dostępny z powodu `<asp:CatalogZone>` elementu i jego elementów podrzędnych na stronie sieci Web. Zwróć uwagę, że w `Page_PreRender` metoda, kontroli kodu czy bieżące <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>. Jeśli tak, `Label1` będą widoczne, a jeśli nie, `Label1` zostanie ukryta.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/CS/wpmgrCatalogDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/VB/wpmgrCatalogDisplayModevb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, są w trybie przeglądania domyślnie. Zwróć uwagę, że etykieta na stronie jest ukryty. Formant listy rozwijanej Aby włączyć tryb katalogu strony. Zwróć uwagę, że, ze względu na kod w `Page_PreRender` metody etykiety jest teraz widoczne. Można wybrać formant w katalogu i dodaj go do jednej z dwóch stref na stronie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="CheckRenderClientScript">
      <MemberSignature Language="C#" Value="protected virtual bool CheckRenderClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckRenderClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CheckRenderClientScript () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckRenderClientScript();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza możliwości przeglądarki, dzięki czemu żądania i wartość <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" /> właściwości, aby określić, czy do renderowania skrypt po stronie klienta.</summary>
        <returns>Wartość logiczna, która wskazuje, czy do renderowania skrypt po stronie klienta.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="CloseProviderWarning">
      <MemberSignature Language="C#" Value="public virtual string CloseProviderWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseProviderWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CloseProviderWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseProviderWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ostrzeżenie jest wyświetlane, gdy użytkownik zamyka formant, który działa jako dostawca do innych kontrolek w połączeniu.</summary>
        <value>Ciąg, który zawiera komunikat ostrzegawczy. Wartość domyślna to specyficzne dla kultury wiadomość dostarczona przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy użytkownik zamyka <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować, zwykle komunikat nie jest wyświetlony. Aby uzyskać więcej informacji o tym, co oznacza zamknąć formantu, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metody.  
  
 Jednak gdy formant jest połączony z formantem i działa jako dostawcy danych do innych kontroli, domyślne wyświetlany jest komunikat ostrzegawczy, gdy użytkownik próbuje zamknąć formantu. Komunikat informuje użytkowników kontroli dostawcy o zbliżającym się zamknąć, które oznacza, że kontrolki podłączone do tego dostawcy, jak konsumentów nie będą już zawierały danych do pracy. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> Właściwości umożliwia deweloperom dostosować komunikat ostrzegawczy, który jest widoczny dla użytkownika.  
  
 Jeśli projektant strony przypisuje wartość pusty lub zerowy ciąg do tej właściwości, nie komunikat ostrzegawczy będą wyświetlane, gdy użytkownik zamyka <xref:System.Web.UI.WebControls.WebParts.WebPart> formant, który jest dostawcą.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> właściwości do wyświetlenia użytkownikom niestandardowych ostrzeżenie.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i niestandardowy interfejs.  
  
-   Strona sieci Web zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą zostać połączone i `<asp:webpartmanager>` elementu.  
  
-   Opis działania przykład w przeglądarce.  
  
 Poniższy kod zawiera tylko część strony sieci Web przykładzie. Należy również Kontrolki niestandardowe użytkownika i kodu źródłowego w przypadku kontrolek niestandardowych wymienionych powyżej. Uzyskaj tych dwóch elementów z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy.  
  
 W poniższym kodzie strony sieci Web pokazano, jak można przypisać niestandardowy komunikat ostrzegawczy do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> właściwości w znaczniku deklaratywne w `<asp:webpartmanager>` elementu.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Po załadowaniu w przeglądarce strony sieci Web, kliknij przycisk **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **Connect** przełączyć stronę, aby połączyć tryb. Połącz używa trybu `<asp:connectionszone>` elementu umożliwiają tworzenie połączenia między formantami. W trybie łączenia, kliknij strzałkę w dół w pasku tytułu **kod POCZTOWY** sterowania do aktywacji jego menu zleceń, a następnie kliknij przycisk **Connect**. Gdy zostanie wyświetlony połączenia interfejsu użytkownika (UI), kliknij przycisk **Utwórz połączenie z klientem** łącza. Komórki zostanie zawiera formant listy rozwijanej. Wybierz **kontroli pogody** w listy rozwijanej, a następnie kliknij przycisk **Connect** do zakończenia połączenia dwóch formantów. Kliknij przycisk **Zamknij**, a następnie użyć **tryb wyświetlania** listy rozwijanej, aby powrócić do trybu normalnego przeglądania strony. Na koniec kliknij menu zleceń **kod POCZTOWY** kontroli (czyli dostawcy kontroli w takim przypadku), a następnie wybierz **Zamknij**. Niestandardowy komunikat zostanie przypisana do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> właściwość jest wyświetlana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseWebPart">
      <MemberSignature Language="C#" Value="public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub formantu serwera, który zostaje zamknięte w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</param>
        <summary>Zamyka <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli w taki sposób, że nie jest renderowany na stronie sieci Web, ale można je otworzyć ponownie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> Usuwa metody <xref:System.Web.UI.WebControls.WebParts.WebPart> lub inny serwer sterowanie tak, aby nie jest renderowany na stronie sieci Web, który pierwotnie zawarty go. Zamknięte formant został dodany do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> obiektu, który przechowuje odwołanie do zamkniętego formantu i umożliwia formantu ma zostać przywrócony do strony. Zamkniętej <xref:System.Web.UI.WebControls.WebParts.WebPart> formant jest nadal wyświetlana w kolekcji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwości.  
  
 Zamykanie formantu różni się od jego usunięciem. Formanty zamkniętego są nadal dostępne, można przywrócić do strony, ale wystąpienie usunięto formantu zostanie usunięty i nigdy nie można przywrócić. Niezależnie od tego, czy <xref:System.Web.UI.WebControls.WebParts.WebPart> lub kontrolki serwera jest statyczny (deklaracja w znaczniku strony) lub dynamiczny (dodany do strony programowo lub przez użytkownika z katalogu części sieci Web), można zamknąć i otworzyć ponownie na stronie.  
  
 Zazwyczaj użytkowników można zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPart> sterowania, klikając menu zleceń i wybierając Zlecenie zamknięcia. Formant może również zostać zamknięty, poprzez bezpośrednie wywoływanie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> — metoda i przekazanie jej przez odwołanie do `webPart`.  
  
 Na stronie gdzie <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty zostały zamknięte, jeśli deklaruje dewelopera `<asp:catalogzone>` elementu i jego dodaje `<asp:pagecatalogpart>` elementu udostępnia prosty interfejs użytkownika (UI) dla użytkowników przywrócić zamkniętego formantów strony w czasie wykonywania. Użytkownicy mogą przełączać strony do trybu wyświetlania katalogu i formanty zamkniętego pojawi się w katalogu strony. Użytkownicy mogą wybierz formanty zamknięte i dodaj je wróć do strony w dowolnym miejscu chcą, a następnie wybrane formanty są przywracane do strony i renderowane jako standardowa.  
  
 Gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metoda jest wywoływana, zgłasza kilka zdarzeń: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> (jeśli istnieje wiele formantów), i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> (jeśli istnieją formanty połączonych). Zwykle programiści można anulować te zdarzenia, ale w niektórych przypadkach nie jest możliwe je anulować. Aby uzyskać więcej informacji, zobacz dokumentację <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metody.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania strony.  
  
-   Niestandardowy <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu.  
  
-   Strona sieci Web.  
  
-   Opis działania przykład w przeglądarce.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać więcej informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Druga część przykładowy kod jest niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie użyto metody dynamicznej kompilacji; w związku z tym nie istnieje żadne `Assembly` atrybutu w `Register` dyrektywy dla tego formantu w górnej części strony sieci Web. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/textdisplaywebpart.vb#3)]  
  
 Trzeci część przykładowy kod jest strony sieci Web. Strona zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefy, z <`asp:pagecatalogpart>` element zadeklarowany w niej. Jest to, co będzie zawierać zamkniętą <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli i umożliwienie użytkownikom dodać go do strony. `Button1_Click` Bezpośrednio wywołuje metodę <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metody, aby zamknąć niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować, ale użytkownik może też zamknąć sterowanie za pośrednictwem menu zleceń.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/closeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/closeWebPartVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, zamknij niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> sterowania, klikając menu zleceń (symbol strzałki) w nagłówku formantu, a następnie klikając polecenie **zamknąć**. Teraz zmienić strony do trybu katalogu, wybierając **katalogu** w **tryb wyświetlania** kontrolka listy rozwijanej. Katalog stron pojawia się za pomocą formantu zamknięte. Zaznacz pole wyboru obok kontrolki zamknięty, kliknij przycisk **Dodaj** , dodaj go do strony, a następnie kliknij przycisk **Zamknij** aby powrócić do strony, aby tryb przeglądania. Formant został przywrócony do strony. Teraz zamknąć ją teraz ponownie, klikając **zamknąć składnika Web Part** przycisku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> nie ma na liście <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> kolekcji.  
  
 \- lub -  
  
 <paramref name="webPart" /> Kontrolka udostępnionego i zostało już zamknięte przez innego użytkownika.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
      </Docs>
    </Member>
    <Member MemberName="ConnectDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConnectDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ ConnectDisplayMode;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje tryb wyświetlania służący do wyświetlania interfejs specjalnego użytkownika (UI) dla użytkowników do zarządzania połączeniami między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Odwołuje się do pola niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy bez konieczności wystąpienia formantu.  
  
 Gdy użytkownicy mają być zarządzane połączeń między <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki na stronie sieci Web, jeśli <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> strefa została zadeklarowana na stronie, ich można przełączać strony do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> tryb. Tryb wyświetlania connect Wyświetla specjalne interfejsu użytkownika do zarządzania połączeniami, w tym możliwość Połącz lub Rozłącz formantów i zmienić szczegóły istniejących połączeń.  
  
 Jeśli chcesz zapewnić użytkownikom możliwość zarządzania połączeniami przy użyciu interfejsu użytkownika udostępniane przez zestaw kontroli części sieci Web, muszą deklarować `<asp:connectionszone>` elementu w znaczniku strony. W odróżnieniu od innych typów elementów <xref:System.Web.UI.WebControls.WebParts.WebZone> stref, dodawanie innych tagów wewnątrz tego elementu nie jest konieczne; po prostu zadeklarować elementu samodzielnie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> tryb.  
  
 Przykładowy kod ma trzy części:  
  
-   Plik źródłowy, który zawiera interfejs i niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą się komunikować.  
  
-   Strony sieci Web udostępnia połączenie interfejsu użytkownika, który demonstruje pracy z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> tryb.  
  
-   Wyjaśnienie sposobu uruchamiania w przykładzie.  
  
 Pierwsza część przykładowy kod to plik źródłowy, który zawiera interfejs i dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które są zaprojektowane tak mogą zostać połączone. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie kodu używane podejście kompilacji dynamicznej. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ZipCodeComponent.vb#2)]  
  
 Druga część przykładzie to strona sieci Web, obsługującym formantów niestandardowych. W ramach serwera `<script>` znaczników na stronie jest kilka metod, które wypełnienia listy rozwijanej z trybów wyświetlania dostępne na stronie. Użytkownik może wybrać je z listy rozwijanej, aby zmienić tryb wyświetlania strony. Jeden z dostępnych trybów wyświetlania jest połączyć tryb wyświetlania, ponieważ `<asp:connectionszone>` element jest zadeklarowany w znaczniku strony. Zwróć uwagę, że ten element nie zawiera innych elementów podrzędnych; istnieje tylko w celu umożliwienia zarządzania połączenia interfejsu użytkownika dla użytkowników.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Jest wyświetlana w tym przykładzie w dwóch miejscach. Pierwszy w `Page_Init` metody connect tryb wyświetlania jest dodawany do listy rozwijanej trybów wyświetlania jako kod w pętli występujący w odwołaniu w kolekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwości. Drugi, `Page_PreRender` metoda sprawdza bieżący tryb wyświetlania na stronie, a jeśli bieżący tryb jest <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>, zostanie wyświetlony komunikat w <xref:System.Web.UI.WebControls.Label> kontroli.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ConnectDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ConnectDisplayModeVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce kliknij listy rozwijanej i wybierz **Connect** można przełączać strony do trybu wyświetlania connect. Należy zauważyć, że jest wyświetlany komunikat informujący, że strona jest w połączeniu tryb wyświetlania. Teraz kliknij menu zleceń (symbol strzałki) na pasku tytułu jednego z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, a następnie kliknij przycisk **Connect** w menu zleceń. Po połączeniu interfejsu użytkownika jest wyświetlany, kliknij łącze, aby utworzyć połączenie. Użyj listy rozwijanej w ramach połączenia interfejsu użytkownika, który jest wyświetlany, wybierz kontrolkę, aby uczestniczyć w połączeniu, kliknij przycisk **Connect** przycisku. Połączenie zostanie nawiązane. Kliknij przycisk **Zamknij** przycisk, a następnie użyć listy rozwijanej w górnej części strony, aby powrócić do strony, aby przejść do trybu wyświetlania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ Connections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kolekcji wszystkich bieżących połączeń na stronie sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> zawierający zestaw <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> Właściwości umożliwia dostęp do bieżącego zestawu połączeń na stronie. Sama kolekcja jest tylko do odczytu i deweloperów, którzy chcą do manipulowania określonego połączenia z kolekcji powinny używać <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metod, takich jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje deklaratywne i programowy użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strona sieci Web zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą zostać nawiązane połączenie, i `<asp:webpartmanager>` elementu.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i niestandardowy interfejs.  
  
-   Opis działania przykład w przeglądarce.  
  
 Poniższy kod zawiera tylko część strony sieci Web przykładzie. Należy również Kontrolki niestandardowe użytkownika i kodu źródłowego w przypadku kontrolek niestandardowych wymienionych powyżej. Uzyskaj tych dwóch elementów z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy.  
  
 Poniższy kod strony sieci Web przedstawia sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> właściwości programowo, aby uzyskać liczbę bieżących połączeń na stronie. Należy pamiętać, że w `<script>` sekcję tagów, kod obsługujący dwa zdarzenia dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli dostępu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> właściwości, aby uzyskać wartość licznika.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Po załadowaniu w przeglądarce strony sieci Web, kliknij przycisk **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **Connect** przełączyć stronę, aby połączyć tryb. Połącz używa trybu `<asp:connectionszone>` elementu umożliwiają tworzenie połączenia między formantami. W trybie łączenia, kliknij strzałkę w dół w pasku tytułu **kod POCZTOWY** sterowania do aktywacji jego menu zleceń, a następnie kliknij przycisk **Connect**. Po Wyświetla połączenia interfejsu użytkownika (UI), kliknij przycisk **Utwórz połączenie z klientem** łącza. Komórki zostanie zawiera formant listy rozwijanej. Wybierz **kontroli pogody** w listy rozwijanej, a następnie kliknij przycisk **Connect** do zakończenia połączenia dwóch formantów. Kliknij przycisk **Zamknij**, a następnie użyć **tryb wyświetlania** listy rozwijanej, aby powrócić do trybu normalnego przeglądania strony. Należy pamiętać, że etykiety są obecnie wyświetlane liczby połączeń i liczba <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Jeśli teraz wróć do łączenia z trybu i rozłączenia dwóch kontrolki, po powrocie do trybu, przeglądania zawartości etykiety powinny być aktualizowane i nie powinny istnieć żadne połączenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po wszystkich bieżących połączeń części sieci Web na stronie tylko nie są połączone, ale również zaczęli aktywnie udostępniania danych między formantami klienta i dostawcy objętego każdego połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W cyklu życia połączeń to zdarzenie występuje po ukończeniu procesu ładowania. Występuje także po <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> zdarzeń, który wskazuje, że tylko <xref:System.Web.UI.WebControls.WebParts.WebPart> lub pomyślnie nawiązano połączenie kontrolki serwera objętego określonego połączenia. W przypadku których istnieje wiele połączeń na stronie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> — metoda wskazuje, że wszystkie prawidłowe połączenia składników Web Part na stronie, teraz są aktywne i mogli udostępniać dane. Wiedząc, że wszystkie połączenia są aktywne, deweloperzy mogą przeprowadzać dowolną liczbę zadań, takich jak powiadamianie użytkowników o stanie wszystkich połączeń powiadamiania formanty użytkownika do przetwarzania i wyświetlane dane z ich dostawców i tak dalej.  
  
 To zdarzenie jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> metodę, która wywołuje zdarzenie i umożliwia deweloperom tworzenie niestandardowe programy obsługi dla zdarzenia.  
  
 Strona deweloperzy mogą tworzyć niestandardowe obsługi dla zdarzenia przez dodanie `OnConnectionsActivated` atrybutu `<asp:webpartmanager>` elementu na stronie i przypisując nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivating">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivating As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu aktywacji wszystkich ustalonych połączeń części sieci Web na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W cyklu życia połączeń, to zdarzenie występuje jako stronę ukończenia tuż przed jego proces ładowania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> metoda jest wywoływana. Różni się od <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> zdarzenie, które obejmuje danego połączenia między <xref:System.Web.UI.WebControls.WebParts.WebPart> lub innych formantów serwera. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> Zdarzenie wystąpi, gdy wszystkie możliwe połączenia na stronie zostaną podłączone i mają być aktywowany.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> Zdarzeń jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> metodę, która wywołuje zdarzenie. Formant deweloperów, którzy chcą rozszerzyć typ połączenia, które mogą zostać dodane do strony można zastąpić chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> — metoda i Aktywuj dodatkowe typy połączeń.  
  
 Strona deweloperzy mogą tworzyć niestandardowe obsługi dla zdarzenia przez dodanie `OnConnectionsActivating` atrybutu `<asp:webpartmanager>` elementu na stronie i przypisując nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy połączenie między dwoma <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów (lub inne formanty serwera możliwość tworzenia połączeń) znajdujące się w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> Metody stanowi połączenie między dwoma dowolnym <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą zostać połączone. Przed wywołaniem tej metody, aby utworzyć połączenie, można także wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metody warunkowego sprawdzenie w celu zapewnienia, że kontrolki spełniają wymagania dotyczące stanowiących połączenie.  
  
> [!NOTE]
>  Istnieje również możliwość utworzenia połączenia między dwa kontrolki serwera, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Ogólnie rzecz biorąc, dwóch formantów musi być niestandardowe kontrolki serwera (na przykład formantów, które dziedziczą z <xref:System.Web.UI.WebControls.WebControl> lub istniejące kontrolki serwera ASP.NET), w którym można dodawać wymaganych elementów. Formanty, również musi spełniać wymagania wymienionymi poniżej.  
  
 Dowolnego typu scenariusz połączenia między formantami dwóch musi spełniać następujące wymagania, aby można było połączyć:  
  
-   Każdy formant znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy (nie musi on być tej samej strefie).  
  
-   Zgodnie z implementacją w zestawie formantu części sieci Web, kontrolki dostawcy na połączenie implementuje interfejs jako metodę publiczną, która służy jako wywołanie zwrotne do dostawcy i ma `ConnectionProvider` atrybutu metadanych dla metody, aby zidentyfikować go jako połączenie dostawcy punkt. Ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> metody wirtualnej to punkty połączenia dostawcy pobiera, pochodnego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant nie ma musi używać tego samego atrybutu metadanych.  
  
-   Zgodnie z implementacją w zestawie formantu części sieci Web, kontrolki użytkownika na połączenie również ma specjalne metody, która umożliwia odwołać się do interfejsu, która jest widoczna w metody wywołania zwrotnego dostawcy, a ma konsumenta `ConnectionConsumer` atrybutu metadanych wskaż metodę, aby zidentyfikować go jako połączenia klienta. Ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metody wirtualnej to punkty połączenia klienta pobiera, pochodnego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant nie ma musi używać tego samego atrybutu metadanych.  
  
-   Metody wywołania zwrotnego musi być zgodne, w tym konsumenta, można użyć typu użyć interfejsu w dostawcy metody wywołania zwrotnego (co oznacza, że klienta i dostawcy mogą udostępniać dane bezpośrednio) lub dewelopera <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> do obiektu przekształcania danych od dostawcy do formularza, który można użyć konsumenta.  
  
    > [!IMPORTANT]
    >  Gdy transformatora nie jest potrzebna, użyj <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29> przeciążenie metody. Transformator, użyj <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> przeciążenie metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant, który ma rolę otrzymanie danych do innego połączenia kontroli.</param>
        <param name="providerConnectionPoint">Metoda, która służy jako metoda wywołania zwrotnego dla połączenia. Zgodnie z implementacją w zestawie formantu części sieci Web, jest to metoda publiczna w <c>dostawcy</c> który jest oznaczony atrybutem <see langword="ConnectionProvider" /> atrybutu metadanych.</param>
        <param name="consumer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu, który ma rolę odbieranie danych z <c>dostawcy</c>, a następnie przetwarzania lub wyświetlanie.</param>
        <param name="consumerConnectionPoint">Metody, która łączy się z usługą <c>providerConnectionPoint</c> do odbioru danych dla połączenia. Zgodnie z implementacją w zestawie formantu części sieci Web, jest to metoda publiczna w <c>konsumenta</c> który jest oznaczony atrybutem <see langword="ConnectionConsumer" /> atrybutu metadanych.</param>
        <summary>Tworzy połączenie między dwoma <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> steruje przy użyciu tylko odwołania do formantów i ich określonego <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> obiektów.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> zawiera różne informacje o dostawcy i klienta wymagane dla połączenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie służy do łączenia formantów, jeśli ich punkty połączenia nie są wystarczająco zgodne, aby umożliwić im połączenie bez użycia <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu. Po wywołaniu tego przeciążenia metody ją po prostu przekazuje wywołanie innych wersji przeciążonej metody i przekazuje `null` dla parametru, który wymaga <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu.  
  
 Podczas próby połączenia dwóch formantów programowo, można użyć <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metody warunkowego sprawdzenie w celu określenia, czy formanty może być bezpośrednio połączony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć połączenie programowo przy użyciu tej metody. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Z tego przykładu należy kodu źródłowego kontrolki użytkownika, która umożliwia zmianę trybów wyświetlania na stronie i kod źródłowy dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
 Kod dla strony sieci Web, który obsługuje dwa kontroluje sposób. Strona używa `Register` dyrektywy u góry, aby zadeklarować formantu użytkownika i kontrolek niestandardowych. Formanty niestandardowe są następnie odwołuje się do deklaratywnie w `<asp:webpartzone>` elementu. Kod obsługujący `Button1_Click` metoda tworzy połączenie między formantami za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> metody.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, kliknij przycisk **połączyć składnik Web Part formanty** przycisku do utworzenia połączenia. Można następnie wprowadzić niektóre dane w polu tekstowym i kliknij przycisk **wprowadź 5-cyfrowy kod POCZTOWY** przycisk, aby wykazać, że kontrolki są połączone i dane wprowadzone w formancie pierwszy jest aktualizowany w ciągu sekundy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Jest kolekcją kontrolki dynamicznej kolekcji tylko do odczytu.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      </Docs>
    </Member>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> rolą otrzymanie danych do innego połączenia formantu.</param>
        <param name="providerConnectionPoint">Metoda publiczna w <c>dostawcy</c> który jest oznaczony atrybutem <see langword="ConnectionProvider" /> atrybutu metadanych i służy jako metoda wywołania zwrotnego dla połączenia.</param>
        <param name="consumer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> rolą odbierania danych z <c>dostawcy</c> lub <c>transformatora</c>, a następnie przetwarzania lub wyświetlanie.</param>
        <param name="consumerConnectionPoint">Publiczną metodę w <c>konsumenta</c> który jest oznaczony atrybutem <see langword="ConnectionConsumer" /> atrybutu metadanych i nawiązanie połączenia z <c>providerConnectionPoint</c> do odbioru danych dla połączenia.</param>
        <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> , który umożliwia połączenie między dwóch formantów za pomocą konwersji danych z <c>dostawcy</c> na format który <c>konsumenta</c> mogą jej przetworzyć.</param>
        <summary>Tworzy połączenie między dwoma <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> kontrolki, używając odwołań z formantami, ich określonego <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> obiektów, a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> obiektu.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> zawierający informacje o dostawcy, konsumenta i transformatora wymagane dla połączenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie używany do łączenia formantów podczas ich punktów połączenia są niezgodne. Niezgodność występuje, gdy `consumer` implementuje interfejs inny niż `provider` jako punktu połączenia. Transformator konwertuje je na typ, który zostały zrozumiane przez `consumer`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Uaktywnieniu połączeń w <see cref="E:System.Web.UI.Control.PreRender" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, serwera lub kontrolki użytkownika, które są zawarte w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy na stronie sieci Web i są zarządzane przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.ControlCollection" /> zawierający wszystkie formanty zarządza <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> Właściwości nie odwołuje się do innych kontrolek, które odwołują się <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować, takie jak strefy poszczególnych kontrolek, <xref:System.Web.UI.WebControls.WebParts.EditorPart> lub <xref:System.Web.UI.WebControls.WebParts.CatalogPart> , a inne.  
  
 Ta właściwość jest używana przez zestaw kontroli części sieci Web i w większości sytuacji programowanie, który nie jest przeznaczona do wywoływania z kodu. Z tego powodu mimo że właściwość nie jest publiczny, jest on ukryty z IntelliSense. Deweloperzy, którzy chcą uzyskać dostępu do kolekcji z <xref:System.Web.UI.WebControls.WebParts.WebPart> lub innych kontrolek serwera zarządza <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant powinien używać jej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      </Docs>
    </Member>
    <Member MemberName="CopyWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart CopyWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ CopyWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Lub kontrolki serwera do skopiowania.</param>
        <summary>Używany przez formant części sieci Web, wartość, aby utworzyć kopię <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolki serwera na potrzeby dodawania formantu do strony sieci Web.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ma zostać dodany do strony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> metody bezpośrednio w kodzie. Ta metoda jest wywoływana wewnętrznie przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant jako część procesu dodawania nowych dynamicznie <xref:System.Web.UI.WebControls.WebParts.WebPart> lub kontrolki serwera do strony. Dynamicznej kontroli jest dodawany do strony programowo lub za pomocą części sieci Web interfejsu użytkownika (UI), na przykład przez dodawanie formantu z katalogu formantów, w przeciwieństwie do statyczną kontrolkę zadeklarowano bezpośrednio w znaczniku strony użytkownika.  
  
> [!NOTE]
>  Metoda może zostać przesłonięta w klasie pochodnej, jeśli chcesz włączyć metodę obsługi sterowania dodatkowe scenariusze kopiowanie deweloperów. Aby uzyskać więcej informacji zobacz Uwagi dotyczące obiektów dziedziczących sekcji.  
  
 Po dodaniu nowego dynamicznej kontroli, jeśli jest <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> metoda zwraca nowe wystąpienie klasy formantu. Jeśli sterowania dodawana jest innego typu kontrolki serwera (na przykład kontrolki użytkownika, kontrolkę niestandardową lub kontrolka ASP.NET), formantu zostanie już opakowane z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu przez zestaw kontroli części sieci Web. Gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> napotka — metoda <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontroli, zwraca nowe wystąpienie klasy <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formantu przy użyciu nowego wystąpienia kontrolki podrzędnej opakowane w niej.  
  
 Gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> metoda tworzy nową kopię formantu do zwrócenia, również resetuje wartości wszystkich właściwości do wartości domyślnych. Należy pamiętać, że, jeśli chcesz zachować wartości wartość właściwości i ich skopiowane do nowego wystąpienia kontrolki powinny wywoływać <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> również metody. Ostatnim krokiem przeprowadzane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> jest wywołanie metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A> metodę, aby uzyskać nowy identyfikator dla formantu.  
  
> [!NOTE]
>  Ponieważ metoda uzyskuje nowy identyfikator dla formantu skopiowane, nie należy polegać na odwołanie do dynamicznego formant, który jest dodawany do strony przez jego oryginalnego identyfikatora. Zamiast tego należy odwoływać nowe wystąpienie klasy formant zwrócony przez metodę.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Metoda jest zadeklarowany jako <see langword="virtual" /> , dzięki czemu deweloperzy mogą dziedziczyć <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy, Zastąp metodę i podać dodatkowe scenariusze, w których można utworzyć kopii formantów. Na przykład metoda można opcjonalnie odebrać jako dane wejściowe formant, który ma zostać zserializowane do pliku XML. Metoda może deserializacji XML (jeśli istnieje), a następnie wywołać metodę podstawową do obsługi istniejących przypadków i zwrócić nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CreateAvailableTransformers">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAvailableTransformers () As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ CreateAvailableTransformers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy zestaw transformatorów określony w pliku konfiguracji witryny sieci Web i dodaje je do kolekcji transformatory odwołuje się <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" /> właściwości.</summary>
        <returns>Kolekcja transformatory określony w pliku konfiguracji witryny sieci Web.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Ta metoda może zostać zastąpiona w celu Dodaj transformatory dodatkowe, które mogą być używane przez aplikację. Na przykład metoda może można zapisać do pobierania listy dostępnych funkcji przekształcania z usługi sieci Web.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję wszystkich kontrolek, które są zarządzane przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki na stronie sieci Web. Klasa ta nie może być dziedziczona.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> składające się z wszystkich różnych części sieci Web formantów zarządzanych przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Ponieważ ta metoda jest chroniona i zapieczętowany, nie jest widoczna na klasy dziedziczące <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy, ale nie można zastąpić.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateDisplayModes">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDisplayModes () As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ CreateDisplayModes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy zestaw wszystkie tryby wyświetlania możliwe dla aplikacji sieci Web Part.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> zawierający wszystkie tryby wyświetlania, które są obsługiwane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy listę wszystkich trybów wyświetlania można nie tylko tryby wyświetlania obsługiwane w określonej strony. Aby uzyskać więcej informacji na temat trybów wyświetlania obsługiwane, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwości.  
  
 Domyślnie zestaw kontroli części sieci Web tworzy następujący zestaw trybów wyświetlania do użycia na stronach sieci Web części:  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>  
  
 Deweloperzy mogą tworzyć trybów wyświetlania niestandardowych lub bez towarzyszącego niestandardowych stref, które pochodzą z <xref:System.Web.UI.WebControls.WebParts.WebZone> lub <xref:System.Web.UI.WebControls.WebParts.ToolZone> klasy. Aby utworzyć tryb wyświetlania niestandardowych, musi dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> klasy, i aby dodać tryb wyświetlania jako obsługiwany tryb na stronie, musi dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy i zastąpić <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> — metoda.  
  
 Po dodaniu trybów wyświetlania przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A> metody, należy dodać je w kolejności mają pojawiać się w dowolnym formantów interfejsu użytkownika (takich jak <xref:System.Web.UI.WebControls.ListBox> kontroli) umożliwiające użytkownikom trybów wyświetlania możliwe na stronie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> metody.  
  
 Przykładowy kod ma pięć części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strona sieci Web, który obsługuje inne formanty.  
  
-   Formant użytkownika, który znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefy na stronie sieci Web i umożliwia wprowadzanie i wyświetlanie tekstu w etykiecie.  
  
-   Pliku kodu źródłowego, który zawiera dwa formanty. Jeden z nich jest niestandardowy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli, a drugi jest niestandardowy <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiekt do dodania do trybów wyświetlania domyślnej strony.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i niestandardowy interfejs.  
  
-   Opis działania przykład w przeglądarce.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać więcej informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Druga część przykładu to strona sieci Web. Zawiera dwa <xref:System.Web.UI.WebControls.WebParts.WebPartZone> steruje kontrolek użytkownika i niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Powiadomienie `Register` dyrektywy odwołania kontrolek użytkownika i przestrzeni nazw dla formantów skompilowany w górnej części strony.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/createDisplayModeCS.aspx#1)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/createDisplayModeVB.aspx#1)]  
  
 Trzeci część przykładzie jest kontrola użytkownika do wprowadzania i wyświetlanie tekstu. Używa <xref:System.Web.UI.WebControls.MultiView> formantu, aby utworzyć wiele widoków interfejsu użytkownika. Występuje jeden widok z `Button1` przycisk bez. Zwróć uwagę, że w przesłoniętych `OnPreRender` metody kodu sprawdza, czy strona jest obecnie w trybie wyświetlania niestandardowych i, jeśli tak, wyświetla pierwszy widok formantu użytkownika, który zawiera przycisk. Jeśli strona nie ma tryb wyświetlania niestandardowych, na przykład, jeśli strona jest w trybie przeglądania lub projektu, przycisk jest ukryty.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/TextDisplaycs.ascx#2)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/TextDisplayvb.ascx#2)]  
  
 Czwarty część przykładzie jest plik źródłowy dla dwóch klas niestandardowych. Zwróć uwagę, że niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy zastąpienia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> — metoda i go najpierw wywołuje metodę podstawową, aby dodać wszystkie tryby wyświetlania domyślne, a następnie dodaje tryb wyświetlania niestandardowych. Klasa trybu wyświetlania niestandardowych, `InLineEditDisplayMode`, po prostu dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, ustawia nazwę tryb wyświetlania w Konstruktorze i zastępuje wiele podstawowych właściwości ustanowienie właściwości niestandardowego wyświetlania.  
  
 Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/CustomDisplayMode.cs#3)]
 [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/CustomDisplayMode.vb#3)]  
  
 Uruchamianie przykładów kodu, ładowanie strony w przeglądarce. Należy zauważyć, że strona jest obecnie w trybie przeglądania, a nie przycisk jest widoczny. Przy użyciu **tryb wyświetlania** listy rozwijanej formant listy, strony, aby zmienić **wyświetlania edytowania wbudowanego** tryb i zwróć uwagę, że teraz `Button1` przycisk jest widoczny w dolnym kontrolki użytkownika. Dodaj część tekstu, a następnie kliknij przycisk, aby aktualizować formantu. Zauważyć, że wyświetlana strona jest zwracana do trybu przeglądania, wprowadzony tekst jest teraz wyświetlone, a przycisk ponownie jest ukryty, ponieważ strona nie jest już w trybie wyświetlania niestandardowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicConnectionID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicConnectionID () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicConnectionID();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera unikatową wartość jako identyfikator połączenia dynamicznego.</summary>
        <returns>Ciąg, który zawiera unikatowy identyfikator połączenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> Metoda generuje wartość identyfikatora GUID i konwertuje ją na ciąg jako unikatowy identyfikator połączenia. Metoda jest wywoływana za każdym razem, tworzenia połączenia dynamicznego.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy mogą przesłaniać tę metodę w pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy Zmień implementację w celu wygenerowania unikatowego identyfikatora.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicWebPartID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicWebPartID (Type webPartType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicWebPartID(class System.Type webPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicWebPartID (webPartType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicWebPartID(Type ^ webPartType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="webPartType">
          <see cref="T:System.Type" /> Formantu, dla którego jest generowany identyfikator.</param>
        <summary>Generuje unikatowy identyfikator dynamicznym <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <returns>Ciąg, który zawiera unikatowy identyfikator formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty są dodawane do strony sieci Web, mogą być statyczne (co oznacza, że kontrolka jest zadeklarowany w znaczniku strony) lub dynamiczny (co oznacza, że są one dodawane programowo). W żadnym scenariuszu gdzie <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli jest tworzenie nowych formantów dynamicznych do dodania do strony, wywołuje tę metodę, aby wygenerować unikatowego identyfikatora.  
  
 Metoda jest wirtualnego, dzięki czemu deweloperzy je zastąpić, jeśli chcą niestandardowych implementacji wygenerowania identyfikatora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPartType" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateErrorWebPart (originalID As String, originalTypeName As String, originalPath As String, genericWebPartID As String, errorMessage As String) As ErrorWebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::ErrorWebPart ^ CreateErrorWebPart(System::String ^ originalID, System::String ^ originalTypeName, System::String ^ originalPath, System::String ^ genericWebPartID, System::String ^ errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ErrorWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalID" Type="System.String" />
        <Parameter Name="originalTypeName" Type="System.String" />
        <Parameter Name="originalPath" Type="System.String" />
        <Parameter Name="genericWebPartID" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalID">Ciąg, który jest identyfikator formantu się niepowodzeniem. Jeśli <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> dotyczy błąd, identyfikator jest identyfikator formantu serwera jej podrzędnych.</param>
        <param name="originalTypeName">Ciąg znaków będący nazwą <see cref="T:System.Type" /> formantu nie powiodło się. Jeśli <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> dotyczy błąd, nazwa typu jest typ formantu serwera, jego podrzędny.</param>
        <param name="originalPath">Ciąg, który zawiera ścieżkę do kontrolki użytkownika, jeśli <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> zawiera element podrzędny uczestniczy kontrolki użytkownika nie powiedzie się.</param>
        <param name="genericWebPartID">Ciąg, który zwraca identyfikator <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, jeśli typ formantu uczestniczyła w niepowodzenie ładowania lub tworzenia formantu.</param>
        <param name="errorMessage">Ciąg, który zawiera komunikat o błędzie do wyświetlania na stronie.</param>
        <summary>Tworzy specjalne formant, który jest wstawione do strony wyświetlany przez użytkowników końcowych, podczas próby załadowania lub utworzenia dynamicznym <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli jakiegoś powodu nie powiedzie się.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> Który są wstawiane do strony zamiast formant, który nie może być załadowany lub utworzony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> Metoda jest wywoływana, gdy zestaw próby załadowania lub utworzenia wystąpienia dynamicznym kontrolować składników Web Part <xref:System.Web.UI.WebControls.WebParts.WebPart> lub formantu serwera, a nie powiedzie się z jakiegoś powodu. Ta metoda tworzy <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> obiektu, przypisuje się komunikat o błędzie i zwraca go. <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Jest wstawiany formant zamiast kontrolkę, która nie powiodła się, a jego komunikat o błędzie jest wyświetlany na stronie.  
  
 Nie można wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> metody bezpośrednio w kodzie. Jednak może dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy i metody rozszerzenia. Aby uzyskać więcej informacji zobacz Uwagi dotyczące obiektów dziedziczących sekcji.  
  
 Użytkownicy końcowi mogą pracować z <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> kontrolować na stronie znacznie tak samo jak w zwykłym <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Aby usunąć komunikat o błędzie, można zamknąć formantu przez kliknięcie przycisku Zamknij zlecenie, po czym formantu zostanie dodany do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> obiektu, takich jak inny formant zamknięte. Jeśli użytkownik końcowy usuwa <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> formantu, formantu serwera, który nie może załadować również zostaną usunięte ze strony.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli chcesz dostosować informacje, który jest zwracany w <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> sterowania, można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" /> metody, wywołaj metodę podstawową, przypisać różne wartości parametrów przekazane do metody podstawowej, a następnie wróć wynikowy <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />formantu. Na przykład, jeśli chcesz, aby użytkownicy końcowi, aby wyświetlić <paramref name="originalPath" /> wartość (co spowoduje Pokaż ścieżkę katalogu wirtualnego kontroli użytkownika), po wywołaniu metody podstawowej można przekazać pusty ciąg ("") dla tego parametru.  
  
 Można również dostosować zachowanie <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> kontrolować, poprzez dziedziczenie z tego. Na przykład można zastąpić jego <see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" /> lub <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" /> właściwości.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePersonalization">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreatePersonalization () As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ CreatePersonalization();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca obiekt personalizacji zawierają dane personalizacji użytkownika dla bieżącej strony sieci Web.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> zawierają dane personalizacji użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A> Metoda zwraca obiekt zawierają i zarządzanie nimi ustawienia personalizacji użytkowników dla bieżącej strony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontroli zarządza tego obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::GenericWebPart ^ CreateWebPart(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formantu serwera, który nie jest <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</param>
        <summary>Opakowuje formantu serwera, który nie jest <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> sterować za pomocą <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> obiektu, dzięki czemu formant może mieć funkcji części sieci Web.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> który opakowuje <paramref name="control" /> i włączy ją do działania jako true <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> Metoda jest głównym mechanizm umożliwiający kontrolki serwera, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty do wykonania na te same funkcje co <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli i w związku z tym w pełni uczestniczyć w aplikacjach części sieci Web. Za pomocą tej metody, deweloperzy znacząco rozwiń liczba kontrolek serwera, których mogą użyć w aplikacji części sieci Web, ponieważ praktycznie dowolny typ kontrolki serwera — standardowych kontrolek ASP.NET, kontrolek użytkownika i kontrolek niestandardowych — może być używany.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontroli również używa tej metody w przypadku dwóch innych scenariuszy opakowywać kontrolki serwera z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu. Jeśli użytkownicy Dodawanie kontrolek serwera do strony przy użyciu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontroli, jeśli nie jest importowany kontroli <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metoda jest wywoływana. Ponadto po kontrolki serwera są zadeklarowane w formacie trwałości <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy na stronie sieci Web <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metoda jest wywoływana dla wszystkie formanty, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
 Po dodaniu serwera do strefy programowo, typowe rozwiązaniem jest użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metody do kontrolki z opakowywania <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiekt, a następnie wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metody w celu dodania do kolekcji wszystkie kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty na stronie, która odwołuje się do niego <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metody. W `Button2_Click method`, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metoda jest wywoływana opakowywać <xref:System.Web.UI.WebControls.Calendar> sterować za pomocą <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu przed dodaniem go do strefy.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ta metoda może zostać zastąpiona w celu użyj pochodnego <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> klasy zamiast klasy podstawowej, pod warunkiem ze składnikami Web Part kontrolować zestawu.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteWarning">
      <MemberSignature Language="C#" Value="public virtual string DeleteWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowy komunikat ostrzegawczy wyświetlana dla użytkowników końcowych, usunięcie formantu.</summary>
        <value>Ciąg, który zawiera tekst komunikatu ostrzegawczego. Wartość domyślna to zlokalizowane komunikat ostrzegawczy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy użytkownik usuwa <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować, zwykle wyświetlany jest komunikat ostrzegawczy domyślne. Go ostrzega użytkownika, że po usunięciu tego wystąpienia formantu, usunięcie jest trwały. Developer strony może zapewnić użytkownikom sposób, aby dodać nowe wystąpienie klasy formantu do strony (takich jak za pomocą wykazu z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, lub za pośrednictwem oznacza, że niektóre programowe), ale trwałe usunięcie bieżącego wystąpienia formantu, który zostanie usunięty. Okno dialogowe, w którym są wyświetlane ostrzeżenia zawiera przycisk użytkownika anulować usunięcie, w razie potrzeby.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> Właściwości umożliwia deweloperom Ustaw komunikat ostrzegawczy, który jest widoczny dla użytkownika.  
  
 Jeśli dewelopera strony przypisuje ciąg pusty ("") po usunięciu przez użytkownika będzie wyświetlana wartość tej właściwości nie ostrzeżenie komunikatów — okno dialogowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> Właściwość nie jest wyświetlana w przypadku statycznej <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty i serwera. Statyczne formanty są kontrolki serwera, które są zadeklarowane w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy w znaczniku strony sieci Web. Ponieważ takie formanty są statyczne, nie można ich usunąć, co komunikat ostrzegawczy delete nigdy nie jest wyświetlane w takim przypadku. Statyczne formanty może zostać zamknięty przez użytkownika, ale zamkniętego formant został dodany do strony katalogu, z którego dodaniem wróć do strony przez użytkownika, podczas gdy usunięty formant nigdy nie mogą zostać odzyskane.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> właściwości deklaratywnie i programowo.  
  
 Istnieją cztery części przykładu kodu:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania strony.  
  
-   Niestandardowy <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu.  
  
-   Strona sieci Web.  
  
-   Opis działania przykład w przeglądarce.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać więcej informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Druga część przykładowy kod jest niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie użyto metody dynamicznej kompilacji; w związku z tym nie istnieje żadne `Assembly` atrybutu w `Register` dyrektywy dla tego formantu w górnej części strony sieci Web. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/textdisplaywebpart.vb#3)]  
  
 Trzeci część przykładowy kod jest strony sieci Web. Strona zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefy z niestandardowym <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli zadeklarowany w strefie, tak aby użytkownika można dodać go do strony w czasie wykonywania. Należy pamiętać, że tylko dynamiczne formantów (formantów, które są dodawane do strony programowo lub z katalogu, takich jak ta) można usunąć ze strony. Statyczne formanty (formantów, które są zadeklarowane w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy w znaczniku strony) może być zamknięty, ale nigdy nie został usunięty. `<asp:webpartmanager>` Własnej wartości deklaruje element <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> właściwości przy użyciu `DeleteWarning` atrybutu. `Button1_Click` Metody przypisuje innej wartości niestandardowej do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/deleteWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/deleteWarningVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, musisz dodać <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu do strony. Przy użyciu **tryb wyświetlania** kontrolka listy rozwijanej, wybierz opcję katalog tryb. Gdy pojawi się katalogu, zaznacz pole wyboru obok kontrolki niestandardowej, kliknij przycisk **Dodaj** , dodaj go do strony, a następnie kliknij przycisk **Zamknij** aby powrócić do strony, aby tryb przeglądania. Teraz, czy formant jest widoczny, można go usunąć. Przy użyciu **tryb wyświetlania** sterowania ponownie, Przełącz do trybu projektowania (formantów nie można usunąć podczas, gdy strona jest w trybie przeglądania) strony. Kliknij menu zleceń (symbol strzałki) w nagłówku <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli i wybierz **usunąć**. Ostrzeżenie, że można ustawić na `DeleteWarning` atrybut występuje. Kliknij przycisk **anulować**. Teraz kliknij przycisk oznaczony **Zmień usunąć ostrzeżenie**, który zmienia wartość właściwości programowo. Wybierz z menu zleceń w formancie **usunąć** ponownie i zwróć uwagę, że pojawi się komunikat ostrzegawczy w tej chwili.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteWebPart">
      <MemberSignature Language="C#" Value="public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Kontrolki serwera do usunięcia.</param>
        <summary>Trwale usuwa wystąpienie dynamicznego <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli ze strony sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> Metody trwale usuwa reprezentowany przez formant `webPart` parametr ze strony. W przeciwieństwie do zamkniętego kontrolkę, która jest dodawana do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontroli i mogą być dodawane wróć do strony, wróć do strony nigdy nie można dodać wystąpienia usunięty formant.  
  
> [!NOTE]
>  Wykonane przez formant składników Web Part ustawiona, przez użytkowników do usunięcia z dynamicznego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli zależy od użytkownika i zakresu personalizacji, w której formant został dodany do strony. Jeśli formant został dodany, gdy strona jest w zakresie udostępnionych (przez użytkownika, który ma uprawnienia), następnie formantu nie można usunąć przez poszczególnych użytkowników, gdy strona jest w zakresie użytkownika.  
  
 Można usunąć tylko formantów dynamicznych. Formantów dynamicznych są dodawane do strony programowo lub przez użytkowników, dodawanie formantów z wykazu. Statyczne formanty są dodawane do strony deklaratywnie w formacie trwałości lub znaczników. Ponieważ deklaratywne tagi trwale znajdują się w znaczniku, formantów statycznych nie można usunąć, ale można je zamknąć i otworzyć ponownie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> metody. Po raz pierwszy **dodać kalendarza** kliknięciu przycisku kod w przypadku obsługi tworzy <xref:System.Web.UI.WebControls.Calendar> kontroli i dodaje go do strefy jako <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu. Ponieważ formant został dodany programowo, jest dynamicznej kontroli, a więc można go usunąć. Gdy użytkownik kliknie **usunąć kalendarza** przycisku kod gwarantuje, że kontrolka istnieje i usunięcia ich przez wywołanie metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> metody.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
      </Docs>
    </Member>
    <Member MemberName="DesignDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DesignDisplayMode;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje tryb wyświetlania używanych do zmiany układu stron sieci Web, które zawierają formantów składników Web Part. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> Odwołuje się do pola niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy bez konieczności wystąpienia formantu.  
  
 Jeśli strona zawierająca składników Web Part steruje pierwszy obciążeń, znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (tryb przeglądania) domyślnie. Kiedy użytkownik chce zmienić układ strony, przenosząc formanty do różnych stref lub w ramach bieżącej strefy, należy najpierw przełącz stronę, aby <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> (tryb projektowania). W trybie projektowania zostanie wyświetlony interfejs użytkownika (UI) dla różnych stref, a użytkownicy mogą następnie przeciągnij formanty zmiany układu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób pracy z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> pola programowo. Kod wypełnia menu rozwijanego z trybami obsługiwanych wyświetlania dla strony, będące w tym przypadku przeglądania i projektowania. Zwróć uwagę, że w `Page_PreRender` metoda, kontroli kodu czy bieżące <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>. Jeśli tak, `Label1` będą widoczne, a jeśli nie, `Label1` zostanie ukryta.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/CS/wpmgrDesignDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/VB/wpmgrDesignDisplayModevb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, są w trybie przeglądania domyślnie. Zwróć uwagę, że etykieta na stronie jest ukryty. Formant listy rozwijanej, aby przełączyć do trybu projektowania strony. Zwróć uwagę, że, ze względu na kod w `Page_PreRender` metody etykiety jest teraz widoczne.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebPart">
      <MemberSignature Language="C#" Value="protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisconnectWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DisconnectWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant, który ma zostać przerwane.</param>
        <summary>Usuwa <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub serwera, czyli kontroli jest zamknięty lub usunięty z połączeń uczestniczy ona w.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Metoda jest wywoływana wewnętrznie przez formant części sieci Web, gdy formant jest zamknięty na stronie lub usunięte ze strony. W takiej sytuacji metoda jest wywoływana usunąć formant z połączeń gdy uczestniczy jako klienta lub dostawcy. Jeśli formantu zostanie usunięty z dowolnego połączenia, ta metoda wywołuje również <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodę, aby zakończyć wszystkie połączenia, w którym `webPart` brał udział.  
  
 Gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metoda jest wywoływana, uruchamia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzeń. Zwykle można anulować to zdarzenie, ale w obu przypadkach nie można anulować. Jeden przypadek występuje podczas żądania do strony, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> metoda jest wywoływana. Jeśli występuje konflikt między istniejących połączeń, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metody wywoływane w celu zamknąć jedno z połączeń powodujące konflikt, a w tym wystąpieniu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> nie można anulować zdarzenie, ponieważ konflikt musi zostać rozpoznane.  
  
 Inne przypadek występuje wtedy, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> lub formantu serwera, który jest aktualnie połączony jest zamknięty lub usunięty. W takim przypadku z powodu formantu jest usuwana ze strony jego połączenia musi zostać zakończone, również w związku z tym zgodnie z projektem nie jest możliwe anulowanie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzeń, aby przerwać proces kończenia połączenia. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metody. Za pomocą dwóch niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów strony sieci Web umożliwia tworzenie połączenia między formantami przez kliknięcie przycisku, gdy inny przycisk umożliwia rozłączenie kontrolki. Jeśli zamkniesz formantów podczas, gdy strona jest w trybie przeglądania, i formanty są połączone, zastępująca <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> — metoda rozłącza zamkniętego kontroli zakończy połączenie i zostanie wyświetlony komunikat.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika do zmiany trybów wyświetlania.  
  
-   Plik źródłowy zawierający niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
-   Strony sieci Web do hostowania kontrolki.  
  
-   Opis działania przykład w przeglądarce.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać więcej informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Druga część to plik zawierający kod źródłowy dla dwóch niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które są połączone i niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie użyto kompilacji dynamicznej, więc `Register` dyrektywy, który odwołuje się do tych składników na stronie sieci Web jest zadeklarowany w związku z tym w górnej części strony sieci Web. Aby uzyskać wskazówki, która przedstawia opcje kompilacji, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 W kodzie źródłowym zauważyć Formant dziedziczony `MyWebPartManager` który zastępuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metody. Ta metoda sprawdza każde połączenie na stronie, aby zobaczyć, czy formant zamykane uczestniczy w połączeniu, a jeśli tak jest, wywołuje metodę <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodę, aby zakończyć połączenie. To jest taka sama jak podstawowa implementacja metody w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Przeciążonej następnie dostosowuje Podstawowa implementacja przez napisanie wiadomości do strony.  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Trzeci część przykładowy kod jest strony sieci Web. Zwróć uwagę, że u góry, zawiera on `Register` dyrektywy rejestracji kontrolki użytkownika i dynamicznie skompilowanego zestawu z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów. Strona ma dwie podstawowe metody. `Button1_Click` Metoda tworzy połączenie między formantami, gdy `Button2_Click` metody rozłącza kontrolki.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Po załadowaniu strony, kliknij przycisk **Connect** przycisk, aby połączyć kontrolki. Kliknij menu zleceń w formantów (Strzałka w dół w nagłówku formantu) i wybierz **Zamknij** z menu zleceń. Podczas próby zamknięcia formantu zastąpiona metoda jest wywoływana, połączenie zostanie zakończona i wiadomości są zapisywane do strony. Jeśli chcesz zresetować strony, aby przywrócić zamkniętego kontroli i wypróbować inne opcje, kliknij przycisk **resetowania stanu użytkownika** łącze, aby usunąć dane personalizacji i przywrócić oryginalny stan strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebParts">
      <MemberSignature Language="C#" Value="public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectWebParts(class System.Web.UI.WebControls.WebParts.WebPartConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisconnectWebParts (connection As WebPartConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisconnectWebParts(System::Web::UI::WebControls::WebParts::WebPartConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Web.UI.WebControls.WebParts.WebPartConnection" />
      </Parameters>
      <Docs>
        <param name="connection">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> reprezentujący połączenia między formantami serwera.</param>
        <summary>Wykonuje proces rozłączanie kontrolki serwera, które są połączone na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> Metoda wykonuje Zakończ proces kończenia połączenia między <xref:System.Web.UI.WebControls.WebParts.WebPart> lub kontrolki serwera, gdy przekazujesz ją `connection` parametru.  
  
 Ta metoda służy do rozłączenia formantów podczas umieszczania `<asp:connectionszone>` elementu na stronie sieci Web w celu zapewnienia interfejsu użytkownika (UI) do zarządzania połączeniami. Gdy strona jest w trybie wyświetlania łączenia (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>) i istnieje bieżącego połączenia, użytkownik może kliknąć przycisk, który wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodę, aby zakończyć połączenie.  
  
 Możesz także wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metody bezpośrednio w kodzie, jeśli chcesz odłączyć formanty programowo i bez konieczności dodawania `<asp:connectionszone>` element na stronę.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metody. Za pomocą dwóch niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów strony sieci Web umożliwia tworzenie połączenia między formantami przez kliknięcie przycisku, gdy inny przycisk umożliwia rozłączenie kontrolki.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika do zmiany trybów wyświetlania.  
  
-   Plik źródłowy zawierający niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
-   Strony sieci Web do hostowania kontrolki.  
  
-   Opis działania przykład w przeglądarce.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać więcej informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Druga część to plik zawierający kod źródłowy dla dwóch niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które są połączone. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie użyto kompilacji dynamicznej, więc `Register` dyrektywy, który odwołuje się do tych składników na stronie sieci Web jest zadeklarowany w związku z tym w górnej części strony sieci Web. Aby uzyskać wskazówki, która przedstawia opcje kompilacji, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Trzeci część przykładowy kod jest strony sieci Web. Zwróć uwagę, że u góry, zawiera on `Register` dyrektywy rejestracji kontrolki użytkownika i dynamicznie skompilowanego zestawu z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów. Strona ma dwie podstawowe metody. `Button1_Click` Metoda tworzy połączenie między formantami i `Button2_Click` metody rozłącza kontrolki.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Po załadowaniu strony, możesz kliknąć **Connect** przycisk, aby połączyć kontrolki. Należy wprowadzić tekst w polu tekstowym, a następnie kliknij przycisk **Enter** przycisku, tekst będzie wyświetlany w formancie połączonych (go mogłaby być wyświetlana odłączeniu formantów). Jeśli klikniesz przycisk **rozłączenia** przycisku kontrolki zostanie odłączona. Stan połączenia formantów można sprawdzić za pomocą **tryb wyświetlania** formantu listy rozwijanej można przełączać strony do **Connect** tryb. Po tym kliknij menu zleceń (reprezentowane przez strzałka) w pasku tytułu formantów, a następnie wybierz **Connect** elementu. Połączenie interfejsu użytkownika jest wyświetlane; jest dostępna, ponieważ istnieje `<asp:connectionszone>` element zadeklarowany na stronie. Można również nawiązywanie i zakańczanie formantów z tego interfejsu użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connection" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="connection" /> nie jest zawarty w jednym <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> lub <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> jest tylko do odczytu.  
  
 \- lub -  
  
 <paramref name="connection" /> już został odłączony od <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />.  
  
 \- lub -  
  
 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> jest tylko do odczytu.  
  
 \- lub -  
  
 <paramref name="connection" /> już został odłączony od <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />.</exception>
        <block subset="none" type="overrides">
          <para>Można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" /> metodę, jeśli chcesz zmienić domyślną implementację dla rozłączanie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki. Jeśli przesłonić metodę i po prostu chcesz dodać niektóre wdrożenia do istniejącej metody, należy wywołać metodę podstawową, przed wykonaniem swoim własnym kodem.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayMode As WebPartDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DisplayMode { System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ get(); void set(System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia aktywny tryb wyświetlania dla strony sieci Web zawiera formanty części sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> Określa tryb wyświetlania strony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strona, która zawiera formanty składników Web Part jest zawsze w jednym z kilku trybów wyświetlania możliwe. Aby uzyskać szczegółowe informacje na temat trybów wyświetlania, zobacz [tryby wyświetlania strony sieci Web części](http://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4).  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasy tworzy trybów wyświetlania dla strony sieci Web. Korzystanie z bazy <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> klasy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli tworzy kilka obiektów trybu standardowego używane na stronach, które zawierają formanty części sieci Web. Te tryby wyświetlania standardowe są opisane w <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Przegląd klasy.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontroli zarządza także trybów wyświetlania dla stron, które używają formantów składników Web Part. Przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwość <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant zachowuje odwołanie do bieżącego trybu wyświetlania na stronie. Można również użyć <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwości, aby przełączyć się do trybów wyświetlania strony. Na przykład zmiany trybów wyświetlania na stronie, która używa kontrolki części sieci Web, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 W ramach zarządzania tryb wyświetlania <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli udostępnia również zdarzeń i obsługi zdarzeń dotyczących tryby wyświetlania, takich jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> — metoda i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> — metoda. Te metody udostępniają mechanizm dostosowywania zachowanie strony, a nawet w przypadku dodawania tryb wyświetlania niestandardowych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje programowy użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwości. Po załadowaniu strony w przeglądarce, przycisków w dolnej części strony służy do przełączania trybów wyświetlania. Strona jest w trybie przeglądania domyślnie podczas jego ładowania. Po przełączeniu do trybu projektowania, możesz przeciągnij formanty serwer z jedną strefę lub Rozmieść dwóch formantów w strefie. Po przełączeniu do trybu edycji, możesz kliknąć menu zleceń nagłówka każdej kontrolki serwera, wybierz opcję **Edytuj**i edytować kontrolki przy użyciu podanego edycji interfejsu użytkownika (UI).  
  
> [!NOTE]
>  Przełączanie między trybów wyświetlania w aplikacji składników Web Part jest często i możesz chcieć umożliwiają spójne, może być ponownie używane w tym celu na wszystkich stronach zawierających formanty części sieci Web. Aby uzyskać przykład kontrolkę użytkownika czy zmiany wyświetlania tryby i czy mogą być ponownie używane na wielu stronach, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/CS/wpmgrDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/VB/wpmgrDisplayModevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> Obiekt jest przypisywane do właściwości <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> Obiekt przypisywane do właściwości nie jest jeden z trybów wyświetlania obsługiwane.  
  
 \- lub -  
  
 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> Obiekt przypisywane do właściwości jest wyłączona.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanged As WebPartDisplayModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventHandler ^ DisplayModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy bieżący tryb wyświetlania na części sieci Web, strona została zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tryby wyświetlania są integralną częścią aplikacji części sieci Web. Gdy użytkownicy będą przełączać się do trybu wyświetlania różnych na stronie sieci Web, strony potrwa często bardzo inny wygląd, w zależności od przeznaczenia nowy tryb wyświetlania. Po zmianie trybu wyświetlania, być może chcesz wprowadzić pewne zmiany w interfejsie użytkownika (UI), takie jak ukrycie lub wyświetlenie niektórych formantów Zmienianie wyglądu wybranych elementów interfejsu użytkownika i tak dalej.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji dotyczących trybów wyświetlania, zobacz [tryby wyświetlania strony sieci Web części](http://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Aby uzyskać więcej informacji na korzystanie ze zdarzeń, zobacz [porady: korzystać zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanging As WebPartDisplayModeCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventHandler ^ DisplayModeChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie zlecenie na stronie sieci Web, który rozpoczyna się proces zmiany na tryb wyświetlania różnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tryby wyświetlania są integralną częścią aplikacji części sieci Web. Gdy użytkownicy będą przełączać się do trybu wyświetlania różnych na stronie sieci Web, strony potrwa często bardzo inny wygląd, w zależności od przeznaczenia nowy tryb wyświetlania. Po użytkownik zainicjuje proces zmiany na nowy tryb wyświetlania, klikając zlecenie, możesz wprowadzić pewne zmiany w interfejsie użytkownika (UI) przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> właściwości w celu określenia, jakie będą nowy tryb wyświetlania, a następnie zmieniając różnych interfejsu użytkownika elementy w związku z tym. Wygodny sposób, w tym celu jest zastąpienie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> metodę w celu dostosowania interfejsu użytkownika.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji dotyczących trybów wyświetlania, zobacz [tryby wyświetlania strony sieci Web części](http://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Aby uzyskać więcej informacji na korzystanie ze zdarzeń, zobacz [porady: korzystać zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ DisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję tylko do odczytu wszystkich trybów wyświetlania, które są skojarzone z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> zawierający zestaw <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> obiekty skojarzone z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> Wszystkie skojarzone tryby wyświetlania, contrast z odwołań do właściwości <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwość, która odwołuje się do trybów wyświetlania, które są dostępne (obsługiwane) na bieżącej stronie.  
  
 Dwa tryby wyświetlania podany, przeglądania i projektowania, są zawsze obsługiwane na stronie. Innych trybów wyświetlania trzy, Edytuj katalog i połączeń, są obsługiwane tylko wtedy, gdy na stronie jest odpowiedni typ strefy niezbędne dla trybu wyświetlania określonego do pracy. Na przykład, jeśli użytkownik strony nie zawiera <xref:System.Web.UI.WebControls.WebParts.EditorZone> strefy, tryb wyświetlania edycji pojawią się w kolekcji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> właściwości, ale nie było wyświetlane w kolekcji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano sposób programowy użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> właściwości. Kod używa tej właściwości do wypełnienia listy z dostępnych w zestawie formantu składników Web Part trybów wyświetlania, nawet te, które nie są obsługiwane na bieżącej stronie. W tym przypadku katalogu i połączyć wyświetlania tryby nie są obsługiwane, ponieważ odpowiednie wymaganych strefy nie znajdują się na stronie.  
  
 Pozostałe trzy wyświetlanie trybów — przeglądanie, projektowania i Edycja — są obsługiwane na tej stronie. Edytuj tryb jest obsługiwany, ponieważ zawiera strony <xref:System.Web.UI.WebControls.WebParts.EditorZone> strefy podczas przeglądania i projektowania tryby zawsze są obsługiwane.  
  
 Po załadowaniu strony w przeglądarce umożliwia kontrolka listy rozwijanej tę stronę w trybie przeglądania do trybu projektowania, a następnie do trybu edycji. W trybie edycji można można z menu rozwijanego zleceń w nagłówku kontrolki serwera i wybierz **Edytuj** można edytować formantu. Należy pamiętać, że w przypadku wybrania **katalogu** lub **Connect** na liście rozwijanej wygenerowaniu stronę błędu.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/CS/wpmgrDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/VB/wpmgrDisplayModesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      </Docs>
    </Member>
    <Member MemberName="DynamicConnections">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DynamicConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ DynamicConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich dynamicznych połączeń, które obecnie istnieje na stronie sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> zawiera odwołania do wszystkich połączeń dynamicznych na stronie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamiczne połączenia są połączeń, które są tworzone programowo, w przeciwieństwie do statycznie. Połączenia statyczne są tworzone przez zadeklarowanie je w znaczniku strony formularzy sieci Web. Dynamiczne połączenia są utworzone programowo, albo przez użytkownika, tworzenia połączenia przy użyciu połączenia interfejsu użytkownika (UI).  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> Kolekcji, ale jest tylko do odczytu i nie można zmienić jego zawartość, zapewnia dostęp programistyczny do każdego obiektu połączenia dynamicznego.  
  
> [!NOTE]
>  Wykonywanie typowych operacji, takich jak połączenie lub odłączanie <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, programiści powinni używać metody publiczne na <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klas, takich jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, zamiast w trakcie bezpośrednio zmodyfikować połączenie obiekty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
      </Docs>
    </Member>
    <Member MemberName="EditDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ EditDisplayMode;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje tryb wyświetlania, w którym można edytować i modyfikowanie kontrolek serwera użytkowników końcowych. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> Odwołuje się do pola niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy bez konieczności wystąpienia formantu.  
  
 Jeśli strona zawierająca składników Web Part steruje pierwszy obciążeń, znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (tryb przeglądania) domyślnie. Gdy użytkownicy mają być edytowane lub zmodyfikować formantu serwera, należy najpierw przełącz stronę, aby <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> (tryb edycji). Po drugie użytkownik musi wybrać formant określonego serwera, aby edytować, klikając Zlecenie edycji w menu zleceń w nagłówku tego formantu. Gdy formant jest w trybie edycji, edycji interfejsu użytkownika (UI) pojawi się do edycji wybrany formant.  
  
 Aby włączyć tryb edycji strony, strony musi zawierać co najmniej jeden <xref:System.Web.UI.WebControls.WebParts.EditorZone> strefy, która zawiera co najmniej jednego z podanych edycji formanty, takie jak <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> formant lub niestandardowych formantów edycyjnych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób pracy z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> pola programowo. Kod wypełnia menu rozwijanego z trybami obsługiwanych wyświetlania dla strony, będące w tym przypadku przeglądania, projektowania i edycji. Do obsługi edycji, `<asp:EditorZone>` jest element na stronie. Zwróć uwagę, że w `Page_PreRender` metoda, kontroli kodu czy bieżące <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>. Jeśli tak, `Label1` będą widoczne, a jeśli nie, `Label1` zostanie ukryta.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/CS/wpmgrEditDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/VB/wpmgrEditDisplayModevb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, są w trybie przeglądania domyślnie. Należy zauważyć, że etykiety na stronie jest ukryty. Formant listy rozwijanej, aby przełączyć do trybu edycji strony. Zwróć uwagę, że, ze względu na kod w `Page_PreRender` metody etykiety jest teraz widoczne. Kliknij przycisk **Edytuj** zleceń w menu zleceń formantów, aby umożliwić edytowanie tego określonego formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public virtual bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy skryptów po stronie klienta jest włączone na stronie sieci Web, który zawiera <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</summary>
        <value>Wartość logiczna wskazująca, czy skrypt po stronie klienta można uruchomić na stronie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> Właściwości umożliwia deweloperom wyłączyć skrypty klienta. Możesz wyłączyć klienta skryptów ze względów bezpieczeństwa lub upewnij się, że wszyscy użytkownicy strony podobne środowisko użytkownika, nawet jeśli używają różnych przeglądarkach.  
  
 Możesz wyłączyć skrypty przez dodanie klienta `EnableClientScript` atrybutu <xref:System.Web.UI.WebControls.WebParts.WebPartManager> elementu na stronie sieci Web, jak w następującym wierszu deklaratywne kodu:  
  
 `<asp:webpartmanager id="manager" runat="server"`  
  
 `EnableClientScript="false" />`  
  
 Ponadto deweloperzy można wyeliminować tej właściwości przez dziedziczenie z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy i ustawienie domyślne wartości na `false`.  
  
 Zestaw kontroli części sieci Web używa skrypty klienta, aby udostępnić niektóre klienta, interfejs użytkownika (UI) i funkcji personalizacji. Jeśli wyłączysz klienta skryptów i składniki Web Part formanty nadal działać, ale niektóre funkcje zostały wyłączone. Możliwość przeciągnij formanty w różnych strefach jest wyłączona, wraz z możliwością renderowania zleceń w menu rozwijanego zleceń na pasku tytułu formantu (zleceń zamiast tego są wyświetlane jako linki w pasku tytułu formantu).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy użycie motywów jest włączony na stronie sieci Web.</summary>
        <value>Wartość logiczna wskazująca, czy są włączone kompozycje. <see langword="true" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Formant przesłania podstawowym <xref:System.Web.UI.Control.EnableTheming%2A> właściwości, aby upewnić się, że zawsze zwraca wartość `true`. Jest to zrobić, ponieważ składniki Web Part, zestaw kontroli wymaga użycia motywów renderowanie części sieci Web formantów, które są formanty podrzędne <xref:System.Web.UI.WebControls.WebParts.WebPartManager> i kontroli, które tworzą interfejsu użytkownika (UI) strony sieci Web. Na przykład kompozycji są używane do renderowania różnych stref i formantów, które znajdują się w strefach różnych typów część formantów (formantów, które dziedziczą z <xref:System.Web.UI.WebControls.WebParts.Part> klasy), kontrolek użytkownika, kontrolek serwera ASP.NET i serwera niestandardowego formanty.  
  
 Mimo że zastąpione <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A> właściwości jest zaimplementowany jako właściwości odczytu/zapisu, zgodnie z jego właściwość podstawowej, nie można ustawić właściwości, ponieważ zgodnie z projektem ona zawsze zwrócić wartość `true`. Jeśli spróbujesz ustawić właściwości, <xref:System.NotSupportedException> wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Próbowano ustawić wartość właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartConnecting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartConnecting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartConnecting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartConnecting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy proces łączenia <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu do innego formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> Metoda zakończy proces łączenia <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu do innego formantu. Jest odpowiednikiem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> metody.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> Metoda gwarantuje, że obiekt personalizacji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> właściwość jest można modyfikować, które jest niezbędne, ponieważ stanowiących połączenie jest typem personalizacji. Metoda następnie zapewnia, że <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> obiekt nie jest `null`, a na koniec wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Odwołuje się formant <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> jest właściwość <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Deweloperzy, którzy chcą rozszerzyć <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontroli chcieć przesłonić tę metodę w klasie pochodnej. Jeden z nich będzie wywoływać metodę podstawową, a następnie dodać niektóre dodatkowe niestandardową obsługę, lub można całkowicie dostosować cały proces kończenia połączenia między formantami.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="EndWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartEditing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartEditing();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy proces edycji <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> Metoda zakończy proces edycji <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Jest odpowiednikiem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> metody.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> Metoda gwarantuje, że obiekt personalizacji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> właściwość jest można modyfikować, który jest konieczne, ponieważ formant edycji jest procesem, który wymaga zmiany personalizacji. Metoda następnie zapewnia, że <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> obiekt nie jest `null`, dzięki czemu aktualnie zaznaczonego <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu można zmienić, a na koniec wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Odwołuje się formant <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> jest właściwość <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Deweloperzy, którzy chcą rozszerzyć <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontroli chcieć przesłonić tę metodę w klasie pochodnej. Jeden z nich będzie wywoływać metodę podstawową, a następnie dodać niektóre dodatkowe niestandardową obsługę, lub można całkowicie dostosować cały proces edycji formantu. Na przykład w metodzie zastąpienie można najpierw wywołać metodę podstawową a następnie dodaj niektórych kod, który określa, jakie edycji zmian i wyświetla listę zmian z powrotem do użytkownika jako potwierdzenie.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="ExportSensitiveDataWarning">
      <MemberSignature Language="C#" Value="public virtual string ExportSensitiveDataWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExportSensitiveDataWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExportSensitiveDataWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ExportSensitiveDataWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst ostrzeżenie jest wyświetlane, gdy użytkownik próbuje eksportować dane poufne stanu <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <value>Ciąg, który zawiera komunikat ostrzegawczy. Komunikat domyślny to wartość specyficzne dla kultury dostarczonych przez program .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy użytkownik próbuje eksportować dane poufne stanu <xref:System.Web.UI.WebControls.WebParts.WebPart> sterowania, jeśli dane eksportowane pochodzi z elementu członkowskiego, który został oznaczony jako poufne w kodzie źródłowym, do użytkownika w oknie komunikatu informacją, że jest wyświetlany komunikat ostrzegawczy Trwa eksportowanie danych poufnych i zapewniając możliwość anulowania eksportu. Deweloperzy mogą oznaczać dane określonego elementu członkowskiego jako poufne przez ustawienie `isSensitive` parametr `[Personalizable]` atrybutu `true` w elemencie członkowskim. Aby uzyskać więcej informacji na temat tego atrybutu i parametr zobacz <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> klasy.  
  
> [!IMPORTANT]
>  Gdy funkcja eksportowania części sieci Web, poufnych danych może potencjalnie można wyeksportować nieautoryzowanym użytkownikom. Aby uzyskać więcej informacji na temat ochrony przed zagrożeniem, zobacz [Zabezpieczanie stron składników Web Part](http://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 Zawsze, gdy użytkownicy próbują eksportu, zostanie wyświetlony komunikat domyślny. Jednak przez przypisanie wartości do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> właściwości, możesz podać niestandardowy komunikat ostrzegawczy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie deklaratywne <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> właściwości.  
  
 Kod następującą stronę sieci Web używa standardowego <xref:System.Web.UI.WebControls.BulletedList> kontroli i umieszcza je w strefie. Formant będzie ujęte w <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formantu w czasie wykonywania go do działania jako wartość PRAWDA włącza <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Aby formant eksportowalnych, `ExportMode` jest dodawany atrybut `<asp:bulletedlist>` elementu, a wartość atrybutu ma ustawioną wartość <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>, co oznacza dane poufne i niepoufnych mogą być eksportowane. Należy zauważyć, że w `<asp:webpartmanager>` elementu `ExportSensitiveDataWarning` atrybutu jest przypisywana wartość niestandardowych.  
  
 Należy pamiętać, że na przykład kodu działała, ustawienie, które należy dodać w pliku Web.config, aby włączyć eksportowanie plików opisu części sieci Web. Upewnij się, że plik Web.config w tym samym katalogu co strona sieci Web, w tym przykładzie kodu. W ramach `<system.web>` sekcji, upewnij się, że istnieje `<webParts>` element z `enableExport` ustawić atrybutu `true`w następujących znaczników.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/CS/wpmgrExportSensitiveWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/VB/wpmgrExportSensitiveWarningVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, kliknij menu zleceń (reprezentowane przez Strzałka w dół) na pasku tytułu formantu, który zawiera łącza. Wybierz z menu zleceń **wyeksportować**i zwróć uwagę, że pojawi się komunikat z ostrzeżeniem niestandardowych. Jeśli chcesz kontynuować eksport, kliknij przycisk **OK**, który będzie można zapisać lokalną kopię pliku XML opisu wszystkie dane dotyczące formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ExportWebPart">
      <MemberSignature Language="C#" Value="public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="webPart">Formant, z którego zostaną wyeksportowane dane.</param>
        <param name="writer">
          <see cref="T:System.Xml.XmlWriter" /> Który zapisuje wyeksportowanych danych z <c>składnika Web Part</c> do pliku XML opisu.</param>
        <summary>Tworzy plik opisu XML, który zawiera dane o stanie i właściwości dla kontrolki serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Metody składana różne dane stanu i właściwości z `webPart` do pliku XML. Dane obejmują informacje o formancie, łącznie z jej zestawu danych stanu i danych właściwości. Użytkownik, który inicjuje eksportu można zapisać pliku XML na dysku na komputerze lokalnym lub w sieci. Inni użytkownicy można zaimportować pliku opisu do innej strony lub witryny sieci Web i Zastosuj stanu i właściwości danych do innego wystąpienia programu `webPart`. Zapewnia to szybki i wygodny mechanizm dla użytkowników do udziału, a następnie ponownie użyć swoich ustawień kontrolek serwera i umożliwia także deweloperom umożliwia kontrolowanie wyglądu i zachowania formantów wyeksportowane i zaimportowane.  
  
 Właściwości `webPart` nie są eksportowane domyślnie. Aby włączyć eksportu właściwości, należy oznaczyć go przy użyciu `[Personalizable]` atrybutu w kodzie źródłowym. Opcjonalnie można oznaczyć właściwości można eksportować jako zawierające dane poufne, ustawiając `isSensitive` parametr `[Personalizable]` atrybutu `true`. Domyślnie `isSensitive` jest `false`. Deweloperzy mogą ustawić dla parametru `true` do wskazywania poufnych danych.  
  
 Aby włączyć `webPart` do wyeksportowania, ustawia dewelopera jego <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> wartość właściwości albo <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All> (która obejmuje wszystkie właściwości wartość i liter), lub do <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, które Eksportuje wszystkie elementy z wyjątkiem właściwości poufne .  
  
> [!IMPORTANT]
>  Zezwalanie użytkownikom eksportowania danych z formantów i zaimportuj dane do innych kontrolek pociąga za sobą niektórych zagrożenia bezpieczeństwa. Programiści powinni używać podejście opisanych wyżej w celu ochrony poufnych danych, a jeśli chcą uniknąć ryzyka związanego z ujawnieniem danych całkowicie ich nie należy włączać eksportu na `webPart` wcale. Aby uzyskać więcej informacji na składniki Web Part problemy z zabezpieczeniami, zobacz [Zabezpieczanie stron składników Web Part](http://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> jest <see langword="null" />.  
  
 \- lub -  
  
 <paramref name="writer" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> nie jest zawarty w kolekcji formantów, do którego odwołuje się <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.  
  
 \- lub -  
  
 <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" /> Właściwość <paramref name="webPart" /> ma ustawioną wartość <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" />, co oznacza, że eksportu jest wyłączone dla <paramref name="webPart" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastąpiony, aby zapobiec fokus kiedykolwiek ustawiania <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontroli, ponieważ go nie ma interfejsu użytkownika (UI).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Focus%2A> Metoda zastępuje podstawowym <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> metody i zgłasza wyjątek, jeśli obiekt wywołujący wywołuje metodę. Ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu ma bez interfejsu użytkownika i nigdy nie są widoczne dla użytkowników, nigdy nie umożliwiają fokus należy ustawić na samym sobie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Obiekt wywołujący próba wywołania <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" /> metodę, która nie jest obsługiwana w kontrolce ma bez interfejsu użytkownika.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ConsumerConnectionPointCollection ^ GetConsumerConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Formantu serwera, który działa jako klient w połączeniu.</param>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> obiektów, które mogą działać jako punkty połączenia z serwerem kontroli czyli działania jako konsumentów w ramach połączenia części sieci Web.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" /> zawierający wszystkie punkty połączenia w konsumenta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenia składników Web Part, który jest zawsze obejmuje dokładnie dwóch formantów, jeden pełnią funkcję dostawcy danych, innych działając jako klient danych. Każda kontrolka musi mieć co najmniej jedną metodę, które są zdefiniowane jako punkty połączenia. W przypadku formantu użytkownika, jego punktów połączenia są <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Pobieranie punktów połączenia klienta jest krokiem w tworzeniu połączenia części sieci Web.  
  
 Klient zawsze musi mieć co najmniej jedno połączenie punkt aby można było nawiązać połączenie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> — Metoda sprawdza formant użytkownika i pobiera kolekcję wszystkie punkty połączenia. Jeśli <xref:System.Web.UI.WebControls.WebParts.WebPart> formant nie ma punktów połączenia, metoda zwraca pustą kolekcję.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metody.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strona sieci Web zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą zostać nawiązane połączenie, i `<asp:webpartmanager>` elementu.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i niestandardowy interfejs.  
  
-   Opis działania przykład w przeglądarce.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać więcej informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz temat [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Deklaracyjne znaczników dla strony sieci Web zawiera `Register` dyrektywy dla formantu użytkownika i kontrolek niestandardowych. Brak `<asp:webpartmanager>` elementu `<asp:webpartzone>` element zawiera formanty niestandardowe i `<asp:connectionszone>` elementu. Zwróć uwagę, że w `Page_Load` metody, sprawdza, czy połączenie już istnieje i, jeśli nie, określa dostawcę, konsumenta i ich punkty połączenia odpowiednich kod, a następnie dodaje nowe połączenie do zestawu połączenia statyczne odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> właściwości. Należy pamiętać, że <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> obiektów, które są pobierane przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metody są następnie przekazywane do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metodę, aby ustalić, czy można utworzyć połączenia między formantami dwa.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Trzeci część przykładzie jest kontroli kodu źródłowego. Ten kod i instrukcje dotyczące kompilowania, z sekcji przykładu można uzyskać <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy.  
  
 Po załadowaniu w przeglądarce strony sieci Web, kliknij przycisk **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **Connect** przełączyć stronę, aby połączyć tryb. Połącz używa trybu `<asp:connectionszone>` elementu umożliwiają tworzenie połączenia między formantami. W trybie łączenia, kliknij strzałkę w dół w pasku tytułu **kod POCZTOWY** sterowania do aktywacji jego menu zleceń, a następnie kliknij przycisk **Connect**. Gdy zostanie wyświetlony połączenia interfejsu użytkownika (UI), zwróć uwagę, połączenie już zostały utworzone przez kod zawarty w `Page_Load` metody. Jeśli wróć do tej strony w późniejszym sesji przeglądarki tego połączenia statyczne już zostanie nawiązane i nie będzie ich ponowne każdego czas ładowania strony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentWebPartManager">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::WebParts::WebPartManager ^ GetCurrentWebPartManager(System::Web::UI::Page ^ page);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">Strony sieci Web, który zawiera wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</param>
        <summary>Pobiera odwołanie do bieżącego wystąpienia elementu <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu na stronie.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> który odwołuje się do bieżącego wystąpienia formantu na stronie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> Metoda jest przydatna w kontekstach, które chcesz pobrać odwołanie do bieżącego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Jest to typowy scenariusz, w którym ta operacja zostanie wykonana, jeśli piszesz kontrolki niestandardowej, która nie może znać podczas tworzenia jakie identyfikator <xref:System.Web.UI.WebControls.WebParts.WebPartManager> będzie kontrolki na stronie.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> Metody jest statyczny, więc można go wywołać bezpośrednio, bez konieczności wystąpienia <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu.  
  
 Niektóre formanty w części sieci Web kontrolować zestawu, takich jak <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty, mieć <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> właściwość, którą można pobrać odwołania do bieżącego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. W związku z tym podczas pracy z takich formantów, należy używać tej właściwości można pobrać odwołania.  
  
 Jeśli są kodowania w kontekście, w którym wiadomo, identyfikator <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować, takie jak zapisywanie wbudowanego kodu na stronie sieci Web, jest najprostsza i najbardziej efektywny można odwoływać się bezpośrednio do <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu za pomocą jego identyfikatora.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> metody. Przykład ma dwie części: formantu niestandardowego serwera i strony sieci Web obsługującym formantu.  
  
 Niestandardowa <xref:System.Web.UI.WebControls.Label> kontrolować używa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> metodę, aby pobrać identyfikator <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu na bieżącej stronie, a następnie wyświetla identyfikator.  
  
 [!code-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/MyManagerIDLabel.cs#2)]
 [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/MyManagerIDLabel.vb#2)]  
  
 W poniższym przykładzie kodu przedstawiono stronę sieci Web, która obsługuje formantu w <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefy.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/getCurrentWPManagerCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/getcurrentWPManagervb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, zwróć uwagę, że identyfikator bieżącego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant jest wyświetlany w niestandardowej <xref:System.Web.UI.WebControls.Label> formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="page" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayTitle">
      <MemberSignature Language="C#" Value="protected internal virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetDisplayTitle(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetDisplayTitle(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Formant, dla którego metoda zwraca wartość <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />.</param>
        <summary>Pobiera ciąg zawierający wartość <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> właściwość <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <returns>Ciąg zawierający obliczona wartość <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> dla <paramref name="webPart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobiera obliczona wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> właściwość `webPart`. Gdy deweloperzy nie należy przypisywać wartości do <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> właściwość <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu, ta metoda tworzy wartości, który będzie wyświetlany jako tytuł. Obliczona wartość dla formantów bez tytułu składa się z liczbą dołączony ciąg, liczbę określającą sekwencji formantu w ramach bieżącej strefy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> nie ma na liście <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> kolekcji.</exception>
        <block subset="none" type="overrides">
          <para>Ta metoda może zostać zastąpiona w celu zmienić sposób obliczania domyślny tytuł wyświetlania.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetExportUrl">
      <MemberSignature Language="C#" Value="public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetExportUrl(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetExportUrl(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Które wyeksportowane.</param>
        <summary>Pobiera względną ścieżką wirtualną i ciągu zapytania, które są częścią żądania, gdy użytkownik próbuje wyeksportować <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <returns>Ciąg zawierający względną ścieżką wirtualną i zapytanie ciągu razem formularza żądania, aby wyeksportować formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwrócona przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> metoda jest względna ścieżka wirtualna do lokalizacji serwera strony, która zawiera formant, a także wartość ciągu kwerendy dołączonych, która tworzy żądanie eksportu przesłane do serwera. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> Metoda koduje ciąg przed zezwoleniem na żądanie do przesłania, ochronę przed atakami złośliwych skryptów.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na temat zabezpieczania aplikacji części sieci Web, zobacz [Zabezpieczanie stron składników Web Part](http://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="GetGenericWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::GenericWebPart ^ GetGenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formantu serwera, który istnieje w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> i jest zawijany jako formant podrzędny <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> w czasie wykonywania.</param>
        <summary>Pobiera odwołanie do wystąpienia <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> formant, który zawiera kontrolki serwera.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> który opakowuje <paramref name="control" /> jako formant podrzędny. Metoda zwraca <see langword="null" /> Jeśli <paramref name="control" /> nie jest zawarta w <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogólnie rzecz biorąc, istnieją dwie kategorie formantów, które deweloperzy umieścić w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy do udziału w aplikacjach części sieci Web: <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty, które dziedziczą z <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy podstawowej, a inne formanty serwera, które mogą być standardowe Kontrolki ASP.NET, niestandardowe kontrolki lub kontrolki użytkownika. Jeśli którykolwiek z tych formantów jest umieszczany w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy, zajmuje funkcjonalności <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. A <xref:System.Web.UI.WebControls.WebParts.WebPart> formant z założenia ma tę funkcję, ale inne rodzaje kontrolki serwera nie. Aby włączyć innych kontrolek serwera do pełnienia <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroluje, kiedy są umieszczane w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy, ASP.NET opakowuje je za pomocą <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formantu. Ponieważ <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontroli dziedziczy bezpośrednio <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy, zapewnia jej kontrolkach podrzędnych z funkcjami składników Web Part wartość true.  
  
 Często w czasie wykonywania, warto odwołać się do strony deweloperzy <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontrolkę zawierającą kontrolek serwera w strefie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> Metoda umożliwia je, aby pobrać odwołanie do <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> metody. Zawiera przykładowy kod <xref:System.Web.UI.WebControls.Calendar> kontroli zadeklarowana wewnątrz <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefy. `Button1_Click` Metoda najpierw drukuje identyfikator <xref:System.Web.UI.WebControls.Calendar> formantu etykiety, a następnie używa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> metodę, aby pobrać odwołanie do <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formant, który opakowuje kalendarza. Identyfikator <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontroli i identyfikator jego formantu podrzędnego (czyli <xref:System.Web.UI.WebControls.Calendar> kontroli), do drugiego etykiety są podane.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/CS/getGenericWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/VB/getGenericWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ProviderConnectionPointCollection ^ GetProviderConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Formantu serwera, który działa jako dostawca w połączeniu.</param>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> obiektów, które mogą działać jako punkty połączenia z serwerem kontroli czyli działający jako dostawca w ramach połączenia części sieci Web.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" /> zawierający wszystkie punkty połączenia w dostawcy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenia składników Web Part, który jest zawsze obejmuje dokładnie dwóch formantów, jeden pełnią funkcję dostawcy danych, innych działając jako klient danych. Każda kontrolka musi mieć co najmniej jedną metodę, które są zdefiniowane jako punkty połączenia. W przypadku formantu dostawcy jego punktów połączenia są <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> obiektów.  
  
 Dostawca zawsze musi mieć co najmniej jedno połączenie punkt mieć możliwość nawiązania połączenia. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> Metoda sprawdza formant dostawcy i pobiera kolekcję wszystkie punkty połączenia. Pobieranie punktów połączenia dostawcy jest krokiem w tworzeniu połączenia części sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> metody.  
  
 W przykładzie przedstawiono czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Strona sieci Web zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą zostać nawiązane połączenie, i `<asp:webpartmanager>` elementu.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i niestandardowy interfejs.  
  
-   Opis działania przykład w przeglądarce.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać więcej informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Deklaracyjne znaczników dla strony sieci Web zawiera `Register` dyrektywy dla formantu użytkownika i kontrolek niestandardowych. Brak `<asp:webpartmanager>` elementu `<asp:webpartzone>` element zawiera formanty niestandardowe i `<asp:connectionszone>` elementu. Zwróć uwagę, że w `Page_Load` metody, sprawdza, czy połączenie już istnieje i, jeśli nie, określa dostawcę, konsumenta i ich punkty połączenia odpowiednich kod, a następnie dodaje nowe połączenie do zestawu połączenia statyczne odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> właściwości. Należy pamiętać, że <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> obiektów, które są pobierane przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> metody są następnie przekazywane do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metodę, aby ustalić, czy można utworzyć połączenia między formantami dwa.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Trzeci część przykładzie jest kontroli kodu źródłowego. Ten kod i instrukcje dotyczące kompilowania, z sekcji przykładu można uzyskać <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy.  
  
 Po załadowaniu w przeglądarce strony sieci Web, kliknij przycisk **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **Connect** przełączyć stronę, aby połączyć tryb. Połącz używa trybu `<asp:connectionszone>` elementu umożliwiają tworzenie połączenia między formantami. W trybie łączenia, kliknij strzałkę w dół w pasku tytułu **kod POCZTOWY** sterowania do aktywacji jego menu zleceń, a następnie kliknij przycisk **Connect**. Gdy zostanie wyświetlony połączenia interfejsu użytkownika (UI), zwróć uwagę, połączenie już zostały utworzone przez kod zawarty w `Page_Load` metody. Jeśli wróć do tej strony w późniejszym sesji przeglądarki tego połączenia statyczne już zostanie nawiązane i nie będzie ich ponowne każdego czas ładowania strony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="ImportWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart ImportWebPart(class System.Xml.XmlReader reader, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportWebPart (reader As XmlReader, ByRef errorMessage As String) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ ImportWebPart(System::Xml::XmlReader ^ reader, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="errorMessage" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> Które odczytuje dane stanu i właściwości z pliku XML opisu, który jest importowany.</param>
        <param name="errorMessage">A <see cref="T:System.String" /> która jest wyświetlana dla użytkownika, jeśli wystąpi błąd podczas importowania.</param>
        <summary>Importuje plik XML opis, który zawiera dane o stanie i właściwości dla <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> sterowania i dotyczy danych formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (lub formantu serwera, który jest opakowane przez <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> i w związku z tym traktowane jako <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />) który odwołuje się do pliku opisu XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> Metoda importuje plik XML opis, który został utworzony przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> metody dla kontrolki serwera. Nie jest formant używanego serwera, który jest importowany, ale tylko plik opis, zawierającego dane dotyczące stanu i właściwości dotyczące formantu. Kontrolowanie i zestawu, do którego odwołuje się plik opisu musi być dostępny na serwerze, na którym użytkownik próbuje zaimportować z pliku opisu.  
  
 Aby umożliwić importowanie formantu, deweloper musi dodać <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolki na stronie, gdzie będzie włączony importu. W strefie <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolka musi zostać dodana. Ten formant zawiera okno dialogowe pliku, który umożliwia użytkownikom i znaleźć pliku opisu do zaimportowania.  
  
 Po użytkownika umożliwia znalezienie pliku opisu i rozpocznie się importu, pliku opisu jest odczytywany przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> metody. Jeśli nie ma żadnych błędów, a w przypadku znalezienia zestawu i kontroli kontrolki serwera jest dodane do katalogu w ramach <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> różnych danych właściwości i stan określony w pliku opisu sterowania i są stosowane do formantu. Użytkownik może następnie wybrać formant i dodaj go do strony.  
  
> [!IMPORTANT]
>  Podobnie jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> metoda ma kilka możliwości na zagrożenia bezpieczeństwa. Ponieważ spowodowałoby to importowanie danych do witryny sieci Web, złośliwy użytkownik może próbować wstawić nieprawidłowe dane lub kodzie skryptu nawet do pliku opisu, który jest importowany. Następnie nieprawidłowych danych może występować na stronie lub w bazie danych lub wstawionego skrypt można uruchomić. Omówienie potencjalne ryzyko związane z importowanie plików opisu i sposobów unikania te zagrożenia, zobacz [Zabezpieczanie stron składników Web Part](http://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.EndOfStreamException">
          <paramref name="reader" /> Nie można odczytać pliku.  
  
 \- lub -  
  
 <paramref name="reader" /> konieczne jest wyświetlony komunikat o błędzie importu, ale nie znaleziono jeden w pliku.  
  
 \- lub -  
  
 <paramref name="reader" /> Osiągnięto koniec pliku bez Wyszukiwanie elementu XML, który zawiera wyeksportowane dane.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Internals">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Internals As WebPartManagerInternals" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ Internals { System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManagerInternals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" /> klasy, która służy do łączenia i zestaw metod, które faktycznie są implementowane w oddzielnych <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy, ale najczęściej są przydatne w przypadku deweloperów formantu.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />, przez który <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> może odwoływać się różnych metod, które zostały podzielone na <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Właściwość udostępnia interfejsy API do wywoływania na zestaw <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metod, które są używane głównie w przypadku rozszerzeń.  
  
 Zaprojektowany sposobem użycia tych metod wewnętrznego jest dostęp do nich za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> właściwości. Ponieważ właściwość jest chroniony, można tylko do niego dostęp i wywołać metod w ramach wystąpienia <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> klasy przez dziedziczenie z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy.  
  
> [!NOTE]
>  Ta właściwość jest niewidoczna dla IntelliSense w [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]. Jednak w pochodnym <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy, użytkownik nadal dostęp do właściwości i jej różnych elementów członkowskich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAuthorized">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub inne kontrolki serwera można dodać do strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Część elastyczność funkcji składników Web Part jest możliwość dodawania kontrolek serwera do stron sieci Web w czasie wykonywania. Kilka typowych scenariuszy, w których serwer kontroli (co może być niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu, formantu niestandardowego serwera, kontrolkę użytkownika lub kontrolka ASP.NET) mogą zostać dodane.  
  
 Następujące typowe scenariusze, składniki Web Part sterowanie próby zestaw Dodaj formanty serwera do strony oraz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metoda jest wywoływana, aby autoryzować ich:  
  
-   Po dodaniu kontrolki serwera przez zadeklarowanie go w znaczniku strony sieci Web w obrębie <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy.  
  
-   Gdy serwer formantu zostanie dodany nowy programowo do strefy.  
  
-   Gdy użytkownik importuje kontrolki serwera do katalogu części sieci Web, kontrolek.  
  
-   Kiedy istniejący serwer formant został załadowany z magazynu danych personalizacji.  
  
-   Po dodaniu do kontrolki serwera <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> formantu, aby udostępnić go w katalogu formantów serwera.  
  
 W poszczególnych scenariuszy, w których zostaną dodane kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metoda jest wywoływana, aby upewnić się, że zostały spełnione wszystkie kryteria autoryzacji zezwolenie na sterowanie do dodania. Kontrolka ma autoryzację, jest dodawany zwykle jak byłoby, jeśli nie było żadnych filtrowania scenariusza. Gdy formant nie ma uprawnień, zestaw kontroli części sieci Web może odpowiadać na kilka sposobów, w zależności od kontekstu. Zestaw kontroli można dyskretnie nie można dodać części nieautoryzowanego, (Jeśli nie jest konieczne w celu poinformowania użytkownika), można wyświetlić komunikat o błędzie, lub można dodać wystąpienia <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> klasy jako symbol zastępczy. Ten obiekt symbol zastępczy nie jest widoczny na stronie, ale nie jest widoczna w kodzie źródłowym strony, aby wskazać, że formant nieautoryzowanego został wyłączony.  
  
 Określa, czy kontrolka ma autoryzację cyfr jest filtr autoryzacji. Filtr autoryzacji jest funkcją w zestawie formantu części sieci Web, który umożliwia deweloperom wykluczenia ze strony wszystkie formanty, które nie spełniają określone kryteria.  
  
 Aby utworzyć scenariusz filtrowania, deweloperzy należy wykonać dwie czynności. Najpierw należy przypisać wartość ciągu (wartość może być dowolną) w celu <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości każdego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli planują wykorzystać w scenariuszu. Również można przypisać wartości do tej właściwości dla innych typów formantów serwera, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, ponieważ jeśli zostały one umieszczone w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> stref, takie formanty są ujęte w <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formantu w czasie wykonywania, a ten formant dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości.  
  
 Drugim krokiem niezbędne do tworzenia filtrowania scenariusz jest jako zastąpienie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> metody, lub utworzyć programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzeń. W tych metod, można sprawdzić dewelopera <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości, oraz wartość wskazuje, że kontrolka nie powinno być dozwolone, deweloper zapewni <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metoda zwraca wartość `false`.  
  
> [!NOTE]
>  Przykłady kodu i opis sposobu konfigurowania dostosowane filtrowania pomocą scenariusza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody, zobacz tematy dotyczące przeciążenia metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthorized(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAuthorized(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub inny formant serwera sprawdzana pod kątem autoryzacji.</param>
        <summary>Wykonuje kroki początkowe w określeniu, czy formant jest autoryzowany do dodania do strony.</summary>
        <returns>Wartość logiczna, która wskazuje, czy <paramref name="webPart" /> może być dodany do strony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Metoda jest metodą początkowej, wywoływana przez formant składników Web Part ustawioną sprawdzanie autoryzacji dla <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. Akceptuje `webPart` jako parametru i rozpocznie się proces, który określa, czy formant zostanie dodany do strony. Wywołać tej metody z kodu bezpośrednio po należy ustalić, czy dany formant jest autoryzowany.  
  
 Ta metoda wykonuje zadania początkowej określania, czy formant dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy lub jest <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontroli, a jeśli tak, jakiego typu elementu podrzędnego sterować nim zawiera. Aby zakończyć zadanie autoryzacji, wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> przeciążyć metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> metody w kodzie, aby określić, czy formant jest autoryzowany do dodania do strony.  
  
 Przykładowy kod ma trzy części:  
  
-   Niestandardowy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant, który zastępuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody.  
  
-   Strony sieci Web, która tworzy filtr dla <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu.  
  
-   Wyjaśnienie sposobu uruchamiania przykładów kodu.  
  
 W tym przykładzie kodu używane niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant, który zastępuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> przeciążyć metodę, aby zapewnić niestandardową obsługę <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości. Ten formant sprawdza, czy wartość właściwości `admin` i, jeśli wartość jest obecny, autoryzuje formantu. Jeśli formant ma inną wartość, nie jest autoryzowany; Formanty bez wartości właściwości mogą również zgodnie z ich są, że nie jest częścią scenariusza filtrowania.  
  
 W tym przykładzie kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. Ten przykład kodu wykorzystuje metodę kompilacji dynamicznej. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Druga część przykładowy kod tworzy filtr, który może potencjalnie wykluczyć formantu. Następująca strona sieci Web zawiera trzy kontrolek serwera ASP.NET w `<asp:webpartzone>` elementu. Należy zauważyć, że pierwszy i drugi formanty mają ich <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> ustawić różne wartości właściwości, a trzeci nie przypisania właściwości. Ta wartość autoryzacji można sprawdzić w czasie wykonywania, a formant można dodać do strony, gdy kryteria filtru są spełnione kryteria określone przez dewelopera. Zauważ również, że w `Page_Load` metoda, kod wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> metodę, aby określić, czy każdy z formantów został autoryzowany, a jeśli tak, ustawia każdego formantu <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Należy pamiętać, że dla przykładu kodu do pracy, należy dodać ustawienie w pliku Web.config, aby włączyć eksportowanie plików opisu części sieci Web. Upewnij się, że plik Web.config w tym samym katalogu co strona sieci Web, w tym przykładzie kodu. W ramach `<system.web>` sekcji, upewnij się, że istnieje `<webParts>` element z `enableExport` ustawić atrybutu `true`w następujących znaczników.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Po załadowaniu strony w przeglądarce należy pamiętać, że pierwszy formant jest wyświetlany, ponieważ jest on zgodny z kryteriami przeciążonej. Drugi formant nie została dodana do strony, ponieważ jest ona wykluczana przez filtr. Trzeci formant został dodany także, ponieważ nie ma jej <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> zestawu właściwości. Powiadomienie, że kliknięcie ikony menu zleceń na pasku tytułu albo formantu mogą jednocześnie być eksportowany, ponieważ ich odpowiednich <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> zostały przypisane wartości właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> jest <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Ta metoda jest wywoływana bezpośrednio w kodzie. Jeśli chcesz uzyskać większą kontrolę programowy za pośrednictwem procesu autoryzacji, można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" /> przeciążyć metodę.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAuthorized(class System.Type type, string path, string authorizationFilter, bool isShared) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAuthorized(Type ^ type, System::String ^ path, System::String ^ authorizationFilter, bool isShared);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="authorizationFilter" Type="System.String" />
        <Parameter Name="isShared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> Formantu sprawdzana pod kątem autoryzacji.</param>
        <param name="path">Ścieżka względna aplikacji do pliku źródłowego dla formantu autoryzowanego, jeśli formant jest kontrolki użytkownika.</param>
        <param name="authorizationFilter">Wartość ciągu dowolnego przypisana do <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> właściwość <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant, używany do autoryzacji, czy formant można dodać do strony.</param>
        <param name="isShared">Wskazuje, czy formant sprawdzana pod kątem autoryzacji jest kontrolowania udostępnionego, co oznacza, że są widoczne dla użytkowników w wielu lub wszystkich aplikacji, a jego <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" /> ma ustawioną wartość właściwości <see langword="true" />.</param>
        <summary>Wykonuje ostatnie kroki podczas określania, czy formant jest autoryzowany do dodania do strony.</summary>
        <returns>Wartość logiczna wskazująca, czy formant jest autoryzowany do dodania do strony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> Przeciążenia metody wykonuje ostatnie kroki podczas określania, czy formant jest autoryzowany do dodania do strony. Metoda gwarantuje, że `type` jest prawidłowym typem, a `path` ma wartość tylko, jeśli sprawdzany formant jest kontrolki użytkownika. A następnie wywołuje krytycznej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metodę, która wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metodę, aby określić, czy formant jest autoryzowany do dodania do strony.  
  
 Pierwszym krokiem jest można utworzyć filtr, który może potencjalnie wykluczyć formantu. Następująca strona sieci Web zawiera trzy kontrolek serwera ASP.NET w `<asp:webpartzone>` elementu. Należy zauważyć, że pierwszy i drugi formanty mają ich <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> ustawić różne wartości właściwości, a trzeci nie przypisania właściwości. Ta wartość autoryzacji można sprawdzić w czasie wykonywania, a formant można dodać do strony, gdy kryteria filtru są spełnione kryteria określone przez dewelopera.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Drugim krokiem jest zastąpienie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> metody i utworzyć niestandardowe obsługi filtry autoryzacji. Należy pamiętać, że kod najpierw sprawdza, czy właściwość ma wartość, dzięki czemu żadnego kontrolować, które nie ma przypisanego <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości zostaną dodane automatycznie. Jeśli formant ma filtr, zwraca kod `true` tylko wtedy, gdy wartość filtru jest równa `admin`. Oznacza to prosty mechanizm służący do wyświetlania niektórych formantów niektórych użytkowników, w zależności od ich roli. Gdy pełny przykład przy użyciu ról wykracza poza zakres tego tematu, można użyć tej samej logiki jako przesłoniętej metody w tym przykładzie kodu z tą różnicą, że można sprawdzić, czy aktualny użytkownik ma rolę, która jest zgodna z wartością filtr autoryzacji , a następnie dodaj sterowania tylko dla tego użytkownika. To spowoduje umożliwiają tworzenie stron, gdzie w przypadku niektórych użytkowników zobaczy wszystkie formanty, a inni użytkownicy zobaczy tylko wybrane formanty. Jest to, jak może wyglądać logikę, która sprawdza filtr, jeśli używasz ról:  
  
```vb  
If Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  
  return True  
Else  
  return False  
End If  
```  
  
```csharp  
if(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  
    return true;  
else  
    return false;  
```  
  
 Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. Ten przykład kodu wykorzystuje metodę kompilacji dynamicznej. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Po załadowaniu strony w przeglądarce należy pamiętać, że pierwszy formant jest wyświetlany, ponieważ jest on zgodny z kryteriami przeciążonej. Drugi formant nie została dodana do strony, ponieważ jej wartość filtru jest wyłączona. Trzeci formant został dodany, ponieważ nie ma jej <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> zestawu właściwości. Zmiana wartości właściwości do drugiego formantu zgodną z pierwszą kontrolkę, a następnie ponownie uruchom strony, drugi formant został dodany także.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> Kontrolka użytkownika, i <paramref name="path" /> jest <see langword="null" /> lub ciąg pusty ("").  
  
 \- lub -  
  
 <paramref name="type" /> nie jest formantem użytkownika i <paramref name="path" /> jest przypisywana do niego.</exception>
        <block subset="none" type="overrides">
          <para>Ta metoda może zostać przesłonięta przez dziedziczenie z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy, jeśli chcesz podać dodatkowe Obsługa podczas sprawdzania autoryzacji. Należy przesłonić metodę sprawdzanie określonych wartości <paramref name="authorizationFilter" /> parametr, a na podstawie wartości, zwraca wartość logiczną, która określa, czy formant zostanie dodany do strony.  
  
 W przypadku deweloperów strony chcą także sprawdzić filtry autoryzacji i zapewnić niestandardową obsługę istnieje opcja do wykonywania tej wbudowanej strony .aspx, lub w pliku CodeBehind, bez konieczności dziedziczą żadnych klas. Można zadeklarować program obsługi zdarzeń alternatywne na stronie <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> metody <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu. Więcej informacji oraz przykład zawiera temat <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> metody.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomPersonalizationStateDirty">
      <MemberSignature Language="C#" Value="protected virtual bool IsCustomPersonalizationStateDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsCustomPersonalizationStateDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsCustomPersonalizationStateDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wprowadzono zmiany personalizacji, która wpływa na szczegóły na poziomie strony personalizacji kontrolowane przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</summary>
        <value>Wartość logiczna wskazująca, czy wprowadzono zmiany personalizacji. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrolować używa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> zmieniono właściwość wewnętrznie w celu sprawdzenia, czy żadnych danych personalizacji poziomu strony, która zarządza. Dane personalizacji zostanie zmieniona, gdy użytkownicy wykonywania różnych akcji personalizacji na poziomie strony, takich jak dodawanie lub usuwanie <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, połączenie lub odłączanie formantów, zmiana układ strony za pomocą przenoszenia kontrolek i innych działań.  
  
> [!NOTE]
>  Użytkownicy mogą również wykonywać personalizacji na poziomie kontroli, co oznacza, że ich wprowadzania zmian personalizujących określonego formantu, a zmiany dotyczą tylko tego formantu. Przykład czy kontrolka edycji i zmiana jego tytuł lub jego kolor tła. Poziom kontroli personalizacji nie wpływa na dane personalizacji poziomu strony śledzone przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli i dlatego element <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> wartość właściwości nie jest zmieniana na `true` po wystąpieniu personalizacji poziom kontroli.  
  
 Mimo że metoda jest chroniona i nie można uzyskać dostępu do bezpośrednio przez obiekt wywołujący <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> bezpośrednio przez obiekty wywołujące mogą można uzyskać dostępu do właściwości i zwraca wartość tej właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.PersonalizationState.IsDirty" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetDirty" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Zawiera dane stanu utrwalonego do załadowania.</param>
        <summary>Ładunki kontroli danych o stanie, który został zapisany z poprzedniego żądania strony, należy przywrócić na kolejne żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A> Metoda jest przydatne w celu przywrócenia danych właściwości, które powinny zostać utrwalony między ogłaszania zwrotnego strony, nawet wtedy, gdy <xref:System.Web.UI.Control.EnableViewState%2A> właściwość jest ustawiona na `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> nie jest prawidłową <see cref="P:System.Web.UI.PageStatePersister.ControlState" />.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> zawiera dane o stanie do załadowania.</param>
        <summary>Przechowuje dane personalizacji niestandardowego, który został przekazany do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontroli przez obiekty personalizacji do użycia później, podczas procesu inicjalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> Metoda zapewnia dane o stanie zapisanych w formie <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> obiektu. Te dane są używane po pewnym czasie, aby załadować danych personalizacji w formantach części sieci Web i wykonywanie innych zadań inicjowania.  
  
> [!NOTE]
>  Ta metoda jest wywoływana przez sekwencję metody, która rozpoczyna się, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A> metoda początkowo żąda skojarzony <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> obiektu do dostarczania danych personalizacji dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu.  
  
 Nie można wywołać tej metody bezpośrednio w kodzie. Jednak można bezpośrednio wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A> wywołuje metodę, która sama <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> metodę i zwraca dane personalizacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy mogą zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> metodę w pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="MediumPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MediumPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MediumPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MediumPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MediumPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Security.PermissionSet" /> obiektu, który umożliwia tylko <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> uprawnień i <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> uprawnienia.</summary>
        <value>A <see cref="T:System.Security.PermissionSet" /> obiektu, który umożliwia tylko <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> uprawnień i <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> uprawnienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.PermissionSet> Obiekt, który jest zwracany przez tę właściwość jest używana podczas importowania do deserializacji typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimalPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MinimalPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MinimalPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MinimalPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Security.PermissionSet" /> obiektu, który umożliwia tylko <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> uprawnień i <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> uprawnienia.</summary>
        <value>Pobiera <see cref="T:System.Security.PermissionSet" /> obiektu, który umożliwia tylko <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> uprawnień i <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> uprawnienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.PermissionSet> Obiektu zwróconego przez tę właściwość jest używana podczas importowania dla wszystkich, z wyjątkiem typu deserializacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWebPart">
      <MemberSignature Language="C#" Value="public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Lub inny formant serwera przenoszony.</param>
        <param name="zone">Element docelowy <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> do której <c>składnika Web Part</c> jest przenoszony.</param>
        <param name="zoneIndex">Liczba całkowita, która wskazuje indeks <c>składnika Web Part</c> względem innych kontrolek w <c>strefy</c>.</param>
        <summary>Przenosi <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolki serwera z jednego <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy do innego, lub do nowej pozycji w tej samej strefie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrolować używa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metodę, aby przenieść `webPart` do nowej lokalizacji w tej samej strefie lub w innej strefie. Tę metodę można wywołać bezpośrednio z kodu, a także jest wywoływana, gdy użytkownik przeniesie formantu do nowej pozycji za pomocą różnych opcji w interfejsie użytkownika (UI) części sieci Web.  
  
 Kilka warunków muszą zostać spełnione przed `webPart` można przenieść, a większość z nich są wskazywane przez elementy wymienione w sekcji wyjątki w tym temacie. Jeśli `webPart` nie został umieszczony w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy rozpoczynać się od znaku, nie można przenieść do strefy.  
  
 Po spełnieniu warunków, aby przenieść ma miejsce następująca sekwencja akcji `webPart`:  
  
1.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> zdarzeń.  
  
2.  `webPart` zostanie usunięty z jego bieżącej strefy (w razie potrzeby) i dodać do nowej strefy lub nowe położenie w jego bieżącej strefy.  
  
3.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> zdarzeń.  
  
4.  `zoneIndex` z każdym <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli w strefach pochodzenia i miejsce docelowe jest resetowany do uwzględnienia przeniesionego formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metody bezpośrednio z kodu, aby przenieść <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu z jedną strefę.  
  
 Przykładowy kod ma trzy części:  
  
-   Formant użytkownika do zmiany trybów wyświetlania.  
  
-   Strony sieci Web do hostowania kontrolki.  
  
-   Wyjaśnienie sposobu uruchamiania przykładów kodu.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać więcej informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Druga część przykładzie jest strona sieci Web zawiera dwie strefy, z których każdy zawiera dwa kontrolki serwera. Gdy użytkownik kliknie **Przenieś składnika Web Part** przycisk na stronie kod w `Button1_Click` metody przenosi formantu z pierwszą strefę do nowej pozycji w drugiej strefie. Należy zauważyć, że kod najpierw należy wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> metoda pobierania <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiekt, który opakowuje `list1` formantu. Jest to wymagane, ponieważ pierwszy parametr <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metoda wymaga <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować, podczas gdy `list1` jest formant serwera programu ASP.NET.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/CS/MoveWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/VB/MoveWebPartVB.aspx#1)]  
  
 Po pobraniu strony, kliknij przycisk **Przenieś składnika Web Part** przycisk i należy pamiętać, że formant, który zawiera łącza zostanie przeniesiony do pozycji w drugiej strefie. Ten ruch formantu odbywa się programowo przez wywołanie metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metody. Można również użyć **tryb wyświetlania** formant listy rozwijanej można przełączać strony do trybu projektowania i w trybie projektowania, możesz przeciągać kontrolki do różnych stref lub różnych miejscach w ramach ich stref. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> Metody jest również wywoływany przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przenosi sterowania do obsługi takich zainicjowane przez użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPart" /> nie jest zawarta w <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> Kolekcja <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.  
  
 \- lub -  
  
 <paramref name="zone" /> nie jest zawarta w <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" /> Kolekcja <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.  
  
 \- lub -  
  
 Strefy odwołuje się <paramref name="webPart" /> formantu <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" /> właściwość jest <see langword="null" />, co oznacza, że <paramref name="webPart" /> aktualnie nie jest zawarte w strefie.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> lub <paramref name="zone" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="zoneIndex" /> jest mniejsza od zera.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizeWebPart">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizeWebPart(class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizeWebPart (e As WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizeWebPart(System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" /> zdarzeń i wywołuje program obsługi zdarzeń, jeśli taka istnieje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> Metoda jest wywoływana przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli jest sprawdzana pod kątem autoryzacji, które mają zostać dodane do strony. Gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metoda jest wywoływana, uruchamia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzeń, a w przypadku metody obsługi dla zdarzenia, wywołuje program obsługi.  
  
 Proces autoryzacji <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty to ważna cecha części sieci Web. Każdy <xref:System.Web.UI.WebControls.WebParts.WebPart> lub formantu serwera, który zostanie dodany do strefy przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant przechodzi przez proces autoryzacji, aby określić, czy formant może być dodany. Domyślnie zestaw kontroli części sieci Web nie ma żadnych kryteriów filtrowania, aby zapobiec formanty dodawane do strefy. Jednak zestaw kontroli mechanizmy, które są niezbędne dla deweloperów do tworzenia własnych kryteria filtrowania. Korzystając z tych mechanizmów, można utworzyć niestandardowe scenariusze filtrowania. Na przykład można utworzyć filtr, aby, jeśli użytkownik jest w roli administratora, niektóre formanty zostanie dodany do strefy podczas renderowania strony, a jeśli użytkownik ma rolę użytkownika, tych kontrolek nie zostanie dodany.  
  
 Mechanizmy filtrowania formantów podczas procesu autoryzacji są <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metod i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzenia w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli.  
  
 Aby utworzyć scenariusz filtrowania, są zasadniczo dwa zadania. Najpierw Przypisz ciągi do <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości każdego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, których chcesz filtrować. Te wartości ciągu mogą być dowolnego, ale powinny zawierać kryteria, które chcesz filtrować. Na przykład, jeśli potrzebujesz określonej kontrolki ma zostać dodany do strefy tylko wtedy, gdy administrator użytkownik wyświetla stronę, a następnie można przypisać wartość ciągu `admin` do właściwości. Następnie można użyć funkcji ról platformy ASP.NET i dodać wszystkich użytkowników witryny do różnych ról, takich jak administrator, Menedżer i użytkownika. Podczas ładowania strony kodzie filtrowania może sprawdzić, jakie rola użytkownika jest w, porównaj je z wartości filtru autoryzacji w formancie sprawdzany i w razie (na przykład) użytkownik ma rolę administratora i ustawiana formantu <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> wartość `admin`, mogą zostać dodane formantu.  
  
 Drugim krokiem w tworzeniu filtrowania scenariusza jest napisać kod, aby sprawdzić <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> wartości właściwości na <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki oraz określa, czy każdej kontrolki jest autoryzowany, zanim zostanie dodany do strefy. Dostępne są dwie opcje, w których można umieścić tego kodu filtrowania. Pierwsza opcja jest preferowaną opcję dla deweloperów strony. Można utworzyć metody obsługi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzenia bezpośrednio w kodzie skryptu serwera strony sieci Web lub w pliku separację kodu. Skojarz metodę ze zdarzeniem, dodając `OnAuthorizeWebPart` atrybut do tagu dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować na stronie, jak pokazano w następujący przykładowy kod znaczników.  
  
```  
<asp:webpartmanager id="manager1" runat="server"   
   OnAuthorizeWebPart="manager1_AuthorizeWebPart" />  
```  
  
 Wszystkie niestandardowe metodę związana jest sprawdzenie każdego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować kryteria filtrowania, a następnie, na podstawie wyników, przypisz wartość logiczną umożliwiającą <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> właściwość <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> obiekt, aby wskazać, czy <xref:System.Web.UI.WebControls.WebParts.WebPart> formant może być dodane. Kod w sekcji przykładzie pokazano, jak to zrobić.  
  
 Drugą opcją lokalizację kodzie filtrowania ma dziedziczyć <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy, a następnie zastąpić metodę sprawdzania kryteria filtrowania. Te dwie metody, można zastąpić, czy są <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> metody lub <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metody. Mimo że będzie działać w każdej z metod, w większości przypadków zaleca się zastąpienie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody, ponieważ zapewnia ona większa programowe kontroli nad procesem całego autoryzacji, należy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metoda wykonuje tylko jeden z określonych zadań , czyli aby wywołać zdarzenie i sprawdź, czy program obsługi. Przykład kodu niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy, która zastępuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> przeciążenia metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak ustawić programu obsługi zdarzeń niestandardowych dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzeń, dzięki czemu program obsługi zapewniają niestandardowy kod filtrowania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> — metoda. W tym przykładzie byłaby typowym sposobem dewelopera strony zapewnienie filtrowania scenariusza i autoryzacji <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mają zostać dodane do strony.  
  
 Na stronie sieci Web należy zauważyć, że `<asp:webpartmanager>` element ma `OnAuthorizeWebPart` atrybutu o nazwie przypisane do niego obsługi zdarzeń. Metoda sprawdza, czy formanty na stronie odpowiednich <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> wartości właściwości ustawiane na `admin` i jeśli tak, zwraca `true`, co oznacza, że będzie można autoryzacji i dodany do strony.  
  
> [!NOTE]
>  Należy pamiętać, że formantów, które nie mają żadnej wartości przypisane do <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości są dodawane również, ponieważ są one przyjmowane jako nie jest częścią scenariusza filtrowania. Będzie to typowym podejściem w scenariuszu filtrowania: Niektóre formanty będą filtrowane, a inne osoby nie będzie, ponieważ są one domniemania mają być dostępne dla wszystkich użytkowników.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 Ponieważ konfigurowania użytkowników w rolach wykracza poza zakres tego tematu, w tym przykładzie kodu nie sprawdza role użytkownika w filtrowania. Scenariusz filtrowania formantów zgodnie z ról użytkownika jest jednak może być jednym z najbardziej typowych zastosowań ta funkcja filtrowania. Jeśli masz ról w witrynie i chcesz sprawdzić ról użytkownika w ramach tej metody, aby filtrować formantów, metoda może przypominać następujący blok kodu (w przeciwieństwie do prostsze w poprzednim przykładzie kodu, który nie używa ról).  
  
```vb  
Protected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  
  As Object, ByVal e As WebPartAuthorizationEventArgs)  
  
  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  
    If Roles.IsUserInRole(Page.User.Identity.Name, _  
      e.AuthorizationFilter) Then  
  
      e.IsAuthorized = True  
    Else  
      e.IsAuthorized = False  
    End If  
  End If  
  
End Sub  
```  
  
```csharp  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" /> zdarzenie, aby wskazać, że strony i jego formanty są ładowane i uaktywnieniu połączeń na stronie zacząć udostępniać dane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> zdarzeń po zakończeniu procesu ładowania strony. Metoda zapewnia sposób dodawania obsługi zdarzenia.  
  
 Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnConnectionsActivated` atrybutu `<asp:webpartmanager>` element strony, a następnie przypisanie nazwy niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy mogą zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" /> metodę w pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivating">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivating (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivating(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivating (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivating(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" /> zdarzenie, aby wskazać, że strony i jego formantów zostały załadowane i rozpocząć proces aktywacji połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> zdarzenie, które udostępnia deweloperom mechanizm programowo Dostosowywanie proces aktywacji połączenia.  
  
 Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnConnectionsActivating` atrybutu `<asp:webpartmanager>` element strony, a następnie przypisanie nazwy niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy mogą zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" /> metodę w pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> zawierający dane zdarzenia powiązane z tryb wyświetlania zmienione.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> zdarzeń w celu wskazania, że <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> sterowania zostało zakończone, proces przełączania z trybu jednego ekranu do innego na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> Metody w swojej bazie formularza po prostu zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> metody. Na przykład po zmianie trybu wyświetlania, możesz chcieć zmienić wygląd interfejsu użytkownika (UI), w zależności od tego, jakie zawarte w trybie <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs.OldDisplayMode" /> właściwości. Można też ukryć niektórych zawartości lub wyświetlić dany formant.  
  
 Aby zastąpić metodę, należy zwykle wywołać metody podstawowej jako ostatni krok przesłoniętej metody niestandardowy kod jest uruchamiany pierwszy, a zdarzenie jest zgłaszane, wskazujący, że zmiana trybu pełną.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanging(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanging (e As WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanging(System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia powiązane z zmiana trybu wyświetlania.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" /> zdarzeń w celu wskazania, że <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formant jest w trakcie przełączania z trybu jednego ekranu do innego na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> Metody w swojej bazie formularza po prostu zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" /> metody. Na przykład, jak zmienia tryb wyświetlania można sprawdzić, jakie będą nowy tryb wyświetlania (przy użyciu <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode" /> właściwości) i zmianę w interfejsie użytkownika (UI) oparte na jaki będzie nowy tryb wyświetlania. Jeśli tryb wyświetlania niestandardowych, można wyświetlić niektórych formantów, jeśli w trybie niestandardowym ma być nowy tryb wyświetlania.  
  
 Gdy przesłonić tę metodę, należy zwykle wywołać metodę podstawową w pierwszym kroku przesłoniętej metody tak, aby zdarzenia wskazująca, że rozpoczyna zmienić tryb wyświetlania. Następnie niestandardowego kodu można wprowadzać zmiany w interfejsie użytkownika (UI), zanim nowy tryb wyświetlania nie są wyświetlane.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Init" /> zdarzenie, które jest pierwsze zdarzenie w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontroli cyklu życia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> Metoda wywołuje metodę podstawową, która wywołuje <xref:System.Web.UI.Control.Init> zdarzenia dla formantu, a następnie wykonuje kilku czynności przygotowawczych, takich jak zapewnienie, że istnieje tylko jedno wystąpienie <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować na stronie i ładowanie dane personalizacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Istnieje inny <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki na stronie</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzenie, które występuje tuż przed <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> renderowania formantu na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender%2A> Metoda wywołuje metodę podstawową, która wywołuje <xref:System.Web.UI.Control.PreRender> zdarzenia dla formantu, a następnie rejestruje kilka skrypty klienta, które są wymagane na stronach zawierających składniki Web Part kontrolki.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanged(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanged (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanged(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> zdarzenie, które występuje po <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> sterowania albo nowo wybrano lub jego zaznaczenie został wyczyszczony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> zdarzenie, które jest zazwyczaj punktu w czasie, gdy deweloper może być konieczna zmiana wyglądu interfejsu użytkownika (UI). Na przykład podczas tworzenia nowego <xref:System.Web.UI.WebControls.WebParts.WebPart> jest wybrana kontrolka, kontroli części sieci Web ustaw zmiany renderowania nowo zaznaczonego formantu. Po formantu wyboru jest wyczyszczone, renderowanie jest powrót do normalnego.  
  
 Po wybraniu określonego <xref:System.Web.UI.WebControls.WebParts.WebPart> formant do edytowania, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metoda jest wywoływana. Gdy użytkownik zakończy edycji formantu i zamyka z wynikami, że formant wyboru jest wyczyszczone, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metoda jest wywoływana ponownie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Dostępnych jest kilka opcji związanych z <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> zdarzeń umożliwia deweloperom dostosowywać renderowania, która występuje po zmianie wybranej kontrolki. W kodzie deklaratywne w <see langword="&lt;asp:webpartmanager&gt;" /> można ustawić elementu <see langword="OnSelectedWebPartChanged" /> atrybutu i przypisać do niej nazwy metody niestandardowe. W metodzie niestandardowych można zmodyfikować renderowania formanty po wystąpieniu zdarzenia. Innym rozwiązaniem jest odziedziczone <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy i zastąpić metodę. Trzecia opcja to dostosować renderowania na poziomie strefy; na przykład może dziedziczyć z <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> klasy i zastąp jego <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" /> metodę w celu dostosowania renderowanie kontrolek zaznaczone i wyczyścić podczas procesu edycji.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanging(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanging (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanging(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" /> zdarzenie, które występuje podczas zmiany, które <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> zaznaczonego formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> zdarzenie, które występuje podczas zmiany, które <xref:System.Web.UI.WebControls.WebParts.WebPart> zaznaczonego formantu.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontroli korzysta z tej metody i skojarzonego zdarzenia, aby zapewnić możliwość anulowania procesu, w którym jest zmiana wybrany formant. Na przykład metoda jest wywoływana w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> metody, a także w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> metody w sposób, aby anulować proces. Jeśli użytkownik kliknie Zlecenie anulowania dla formantu, który jest edytowany, nie jest wybrana kontrolka i wszelkie edycji zmiany nie zostały zapisane, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> metoda pozwala anulować edycję.  
  
> [!NOTE]
>  Podczas rozpoczęcia i zakończenia procesu łączenia z metody podobnie wywołania metody <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu do innego formantu, aby umożliwić anulowanie tego procesu.  
  
 Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> zdarzenia przez dodanie `OnSelectedWebPartChanging` atrybutu `<asp:webpartmanager>` element w znaczniku strony deklaratywne i przypisanie do atrybutu nazwę niestandardowej metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia powiązane z usuwaniem formantu.</param>
        <summary>Zgłasza podstawowym <see cref="E:System.Web.UI.Control.Unload" /> zdarzeń i usuwa <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> wystąpienia ze strony sieci Web.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdded(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdded (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdded(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" /> zdarzenie, które występuje po <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant został dodany do strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> Metoda jest wywoływana podczas proces dodawania <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu (lub innych formantu serwera, który jest dodawany do <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy) do strony.  
  
 Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> zdarzenia przez dodanie `OnWebPartAdded` atrybutu <`asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdding">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdding(class System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdding (e As WebPartAddingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdding(System::Web::UI::WebControls::WebParts::WebPartAddingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" /> zdarzenie, które występuje w ciągu proces dodawania <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu (lub formant serwera lub użytkownika) do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> zdarzeń, aby wskazać, że formant jest w trakcie dodawany. Metoda udostępnia opcję, aby anulować proces dodawania. Jeśli formant został dodany pomyślnie, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> następuje zdarzeń.  
  
 Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartAdding` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy tworzący pochodne <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" /> metodę w celu dostosowania obsługi zdarzeń.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosed(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosed (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosed(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" /> zdarzenia sygnalizują, że formant został usunięty ze strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> zdarzeń w celu wskazania, że <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu (lub innego serwera lub użytkownika formantu) został zamknięty pomyślnie na stronie.  
  
 Aby zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli oznacza usunąć go ze strony, aby nie są odtwarzane i umieścić go w specjalny zawierający obiekt skrót katalogu strony. Katalog strony, który odpowiada <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolować, przechowuje odwołania do zamkniętego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki dla każdej strony. Jeśli <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> zadeklarowano kontrolki na stronie w obrębie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefy, użytkownicy mogą przełączać strony do trybu wyświetlania katalogu i Dodaj z powrotem do strony wszystkie formanty, które wcześniej zostały zamknięte.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> Metoda zapewnia deweloperom tworzenie niestandardowego programu obsługi dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> zdarzeń. Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartClosed` atrybutu `<asp:webpartmanager>` element strony, a następnie przypisanie nazwy niestandardowej metody z atrybutem. Jedno zadanie przydatne, deweloper może przeprowadzać w ramach tej metody jest wyświetlane symbol zastępczy zamiast zamkniętego kontroli, wraz z etykietka narzędzia, który będzie informować użytkowników, jak dodać kontrolki wróć do strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosing(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosing (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosing(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" /> zdarzenie, które występuje podczas procesu <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub usuwana ze strony kontrolki serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> zdarzenie, aby wskazać, że formant jest zamknięty lub usunięty ze strony. Metoda udostępnia opcję, aby anulować proces zamykania. Jeśli formant jest pomyślnie usunięty ze strony <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> następuje zdarzeń.  
  
 Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartClosinging` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy tworzący pochodne <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> metodę w celu dostosowania obsługi zdarzeń.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleted(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleted (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleted(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" /> zdarzenie, które występuje po <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli zostały trwale usunięte ze strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> Metoda jest wywoływana w trakcie usuwania <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu (lub innych formantu serwera, który jest dodawany do <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy) ze strony.  
  
 Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> zdarzenia przez dodanie `OnWebPartDeleted` atrybutu <`asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleting(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleting (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleting(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" /> zdarzeń, który wskazuje, że dynamicznym <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu (lub formant serwera lub użytkownika, który jest zawarty w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy) trwa proces usuwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko dynamiczne <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty mogą zostać usunięte, a po usunięciu formantu wystąpienia formantu zostanie usunięty ze strony i nie można przywrócić. Dynamiczne <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki są tymi, które są dodawane programowo, lub z katalogu części sieci Web, w przeciwieństwie do formantów statycznych które są zadeklarowane w znaczniku strony sieci Web.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> zdarzeń, aby wskazać, że formant jest trwałe usunięcie ze strefy. Metoda zawiera również anulować proces usuwania. Jeśli formant jest pomyślnie usunięty ze strony, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> następuje zdarzeń.  
  
 Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartDeleting` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy tworzący pochodne <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> metodę w celu dostosowania obsługi zdarzeń.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoved(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoved (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoved(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" /> zdarzenie, które występuje po <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant został przeniesiony do innej lokalizacji na stronie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> zdarzeń na końcu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metodę, która zapewnia pełne proces przechodzenia formantu przed żadnego kodu zdarzeń uruchamia program obsługi.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> Zdarzenie jest zgłaszane, gdy formant zostanie przesunięty w jego bieżącej strefy lub do innej strefy i nie ma znaczenia, czy ruch odbywa się programowo lub przez przeciąganie kontrolki użytkownika.  
  
 Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> zdarzenia przez dodanie `OnWebPartMoved` atrybutu <`asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoving(class System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoving (e As WebPartMovingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoving(System::Web::UI::WebControls::WebParts::WebPartMovingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" /> zdarzeń, który wskazuje, że <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolki serwera lub użytkownika w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy jest w trakcie przenoszenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Zgłasza — metoda <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> zdarzenie, które występuje, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> lub inne kontrolki serwera jest przenoszone w ramach strefy lub do innej strefy. Metoda zawiera również anulować proces. Jeśli przeniesienie zostało pomyślnie ukończone, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> następuje zdarzeń.  
  
 Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartMoving` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy tworzący pochodne <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" /> metodę w celu dostosowania obsługi zdarzeń.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" /> zdarzenie, które występuje po nawiązaniu połączenia między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> Metoda zgłasza jej odpowiednie zdarzenie w końcu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> metodę, która zapewnia, że kroki wymagane do łączenia się z dwóch formantów zostały zakończone przed uruchomieniem jakiegokolwiek kodu programu obsługi zdarzeń.  
  
 Metoda zapewnia programowy kontroli nad procesem tworzenia połączeń i stanowiąc wygodne miejsce, w którym należy zaktualizować interfejs użytkownika (UI) lub powiadamiania użytkownika, że połączenie zostało ustanowione jest skojarzonego zdarzenia.  
  
 Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> zdarzenia przez dodanie `OnWebPartsConnected` atrybutu <`asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" /> zdarzenie, które występuje w trakcie nawiązywania połączenia między dwiema <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub serwera lub użytkownika formanty zawarte w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> zdarzenie, które występuje, gdy dwa formanty próba nawiązania połączenia. Metoda zapewnia możliwość anulowania próba nawiązania połączenia. Jeśli połączenie zostanie nawiązane, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> następuje zdarzeń.  
  
 Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartsConnecting` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy tworzący pochodne <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> metodę w celu dostosowania obsługi zdarzeń.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" /> zdarzenie, które występuje po połączenie między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki została zakończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> Metoda zgłasza jej odpowiednie zdarzenie w końcu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodę, która wykonuje proces przerywa połączenie między dwa formanty.  
  
 Metoda zapewnia programowy kontroli nad procesem zakończenia połączenia, dzięki czemu deweloperzy mogą poinformować użytkownika, wprowadzić zmiany w interfejsie użytkownika (UI) lub wprowadzić inne zmiany w aplikacji.  
  
 Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> zdarzenia przez dodanie `OnWebPartsDisconnected` atrybutu <`asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" /> zdarzeń, co oznacza, że dwa <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolki serwera lub użytkownika w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy są właśnie zakończenia połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenie, które występuje, gdy dwa formanty są zakończenia połączenia. Metoda zawiera anulować procesu rozłączania. Jeśli połączenie zostanie pomyślnie usunięty, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> następuje zdarzeń.  
  
 Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartsDisconnecting` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy tworzący pochodne <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> metodę w celu dostosowania obsługi zdarzeń.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      </Docs>
    </Member>
    <Member MemberName="Personalization">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Personalization As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ Personalization { System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do obiektu, który zawiera dane personalizacji dla strony sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> zawierający dane personalizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Właściwość zapewnia dostęp do <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> obiekt, który jest skojarzony ze stroną za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Za pomocą tej właściwości, można dostęp do różnych elementów członkowskich obiektu personalizacji. Na przykład można użyć <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> metodę, aby przełączyć zakresu personalizacji strony z udostępnionego do zakresu użytkownika, albo na odwrót. Można również znaleźć bieżącego zakresu personalizacji strony, czy Personalizacja nawet jest włączony na stronie, który dostawca jest używana dla danych personalizacji i inne.  
  
 Należy pamiętać, że odwołuje się do niego dane <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> właściwość jest tylko dane personalizacji poziomu strony, które są śledzone przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Dane personalizacji specyficzne dla formantu, takie jak wartości właściwości personalizable <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, to nie jest częścią <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> właściwości.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji dotyczących personalizacji części sieci Web, zobacz [Przegląd personalizacji części sieci Web](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> właściwości programowo.  
  
 Następująca strona sieci Web umożliwia użytkownikowi trybu edycji do edycji niektórych aspektów <xref:System.Web.UI.WebControls.Calendar> formantu. **Przełączania zakresu** przycisku zmienia strony na użytkownika lub wspólnego zakresu personalizacji. **Trybu edycji** i **trybie przeglądania** przyciski każdego przełączać strony do trybu wyświetlania odpowiednie. Zwróć uwagę, że w `<script>` tagu sekcji pliku, dwie metody obsługi zdarzeń użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> dostęp do elementów członkowskich przydatne obiektu źródłowego dla właściwości. W szczególności używać tych metod <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> — metoda i <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> właściwości w obiekcie dostępne za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Personalization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/CS/wpmgrPersonalizationCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Personalization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/VB/wpmgrPersonalizationVB.aspx#1)]  
  
 Na przykład kodu do uruchomienia należy również włączyć użytkownika lub użytkowników w celu spersonalizowania strony w zakresie udostępnionego. Dodaj wpis w pliku Web.config `<system.web>` sekcji prawdopodobnie następujący kod znaczników.  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow  
        users="[Replace the text and brackets with a user name or   
           group.]"  
        roles="admin"   
        verbs="enterSharedScope"  />  
    </authorization>  
  </personalization>  
</webParts>   
```  
  
 Po załadowaniu strony w przeglądarce, kliknij przycisk **przełączania zakresu** przycisk i zwróć uwagę, że strony teraz mówi zakres jest udostępniony. Kliknij przycisk **trybu edycji** Aby zmienić tryb wyświetlania, kliknij menu zleceń w formancie widoczne, a następnie wybierz **Edytuj** z menu. Należy zauważyć, że zostanie wyświetlony interfejs użytkownika (UI) dla obu formantów edycji. Teraz kliknij **trybie przeglądania** na powrót do normalnej przeglądania. Jeśli strona jest w zakresie udostępniony, kliknij przycisk **przełączania zakresu** ponownie, aby zapewnić strona znajduje się w zakresie użytkownika. Następnie wykonaj te same czynności ponownie edytować kontrolkę, ale należy zauważyć, że teraz w Interfejsie użytkownika edycji <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> formant nie jest wyświetlany. Wynika to z tego formantu działa tylko wtedy, gdy strona jest w wspólnego zakresu personalizacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScript">
      <MemberSignature Language="C#" Value="protected virtual void RegisterClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RegisterClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RegisterClientScript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RegisterClientScript();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu można wyemitować skrypt po stronie klienta, który jest używany dla różnych funkcji personalizacji, takich jak przeciąganie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki na stronie sieci Web.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca zawartość kontrolki do zapisu do strony.</param>
        <summary>Zastąpiona w celu zapobieżenia <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> renderowania zawartości formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje dane o stanie <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolować, dane można przywrócić na przyszłe żądania do strony sieci Web, który zawiera formant.</summary>
        <returns>
          <see cref="T:System.Object" /> Dla tego formantu zapisanego dane o stanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A> Metoda zapisuje dane o stanie dla właściwości, które powinny zostać utrwalony między ogłaszania zwrotnego strony, nawet wtedy, gdy <xref:System.Web.UI.Control.EnableViewState%2A> właściwość jest ustawiona na `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> zawiera dane o stanie do załadowania.</param>
        <summary>Zapisuje dane stanu personalizacji niestandardowe przechowywane przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolować, dzięki czemu można wykorzystać te dane przy każdym załadowaniu strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A> — Metoda jest krytyczne w trakcie personalizacji, ponieważ umożliwia spersonalizowanych ustawień do przechowywania dla przeglądarki przyszłych sesji i odwiedza do strony. Metoda zapisuje dane stanu personalizacji niestandardowych, które zawiera pozycje takie jak następujące: dynamiczne <xref:System.Web.UI.WebControls.WebParts.WebPart> lub kontrolki serwera, które zostały dodane do strony lub usunięte z stronę; formantów, które zostały przeniesione na stronie; i dynamiczne połączenia, które mają zostały utworzone lub usunięte.  
  
 Nie można wywołać tej metody bezpośrednio w kodzie. Można jednak wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> metody, które wywołuje tę metodę w celu zapisywania danych personalizacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy mogą przesłaniać tę metodę w pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy w celu dostosowania procesu zapisywania danych personalizacji.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedWebPart As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ SelectedWebPart { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub innych formantu serwera, który jest aktualnie wybrany do edytowania lub tworzenia połączenia z formantem.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant, który jest aktualnie wybrany do edycji lub stanowiących połączenie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Właściwość zwraca odwołanie do <xref:System.Web.UI.WebControls.WebParts.WebPart> lub innych formantu serwera, który jest aktualnie wybrany do edytowania lub tworzenia połączenia z formantem.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrola zapewnia kilka metod przydatne i zdarzeń do obsługi proces wybierania formantu. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Zdarzenie tuż po wybraniu formantu, ale przed wprowadzeniem jakichkolwiek zmian. Aby wykonać niektóre akcje w formancie po wybraniu, Przesłoń <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> metody. Na przykład można zmienić wygląd formantu, który jest zaznaczony, ale nie zmienił się jeszcze, aby wyróżnić wizualnie kontroli jest zaznaczone.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Zdarzenie zaraz po zmianie wybranej kontrolki. Aby wykonać niektóre akcje w formancie po został zmieniony, należy zastąpić <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanged As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ SelectedWebPartChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zaznaczeniu jednego <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu ma zmieniony i przeniesiony do innego formantu na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie może być używany w połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metodę, aby zmienić interfejsu użytkownika (UI) zaznaczonego formantu. Na przykład, jeśli użytkownik zmienia strony do trybu projektowania (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>), a następnie wybiera <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli z zamiarem przeciągając go do nowej pozycji jest często stosowanym rozwiązaniem zmienić renderowanie zaznaczonego formantu, na przykład zmiana koloru jego obramowania i tło jest.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na korzystanie ze zdarzeń, zobacz [porady: korzystać zdarzeń w aplikacjach formularzy sieci Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanging As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ SelectedWebPartChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas zmiany, które <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub serwera formant aktualnie jest zaznaczony na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie może być używany w połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> metody. Strona deweloperzy mogą tworzyć program obsługi zdarzeń w ich kodu dodając `OnSelectedWebPartChanging` atrybutu `<asp:webpartmanager>` element w stronę i ustawienia wartości atrybutu nazwy niestandardowej metody obsłuży zdarzenie.  
  
 To zdarzenie jest wywoływane podczas procesu początku lub na końcu połączenie między formantami i gdy otwierające i zamykające edycji formantu. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> metody.  
  
 Zwykle, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> zdarzenie jest wywoływane bezpośrednio z powodu akcji przez użytkownika, która zmienia wybrany formant, zdarzenia można anulować. Istnieje jednak scenariusz, w którym nie można anulować zdarzenia. Jeśli <xref:System.Web.UI.WebControls.WebParts.WebPartZone> formantu zostanie usunięty, <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty zawiera wszystkie należy zamknąć, w przeciwnym razie mogłyby oddzielona. W takim przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować zamknięciu <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, nie użytkownik i jego musi ustalić wybrano kontroli i kiedy należy zmienić wybór, bez żadnych ryzyko przerwania, tak, aby go wykonania procesu czyszczenia wszystkie kontrolki. W związku z tym zgodnie z założeniami <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> metody nie można anulować w tym scenariuszu. Dla zdarzenia powiązane, które można anulować, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> zdarzeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPersonalizationDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPersonalizationDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia flagę wskazującą tych danych personalizacji niestandardowych w celu <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki została zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> Metoda ustawia flagę ostatecznie powodujący składniki personalizacji w formancie składników Web Part zapisywane dane personalizacji zaktualizowane. Aby uzyskać więcej informacji na temat scenariuszy, które mogą powodować zmiany w danych personalizacji śledzone przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> sterowania, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> Metody nie można wywołać bezpośrednio w kodzie i nie może zostać zastąpione, ponieważ jest używana wewnętrznie przez formant części sieci Web, Ustaw jako część personalizacji części sieci Web.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Można wywołać metodę w pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy. Powinien to być przydatne, jeśli chcesz dostosować personalizacji składniki Web Part kontroli ustawić i w związku z tym należy kontrolować proces ustawienie flagi dla danych personalizacji.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="SetSelectedWebPart">
      <MemberSignature Language="C#" Value="protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSelectedWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetSelectedWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub formantu serwera, który został wybrany.</param>
        <summary>Ustawia <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> wartość właściwości jest równa aktualnie zaznaczonego <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolki serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> Metoda jest wywoływana podczas procesów, które rozpoczynać się ani kończyć edycji określony przez kontrolki `webPart` parametr oraz te, które rozpoczynać się ani kończyć połączenie, które obejmuje `webPart`.  
  
 Na początku procesów edycji i połączenia, `webPart` jest formant, który został wybrany do edycji lub aby wprowadzić połączenia.  
  
 Po zakończeniu procesów edycji i połączenia `null` jest przekazywana do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> metodę, która powoduje aktualnie zaznaczony formant już wybrane.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg pusty (""), aby skórki nie mogą być stosowane do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</summary>
        <value>Pusty ciąg, który uniemożliwia <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu o karnacji przypisane do niej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> Właściwość zastępuje dziedziczonego <xref:System.Web.UI.Control.SkinID%2A?displayProperty=nameWithType> właściwość, aby zapobiec <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli, czyli niewidocznym formancie z za pomocą karnacji. Implementacja właściwości uniemożliwia karnacji przypisywane przez zawsze zwraca pusty ciąg z `get` metody dostępu i zawsze zgłoszeniu wyjątku, jeśli podjęto próbę ustawienia wartości `set` metody dostępu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Próbowano ustawić wartość właściwości.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kolekcji wszystkie <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> obiektów na stronie sieci Web, które są zdefiniowane jako połączenia statyczne.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> zawierający połączenia statyczne na stronie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Jest używana przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli śledzenie i zarządzanie nimi wszystkie połączenia statyczne na stronie. Połączenia statyczne, w przeciwieństwie do połączenia dynamicznego, nie trzeba za każdym razem, gdy realizacją strony można dodać do strony.  
  
 Kolekcja odwołuje się ta właściwość zawiera wszystkie znajdujące się na stronie, czy są one utworzone programowo, czy określony za pomocą połączenia statyczne `<asp:webpartconnection>` elementu w znaczniku strony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje programowy użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> właściwości.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Pliku kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i niestandardowy interfejs.  
  
-   Strona sieci Web zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą zostać nawiązane połączenie, i `<asp:webpartmanager>` elementu.  
  
-   Opis działania przykład w przeglądarce.  
  
 Poniższy kod zawiera tylko część strony sieci Web przykładzie. Należy również uzyskać pierwsze dwie części przykład--Kontrolki niestandardowe użytkownika i kodu źródłowego dla formantów niestandardowych i interfejsu — z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Zawiera również opcje kompilacji <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
 Trzeci część przykładowy kod jest strony sieci Web. Zawiera deklaratywne znaczników strony `Register` dyrektywy dla formantu użytkownika i kontrolek niestandardowych. Brak `<asp:webpartmanager>` elementu `<asp:webpartzone>` element zawiera formanty niestandardowe i `<asp:connectionszone>` elementu. Zwróć uwagę, że w `Page_Load` metody, sprawdza, czy połączenie już istnieje i, jeśli nie, określa dostawcę, konsumenta i ich punkty połączenia odpowiednich kod, a następnie dodaje nowe połączenie do zestawu połączenia statyczne odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> właściwości.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Po załadowaniu w przeglądarce strony sieci Web, kliknij przycisk **tryb wyświetlania** kontrolka listy rozwijanej i wybierz **Connect** przełączyć stronę, aby połączyć tryb. Połącz używa trybu `<asp:connectionszone>` elementu umożliwiają tworzenie połączenia między formantami. W trybie łączenia, kliknij strzałkę w dół w pasku tytułu **kod POCZTOWY** sterowania do aktywacji jego menu zleceń, a następnie kliknij przycisk **Connect**. Gdy zostanie wyświetlony połączenia interfejsu użytkownika (UI), zwróć uwagę, połączenie już zostały utworzone przez kod zawarty w `Page_Load` metody. Jeśli wróć do tej strony w późniejszym sesji przeglądarki tego połączenia statyczne już zostanie nawiązane i nie będzie ich ponowne każdego czas ładowania strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
      </Docs>
    </Member>
    <Member MemberName="SupportedDisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedDisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ SupportedDisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję tylko do odczytu wszystkich trybów wyświetlania, które są dostępne na określonej stronie sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> zawierający zestaw <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> obiektów dostępnych na określonej stronie sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Właściwość zawiera trybów wyświetlania, które są faktycznie dostępne na stronie podane rodzaje strefy tam środki kontroli na stronie.  
  
> [!NOTE]
>  Tryby wyświetlania można wyłączyć, a po wyłączeniu trybu wyświetlania nie została dodana do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> kolekcji, nawet wtedy, gdy na stronie danego typu strefy, który obsługuje ten tryb wyświetlania.  
  
 Tryb przeglądania i tryb projektowania są zawsze obsługiwane. Edycja, są trybów wyświetlania, które mogą być różne w katalogu, a następnie połącz trybów. Każdy z tych trybów wyświetlania jest skojarzony z określonego typu <xref:System.Web.UI.WebControls.WebParts.ToolZone> formantu. Jest obecność specjalnie typu strefy na stronie sieci Web, który powoduje, że tryb wyświetlania określonego do dodania do kolekcji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwości. Na przykład, jeśli strona sieci Web zawiera <xref:System.Web.UI.WebControls.WebParts.EditorZone> strefy, ale nie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefy, a następnie edytuj tryb wyświetlania jest jeden z trybów obsługiwane na tej stronie, ale tryb wyświetlania katalogu nie jest obsługiwana.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Właściwości różni się od <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> właściwość, która odwołuje się do kolekcji zawierającej wszystkie tryby wyświetlania, które są dostępne dla bieżącego <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować, nawet te, które nie są obsługiwane w określonej strony.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano sposób programowy użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwości. Kod używa tej właściwości do wypełnienia listy z tylko tryby wyświetlania dostępne w bieżącej strony sieci Web.  
  
 Istnieją trzy obsługiwane tryby wyświetlania na tej stronie: przeglądanie, projektu i edytować. Dwa pierwsze są zawsze dostępne, a trybem edycji jest dostępna w tym przykładzie kodu, ponieważ zawiera strony <xref:System.Web.UI.WebControls.WebParts.EditorZone> formantu. Katalog i połącz wyświetlania tryby nie są wyświetlane, ponieważ ich odpowiednie strefy nie znajdują się na tej stronie.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/CS/wpmgrSuppDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/VB/wpmgrSuppDisplayModesvb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce umożliwia kontrolka listy rozwijanej tę stronę w trybie przeglądania do trybu projektowania, a następnie do trybu edycji. W trybie edycji można można z menu rozwijanego zleceń w nagłówku kontrolki serwera i wybierz **Edytuj** można edytować formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsDirty As Boolean Implements IPersonalizable.IsDirty" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dane stanu personalizacji niestandardowych zarządzane przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formant został zmieniony na stronie sieci Web.</summary>
        <value>Wartość logiczna wskazująca, czy dane stanu personalizacji został zmieniony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Właściwości umożliwia wywołań określić, czy Personalizacja stanu danych, który jest zarządzany przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki została zmieniona. Gdy użytkownicy personalizować szczegóły na poziomie strony, na przykład zmiana układ strony, tworzenie lub usuwanie połączeń oraz dodawanie lub usuwanie kontrolek, dane personalizacji zarządzanych przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli zmian. Jest przekazywane metoda, która zwraca dotyczące obiektów wywołujących wartość chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> właściwości, które nie są bezpośrednio dostępne przez obiekty wywołujące.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Właściwości nie wskazuje, czy wartość właściwości lub poszczególnych właściwości, które mają wpływ na wygląd poszczególnych <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, zostały zmienione. Poziom kontroli personalizacji jest śledzony osobno dla każdego formantu. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Właściwość wskazuje tylko czy dane personalizacji który znajduje się na poziomie strony i zarządza <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki została zmieniona.  
  
 Poniżej przedstawiono listę niektórych typowych przypadkach personalizacji, które mogłyby spowodować <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> zwracać wartość dla właściwości `true`, wskazujące który <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant ma pewne dane personalizacji zmienione:  
  
-   Zamykanie statycznego <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu (lub kontrolki serwera lub użytkownika), na stronie.  
  
-   Przywracanie static zamkniętych <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli z katalogu strony powrót do strony.  
  
-   Przenoszenie żadnego formantu, w ramach strefy lub do innej strefy.  
  
-   Dodawanie formantu z katalogiem <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki serwera i/lub dodawanie formantu programowo.  
  
-   Tworzenie połączenia między dwiema <xref:System.Web.UI.WebControls.WebParts.WebPart> steruje programowo lub za pomocą połączenia interfejsu użytkownika (UI).  
  
-   Usuwanie połączenia między dwoma <xref:System.Web.UI.WebControls.WebParts.WebPart> steruje programowo lub przy użyciu interfejsu użytkownika połączenia.  
  
 Aby uzyskać dostęp do wartości tej właściwości, należy rzutować <xref:System.Web.UI.WebControls.WebParts.WebPartManager> wystąpienie kontrolki do <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interfejsu; możesz przeczytać <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> wartości właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano prosty użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> właściwości, aby wskazać, niektóre typowe personalizacji strony wystąpienia tego przyczyny <xref:System.Web.UI.WebControls.WebParts.WebPartManager> dane personalizacji formantu, aby zmienić.  
  
 Przykładowy kod ma czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie, która zawiera formanty części sieci Web.  
  
-   Plik źródłowy, który zawiera kod niestandardowy dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które mogą zostać połączone i interfejsu.  
  
-   Strona sieci Web, który obsługuje wszystkie kontrolki.  
  
-   Opis działania przykładów kodu.  
  
 Pierwsza część przykładowy kod jest kontrola użytkownika do zmiany trybów wyświetlania. Kod źródłowy formant użytkownika można uzyskać z sekcji przykład <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy. Aby uzyskać informacji na temat trybów wyświetlania i jak działa Kontrola użytkownika, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie części sieci Web](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Druga część przykład jest plikiem źródłowym o kontrolkach niestandardowych i interfejsu. Zwróć uwagę, że `IZipCode` interfejsu przedstawia jedną metodę, a metoda jako zaimplementowana w niestandardowej `ZipCodeWebPart` kontroli służy jako metoda wywołania zwrotnego, aby włączyć `ZipCodeWebPart` do działania jako dostawca w scenariuszu połączenia. Inne kontrolki `WeatherWebPart`, działa jako klient kontroli w przypadku połączenia; może zużyć określonego interfejs dostarczony przez `ZipCodeWebPart`. W rzeczywistej aplikacji `WeatherWebPart` może zużywać spersonalizowane wartość kodu POCZTOWEGO od dostawcy, a następnie podaj informacji o pogodzie graficznego dla użytkowników.  
  
 Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie kodu używane kompilacji dynamicznej; w związku z tym należy zauważyć, że `Register` dyrektywy dla tego składnika w górnej części strony sieci Web zawiera tylko `TagPrefix` i `Namespace` atrybutów bez `Assembly` atrybutu. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/ZipCodeComponent.vb#2)]  
  
 Trzeci część przykładowy kod jest strony sieci Web. Powiadomienie, że zawiera on dwa <xref:System.Web.UI.WebControls.WebParts.WebPartZone> stref z pierwszego zawierającego dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Istnieje również <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefy, który zawiera standardowe <xref:System.Web.UI.WebControls.Calendar> formant, który użytkownicy mogą dodawać do strony. `<asp:connectionszone>` Element udostępnia interfejs umożliwiający użytkownikom tworzenie połączenia między formantami połączenia. W `Page_PreRender` metody, zwróć uwagę, że sprawdza, czy dane personalizacji zostały zmienione, a jeśli tak, aktualizuje tekst `Label1`.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/wpmgrIsDirtyCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/wpmgrIsDirtyVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, spróbuj utworzyć Niektóre scenariusze opisane w sekcji uwag w tym temacie, która zmieni danych personalizacji. Po wprowadzeniu dowolnych zmian różnych, gdy zmiana wymaga jednego ze scenariuszy personalizacji śledzone przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować tekst `Label1` formant jest wyświetlany, aby wskazać, że dane personalizacji zostały zmienione. Możesz na przykład:  
  
-   Utwórz połączenie między formantami klikając **połączyć składnik Web Part formantów** przycisku.  
  
-   Użyj **tryb wyświetlania** formant listy rozwijanej można przełączać strony do trybu katalogu i Dodaj **Mój kalendarz** formantu do drugiego <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefy.  
  
-   Zmień przejście do poprzedniej strony do przeglądania tryb, kliknij przycisk menu zleceń (przedstawiono symbol strzałkę na pasku tytułu) dla **Mój kalendarz** kontroli i wybierz **zamknąć** Zamknij je i dodaj go do katalogu strony.  
  
-   Zwraca stronę do trybu katalogu i Dodaj **Mój kalendarz** kontroli wróć do strony.  
  
-   Użyj **tryb wyświetlania** kontroli aby przełączyć do trybu projektowania strony i zmienić układ formantów przeciągając co najmniej jeden z nich do innej strefy lub w inne miejsce w tej samej strefie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Load">
      <MemberSignature Language="C#" Value="void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Load (state As PersonalizationDictionary) Implements IPersonalizable.Load" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Load;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> zawiera dane o stanie do załadowania.</param>
        <summary>Zwraca wcześniej zapisane dane stanu personalizacji niestandardowe muszą zostać załadowane do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest implementacją <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=nameWithType> metodę, która umożliwia kontroli składników Web Part ustawioną bezpośrednio dostęp do chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=nameWithType> metody. Gdy ta metoda jest wywoływana, są przechowywane niestandardowe dane spersonalizowane, które jest zarządzane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli i który został wcześniej zapisany w magazynie danych trwałych do użycia w dalszej części procesu inicjalizacji.  
  
> [!NOTE]
>  W większości przypadków kodu dewelopera strony i kontrolki nie trzeba wywołać tę metodę, ponieważ jest on używany głównie przez formant części sieci Web, Ustaw jako jego mechanizmu pobierania danych personalizacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeden scenariusz, w której deweloperzy użyje tej metody jest opracowywania ramy niestandardowych personalizacji zastępującą, udostępniane przez zestaw kontroli części sieci Web. W takich przypadkach deweloperzy mogą dziedziczyć po <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy i zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> metodę, aby zwrócić niestandardowej implementacji <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> obiektu. Niestandardowa <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> obiektu spowodowałoby wywołanie implementacji <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> metody we właściwym czasie można załadować danych personalizacji niestandardowych.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Save">
      <MemberSignature Language="C#" Value="void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Save (state As PersonalizationDictionary) Implements IPersonalizable.Save" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Save;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> zawiera dane o stanie do zapisania.</param>
        <summary>Zapisuje dane stanu personalizacji niestandardowego, który jest zarządzany przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> Metoda jest implementacją <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=nameWithType> metodę, która umożliwia kontroli składników Web Part ustawioną bezpośrednio dostęp do chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=nameWithType> metody. Ta metoda jest wywoływana, zapisuje wszystkie spersonalizowane danych, który jest zarządzany przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli w magazynie danych trwałych skonfigurowane dla aplikacji sieci Web Part.  
  
> [!NOTE]
>  W większości przypadków kodu dewelopera strony i kontrolki nie trzeba wywołać tę metodę, ponieważ jest on używany głównie przez formant części sieci Web, Ustaw jako jego mechanizm umożliwiający zapisanie danych personalizacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeden scenariusz, w której deweloperzy będzie działać z tą metodą jest opracowywania ramy niestandardowych personalizacji zastępującą, udostępniane przez zestaw kontroli części sieci Web. W takich przypadkach deweloperzy mogą dziedziczyć po <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy i zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> metodę, aby zwrócić niestandardowej implementacji <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> obiektu. Niestandardowa <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> obiektu spowodowałoby wywołanie implementacji <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> metody we właściwym czasie zapisać danych personalizacji niestandardowych.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastosowanie personalizacji danych o stanie <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontroli i wywołuje metodę podstawową, aby włączyć śledzenie zmian w danych stan widoku formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmian stanu widoku danych są przechowywane w <xref:System.Web.UI.StateBag> obiektu i jest możliwy za pośrednictwem formantu <xref:System.Web.UI.Control.ViewState%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która umożliwia formantów podrzędnych mają być wyświetlane.</summary>
        <value>Wartość logiczna, która wskazuje, czy <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontroli i jej kontrolkach podrzędnych są widoczne. <see langword="true" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Formant przesłania podstawowym <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> zawsze zwraca wartość dla właściwości `true` dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> właściwości. Mimo że <xref:System.Web.UI.WebControls.WebParts.WebPartManager> samego formantu nie jest widoczny, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> musi mieć ustawioną właściwość `true` tak, aby jej kontrolkach podrzędnych są widoczne domyślnie.  
  
 Jeśli spróbujesz ustawić wartość <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> właściwości, zawsze generuje błąd, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli zastąpiono zachowanie właściwości podstawowej i uniemożliwia przypisywanie wartości do właściwości.  
  
 Ta właściwość nie jest powiązania w wizualnych projektantów, ale jest powiązania w czasie wykonywania. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.BindableAttribute>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Nastąpiła próba do przypisania wartości dla właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdded As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartAdded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po dynamicznym <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub inne kontrolki serwera został dodany do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy, aby wskazać, że formant został dodany pomyślnie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Zdarzeń jest przydatne w przypadku wskazującą, czy dynamiczna kontrola (kontrola dodać programistycznie, a nie został zadeklarowany w znaczniku strony) został pomyślnie dodany do strefy. W połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> metody zdarzenia oferuje deweloperom sposób zaktualizuj interfejs użytkownika (UI) lub w przeciwnym razie Powiadom użytkowników, czy formant został dodany pomyślnie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
      </Docs>
    </Member>
    <Member MemberName="WebPartAdding">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdding As WebPartAddingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAddingEventHandler ^ WebPartAdding;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje w ciągu proces dodawania dynamicznym <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub inny formant serwera do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> Zdarzenie jest wywoływane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> metody po rozpoczęciu procesu Dodawanie formantu do strefy. To zdarzenie umożliwia anulować proces przed ukończeniem. Jeśli proces dodawania zakończy się pomyślnie, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> zdarzeń.  
  
 Strona deweloperzy mogą podać niestandardowe programy obsługi dla zdarzenia przez dodanie `OnWebPartAdding` atrybutu `<asp:webpartmanager>` element w stronę i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
      </Docs>
    </Member>
    <Member MemberName="WebPartClosed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosed As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu (lub kontrolki serwera lub użytkownika) zostaną usunięte ze strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Zdarzenie oznacza, że formant został zamknięty pomyślnie, przez użytkownika lub programowo. Aby zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli oznacza usunąć go ze strony, aby nie są odtwarzane i umieścić go w specjalny zawierający obiekt skrót katalogu strony. Katalog strony, który odpowiada <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolować, przechowuje odwołania do zamkniętego <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki dla każdej strony. Jeśli <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> zadeklarowano kontrolki na stronie w obrębie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefy, użytkownicy mogą przełączać strony do trybu wyświetlania katalogu i Dodaj z powrotem do strony wszystkie formanty, które wcześniej zostały zamknięte.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Zdarzeń jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> metodę, która wywołuje zdarzenie, a także zapewnia obsługę programu.  
  
 Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartClosed` atrybutu `<asp:webpartmanager>` element strony, a następnie przypisanie nazwy niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartClosing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosing As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartClosing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu usuwania <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu (lub kontrolki serwera lub użytkownika) ze strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Zdarzenie jest wywoływane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> metody podczas <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli Trwa zamykanie formantu. Jeżeli usunięcie formantu zakończy się pomyślnie, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> zdarzeń.  
  
 Strona deweloperzy mogą podać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartClosed` atrybutu <`asp:webpartmanager>` element w stronę i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 Zwykle, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> zdarzenie jest wywoływane bezpośrednio z powodu zamknięcia użytkownika <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli, zdarzenia można anulować. Istnieje jednak scenariusz, w którym nie można anulować zdarzenia. Jeśli <xref:System.Web.UI.WebControls.WebParts.WebPartZone> formantu zostanie usunięty, <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty zawiera wszystkie należy zamknąć, w przeciwnym razie mogłyby oddzielona. W takim przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować zamknięciu <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty nie użytkownika. I kiedy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant jest w trakcie wywoływania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metody, aby zamknąć każdego formantu i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> zdarzenie jest zgłaszane, nie można anulować zdarzenia (zgodnie z projektem), ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> musi wykonać zadanie czyszczenia Formanty wszystkie strefy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleted As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartDeleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub inne kontrolki serwera został usunięty z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> Zdarzeń jest przydatne w przypadku wskazujący, że dynamicznej kontroli (kontrola dodać programistycznie, a nie został zadeklarowany w znaczniku strony) zostało pomyślnie usunięte ze strefy. W połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> metody zdarzenia oferuje deweloperom sposób zaktualizuj interfejs użytkownika (UI) lub w przeciwnym razie Powiadom użytkowników, że formant został pomyślnie usunięty.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleting As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartDeleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu trwałe usunięcie wystąpienia dynamicznym <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub inny formant serwera z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> Zdarzenie jest wywoływane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> metody, w trakcie usuwania kontrolki dynamicznej (taki, który został dodany programowo lub przez użytkownika za pomocą interfejsu użytkownika części sieci Web). Zdarzenie zapewnia możliwość anulować proces przed zakończeniem. Jeśli proces usuwania zostało pomyślnie ukończone, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> zdarzeń.  
  
 Strona deweloperzy mogą podać niestandardowe programy obsługi dla zdarzenia przez dodanie `OnWebPartDeleting` atrybutu `<asp:webpartmanager>` element w stronę i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartMoved">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoved As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartMoved;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolki serwera został przeniesiony do innej lokalizacji na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie dotyczy zarówno statyczne (deklaracja w znaczniku strony sieci Web), jak i formantów dynamicznych. Jest ona skojarzona z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> metody. Ponieważ zdarzenie jest wywoływane po zakończeniu przenoszenia, deweloperzy mogą obejmować program obsługi zdarzeń zapewnienie niektórych powiadomień do użytkowników, niektóre weryfikacji lub pewne inne akcje. Aby dodać obsługę zdarzeń, można dodać `OnWebPartMoved` atrybutu `<asp:webpartmanager>` element w strony i przypisz nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartMoving">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoving As WebPartMovingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartMovingEventHandler ^ WebPartMoving;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas przenoszenia <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub innych formantu serwera, który jest zawarty w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> lub inne kontrolki serwera jest przenoszony własnej strefie, lub do innej strefy. Taka sytuacja może wystąpić, zarówno gdy użytkownik przeciąga formantu, jak i po programowe przenoszenia.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Zdarzenie jest wywoływane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> — metoda która zapewnia możliwość anulowania proces przed ukończeniem. Jeśli przeniesienie zostało zakończone i kontrolki umieszczone w nowej pozycji, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> zdarzeń.  
  
 Strona deweloperzy mogą tworzyć niestandardowe obsługi dla zdarzenia przez dodanie `OnWebPartMoving` atrybutu `<asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartCollection WebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebParts As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartCollection ^ WebParts { System::Web::UI::WebControls::WebParts::WebPartCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formanty śledzone przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki na stronie sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> zawiera odwołania do zestawu <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Jest używana przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu, aby śledzić wszystkie <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które są zawarte w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy na stronie. Mimo że kolekcja jest tylko do odczytu, są dostępne poszczególne <xref:System.Web.UI.WebControls.WebParts.WebPart> steruje za pośrednictwem zmiany kolekcji i udostępnić je programowo.  
  
> [!NOTE]
>  Możliwe są <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki umieszczone na stronie poza <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefy, co prowadzi do formantu nie jest śledzony przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli lub w jego <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> kolekcji. Istnieje jednak wyboru Użyj <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować poza strefą, ponieważ następnie utraci jego funkcje części sieci Web i działa jako formant normalne serwera.  
  
 Dowolnego typu formantu, który można umieścić w strefie, czy niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu, formantu standardowego ASP.NET, kontrolkę użytkownika lub formantu niestandardowego serwera, może być traktowana jako <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu w czasie wykonywania. Gdy formant, który nie jest <xref:System.Web.UI.WebControls.WebParts.WebPart> formant jest umieszczany w <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefy w czasie wykonywania ASP.NET opakowuje kontrolki z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu, tak aby formant może zachowywać się jako wartość PRAWDA <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu. W związku z tym, za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwość <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu można śledzić dowolnego typu formantu serwera, niezależnie od tego, czy pochodzi z <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwości programowo dostęp osoby <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. Zwróć uwagę, że w deklaratywne znaczników dla strony sieci Web w `<asp:webpartzone>` elementu są dwa standardowe kontrolek serwera ASP.NET. Chociaż te dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy, ponieważ są one w strefie zostaną opakowane z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektów w czasie wykonywania, a w związku z tym mają być uwzględnieni w kolekcji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwości. Można również dodać niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, kontrolek użytkownika lub niestandardowy serwer kontrolki w tej strefie, i może zostać obsłużone tak samo.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_WebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/CS/wpmgrWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_WebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/VB/wpmgrWebPartsVB.aspx#1)]  
  
 Należy pamiętać, że dla przykładu kodu do pracy, należy dodać ustawienie w pliku Web.config, aby włączyć eksportowanie plików opisu części sieci Web. Upewnij się, że plik Web.config w tym samym katalogu co strona sieci Web, w tym przykładzie kodu. W ramach `<system.web>` sekcji, upewnij się, że istnieje `<webParts>` element z `enableExport` ustawić atrybutu `true`w następujących znaczników.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Po załadowaniu strony do przeglądarki, jeśli klikniesz przycisk **liczby składników Web Part** przycisku w kodzie użyto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwość, aby uzyskać liczbę formantów w kolekcji. Jeśli klikniesz przycisk **Ukryj tytuł kalendarza** przycisku, kod zmienia kalendarza, tak aby renderowania tylko obramowanie i nie tytuł.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsConnected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po ustanowieniu określonego połączenia między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów (lub kontrolki serwera lub użytkownika).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> Zdarzeń jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> metody. Zdarzenie jest przydatne, ponieważ po wiadomo, że połączenie jest pełny, możesz chcieć poinformować użytkownika fakt lub nawet zmienić interfejsu użytkownika (UI) strony. Na przykład można wyświetlić niektórych graficzny, które sugeruje udane połączenie między dwoma formantami lub wyświetlania krótką wiadomość, a następnie zmień tryb wyświetlania strony z powrotem do trybu przeglądania.  
  
 Deweloperzy strony można skojarzyć niestandardowy program obsługi zdarzeń z tym zdarzeniem, dodając `OnWebPartsConnected` atrybutu `<asp:webpartmanager>` elementu na stronie i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsConnecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu tworzenia połączenia między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów (lub serwera lub użytkownika formanty umieszczane w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Zdarzenie jest wywoływane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> metody, i sygnalizuje, rozpoczął proces łączenia (na przykład użytkownik ma wybrany formant i kliknięty zlecenie connect), ale nie została jeszcze zakończona. Zdarzenie zapewnia możliwość anulowania połączenia przed zakończeniem. Jeśli połączenie zostało pomyślnie ukończone, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> zdarzeń.  
  
 Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartsConnecting` atrybutu `<asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsDisconnected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu połączenia między dwiema <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolki serwera zostało zakończone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> Zdarzeń jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> metody. Zdarzenie jest przydatne, ponieważ po wiadomo, że połączenie zostało zakończone, możesz chcieć poinformować użytkownika, niektóre akcje czyszczenia w kodzie lub wprowadzić inne zmiany w interfejsie użytkownika (UI).  
  
 Deweloperzy strony można skojarzyć niestandardowy program obsługi zdarzeń z tym zdarzeniem, dodając `OnWebPartsDisConnected` atrybutu `<asp:webpartmanager>` elementu na stronie i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsDisconnecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas kończenia połączenia między wcześniej połączona <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolki serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Zdarzenie jest wywoływane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> — metoda która sygnalizuje fakt że użytkownik kliknął zlecenie rozłączenia lub <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> w przeciwnym razie zostanie wywołana metoda. Zdarzenie zapewnia możliwość anulowania zakończenia połączenia przed zakończeniem procesu. Jeśli połączenie jest zakończone pomyślnie, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> zdarzeń.  
  
 Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartsDisconnecting` atrybutu `<asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.  
  
 Zwykle, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenie jest wywoływane bezpośrednio z powodu akcji przez użytkownika, która kończy się połączenia, można anulować zdarzenia. Istnieje jednak kilka scenariuszy, w których nie można anulować zdarzenia. Pierwszy scenariusz jest, jeśli <xref:System.Web.UI.WebControls.WebParts.WebPartZone> formantu zostanie usunięty, <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty zawiera wszystkie należy zamknąć, w przeciwnym razie mogłyby oddzielona. W takim przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolować zamknięciu <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, nie użytkownik i jego musi również mieć możliwość przerwanie połączenia wszystkich połączonych formantów bez żadnych ryzyko przerwania, tak, aby ją zakończyć proces wyczyszczenie i zamknięcie wszystkie kontrolki. W związku z tym zgodnie z założeniami <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> metody nie można anulować w tym scenariuszu. Dla zdarzenia powiązane, które można anulować, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> zdarzeń.  
  
 Drugi scenariusz, w którym <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzeń nie może być anulowana jest, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> metoda jest wywoływana (to wywoływana podczas każdego żądania do strony, na przykład), a istnieje pewien typ konflikt w istniejących połączeń na stronie. Na przykład możliwe, że użytkownik nawiązuje połączenie kontroli x y kontroli, ale użytkownika udostępnionego łączy kontroli x do sterowania z, a jeszcze kontroli x nie jest uprawniony do utworzenia wielu połączeń. W takim przypadku ustawienia użytkownika dla połączenia mają pierwszeństwo i <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli rozwiązuje konflikt przez wywołanie metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> — metoda i zakończenia połączenia między x i z dla określonego użytkownika. Ponieważ rozłączenie jest niezbędne do rozwiązywania konfliktów, zgodnie z założeniami <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzeń nie może być anulowana w tym scenariuszu.  
  
 Trzeci scenariusz, w którym <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> — metoda nie może być anulowana jest, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> lub formantu serwera, który jest aktualnie połączony został usunięty lub zamknięty. Formantu ostatecznie mają zostać usunięte ze strony, dlatego jest logicznej konieczność usunięcia połączenia. W związku z tym, kiedy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> wywołuje kontroli <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metodę, która z kolei wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenia, zgodnie z projektem nie było możliwości Anulowanie zdarzenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      </Docs>
    </Member>
    <Member MemberName="Zones">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Zones As WebPartZoneCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ Zones { System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kolekcji wszystkie <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy na stronie sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" /> , która odwołuje się zestaw <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> Jest używana przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu, aby śledzić <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy na stronie sieci Web. Należy pamiętać, że właściwość nie odwołuje się do wszystkich typów stref; odwołuje się tylko stref, które pochodzą z <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> klasy, w tym <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefy.  
  
 Kolekcja odwołuje się właściwość jest tylko do odczytu, można użyć go do dostępu do poszczególnych obiektów w kolekcji i pracować z nimi programistycznie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> właściwości programowo dostęp osoby <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy kontrolki. Zwróć uwagę, w znaczniku deklaratywne dla strony sieci Web, czy dwa `<asp:webpartzone>` elementów zawierających kontrolki serwera. W `<script>` części strony, używa kod <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> właściwość, aby dostęp do poszczególnych stref, listę wszystkich stref identyfikatory, a następnie zmienić kolor tła w drugiej strefie.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Zones#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/CS/wpmgrzonescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Zones#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/VB/wpmgrzonesvb.aspx#1)]  
  
 Należy pamiętać, że dla przykładu kodu do pracy, należy dodać ustawienie w pliku Web.config, aby włączyć eksportowanie plików opisu części sieci Web. Upewnij się, że plik Web.config w tym samym katalogu co strona sieci Web, w tym przykładzie kodu. W ramach `<system.web>` sekcji, upewnij się, że istnieje `<webParts>` element z `enableExport` ustawić atrybutu `true`w następujących znaczników.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Po załadowaniu strony do przeglądarki, jeśli klikniesz przycisk **listy identyfikatorów strefy** przycisku w kodzie użyto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> właściwości, aby wyświetlić listę identyfikatorów wszystkich stref w kolekcji. Jeśli klikniesz przycisk **zmiany strefy BackColor** przycisku, kod zmienia kolor tła drugi strefy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>