<Type Name="WebPartManager" FullName="System.Web.UI.WebControls.WebParts.WebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="301f51907edb77824b519dd87d773b1e3f2e9f22" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69394221" /></Metadata><TypeSignature Language="C#" Value="public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartManager extends System.Web.UI.Control implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartManager&#xA;Inherits Control&#xA;Implements INamingContainer, IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartManager : System::Web::UI::Control, System::Web::UI::INamingContainer, System::Web::UI::WebControls::WebParts::IPersonalizable" />
  <TypeSignature Language="F#" Value="type WebPartManager = class&#xA;    inherit Control&#xA;    interface INamingContainer&#xA;    interface IPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IPersonalizable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ViewStateModeById</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Służy jako centralna Klasa zestawu kontrolek składniki Web Part, zarządzanie wszystkimi kontrolkami składniki Web Part, funkcjami i zdarzeniami, które występują na stronie sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrolka działa jako centrum lub centra kontroli aplikacji składniki Web Part. Na każdej stronie, która używa kontrolek składniki Web Part, musi<xref:System.Web.UI.WebControls.WebParts.WebPartManager> istnieć jedno-i tylko jedno wystąpienie kontrolki. Podobnie jak w przypadku większości aspektów aplikacji składniki Web Part <xref:System.Web.UI.WebControls.WebParts.WebPartManager> , formant działa tylko z użytkownikami uwierzytelnionymi. Ponadto jego funkcja działa niemal całkowicie z kontrolkami serwera, które znajdują się w obszarze składniki Web Part strefy, <xref:System.Web.UI.WebControls.WebParts.WebZone> które dziedziczą z klasy. Formanty serwera, które znajdują się na stronie poza tymi strefami, mogą mieć bardzo mało składniki Web Part funkcje lub interakcje z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolką.  
  
 Jako centrum funkcji składniki Web Part na stronie <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant wykonuje rodzaje zadań opisane w poniższej tabeli.  
  
|Kategoria zadania|Co robi formant|  
|-------------------|---------------------------|  
|Śledzenie formantów składniki Web Part|Śledzi wiele różnych rodzajów formantów na stronie, która zapewnia składniki Web Part funkcje, w tym <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, połączenia, strefy i inne.|  
|Dodawanie i usuwanie formantów składniki Web Part|Zapewnia metody dodawania, usuwania i zamykania <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów na stronie.|  
|Administrowanie połączeniami|Tworzy połączenia między kontrolkami i monitoruje połączenia oraz procesy dodawania i usuwania ich.|  
|Personalizowanie formantów i stron|Umożliwia użytkownikom przenoszenie formantów do różnych lokalizacji na stronie i uruchamianie widoków, w których użytkownicy mogą edytować wygląd, właściwości i zachowanie formantów. Obsługuje ustawienia personalizacji specyficzne dla użytkownika na każdej stronie.|  
|Przełączanie między różnymi widokami stron|Przełącza stronę między różnymi wyspecjalizowanymi widokami strony, dzięki czemu użytkownicy mogą wykonywać określone zadania, takie jak zmienianie układu strony lub kontrolek edycji.|  
|Podnoszenie poziomu składniki Web Part zdarzenia cyklu życia|Definiuje, podnosi i umożliwia deweloperom obsługę zdarzeń cyklu życia formantów składniki Web Part, takich jak podczas dodawania, przenoszenia, łączenia lub usuwania kontrolek.|  
|Włączanie importowania i eksportowania kontrolek|Eksportuje strumienie XML zawierające stan właściwości <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek i umożliwia użytkownikom Importowanie plików dla wygody personalizowania złożonych formantów na innych stronach lub w innych witrynach.|  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasa ma duży zestaw właściwości. Spójne z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> rolą śledzenia innych kontrolek, ma wiele właściwości, które odwołują się do kolekcji formantów składniki Web Part lub innych specjalnych obiektów składniki Web Part. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>Właściwości, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> ,<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, ,,<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, i sąkolekcjami<xref:System.Web.UI.WebControls.WebParts.WebPartManager> używanymi przez formant do śledzenia i innych <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> zadania zarządzania.  
  
 Inna grupa właściwości zawiera dostosowywalne ostrzeżenia, które są stosowane w niektórych scenariuszach występujących w aplikacji składniki Web Part. Są to między <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>innymi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> właściwości <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>, i.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasa zastępuje niektóre z podstawowych właściwości dziedziczonych, które są używane przez wiele kontrolek serwera sieci Web. Należą do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>nich właściwości <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> .  
  
 Na koniec istnieje grupa właściwości przydatna do uzyskiwania dostępu do bieżącego stanu aplikacji. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> Właściwość wskazuje bieżący tryb wyświetlania, w którym znajduje się Strona. Właściwość <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> wskazuje, czy kontrolka może renderować skrypt po stronie klienta, która jest istotna w sytuacjach, w których użytkownicy mogą mieć przeglądarki z różnymi możliwościami lub z wyłączonymi skryptami. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Właściwość jest przydatna do odwoływania się do klasy narzędzi, która zawiera wywołania wielu ważnych metod składniki Web Part, które są używane dla przypadków rozszerzalności. Ukrywając wywołania tych metod w oddzielnym klasie ( <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> klasy) <xref:System.Web.UI.WebControls.WebParts.WebPartManager> , interfejs API interfejsu klasy jest uproszczony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Właściwość zapewnia dostęp do obiektów personalizacji, które przechowują ustawienia personalizacji użytkowników i utrzymują te dane w magazynie trwałym. Właściwość wskazuje, która <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka na stronie jest aktualnie zaznaczona przez użytkownika lub aplikację. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Właściwość <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> wskazuje, czy niestandardowe dane <xref:System.Web.UI.WebControls.WebParts.WebPart> personalizacji kontrolki zostały zmienione.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrolka zawiera pięć wbudowanych trybów wyświetlania lub widoków strony sieci Web. Deweloperzy mogą rozszerzyć tę funkcję, tworząc niestandardowe tryby wyświetlania, rozszerzając typy takie jak <xref:System.Web.UI.WebControls.WebParts.WebZone> Klasa <xref:System.Web.UI.WebControls.WebParts.ToolZone> lub Klasa. Użytkownicy mogą przełączać stronę do różnych trybów wyświetlania, pod warunkiem, że na stronie znajduje się odpowiedni rodzaj kontrolek odpowiadających podanemu trybowi wyświetlania.  
  
> [!NOTE]
>  Można ją rozwinąć, aby użytkownicy mogli przełączać się do niestandardowego trybu wyświetlania bez posiadania odpowiedniej strefy na stronie. Jednak domyślne zachowanie polega na tym, że tryby wyświetlania odpowiadają strefom.  
  
 Standardowe tryby wyświetlania są reprezentowane przez pola publiczne w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasie. W poniższej tabeli zestawiono pola i tryby wyświetlania, do których się odwołują. Bieżący tryb wyświetlania strony, jak wspomniano powyżej, jest zawsze przywoływany we <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwości i zestaw trybów wyświetlania, które są możliwe na określonej stronie, z uwzględnieniem rodzaju stref, które znajdują się na stronie, są zawarte <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> we właściwości.  
  
|Pole|Szczegóły trybu wyświetlania|  
|-----------|--------------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|Normalny widok użytkownika strony sieci Web; domyślny i najbardziej typowy tryb wyświetlania.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|Widok, w którym użytkownicy mogą zmieniać rozmieszczenie lub usuwać kontrolki w celu zmiany układu strony.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|Widok, w którym widoczny jest Edytor interfejsu użytkownika (UI). Użytkownicy mogą edytować wygląd, właściwości i zachowanie formantów, które są widoczne w normalnym trybie przeglądania.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|Widok, w którym widoczny jest interfejs użytkownika katalogu; Użytkownicy mogą dodawać kontrolki do strony z wykazów dostępnych kontrolek.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|Widok, w którym jest widoczny interfejs użytkownika połączenia; Użytkownicy mogą łączyć i rozłączać połączenia między kontrolkami, zarządzać nimi.|  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrolka zawiera również szereg zdarzeń, które są ważne w cyklu życia składniki Web Part stron i kontrolek. Te zdarzenia zapewniają precyzyjną kontrolę programistyczną nad zachowaniem formantów składniki Web Part. Większość metod odnosi się <xref:System.Web.UI.WebControls.WebParts.WebPart> bezpośrednio do kontrolek (lub innych kontrolek serwera lub użytkownika <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> umieszczonych w strefach, tak <xref:System.Web.UI.WebControls.WebParts.WebPart> aby mogły one zachowywać się jako kontrolki). Jednak niektóre zdarzenia dotyczą stanu strony lub połączeń na stronie. W poniższej tabeli wymieniono dostępne zdarzenia i podsumowano ich cele.  
  
> [!NOTE]
>  We wszystkich przypadkach w poniższej tabeli wyraz "kontrolka" odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki lub dowolnego formantu serwera, który znajduje się w strefie i jest opakowany <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> z obiektem w czasie wykonywania.  
  
|Zdarzenie|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>|Występuje tuż przed dodaniem formantu do strony, aby sprawdzić, czy jest on autoryzowany.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>|Występuje po aktywowaniu wszystkich połączeń na stronie.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>|Występuje tuż przed procesem aktywacji wszystkich połączeń na stronie.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>|Występuje po zmianie bieżącego trybu wyświetlania strony.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>|Występuje tuż przed procesem zmiany trybu wyświetlania strony.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>|Występuje po anulowaniu zaznaczenia kontrolki.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>|Występuje tuż przed procesem anulowania wyboru kontrolki.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>|Występuje po dodaniu kontrolki do strefy.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>|Występuje tuż przed procesem dodawania kontrolki do strefy.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>|Występuje po zamknięciu kontrolki (usunięto ją ze strony).|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>|Występuje tuż przed procesem zamykania kontrolki.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>|Występuje po trwałym usunięciu wystąpienia kontrolki dynamicznej (utworzonej programowo lub dodanej z wykazu).|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>|Występuje tuż przed procesem usuwania kontroli dynamicznej.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>|Występuje po przeniesieniu kontrolki w jej strefie lub do innej strefy.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>|Występuje tuż przed procesem przechodzenia formantu.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>|Występuje po nawiązaniu połączenia przez dwa kontrolki wybrane dla udziału w połączeniu.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>|Występuje tuż przed procesem łączenia dwóch kontrolek.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>|Występuje po odłączeniu dwóch połączonych kontrolek.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>|Występuje tuż przed procesem odłączania dwóch kontrolek.|  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrolka ma wiele metod zarządzania stronami składniki Web Part. Duży zestaw metod, niewymienione w tym miejscu, to metody, których nazwy przyjmują postać o*EventName*. Metody te zazwyczaj generują skojarzone zdarzenie i dostarczają zdarzenia za pomocą procedury obsługi typu <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>. Większość z tych metod może być przesłonięta przez deweloperów, którzy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> dziedziczą z klasy. Ponadto deweloperzy stron mogą udostępniać niestandardowe programy obsługi dla zdarzeń skojarzonych z tymi metodami. Na przykład w przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> zdarzenia programista może `OnWebPartAdded` dodać atrybut do `<asp:webpartmanager>` elementu w znaczniku strony sieci Web, a następnie przypisać niestandardową nazwę metody do atrybutu w celu zapewnienia obsługi niestandardowej zdarzenia. Ten atrybut odnosi się do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> metody, a ten podstawowy wzorzec obsługi zdarzeń działa w przypadku większości zdarzeń składniki Web Part i skojarzonych z nimi metod.  
  
 Ponadto <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka ma metody dotyczące zadania zarządzania <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkami (oraz kontrolek serwer lub użytkownik używany jako <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki). Metody te obejmują <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> ,,<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> ,<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>,,,, ,,<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>,,, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>i .<xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>  
  
 Inny zestaw metod jest wyspecjalizowany dla połączeń. Obejmuje to takie metody jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> ,,,,<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, ,<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>,, i .<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>  
  
 Na koniec niektóre <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metody koncentrują się na funkcjach personalizacji. Obejmują one <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.  
  
 Aby uzyskać więcej informacji na <xref:System.Web.UI.WebControls.WebParts.WebPartManager> temat innych metod, które są <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> dostępne za pomocą właściwości, <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> Zobacz dokumentację klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje deklaratywne i programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web zawierająca dwie niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, które mogą być połączone `<asp:webpartmanager>` i element.  
  
-   Plik kodu źródłowego, który zawiera dwa kontrolki niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> i niestandardowy interfejs.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Kontrolka użytkownika ma kontrolkę listy rozwijanej, która pokazuje możliwe tryby wyświetlania na stronie z uwzględnieniem formantów składniki Web Part, które znajdują się na stronie. Na stronie sieci Web tego przykładu kodu Ta kontrolka użytkownika jest zadeklarowana tuż poniżej <xref:System.Web.UI.WebControls.WebParts.WebPartManager> elementu w znaczniku strony, a w górnej części strony `Register` sieci Web znajduje się dyrektywa, która umożliwia zarejestrowanie formantu. Aby uzyskać szczegółowe informacje na temat trybów wyświetlania i Opis kodu źródłowego w tej kontrolce, [zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/DisplayModeMenuVB.ascx#6)]  
  
 Znaczniki deklaratywne dla strony sieci Web zawierają `Register` dyrektywy zarówno dla kontrolki użytkownika, jak i kontrolek niestandardowych. Istnieje element, element, który zawiera kontrolki `<asp:connectionszone>` niestandardowe i element. `<asp:webpartzone>` `<asp:webpartmanager>` Strona zawiera również kod wbudowany, który obsługuje zdarzenia związane z połączeniem dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki. efekt tego kodu można zobaczyć podczas łączenia i rozłączania kontrolek.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Trzecią częścią przykładu jest kod źródłowy dla kontrolek. Należy zauważyć, że istnieje interfejs o `IZipCode`nazwie i ten interfejs jest zaimplementowany `ZipCodeWebPart` w klasie. Ta klasa ma specjalną metodę `ProvideIZipCode` wywołania zwrotnego, która służy jako dostawca. Inny typ o nazwie `WeatherWebPart`jest również zaimplementowany przy użyciu specjalnej metody o nazwie `GetIZipCode`, która umożliwia kontrolce działanie jako odbiorca innej kontrolki.  
  
 Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. W tym przykładzie kodu przyjęto założenie, że źródło zostało skompilowane w zestawie `Register` , a dyrektywa na stronie sieci Web odwołuje się do nazwy zestawu. Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/ZipCodeComponent.vb#2)]  
  
 Po załadowaniu strony sieci Web w przeglądarce kliknij kontrolkę lista rozwijana **tryb wyświetlania** i wybierz pozycję **Połącz** , aby przełączyć stronę w tryb połączenia. Tryb połączenia używa elementu `<asp:connectionszone>` , aby umożliwić tworzenie połączeń między kontrolkami. W trybie Połącz kliknij strzałkę w dół na pasku tytułu kontrolki **Kod pocztowy** , aby uaktywnić swoje menu zlecenia, a następnie kliknij przycisk **Połącz**. Po wyświetleniu interfejsu użytkownika połączenia kliknij link **Utwórz połączenie z klientem** . Zostanie wyświetlona komórka z kontrolką listy rozwijanej. Wybierz pozycję **Kontrola pogody** na liście rozwijanej, a następnie kliknij pozycję **Połącz** , aby zakończyć połączenie dwóch kontrolek. Kliknij przycisk **Zamknij**, a następnie użyj listy rozwijanej **tryb wyświetlania** , aby powrócić do normalnego trybu przeglądania. Możesz wprowadzić kod pocztowy, a kontrolka odbiorcy zostanie zaktualizowana o wartość wprowadzaną. Ponieważ właściwość została oznaczona przy użyciu `Personalizable` atrybutu w kodzie źródłowym, ta wartość właściwości będzie trwała w ramach sesji przeglądarki, co umożliwia zapisanie wartości wprowadzonej przez użytkownika. `ZipCode` Bardziej zaawansowany formant konsumenta może przyjmować informacje o kodzie POCZTOWYm, wyszukiwać informacje o pogodzie na podstawie kodu i wyświetlać go użytkownikowi.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Kontrolka została zaprojektowana tak, aby mogła zostać rozszerzona. Ponieważ jest to centralne składniki Web Part aplikacji, gdy chcesz rozciągnąć określony typ lub kontrolę w składniki Web Part zestawu kontrolek, w wielu przypadkach należy również zwiększyć <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasę, ponieważ może ona mieć pewną właściwość lub metodę, która jest wymagana do wprowadzenia  typ niestandardowy jest używany w kontekście aplikacji składniki Web Part. Dokumentacja referencyjna składniki Web Part (zobacz <see cref="N:System.Web.UI.WebControls.WebParts" />), podczas omawiania sposobu rozbudowy typu składniki Web Part, często zawiera informacje o tym, co należy zrobić, aby <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> zwiększyć klasę, lub pokazuje, jak można ją rozciągnąć w przykładowym kodzie.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor inicjuje kilka ważnych zmiennych używanych <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przez formant. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.%23ctor%2A> Jednym przypisaniem, które bezpośrednio wpływa na wszystkie składniki Web Part strony, jest fakt, że domyślny tryb wyświetlania strony jest ustawiony<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>na tryb przeglądania ().  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateConnections">
      <MemberSignature Language="C#" Value="protected virtual void ActivateConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ActivateConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ActivateConnections ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ActivateConnections();" />
      <MemberSignature Language="F#" Value="abstract member ActivateConnections : unit -&gt; unit&#xA;override this.ActivateConnections : unit -&gt; unit" Usage="webPartManager.ActivateConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje aktywne wszystkie połączenia na stronie sieci Web, która jest obecnie nieaktywna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana dla każdego żądania na stronie w celu aktywowania istniejących połączeń między <xref:System.Web.UI.WebControls.WebParts.WebPart> programem a innymi kontrolkami serwera znajdującymi się w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefach. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> W niektórych przypadkach, na przykład w przypadku wystąpienia konfliktu dla aktywowanych połączeń, ta metoda z kolei wywołuje metodę, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> aby zakończyć problematyczne połączenie. Podczas procesu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> rozłączania zdarzenie jest zgłaszane. Zwykle deweloperzy mogą anulować to zdarzenie, ale w przypadku, gdy jest to konflikt między połączeniami, których nie można anulować, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka musi rozwiązać konflikt, aby zakończyć proces aktywowania połączeń. Aby uzyskać szczegółowe informacje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> , zobacz zdarzenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPart AddWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPart ^ AddWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="member this.AddWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.AddWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (Lub kontrolka serwer lub użytkownik), która ma zostać dodana do strony sieci Web lub otwarta na stronie.</param>
        <param name="zone">, Który <paramref name="webPart" />jestdodawanydo. <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /></param>
        <param name="zoneIndex">Liczba całkowita reprezentująca pozycję <paramref name="webPart" /> porządkową w programie <paramref name="zone" />względem innych kontrolek w <paramref name="zone" />.</param>
        <summary>Zapewnia standardową metodę programistyczną służącą do dodawania <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantów do strony sieci Web.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Kontrolka, która została dodana do strony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana zarówno do dodawania nowych formantów dynamicznych <xref:System.Web.UI.WebControls.WebParts.WebPart> do strony, jak i ponownego otwierania formantów statycznych lub dynamicznych, które zostały wcześniej zamknięte na stronie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> Gdy metoda jest wywoływana w celu dodania nowej kontrolki, w `webPart` rzeczywistości tworzy kopię kontrolki, do której odwołuje się parametr. Dla kopii kontrolki jest generowany nowy identyfikator, dlatego deweloperzy powinny odwoływać się <xref:System.Web.UI.WebControls.WebParts.WebPart> do formantu zwróconego z metody w celu uzyskania nowej wartości identyfikatora. Gdy metoda jest wywoływana w celu ponownego otwarcia wcześniej zamkniętej kontrolki, zwraca bezpośrednie odwołanie do kontrolki, do której odwołuje się `webPart` parametr.  
  
> [!IMPORTANT]
>  Należy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> zawsze używać metody, a nie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=nameWithType> <xref:System.Web.UI.ControlCollection.Add%2A> metody kolekcji formantów, do których odwołuje się właściwość, w celu programistycznego dodawania <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów do strony, ponieważ przy użyciu <xref:System.Web.UI.ControlCollection.Add%2A> Metoda zgłasza wyjątek. Aby dodać kontrolkę <xref:System.Web.UI.WebControls.WebParts.WebPart> , która nie jest kontrolką (innymi słowy, formant serwera, który będzie zawijany <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> z kontrolką w czasie wykonywania), należy najpierw wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metodę, aby <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> utworzyć kontrolkę, a następnie wywołać metodę w celu dodania formant. Aby zapoznać się z prezentacją tego podejścia, zobacz sekcję przykład.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metody, aby programowo dodać formant serwera do strony. Znacznik strony zawiera pusty `<asp:webpartzone>` element `<asp:webpartmanager>` i element. Przy pierwszym kliknięciu przycisku **Dodaj kalendarz** , kod w programie obsługi zdarzeń tworzy <xref:System.Web.UI.WebControls.Calendar> kontrolkę i dodaje ją do strefy jako <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiekt, wywołując <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> metodę.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="zone" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="zone" />nie jest zarejestrowany w kolekcji <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> stref w kontrolce.  
  
—lub— 
 <paramref name="webPart" />jest już w <paramref name="zone" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <paramref name="zoneIndex" /> jest mniejsza od zera.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeWebPart">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeWebPart As WebPartAuthorizationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventHandler ^ AuthorizeWebPart;" />
      <MemberSignature Language="F#" Value="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " Usage="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" /> gdy wywoływana jest metoda, aby określić, <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> czy można dodać kontrolkę serwera do strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie występuje za każdym razem <xref:System.Web.UI.WebControls.WebParts.WebPart> , gdy kontrolka jest dodawana do strony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Istnieje kilka typowych scenariuszy, w których można dodać formant do strony. Aby uzyskać pełny opis tych elementów, zobacz sekcję Uwagi dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody. Po dodaniu kontrolki należy sprawdzić, czy jej <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwość została ustawiona, a jeśli tak, to czy formant jest autoryzowany do dodania do strony.  
  
 Deweloperzy mogą tworzyć programy obsługi zdarzeń dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzenia, aby zapewnić filtrowanie dla kontrolek. Jeśli wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości kontrolki nie spełnia kryteriów w kodzie programu obsługi zdarzeń, formant nie zostanie dodany do strony.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania niestandardowego programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzenia, które automatycznie zastępuje domyślną <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> metodę.  
  
 Kod w `mgr1_AuthorizeWebPart` metodzie sprawdza, czy kontrolki na stronie mają odpowiednie <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> wartości właściwości ustawione na `user` i, jeśli tak, to zwraca `true`, co oznacza, że będą autoryzowane i dodawane do strony. Przyjęto założenie, że domyślne podejście polega na umożliwieniu użytkownikom wyświetlania kontrolek ze stroną w zakresie personalizacji użytkownika. Należy jednak zauważyć, że w przykładzie jeden z kontrolek ma <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> `admin`ustawioną wartość właściwości. Deweloperzy mogą umieścić ten filtr na wyspecjalizowanej kontrolce, która została zaprojektowana tylko dla użytkowników administracyjnych do wyświetlenia. Ta kontrolka nie będzie w trakcie sprawdzania autoryzacji <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> w trakcie tego zdarzenia i nie zostanie wyświetlona. Należy zauważyć, że formanty, które nie mają ustawionej właściwości, są również wyświetlane; przyjęto, że nie należy do scenariusza filtrowania, ponieważ ich <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości nie są ustawione.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AvailableTransformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableTransformers As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ AvailableTransformers { System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableTransformers : System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> obiektów, które są dostępne do użycia podczas tworzenia połączeń składniki Web Part między kontrolkami serwera.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" /> , który zawiera <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> zestaw obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość używa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> metody do utworzenia kolekcji. Domyślnie odczytuje dostępne Transformatory z pliku konfiguracyjnego aplikacji.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Omówienie połączeń składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartConnecting(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartConnecting(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartConnecting webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Formant, dla którego jest tworzone połączenie.</param>
        <summary>Uruchamia proces łączenia dwóch <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> Metoda istnieje, tak aby proces tworzenia połączeń między kontrolkami można było wykonywać w różnych etapach, zapewniając deweloperom większą kontrolę nad procesem połączenia. Metoda wykonuje zestaw testów wstępnych, aby upewnić się `webPart` , że jest w stanie, w którym połączenie może być słusznie sformułowane. Jeśli `webPart` program przekaże wszystkie sprawdzenia, zostanie on następnie ustawiony jako aktualnie wybrany formant ( <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Zobacz Właściwość), a proces łączenia można kontynuować.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Bieżący tryb wyświetlania na stronie nie <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />jest.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" />jest zamknięty.  
  
—lub— 
 <paramref name="webPart" />nie jest częścią <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> kolekcji.  
  
oraz 
 <paramref name="webPart" />jest równa <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> kontrolce.</exception>
        <block subset="none" type="overrides"><para>Deweloperzy, którzy muszą zwiększyć kontrolę <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> , mogą chcieć zastąpić tę metodę w klasie pochodnej. Jednym z metod jest wywołanie metody bazowej, a następnie dodanie dodatkowej obsługi niestandardowej. Możesz też chcieć całkowicie dostosować proces uruchamiania połączenia między kontrolkami. Na przykład możesz chcieć sprawdzić, czy niektóre dane są dostępne przed utworzeniem połączenia.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartEditing(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartEditing(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartEditing webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Kontrolka, która ma być edytowana.</param>
        <summary>Uruchamia proces edycji <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Metoda istnieje, tak aby proces edycji kontrolek można było wykonać w różnych etapach, zapewniając deweloperom większą kontrolę nad procesem. Metoda wykonuje zestaw testów wstępnych, aby upewnić się `webPart` , że jest w stanie, w którym można go edytować. Jeśli `webPart` program przekaże wszystkie sprawdzenia, zostanie on następnie ustawiony jako aktualnie wybrany formant ( <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Zobacz Właściwość), a proces edytowania może być kontynuowany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Bieżący tryb wyświetlania na stronie nie <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />jest.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" />jest zamknięty.  
  
—lub— 
 <paramref name="webPart" />nie jest częścią <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> kolekcji.  
  
oraz 
 <paramref name="webPart" />jest równa <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> kontrolce.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrowseDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ BrowseDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable BrowseDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje domyślny tryb wyświetlania stron, które zawierają kontrolki składniki Web Part. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pole odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiektu niestandardowego, który został <xref:System.Web.UI.WebControls.WebParts.WebPartManager> utworzony i zawarty w kontrolce. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Ponieważ jest to obiekt statyczny, można odwołać się do niego bezpośrednio za <xref:System.Web.UI.WebControls.WebParts.WebPartManager> pomocą klasy bez wystąpienia formantu.  
  
 Gdy strona, która zawiera składniki Web Part kontroluje pierwszy, jest domyślnie w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (tryb przeglądania). Gdy użytkownicy będą po prostu przeglądać w taki sposób, jak w przypadku normalnej strony sieci Web, Strona pozostaje w trybie przeglądania. Jeśli użytkownicy chcą personalizować układ strony, kontrolki, wygląd lub zachowanie, muszą przełączyć stronę do jednego z wyspecjalizowanych trybów wyświetlania dostępnych za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> jak używać pola programowo. Kod wypełnia listę rozwijaną z obsługiwanymi trybami wyświetlania, które w tym przypadku są przeglądaniem i projektowaniem. Zwróć uwagę, że w `Page_PreRender` metodzie kod sprawdza, czy bieżąca <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>. Jeśli tak, `Label1` będzie widoczny, a jeśli nie, `Label1` zostanie ukryty.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/CS/wpmgrBrowseDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/VB/wpmgrBrowseDisplayModevb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce jest domyślnie w trybie przeglądania. Zwróć uwagę na etykietę na stronie, która wskazuje, że jesteś w trybie przeglądania. Użyj kontrolki lista rozwijana, aby przełączyć stronę do trybu projektowania. Zwróć uwagę, że ze względu na kod `Page_PreRender` w metodzie etykieta jest teraz ukryta.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Tryby wyświetlania strony składniki Web Part</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Sprawdza kontrolki, które będą uczestniczyły w połączeniu, aby określić, czy mogą być połączone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda służy do określenia, czy można połączyć <xref:System.Web.UI.WebControls.WebParts.WebPart> dwie kontrolki. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> Metoda jest zwykle używana jako sprawdzanie warunkowe przed wywołaniem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> metody.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> Metoda sprawdza kilka kryteriów, które muszą zostać spełnione, zanim dwie kontrolki będą mogły utworzyć połączenie. Poniższa lista podsumowuje podstawowe kryteria służące do nawiązywania połączenia. Jeśli wszystkie te kryteria (plus niektóre dodatkowe warunki wewnętrzne) są spełnione, metoda zwraca `true`, co oznacza, że kontrolki mogą być połączone:  
  
-   Dostawcy i kontrolki odbiorców nie mogą `null`być i muszą znajdować się w kolekcji formantów przywoływanych <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> przez właściwość.  
  
-   Dostawca i odbiorca nie mogą być tym samym formantem. Innymi słowy, <xref:System.Web.UI.WebControls.WebParts.WebPart> formant nie może połączyć się z samym sobą.  
  
-   Obiekty (punkty połączenia) dla dostawcy i konsumenta nie mogą być `null`. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>  
  
-   Nie można zamknąć dostawcy i konsumenta (nie <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> `true`można określić właściwości kontrolki).  
  
-   <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Właściwość kontrolki punkt połączenia musi być zgodna z typem kontrolki zarówno odbiorcy, jak i dostawcy.  
  
-   Oba punkty połączenia muszą być włączone (ich <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metody muszą być zwracane `true`).  
  
-   Każdy punkt połączenia nie może próbować utworzyć większej liczby połączeń niż to, co jest określone we własnej <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> właściwości.  
  
-   Jeśli obiekt (Transformer) jest wymagany do nawiązania połączenia z niezgodnymi kontrolkami, nie może być `null`. <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Jeśli jednak formanty są już zgodne, transformator musi być `null`.  
  
-   W <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A> kolekcji musi być przywoływany transformator (jeśli jest używany).  
  
-   Transformator (jeśli jest używany) musi mieć interfejsy, które są zgodne z dostawcą i konsumentem, aby można było przekształcić dane między dwoma kontrolkami. Pomocnicze interfejsy odbiorcy i dostawcy muszą być również zgodne.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Kontrolka, która dostarcza dane <paramref name="consumer" /> do momentu połączenia kontrolek.</param>
        <param name="providerConnectionPoint">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> , który <paramref name="provider" /> umożliwia uczestnictwo w połączeniu.</param>
        <param name="consumer">Formant, który odbiera dane <paramref name="provider" /> , gdy formanty są połączone.</param>
        <param name="consumerConnectionPoint">Działa jako metoda wywołania zwrotnego, która <paramref name="consumer" /> może uczestniczyć w połączeniu. <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /></param>
        <summary>Sprawdza kontrolki, które będą uczestniczyły w połączeniu, aby określić, czy mogą być połączone, gdy klient i formanty dostawcy mają zgodne interfejsy <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> i obiekt nie jest wymagany. <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /></summary>
        <returns>Wartość logiczna wskazująca, <paramref name="provider" /> <paramref name="consumer" /> czy ma być połączone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana do nawiązywania `consumer` połączenia `provider` i gdy obydwie kontrolki mają zgodne <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> typy punktów połączenia, dzięki czemu obiekt nie jest wymagany. Możesz chcieć użyć tej metody, aby sprawdzić, czy można połączyć dwie kontrolki przed wywołaniem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> , aby utworzyć połączenie programowe.  
  
 To Przeciążenie używa tej samej implementacji co <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> Przeciążenie metody, z jedynym wyjątkiem, że to Przeciążenie nie wymaga transformatora.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać tej metody.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web zawierająca dwie niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, które mogą być połączone `<asp:webpartmanager>` , element i kod obsługi zdarzeń, który <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> tworzy połączenie przy użyciu metody.  
  
-   Plik kodu źródłowego, który zawiera dwa kontrolki niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> i niestandardowy interfejs.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać więcej informacji na temat trybów wyświetlania i sposobu działania kontrolki użytkownika [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Znaczniki deklaratywne dla strony sieci Web zawierają `Register` dyrektywy zarówno dla kontrolki użytkownika, jak i kontrolek niestandardowych. Istnieje element, element, który zawiera kontrolki `<asp:connectionszone>` niestandardowe i element. `<asp:webpartzone>` `<asp:webpartmanager>` Zwróć uwagę, że `Page_Load` w metodzie kod sprawdza, czy można nawiązać połączenie, a jeśli tak, definiuje dostawcę, odbiorcę i odpowiednie punkty połączenia, a następnie dodaje nowe połączenie do zestawu połączeń statycznych, do których odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>właściwość.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Trzecią częścią przykładu jest kod źródłowy dla kontrolek. Zawiera interfejs i dwie kontrolki niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> , jeden działający jako dostawca, a drugi jako odbiorca. Ponieważ mają zgodne punkty połączenia (oba z nich rozpoznają `IZipCode` interfejs), transformator nie jest wymagany do nawiązania połączenia. Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/ZipCodeComponent.vb#2)]  
  
 Po załadowaniu strony sieci Web w przeglądarce kliknij kontrolkę lista rozwijana **tryb wyświetlania** i wybierz pozycję **Połącz** , aby przełączyć stronę w tryb połączenia. Tryb połączenia używa elementu `<asp:connectionszone>` , aby umożliwić tworzenie połączeń między kontrolkami. W trybie Połącz kliknij strzałkę w dół na pasku tytułu kontrolki **Kod pocztowy** , aby uaktywnić swoje menu zlecenia, a następnie kliknij przycisk **Połącz**. Gdy zostanie wyświetlony interfejs użytkownika połączenia (UI), Zauważ, że połączenie zostało już utworzone przy użyciu kodu zawartego w `Page_Load` metodzie.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool&#xA;override this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Kontrolka, która dostarcza dane <paramref name="consumer" /> do momentu połączenia kontrolek.</param>
        <param name="providerConnectionPoint">Działa jako metoda wywołania zwrotnego, która <paramref name="provider" /> może uczestniczyć w połączeniu. <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /></param>
        <param name="consumer">Formant, który odbiera dane <paramref name="provider" /> , gdy formanty są połączone.</param>
        <param name="consumerConnectionPoint">Działa jako metoda wywołania zwrotnego, która <paramref name="consumer" /> może uczestniczyć w połączeniu. <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /></param>
        <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> , który umożliwia niezgodność <paramref name="consumer" /> <paramref name="provider" /> i połączenie.</param>
        <summary>Sprawdza kontrolki, które będą uczestniczyły w połączeniu, aby określić, czy są w stanie nawiązać połączenie, i <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> używa obiektu do utworzenia połączenia między niezgodnym klientem i dostawcą. <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /></summary>
        <returns>Wartość logiczna wskazująca, czy <paramref name="provider" /> i <paramref name="consumer" /> można utworzyć połączenie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana do nawiązywania `consumer` połączenia `provider` i gdy oba formanty mają niezgodne <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> typy punktów połączenia, aby obiekt był wymagany. Możesz chcieć użyć tej metody, aby sprawdzić, czy można połączyć dwie kontrolki przed wywołaniem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> , aby utworzyć połączenie programowe.  
  
 To Przeciążenie używa tej samej implementacji co <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29> Przeciążenie metody, z jedynym wyjątkiem, że to Przeciążenie wymaga transformatora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CatalogDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ CatalogDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable CatalogDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje tryb wyświetlania używany do dodawania kontrolek serwera z wykazu formantów do strony sieci Web. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pole odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiektu niestandardowego, który został <xref:System.Web.UI.WebControls.WebParts.WebPartManager> utworzony i zawarty w kontrolce. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> Ponieważ jest to obiekt statyczny, można odwołać się do niego bezpośrednio za <xref:System.Web.UI.WebControls.WebParts.WebPartManager> pomocą klasy bez wystąpienia formantu.  
  
 Gdy użytkownicy chcą dodawać kontrolki do strony, jeśli jest dostępny wykaz formantów serwera, może ona przełączać się na stronę <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> (tryb katalog), a zostanie wyświetlony interfejs użytkownika katalogu. Interfejs użytkownika dla wykazu składniki Web Part jest udostępniany przez <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> kontrolkę strefa. Deweloperzy mogą dodać tę strefę do strony w czasie projektowania, a następnie dodać kontrolki serwera do strefy, dzięki czemu użytkownicy będą mogli dodawać te kontrolki do stron w czasie wykonywania. Po dodaniu tych kontrolek, tryb katalogowy będzie obsługiwanym trybem wyświetlania na stronie, ponieważ niezbędne kontrolki umożliwiają włączenie trybu katalogu.  
  
 Gdy użytkownik przełącza stronę do trybu katalogowego, strefa i wszystkie kontrolki serwera, które zostały dodane do niej stają się widoczne, a użytkownik może wybrać kontrolki z wykazu do dodania do strony lub usunąć kontrolki ze strony. Po dodaniu kontrolek do strony pojawiają się one w normalnym trybie przeglądania, a strona zostanie zaktualizowana.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> jak używać pola programowo. Kod wypełnia listę rozwijaną z obsługiwanymi trybami wyświetlania strony, co w tym przypadku jest przeglądaniem, projektowaniem i katalogiem. Tryb katalogu jest dostępny ze względu na `<asp:CatalogZone>` element i jego elementy podrzędne na stronie sieci Web. Zwróć uwagę, że w `Page_PreRender` metodzie kod sprawdza, czy bieżąca <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>. Jeśli tak, `Label1` będzie widoczny, a jeśli nie, `Label1` zostanie ukryty.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/CS/wpmgrCatalogDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/VB/wpmgrCatalogDisplayModevb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce jest domyślnie w trybie przeglądania. Zwróć uwagę, że etykieta na stronie jest ukryta. Użyj kontrolki lista rozwijana, aby przełączyć stronę do trybu katalogu. Zwróć uwagę, że ze względu na kod `Page_PreRender` w metodzie etykieta jest teraz widoczna. W wykazie można wybrać formant i dodać go do jednej z dwóch stref na stronie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Tryby wyświetlania strony składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="CheckRenderClientScript">
      <MemberSignature Language="C#" Value="protected virtual bool CheckRenderClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckRenderClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CheckRenderClientScript () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckRenderClientScript();" />
      <MemberSignature Language="F#" Value="abstract member CheckRenderClientScript : unit -&gt; bool&#xA;override this.CheckRenderClientScript : unit -&gt; bool" Usage="webPartManager.CheckRenderClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza możliwości przeglądarki, wysyłając żądanie, i wartość <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" /> właściwości, aby określić, czy skrypt klienta ma być renderowany.</summary>
        <returns>Wartość logiczna wskazująca, czy ma być renderowany skrypt klienta.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CloseProviderWarning">
      <MemberSignature Language="C#" Value="public virtual string CloseProviderWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseProviderWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CloseProviderWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseProviderWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CloseProviderWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ostrzeżenie, które jest wyświetlane, gdy użytkownik zamknie formant, który działa jako dostawca innych kontrolek w połączeniu.</summary>
        <value>Ciąg, który zawiera komunikat ostrzegawczy. Wartość domyślna to komunikat specyficzny dla kultury dostarczany przez .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy użytkownik zamknie <xref:System.Web.UI.WebControls.WebParts.WebPart> formant, zazwyczaj nie jest wyświetlany żaden komunikat. Aby uzyskać więcej informacji o tym, co oznacza zamknięcie formantu, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metodę.  
  
 Jednak gdy kontrolka jest połączona z inną kontrolką i działa jako dostawca danych w innej kontrolce, zostanie wyświetlony domyślny komunikat ostrzegawczy, gdy użytkownik próbuje zamknąć formant. Komunikat informuje użytkowników, że formant dostawcy zostanie zamknięty, co oznacza, że kontrolki połączone z tym dostawcą nie będą już miały danych do użycia. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> Właściwość umożliwia deweloperom dostosowanie komunikatu ostrzegawczego wyświetlanego użytkownikowi.  
  
 Jeśli deweloper strony przypisze pustą lub null wartość ciągu do tej właściwości, nie zostanie wyświetlone okno komunikatu ostrzegawczego, gdy użytkownik zamknie <xref:System.Web.UI.WebControls.WebParts.WebPart> formant, który jest dostawcą.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> jak używać właściwości do wyświetlania niestandardowego ostrzeżenia dla użytkowników.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Plik kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki i niestandardowy interfejs.  
  
-   Strona sieci Web zawierająca dwie niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, które mogą być połączone `<asp:webpartmanager>` i element.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Poniższy kod zawiera tylko część strony sieci Web z przykładu. Potrzebna będzie również niestandardowa kontrolka użytkownika i kod źródłowy dla kontrolek niestandardowych wymienionych powyżej. Uzyskaj te dwa elementy z przykładowej sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy.  
  
 Poniższy kod strony sieci Web pokazuje, jak przypisać niestandardowy komunikat ostrzegawczy do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> właściwości w znacznikach deklaratywnych `<asp:webpartmanager>` w elemencie.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Po załadowaniu strony sieci Web w przeglądarce kliknij kontrolkę lista rozwijana **tryb wyświetlania** i wybierz pozycję **Połącz** , aby przełączyć stronę w tryb połączenia. Tryb połączenia używa elementu `<asp:connectionszone>` , aby umożliwić tworzenie połączeń między kontrolkami. W trybie Połącz kliknij strzałkę w dół na pasku tytułu kontrolki **Kod pocztowy** , aby uaktywnić swoje menu zlecenia, a następnie kliknij przycisk **Połącz**. Po pojawieniu się interfejsu użytkownika połączenia (UI) kliknij link **Utwórz połączenie z klientem** . Zostanie wyświetlona komórka z kontrolką listy rozwijanej. Wybierz pozycję **Kontrola pogody** na liście rozwijanej, a następnie kliknij pozycję **Połącz** , aby zakończyć połączenie dwóch kontrolek. Kliknij przycisk **Zamknij**, a następnie użyj listy rozwijanej **tryb wyświetlania** , aby powrócić do normalnego trybu przeglądania. Na koniec kliknij menu czasowniki dla kontrolki **Kod pocztowy** (który jest w tym przypadku kontrolką dostawcy) i wybierz pozycję **Zamknij**. Zostanie wyświetlona wiadomość niestandardowa, która została przypisana do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CloseWebPart">
      <MemberSignature Language="C#" Value="public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.CloseWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.CloseWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Lub kontrolka serwera, która jest zamykana <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />w. <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /></param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Zamyka formant w taki sposób, że nie jest renderowany na stronie sieci Web, ale można go otworzyć ponownie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPart> usuwa lub inny formant serwera, tak aby nie był renderowany na stronie sieci Web, która pierwotnie ją zawierała. Zamknięty formant jest dodawany do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> obiektu, który zachowuje odwołanie do zamkniętej kontrolki i umożliwia przywrócenie formantu na stronie. Zamknięty <xref:System.Web.UI.WebControls.WebParts.WebPart> formant nadal pojawia się w kolekcji, do której odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwość.  
  
 Zamknięcie formantu różni się od jego usunięcia. Zamknięte kontrolki nadal są dostępne do przywrócenia na stronę, ale usunięte wystąpienie kontrolki zostanie trwale usunięte i nie można go przywrócić. Bez względu na <xref:System.Web.UI.WebControls.WebParts.WebPart> to, czy kontrolka lub serwer jest statyczny (zadeklarowany w znaczniku strony) czy dynamiczny (dodany do strony programowo lub przez użytkownika z katalogu składniki Web Part), można go zamknąć i ponownie otworzyć na stronie.  
  
 Zwykle użytkownicy mogą zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkę, klikając jej menu zleceń i wybierając czasownik zamknięcia. Formant może być również zamykany przez bezpośrednie wywołanie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metody i przekazanie jej do `webPart`odwołania.  
  
 Na stronie, na <xref:System.Web.UI.WebControls.WebParts.WebPart> której formanty zostały zamknięte, jeśli deweloper `<asp:catalogzone>` deklaruje element, `<asp:pagecatalogpart>` a w ramach tego dodaje element, udostępnia prosty interfejs użytkownika, który umożliwia użytkownikom Przywracanie zamkniętych kontrolek na stronie w czasie wykonywania. Użytkownicy mogą przełączać stronę do trybu wyświetlania wykazu, a zamknięte kontrolki będą widoczne w katalogu stron. Użytkownicy mogą wybierać zamknięte kontrolki i dodawać je z powrotem do strony w dowolnym miejscu, a następnie wybrane kontrolki są przywracane na stronę i renderowane jako normalne.  
  
 Gdy metoda jest wywoływana, wywołuje kilka zdarzeń: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> (jeśli istnieje wiele kontrolek) i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> (jeśli istnieją połączone kontrolki). <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> Zwykle deweloperzy mogą anulować te zdarzenia, ale w niektórych przypadkach nie można ich anulować. Aby uzyskać szczegółowe informacje, zobacz dokumentację <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>dotyczącą <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>zdarzeń, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> i.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> metody.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania strony.  
  
-   Kontrolka <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardowa.  
  
-   Strona sieci Web.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać więcej informacji na temat trybów wyświetlania i sposobu działania kontrolki użytkownika [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Drugą częścią przykładu kodu jest kontrolka niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPart> . Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. W tym przykładzie jest stosowane podejście do kompilacji dynamicznej; w tym celu w `Assembly` dyrektywieniemaatrybutudlatejkontrolkiwgórnejczęścistronysieciWeb.`Register` Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/textdisplaywebpart.vb#3)]  
  
 Trzecią częścią przykładu kodu jest strona sieci Web. Strona zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefę `<asp:pagecatalogpart>` z zadeklarowanym elementem w tym elemencie. To co spowoduje wyświetlenie zamkniętej <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki i umożliwi użytkownikom dodanie jej z powrotem do strony. Metoda bezpośrednio wywołuje metodę, aby zamknąć kontrolkę niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPart> , chociaż użytkownik może również zamknąć kontrolkę za pomocą menu zlecenia. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> `Button1_Click`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/closeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/closeWebPartVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce Zamknij kontrolkę niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPart> , klikając menu czasowniki (symbol strzałki) w nagłówku kontrolki, a następnie klikając przycisk **Zamknij**. Teraz Zmień stronę w tryb katalogu, wybierając pozycję **katalog** w kontrolce listy rozwijanej **tryb wyświetlania** . Wykaz stron zostanie wyświetlony z zamkniętą kontrolką. Zaznacz pole wyboru obok zamkniętej kontrolki, kliknij przycisk **Dodaj** , aby dodać ją do strony, a następnie kliknij przycisk **Zamknij** , aby przywrócić tryb przeglądania. Kontrolka zostanie przywrócona na stronie. Teraz Zamknij ten czas, klikając przycisk **Zamknij składnik WebPart** .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" />nie znajduje się w <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> kolekcji.  
  
—lub— 
 <paramref name="webPart" />jest współdzielonym formantem i został już zamknięty przez innego użytkownika.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConnectDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ ConnectDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConnectDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje tryb wyświetlania używany do wyświetlania specjalnego interfejsu użytkownika dla użytkowników w celu zarządzania połączeniami między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolkami. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pole odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiektu niestandardowego, który został <xref:System.Web.UI.WebControls.WebParts.WebPartManager> utworzony i zawarty w kontrolce. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Ponieważ jest to obiekt statyczny, można odwołać się do niego bezpośrednio za <xref:System.Web.UI.WebControls.WebParts.WebPartManager> pomocą klasy bez wystąpienia formantu.  
  
 Gdy użytkownicy chcą zarządzać połączeniami między <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkami na stronie sieci Web, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> Jeśli strefa została zadeklarowana na stronie, może <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> przełączać stronę do trybu. Tryb wyświetlania połączenia Wyświetla specjalny interfejs użytkownika do zarządzania połączeniami, w tym możliwość łączenia lub rozłączania kontrolek oraz edytowania szczegółów istniejących połączeń.  
  
 Jeśli chcesz zapewnić użytkownikom możliwość zarządzania połączeniami przy użyciu interfejsu użytkownika dostarczonego przez zestaw kontrolny składniki Web Part, musisz zadeklarować `<asp:connectionszone>` element w znaczniku strony. W przeciwieństwie do elementów dla innych typów <xref:System.Web.UI.WebControls.WebParts.WebZone> stref, nie trzeba dodawać żadnych innych tagów w tym elemencie. po prostu Zadeklaruj element osobno.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> trybu.  
  
 Przykład kodu ma trzy części:  
  
-   Plik źródłowy, który zawiera interfejs i kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardowe, które mogą tworzyć połączenie.  
  
-   Strona sieci Web, która udostępnia interfejs użytkownika połączenia i pokazuje pracę z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> trybem.  
  
-   Wyjaśnienie, jak uruchomić przykład.  
  
 Pierwsza część przykładu kodu jest plikiem źródłowym zawierającym interfejs i dwie niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, które zostały zaprojektowane tak, aby mogły być połączone. Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Ten przykład kodu używa podejścia do kompilacji dynamicznej. Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ZipCodeComponent.vb#2)]  
  
 Druga częścią przykładu jest strona sieci Web, która hostuje kontrolki niestandardowe. W ramach tagów `<script>` serwera na stronie są kilka metod, które wypełniają listę rozwijaną z trybami wyświetlania dostępnymi na stronie. Użytkownik może wybrać je z listy rozwijanej, aby zmienić tryb wyświetlania strony. Jednym z dostępnych trybów wyświetlania jest tryb wyświetlania połączenia, ponieważ `<asp:connectionszone>` element jest zadeklarowany w znaczniku strony. Zauważ, że ten element nie zawiera żadnych innych elementów podrzędnych; Istnieje tylko włączenie interfejsu użytkownika zarządzania połączeniami dla użytkowników.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Tryb pojawia się w tym przykładzie w dwóch miejscach. Po pierwsze, w `Page_Init` metodzie, tryb wyświetlania połączenia jest dodawany do listy rozwijanej trybów wyświetlania, ponieważ kod jest pętlą przez kolekcję, do której odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwość. Po drugie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> <xref:System.Web.UI.WebControls.Label> Metoda sprawdza bieżący tryb wyświetlania na stronie, a jeśli bieżącym trybem jest, komunikat jest wyświetlany w kontrolce. `Page_PreRender`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ConnectDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ConnectDisplayModeVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce kliknij listę rozwijaną i wybierz pozycję **Połącz** , aby przełączyć stronę do trybu wyświetlania połączenia. Zauważ, że zostanie wyświetlony komunikat z informacją, że strona jest w trybie wyświetlania Connect. Teraz kliknij menu czasowniki (symbol strzałki) na pasku tytułu jednego z <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, a następnie kliknij pozycję **Połącz** w menu zlecenia. Po wyświetleniu interfejsu użytkownika połączenia kliknij link, aby utworzyć połączenie. Użyj listy rozwijanej w wyświetlonym interfejsie użytkownika połączenia, wybierz inną kontrolkę, która będzie uczestniczyć w nawiązaniu połączenia, a następnie kliknij przycisk **Połącz** . Połączenie zostało nawiązane. Kliknij przycisk **Zamknij** , a następnie użyj listy rozwijanej w górnej części strony, aby zwrócić stronę do trybu wyświetlania przeglądania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Tryby wyświetlania strony składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ Connections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kolekcji wszystkich bieżących połączeń na stronie sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> , który zawiera <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> zestaw obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> Właściwość zapewnia sposób dostępu do bieżącego zestawu połączeń na stronie. Sama kolekcja jest tylko do odczytu, a deweloperzy, którzy chcą manipulować określonym połączeniem z kolekcji, powinni używać <xref:System.Web.UI.WebControls.WebParts.WebPartManager> metod takich jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje deklaratywne i programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web zawierająca dwie niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, które mogą być połączone `<asp:webpartmanager>` i element.  
  
-   Plik kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki i niestandardowy interfejs.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Poniższy kod zawiera tylko część strony sieci Web z przykładu. Potrzebna będzie również niestandardowa kontrolka użytkownika i kod źródłowy dla kontrolek niestandardowych wymienionych powyżej. Uzyskaj te dwa elementy z przykładowej sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przegląd klasy.  
  
 Poniższy kod strony sieci Web pokazuje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> jak używać właściwości programowo w celu uzyskania liczby bieżących połączeń na stronie. Zwróć uwagę, że `<script>` w sekcji tag kod obsługujący dwa zdarzenia <xref:System.Web.UI.WebControls.WebParts.WebPartManager> dla formantu uzyskuje dostęp <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> do właściwości w celu uzyskania liczby.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Po załadowaniu strony sieci Web w przeglądarce kliknij kontrolkę lista rozwijana **tryb wyświetlania** i wybierz pozycję **Połącz** , aby przełączyć stronę w tryb połączenia. Tryb połączenia używa elementu `<asp:connectionszone>` , aby umożliwić tworzenie połączeń między kontrolkami. W trybie Połącz kliknij strzałkę w dół na pasku tytułu kontrolki **Kod pocztowy** , aby uaktywnić swoje menu zlecenia, a następnie kliknij przycisk **Połącz**. Po wyświetleniu interfejsu użytkownika połączenia (UI) kliknij link **Utwórz połączenie z klientem** . Zostanie wyświetlona komórka z kontrolką listy rozwijanej. Wybierz pozycję **Kontrola pogody** na liście rozwijanej, a następnie kliknij pozycję **Połącz** , aby zakończyć połączenie dwóch kontrolek. Kliknij przycisk **Zamknij**, a następnie użyj listy rozwijanej **tryb wyświetlania** , aby powrócić do normalnego trybu przeglądania. Należy zauważyć, że etykieta wyświetla teraz liczbę połączeń i liczbę <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek. Jeśli teraz powrócisz do trybu Połącz i rozłączysz dwie kontrolki, po powrocie do trybu przeglądania zawartość etykiety powinna zostać zaktualizowana i nie ma żadnych połączeń.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivated;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivated : EventHandler " Usage="member this.ConnectionsActivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wszystkie bieżące połączenia składniki Web Part na stronie nie są połączone, ale również rozpoczęły udostępnianie danych między kontrolkami konsumenta i dostawcy związanymi z każdym połączeniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W cyklu życia połączeń to zdarzenie występuje po zakończeniu procesu ładowania strony. Występuje również po <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> zdarzeniu, które wskazuje, <xref:System.Web.UI.WebControls.WebParts.WebPart> że obiekty lub formanty serwera powiązane z określonym połączeniem zostały pomyślnie połączone. W przypadku, gdy na stronie istnieje wiele połączeń, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> Metoda wskazuje, że wszystkie prawidłowe składniki Web Part połączenia na stronie są teraz aktywne i mogą udostępniać dane. Wiedząc, że wszystkie połączenia są aktywne, deweloperzy mogą wykonać dowolną liczbę zadań, w tym powiadamiać użytkowników o stanie wszystkich połączeń, a także powiadamiać kontrolki odbiorców o przetwarzaniu i wyświetlaniu danych od ich dostawców itd.  
  
 To zdarzenie jest skojarzone z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> metodą, która wywołuje zdarzenie i umożliwia deweloperom tworzenie niestandardowych programów obsługi dla zdarzenia.  
  
 Deweloperzy stron mogą utworzyć niestandardową procedurę obsługi dla zdarzenia przez dodanie `OnConnectionsActivated` atrybutu `<asp:webpartmanager>` do elementu na stronie, a następnie przypisanie niestandardowej nazwy metody do atrybutu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivating">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivating As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivating;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivating : EventHandler " Usage="member this.ConnectionsActivating : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu aktywacji wszystkich ustanowionych połączeń składniki Web Part na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W cyklu życia połączeń to zdarzenie występuje, gdy strona kończy proces ładowania, tuż przed <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> wywołaniem metody. Różni się od <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> zdarzenia, które obejmuje określone połączenie między <xref:System.Web.UI.WebControls.WebParts.WebPart> lub innymi kontrolkami serwera. Zdarzenie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> występuje, gdy wszystkie możliwe połączenia na stronie zostały połączone i zostanie ono aktywowane.  
  
 Zdarzenie jest skojarzone <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> z metodą, która wywołuje zdarzenie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> Kontroluj deweloperów, którzy chcą zwiększyć typ połączeń, które mogą być dodawane do strony, mogą przesłonić metodę <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> chronioną i aktywować dodatkowe typy połączeń.  
  
 Deweloperzy stron mogą utworzyć niestandardową procedurę obsługi dla zdarzenia przez dodanie `OnConnectionsActivating` atrybutu `<asp:webpartmanager>` do elementu na stronie, a następnie przypisanie niestandardowej nazwy metody do atrybutu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy połączenie między dwoma <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolkami (lub innymi kontrolkami serwera, które mogą tworzyć połączenia) znajdujących się <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> w strefie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda tworzy połączenie między dowolnymi dwoma <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkami, które mogą być połączone. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> Przed wywołaniem tej metody w celu utworzenia połączenia można również wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metodę w kontroli warunkowej, aby upewnić się, że kontrolki spełniają wymagania dotyczące tworzenia połączenia.  
  
> [!NOTE]
>  Istnieje również możliwość utworzenia połączenia między dwoma kontrolkami serwera, które nie <xref:System.Web.UI.WebControls.WebParts.WebPart> są kontrolkami. Ogólnie rzecz biorąc, dwie kontrolki muszą być niestandardowymi kontrolkami serwera (na przykład formanty dziedziczące z <xref:System.Web.UI.WebControls.WebControl> lub istniejące kontrolki serwera ASP.NET), dzięki czemu można dodać wymaganych członków. Kontrolki również muszą spełniać wymagania określone poniżej.  
  
 Każdy scenariusz połączenia między dwoma kontrolkami musi spełniać następujące wymagania, aby można było nawiązać połączenie:  
  
-   Każdy formant znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefie (nie musi to być ta sama strefa).  
  
-   Zgodnie z implementacją w zestawie kontrolnym składniki Web Part kontrola dostawcy w połączeniu implementuje interfejs jako metodę publiczną, która służy jako wywołanie zwrotne dostawcy i ma `ConnectionProvider` atrybut metadanych w metodzie, aby zidentyfikować go jako połączenie dostawcy. moment. Ponieważ metoda pobierająca punkty połączenia dostawcy jest wirtualna, kontrolka pochodna <xref:System.Web.UI.WebControls.WebParts.WebPartManager> nie musi używać tego samego atrybutu metadanych. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>  
  
-   Zgodnie z implementacją w zestawie kontrolnym składniki Web Part kontrola konsumenta w połączeniu ma również specjalną metodę, która umożliwia jej uzyskanie odwołania do interfejsu, który jest udostępniany w metodzie wywołania zwrotnego dostawcy, a odbiorca ma `ConnectionConsumer` atrybut metadanych na Metoda identyfikująca ją jako punkt połączenia z klientem. Ponieważ metoda pobierająca punkty połączenia z klientem jest wirtualna, kontrolka <xref:System.Web.UI.WebControls.WebParts.WebPartManager> pochodna nie musi używać tego samego atrybutu metadanych. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>  
  
-   Metody wywołania zwrotnego muszą być zgodne, w przypadku których konsument może używać typu interfejsu dostarczonego w metodzie wywołania zwrotnego dostawcy (oznacza to, że odbiorca i dostawca mogą udostępniać dane bezpośrednio), lub Deweloper musi użyć <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu do Przekształć dane z dostawcy na formularz, którego może używać konsument.  
  
    > [!IMPORTANT]
    >  Gdy nie potrzebujesz transformatora, użyj <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29> przeciążenia metody. Gdy potrzebujesz transformatora, użyj <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> przeciążenia metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Kontrolka, która ma rolę dostarczania danych do innej połączonej kontrolki.</param>
        <param name="providerConnectionPoint">Metoda służąca jako metoda wywołania zwrotnego dla połączenia. Zgodnie z implementacją w zestawie kontrolnym składniki Web Part jest to metoda <paramref name="provider" /> publiczna, która jest oznaczona <see langword="ConnectionProvider" /> atrybutem metadanych.</param>
        <param name="consumer">Kontrolka, która ma rolę uzyskiwania danych z <paramref name="provider" />, a następnie przetwarzania lub wyświetlania. <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /></param>
        <param name="consumerConnectionPoint">Metoda, która łączy się <paramref name="providerConnectionPoint" /> z, aby otrzymywać dane dotyczące połączenia. Zgodnie z implementacją w zestawie kontrolnym składniki Web Part jest to metoda <paramref name="consumer" /> publiczna, która jest oznaczona <see langword="ConnectionConsumer" /> atrybutem metadanych.</param>
        <summary>Tworzy połączenie między dwoma <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> kontrolkami, używając tylko odwołań do formantów i ich określonych <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> obiektów.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> , który zawiera różne informacje o dostawcy i odbiorcy wymaganym do połączenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To Przeciążenie służy do łączenia formantów, gdy ich punkty połączenia są wystarczająco zgodne, aby mogły nawiązywać połączenia bez <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> użycia obiektu. W przypadku wywołania tego przeciążenia metody po prostu przekazuje wywołanie do innej przeciążonej wersji metody i przekazuje `null` parametr, który <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> wymaga obiektu.  
  
 Przy próbie połączenia dwóch formantów programowo, można użyć <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> metody w sprawdzaniu warunkowym, aby określić, czy formanty mogą być połączone bezpośrednio.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać tej metody do programistycznego tworzenia połączenia. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykład omówienia klasy. Z tego przykładu będziesz potrzebować kodu źródłowego dla kontrolki użytkownika, która pozwala na zmianę trybów wyświetlania na stronie oraz kod źródłowy dwóch formantów niestandardowych <xref:System.Web.UI.WebControls.WebParts.WebPart> .  
  
 Poniżej znajduje się kod strony sieci Web, która obsługuje dwie kontrolki. Strona używa `Register` dyrektyw w górnej części, aby zadeklarować kontrolkę użytkownika i kontrolki niestandardowe. Kontrolki niestandardowe są następnie przywołane w sposób deklaratywny w obrębie `<asp:webpartzone>` elementu. Kod, który obsługuje `Button1_Click` metodę, tworzy połączenie między kontrolkami <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> przy użyciu metody.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce kliknij przycisk **Controls webwebpart** , aby utworzyć połączenie. Następnie możesz wprowadzić dane w polu tekstowym, a następnie kliknąć przycisk **wprowadź 5-cyfrowy kod pocztowy** , aby zademonstrować, że formanty są połączone, a dane wprowadzone w pierwszej kontrolce są aktualizowane w drugim.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kolekcja dynamicznych kolekcji kontrolki jest tylko do odczytu. <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /></exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection&#xA;override this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> , która ma rolę dostarczania danych do innej połączonej kontrolki.</param>
        <param name="providerConnectionPoint">Metoda publiczna w <paramref name="provider" /> programie, która jest oznaczona <see langword="ConnectionProvider" /> atrybutem metadanych i służy jako metoda wywołania zwrotnego dla połączenia.</param>
        <param name="consumer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> , który ma rolę uzyskiwania danych z <paramref name="provider" /> lub <paramref name="transformer" />, a następnie przetwarzanie lub wyświetlanie.</param>
        <param name="consumerConnectionPoint">Metoda publiczna w <paramref name="consumer" /> programie, która jest oznaczona <see langword="ConnectionConsumer" /> atrybutem metadanych i łączy się <paramref name="providerConnectionPoint" /> z, aby otrzymywać dane dotyczące połączenia.</param>
        <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> , który umożliwia połączenie między dwoma kontrolkami, konwertując dane <paramref name="provider" /> z do formatu, <paramref name="consumer" /> który może przetworzyć.</param>
        <summary>Tworzy połączenie między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dwoma lub <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> kontrolkami przy użyciu odwołań do kontrolek, ich <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> określonych <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> obiektów i obiektu.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> , który zawiera informacje na temat dostawcy, klienta i transformatora wymaganego do połączenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To Przeciążenie służy do łączenia formantów, gdy ich punkty połączenia są niezgodne. Niezgodność występuje, gdy `consumer` implementuje inny interfejs niż `provider` jego punkt połączenia. Transformator konwertuje dane na typ, który może być zrozumiały dla `consumer`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenia zostały już aktywowane w <see cref="E:System.Web.UI.Control.PreRender" />usłudze.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />formantów, serwerów lub użytkowników, które są zawarte w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> strefach na stronie sieci Web <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> i są zarządzane przez formant.</summary>
        <value>, Który zawiera wszystkie kontrolki zarządzane <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> przez formant. <see cref="T:System.Web.UI.ControlCollection" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie odwołuje się do innych kontrolek, do których odwołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager> się formant, takich jak różne kontrolki <xref:System.Web.UI.WebControls.WebParts.EditorPart> lub <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki strefy, i inne. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>  
  
 Ta właściwość jest używana przez zestaw kontrolek składniki Web Part i w większości sytuacji programistycznych nie jest przeznaczona do wywoływania z poziomu kodu. Z tego powodu, chociaż właściwość jest publiczna, jest ukryta przed technologią IntelliSense. Deweloperzy, którzy chcą uzyskać dostęp do kolekcji <xref:System.Web.UI.WebControls.WebParts.WebPart> lub innych kontrolek serwera zarządzanych przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant, powinni używać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> jej właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CopyWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart CopyWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ CopyWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.CopyWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Kontrolka lub serwer, <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> który ma zostać skopiowany.</param>
        <summary>Używane przez zestaw kontrolek składniki Web Part, aby utworzyć kopię <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki lub serwera na potrzeby dodawania formantu do strony sieci Web.</summary>
        <returns>Element <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> do dodania do strony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> Metody nie można wywołać bezpośrednio w kodzie. Ta metoda jest wywoływana wewnętrznie przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant w ramach procesu dodawania nowej kontrolki dynamicznej <xref:System.Web.UI.WebControls.WebParts.WebPart> lub serwera do strony. Dynamiczna kontrola jest dodawana do strony programowo lub za pośrednictwem interfejsu użytkownika składniki Web Part, na przykład przez użytkownika, który dodaje formant z wykazu formantów, w przeciwieństwie do kontrolki statycznej, która jest zadeklarowana bezpośrednio w znaczniku strony.  
  
> [!NOTE]
>  Metoda może zostać przesłonięta w klasie pochodnej, jeśli deweloperzy chcą włączyć metodę w celu obsługi dodatkowych scenariuszy kopiowania kontroli. Szczegółowe informacje znajdują się w sekcji Uwagi dotyczące dziedziczenia.  
  
 Po dodaniu nowej kontroli dynamicznej, jeśli jest to <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> , metoda zwraca nowe wystąpienie kontrolki. Jeśli dodawany formant jest innym typem formantu serwera (na przykład kontrolką użytkownika, kontrolką niestandardową lub kontrolką ASP.NET), formant zostanie już opakowany z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektem przez zestaw kontrolny składniki Web Part. Gdy metoda napotka <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formant, zwraca nowe wystąpienie <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontrolki z nowym wystąpieniem formantu podrzędnego, który jest w nim otoczony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> Gdy metoda tworzy nową kopię kontrolki, która ma zostać zwrócona, również resetuje wartości wszystkich właściwości do ich wartości domyślnych. Należy pamiętać, że jeśli chcesz zachować wartości właściwości Personalizable i skopiować je do nowego wystąpienia formantu, należy wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> metodę również. Ostatnim krokiem wykonywanym przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> metodę jest <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A> wywołanie metody w celu uzyskania nowego identyfikatora dla kontrolki.  
  
> [!NOTE]
>  Ponieważ metoda uzyskuje nowy identyfikator dla skopiowanego formantu, nie należy polegać na odwoływaniu się do kontrolki dynamicznej, która jest dodawana do strony przy użyciu jej pierwotnego identyfikatora. Zamiast tego należy odwołać się do nowego wystąpienia formantu zwróconego przez metodę.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Metoda jest zadeklarowana <see langword="virtual" /> tak, aby deweloperzy mogli dziedziczyć <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> z klasy, przesłonić metodę i zapewnić dodatkowe scenariusze, w których może utworzyć kopie kontrolek. Na przykład metoda może opcjonalnie odebrać jako wejściowy formant, który został Zserializowany do pliku XML. Metoda może deserializować kod XML (jeśli istnieje), a następnie wywołać metodę podstawową, aby obsłużyć istniejące przypadki i zwrócić nowe wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAvailableTransformers">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAvailableTransformers () As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ CreateAvailableTransformers();" />
      <MemberSignature Language="F#" Value="abstract member CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection&#xA;override this.CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="webPartManager.CreateAvailableTransformers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy zestaw transformatorów określony w pliku konfiguracji witryny sieci Web i dodaje je do kolekcji transformatorów, do których odwołuje <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" /> się właściwość.</summary>
        <returns>Kolekcja transformatorów określona w pliku konfiguracji witryny sieci Web.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Ta metoda może zostać przesłonięta w celu dodania dodatkowych transformatorów, które mogą być używane przez aplikację. Na przykład metoda może zostać zapisywana w celu pobrania listy dostępnych transformatorów z usługi sieci Web.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="webPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję wszystkich formantów, które są zarządzane przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formant na stronie sieci Web. Klasa ta nie może być dziedziczona.</summary>
        <returns>Składający się ze wszystkich różnych formantów składniki Web Part zarządzanych <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> przez formant. <see cref="T:System.Web.UI.ControlCollection" /></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Ponieważ ta metoda jest chroniona i zapieczętowana, jest widoczna dla klas, które dziedziczą <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> z klasy, ale nie można jej zastąpić.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDisplayModes">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDisplayModes () As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ CreateDisplayModes();" />
      <MemberSignature Language="F#" Value="abstract member CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&#xA;override this.CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="webPartManager.CreateDisplayModes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy zestaw wszystkich możliwych trybów wyświetlania dla aplikacji składniki Web Part.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> , który zawiera wszystkie obsługiwane tryby wyświetlania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy listę wszystkich możliwych trybów wyświetlania, a nie tylko trybów wyświetlania obsługiwanych na określonej stronie. Aby uzyskać więcej informacji na temat obsługiwanych trybów wyświetlania, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwość.  
  
 Domyślnie zestaw kontrolek składniki Web Part tworzy następujący zestaw trybów wyświetlania, które mają być używane na stronach składniki Web Part:  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>  
  
 Deweloperzy mogą tworzyć niestandardowe tryby wyświetlania, z lub bez towarzyszących stref niestandardowych, które pochodzą od <xref:System.Web.UI.WebControls.WebParts.WebZone> klas <xref:System.Web.UI.WebControls.WebParts.ToolZone> lub. Aby utworzyć niestandardowy tryb wyświetlania, należy dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> klasy i aby dodać tryb wyświetlania jako obsługiwany tryb na stronie, należy dziedziczyć <xref:System.Web.UI.WebControls.WebParts.WebPartManager> z klasy i zastąpić <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> metodę.  
  
 Po dodaniu trybów wyświetlania przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A> metody, należy dodać je w kolejności, w jakiej mają być wyświetlane w dowolnej kontrolce interfejsu użytkownika (na <xref:System.Web.UI.WebControls.ListBox> przykład kontrolce), która zapewnia użytkownikom możliwe tryby wyświetlania na stronie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> metody.  
  
 Przykład kodu ma pięć części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web, która obsługuje inne kontrolki.  
  
-   Kontrolka użytkownika, która znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefie na stronie sieci Web, i umożliwia wprowadzanie i wyświetlanie tekstu w etykiecie.  
  
-   Plik kodu źródłowego, który zawiera dwie kontrolki. Jeden jest formantem <xref:System.Web.UI.WebControls.WebParts.WebPartManager> niestandardowym, a drugi jest obiektem niestandardowym <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> , który można dodać do domyślnych trybów wyświetlania strony.  
  
-   Plik kodu źródłowego, który zawiera dwa kontrolki niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> i niestandardowy interfejs.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać więcej informacji na temat trybów wyświetlania i sposobu działania kontrolki użytkownika [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Drugą częścią przykładu jest strona sieci Web. Zawiera dwie <xref:System.Web.UI.WebControls.WebParts.WebPartZone> kontrolki, formanty użytkownika i kontrolkę niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPartManager> . Zwróć uwagę na dyrektywy w górnej części strony, aby odwołać się do kontrolek użytkownika i obszaru nazw dla skompilowanych kontrolek. `Register`  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/createDisplayModeCS.aspx#1)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/createDisplayModeVB.aspx#1)]  
  
 Trzecią częścią przykładu jest kontrolka użytkownika służąca do wprowadzania i wyświetlania tekstu. Używa <xref:System.Web.UI.WebControls.MultiView> kontrolki do tworzenia wielu widoków interfejsu użytkownika. Jeden widok jest wyświetlany z `Button1` przyciskiem, drugi bez. Zwróć uwagę, że w `OnPreRender` przesłoniętej metodzie kod sprawdza, czy strona jest aktualnie w trybie wyświetlania niestandardowego i, jeśli tak, wyświetla pierwszy widok kontrolki użytkownika, która zawiera przycisk. Jeśli strona nie jest w trybie wyświetlania niestandardowego, na przykład jeśli strona jest w trybie przeglądania lub projektowania, przycisk jest ukryty.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/TextDisplaycs.ascx#2)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/TextDisplayvb.ascx#2)]  
  
 Czwarta część przykładu jest plikiem źródłowym dla dwóch klas niestandardowych. Należy zauważyć, że <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasa niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> zastępuje metodę i że najpierw wywołuje metodę podstawową, aby dodać wszystkie domyślne tryby wyświetlania, a następnie dodaje niestandardowy tryb wyświetlania. Niestandardowa Klasa `InLineEditDisplayMode`trybu wyświetlania, po prostu <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>dziedziczy po, ustawia nazwę trybu wyświetlania w konstruktorze i przesłania liczbę właściwości podstawowych w celu ustalenia charakterystyki niestandardowego wyświetlania.  
  
 Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/CustomDisplayMode.cs#3)]
 [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/CustomDisplayMode.vb#3)]  
  
 Aby uruchomić przykład kodu, Załaduj stronę w przeglądarce. Zauważ, że strona jest obecnie w trybie przeglądania, a przycisk nie jest widoczny. Przy użyciu kontrolki lista rozwijana **tryb wyświetlania** Zmień stronę na tryb **wyświetlania wbudowanej edycji** i Zauważ, `Button1` że teraz przycisk jest widoczny w dolnej kontrolce użytkownika. Dodaj tekst, a następnie kliknij przycisk, aby zaktualizować kontrolkę. Zauważ, że wyświetlenie strony jest zwracane do trybu przeglądania, wprowadzony tekst jest teraz wyświetlany, a przycisk jest ponownie ukryty, ponieważ strona nie jest już w trybie wyświetlania niestandardowego.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Przewodnik: Zmienianie trybów wyświetlania na stronie składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicConnectionID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicConnectionID () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicConnectionID();" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicConnectionID : unit -&gt; string&#xA;override this.CreateDynamicConnectionID : unit -&gt; string" Usage="webPartManager.CreateDynamicConnectionID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera unikatową wartość służącą jako identyfikator połączenia dynamicznego.</summary>
        <returns>Ciąg, który zawiera unikatowy identyfikator połączenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> Metoda generuje wartość identyfikatora GUID i konwertuje ją na ciąg, który będzie używany jako unikatowy identyfikator połączenia. Metoda jest wywoływana za każdym razem, gdy tworzone jest połączenie dynamiczne.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy mogą zastąpić tę metodę w klasie pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> , aby zmienić implementację do generowania unikatowego identyfikatora.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicWebPartID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicWebPartID (Type webPartType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicWebPartID(class System.Type webPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicWebPartID (webPartType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicWebPartID(Type ^ webPartType);" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicWebPartID : Type -&gt; string&#xA;override this.CreateDynamicWebPartID : Type -&gt; string" Usage="webPartManager.CreateDynamicWebPartID webPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="webPartType"><see cref="T:System.Type" /> Kontrolka, dla której jest generowany identyfikator.</param>
        <summary>Generuje unikatowy identyfikator dynamicznej <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontroli.</summary>
        <returns>Ciąg, który zawiera unikatowy identyfikator kontrolki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty są dodawane do strony sieci Web, mogą być statyczne (oznacza to, że formant jest zadeklarowany w znaczniku strony) lub dynamiczny (co oznacza, że są dodawane programowo). W każdym scenariuszu, <xref:System.Web.UI.WebControls.WebParts.WebPartManager> w którym formant tworzy nowe dynamiczne kontrolki do dodania do strony, wywołuje tę metodę w celu wygenerowania unikatowego identyfikatora.  
  
 Metoda jest wirtualna, aby deweloperzy mogli ją zastąpić, jeśli chcą zapewnić niestandardową implementację do generowania identyfikatora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPartType" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateErrorWebPart (originalID As String, originalTypeName As String, originalPath As String, genericWebPartID As String, errorMessage As String) As ErrorWebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::ErrorWebPart ^ CreateErrorWebPart(System::String ^ originalID, System::String ^ originalTypeName, System::String ^ originalPath, System::String ^ genericWebPartID, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart&#xA;override this.CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart" Usage="webPartManager.CreateErrorWebPart (originalID, originalTypeName, originalPath, genericWebPartID, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ErrorWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalID" Type="System.String" />
        <Parameter Name="originalTypeName" Type="System.String" />
        <Parameter Name="originalPath" Type="System.String" />
        <Parameter Name="genericWebPartID" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalID">Ciąg, który jest IDENTYFIKATORem nieprawidłowych kontrolek. <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> Jeśli wystąpi błąd, identyfikator jest identyfikatorem formantu serwera podrzędnego.</param>
        <param name="originalTypeName">Ciąg, który jest nazwą <see cref="T:System.Type" /> kontrolki zakończonej niepowodzeniem. <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> Jeśli wystąpi błąd, nazwa typu jest typem formantu serwera podrzędnego.</param>
        <param name="originalPath">Ciąg, który zawiera ścieżkę do kontrolki użytkownika, jeśli <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> zawiera ona podrzędną kontrolkę użytkownika w razie awarii.</param>
        <param name="genericWebPartID">Ciąg, który zwraca identyfikator <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />obiektu, jeśli ten typ kontrolki dotyczył niepowodzenia do załadowania lub utworzenia formantu.</param>
        <param name="errorMessage">Ciąg, który zawiera komunikat o błędzie do wyświetlenia na stronie.</param>
        <summary>Tworzy specjalną kontrolkę, która jest wstawiana do strony i wyświetlana dla użytkowników końcowych, gdy próba załadowania lub utworzenia <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dynamicznej kontroli z jakiegoś powodu nie powiedzie się.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> Zostanie wstawiony do strony zamiast kontrolki, która nie została załadowana lub utworzona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana, gdy zestaw kontrolny składniki Web Part podejmuje próbę załadowania lub utworzenia wystąpienia kontroli <xref:System.Web.UI.WebControls.WebParts.WebPart> dynamicznej lub serwera, co z jakiegoś powodu nie powiedzie się. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> Metoda tworzy <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> obiekt, przypisuje do niego komunikat o błędzie i zwraca go. <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Formant zostanie wstawiony zamiast kontrolki, która zakończyła się niepowodzeniem, a na stronie jest wyświetlany komunikat o błędzie.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> Metody nie można wywołać bezpośrednio w kodzie. Można jednak dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy i zwiększyć metodę. Szczegółowe informacje znajdują się w sekcji Uwagi dotyczące dziedziczenia.  
  
 Użytkownicy końcowi mogą korzystać z <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> kontrolki na stronie podobnie jak w przypadku normalnej <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli. Aby usunąć komunikat o błędzie, można zamknąć formant przez kliknięcie czasownika zamykającego, w którym momencie formant zostanie dodany do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> obiektu, podobnie jak każda inna ZAMKNIĘTA kontrolka. Jeśli użytkownik końcowy usunie <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> formant, formant serwera, który nie został załadowany, również zostanie usunięty ze strony.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Aby dostosować informacje, które są zwracane w <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> formancie, można <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" /> zastąpić metodę, wywołać metodę podstawową, przypisać różne wartości do parametrów przekazana do metody bazowej, a następnie zwrócić wynikowe <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />kontrolka. Na przykład, jeśli nie chcesz, aby użytkownicy końcowi widzieli <paramref name="originalPath" /> wartość (co spowoduje wyświetlenie ścieżki katalogu wirtualnego kontrolki użytkownika), po wywołaniu metody bazowej można przekazać pusty ciąg ("") dla tego parametru.  
  
Możesz również dostosować zachowanie <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> samego formantu przez dziedziczenie z niego. Na przykład możesz chcieć zastąpić jej <see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" /> Właściwość or. <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" /></para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePersonalization">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreatePersonalization () As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ CreatePersonalization();" />
      <MemberSignature Language="F#" Value="abstract member CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization&#xA;override this.CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="webPartManager.CreatePersonalization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca obiekt personalizacji, aby zawierał dane personalizacji użytkownika dla bieżącej strony sieci Web.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> , aby można było zawierać dane personalizacji użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A> Metoda zwraca obiekt, aby zawierał ustawienia personalizacji użytkownika dla bieżącej strony i zarządzać nimi. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrolka zarządza tym obiektem.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Omówienie personalizacji składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::GenericWebPart ^ CreateWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart&#xA;override this.CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.CreateWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant serwera, który nie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> jest formantem.</param>
        <summary>Zawija formant serwera, który nie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> jest formantem <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> z obiektem, dzięki czemu formant może mieć składniki Web Part funkcje.</summary>
        <returns>To <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> zawija iumożliwiadziałaniejako<paramref name="control" /> prawdziwą kontrolę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest głównym mechanizmem do włączania kontrolek serwera, które <xref:System.Web.UI.WebControls.WebParts.WebPart> nie są kontrolkami, aby przejąć te same <xref:System.Web.UI.WebControls.WebParts.WebPart> funkcje co kontrolka, a tym samym w pełni uczestniczyć w aplikacjach składniki Web Part. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> Korzystając z tej metody, deweloperzy znacząco rozszerzają liczbę kontrolek serwera, których mogą używać w aplikacji składniki Web Part, ponieważ praktycznie każdy typ kontroli serwera — standardowe kontrolki ASP.NET, formanty użytkownika i niestandardowe kontrolki — mogą być używane.  
  
 Kontrolka używa również tej metody w dwóch innych scenariuszach do zawijania formantów serwera <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> z obiektem. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Gdy użytkownicy dodają formanty serwera do strony przy użyciu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> kontrolki, jeśli zaimportowany formant <xref:System.Web.UI.WebControls.WebParts.WebPart> nie jest formantem, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> wywoływana jest metoda. Ponadto, gdy kontrolki serwera są zadeklarowane w formacie trwałości <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> w obrębie strefy na stronie sieci Web <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> , metoda jest wywoływana dla wszystkich kontrolek, <xref:System.Web.UI.WebControls.WebParts.WebPart> które nie są kontrolkami.  
  
 Po dodaniu kontrolki serwer do strefy w sposób programistyczny typowym podejściem jest użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metody do zawijania formantu <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> z obiektem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> , a następnie wywołanie metody w celu dodania kontrolki do kolekcji wszystkich <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki na stronie, do których odwołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> się właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> metody. `Button2_Click method`W <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> , metoda jest wywoływana, aby otoczyć formantobiektemprzeddodaniemgodostrefy.<xref:System.Web.UI.WebControls.Calendar> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Tę metodę można zastąpić, aby użyć klasy pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> zamiast klasy bazowej dostarczonej z zestawem kontrolek składniki Web Part.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWarning">
      <MemberSignature Language="C#" Value="public virtual string DeleteWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowy komunikat ostrzegawczy wyświetlany użytkownikom końcowym po usunięciu kontrolki.</summary>
        <value>Ciąg, który zawiera tekst komunikatu ostrzegawczego. Wartość domyślna to zlokalizowany komunikat ostrzegawczy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy użytkownik usuwa <xref:System.Web.UI.WebControls.WebParts.WebPart> formant, zwykle jest wyświetlany domyślny komunikat ostrzegawczy. Ostrzega użytkownika o tym, że po usunięciu tego wystąpienia kontrolki usuwanie jest trwałe. Deweloperzy stron mogą zapewnić użytkownikom możliwość dodania nowego wystąpienia kontrolki do strony (na przykład za pośrednictwem wykazu <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów lub niektórych metod programistycznych), ale bieżące wystąpienie usuwanego formantu zostanie trwale usunięte. Okno dialogowe, w którym wyświetlane jest ostrzeżenie zawiera przycisk umożliwiający użytkownikowi anulowanie usuwania, jeśli jest to wymagane.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> Właściwość pozwala deweloperom ustawić komunikat ostrzegawczy wyświetlany użytkownikowi.  
  
 Jeśli deweloper strony przypisze do tej właściwości pustą wartość ciągu (""), nie zostanie wyświetlone okno dialogowe komunikatu ostrzegawczego, gdy użytkownik usunie <xref:System.Web.UI.WebControls.WebParts.WebPart> formant.  
  
> [!NOTE]
>  Właściwość nie jest wyświetlana w przypadku formantów statycznych <xref:System.Web.UI.WebControls.WebParts.WebPart> i kontrolek serwera. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> Formanty statyczne to formanty serwera, które są zadeklarowane <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> w obrębie strefy w znacznikach strony sieci Web. Ponieważ takie kontrolki są statyczne, nie można ich usunąć, więc komunikat ostrzegawczy usuwania nigdy nie jest wyświetlany w tym przypadku. Kontrolki statyczne mogą być zamykane przez użytkownika, ale zamkniętą kontrolką dodaną do wykazu stron, z której może zostać dodany z powrotem do strony przez użytkownika, podczas gdy nie można odzyskać usuniętej kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> Właściwości deklaratywnie i programowo.  
  
 Przykład kodu zawiera cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania strony.  
  
-   Kontrolka <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardowa.  
  
-   Strona sieci Web.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać więcej informacji na temat trybów wyświetlania i sposobu działania kontrolki użytkownika [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Drugą częścią przykładu kodu jest kontrolka niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPart> . Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. W tym przykładzie jest stosowane podejście do kompilacji dynamicznej; w tym celu w `Assembly` dyrektywieniemaatrybutudlatejkontrolkiwgórnejczęścistronysieciWeb.`Register` Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/textdisplaywebpart.vb#3)]  
  
 Trzecią częścią przykładu kodu jest strona sieci Web. Strona zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefę z kontrolką niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPart> zadeklarowaną w strefie, dzięki czemu użytkownik może ją dodać do strony w czasie wykonywania. Należy zauważyć, że tylko kontrolki dynamiczne (kontrolki dodawane do strony programowo lub z katalogu takiego jak ten) można usunąć ze strony. Formanty statyczne (formanty, które są zadeklarowane <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> w obrębie strefy w znaczniku strony) mogą być zamknięte, ale nigdy nie zostały usunięte. Element deklaruje wartość niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> dla właściwości przy użyciu `DeleteWarning` atrybutu. `<asp:webpartmanager>` Metoda przypisuje inną wartość niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> do właściwości. `Button1_Click`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/deleteWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/deleteWarningVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce należy dodać <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkę do strony. Przy użyciu kontrolki lista rozwijana **tryb wyświetlania** wybierz pozycję Tryb katalogu. Po wyświetleniu wykazu zaznacz pole wyboru obok kontrolki niestandardowej, kliknij przycisk **Dodaj** , aby dodać go do strony, a następnie kliknij przycisk **Zamknij** , aby przywrócić tryb przeglądania. Teraz, gdy kontrolka jest widoczna, można ją usunąć. Za pomocą kontrolki **tryb wyświetlania** ponownie Przełącz stronę do trybu projektowania (nie można usunąć kontrolek, gdy strona jest w trybie przeglądania). Kliknij menu czasowniki (symbol strzałki) w nagłówku <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, a następnie wybierz pozycję **Usuń**. Wyświetlane jest ostrzeżenie ustawione dla `DeleteWarning` atrybutu. Kliknij przycisk **anulować**. Teraz kliknij przycisk o nazwie **Zmień ostrzeżenie**o usunięciu, które zmienia wartość właściwości programowo. Z menu czasowniks (zlecenia) w kontrolce wybierz pozycję **Usuń** ponownie i zwróć uwagę na to, że wyświetlany jest komunikat ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWebPart">
      <MemberSignature Language="C#" Value="public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.DeleteWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DeleteWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Formant serwera, który ma zostać usunięty.</param>
        <summary>Trwale usuwa dynamiczne wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki ze strony sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda trwale usuwa kontrolkę reprezentowaną `webPart` przez parametr ze strony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> W przeciwieństwie do zamkniętej kontrolki, która jest <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> dodawana do kontrolki i można ją dodać z powrotem do strony, usunięte wystąpienie kontrolki nigdy nie może zostać dodane z powrotem do strony.  
  
> [!NOTE]
>  Zgodnie z implementacją składniki Web Part zestawu kontrolnego użytkownicy mogą usuwać dynamiczną <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolę, zależnie od użytkownika i zakresu personalizacji, w którym formant został dodany do strony. Jeśli formant zostanie dodany, gdy strona znajduje się w zakresie udostępnionym (przez użytkownika, który ma uprawnienia), formant nie może zostać usunięty przez poszczególnych użytkowników, gdy strona jest w zakresie użytkownika.  
  
 Można usuwać tylko kontrolki dynamiczne. Formanty dynamiczne są dodawane do strony programowo lub przez użytkowników, którzy dodają formanty z wykazu. Formanty statyczne są dodawane do strony deklaratywnie w formacie znaczników lub trwałości. Ze względu na to, że Tagi deklaracyjne są trwale obecne w znaczniku, formanty statyczne nie mogą być usuwane, ale można je zamknąć i ponownie otworzyć.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> metody. Przy pierwszym kliknięciu przycisku **Dodaj kalendarz** , kod w programie obsługi zdarzeń tworzy <xref:System.Web.UI.WebControls.Calendar> kontrolkę i dodaje ją do strefy jako <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiekt. Ponieważ formant jest dodawany programowo, jest formantem dynamicznym i w związku z tym można go usunąć. Gdy użytkownik kliknie przycisk **Usuń kalendarz** , kod sprawdza, czy formant istnieje, a następnie usuwa go przez wywołanie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> metody.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DesignDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DesignDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesignDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje tryb wyświetlania używany do zmiany układu stron sieci Web, które zawierają kontrolki składniki Web Part. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pole odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiektu niestandardowego, który został <xref:System.Web.UI.WebControls.WebParts.WebPartManager> utworzony i zawarty w kontrolce. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> Ponieważ jest to obiekt statyczny, można odwołać się do niego bezpośrednio za <xref:System.Web.UI.WebControls.WebParts.WebPartManager> pomocą klasy bez wystąpienia formantu.  
  
 Gdy strona, która zawiera składniki Web Part kontroluje pierwszy, jest domyślnie w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (tryb przeglądania). Gdy użytkownicy chcą zmienić układ strony przez przeniesienie formantów do różnych stref lub w ramach bieżących stref, muszą najpierw przełączyć stronę do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> trybu projektowania. W trybie projektowania pojawia się interfejs użytkownika dla różnych stref, a następnie użytkownicy mogą przeciągnąć kontrolki, aby zmienić układ.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> jak używać pola programowo. Kod wypełnia listę rozwijaną z obsługiwanymi trybami wyświetlania strony, co w tym przypadku jest przeglądanie i projektowanie. Zwróć uwagę, że w `Page_PreRender` metodzie kod sprawdza, czy bieżąca <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>. Jeśli tak, `Label1` będzie widoczny, a jeśli nie, `Label1` zostanie ukryty.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/CS/wpmgrDesignDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/VB/wpmgrDesignDisplayModevb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce jest domyślnie w trybie przeglądania. Zwróć uwagę, że etykieta na stronie jest ukryta. Użyj kontrolki lista rozwijana, aby przełączyć stronę do trybu projektowania. Zwróć uwagę, że ze względu na kod `Page_PreRender` w metodzie etykieta jest teraz widoczna.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Tryby wyświetlania strony składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebPart">
      <MemberSignature Language="C#" Value="protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisconnectWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DisconnectWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DisconnectWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Kontrolka, która ma zostać odłączona.</param>
        <summary>Usuwa kontrolkę <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub serwer, który jest zamykany lub usuwany z dowolnych połączeń, w których uczestniczy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Metoda jest wywoływana wewnętrznie przez zestaw kontrolek składniki Web Part, gdy kontrolka jest zamknięta na stronie lub usunięta ze strony. W takim scenariuszu Metoda jest wywoływana w celu usunięcia formantu z dowolnych połączeń, w których jest to odbiorca lub dostawca. Jeśli formant zostanie usunięty z dowolnego połączenia, Metoda ta również wywołuje metodę, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> aby zakończyć wszystkie połączenia, w których `webPart` wystąpił.  
  
 Gdy metoda jest wywoływana, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> wywołuje zdarzenie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Zwykle to zdarzenie można anulować, ale w dwóch przypadkach nie można anulować tego zdarzenia. Jeden przypadek występuje podczas żądania do strony, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> wywoływana jest metoda. Jeśli wystąpi konflikt między istniejącymi połączeniami, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Metoda zostanie wywołana w celu zamknięcia jednego z połączeń powodujących konflikty, a w tym <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> wystąpieniu nie można anulować zdarzenia, ponieważ konflikt musi zostać rozwiązany.  
  
 Drugi przypadek występuje, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka lub serwer, który jest aktualnie połączony jest zamknięty lub usunięty. W takim przypadku ze względu na to, że z powodu usunięcia formantu ze strony, jego połączenie musi zostać zakończone, dlatego przez zaprojektowanie tego <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenia nie jest możliwe, aby przerwać proces kończenia połączenia. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metody. Przy użyciu dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek niestandardowych Strona sieci Web umożliwia utworzenie połączenia między kontrolkami przez kliknięcie przycisku, a inny przycisk umożliwia rozłączenie formantów. Jeśli zamkniesz jedną z kontrolek, gdy strona jest w trybie przeglądania, a formanty są połączone, przesłonięcie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> metody odłączy zamknięty formant, zakończy połączenie i wyświetli komunikat.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika do zmiany trybów wyświetlania.  
  
-   Plik źródłowy zawierający kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardowe.  
  
-   Strona sieci Web do hostowania kontrolek.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać więcej informacji na temat trybów wyświetlania i sposobu działania kontrolki użytkownika [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Druga część to plik zawierający kod źródłowy dla dwóch kontrolek niestandardowych <xref:System.Web.UI.WebControls.WebParts.WebPart> , które zostaną połączone, oraz kontrolki niestandardowej. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. W tym przykładzie jest `Register` stosowana kompilacja dynamiczna, dlatego dyrektywa odwołująca się do tych składników na stronie sieci Web jest zadeklarowana odpowiednio w górnej części strony sieci Web. Aby zapoznać się z przewodnikiem, który demonstruje [opcje kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 W kodzie źródłowym Zwróć uwagę na Dziedziczony formant `MyWebPartManager` , który <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> zastąpi metodę. Ta metoda sprawdza każde połączenie na stronie, aby sprawdzić, czy kontrolka jest ZAMKNIĘTA, uczestniczy w połączeniu i, jeśli tak, wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodę, aby zakończyć połączenie. Jest to taka sama jak implementacja podstawowa metody w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolce. Zastąpiona metoda dostosowuje podstawową implementację, pisząc wiadomość na stronie.  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Trzecią częścią przykładu kodu jest strona sieci Web. Zwróć uwagę, że w górnej części zawiera `Register` dyrektywy umożliwiające zarejestrowanie kontrolki użytkownika i dynamicznie skompilowany zestaw <xref:System.Web.UI.WebControls.WebParts.WebPart> z kontrolkami. Strona ma dwie metody podstawowe. Metoda tworzy połączenie między kontrolkami, `Button2_Click` a metoda rozłącza formanty. `Button1_Click`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Po załadowaniu strony kliknij przycisk **Połącz** , aby połączyć formanty. Następnie kliknij menu czasowniki w jednej z kontrolek (Strzałka w dół w nagłówku kontrolki), a następnie wybierz pozycję **Zamknij** z menu zlecenia. Podczas próby zamknięcia kontrolki wywoływana jest metoda zastąpiona, połączenie zostanie zakończone, a komunikat jest zapisywana na stronie. Jeśli chcesz zresetować stronę w celu przywrócenia zamkniętej kontrolki i eksperymentowania z innymi opcjami, kliknij link **resetowania stanu użytkownika** , aby usunąć dane personalizacji i przywrócić pierwotny stan strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebParts">
      <MemberSignature Language="C#" Value="public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectWebParts(class System.Web.UI.WebControls.WebParts.WebPartConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisconnectWebParts (connection As WebPartConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisconnectWebParts(System::Web::UI::WebControls::WebParts::WebPartConnection ^ connection);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit&#xA;override this.DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit" Usage="webPartManager.DisconnectWebParts connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Web.UI.WebControls.WebParts.WebPartConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> Reprezentuje połączenie między kontrolkami serwera.</param>
        <summary>Wykonuje proces odłączania formantów serwera, które są połączone na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przeprowadza proces kończenia połączenia między <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkami lub formantami serwera, `connection` gdy przekazuje go parametr. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>  
  
 Ta metoda służy do rozłączania formantów po umieszczeniu `<asp:connectionszone>` elementu na stronie sieci Web w celu zapewnienia interfejsu użytkownika do zarządzania połączeniami. Gdy strona jest w trybie wyświetlania połączenia (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>), a obecne połączenie istnieje, użytkownicy mogą kliknąć przycisk, który <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> wywołuje metodę, aby zakończyć połączenie.  
  
 Możesz również wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metodę bezpośrednio z kodu, jeśli chcesz rozłączyć formanty programowo i bez konieczności `<asp:connectionszone>` dodawania elementu do strony.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metody. Przy użyciu dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek niestandardowych Strona sieci Web umożliwia utworzenie połączenia między kontrolkami przez kliknięcie przycisku, a inny przycisk umożliwia rozłączenie formantów.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika do zmiany trybów wyświetlania.  
  
-   Plik źródłowy zawierający kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardowe.  
  
-   Strona sieci Web do hostowania kontrolek.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać więcej informacji na temat trybów wyświetlania i sposobu działania kontrolki użytkownika [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Druga część to plik zawierający kod źródłowy dla dwóch formantów niestandardowych <xref:System.Web.UI.WebControls.WebParts.WebPart> , które zostaną połączone. Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. W tym przykładzie jest `Register` stosowana kompilacja dynamiczna, dlatego dyrektywa odwołująca się do tych składników na stronie sieci Web jest zadeklarowana odpowiednio w górnej części strony sieci Web. Aby zapoznać się z przewodnikiem, który demonstruje [opcje kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Trzecią częścią przykładu kodu jest strona sieci Web. Zwróć uwagę, że w górnej części zawiera `Register` dyrektywy umożliwiające zarejestrowanie kontrolki użytkownika i zestawu dynamicznego skompilowanego <xref:System.Web.UI.WebControls.WebParts.WebPart> za pomocą kontrolek. Strona ma dwie metody podstawowe. Metoda tworzy połączenie między kontrolkami, `Button2_Click` a metoda rozłącza formanty. `Button1_Click`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Po załadowaniu strony możesz kliknąć przycisk **Połącz** , aby połączyć formanty. Jeśli wprowadzisz tekst w kontrolce pole tekstowe, a następnie klikniesz przycisk **Enter** , tekst będzie wyświetlany w połączonej kontrolce (nie będzie wyświetlany, jeśli formanty zostały odłączone). Kliknięcie przycisku Rozłącz **** spowoduje odłączenie kontrolek. Stan połączenia formantów można sprawdzić za pomocą kontrolki listy rozwijanej **tryb wyświetlania** , aby przełączyć stronę do trybu **połączenia** . Po wykonaniu tej czynności kliknij menu czasowniki (reprezentowane przez strzałkę) na pasku tytułu jednej z formantów i wybierz pozycję **Połącz** element. Zostanie wyświetlony interfejs użytkownika połączenia; jest on dostępny, ponieważ na stronie `<asp:connectionszone>` jest zadeklarowany element. Możesz również łączyć i rozłączać formanty z tego interfejsu użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connection" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="connection" />nie jest zawarty w <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> ani. <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /></exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />jest tylko do odczytu.  
  
—lub— 
 <paramref name="connection" />został już odłączony od <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />.  
  
—lub— 
 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />jest tylko do odczytu.  
  
—lub— 
 <paramref name="connection" />został już odłączony od <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />.</exception>
        <block subset="none" type="overrides"><para>Można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" /> metodę, jeśli chcesz zmienić domyślną implementację <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> odłączania formantów. Jeśli zastąpisz metodę i po prostu chcesz dodać implementację do istniejącej metody, możesz wywołać metodę bazową przed wykonaniem własnego kodu.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayMode As WebPartDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DisplayMode { System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ get(); void set(System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia aktywny tryb wyświetlania strony sieci Web, która zawiera kontrolki składniki Web Part.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> określa tryb wyświetlania strony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strona zawierająca kontrolki składniki Web Part jest zawsze w jednym z kilku możliwych trybów wyświetlania. Aby uzyskać szczegółowe informacje na temat trybów wyświetlania, zobacz [składniki Web Part trybami wyświetlania strony](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4).  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasa tworzy tryby wyświetlania strony sieci Web. Korzystając z klasy <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> bazowej <xref:System.Web.UI.WebControls.WebParts.WebPartManager> , formant tworzy kilka standardowych obiektów trybu wyświetlania, które mogą być używane na stronach zawierających kontrolki składniki Web Part. Te standardowe tryby wyświetlania są opisane w <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> temacie Omówienie klasy.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrolka zarządza również trybami wyświetlania dla stron, które używają formantów składniki Web Part. Przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartManager> właściwości kontrolka zachowuje odwołanie do bieżącego trybu wyświetlania na stronie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> Możesz również użyć właściwości, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> aby przełączyć stronę do różnych trybów wyświetlania. Aby zapoznać się z przykładem zmiany trybów wyświetlania na stronie korzystającej z formantów składniki Web Part [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 W ramach zarządzania trybem <xref:System.Web.UI.WebControls.WebParts.WebPartManager> wyświetlania formant udostępnia także zdarzenia i programy obsługi zdarzeń dotyczące trybów wyświetlania, takich <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> jak metoda i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> Metoda. Te metody zapewniają mechanizm dostosowywania zachowania strony, a nawet do dodawania niestandardowego trybu wyświetlania.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwości. Po załadowaniu strony w przeglądarce możesz użyć przycisków w dolnej części strony, aby przełączyć tryby wyświetlania. Ta strona jest domyślnie w trybie przeglądania podczas ładowania. Jeśli przełączysz się do trybu projektowania, możesz przeciągnąć kontrolki serwera z jednej strefy do innej lub rozmieścić dwie kontrolki w jednej strefie. Jeśli przełączysz się do trybu edycji, możesz kliknąć menu czasowniki w nagłówku jednego z formantów serwera, wybrać opcję **Edytuj**i edytować formant przy użyciu podanego interfejsu użytkownika do edycji.  
  
> [!NOTE]
>  Przełączanie między trybami wyświetlania w aplikacji składniki Web Part jest bardzo popularne i można zapewnić spójny, wielokrotnego użytku, aby to zrobić na wszystkich stronach, które zawierają składniki Web Part kontrolek. Przykład kontrolki użytkownika, która zmienia tryby wyświetlania i które mogą być ponownie używane na wielu stronach, znajduje [się w przewodniku: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/CS/wpmgrDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/VB/wpmgrDisplayModevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Obiekt jest przypisywany do <see langword="null" />właściwości. <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /></exception>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> Obiekt przypisany do właściwości nie jest jednym z obsługiwanych trybów wyświetlania.  
  
—lub— 
<see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> Obiekt przypisany do właściwości jest wyłączony.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Tryby wyświetlania strony składniki Web Part</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Przewodnik: Zmienianie trybów wyświetlania na stronie składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanged As WebPartDisplayModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventHandler ^ DisplayModeChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " Usage="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie bieżącego trybu wyświetlania na stronie składniki Web Part.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tryby wyświetlania są integralną częścią aplikacji składniki Web Part. Gdy użytkownicy przełączają się na inny tryb wyświetlania na stronie sieci Web, Strona często zajmuje się bardzo innym wyglądem, w zależności od przeznaczenia nowego trybu wyświetlania. Po zmianie trybu wyświetlania możesz chcieć wprowadzić pewne zmiany w interfejsie użytkownika (UI), takie jak ukrywanie lub pokazywanie określonych kontrolek, zmiana wyglądu wybranych elementów interfejsu użytkownika i tak dalej.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na temat trybów wyświetlania, zobacz [składniki Web Part tryby wyświetlania strony](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Aby uzyskać więcej informacji na temat używania zdarzeń, [zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanging As WebPartDisplayModeCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventHandler ^ DisplayModeChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " Usage="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kliknięciu przez użytkownika czasownika na stronie sieci Web, która rozpoczyna proces zmiany w innym trybie wyświetlania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tryby wyświetlania są integralną częścią aplikacji składniki Web Part. Gdy użytkownicy przełączają się na inny tryb wyświetlania na stronie sieci Web, Strona często zajmuje się bardzo innym wyglądem, w zależności od przeznaczenia nowego trybu wyświetlania. Po zainicjowaniu przez użytkownika procesu zmiany do nowego trybu wyświetlania poprzez kliknięcie zlecenia można wprowadzić pewne zmiany w interfejsie użytkownika (UI) przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> właściwości, aby określić, jaki będzie nowy tryb wyświetlania, a następnie zmienić różne elementy interfejsu użytkownika odpowiednio elementy. Przydatnym sposobem wykonania tej czynności jest przesłonięcie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> metody dostosowywania interfejsu użytkownika.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na temat trybów wyświetlania, zobacz [składniki Web Part tryby wyświetlania strony](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Aby uzyskać więcej informacji na temat używania zdarzeń, [zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ DisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję tylko do odczytu dla wszystkich trybów wyświetlania, które są skojarzone z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolką.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> , który zawiera <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> zestaw obiektów skojarzonych z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolką.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość odwołuje się do wszystkich skojarzonych trybów wyświetlania, w przeciwieństwie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> do właściwości, która odwołuje się tylko do trybów wyświetlania, które są dostępne (obsługiwane) na bieżącej stronie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>  
  
 Dwa z podanych trybów wyświetlania, przeglądanie i projektowanie są zawsze obsługiwane na stronie. Pozostałe trzy tryby wyświetlania, edytowanie, katalog i połączenia są obsługiwane tylko wtedy, gdy strona ma odpowiedni typ strefy niezbędnej do działania określonego trybu wyświetlania. Na przykład jeśli strona nie zawiera <xref:System.Web.UI.WebControls.WebParts.EditorZone> strefy, tryb wyświetlania edycji pojawi się w kolekcji, do której odwołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> się właściwość, ale nie będzie widoczny w kolekcji, do której odwołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> się właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> właściwości. Kod używa tej właściwości, aby wypełnić listę wszystkimi trybami wyświetlania dostępnymi w zestawie kontrolek składniki Web Part, nawet te, które nie są obsługiwane na bieżącej stronie. W takim przypadku tryby wyświetlania wykazu i połączenia nie są obsługiwane, ponieważ odpowiadające im wymagane strefy nie znajdują się na stronie.  
  
 Inne trzy tryby wyświetlania — przeglądanie, projektowanie i edytowanie — są obsługiwane na stronie. Tryb edycji jest obsługiwany, ponieważ strona zawiera <xref:System.Web.UI.WebControls.WebParts.EditorZone> strefę, a tryby przeglądania i projektowania są zawsze obsługiwane.  
  
 Po załadowaniu strony w przeglądarce można użyć kontrolki lista rozwijana w celu przełączenia strony z trybu przeglądania do trybu projektowania, a następnie do trybu edycji. W trybie edycji można kliknąć menu zleceń rozwijanych w nagłówku jednej z formantów serwera, a następnie wybrać pozycję **Edytuj** , aby edytować formant. Należy pamiętać, że jeśli na liście rozwijanej wybrano opcję **wykaz** lub **Połącz** , zostanie wygenerowana strona błędu.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/CS/wpmgrDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/VB/wpmgrDisplayModesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Tryby wyświetlania strony składniki Web Part</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Przewodnik: Zmienianie trybów wyświetlania na stronie składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="DynamicConnections">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DynamicConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ DynamicConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich połączeń dynamicznych, które aktualnie istnieją na stronie sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> , który zawiera odwołania do wszystkich połączeń dynamicznych na stronie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenia dynamiczne to połączenia, które są tworzone programowo, w przeciwieństwie do statycznych. Połączenia statyczne są tworzone przez zadeklarowanie ich w znaczniku strony formularzy sieci Web. Połączenia dynamiczne są tworzone programowo lub przez użytkownika tworzącego połączenie przy użyciu interfejsu użytkownika połączenia.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> Kolekcja, chociaż jest tylko do odczytu i nie można zmienić jej zawartości, zapewnia programistyczny dostęp do każdego obiektu połączenia dynamicznego.  
  
> [!NOTE]
>  Aby wykonać typowe operacje, takie jak <xref:System.Web.UI.WebControls.WebParts.WebPart> łączenie lub rozłączanie formantów, deweloperzy powinni używać metod <xref:System.Web.UI.WebControls.WebParts.WebPartManager> publicznych klasy, takich jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, zamiast próbować bezpośrednio modyfikować połączenie obiekty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EditDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ EditDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje tryb wyświetlania, w którym użytkownicy końcowi mogą edytować i modyfikować kontrolki serwera. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pole odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> obiektu niestandardowego, który został <xref:System.Web.UI.WebControls.WebParts.WebPartManager> utworzony i zawarty w kontrolce. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> Ponieważ jest to obiekt statyczny, można odwołać się do niego bezpośrednio za <xref:System.Web.UI.WebControls.WebParts.WebPartManager> pomocą klasy bez wystąpienia formantu.  
  
 Gdy strona, która zawiera składniki Web Part kontroluje pierwszy, jest domyślnie w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (tryb przeglądania). Gdy użytkownicy chcą edytować lub modyfikować formant serwera, muszą najpierw przełączyć stronę do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> trybu edycji. Po drugie, muszą wybrać określony formant serwera do edycji, klikając polecenie Edytuj czasownik w nagłówku tego formantu. Gdy kontrolka jest w trybie edycji, zostanie wyświetlony interfejs użytkownika, który edytuje wybrany formant.  
  
 Aby włączyć tryb edycji na stronie, strona musi zawierać co najmniej jedną <xref:System.Web.UI.WebControls.WebParts.EditorZone> strefę, która zawiera jedną lub więcej z podanych kontrolek edycji, takich <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> jak kontrolka lub kontrolki edycji niestandardowej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> jak używać pola programowo. Kod wypełnia listę rozwijaną z obsługiwanymi trybami wyświetlania strony, co w tym przypadku jest przeglądanie, projektowanie i edytowanie. Aby można było obsługiwać edytowanie `<asp:EditorZone>` , element znajduje się na stronie. Zwróć uwagę, że w `Page_PreRender` metodzie kod sprawdza, czy bieżąca <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>. Jeśli tak, `Label1` będzie widoczny, a jeśli nie, `Label1` zostanie ukryty.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/CS/wpmgrEditDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/VB/wpmgrEditDisplayModevb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce jest domyślnie w trybie przeglądania. Zwróć uwagę na to, że etykieta na stronie jest ukryta. Użyj kontrolki lista rozwijana, aby przełączyć stronę do trybu edycji. Zwróć uwagę, że ze względu na kod `Page_PreRender` w metodzie etykieta jest teraz widoczna. Kliknij pozycję **Edytuj** czasownik w menu czasowników na jednym z kontrolek, aby umożliwić edytowanie tej konkretnej kontrolki.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Tryby wyświetlania strony składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public virtual bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy obsługa skryptów po stronie klienta jest włączona na stronie sieci Web, która <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> zawiera kontrolkę.</summary>
        <value>Wartość logiczna wskazująca, czy skrypt klienta może być uruchamiany na stronie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> Właściwość umożliwia deweloperom wyłączenie skryptów klienta. Możesz chcieć wyłączyć skrypty klienta ze względów bezpieczeństwa lub, aby upewnić się, że wszyscy użytkownicy strony mają podobne środowisko użytkownika, nawet jeśli używają różnych przeglądarek.  
  
 Skrypty klienta można wyłączyć przez dodanie `EnableClientScript` atrybutu <xref:System.Web.UI.WebControls.WebParts.WebPartManager> do elementu na stronie sieci Web, jak w poniższym wierszu kodu deklaracyjnego:  
  
 `<asp:webpartmanager id="manager" runat="server"`  
  
 `EnableClientScript="false" />`  
  
 Deweloperzy mogą również wyeliminować tę właściwość przez dziedziczenie z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy i ustawienie wartości domyślnej na. `false`  
  
 Zestaw kontrolek składniki Web Part używa skryptu klienta, aby udostępnić niektóre funkcje interfejsu użytkownika i personalizacji klienta. W przypadku wyłączenia skryptów klienta składniki Web Part kontrolki nadal działają, ale niektóre funkcje są wyłączone. Możliwość przeciągnięcia formantów do różnych stref jest wyłączona wraz z możliwością renderowania czasowników w menu czasowników rozwijanych na pasku tytułu kontrolki (czasowniki są wyświetlane jako linki na pasku tytułu kontrolki).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, że korzystanie z motywów jest włączone na stronie sieci Web.</summary>
        <value>Wartość logiczna wskazująca, czy motywy są włączone. <see langword="true" />we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formant przesłania Właściwość podstawową <xref:System.Web.UI.Control.EnableTheming%2A> , aby upewnić się, że `true`zawsze zwraca wartość. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Jest to realizowane, ponieważ zestaw kontrolek składniki Web Part wymaga użycia motywów do renderowania formantów składniki Web Part, które są kontrolkami <xref:System.Web.UI.WebControls.WebParts.WebPartManager> podrzędnymi formantu i tworzą interfejs użytkownika strony sieci Web. Na przykład motywy są używane do renderowania różnych stref i kontrolek, które znajdują się w strefach, w tym różne typy kontrolek części (kontrolki dziedziczące z <xref:System.Web.UI.WebControls.WebParts.Part> klasy), kontrolki użytkownika, formanty serwera ASP.NET i serwer niestandardowy kontrolek.  
  
 Mimo że zastąpiona <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A> właściwość jest zaimplementowana jako właściwość odczytu/zapisu zgodnie z jej właściwością podstawową, nie można ustawić właściwości, ponieważ przez zaprojektowanie musi zawsze zwracać `true`wartość. Jeśli spróbujesz ustawić właściwość, <xref:System.NotSupportedException> zostanie zgłoszony wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Podjęto próbę ustawienia wartości właściwości.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartConnecting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartConnecting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartConnecting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartConnecting();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartConnecting : unit -&gt; unit&#xA;override this.EndWebPartConnecting : unit -&gt; unit" Usage="webPartManager.EndWebPartConnecting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy proces łączenia <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki z inną kontrolką.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda kończy proces <xref:System.Web.UI.WebControls.WebParts.WebPart> łączenia kontrolki z inną kontrolką. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> Jest odpowiednikiem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> metody.  
  
 Metoda zapewnia, że obiekt personalizacji, do którego <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> odwołuje się właściwość, jest modyfikowalny, co jest konieczne, ponieważ Tworzenie połączenia jest samym typem personalizacji. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> Metoda zapewnia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> ,że`null`obiekt nie jest, a wreszcie wywołuje metodę.<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka, do której <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> odwołuje <see langword="null" />się właściwość, to.</exception>
        <block subset="none" type="overrides"><para>Deweloperzy, którzy muszą zwiększyć kontrolę <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> , mogą chcieć zastąpić tę metodę w klasie pochodnej. Jednym z metod jest wywołanie metody bazowej, a następnie dodanie dodatkowej obsługi niestandardowej lub zamiarem całkowitego dostosowania całego procesu kończenia połączenia między kontrolkami.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartEditing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartEditing();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartEditing : unit -&gt; unit&#xA;override this.EndWebPartEditing : unit -&gt; unit" Usage="webPartManager.EndWebPartEditing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy proces edytowania <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda kończy proces <xref:System.Web.UI.WebControls.WebParts.WebPart> edycji kontrolki. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> Jest odpowiednikiem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> metody.  
  
 Metoda zapewnia, że obiekt personalizacji, do którego <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> odwołuje się właściwość, jest modyfikowalny, co jest konieczne, ponieważ edytowanie kontrolki jest procesem wymagającym zmian personalizacji. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> Metoda <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> zapewnia, że obiekt nie `null`jest, tak aby aktualnie wybrana <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> mogła ulec zmianie, a wreszcie wywołuje metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka, do której <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> odwołuje <see langword="null" />się właściwość, to.</exception>
        <block subset="none" type="overrides"><para>Deweloperzy, którzy muszą zwiększyć kontrolę <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> , mogą chcieć zastąpić tę metodę w klasie pochodnej. Jednym z metod jest wywołanie metody bazowej, a następnie dodanie dodatkowej obsługi niestandardowej lub zamiarem całkowitego dostosowania całego procesu wykonywania edycji kontrolki. Na przykład, w metodzie override, można najpierw wywołać metodę bazową, a następnie dodać kod, który określa, jakie zmiany zostały wprowadzone, i wyświetla listę zmian z powrotem do użytkownika końcowego jako potwierdzenie.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExportSensitiveDataWarning">
      <MemberSignature Language="C#" Value="public virtual string ExportSensitiveDataWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExportSensitiveDataWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExportSensitiveDataWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ExportSensitiveDataWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExportSensitiveDataWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst komunikatu ostrzegawczego, który jest wyświetlany, gdy użytkownik próbuje wyeksportować poufne dane stanu z <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formantu.</summary>
        <value>Ciąg, który zawiera komunikat ostrzegawczy. Komunikat domyślny to wartość specyficzna dla kultury dostarczana przez .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy użytkownik próbuje eksportować poufne dane stanu z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu, jeśli którekolwiek z eksportowanych danych pochodzą z elementu członkowskiego, który został oznaczony jako wrażliwy w kodzie źródłowym, w oknie komunikatu zostanie wyświetlony komunikat ostrzegawczy z informacją o tym, że dane poufne są eksportowane i dają możliwość anulowania eksportu. Deweloperzy mogą oznaczyć dane określonego elementu członkowskiego jako poufne, ustawiając `isSensitive` parametr `[Personalizable]` atrybutu `true` na element członkowski. Aby uzyskać więcej informacji o tym atrybucie i parametrze, <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> zobacz Klasa.  
  
> [!IMPORTANT]
>  W przypadku korzystania z funkcji eksportowania składniki Web Part dane poufne mogą zostać wyeksportowane do nieautoryzowanych użytkowników. Aby uzyskać szczegółowe informacje na temat ochrony przed tym zagrożeniem, zobacz [Zabezpieczanie stron składniki Web Part](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 Domyślny komunikat jest wyświetlany za każdym razem, gdy użytkownicy próbują wyeksportować. Jednak przez przypisanie wartości do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> właściwości można podać niestandardowy komunikat ostrzegawczy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> właściwości.  
  
 Kod dla następującej strony sieci Web używa kontrolki standardowej <xref:System.Web.UI.WebControls.BulletedList> i umieszcza ją w strefie. Formant zostanie opakowany <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> do kontrolki w czasie wykonywania, co umożliwi jej działanie jako prawdziwą <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolę. Aby można było eksportować kontrolkę, `ExportMode` atrybut jest dodawany `<asp:bulletedlist>` do elementu, a wartość atrybutu jest ustawiona na <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>, co oznacza, że zarówno dane poufne, jak i niewrażliwe mogą zostać wyeksportowane. Należy również pamiętać, że `<asp:webpartmanager>` w elemencie `ExportSensitiveDataWarning` atrybut ma przypisaną wartość niestandardową.  
  
 Należy pamiętać, że aby przykład kodu działał, istnieje ustawienie, które należy dodać do pliku Web. config, aby umożliwić eksportowanie składniki Web Part plików opisu. Upewnij się, że masz plik Web. config w tym samym katalogu, w którym znajduje się Strona sieci Web tego przykładu kodu. Upewnij się, że w `<webParts>` `enableExport` `true`sekcji istnieje element z atrybutem ustawionym na, tak jak w poniższym znaczniku. `<system.web>`  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/CS/wpmgrExportSensitiveWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/VB/wpmgrExportSensitiveWarningVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce kliknij menu czasowniki (reprezentowane przez strzałkę w dół) na pasku tytułu kontrolki zawierającej łącza. W menu zlecenia wybierz opcję **Eksportuj**i zwróć uwagę, że pojawi się okno komunikatu z ostrzeżeniem niestandardowym. Jeśli chcesz kontynuować eksportowanie, kliknij przycisk **OK**, co umożliwi zapisanie lokalnej kopii pliku opisu XML ze wszystkimi danymi o formancie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExportWebPart">
      <MemberSignature Language="C#" Value="public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit&#xA;override this.ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit" Usage="webPartManager.ExportWebPart (webPart, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="webPart">Kontrolka, z której zostaną wyeksportowane dane.</param>
        <param name="writer">Zapisuje eksportowane dane z <paramref name="webPart" /> do pliku opisu XML. <see cref="T:System.Xml.XmlWriter" /></param>
        <summary>Tworzy plik opisu XML zawierający dane stanu i właściwości dla formantu serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda asembleruje różne dane stanu i właściwości z `webPart` pliku XML. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Dane obejmują informacje dotyczące samego formantu, w tym jego zestawu, dane stanu i dane właściwości. Użytkownik inicjujący eksport może zapisać plik XML na dysku na komputerze lokalnym lub w sieci. Inni użytkownicy mogą następnie zaimportować plik opisu na inną stronę lub witrynę sieci Web i zastosować dane stanu i właściwości do innego wystąpienia `webPart`. Zapewnia to szybki i wygodny mechanizm pozwalający użytkownikom na udostępnianie i ponowne używanie swoich ustawień w kontrolkach serwera, a także udostępnia deweloperom środki pozwalające na kontrolowanie wyglądu i zachowania eksportu i zaimportowanych formantów.  
  
 Właściwości dla `webPart` nie są eksportowane domyślnie. Aby włączyć eksportowanie właściwości, należy oznaczyć ją `[Personalizable]` atrybutem w kodzie źródłowym. Możesz również opcjonalnie oznaczyć właściwość, która może być eksportowana jako zawierające dane poufne, ustawiając `isSensitive` parametr `[Personalizable]` atrybutu na `true`. Domyślnie `isSensitive` jest to `false`. Deweloperzy mogą ustawić parametr, aby `true` wskazać, że dane są poufne.  
  
 Aby można było eksportować, deweloper ustawia jego <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> wartość właściwości na <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All> (w tym wszystkie właściwości Personalizable i poufne) lub do <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, które eksportują wszystko, z wyjątkiem poufne właściwości. `webPart` .  
  
> [!IMPORTANT]
>  Umożliwienie użytkownikom eksportowania danych z formantów i importowania danych do innych kontrolek wiąże się z pewnymi zagrożeniami bezpieczeństwa. Deweloperzy powinni używać opisanego powyżej podejścia do ochrony poufnych danych, a jeśli chcą uniknąć ryzyka ujawnienia danych, nie należy włączać eksportowania `webPart` jednocześnie. Aby uzyskać szczegółowe informacje dotyczące składniki Web Part problemów z zabezpieczeniami, zobacz [zabezpieczanie składniki Web Part stron](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="writer" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" />nie jest zawarty w kolekcji formantów, do których odwołuje <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />się.  
  
—lub— 
Właściwość jest ustawiona na wartość <paramref name="webPart" />, co oznacza, że eksport jest wyłączony dla. <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" /> <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" /> <paramref name="webPart" /></exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Zabezpieczanie stron składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="webPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Został zastąpiony, aby zapobiec ustawianiu fokusu w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolce, ponieważ nie ma interfejsu użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zastępuje metodę podstawową <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> i zgłasza wyjątek, Jeśli wywołujący wywołuje metodę. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Focus%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Ponieważ formant nie ma interfejsu użytkownika i nigdy nie jest widoczny dla użytkowników, nigdy nie można ustawić fokusu dla samego siebie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Obiekt wywołujący próbuje wywołać <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" /> metodę, która nie jest obsługiwana w kontrolce, która nie ma interfejsu użytkownika.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ConsumerConnectionPointCollection ^ GetConsumerConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&#xA;override this.GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" Usage="webPartManager.GetConsumerConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Kontrolka serwera działająca jako odbiorca w ramach połączenia.</param>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> obiektów, które mogą działać jako punkty połączenia z kontrolki serwera działającej jako odbiorca w ramach połączenia składniki Web Part.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" /> który zawiera wszystkie punkty połączenia w odbiorcy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenie składniki Web Part zawsze obejmuje dokładnie dwie kontrolki, jeden działający jako dostawca danych, drugi działający jako odbiorca danych. Każda kontrolka musi mieć co najmniej jedną metodę, która jest definiowana jako punkty połączenia. W przypadku kontrolki odbiorcy jej punkty połączenia to <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiekty. Pobranie punktów połączenia z klientem jest wymaganym krokiem w tworzeniu połączenia składniki Web Part.  
  
 Konsument musi zawsze mieć co najmniej jeden punkt połączenia, aby można było nawiązać połączenie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> Metoda sprawdza kontrolkę odbiorcy i pobiera kolekcję wszystkich punktów połączenia. <xref:System.Web.UI.WebControls.WebParts.WebPart> Jeśli kontrolka nie ma punktów połączenia, metoda zwraca pustą kolekcję.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metody.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web zawierająca dwie niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, które mogą być połączone `<asp:webpartmanager>` i element.  
  
-   Plik kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki i niestandardowy interfejs.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać więcej informacji na temat trybów wyświetlania i sposobu działania kontrolki użytkownika, zobacz [Przewodnik dotyczący tematu: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Znaczniki deklaratywne dla strony sieci Web zawierają `Register` dyrektywy zarówno dla kontrolki użytkownika, jak i kontrolek niestandardowych. Istnieje element, element, który zawiera kontrolki `<asp:connectionszone>` niestandardowe i element. `<asp:webpartzone>` `<asp:webpartmanager>` Zwróć uwagę, że `Page_Load` w metodzie kod sprawdza, czy połączenie już istnieje i, jeśli nie, definiuje dostawcę, odbiorcę i odpowiednie punkty połączenia, a następnie dodaje nowe połączenie do zestawu połączeń statycznych, do których odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> właściwość. Należy zauważyć, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> że obiekt, który jest pobierany <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> za pomocą metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> jest następnie przesyłany do metody, aby określić, czy można utworzyć połączenie między dwoma kontrolkami.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Trzecią częścią przykładu jest kod źródłowy dla kontrolek. Możesz uzyskać ten kod i instrukcje dotyczące jego kompilowania, z sekcji przykład w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> temacie Omówienie klasy.  
  
 Po załadowaniu strony sieci Web w przeglądarce kliknij kontrolkę lista rozwijana **tryb wyświetlania** i wybierz pozycję **Połącz** , aby przełączyć stronę w tryb połączenia. Tryb połączenia używa elementu `<asp:connectionszone>` , aby umożliwić tworzenie połączeń między kontrolkami. W trybie Połącz kliknij strzałkę w dół na pasku tytułu kontrolki **Kod pocztowy** , aby uaktywnić swoje menu zlecenia, a następnie kliknij przycisk **Połącz**. Gdy zostanie wyświetlony interfejs użytkownika połączenia (UI), Zauważ, że połączenie zostało już utworzone przy użyciu kodu zawartego w `Page_Load` metodzie. Jeśli powrócisz do tej strony w późniejszej sesji przeglądarki, to połączenie statyczne zostanie już nawiązane i nie będzie konieczne ich odtworzenie przy każdym załadowaniu strony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentWebPartManager">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::WebParts::WebPartManager ^ GetCurrentWebPartManager(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="static member GetCurrentWebPartManager : System.Web.UI.Page -&gt; System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">Strona sieci Web zawierająca wystąpienie elementu <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</param>
        <summary>Pobiera odwołanie do bieżącego wystąpienia <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu na stronie.</summary>
        <returns>Obiekt <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> , który odwołuje się do bieżącego wystąpienia formantu na stronie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest przydatna w kontekstach, w których chcesz pobrać odwołanie do bieżącej <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> Typowy scenariusz, w którym wystąpi taka sytuacja, ma miejsce w przypadku pisania kontrolki niestandardowej, która nie może być znana podczas opracowywania informacji o identyfikatorze <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki na stronie.  
  
> [!NOTE]
>  Metoda jest statyczna, dlatego można ją wywołać bezpośrednio bez konieczności wystąpienia <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>  
  
 Niektóre kontrolki w zestawie kontrolek składniki Web Part, takie <xref:System.Web.UI.WebControls.WebParts.WebPart> jak kontrolki, <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> mają właściwość, która może pobrać odwołanie do bieżącej <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki. W związku z tym podczas pracy z takimi kontrolkami należy użyć tej właściwości, aby pobrać odwołanie.  
  
 W przypadku kodowania w kontekście, w którym znasz identyfikator <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki, na przykład pisząc kod wewnątrz strony sieci Web, jest najprostszym i najbardziej wydajnym odwołaniem <xref:System.Web.UI.WebControls.WebParts.WebPartManager> do kontrolki za pomocą jej identyfikatora.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> metody. Przykład ma dwie części: niestandardowy formant serwera i stronę sieci Web, która hostuje formant.  
  
 Kontrolka <xref:System.Web.UI.WebControls.Label> niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> używa metody do <xref:System.Web.UI.WebControls.WebParts.WebPartManager> pobierania identyfikatora formantu na bieżącej stronie, a następnie wyświetlania identyfikatora.  
  
 [!code-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/MyManagerIDLabel.cs#2)]
 [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/MyManagerIDLabel.vb#2)]  
  
 Poniższy przykład kodu udostępnia stronę sieci Web, która hostuje formant w <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefie.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/getCurrentWPManagerCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/getcurrentWPManagervb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce należy zauważyć, że identyfikator bieżącej <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki jest wyświetlany w kontrolce niestandardowej. <xref:System.Web.UI.WebControls.Label>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="page" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayTitle">
      <MemberSignature Language="C#" Value="protected internal virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetDisplayTitle(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetDisplayTitle(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string&#xA;override this.GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetDisplayTitle webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Formant, dla którego Metoda zwraca wartość <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />.</param>
        <summary>Pobiera ciąg zawierający wartość <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> właściwości <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
        <returns>Ciąg, który zawiera obliczoną wartość <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> dla. <paramref name="webPart" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobiera obliczoną wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> właściwości dla elementu `webPart`. Gdy deweloperzy nie przypisują wartości do <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> właściwości <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, ta metoda generuje wartość wyświetlaną jako tytuł. Obliczona wartość dla kontrolek bez tytułu składa się z liczby dołączonej do ciągu, z liczbą wskazującą sekwencję kontrolki w bieżącej strefie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" />nie znajduje się w <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> kolekcji.</exception>
        <block subset="none" type="overrides"><para>Tę metodę można zastąpić, aby zmienić sposób obliczania domyślnego tytułu wyświetlania.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetExportUrl">
      <MemberSignature Language="C#" Value="public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetExportUrl(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetExportUrl(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.GetExportUrl : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetExportUrl webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Trwa eksportowanie.</param>
        <summary>Pobiera względną ścieżkę wirtualną i ciąg zapytania, które są częścią żądania, gdy użytkownik próbuje wyeksportować <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> formant.</summary>
        <returns>Ciąg, który zawiera względną ścieżkę wirtualną i ciąg zapytania, które razem tworzą żądanie eksportu formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> metodę jest względną ścieżką wirtualną do lokalizacji serwera strony zawierającej kontrolkę oraz dołączoną wartość ciągu zapytania, która tworzy żądanie eksportu przesłane do serwera. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> Metoda koduje ciąg przed zezwoleniem na przesłanie żądania, aby chronić przed atakami złośliwego skryptu.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na temat zabezpieczania aplikacji składniki Web Part, zobacz [zabezpieczanie składniki Web Part stron](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetGenericWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::GenericWebPart ^ GetGenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetGenericWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.GetGenericWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant serwera, który istnieje w <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> i jest opakowany jako kontrolka <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> podrzędna w czasie wykonywania.</param>
        <summary>Pobiera odwołanie do wystąpienia <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> kontrolki zawierającej formant serwera.</summary>
        <returns>Element <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> , który jest <paramref name="control" /> zawijany jako formant podrzędny. Metoda zwraca wartość <see langword="null" /> , <paramref name="control" /> Jeśli nie <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />jest zawarta w.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogólnie rzecz biorąc, istnieją dwie kategorie formantów, które deweloperzy umieszczają <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> w strefach, aby uczestniczyły <xref:System.Web.UI.WebControls.WebParts.WebPart> w aplikacjach składniki Web Part: kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPart> , które dziedziczą z klasy podstawowej i innych formantów serwera, które mogą być standardowe Kontrolki ASP.NET, kontrolki niestandardowe lub kontrolki użytkownika. Gdy którykolwiek z tych kontrolek zostanie umieszczony w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefie, zajmie on funkcję <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki. <xref:System.Web.UI.WebControls.WebParts.WebPart> Kontrolka ma tę funkcjonalność z założenia, ale inne rodzaje kontroli serwera nie są. Aby włączyć inne kontrolki serwera do działania jako <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, gdy są umieszczane <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> w strefie, ASP.NET <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> zawija je z kontrolką. Ponieważ kontrolka dziedziczy bezpośrednio <xref:System.Web.UI.WebControls.WebParts.WebPart> z klasy, udostępnia jej kontrolki podrzędne z prawdziwym składniki Web Part funkcjami. <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>  
  
 Często w czasie wykonywania deweloperzy stron mogą chcieć uzyskać odwołanie do <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontrolki zawierającej jeden z formantów serwera w strefie. Metoda umożliwia im pobranie odwołania <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> do kontrolki. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> metody. Przykład kodu zawiera <xref:System.Web.UI.WebControls.Calendar> kontrolkę zadeklarowaną <xref:System.Web.UI.WebControls.WebParts.WebPartZone> w obrębie strefy. Metoda najpierw drukuje identyfikator <xref:System.Web.UI.WebControls.Calendar> kontrolki do etykiety <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> , a następnie używa metody, aby pobrać odwołanie do <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontrolki, która otacza kalendarz. `Button1_Click` Identyfikator <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontrolki i identyfikator jego formantu podrzędnego (który <xref:System.Web.UI.WebControls.Calendar> jest formant) są drukowane do drugiej etykiety.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/CS/getGenericWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/VB/getGenericWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ProviderConnectionPointCollection ^ GetProviderConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&#xA;override this.GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" Usage="webPartManager.GetProviderConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Kontrolka serwera działająca jako dostawca w ramach połączenia.</param>
        <summary>Pobiera kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> obiektów, które mogą działać jako punkty połączenia z kontrolki serwera działającej jako dostawca w ramach połączenia składniki Web Part.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" /> który zawiera wszystkie punkty połączenia dostawcy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenie składniki Web Part zawsze obejmuje dokładnie dwie kontrolki, jeden działający jako dostawca danych, drugi działający jako odbiorca danych. Każda kontrolka musi mieć co najmniej jedną metodę, która jest definiowana jako punkty połączenia. W przypadku kontrolki dostawcy jej punkty połączenia to <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> obiekty.  
  
 Dostawca musi zawsze mieć co najmniej jeden punkt połączenia, aby można było nawiązać połączenie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> Metoda sprawdza kontrolkę dostawcy i pobiera kolekcję wszystkich punktów połączenia. Pobieranie punktów połączenia dostawcy jest wymaganym krokiem w tworzeniu połączenia składniki Web Part.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> metody.  
  
 Przykład ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Strona sieci Web zawierająca dwie niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, które mogą być połączone `<asp:webpartmanager>` i element.  
  
-   Plik kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki i niestandardowy interfejs.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać więcej informacji na temat trybów wyświetlania i sposobu działania kontrolki użytkownika [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Znaczniki deklaratywne dla strony sieci Web zawierają `Register` dyrektywy zarówno dla kontrolki użytkownika, jak i kontrolek niestandardowych. Istnieje element, element, który zawiera kontrolki `<asp:connectionszone>` niestandardowe i element. `<asp:webpartzone>` `<asp:webpartmanager>` Zwróć uwagę, że `Page_Load` w metodzie kod sprawdza, czy połączenie już istnieje i, jeśli nie, definiuje dostawcę, odbiorcę i odpowiednie punkty połączenia, a następnie dodaje nowe połączenie do zestawu połączeń statycznych, do których odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> właściwość. Należy zauważyć, <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> że obiekt, który jest pobierany <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> za pomocą metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> jest następnie przesyłany do metody, aby określić, czy można utworzyć połączenie między dwoma kontrolkami.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Trzecią częścią przykładu jest kod źródłowy dla kontrolek. Możesz uzyskać ten kod i instrukcje dotyczące jego kompilowania, z sekcji przykład w <xref:System.Web.UI.WebControls.WebParts.WebPartManager> temacie Omówienie klasy.  
  
 Po załadowaniu strony sieci Web w przeglądarce kliknij kontrolkę lista rozwijana **tryb wyświetlania** i wybierz pozycję **Połącz** , aby przełączyć stronę w tryb połączenia. Tryb połączenia używa elementu `<asp:connectionszone>` , aby umożliwić tworzenie połączeń między kontrolkami. W trybie Połącz kliknij strzałkę w dół na pasku tytułu kontrolki **Kod pocztowy** , aby uaktywnić swoje menu zlecenia, a następnie kliknij przycisk **Połącz**. Gdy zostanie wyświetlony interfejs użytkownika połączenia (UI), Zauważ, że połączenie zostało już utworzone przy użyciu kodu zawartego w `Page_Load` metodzie. Jeśli powrócisz do tej strony w późniejszej sesji przeglądarki, to połączenie statyczne zostanie już nawiązane i nie będzie konieczne ich odtworzenie przy każdym załadowaniu strony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ImportWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart ImportWebPart(class System.Xml.XmlReader reader, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportWebPart (reader As XmlReader, ByRef errorMessage As String) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ ImportWebPart(System::Xml::XmlReader ^ reader, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member ImportWebPart : System.Xml.XmlReader *  -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.ImportWebPart : System.Xml.XmlReader *  -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.ImportWebPart (reader, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><see cref="T:System.Xml.XmlReader" /> Odczytuje dane stanu i właściwości z importowanego pliku opisu XML.</param>
        <param name="errorMessage">Element <see cref="T:System.String" /> wyświetlany użytkownikowi w przypadku napotkania błędu podczas importowania.</param>
        <summary>Importuje plik opisu XML zawierający dane <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> stanu i właściwości kontrolki, a następnie stosuje dane do kontrolki.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (lub kontrolka serwera, która jest opakowana <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />i w ten sposób traktowana jako), do której odwołuje się plik opisu XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda importuje plik opisu XML, który został utworzony <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> przez metodę dla kontrolki serwerowej. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> Nie jest to rzeczywista kontrolka serwera, która jest importowana, ale tylko plik opisu zawierający dane o stanie i właściwości formantu. Kontrolka i zestaw, do których odwołuje się plik opisu, muszą być już dostępne na serwerze, na którym użytkownik próbuje zaimportować plik opisu.  
  
 Aby włączyć Importowanie formantu, Deweloper musi dodać <xref:System.Web.UI.WebControls.WebParts.CatalogZone> kontrolkę na stronie, na której zostanie włączony import. W obrębie strefy <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> należy dodać kontrolkę. Ten formant udostępnia okno dialogowe plik, które umożliwia użytkownikom przeglądanie i lokalizowanie pliku opisu do zaimportowania.  
  
 Gdy użytkownik odnajdzie plik opisu i rozpocznie importowanie, plik opisu jest odczytywany przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> metodę. Jeśli nie ma żadnych błędów, a w przypadku znalezienia zestawu i kontrolki, formant serwera zostanie dodany do wykazu w obrębie <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> formantu, a różne dane dotyczące właściwości i stanu określone w pliku opisu są stosowane do formantu. Użytkownik może następnie wybrać formant i dodać go do strony.  
  
> [!IMPORTANT]
>  Podobnie jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> Metoda, metoda ma pewne potencjalne znaczenie dla zagrożeń bezpieczeństwa. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Ponieważ obejmuje ona Importowanie danych do witryny sieci Web, złośliwy użytkownik może próbować wstawić złe dane lub nawet kod skryptu do zaimportowanego pliku opisu. Następnie nieprawidłowe dane mogą pojawić się na stronie lub w bazie danych lub może zostać uruchomiony wstawiony skrypt. Aby zapoznać się z omówieniem potencjalnych zagrożeń związanych z importowaniem plików opisu i sposobach unikania tych zagrożeń, zobacz [zabezpieczanie składniki Web Part stron](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" />jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.EndOfStreamException"><paramref name="reader" />nie można odczytać pliku.  
  
—lub— 
 <paramref name="reader" />jest to konieczne, aby wyświetlić komunikat o błędzie importowania, ale go nie znaleziono.  
  
—lub— 
 <paramref name="reader" />osiągnięto koniec pliku bez znajdowania elementu XML zawierającego wyeksportowane dane.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Zabezpieczanie stron składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="Internals">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Internals As WebPartManagerInternals" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ Internals { System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Internals : System.Web.UI.WebControls.WebParts.WebPartManagerInternals" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManagerInternals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" /> klasy, która jest używana do łączenia i oddzielania zestawu metod, które są faktycznie zaimplementowane <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> w klasie, ale są szczególnie przydatne w przypadku formantów deweloperów.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />, za pomocą <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> którego można odwoływać się do różnych metod, które zostały rozdzielone <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />na.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość uwidacznia interfejsy API do wywołania <xref:System.Web.UI.WebControls.WebParts.WebPartManager> zestawu metod, które są najczęściej używane w przypadku rozszerzania. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>  
  
 Zaprojektowanym sposobem korzystania z tych metod wewnętrznych jest uzyskanie dostępu do nich <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> za pomocą właściwości. Ponieważ właściwość jest chroniona, można uzyskać do niej dostęp tylko i wywoływać metody w wystąpieniu <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> klasy przez dziedziczenie <xref:System.Web.UI.WebControls.WebParts.WebPartManager> z klasy.  
  
> [!NOTE]
>  Ta właściwość jest ukryta przed technologią [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]IntelliSense w. Jednak w klasie pochodnej <xref:System.Web.UI.WebControls.WebParts.WebPartManager> nadal można uzyskać dostęp do właściwości i jej różnych członków.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAuthorized">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> do strony można dodać formant lub inny serwer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Częścią elastyczności funkcji składniki Web Part jest możliwość dodawania kontrolek serwera do stron sieci Web w czasie wykonywania. Istnieje kilka typowych scenariuszy, w których można dodać formant serwera (który może być kontrolką niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPart> , niestandardową kontrolką serwera, kontrolką użytkownika lub kontrolką ASP.NET).  
  
 W poniższych typowych scenariuszach zestaw kontrolek składniki Web Part próbuje dodać kontrolki serwera do strony, a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Metoda jest wywoływana w celu autoryzowania ich:  
  
-   Po dodaniu formantu serwera przez zadeklarowanie go w znaczniku strony <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> sieci Web w strefie.  
  
-   Gdy kontrolka serwera jest dodawana programowo do strefy.  
  
-   Gdy użytkownik importuje formant serwera do składniki Web Part wykazu formantów.  
  
-   Gdy istniejący formant serwera jest ładowany z magazynu danych personalizacji.  
  
-   Po dodaniu kontrolki serwer do <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> kontrolki, aby udostępnić ją w wykazie kontrolek serwera.  
  
 W każdym scenariuszu, w którym są dodawane <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> kontrolki, metoda jest wywoływana, aby upewnić się, że wszystkie kryteria autoryzacji zostały spełnione, aby umożliwić dodanie kontrolki. Gdy kontrolka jest autoryzowana, jest dodawana normalnie, tak jak w przypadku braku scenariusza filtrowania. Gdy kontrolka nie jest autoryzowana, zestaw kontrolek składniki Web Part może odpowiedzieć na kilka sposobów, w zależności od kontekstu. Zestaw kontrolek może w trybie dyskretnym nie mógł dodać nieautoryzowanej części (jeśli nie ma potrzeby informowania użytkownika), może wyświetlić komunikat o błędzie lub dodać wystąpienie <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> klasy jako symbol zastępczy. Ten obiekt symbolu zastępczego nie jest widoczny na stronie, ale jest widoczny w kodzie źródłowym strony, aby wskazać, że nieautoryzowana kontrolka została wykluczona.  
  
 Określenie, czy formant jest autoryzowany, to filtr autoryzacji. Filtr autoryzacji jest funkcją w zestawie kontrolek składniki Web Part, która umożliwia deweloperom wykluczenie ze strony wszelkich formantów, które nie spełniają określonych kryteriów.  
  
 Aby utworzyć scenariusz filtrowania, deweloperzy muszą wykonać dwie czynności. Najpierw muszą przypisywać wartość ciągu (wartość może być dowolną) do <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości każdej <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, która ma zostać użyta w scenariuszu. Mogą również przypisać wartość do tej właściwości dla innych typów formantów serwera, które nie <xref:System.Web.UI.WebControls.WebParts.WebPart> są kontrolkami, ponieważ jeśli są umieszczane w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefach, takie <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontrolki są opakowane z kontrolką w czasie wykonywania, a ta kontrolka dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwość.  
  
 Drugim wymaganym krokiem do utworzenia scenariusza filtrowania jest zastąpienie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> metody lub utworzenie programu obsługi zdarzeń <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> dla zdarzenia. W tych metodach deweloper może sprawdzić <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwość, a jeśli wartość wskazuje, że formant nie powinien być autoryzowany, deweloper gwarantuje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> że `false`Metoda zwraca wartość.  
  
> [!NOTE]
>  Przykłady kodu i opis sposobu konfigurowania niestandardowego scenariusza filtrowania przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody można znaleźć w tematach dotyczących przeciążeń metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthorized(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAuthorized(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.IsAuthorized : System.Web.UI.WebControls.WebParts.WebPart -&gt; bool" Usage="webPartManager.IsAuthorized webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Lub inny formant serwera jest sprawdzany pod kątem autoryzacji.</param>
        <summary>Wykonuje wstępne kroki w celu ustalenia, czy kontrolka jest uprawniona do dodania do strony.</summary>
        <returns>Wartość logiczna wskazująca, czy <paramref name="webPart" /> można dodać do strony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą początkową wywoływaną przez zestaw kontrolek składniki Web Part, aby sprawdzić autoryzację <xref:System.Web.UI.WebControls.WebParts.WebPart> dla kontrolki. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Akceptuje `webPart` jako parametr i rozpoczyna proces, który ostatecznie określa, czy kontrolka zostanie dodana do strony. Wywołaj tę metodę z kodu bezpośrednio, gdy musisz określić, czy dany formant jest autoryzowany.  
  
 Ta metoda przeprowadza wstępne zadania określania, czy kontrolka dziedziczy z <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy, czy <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> jest formantem i, jeśli tak, jakiego typu kontrolki podrzędnej zawiera. Aby zakończyć zadanie autoryzacji, wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> metodę przeciążenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> jak wywołać metodę z kodu, aby określić, czy formant jest autoryzowany do dodania do strony.  
  
 Przykład kodu ma trzy części:  
  
-   Kontrolka <xref:System.Web.UI.WebControls.WebParts.WebPartManager> niestandardowa, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> która zastępuje metodę.  
  
-   Strona sieci Web, która tworzy filtr dla <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki.  
  
-   Wyjaśnienie, jak uruchomić przykład kodu.  
  
 Ten przykład kodu używa kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPartManager> niestandardowej, która <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> zastępuje metodę przeciążenia, aby <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> zapewnić niestandardową obsługę właściwości. Ta kontrolka sprawdza wartość `admin` właściwości i, jeśli wartość jest obecna, autoryzuje formant. Jeśli kontrolka ma inną wartość, nie jest autoryzowana; kontrolki bez wartości właściwości są również autoryzowane, ponieważ nie są one częścią scenariusza filtrowania.  
  
 Aby można było uruchomić ten przykład kodu, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Ten przykład kodu używa metody kompilowania dynamicznego. Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Druga część przykładu kodu tworzy filtr, który może potencjalnie wykluczyć formant. Poniższa Strona sieci Web zawiera trzy kontrolki serwera ASP.NET `<asp:webpartzone>` w elemencie. Zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości First i Second mają ustawioną inną wartość, a trzeci nie przypisuje właściwości. Tę wartość autoryzacji można sprawdzić w czasie wykonywania, a formant można dodać do strony, jeśli filtr pasuje do kryteriów ustawionych przez dewelopera. Zwróć również uwagę, że `Page_Load` w metodzie kod <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> wywołuje metodę w celu ustalenia, czy każda z formantów jest autoryzowana, a jeśli tak, ustawia <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> właściwość każdej kontrolki.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Należy pamiętać, że aby przykład kodu działał, należy dodać ustawienie w pliku Web. config, aby umożliwić eksportowanie składniki Web Part plików opisu. Upewnij się, że masz plik Web. config w tym samym katalogu, w którym znajduje się Strona sieci Web tego przykładu kodu. Upewnij się, że w `<webParts>` `enableExport` `true`sekcji istnieje element z atrybutem ustawionym na, tak jak w poniższym znaczniku. `<system.web>`  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Po załadowaniu strony w przeglądarce należy zauważyć, że pierwszy formant jest wyświetlany, ponieważ jest zgodny z kryteriami w zastąpionej metodzie. Drugi formant nie jest dodawany do strony, ponieważ jest wykluczony przez filtr. Trzeci formant zostanie również dodany, ponieważ nie ma <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> ustawionej właściwości. Zauważ, że po kliknięciu ikony menu zlecenia na pasku tytułu obu formantów można je wyeksportować, ponieważ ich <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> wartości właściwości zostały przypisane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />jest <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Ta metoda jest wywoływana bezpośrednio z kodu. Aby uzyskać większą kontrolę programistyczną nad procesem autoryzacji, można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" /> metodę przeciążenia.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAuthorized(class System.Type type, string path, string authorizationFilter, bool isShared) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAuthorized(Type ^ type, System::String ^ path, System::String ^ authorizationFilter, bool isShared);" />
      <MemberSignature Language="F#" Value="abstract member IsAuthorized : Type * string * string * bool -&gt; bool&#xA;override this.IsAuthorized : Type * string * string * bool -&gt; bool" Usage="webPartManager.IsAuthorized (type, path, authorizationFilter, isShared)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="authorizationFilter" Type="System.String" />
        <Parameter Name="isShared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> Kontrolka, która jest sprawdzana pod kątem autoryzacji.</param>
        <param name="path">Względna ścieżka do pliku źródłowego dla kontrolki, która jest autoryzowana, Jeśli kontrolka jest kontrolką użytkownika.</param>
        <param name="authorizationFilter">Dowolna wartość ciągu przypisana <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> do właściwości <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki, używana do autoryzacji, czy można dodać kontrolkę do strony.</param>
        <param name="isShared">Wskazuje, czy kontrolka jest sprawdzana pod kątem autoryzacji, jest formantem udostępnionym, co oznacza, że jest widoczny dla wielu lub wszystkich użytkowników <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" /> aplikacji, a jego wartość <see langword="true" />właściwości jest ustawiona na.</param>
        <summary>Wykonuje końcowe kroki w celu ustalenia, czy kontrolka jest uprawniona do dodania do strony.</summary>
        <returns>Wartość logiczna wskazująca, czy formant jest autoryzowany do dodania do strony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> przeciążenia wykonuje końcowe kroki w celu ustalenia, czy kontrolka jest uprawniona do dodania do strony. Metoda gwarantuje, że `type` jest prawidłowym typem `path` i ma wartość tylko wtedy, gdy sprawdzany formant jest kontrolką użytkownika. Następnie wywołuje metodę krytyczną <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> , która <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> wywołuje zdarzenie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zastąpić metodę, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> aby określić, czy formant jest autoryzowany do dodania do strony.  
  
 Pierwszym krokiem jest utworzenie filtru, który może potencjalnie wykluczyć formant. Poniższa Strona sieci Web zawiera trzy kontrolki serwera ASP.NET `<asp:webpartzone>` w elemencie. Zwróć uwagę, że <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości First i Second mają ustawioną inną wartość, a trzeci nie przypisuje właściwości. Tę wartość autoryzacji można sprawdzić w czasie wykonywania, a formant można dodać do strony, jeśli filtr pasuje do kryteriów ustawionych przez dewelopera.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Drugim krokiem jest przesłonięcie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> metody i utworzenie niestandardowej obsługi filtrów autoryzacji. Należy zauważyć, że kod najpierw sprawdza, czy właściwość ma wartość, tak aby żadna kontrolka, która nie przypisała <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości, zostanie dodana automatycznie. Jeśli kontrolka zawiera filtr, kod zwraca `true` tylko wtedy, gdy wartość filtru jest `admin`równa. Jest to prosty mechanizm, którego można użyć do wyświetlania pewnych kontroli dla określonych użytkowników, w zależności od ich roli. Chociaż pełny przykład korzystania z ról wykracza poza zakres tego tematu, można użyć tej samej logiki jako przesłoniętej metody w tym przykładzie kodu, z tą różnicą, że można sprawdzić, czy bieżący użytkownik znajduje się w roli zgodnej z wartością filtru autoryzacji. , a następnie Dodaj kontrolkę tylko dla tego użytkownika. Pozwoli to na tworzenie stron, w których niektórzy użytkownicy zobaczą wszystkie kontrolki, a inni użytkownicy będą widzieć tylko wybrane kontrolki. Jest to sposób, w jaki logika sprawdzająca filtr może wyglądać w przypadku użycia ról:  
  
```vb  
If Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  
  return True  
Else  
  return False  
End If  
```  
  
```csharp  
if(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  
    return true;  
else  
    return false;  
```  
  
 Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Ten przykład kodu używa metody kompilowania dynamicznego. Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Po załadowaniu strony w przeglądarce należy zauważyć, że pierwszy formant jest wyświetlany, ponieważ jest zgodny z kryteriami w zastąpionej metodzie. Druga kontrolka nie jest dodawana do strony, ponieważ jej wartość filtru jest wykluczona. Trzeci formant zostanie dodany, ponieważ nie ma <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> ustawionej właściwości. Jeśli zmienisz wartość właściwości w drugiej kontrolce tak, aby była zgodna z pierwszą kontrolką, a następnie ponownie uruchomisz stronę, druga kontrolka zostanie również dodana.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="type" />jest kontrolką użytkownika i <paramref name="path" /> <see langword="null" /> jest albo pustym ciągiem ("").  
  
—lub— 
 <paramref name="type" />nie jest kontrolką użytkownika i <paramref name="path" /> ma przypisaną wartość.</exception>
        <block subset="none" type="overrides"><para>Ta metoda może zostać przesłonięta przez dziedziczenie <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> z klasy, jeśli chcesz zapewnić dodatkową obsługę podczas sprawdzania autoryzacji. Można chcieć zastąpić metodę w celu sprawdzenia określonych wartości w <paramref name="authorizationFilter" /> parametrze, a na podstawie wartości zwraca wartość logiczną określającą, czy kontrolka zostanie dodana do strony.  
  
Dla deweloperów stron, którzy chcą również sprawdzać filtry autoryzacji i zapewniać obsługę niestandardową, istnieje możliwość wykonania tej czynności w postaci wbudowanej na stronie. aspx lub w pliku związanym z kodem, bez konieczności dziedziczenia z jakichkolwiek klas. Można zadeklarować alternatywną procedurę obsługi zdarzeń na stronie dla <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> metody <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki. Aby uzyskać więcej szczegółów i przykład, zobacz <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> metodę.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsCustomPersonalizationStateDirty">
      <MemberSignature Language="C#" Value="protected virtual bool IsCustomPersonalizationStateDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsCustomPersonalizationStateDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsCustomPersonalizationStateDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPersonalizationStateDirty : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wprowadzono zmiany personalizacji, które mają wpływ na szczegóły personalizacji na poziomie strony kontrolowane <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> przez formant.</summary>
        <value>Wartość logiczna wskazująca, czy zostały wprowadzone zmiany personalizacji. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> używa właściwości wewnętrznie do śledzenia, czy jakiekolwiek dane personalizacji na poziomie strony, którymi zarządza, zostały zmienione. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Dane personalizacji zmieniają się, gdy użytkownicy wykonują różne akcje personalizacji na poziomie strony, takie jak dodawanie <xref:System.Web.UI.WebControls.WebParts.WebPart> lub usuwanie kontrolek, łączenie i rozłączanie kontrolek, zmiana układu strony przez przenoszenie formantów i inne akcje.  
  
> [!NOTE]
>  Użytkownicy mogą również wykonywać personalizacje na poziomie kontroli, co oznacza, że wprowadzają zmiany personalizacji do określonej kontrolki, a zmiany wpływają tylko na tę kontrolkę. Przykładem może być edytowanie kontrolki i zmiana jej tekstu tytułu lub jej koloru tła. Personalizacja na poziomie formantu nie ma wpływu na dane personalizacji na poziomie strony śledzone przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant, a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> więc wartość właściwości nie jest zmieniana na po wystąpieniu personalizacji na `true` poziomie kontroli.  
  
 Mimo że metoda jest chroniona i nie można uzyskać do niej dostępu bezpośrednio przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> obiekt wywołujący, właściwość może być dostępna bezpośrednio przez wywoływania i zwraca wartość tej właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.PersonalizationState.IsDirty" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetDirty" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="webPartManager.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Zawiera dane stanu trwałego do załadowania.</param>
        <summary>Ładuje dane stanu kontroli zapisane z poprzedniego żądania strony i muszą zostać przywrócone po kolejnym żądaniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest przydatna do przywracania danych właściwości, które powinny być utrwalane na stronach ogłaszania zwrotnego, nawet <xref:System.Web.UI.Control.EnableViewState%2A> gdy właściwość jest ustawiona na `false`. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" />jest nieprawidłowy <see cref="P:System.Web.UI.PageStatePersister.ControlState" />.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.LoadCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> , który zawiera dane stanu do załadowania.</param>
        <summary>Przechowuje niestandardowe dane personalizacji, które zostały przesłane do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantu przez obiekty personalizacji do użycia później podczas procesu inicjowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda udostępnia zapisane dane stanu w postaci <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> obiektu. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> Te dane są ostatecznie używane do ładowania danych personalizacji do formantów składniki Web Part i wykonywania innych zadań inicjowania.  
  
> [!NOTE]
>  Ta metoda jest wywoływana przez sekwencję metod, które rozpoczynają się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A> , gdy metoda początkowo żąda <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> skojarzonego obiektu, aby <xref:System.Web.UI.WebControls.WebParts.WebPartManager> dostarczyć dane personalizacji do kontrolki.  
  
 Nie można wywołać tej metody bezpośrednio z poziomu kodu. Można jednak bezpośrednio wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A> metodę, która sama <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> wywołuje metodę i zwraca dane personalizacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy mogą zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> metodę w klasie pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> .</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MediumPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MediumPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MediumPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MediumPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MediumPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MediumPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który zezwala tylko <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> na uprawnienia <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> i uprawnienia. <see cref="T:System.Security.PermissionSet" /></summary>
        <value>Obiekt, który zezwala tylko <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> na uprawnienia <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> i uprawnienia. <see cref="T:System.Security.PermissionSet" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.PermissionSet> Obiekt, który jest zwracany przez tę właściwość, jest używany podczas importowania dla deserializacji typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimalPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MinimalPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MinimalPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MinimalPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimalPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który zezwala tylko <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> na uprawnienia <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> i uprawnienia. <see cref="T:System.Security.PermissionSet" /></summary>
        <value>Pobiera obiekt, który zezwala tylko <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> na uprawnienia <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> i uprawnienia. <see cref="T:System.Security.PermissionSet" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.PermissionSet> Obiekt zwrócony przez tę właściwość jest używany podczas importowania dla wszystkiego, z wyjątkiem deserializacji typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWebPart">
      <MemberSignature Language="C#" Value="public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="abstract member MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit&#xA;override this.MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit" Usage="webPartManager.MoveWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Lub inny formant serwera jest przenoszony.</param>
        <param name="zone">Miejsce docelowe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> , do <paramref name="webPart" /> którego jest przenoszony.</param>
        <param name="zoneIndex">Liczba całkowita, która wskazuje indeks <paramref name="webPart" /> względem innych kontrolek w. <paramref name="zone" /></param>
        <summary>Przenosi kontrolkę <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />lubserwer z jednej strefy do innej lub do nowej pozycji w ramach tej samej strefy. <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka używa metody, aby przejść `webPart` do nowej lokalizacji w tej samej strefie lub w innej strefie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Metodę można wywołać bezpośrednio z kodu i jest ona wywoływana, gdy użytkownik przenosi formant do nowej pozycji przy użyciu różnych opcji w składniki Web Part interfejsie użytkownika.  
  
 Aby `webPart` można było przenieść kilka warunków, należy spełnić pewne warunki, a większość z nich jest wskazywana przez elementy wymienione w sekcji wyjątki w tym temacie. Jeśli `webPart` nie została zawarta <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> w strefie do rozpoczęcia od, nie można jej przenieść do strefy.  
  
 Po spełnieniu warunków następuje przeniesienie `webPart`następującej sekwencji akcji:  
  
1.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> wywołuje zdarzenie.  
  
2.  `webPart`Program jest usuwany z bieżącej strefy (w razie potrzeby) i dodawany do nowej strefy lub nowej pozycji w bieżącej strefie.  
  
3.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> wywołuje zdarzenie.  
  
4.  `zoneIndex` Każda<xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka w strefie źródłowej i docelowej jest resetowana, aby odzwierciedlała przesunięty formant.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> jak wywołać metodę bezpośrednio z kodu, aby <xref:System.Web.UI.WebControls.WebParts.WebPart> przenieść formant z jednej strefy do innej.  
  
 Przykład kodu ma trzy części:  
  
-   Kontrolka użytkownika do zmiany trybów wyświetlania.  
  
-   Strona sieci Web do hostowania kontrolek.  
  
-   Wyjaśnienie, jak uruchomić przykład kodu.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać więcej informacji na temat trybów wyświetlania i sposobu działania kontrolki użytkownika [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Drugą częścią przykładu jest strona sieci Web, która zawiera dwie strefy, z których każdy zawiera dwie kontrolki serwera. Gdy użytkownik kliknie przycisk **Przenieś składnik WebPart** na stronie, kod w `Button1_Click` metodzie przenosi kontrolkę z pierwszej strefy do nowej pozycji w drugiej strefie. Zwróć uwagę, że najpierw kod musi wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> metodę, aby <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> pobrać `list1` obiekt, który otacza formant. Jest to wymagane, ponieważ pierwszy parametr <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metody <xref:System.Web.UI.WebControls.WebParts.WebPart> wymaga kontrolki, a `list1` jest formantem serwera ASP.NET.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/CS/MoveWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/VB/MoveWebPartVB.aspx#1)]  
  
 Po załadowaniu strony kliknij przycisk **Przenieś składnik WebPart** i pamiętaj, że formant, który zawiera łącza, przenosi się do środkowej pozycji w drugiej strefie. Ten ruch formantu jest realizowany programowo przez wywołanie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metody. Można również użyć kontrolki lista rozwijana **tryb wyświetlania** , aby przełączyć stronę do trybu projektowania, a w trybie projektowania można przeciągnąć kontrolki do różnych stref lub różnych pozycji w ich strefach. Metoda jest również wywoływana <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przez formant do obsługi takich ruchów inicjowanych przez użytkownika. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" />nie znajduje się w <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> kolekcji <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki.  
  
—lub— 
 <paramref name="zone" />nie znajduje się w <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" /> kolekcji <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki.  
  
—lub— 
Strefa, <paramref name="webPart" /> do której odwołuje się <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" /> właściwość kontrolki, to <see langword="null" />oznacza <paramref name="webPart" /> , że nie jest ona obecnie zawarta w strefie.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" />lub <paramref name="zone" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="zoneIndex" />jest mniejsza od zera.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizeWebPart">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizeWebPart(class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizeWebPart (e As WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizeWebPart(System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit&#xA;override this.OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit" Usage="webPartManager.OnAuthorizeWebPart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" /> Wywołuje zdarzenie i wywołuje procedurę obsługi dla zdarzenia, jeśli taki istnieje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> przez metodę, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka jest sprawdzana pod kątem autoryzacji do dodania do strony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> Gdy metoda jest wywoływana, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> wywołuje zdarzenie, a jeśli istnieje metoda obsługi dla zdarzenia, wywołuje procedurę obsługi. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>  
  
 Proces autoryzacji <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów jest ważną funkcją składniki Web Part. Każdy <xref:System.Web.UI.WebControls.WebParts.WebPart> lub formant serwera, który jest dodawany do strefy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przez formant przechodzi przez proces autoryzacji, aby określić, czy można dodać formant. Domyślnie zestaw kontrolny składniki Web Part nie zapewnia żadnych kryteriów filtrowania, aby uniemożliwić Dodawanie formantów do strefy. Jednak zestaw kontrolny udostępnia mechanizmy wymagane przez deweloperów do tworzenia własnych kryteriów filtrowania. Korzystając z tych mechanizmów, można tworzyć niestandardowe scenariusze filtrowania. Można na przykład utworzyć filtr, aby w przypadku, gdy użytkownik należy do roli administratora, pewne kontrolki zostaną dodane do strefy, gdy strona jest renderowana i jeśli użytkownik należy do roli użytkownika, te kontrolki nie zostaną dodane.  
  
 Mechanizmy filtrowania formantów podczas procesu <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> autoryzacji są <xref:System.Web.UI.WebControls.WebParts.WebPart> właściwością kontrolek, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager> i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzenia w formancie.  
  
 W celu utworzenia scenariusza filtrowania Istnieją zasadniczo dwa zadania. Najpierw należy przypisać ciągi do <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości każdej <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, która ma zostać przefiltrowana. Te wartości ciągu mogą być dowolne, ale powinny zawierać kryteria, według których ma być przeprowadzana filtrowanie. Na przykład jeśli chcesz, aby dana kontrolka została dodana do strefy tylko wtedy, gdy użytkownik jest oglądany przez administratora, możesz przypisać wartość `admin` ciągu do właściwości. Następnie można użyć funkcji ASP.NET Roles i dodać wszystkich użytkowników witryny do różnych ról, takich jak administrator, Menedżer i użytkownik. Podczas ładowania strony, kod filtrowania sprawdzi, jaką rolę użytkownik znajduje, porównaj ją z wartością filtru autoryzacji na sprawdzanym formancie i jeśli (na przykład) użytkownik jest w roli administratora i ustawił <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> wartość kontrolki na `admin`, można dodać kontrolkę.  
  
 Drugim krokiem tworzenia scenariusza filtrowania jest pisanie kodu w celu sprawdzenia <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> wartości właściwości w <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkach i określenie, czy każda kontrolka jest autoryzowana, zanim zostanie dodana do swojej strefy. Istnieją dwie opcje, dla których należy umieścić ten kod filtrowania. Pierwsza opcja jest preferowaną opcją dla deweloperów stron. Można utworzyć metodę obsłużenia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzenia bezpośrednio w kodzie skryptu serwera stron sieci Web lub w pliku separacji kodu. Skojarz metodę ze zdarzeniem poprzez dodanie `OnAuthorizeWebPart` atrybutu do tagu <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolki na stronie, jak pokazano w poniższym przykładowym kodzie znaczników.  
  
```  
<asp:webpartmanager id="manager1" runat="server"   
   OnAuthorizeWebPart="manager1_AuthorizeWebPart" />  
```  
  
 Wszystkie metody niestandardowe należy <xref:System.Web.UI.WebControls.WebParts.WebPart> sprawdzać w każdej kontrolce kryteria filtrowania, a następnie na podstawie wyników przypisać wartość logiczną <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> do właściwości <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> obiektu, aby wskazać, czy <xref:System.Web.UI.WebControls.WebParts.WebPart> formant może być dołączony. Kod w przykładowej sekcji pokazuje, jak to zrobić.  
  
 Druga opcja, dla której należy umieścić kod filtrowania, ma dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy i przesłania metodę w celu sprawdzenia kryteriów filtrowania. Dwie metody, które można przesłonić <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> , to metoda <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> lub metoda. Chociaż każda metoda będzie działała, w większości przypadków zaleca się przesłonięcie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> metody, ponieważ zapewnia ona większą kontrolę programistyczną nad całym procesem autoryzacji, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> natomiast Metoda wykonuje tylko jedno konkretne zadanie. , która ma na celu podnoszenie poziomu zdarzenia i sprawdzenie programu obsługi. Aby zapoznać się z przykładem kodu <xref:System.Web.UI.WebControls.WebParts.WebPartManager> klasy niestandardowej, która <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> zastępuje metodę, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> Przeciążenie metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania niestandardowego programu obsługi zdarzeń dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> zdarzenia, dzięki czemu program obsługi może zapewnić niestandardowy kod filtrowania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> dla metody. Ten przykład może być typowym sposobem, aby deweloper strony zapewniał scenariusz filtrowania i autoryzację <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów do dodania do strony.  
  
 Na stronie sieci Web Zwróć uwagę, że `<asp:webpartmanager>` element `OnAuthorizeWebPart` ma atrybut o nazwie przypisanej do niego funkcji obsługi zdarzeń. Metoda sprawdza, czy kontrolki na stronie mają odpowiednie <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> wartości właściwości ustawione na `admin` i, jeśli tak, to zwraca `true`, co oznacza, że będą autoryzowane i dodawane do strony.  
  
> [!NOTE]
>  Należy zauważyć, że formanty, które nie mają żadnej wartości przypisanej do <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> właściwości, są również dodawane, ponieważ zakłada się, że nie są one częścią scenariusza filtrowania. Jest to typowe podejście w scenariuszu filtrowania: niektóre kontrolki będą filtrowane, a inne nie będą, ponieważ są one uznawane za dostępne dla wszystkich użytkowników.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 Ponieważ skonfigurowanie użytkowników w rolach wykracza poza zakres tego tematu, ten przykład kodu nie sprawdza ról użytkownika w filtrowaniu. Jednak scenariusz filtrowania formantów zgodnie z rolami użytkownika może być jednym z najczęściej używanych funkcji filtrowania. Jeśli masz role w swojej lokacji i chcesz sprawdzić role użytkownika w tej metodzie w celu filtrowania formantów, Metoda przypomina poniższy blok kodu (a prostsze podejście w poprzednim przykładzie kodu, który nie korzysta z ról).  
  
```vb  
Protected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  
  As Object, ByVal e As WebPartAuthorizationEventArgs)  
  
  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  
    If Roles.IsUserInRole(Page.User.Identity.Name, _  
      e.AuthorizationFilter) Then  
  
      e.IsAuthorized = True  
    Else  
      e.IsAuthorized = False  
    End If  
  End If  
  
End Sub  
```  
  
```csharp  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivated : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivated : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" /> Podnosi zdarzenie, aby wskazać, że załadowana została strona i jej kontrolki, a połączenia na stronie zostały aktywowane, aby rozpocząć udostępnianie danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> wywołuje zdarzenie po zakończeniu procesu ładowania strony. Metoda umożliwia dodanie procedury obsługi dla zdarzenia.  
  
 Deweloperzy stron mogą dodawać niestandardowe procedury obsługi dla zdarzenia, dodając `OnConnectionsActivated` atrybut `<asp:webpartmanager>` do elementu na stronie, a następnie przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy mogą zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" /> metodę w klasie pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> .</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivating">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivating (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivating(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivating (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivating(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivating : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivating : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" /> Podnosi zdarzenie, aby wskazać, że załadowana została strona i jej kontrolki, a także proces aktywowania połączeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> wywołuje zdarzenie, które zapewnia deweloperom mechanizm programistycznego dostosowywania procesu aktywowania połączeń.  
  
 Deweloperzy stron mogą dodawać niestandardowe procedury obsługi dla zdarzenia, dodając `OnConnectionsActivating` atrybut `<asp:webpartmanager>` do elementu na stronie, a następnie przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy mogą zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" /> metodę w klasie pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> .</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> , który zawiera dane zdarzenia skojarzone z zmienionym trybem wyświetlania.</param>
        <summary>Podnosi zdarzenie, aby wskazać, że formantukończyłprocesprzełączaniazjednegotrybuwyświetlanianainnynastroniesieciWeb.<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda w jego podstawowym formularzu po prostu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> wywołuje zdarzenie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> metodę. Na przykład po zmianie trybu wyświetlania można chcieć zmienić coś w wyglądzie interfejsu użytkownika (UI), w zależności od tego, który tryb wyświetlania jest zawarty we <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs.OldDisplayMode" /> właściwości. Może być również konieczne ukrycie określonej zawartości lub wyświetlenie pewnej kontrolki.  
  
Podczas przesłonięcia metody należy zwykle wywołać metodę podstawową jako ostatni krok przesłoniętej metody, tak aby kod niestandardowy był uruchamiany jako pierwszy, a zdarzenie jest zgłaszane jako ostatnie, wskazując, że zmiana trybu została zakończona.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanging(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanging (e As WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanging(System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawiera dane zdarzenia skojarzone z zmienianym trybem wyświetlania.</param>
        <summary>Podnosi zdarzenie, aby wskazać, że formantjestwtrakcieprzełączaniazjednegotrybuwyświetlanianainnynastroniesieciWeb.<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda w jego podstawowym formularzu po prostu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> wywołuje zdarzenie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Można zastąpić <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" /> metodę. Na przykład w przypadku zmiany trybu wyświetlania można sprawdzić, jaki jest nowy tryb wyświetlania (przy użyciu <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode" /> właściwości) i zmienić coś w interfejsie użytkownika (UI) w zależności od tego, jaki będzie nowy tryb wyświetlania. Jeśli masz niestandardowy tryb wyświetlania, możesz chcieć, aby niektóre kontrolki były widoczne, jeśli tryb niestandardowy będzie nowym trybem wyświetlania.  
  
Podczas przesłonięcia tej metody należy zwykle wywołać metodę podstawową jako pierwszy krok przesłoniętej metody, aby zdarzenie zostało wywołane w celu wskazania, że tryb wyświetlania zaczyna się zmieniać. Następnie kod niestandardowy może wprowadzać zmiany w interfejsie użytkownika, zanim zostanie wyświetlony nowy tryb wyświetlania.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="webPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, czyli pierwsze zdarzenie <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> w cyklu działania kontroli. <see cref="E:System.Web.UI.Control.Init" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje metodę bazową, która <xref:System.Web.UI.Control.Init> wywołuje zdarzenie dla kontrolki, a następnie przeprowadza kilka czynności przygotowawczych, takich jak upewnienie się, że na stronie istnieje <xref:System.Web.UI.WebControls.WebParts.WebPartManager> tylko jedno wystąpienie kontrolki i ładowanie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> dane personalizacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Na stronie znajduje <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> się inna kontrolka</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="webPartManager.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje tuż <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> przed renderowaniem kontrolki na stronie sieci Web. <see cref="E:System.Web.UI.Control.PreRender" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje metodę bazową, która <xref:System.Web.UI.Control.PreRender> wywołuje zdarzenie dla kontrolki, a następnie rejestruje kilka skryptów klienta, które są konieczne na stronach zawierających kontrolki składniki Web Part. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanged(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanged (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanged(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> po wybraniu nowego formantu lub jego wyczyszczeniu. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> wywołuje zdarzenie, które zwykle jest punktem w czasie, w którym deweloper może chcieć zmienić wygląd interfejsu użytkownika. Na przykład po wybraniu nowej <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki składniki Web Part zestaw kontrolny zmieni renderowanie nowo zaznaczonej kontrolki. Po wyczyszczeniu zaznaczenia kontrolki, renderowanie jest zwracane do normalnego.  
  
 Gdy użytkownik wybierze określoną <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkę do edycji <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> , wywoływana jest metoda. Gdy użytkownik zakończy edytowanie kontrolki i zamknie ją, z wynikiem wyczyszczenia zaznaczenia kontrolki, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Metoda zostanie ponownie wywołana.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Istnieje kilka opcji związanych <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> ze zdarzeniem, aby umożliwić deweloperom dostosowanie renderowania, które występuje po zmianie wybranej kontrolki. W kodzie deklaratywnym w obrębie <see langword="&lt;asp:webpartmanager&gt;" /> elementu można <see langword="OnSelectedWebPartChanged" /> ustawić atrybut i przypisać do niego nazwę metody niestandardowej. W metodzie niestandardowej można modyfikować renderowanie wybranych kontrolek, gdy wystąpi zdarzenie. Kolejną opcją jest dziedziczenie z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy i przesłonięcie metody. Trzecią opcją jest dostosowanie renderowania na poziomie strefy; na przykład można dziedziczyć z <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> klasy i zastąpić jej <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" /> metodę, aby dostosować renderowanie kontrolek wybranych i wyczyszczonych podczas procesu edycji.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanging(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanging (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanging(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje podczas procesu <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> zmiany aktualnie wybranego formantu. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje zdarzenie, które występuje podczas procesu zmiany <xref:System.Web.UI.WebControls.WebParts.WebPart> aktualnie zaznaczonej kontrolki. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontrolka używa tej metody i powiązanego zdarzenia, aby zapewnić możliwość anulowania procesu, w którym zmienia się wybrana kontrolka. Na przykład metoda jest wywoływana w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> metodzie, a także <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> w ramach metody, aby zapewnić sposób anulowania procesu. Jeśli użytkownik kliknie czasownik anulowania na kontrolce, która jest edytowana, formant nie jest już zaznaczony i wszystkie zmiany edycyjne nie zostaną zapisane, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Metoda umożliwia anulowanie zmian w edycji.  
  
> [!NOTE]
>  Metoda jest podobnie wywoływana podczas metod, które rozpoczynają i kończą proces łączenia <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki z inną kontrolką, aby umożliwić anulowanie tego procesu.  
  
 Deweloperzy stron mogą utworzyć niestandardową procedurę obsługi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> dla zdarzenia przez `OnSelectedWebPartChanging` dodanie atrybutu do `<asp:webpartmanager>` elementu w deklaratywnym znaczniku strony i przypisanie do atrybutu Nazwa metody niestandardowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="webPartManager.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia skojarzone z usunięciem formantu.</param>
        <summary>Podnosi zdarzenie podstawowe <see cref="E:System.Web.UI.Control.Unload" /> i <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> usuwa wystąpienie ze strony sieci Web.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdded(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdded (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdded(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> po dodaniu kontrolki do strony. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana podczas procesu <xref:System.Web.UI.WebControls.WebParts.WebPart> dodawania formantu (lub innego formantu serwera <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> , który jest dodawany do strefy) do strony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>  
  
 Deweloperzy stron mogą utworzyć niestandardową procedurę obsługi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> dla zdarzenia, `OnWebPartAdded` dodając atrybut do `<asp:webpartmanager>` elementu i przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdding">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdding(class System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdding (e As WebPartAddingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdding(System::Web::UI::WebControls::WebParts::WebPartAddingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit&#xA;override this.OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje w trakcie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dodawania formantu (lub kontrolki serwera lub <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> użytkownika) do strefy. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> wywołuje zdarzenie, aby wskazać, że formant jest dodawany. Metoda zawiera również opcję anulowania procesu dodawania. Po pomyślnym dodaniu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> formantu zostanie poniższe zdarzenie.  
  
 Deweloperzy stron mogą udostępnić niestandardową procedurę obsługi dla skojarzonego zdarzenia, dodając `OnWebPartAdding` atrybut `<asp:webpartmanager>` do elementu na stronie sieci Web, a następnie przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy, którzy tworzą <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy pochodne, mogą <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" /> zastąpić metodę, aby dostosować obsługę zdarzeń.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosed(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosed (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosed(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" /> Podnosi zdarzenie, aby sygnalizować, że formant został usunięty ze strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> Metoda podnosi<xref:System.Web.UI.WebControls.WebParts.WebPart> zdarzenie, aby wskazać, że formant (lub inny serwer lub kontrolka użytkownika) został pomyślnie zamknięty na stronie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>  
  
 Aby zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkę, należy usunąć ją ze strony, tak aby nie była renderowana, a także umieścić ją w specjalnym obiekcie zawierającym nazwę wykazu strony. Wykaz stron, który odnosi się do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolki, zachowuje odwołania do zamkniętych <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek dla każdej strony. Jeśli formant jest zadeklarowany na stronie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> w strefie, użytkownicy mogą przełączać stronę do trybu wyświetlania katalogu i dodawać z powrotem do strony wszystkie kontrolki, które zostały wcześniej zamknięte. <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>  
  
 Metoda oferuje deweloperom możliwość tworzenia niestandardowej obsługi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> dla zdarzenia. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> Deweloperzy stron mogą dodawać niestandardowe procedury obsługi dla zdarzenia, dodając `OnWebPartClosed` atrybut `<asp:webpartmanager>` do elementu na stronie, a następnie przypisując do atrybutu niestandardową nazwę metody. Jednym z użytecznych zadań, które może wykonać deweloper w tej metodzie, jest wyświetlenie symbolu zastępczego zamiast zamkniętej kontrolki z etykietą narzędzia, która informuje użytkowników, jak dodać kontrolkę z powrotem do strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosing(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosing (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosing(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje podczas procesu <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub usuwania formantu serwera ze strony. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> wywołuje zdarzenie, aby wskazać, że formant jest w trakcie zamykania lub usuwania ze strony. Metoda zawiera również opcję anulowania procesu zamykania. Jeśli formant zostanie pomyślnie usunięty ze strony, to zdarzenie jest <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> następujące.  
  
 Deweloperzy stron mogą udostępnić niestandardową procedurę obsługi dla skojarzonego zdarzenia, dodając `OnWebPartClosing` atrybut `<asp:webpartmanager>` do elementu na stronie sieci Web, a następnie przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy, którzy tworzą <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy pochodne, mogą <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> zastąpić metodę, aby dostosować obsługę zdarzeń.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleted(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleted (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleted(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Wywołuje zdarzenie, które występuje <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> po trwale usunięciu kontrolki ze strony. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana podczas procesu <xref:System.Web.UI.WebControls.WebParts.WebPart> usuwania kontrolki (lub innego formantu serwera <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> , który jest dodawany do strefy) ze strony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>  
  
 Deweloperzy stron mogą utworzyć niestandardową procedurę obsługi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> dla zdarzenia, `OnWebPartDeleted` dodając atrybut do `<asp:webpartmanager>` elementu i przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleting(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleting (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleting(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, co oznacza, że trwa proces <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> usuwania dynamicznej kontroli (lub kontrolki serwera lub użytkownika zawartej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> w strefie). <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można usuwać <xref:System.Web.UI.WebControls.WebParts.WebPart> tylko kontrolki dynamiczne i gdy kontrolka zostanie usunięta, wystąpienie formantu zostanie trwale usunięte ze strony i nie można go przywrócić. Formanty <xref:System.Web.UI.WebControls.WebParts.WebPart> dynamiczne są tymi, które są dodawane programowo lub z wykazu składniki Web Part, zamiast formantów statycznych, które są zadeklarowane w adjustacji strony sieci Web.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> wywołuje zdarzenie, aby wskazać, że formant zostanie trwale usunięty ze swojej strefy. Ta metoda zapewnia również możliwość anulowania procesu usuwania. Jeśli formant został pomyślnie usunięty ze strony, to zdarzenie jest <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> następujące.  
  
 Deweloperzy stron mogą udostępnić niestandardową procedurę obsługi dla skojarzonego zdarzenia, dodając `OnWebPartDeleting` atrybut `<asp:webpartmanager>` do elementu na stronie sieci Web, a następnie przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy, którzy tworzą <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy pochodne, mogą <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> zastąpić metodę, aby dostosować obsługę zdarzeń.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoved(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoved (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoved(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> po przeniesieniu kontrolki do innej lokalizacji na stronie. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda podnosi zdarzenie na bardzo końcu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> metody, co zapewnia, że proces przesuwania kontrolki został ukończony przed uruchomieniem dowolnego kodu w programie obsługi zdarzeń. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> Zdarzenie jest zgłaszane, gdy kontrolka jest przenoszona w bieżącej strefie lub do innej strefy, i nie ma znaczenia, czy ruch jest wykonywany programowo, czy przez użytkownika przeciągając kontrolkę.  
  
 Deweloperzy stron mogą utworzyć niestandardową procedurę obsługi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> dla zdarzenia, `OnWebPartMoved` dodając atrybut do `<asp:webpartmanager>` elementu i przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoving(class System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoving (e As WebPartMovingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoving(System::Web::UI::WebControls::WebParts::WebPartMovingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit&#xA;override this.OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, co oznacza, <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> że kontrolka lub serwer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> lub użytkownik w strefie jest w trakcie przenoszenia. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje zdarzenie, które występuje, gdy lubinnyformantserwerajestprzenoszonywobrębieswojejstrefylubdoinnejstrefy.<xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Ta metoda zapewnia również możliwość anulowania przenoszonego procesu. Jeśli przeniesienie zostało wykonane pomyślnie, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> poniższe zdarzenie.  
  
 Deweloperzy stron mogą udostępnić niestandardową procedurę obsługi dla skojarzonego zdarzenia, dodając `OnWebPartMoving` atrybut `<asp:webpartmanager>` do elementu na stronie sieci Web, a następnie przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy, którzy tworzą <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy pochodne, mogą <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" /> zastąpić metodę, aby dostosować obsługę zdarzeń.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje po ustanowieniu połączenia między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolkami. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda podnosi swoje odpowiednie zdarzenie na końcu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> metody, co zapewnia, że kroki niezbędne do połączenia dwóch kontrolek są wykonywane przed uruchomieniem dowolnego kodu w programie obsługi zdarzeń. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>  
  
 Metoda zapewnia programistyczną kontrolę nad procesem tworzenia połączeń, a skojarzone zdarzenie jest wygodnym punktem, w którym należy zaktualizować interfejs użytkownika (UI) lub powiadomić użytkownika o ustanowieniu połączenia.  
  
 Deweloperzy stron mogą utworzyć niestandardową procedurę obsługi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> dla zdarzenia, `OnWebPartsConnected` dodając atrybut do `<asp:webpartmanager>` elementu i przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje podczas procesu ustanawiania połączenia między dwoma <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolkami serwera lub <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> użytkownika znajdującymi się w strefie. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> wywołuje zdarzenie, które występuje, gdy dwa formanty podejmują próbę nawiązania połączenia. Metoda umożliwia anulowanie próby połączenia. Jeśli połączenie zakończy się pomyślnie, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> poniższe zdarzenie.  
  
 Deweloperzy stron mogą udostępnić niestandardową procedurę obsługi dla skojarzonego zdarzenia, dodając `OnWebPartsConnecting` atrybut `<asp:webpartmanager>` do elementu na stronie sieci Web, a następnie przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy, którzy tworzą <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy pochodne, mogą <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> zastąpić metodę, aby dostosować obsługę zdarzeń.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, które występuje po zakończeniu połączenia między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolkami. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda podnosi swoje odpowiednie zdarzenie na końcu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> metody, która przeprowadza proces kończenia połączenia między dwoma kontrolkami. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>  
  
 Metoda zapewnia programistyczną kontrolę nad procesem kończenia połączenia, dzięki czemu deweloperzy mogą informować użytkownika, wprowadzać zmiany w interfejsie użytkownika lub wprowadzać inne zmiany w aplikacji.  
  
 Deweloperzy stron mogą utworzyć niestandardową procedurę obsługi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> dla zdarzenia, `OnWebPartsDisconnected` dodając atrybut do `<asp:webpartmanager>` elementu i przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary>Podnosi zdarzenie, co oznacza, że dwie <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki serwera <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> lub użytkownika w strefie są w trakcie kończenia połączenia. <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> Metoda<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> wywołuje zdarzenie, które występuje, gdy dwa kontrolki kończą połączenie. Metoda ta umożliwia anulowanie procesu rozłączania. Po pomyślnym usunięciu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> połączenia następuje poniższe zdarzenie.  
  
 Deweloperzy stron mogą udostępnić niestandardową procedurę obsługi dla skojarzonego zdarzenia, dodając `OnWebPartsDisconnecting` atrybut `<asp:webpartmanager>` do elementu na stronie sieci Web, a następnie przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy, którzy tworzą <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy pochodne, mogą <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> zastąpić metodę, aby dostosować obsługę zdarzeń.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Personalization">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Personalization As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ Personalization { System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Personalization : System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do obiektu, który zawiera dane personalizacji strony sieci Web.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> Zawierający dane personalizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zapewnia sposób <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> dostępu do obiektu, który jest skojarzony <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ze stroną za pomocą kontrolki. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Za pomocą tej właściwości można uzyskać dostęp do różnych elementów członkowskich obiektu personalizacji. Można na przykład użyć <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> metody, aby przełączyć zakres personalizacji strony z udostępnionego do zakresu użytkownika lub odwrotnie. Możesz również sprawdzić bieżący zakres personalizacji strony, niezależnie od tego, czy Personalizacja jest nawet włączona na stronie, który dostawca jest używany na potrzeby danych personalizacji i nie tylko.  
  
 Należy zauważyć, że dane, do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> których odwołuje się właściwość, to tylko dane personalizacji na poziomie strony <xref:System.Web.UI.WebControls.WebParts.WebPartManager> , które są śledzone przez formant. Dane personalizacji specyficzne dla kontrolki, takie jak wartości właściwości Personalizable w <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkach, nie są częścią <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> właściwości.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na temat personalizacji składniki Web Part, zobacz [Omówienie personalizacji składniki Web Part](https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> jak używać właściwości programowo.  
  
 Poniższa Strona sieci Web umożliwia użytkownikowi wprowadzanie trybu edycji w celu edytowania niektórych aspektów <xref:System.Web.UI.WebControls.Calendar> formantu. Przycisk **Przełącz zakres** przełącza stronę do zakresu personalizacji użytkownika lub współużytkowanego. Przyciski **Edytuj** i **Tryb przeglądania** przełączają stronę do odpowiedniego trybu wyświetlania. Zwróć uwagę, że `<script>` w sekcji tag pliku dwie metody obsługujące zdarzenia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> używają właściwości, aby uzyskać dostęp do użytecznych elementów członkowskich obiektu bazowego. W odniesieniu do tych <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> metod użyto metody <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> i właściwości obiektu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> , do którego uzyskuje się dostęp za pomocą właściwości.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Personalization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/CS/wpmgrPersonalizationCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Personalization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/VB/wpmgrPersonalizationVB.aspx#1)]  
  
 Aby można było uruchomić przykładowy kod, należy również umożliwić użytkownikowi lub użytkownikom Personalizowanie stron w zakresie udostępnionym. Dodaj wpis do pliku Web. config znajdującego się w `<system.web>` sekcji, który wygląda podobnie do poniższego znacznika.  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow  
        users="[Replace the text and brackets with a user name or   
           group.]"  
        roles="admin"   
        verbs="enterSharedScope"  />  
    </authorization>  
  </personalization>  
</webParts>   
```  
  
 Po załadowaniu strony w przeglądarce kliknij przycisk **Przełącz zakres** i zwróć uwagę na to, że na stronie jest wyświetlany zakres udostępniony. Kliknij przycisk **Edytuj tryb** , aby zmienić tryb wyświetlania, kliknij menu czasowniki dla widocznej kontrolki i wybierz polecenie **Edytuj** z menu. Zauważ, że interfejs użytkownika (UI) dla obu kontrolek edycji jest wyświetlany. Teraz kliknij przycisk **Przeglądaj** , aby powrócić do normalnego przeglądania. Jeśli strona wskazuje, że znajduje się w zakresie udostępnionym, kliknij pozycję **Przełącz zakres** ponownie, aby upewnić się, że strona jest w zakresie użytkownika. Następnie wykonaj te same czynności, aby ponownie edytować formant, ale zauważ, że teraz w interfejsie użytkownika edycji nie <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> jest wyświetlany formant. Oznacza to, że ta kontrolka działa tylko wtedy, gdy strona znajduje się w zakresie współużytkowanych personalizacji.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Omówienie personalizacji składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScript">
      <MemberSignature Language="C#" Value="protected virtual void RegisterClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RegisterClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RegisterClientScript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RegisterClientScript();" />
      <MemberSignature Language="F#" Value="abstract member RegisterClientScript : unit -&gt; unit&#xA;override this.RegisterClientScript : unit -&gt; unit" Usage="webPartManager.RegisterClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia formantowi emitowanie skryptu po stronie klienta, który jest używany dla różnych funkcji personalizacji, takich <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> jak przeciąganie formantów na stronie sieci Web. <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartManager.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> , Który odbiera zawartość kontrolki do zapisu na stronie.</param>
        <summary>Przesłonięty, <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> aby zapobiec renderowania jakiejkolwiek zawartości przez formant.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="webPartManager.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje dane stanu dla <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki, aby dane mogły zostać przywrócone w przyszłych żądaniach do strony sieci Web, która zawiera kontrolkę.</summary>
        <returns><see cref="T:System.Object" /> Aby można było zawierać dane zapisanego stanu formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zapisuje dane stanu dla właściwości, które powinny być utrwalane na stronach ogłaszania zwrotnego stron <xref:System.Web.UI.Control.EnableViewState%2A> , nawet gdy właściwość jest ustawiona na. `false` <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.SaveCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> , który zawiera dane stanu do załadowania.</param>
        <summary>Zapisuje niestandardowe dane stanu personalizacji utrzymywane przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formant, dzięki czemu te dane mogą być ponownie ładowane po każdym ponownym załadowaniu strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A> Metoda ma krytyczne znaczenie w procesie personalizacji, ponieważ umożliwia przechowywanie spersonalizowanych ustawień użytkownika na potrzeby przyszłych sesji przeglądarki i wizyt na stronie. Metoda zapisuje niestandardowe dane stanu personalizacji, w tym następujące elementy: formanty dynamiczne <xref:System.Web.UI.WebControls.WebParts.WebPart> lub serwerowe, które zostały dodane do strony lub usunięte ze strony; kontrolki przenoszone na stronie, a także połączenia dynamiczne, które mają zostało utworzone lub usunięte.  
  
 Nie można wywołać tej metody bezpośrednio z poziomu kodu. Można jednak wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> metodę, która sama wywołuje tę metodę, aby zapisać dane personalizacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy mogą zastąpić tę metodę w klasie pochodnej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> , aby dostosować proces zapisywania danych personalizacji.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedWebPart As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ SelectedWebPart { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki serwera, która jest aktualnie wybrana do edycji lub do tworzenia połączenia z inną kontrolką.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Kontrolka, która jest aktualnie wybrana do edycji lub tworzenia połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca odwołanie <xref:System.Web.UI.WebControls.WebParts.WebPart> do kontrolki innego serwera, która jest aktualnie wybrana do edycji lub do tworzenia połączenia z inną kontrolką. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Formant zawiera kilka przydatnych metod i zdarzeń do obsługi procesu wybierania kontrolki. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Zdarzenie występuje zaraz po wybraniu kontrolki, ale przed wprowadzeniem jakichkolwiek zmian. Aby wykonać niektóre akcje na kontrolce po jej wybraniu, Zastąp <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> metodę. Na przykład może zajść potrzeba zmiany wyglądu kontrolki, która jest zaznaczona, ale nie została jeszcze zmieniona, aby wyróżnić wizualizację, która jest zaznaczona.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Zdarzenie występuje zaraz po zmianie wybranej kontrolki. Aby wykonać niektóre akcje na kontrolce po jej zmianie, Zastąp <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanged As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ SelectedWebPartChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie zaznaczenia jednej <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki i przeniesieniu jej do innej kontrolki na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tego zdarzenia można używać w połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> metodą zmiany interfejsu użytkownika (UI) wybranej kontrolki. Na przykład, jeśli użytkownik przejdzie do trybu projektowania (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>), a następnie <xref:System.Web.UI.WebControls.WebParts.WebPart> wybierze formant z zamiarem przeciągnięcia go do nowej pozycji, często jest możliwe zmiana renderowania wybranej kontrolki, na przykład przez zmianę koloru jej obramowanie lub tło, gdy jest zaznaczone.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na temat używania zdarzeń, [zobacz How to: Korzystaj z zdarzeń w aplikacji](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)formularzy sieci Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanging As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ SelectedWebPartChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu zmiany, który <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolka serwera jest aktualnie zaznaczona na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tego zdarzenia można używać w połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> metodą. Deweloperzy stron mogą utworzyć procedurę obsługi zdarzeń w kodzie poprzez dodanie `OnSelectedWebPartChanging` atrybutu `<asp:webpartmanager>` do elementu na stronie i ustawienie wartości atrybutu na nazwę metody niestandardowej, która będzie obsługiwać zdarzenie.  
  
 To zdarzenie jest wywoływane podczas procesu rozpoczęcia lub zakończenia połączenia między kontrolkami, a kiedy rozpoczyna i kończy edycję kontrolki. Aby uzyskać szczegółowe informacje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Zobacz metodę.  
  
 Zwykle, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> zdarzenie jest zgłaszane jako bezpośredni wynik akcji użytkownika, która zmienia wybrany formant, zdarzenie może być anulowane. Istnieje jednak scenariusz, w którym nie można anulować zdarzenia. Jeśli formant zostanie usunięty, kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPart> , które zawiera, muszą być zamknięte, w przeciwnym razie zostałyby oddzielone. <xref:System.Web.UI.WebControls.WebParts.WebPartZone> W takim przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka <xref:System.Web.UI.WebControls.WebParts.WebPart> zamknie kontrolki, a nie użytkownika i musi określić, która kontrolka jest aktualnie zaznaczona, i kiedy zmienić zaznaczenie bez żadnej możliwości przerwania, aby można było ukończyć proces czyszczenia wszystkie kontrolki. Dlatego przez zaprojektowanie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> metody nie można anulować w tym scenariuszu. Dla zdarzenia powiązanego, które można anulować, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> zdarzenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPersonalizationDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPersonalizationDirty();" />
      <MemberSignature Language="F#" Value="member this.SetPersonalizationDirty : unit -&gt; unit" Usage="webPartManager.SetPersonalizationDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia flagę wskazującą, że niestandardowe dane personalizacji <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> dla formantu zostały zmienione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> Metoda ustawia flagę, która ostatecznie powoduje, że składniki personalizacji w składniki Web Part formancie mają zapisywać zaktualizowane dane personalizacji. Aby uzyskać więcej informacji na temat scenariuszy, które mogą spowodować zmiany danych personalizacji śledzonych <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przez formant, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Zobacz właściwość.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> Metody nie można wywołać bezpośrednio z kodu i nie można jej zastąpić, ponieważ jest używana wewnętrznie przez zestaw kontrolny składniki Web Part w ramach funkcji personalizacji składniki Web Part.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Metoda może być wywoływana przez klasę pochodną <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> . Może to być przydatne, jeśli chcesz dostosować składniki personalizacji zestawu kontrolek składniki Web Part i w ten sposób kontrolować proces ustawiania flag dla danych personalizacji.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedWebPart">
      <MemberSignature Language="C#" Value="protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSelectedWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetSelectedWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.SetSelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.SetSelectedWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Wybrana <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolka lub serwer.</param>
        <summary>Ustawia wartość <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> właściwości równą aktualnie zaznaczonej lub kontrolce serwer. <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana podczas procesów, które zaczynają lub kończą edycję kontrolki określonej `webPart` przez parametr, oraz te, które rozpoczynają lub kończą połączenie, które `webPart`obejmują. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A>  
  
 Na początku procesu `webPart` edycji i połączenia jest formant, który został wybrany do edycji lub aby można było wprowadzić połączenie.  
  
 Na końcu procesu `null` edycji i połączenia jest przenoszona <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> do metody, która powoduje, że aktualnie wybrana kontrolka nie jest już zaznaczona.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pusty ciąg (""), tak aby żadna skórka nie mogła zostać <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> zastosowana do kontrolki.</summary>
        <value>Pusty ciąg, który uniemożliwia <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formantowi przypisanie karnacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zastępuje dziedziczonej <xref:System.Web.UI.Control.SkinID%2A?displayProperty=nameWithType> właściwości, aby zapobiec <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolce, która jest niewidzialną kontrolką, z używania karnacji. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> Implementacja właściwości uniemożliwia przypisanie karnacji przez zawsze zwrócenie pustego ciągu z `get` metody dostępu i zawsze zgłasza wyjątek, jeśli istnieje próba ustawienia wartości `set` w metodzie dostępu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Podjęto próbę ustawienia wartości właściwości.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kolekcji wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> obiektów na stronie sieci Web, które są zdefiniowane jako połączenia statyczne.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> Zawiera wszystkie połączenia statyczne na stronie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> właściwość jest używana <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przez formant do śledzenia wszystkich połączeń statycznych na stronie i zarządzania nimi. Połączenie statyczne, w przeciwieństwie do połączenia dynamicznego, nie musi być dodawane do strony za każdym razem, gdy strona jest renderowana.  
  
 Kolekcja, do której odwołuje się ta właściwość, zawiera wszystkie połączenia statyczne istniejące na stronie, niezależnie od tego, czy są one tworzone `<asp:webpartconnection>` programowo czy określone za pomocą elementu w znaczniku strony.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> właściwości.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Plik kodu źródłowego, który zawiera dwa niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki i niestandardowy interfejs.  
  
-   Strona sieci Web zawierająca dwie niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki, które mogą być połączone `<asp:webpartmanager>` i element.  
  
-   Wyjaśnienie, jak działa przykład w przeglądarce.  
  
 Poniższy kod zawiera tylko część strony sieci Web z przykładu. Należy również uzyskać pierwsze dwie części przykładu — niestandardowa kontrolka użytkownika i kod źródłowy niestandardowych formantów i interfejsów — z przykładowej sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Omówienie klasy. W tym temacie objaśniono również opcje kompilowania <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek.  
  
 Trzecią częścią przykładu kodu jest strona sieci Web. Znaczniki deklaratywne dla strony zawierają `Register` dyrektywy zarówno dla kontrolki użytkownika, jak i kontrolek niestandardowych. Istnieje element, element, który zawiera kontrolki `<asp:connectionszone>` niestandardowe i element. `<asp:webpartzone>` `<asp:webpartmanager>` Zwróć uwagę, że `Page_Load` w metodzie kod sprawdza, czy połączenie już istnieje i, jeśli nie, definiuje dostawcę, odbiorcę i odpowiednie punkty połączenia, a następnie dodaje nowe połączenie do zestawu połączeń statycznych, do których odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> właściwość.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Po załadowaniu strony sieci Web w przeglądarce kliknij kontrolkę lista rozwijana **tryb wyświetlania** i wybierz pozycję **Połącz** , aby przełączyć stronę w tryb połączenia. Tryb połączenia używa elementu `<asp:connectionszone>` , aby umożliwić tworzenie połączeń między kontrolkami. W trybie Połącz kliknij strzałkę w dół na pasku tytułu kontrolki **Kod pocztowy** , aby uaktywnić swoje menu zlecenia, a następnie kliknij przycisk **Połącz**. Gdy zostanie wyświetlony interfejs użytkownika połączenia (UI), Zauważ, że połączenie zostało już utworzone przy użyciu kodu zawartego w `Page_Load` metodzie. Jeśli powrócisz do tej strony w późniejszej sesji przeglądarki, to połączenie statyczne zostanie już nawiązane i nie będzie konieczne ich odtworzenie przy każdym załadowaniu strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SupportedDisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedDisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ SupportedDisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedDisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję tylko do odczytu dla wszystkich trybów wyświetlania, które są dostępne na określonej stronie sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> , który zawiera <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> zestaw obiektów dostępnych na określonej stronie sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Właściwość zawiera tylko tryby wyświetlania, które są rzeczywiście dostępne na stronie, pod warunkiem, że na stronie są obecne typy kontrolek strefy.  
  
> [!NOTE]
>  Tryby wyświetlania można wyłączyć, a gdy tryb wyświetlania jest wyłączony, nie jest dodawany do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> kolekcji, nawet jeśli na stronie znajduje się odpowiedni typ strefy, która obsługuje ten tryb wyświetlania.  
  
 Tryb przeglądania i tryb projektowania są zawsze obsługiwane. Tryby wyświetlania, które mogą się różnić, są trybami Edit, Catalog i Connect. Każdy z tych trybów wyświetlania jest skojarzony z określonym typem <xref:System.Web.UI.WebControls.WebParts.ToolZone> kontrolki. Jest to obecność specjalnie wpisanej strefy na stronie sieci Web, która powoduje dodanie określonego trybu wyświetlania do kolekcji, do której odwołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> się właściwość. Na przykład jeśli strona sieci Web zawiera <xref:System.Web.UI.WebControls.WebParts.EditorZone> strefę, ale <xref:System.Web.UI.WebControls.WebParts.CatalogZone> nie strefę, tryb wyświetlania edycji jest jednym z obsługiwanych trybów na tej stronie, ale tryb wyświetlania wykazu nie jest obsługiwany.  
  
> [!NOTE]
>  Właściwość różni się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> od właściwości, która odwołuje się do kolekcji zawierającej wszystkie tryby wyświetlania, które są dostępne dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager> bieżącej kontrolki, nawet te, które nie są obsługiwane na określonej stronie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje programistyczne użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> właściwości. Kod używa tej właściwości do wypełniania listy tylko trybami wyświetlania dostępnymi na bieżącej stronie sieci Web.  
  
 Na tej stronie znajdują się trzy Obsługiwane tryby wyświetlania: Przeglądaj, Projektuj i Edytuj. Pierwsze dwa są zawsze dostępne, a tryb edycji jest dostępny w tym przykładzie kodu, ponieważ strona zawiera <xref:System.Web.UI.WebControls.WebParts.EditorZone> kontrolkę. Tryby wyświetlania wykazu i połączenia nie są wyświetlane, ponieważ odpowiadające im strefy nie znajdują się na tej stronie.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/CS/wpmgrSuppDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/VB/wpmgrSuppDisplayModesvb.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce można użyć kontrolki lista rozwijana w celu przełączenia strony z trybu przeglądania do trybu projektowania, a następnie do trybu edycji. W trybie edycji można kliknąć menu zleceń rozwijanych w nagłówku jednej z formantów serwera, a następnie wybrać pozycję **Edytuj** , aby edytować formant.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Tryby wyświetlania strony składniki Web Part</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsDirty As Boolean Implements IPersonalizable.IsDirty" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::WebParts::IPersonalizable::IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dane stanu personalizacji niestandardowe zarządzane przez <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formant zostały zmienione na stronie sieci Web.</summary>
        <value>Wartość logiczna wskazująca, czy dane stanu personalizacji zostały zmienione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość umożliwia obiektom wywołującym określenie, czy dane stanu personalizacji zarządzane <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przez formant zostały zmienione. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Gdy użytkownicy spersonalizują szczegóły na poziomie strony, na przykład przez zmianę układu strony, utworzenie lub usunięcie połączeń oraz dodanie lub usunięcie kontrolek, dane personalizacji zarządzane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant są zmieniane. Jest to metoda przekazująca, która zwraca do wywołujących wartość właściwości chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> , do której nie można uzyskać dostępu bezpośrednio przez wywołujących.  
  
> [!NOTE]
>  Właściwość nie wskazuje, czy wartości właściwości Personalizable lub poszczególne właściwości, które wpływają na wygląd poszczególnych <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, zostały zmienione. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Personalizacja na poziomie formantu jest śledzona osobno dla każdej kontrolki. Właściwość wskazuje tylko, czy dane personalizacji, które znajdują się na poziomie strony i są <xref:System.Web.UI.WebControls.WebParts.WebPartManager> zarządzane przez formant, uległy zmianie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>  
  
 Na poniższej liście opisano niektóre typowe wystąpienia personalizacji, które <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> spowodują `true`, że właściwość zwróci wartość, co oznacza, że <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka ma pewne zmienione dane personalizacji:  
  
-   Zamykanie statycznej <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki (lub kontrolki serwera lub użytkownika) na stronie.  
  
-   Przywracanie zamkniętej kontrolki statycznej <xref:System.Web.UI.WebControls.WebParts.WebPart> z wykazu stron z powrotem do strony.  
  
-   Przeniesienie dowolnej kontrolki w jej strefie lub do innej strefy.  
  
-   Dodawanie kontrolki z wykazu <xref:System.Web.UI.WebControls.WebParts.WebPart> lub formantów serwera lub Dodawanie kontrolki programistycznie.  
  
-   Tworzenie połączenia między dwoma <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkami albo programowo lub za pomocą interfejsu użytkownika połączenia.  
  
-   Usuwanie połączenia między dwoma <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkami albo programowo lub za pomocą interfejsu użytkownika połączenia.  
  
 Aby uzyskać dostęp do tej wartości właściwości, należy rzutować <xref:System.Web.UI.WebControls.WebParts.WebPartManager> wystąpienie kontroli <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> na interfejs; następnie można odczytać <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> wartość właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje proste użycie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> właściwości, aby wskazać niektóre typowe wystąpienia personalizacji stron, które <xref:System.Web.UI.WebControls.WebParts.WebPartManager> powodują zmianę danych personalizacji kontrolki.  
  
 Przykład kodu ma cztery części:  
  
-   Kontrolka użytkownika, która pozwala na zmianę trybów wyświetlania na stronie zawierającej kontrolki składniki Web Part.  
  
-   Plik źródłowy zawierający kod dla dwóch formantów niestandardowych <xref:System.Web.UI.WebControls.WebParts.WebPart> , które mogą być połączone, oraz interfejs.  
  
-   Strona sieci Web, która obsługuje wszystkie kontrolki.  
  
-   Wyjaśnienie, jak działa przykład kodu.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika do zmiany trybów wyświetlania. Kod źródłowy dla kontrolki użytkownika można uzyskać z sekcji <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przykładowej klasy Przegląd. Aby uzyskać informacje na temat trybów wyświetlania i sposobu działania kontrolki użytkownika [, zobacz Przewodnik: Zmienianie trybów wyświetlania na stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)składniki Web Part.  
  
 Druga częścią przykładu jest plik źródłowy z kontrolkami niestandardowymi i interfejsem. Należy zauważyć, `IZipCode` że interfejs uwidacznia jedną metodę i że metoda zaimplementowana w kontrolce `ZipCodeWebPart` niestandardowej służy jako metoda `ZipCodeWebPart` wywołania zwrotnego, która umożliwia działanie jako dostawca w scenariuszu połączenia. Inna kontrolka `WeatherWebPart`,, działa jako kontrola konsumenta w połączeniu; może korzystać z określonego interfejsu dostarczonego przez `ZipCodeWebPart`. W rzeczywistej aplikacji program `WeatherWebPart` może wykorzystać spersonalizowaną wartość kodu pocztowego od dostawcy, a następnie udostępnić użytkownikom graficzne informacje o pogodzie.  
  
 Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej; w związku z tym należy `Register` zauważyć, że dyrektywa dla tego składnika w górnej części strony sieci Web `TagPrefix` zawiera `Namespace` tylko atrybuty `Assembly` i bez atrybutu. Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/ZipCodeComponent.vb#2)]  
  
 Trzecią częścią przykładu kodu jest strona sieci Web. Należy zauważyć, że zawiera <xref:System.Web.UI.WebControls.WebParts.WebPartZone> dwie strefy, z których pierwszy zawiera dwie kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardowe. Istnieje również <xref:System.Web.UI.WebControls.WebParts.CatalogZone> strefa, która zawiera standardowy <xref:System.Web.UI.WebControls.Calendar> formant, który użytkownicy mogą dodać do strony. `<asp:connectionszone>` Element udostępnia interfejs użytkownika połączenia, który umożliwia użytkownikom tworzenie połączeń między kontrolkami. W metodzie należy zauważyć, że sprawdza, czy dane personalizacji uległy zmianie, a jeśli tak, aktualizuje `Label1`tekst. `Page_PreRender`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/wpmgrIsDirtyCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/wpmgrIsDirtyVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce spróbuj utworzyć niektóre scenariusze wymienione w sekcji uwagi tego tematu, które spowodują zmianę danych personalizacji. Podczas wprowadzania różnych zmian, gdy zmiana obejmuje jeden z scenariuszy personalizacji śledzonych przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant, tekst `Label1` kontrolki jest wyświetlany, aby wskazać, że dane personalizacji uległy zmianie. Możesz na przykład:  
  
-   Utwórz połączenie między kontrolkami przez kliknięcie przycisku **Połącz elementy WebPart** .  
  
-   Użyj kontrolki lista rozwijana **tryb wyświetlania** , aby przełączyć stronę do trybu katalogowego i dodać formant **My Calendar** do drugiej <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefy.  
  
-   Zmień stronę z powrotem w tryb przeglądania, kliknij menu czasowniki (pokazane ze symbolem strzałki na pasku tytułu) dla kontrolki **mój kalendarz** , a następnie wybierz pozycję **Zamknij** , aby zamknąć ją i dodać do wykazu stron.  
  
-   Zwróć stronę do trybu katalogu i Dodaj kontrolkę **mój kalendarz** z powrotem do strony.  
  
-   Użyj kontrolki **tryb wyświetlania** , aby przełączyć stronę do trybu projektowania i zmienić układ formantów, przeciągając jeden lub więcej z nich do innej strefy lub do innej pozycji w tej samej strefie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Load">
      <MemberSignature Language="C#" Value="void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Load (state As PersonalizationDictionary) Implements IPersonalizable.Load" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Load;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> , który zawiera dane stanu do załadowania.</param>
        <summary>Zwraca poprzednio zapisane niestandardowe dane stanu personalizacji, które muszą zostać załadowane <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> do kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest implementacją <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=nameWithType> metody, która zapewnia sposób, aby zestaw kontrolek składniki Web Part mógł bezpośrednio uzyskać dostęp do chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=nameWithType> metody. Gdy ta metoda jest wywoływana, przechowuje niestandardowe spersonalizowane dane zarządzane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant i, które zostały wcześniej zapisane w trwałym magazynie danych do późniejszego użycia w procesie inicjalizacji.  
  
> [!NOTE]
>  W większości przypadków kod dewelopera strony i kontroli nie musi wywoływać tej metody, ponieważ jest głównie używany przez zestaw kontrolek składniki Web Part jako mechanizm pobierania danych personalizacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Jednym z scenariuszy, w którym deweloperzy używają tej metody jest tworzenie niestandardowych platform personalizacji do użycia zamiast części dostarczonej przez zestaw kontrolek składniki Web Part. W takich przypadkach deweloperzy mogą dziedziczyć z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy i <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> przesłaniać metodę w celu zwrócenia niestandardowej implementacji <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> obiektu. Obiekt niestandardowy <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> wywoła implementację <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> metody w odpowiednim czasie w celu załadowania niestandardowych danych personalizacji.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Save">
      <MemberSignature Language="C#" Value="void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Save (state As PersonalizationDictionary) Implements IPersonalizable.Save" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Save;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> , który zawiera dane stanu do zapisania.</param>
        <summary>Zapisuje niestandardowe dane o stanie personalizacji, które są <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> zarządzane przez formant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest implementacją <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=nameWithType> metody, która zapewnia sposób, aby zestaw kontrolek składniki Web Part mógł bezpośrednio uzyskać dostęp do chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=nameWithType> metody. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> Po wywołaniu tej metody zapisuje wszystkie spersonalizowane dane zarządzane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant do stałego magazynu danych skonfigurowanego dla aplikacji składniki Web Part.  
  
> [!NOTE]
>  W większości przypadków kod dewelopera strony i kontroli nie musi wywoływać tej metody, ponieważ jest głównie używany przez zestaw kontrolek składniki Web Part jako mechanizm do zapisywania danych personalizacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Jednym z scenariuszy, w którym deweloperzy będą współpracować z tą metodą, jest utworzenie niestandardowej struktury personalizacji, która ma być używana zamiast części dostarczonej przez składniki Web Part zestaw kontrolek. W takich przypadkach deweloperzy mogą dziedziczyć z <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> klasy i <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> przesłaniać metodę w celu zwrócenia niestandardowej implementacji <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> obiektu. Obiekt niestandardowy <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> wywoła implementację <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> metody w odpowiednim czasie w celu zapisania niestandardowych danych personalizacji.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webPartManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stosuje dane stanu personalizacji do <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> kontrolki i wywołuje metodę bazową, aby umożliwić śledzenie zmian danych stanu widoku dla kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany w danych stanu widoku są przechowywane w <xref:System.Web.UI.StateBag> obiekcie i można uzyskać do nich dostęp za pomocą <xref:System.Web.UI.Control.ViewState%2A> właściwości kontrolki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która umożliwia widoczność formantów podrzędnych.</summary>
        <value>Wartość logiczna wskazująca, czy <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> formant i jego kontrolki podrzędne są widoczne. <see langword="true" />we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formant przesłania Właściwość podstawową <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> , aby `true` zawsze zwracała wartość <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> właściwości. <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Mimo że <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> `true` formant nie jest widoczny, właściwość musi być ustawiona na tak, aby wszystkie kontrolki podrzędne były widoczne domyślnie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager>  
  
 Jeśli spróbujesz ustawić wartość <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> właściwości, zawsze generuje błąd, <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ponieważ formant przesłonił zachowanie właściwości podstawowych i uniemożliwia przypisanie dowolnej wartości do właściwości.  
  
 Ta właściwość nie jest powiązana z projektantami wizualizacji, ale można ją powiązać w środowisku uruchomieniowym. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.BindableAttribute>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Podjęto próbę przypisania wartości do właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdded As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartAdded;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po dodaniu <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dynamicznej lub innej kontrolki serwerowej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> do strefy, aby wskazać, że formant został pomyślnie dodany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Zdarzenie jest przydatne do wskazywania, że formant dynamiczny (formant dodany programowo, a w przeciwieństwie do deklarowania w znaczniku strony) został pomyślnie dodany do strefy. W połączeniu z tą <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> metodą, zdarzenie zapewnia deweloperom możliwość aktualizowania interfejsu użytkownika lub w inny sposób powiadamiania użytkowników o pomyślnym dodaniu formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdding">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdding As WebPartAddingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAddingEventHandler ^ WebPartAdding;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " Usage="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu dodawania dynamicznej <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub innej kontrolki serwerowej <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> do strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> przez metodę po rozpoczęciu procesu dodawania kontrolki do strefy. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> To zdarzenie umożliwia anulowanie procesu przed jego ukończeniem. Jeśli proces dodawania zakończy się pomyślnie, to zdarzenie następuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> .  
  
 Deweloperzy stron mogą udostępniać niestandardowe programy obsługi dla zdarzenia przez dodanie `OnWebPartAdding` atrybutu `<asp:webpartmanager>` do elementu na stronie i przypisanie nazwy metody niestandardowej do atrybutu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosed As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartClosed;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> usunięciu formantu (lub serwera lub kontrolki użytkownika) ze strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Zdarzenie wskazuje, że formant został pomyślnie zamknięty przez użytkownika lub programowo. Aby zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolkę, należy usunąć ją ze strony, tak aby nie była renderowana, a także umieścić ją w specjalnym obiekcie zawierającym nazwę wykazu strony. Wykaz stron, który odnosi się do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolki, zachowuje odwołania do zamkniętych <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek dla każdej strony. Jeśli formant jest zadeklarowany na stronie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> w strefie, użytkownicy mogą przełączać stronę do trybu wyświetlania katalogu i ponownie dodawać do strony wszystkie kontrolki, które zostały wcześniej zamknięte. <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>  
  
 Zdarzenie jest skojarzone <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> z metodą, która wywołuje zdarzenie i udostępnia obsługę dla niego. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>  
  
 Deweloperzy stron mogą dodawać niestandardowe procedury obsługi dla zdarzenia, dodając `OnWebPartClosed` atrybut `<asp:webpartmanager>` do elementu na stronie, a następnie przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosing As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartClosing;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu usuwania <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki (lub serwera lub kontrolki użytkownika) ze strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane przez metodę, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka jest w trakcie zamykania kontrolki. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Po pomyślnym usunięciu formantu następuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> zdarzenie.  
  
 Deweloperzy stron mogą udostępniać niestandardowe procedury obsługi dla zdarzenia przez dodanie `OnWebPartClosed` atrybutu `<asp:webpartmanager>` do elementu na stronie i przypisanie nazwy metody niestandardowej do atrybutu.  
  
 Zwykle, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> zdarzenie jest zgłaszane w wyniku bezpośredniego <xref:System.Web.UI.WebControls.WebParts.WebPart> zamknięcia kontrolki, zdarzenie może być anulowane. Istnieje jednak scenariusz, w którym nie można anulować zdarzenia. Jeśli formant zostanie usunięty, kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPart> , które zawiera, muszą być zamknięte, w przeciwnym razie zostałyby oddzielone. <xref:System.Web.UI.WebControls.WebParts.WebPartZone> W takim przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant <xref:System.Web.UI.WebControls.WebParts.WebPart> zamknie kontrolki, a nie użytkownika. A gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka jest w trakcie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> wywoływania metody, aby zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> poszczególne kontrolki, a zdarzenie jest wywoływane, nie można anulować zdarzenia (według projektu), ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> wymaga to ukończenia zadania czyszczenia wszystkie kontrolki strefy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleted As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartDeleted;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> usunięciu lub innym formancie serwera <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ze strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> Zdarzenie jest przydatne do wskazywania, że formant dynamiczny (formant dodany programowo, a nie zadeklarowany w znaczniku strony) został pomyślnie usunięty ze strefy. W połączeniu z tą <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> metodą, zdarzenie zapewnia deweloperom możliwość aktualizowania interfejsu użytkownika lub w inny sposób powiadamiania użytkowników o tym, że formant został pomyślnie usunięty.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleting As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartDeleting;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje w procesie trwałego usuwania wystąpienia dynamicznej <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub innej kontrolki serwera <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ze strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> przez metodę podczas procesu usuwania kontroli dynamicznej (jednej, która została dodana programowo lub przez użytkownika za pomocą interfejsu użytkownika składniki Web Part). <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> To zdarzenie umożliwia anulowanie procesu przed jego ukończeniem. Jeśli proces usuwania zostanie zakończony pomyślnie, następuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> zdarzenie.  
  
 Deweloperzy stron mogą udostępniać niestandardowe programy obsługi dla zdarzenia przez dodanie `OnWebPartDeleting` atrybutu `<asp:webpartmanager>` do elementu na stronie i przypisanie nazwy metody niestandardowej do atrybutu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartMoved">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoved As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartMoved;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> przeniesieniu kontrolki serwerowej lub do innej lokalizacji na stronie sieci Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie dotyczy zarówno statycznej (zadeklarowanej w znaczniku strony sieci Web), jak i formantów dynamicznych. Jest ona skojarzona z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> metodą. Ze względu na to, że zdarzenie jest zgłaszane po zakończeniu przenoszenia, deweloperzy mogą dołączyć procedurę obsługi zdarzeń w celu udostępnienia pewnych powiadomień użytkownikom, pewnej weryfikacji lub niektórych innych działań. Aby dodać procedurę obsługi zdarzeń, można dodać `OnWebPartMoved` atrybut `<asp:webpartmanager>` do elementu na stronie i przypisać nazwę metody niestandardowej do atrybutu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartMoving">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoving As WebPartMovingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartMovingEventHandler ^ WebPartMoving;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " Usage="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu przechodzenia <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub innego formantu serwera, który znajduje się <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> w strefie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, <xref:System.Web.UI.WebControls.WebParts.WebPart> gdy lub inny formant serwera jest przenoszony w ramach własnej strefy lub do innej strefy. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Taka sytuacja może wystąpić, gdy użytkownik przeciągnie kontrolki i gdy nastąpi przechodzenie programistyczne.  
  
 Zdarzenie jest zgłaszane <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> przez metodę i umożliwia anulowanie przenoszonego procesu przed jego ukończeniem. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Jeśli przeniesienie zostanie zakończone i kontrolka została umieszczona w nowym położeniu, następuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> zdarzenie.  
  
 Deweloperzy stron mogą utworzyć niestandardową procedurę obsługi dla zdarzenia, dodając `OnWebPartMoving` atrybut `<asp:webpartmanager>` do elementu i przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartCollection WebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebParts As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartCollection ^ WebParts { System::Web::UI::WebControls::WebParts::WebPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebParts : System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolek śledzonych <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> przez formant na stronie sieci Web.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> , który zawiera odwołania do <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> zestawu kontrolek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest używana <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przez formant do śledzenia wszystkich <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które są zawarte w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefach na stronie. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Chociaż kolekcja jest tylko do odczytu, można uzyskać dostęp do poszczególnych <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek za pomocą kolekcji i wprowadzić zmiany programistycznie.  
  
> [!NOTE]
>  Istnieje możliwość <xref:System.Web.UI.WebControls.WebParts.WebPart> , że kontrolka została umieszczona na stronie spoza <xref:System.Web.UI.WebControls.WebParts.WebPartZone> strefy, co powoduje, że formant <xref:System.Web.UI.WebControls.WebParts.WebPartManager> nie jest śledzony przez kontrolkę ani przywoływany w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> jej kolekcji. Istnieje jednak niewielki powód używania <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki poza strefą, ponieważ powoduje ona utratę składniki Web Part funkcji i pełni rolę normalnej kontroli serwera.  
  
 Dowolny typ formantu, który może być umieszczony w strefie, czy kontrolka niestandardowa <xref:System.Web.UI.WebControls.WebParts.WebPart> , standardowa kontrolka ASP.NET, kontrolka użytkownika czy niestandardowy formant serwera, może być traktowana <xref:System.Web.UI.WebControls.WebParts.WebPart> jako kontrolka w czasie wykonywania. Gdy <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka, która nie jest kontrolką, jest umieszczana <xref:System.Web.UI.WebControls.WebParts.WebPartZone> w strefie, w czasie wykonywania ASP.NET zawija formant z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektem, dzięki czemu formant może zachowywać się jako prawdziwa <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrola. W związku z tym przy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> użyciu właściwości <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka może śledzić dowolny typ formantu serwera, niezależnie od tego, <xref:System.Web.UI.WebControls.WebParts.WebPart> czy pochodzi od klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> jak używać właściwości programowo w celu uzyskania dostępu do poszczególnych <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek. Zwróć uwagę, że we znaczniki deklaratywne dla strony sieci Web w `<asp:webpartzone>` obrębie elementu są dwie standardowe kontrolki serwera ASP.NET. Chociaż te nie dziedziczą z <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy, ponieważ znajdują się w strefie, zostaną opakowane <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> na obiekt w czasie wykonywania i w związku z tym zostaną uwzględnione w kolekcji, do której odwołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> się właściwość. W tej strefie można także <xref:System.Web.UI.WebControls.WebParts.WebPart> dodawać niestandardowe kontrolki, kontrolki użytkownika lub niestandardowe kontrolki serwera.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_WebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/CS/wpmgrWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_WebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/VB/wpmgrWebPartsVB.aspx#1)]  
  
 Należy pamiętać, że aby przykład kodu działał, należy dodać ustawienie w pliku Web. config, aby umożliwić eksportowanie składniki Web Part plików opisu. Upewnij się, że masz plik Web. config w tym samym katalogu, w którym znajduje się Strona sieci Web tego przykładu kodu. Upewnij się, że w `<webParts>` `enableExport` `true`sekcji istnieje element z atrybutem ustawionym na, tak jak w poniższym znaczniku. `<system.web>`  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Po załadowaniu strony do przeglądarki, jeśli klikniesz przycisk **Count składnika WebPart** , kod użyje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> właściwości, aby zwrócić liczbę kontrolek w kolekcji. Jeśli klikniesz przycisk **Ukryj tytuł kalendarza** , kod zmieni kalendarz tak, aby był renderowany tylko obramowaniem, a nie tytułem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsConnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po ustanowieniu określonego połączenia między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolkami (lub kontrolkami serwera lub użytkownika).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest skojarzone <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> z metodą. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> To zdarzenie jest przydatne, ponieważ po uzyskaniu informacji o zakończeniu połączenia warto poinformować użytkownika o tym fakcie, a nawet zmienić interfejs użytkownika (UI) strony. Na przykład możesz chcieć wyświetlić obraz graficzny, który sugeruje pomyślne połączenie między dwoma kontrolkami, lub wyświetlić krótki komunikat, a następnie zmienić tryb wyświetlania strony z powrotem w tryb przeglądania.  
  
 Deweloperzy stron mogą skojarzyć niestandardowe procedury obsługi zdarzeń z tym zdarzeniem, dodając `OnWebPartsConnected` atrybut `<asp:webpartmanager>` do elementu na stronie i przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsConnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu tworzenia połączenia między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolkami (lub kontrolkami serwera lub użytkownika umieszczonymi <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> w strefie).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> przez metodę i sygnalizuje, że rozpoczęto proces połączenia (na przykład użytkownik zaznaczył kontrolkę i kliknął czasownik połączenia), ale nie został jeszcze ukończony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> To zdarzenie umożliwia anulowanie połączenia przed jego ukończeniem. Jeśli połączenie zostanie zakończone pomyślnie, po wykonaniu tego zdarzenia następuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> zdarzenie.  
  
 Deweloperzy stron mogą dodawać niestandardowe procedury obsługi dla zdarzenia, dodając `OnWebPartsConnecting` atrybut `<asp:webpartmanager>` do elementu i przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsDisconnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po przerwaniu połączenia między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dwoma lub kontrolkami serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest skojarzone <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> z metodą. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> To zdarzenie jest przydatne, ponieważ po upewnieniu się, że połączenie zostało przerwane, możesz chcieć poinformować użytkownika, wykonać niektóre akcje oczyszczania w kodzie lub wprowadzić inne zmiany w interfejsie użytkownika.  
  
 Deweloperzy stron mogą skojarzyć niestandardowe procedury obsługi zdarzeń z tym zdarzeniem, dodając `OnWebPartsDisConnected` atrybut `<asp:webpartmanager>` do elementu na stronie i przypisując do atrybutu niestandardową nazwę metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsDisconnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas procesu kończenia połączenia między wcześniej połączonymi <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub kontrolkami serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> przez metodę i sygnalizuje fakt, że użytkownik kliknął czasownik <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> rozłączenia lub metoda została wywołana w inny sposób. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> To zdarzenie umożliwia anulowanie procesu kończenia połączenia przed jego ukończeniem. Po pomyślnym zakończeniu połączenia to zdarzenie następuje po nim <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> zdarzenie.  
  
 Deweloperzy stron mogą dodawać niestandardowe procedury obsługi dla zdarzenia, dodając `OnWebPartsDisconnecting` atrybut `<asp:webpartmanager>` do elementu i przypisując do atrybutu niestandardową nazwę metody.  
  
 Zwykle, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenie jest zgłaszane jako bezpośredni wynik akcji użytkownika kończącej połączenie, można anulować zdarzenie. Istnieje jednak kilka scenariuszy, w których nie można anulować zdarzenia. Pierwszy scenariusz to, jeśli <xref:System.Web.UI.WebControls.WebParts.WebPartZone> formant zostanie usunięty, kontrolki, które <xref:System.Web.UI.WebControls.WebParts.WebPart> zawiera, muszą być zamknięte, w przeciwnym razie zostałyby oddzielone. W takim przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontrolka <xref:System.Web.UI.WebControls.WebParts.WebPart> zamknie kontrolki, a nie użytkownika i musi również mieć możliwość przerwania połączeń z dowolnymi połączonymi kontrolkami bez żadnej możliwości przerwania, dzięki czemu może zakończyć proces czyszczenia i zamykania wszystkie kontrolki. Dlatego przez zaprojektowanie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> metody nie można anulować w tym scenariuszu. Dla zdarzenia powiązanego, które można anulować, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> zdarzenie.  
  
 Drugi scenariusz, w którym <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenie nie może zostać anulowany, to <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> gdy wywoływana jest metoda (wywoływana podczas każdego żądania do strony, na przykład), a istnieją pewne typy konfliktów istniejących połączeń na stronie. Może to być na przykład, że użytkownik łączy formant x w celu sterowania literą y, ale udostępniony użytkownik łączy formant x w celu sterowania z, a jeszcze formant x nie może tworzyć wielu połączeń. W tym przypadku ustawienia poszczególnych użytkowników dla połączenia mają pierwszeństwo, a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formant rozwiązuje konflikt przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> wywołanie metody i zakończenie połączenia między x i z dla danego użytkownika. Ponieważ to rozłączenie jest niezbędne do rozwiązania konfliktu, Zaprojektuj <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> zdarzenie nie może zostać anulowane w tym scenariuszu.  
  
 Trzeci scenariusz, w którym <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Metoda nie może zostać anulowana, jest w <xref:System.Web.UI.WebControls.WebParts.WebPart> przypadku usunięcia lub zamknięcia kontrolki serwera, która jest aktualnie połączona. Ponieważ kontrolka jest ostatecznie usuwana ze strony, jest to logiczna konieczność usunięcia połączenia. W związku z tym <xref:System.Web.UI.WebControls.WebParts.WebPartManager> , gdy formant <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> wywołuje metodę, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> która z kolei podnosi zdarzenie, projekt nie ma możliwości anulowania zdarzenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Zones">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Zones As WebPartZoneCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ Zones { System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zones : System.Web.UI.WebControls.WebParts.WebPartZoneCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kolekcji wszystkich <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> stref na stronie sieci Web.</summary>
        <value>Obiekt <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" /> , który odwołuje się <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> do zestawu stref.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana <xref:System.Web.UI.WebControls.WebParts.WebPartManager> przez formant do śledzenia <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> stref na stronie sieci Web. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> Należy zauważyć, że właściwość nie odwołuje się do wszystkich typów stref; odwołuje się tylko do stref, które <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> pochodzą z klasy <xref:System.Web.UI.WebControls.WebParts.WebPartZone> , w tym stref.  
  
 Chociaż kolekcja, do której odwołuje się właściwość, jest tylko do odczytu, można jej użyć do uzyskiwania dostępu do poszczególnych obiektów w kolekcji i pracy programowo.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> jak używać właściwości programowo w celu uzyskania dostępu do poszczególnych <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> kontrolek strefy. Należy zauważyć, że w znaczniki deklaratywne dla strony sieci Web istnieją dwa `<asp:webpartzone>` elementy, z których każdy zawiera formant serwera. W sekcji strony, kod <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> używa właściwości do uzyskiwania dostępu do poszczególnych stref, wyświetlania listy wszystkich identyfikatorów strefy, a następnie zmieniania koloru tła drugiej strefy. `<script>`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Zones#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/CS/wpmgrzonescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Zones#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/VB/wpmgrzonesvb.aspx#1)]  
  
 Należy pamiętać, że aby przykład kodu działał, należy dodać ustawienie w pliku Web. config, aby umożliwić eksportowanie składniki Web Part plików opisu. Upewnij się, że masz plik Web. config w tym samym katalogu, w którym znajduje się Strona sieci Web tego przykładu kodu. Upewnij się, że w `<webParts>` `enableExport` `true`sekcji istnieje element z atrybutem ustawionym na, tak jak w poniższym znaczniku. `<system.web>`  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Po załadowaniu strony do przeglądarki, jeśli klikniesz przycisk **listy identyfikatorów strefy** , kod używa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> właściwości, aby wyświetlić listę identyfikatorów wszystkich stref w kolekcji. Jeśli klikniesz przycisk **Zmień kolor strefy** , kod zmieni kolor tła drugiej strefy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
