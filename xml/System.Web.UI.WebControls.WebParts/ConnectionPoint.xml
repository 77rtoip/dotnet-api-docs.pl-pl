<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89254d41b1e725232347603f813e122ac08182c3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37743866" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy jako klasa bazowa dla definiowania połączenia wskazują obiekty, które umożliwiają formantem odbiorców i dostawcy w połączenia składnika Web Part, udostępnianie danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każde połączenie części sieci Web, który składa się z dwoma formantami serwera udostępniania danych: jeden formant jest konsumenta, druga jest dostawcą. Omówienie podstawowych składników połączenia składnika Web Part, a także sam obiekt połączenia, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> klasa — Przegląd. Każde połączenie części sieci Web wymaga punkty połączenia. Dostawcy i formantu konsumenta musi mieć co najmniej jedna definicja <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> obiektu (każdego z nich mogą opcjonalnie mieć wiele punktów połączenia), zawierający szczegółowe informacje dotyczące jak kontrolki można łączyć się z inną kontrolkę i typu danych jej udostępniać. W przypadku rzeczywistych połączenia dostawcy ma swój własny typ obiektu punktu połączenia (pochodzące od podstawy <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasy), <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> wystąpienie, a użytkownik ma swój własny obiektu <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> wystąpienia.  
  
 Aby utworzyć punkt połączenia z dostawcą, deweloperzy należy dodać metodę wywołania zwrotnego dostawcy, który zwraca wystąpienie zaimplementowanego interfejsu użytkownika. One należy oznaczyć metody wywołania zwrotnego w kodzie źródłowym za pomocą `ConnectionProvider` atrybutu kod (zobacz <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> klasy). Podobnie, spowoduje utworzenie punktu połączenia konsumenta, deweloperzy muszą dodać metodę do odbiorcy, który otrzymuje wystąpienie interfejsu i ich należy oznaczyć tej metody za pomocą `ConnectionConsumer` atrybutu (patrz <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> klasy).  
  
 Deweloperom tworzenie połączeń, na stronie sieci Web, mogą być tworzone jako statyczne lub dynamiczne połączenia. Połączenia statyczne są deklarowane w znaczniku strony sieci Web. Gdy jest zadeklarowany jako statyczny połączenia, deweloperzy można wyznaczyć punktów połączenia, które są używane dla konsumentów i dostawcy przez przypisywanie wartości do `ProviderConnectionPointID` i `ConsumerConnectionPointID` atrybutów w obrębie `<asp:webpartconnection>` tagu elementu. To podejście jest szczególnie przydatne, jeśli wiele punktów połączenia zdefiniowany w ramach kontrolki odbiorców i dostawcy, ponieważ umożliwia statyczne połączenia do identyfikowania które punkty połączeń do użycia na potrzeby połączenia.  
  
 Dynamiczne połączenia są tworzone programowo, przez kod dewelopera lub przez użytkowników za pomocą interfejsu użytkownika (UI), dostarczone przez <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> kontroli. Do utworzenia połączenia w kodzie, deweloperzy muszą pobrać wystąpienie obiektu <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> obiektu przez wywołanie metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli. Przed ich może wywołać tę metodę, deweloperzy musi mieć odwołania do odbiorcy i formantów serwera dostawcy i ich obiekty punktu połączenia odpowiednich. Można pobrać odwołania do punkty połączenia dla dostawcy i formantu konsumenta, pierwsze wywołanie deweloperów <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metod <xref:System.Web.UI.WebControls.WebParts.WebPartManager> kontroli. Te metody zwracają odpowiednie połączenie punktu obiektów, które z kolei może być przekazywany do metody tworzenia połączeń.  
  
 Gdy klienta i dostawcy punktu obiekty połączenia działają zarówno za pomocą tego samego typu interfejsu, zgodne i utworzenia bezpośrednie połączenie z usługą udostępniania danych. Jeśli nie działają w tym samym typie interfejsu, <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu musi być używane do translacji wystąpienie interfejsu od dostawcy do typu, który użytkownik może pracować.  
  
 Abstrakcyjna <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasy zawiera podstawowy szczegóły punktów połączenia, które są współużytkowane przez formanty zarówno klienta, jak i dostawcy. Kilka właściwości zawierają te szczegóły. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> Właściwość wskazuje, czy punkt połączenia mogą uczestniczyć w więcej niż jednego połączenia w danym momencie. Domyślnie punkty połączenia dostawcy mogą uczestniczyć w wielu połączeń, a nie punkty połączenia klientów. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Właściwość wskazuje typ kontrolki serwera skojarzonego z punktem połączenia. Należy pamiętać, że nie tylko <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolki można tworzyć połączenia; dowolny formant serwera, czy formant ASP.NET, formant niestandardowy lub kontrolkę użytkownika, można włączyć do wzięcia udziału w połączeniach, jeśli wprowadzone w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Dostarcza przyjazną nazwę dla punktu połączenia, które mogą być wyświetlane w interfejsie użytkownika, aby pomóc użytkownikom, którzy tworzą połączeń. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> Właściwość służy jako identyfikator ciągu dla samego obiektu punktu połączenia. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Właściwość wskazuje, jakiego rodzaju wystąpienie interfejsu punktu połączenia rozumie. Czy podany punkt połączenia zapewnia lub zużywa wystąpienie interfejsu jest określany przez tego, czy jest <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> lub <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektu.  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Klasa ma jedną z metod. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Metoda zwraca wartość logiczną wskazującą, czy punkt połączenia jest obecnie w stanie uczestnictwa w połączeniach.  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Klasa ma również jedno pole publiczne, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>. To pole zawiera wartość używana do identyfikowania domyślnego punktu połączenia w przypadku połączenia.  
  
> [!NOTE]
>  Atrybuty do określenia punktu połączenia z metody mają tylko jeden parametr wymagany, `displayName`, więc można utworzyć domyślnego atrybutu punktu połączenia bez określania identyfikatora. W takich przypadkach <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> pola dostarcza wartości bazowej do użycia.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano tworzenie połączenia składnika Web Part, który zawiera wymagane <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> obiektów. Ponieważ <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasa jest abstrakcyjna klasa bazowa wystąpienia klasy podrzędnej —<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>— są rzeczywiste obiekty, które są używane w celu utworzenia połączenia.  
  
 W przykładzie przedstawiono cztery części:  
  
-   Tryb wyświetlania w kontrolkę użytkownika, który umożliwia zmianę składników Web Part na stronie.  
  
-   Źródła kodu interfejsu i dwóch <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroluje działający jako dostawcę i konsumentów dla połączenia.  
  
-   Strona sieci Web do obsługi wszystkich kontrolek, a następnie uruchomić przykładowy kod.  
  
-   Wyjaśnienie sposobu uruchamiania przykładowej stronie.  
  
 Pierwsza część w tym przykładzie kodu jest kontrolki użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Zapisz poniższy kod źródłowy do pliku ascx, nadając mu nazwę pliku, która jest przypisana do `Src` atrybutu `Register` dyrektywy dla tego formantu użytkownika, który jest w górnej części strony sieci Web hostingu. Wyświetlane szczegóły dotyczące trybów i opis kodu źródłowego w tym elemencie sterującym, w temacie [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web Part](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 Druga część przykładowy kod jest kod źródłowy dla interfejsu i kontrolek. Plik źródłowy zawiera prosty interfejs o nazwie `IZipCode`. Istnieje również <xref:System.Web.UI.WebControls.WebParts.WebPart> klasę o nazwie `ZipCodeWebPart` który implementuje interfejs i działa jako formantu dostawcy. Jego `ProvideIZipCode` metoda to metoda wywołania zwrotnego, która implementuje składową tylko. Metoda po prostu zwraca wystąpienia interfejsu. Należy zauważyć, że metoda jest oznaczona atrybutem `ConnectionProvider` atrybutu w metadanych. Jest to mechanizm do identyfikowania metody jako metodę wywołania zwrotnego dla punktu połączenia dostawcy. Druga <xref:System.Web.UI.WebControls.WebParts.WebPart> nosi nazwę klasy `WeatherWebPart`, i działa jako odbiorcy połączenia. Ta klasa ma metodę o nazwie `GetZipCode` wystąpienie, które pobiera `IZipCode` interfejs z formantu dostawcy. Należy pamiętać, że ta metoda jest oznaczona jako metoda punktu połączenia klienta za pomocą `ConnectionConsumer` atrybutu w metadanych. Jest to mechanizm do identyfikowania metody punktu połączenia w formancie konsumenta.  
  
 Aby uzyskać przykładowy kod zadziałał należy skompilować ten kod źródłowy. Można skompilować go jawnie i umieścić Wynikowy zestaw w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, gdzie go zostanie dynamicznie skompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej. Aby wskazówki, który demonstruje, jak skompilować, zobacz [wskazówki: tworzenie i używanie kontrolki serwera sieci Web niestandardowego](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 Trzecia część przykładowy kod jest strony sieci Web. U góry są `Register` dyrektywy rejestracji Kontrolki niestandardowe, które tworzą połączenie i kontrolki użytkownika, który umożliwia użytkownikom zmianę tryby wyświetlania na stronie. Samo połączenie jest tworzony w sposób deklaratywny poziomu `<staticconnections>` elementu na stronie. Można również utworzyć połączenie programowe; kod dla tych czynności znajduje się w `Button1_Click` metody. Określanie, czy połączenie jest tworzone deklaratywne lub programowo, zawsze należy określać punkty połączenia dla konsumentów i dostawcy. `Button2_Click` Uzyskuje dostęp do metody <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> obiektów dla konsumentów i dostawcy, a następnie zapisuje niektóre z ich wartości właściwości etykiety na stronie.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce kliknij **szczegóły punktu połączenia** przycisku. Informacje o dostawcy i konsumentów punkty połączeń ustanowionych w deklaratywne połączenia są wyświetlane. Następnie użyj **tryb wyświetlania** kontrolkę listy rozwijanej tę stronę w trybie łączenia. Menu zleceń jednego z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (reprezentowany przez strzałki w dół na pasku tytułu), kliknij przycisk Zlecenie connect. Połączenie, zostanie wyświetlony interfejs użytkownika, są tworzone automatycznie przez `<asp:connectionszone>` kontroli zadeklarowany na stronie. Kliknij przycisk **rozłączenia** przycisk, aby zakończyć istniejące połączenie. Użyj **tryb wyświetlania** formantu, aby powrócić na stronę, aby tryb przeglądania. Następnie kliknij przycisk **połączenia dynamicznego** przycisk, aby utworzyć połączenie programowe. Kliknij przycisk **szczegóły punktu połączenia** przycisk ponownie, aby wskazać, szczegółowe informacje o obiektach punktu połączenia dwóch.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy punkt połączenia obsługuje wiele równoczesnych połączeń.</summary>
        <value>
          <see langword="true" /> Jeśli punkt połączenia z obsługuje połączenia wielu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> obiekty mają swoje <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> wartość właściwości jest równa `true` (przez <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> klasy), ponieważ kontrola części sieci Web, domyślnie umożliwia dostawcy punkty połączenia z formularza połączenia do wielu odbiorców.  
  
 Z kolei <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiekty mają ich <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> wartość właściwości jest równa `false` (przez <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> klasy), ponieważ kontrola części sieci Web, domyślnie umożliwia połączenie klienta punkty, aby nawiązać połączenie z tylko jednego dostawcę w czas.  
  
 Można zmienić domyślne zachowanie dotyczące wielu połączeń, przypisując różne wartości <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> właściwości (dostawcami) lub <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> właściwości (dla klientów) w dwóch <xref:System.Attribute> klasy służące do połączenia atrybutów. Po włączeniu punktów połączenia konsumenta, połączyć się z wielu dostawców na tym samym czasie, kod musi obsłużyć wszelkie problemy wynikowe synchronizacji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> właściwość zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykład kodu pokazuje tylko strony sieci Web, który zawiera kod, aby dostęp do właściwości; pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasa — Przegląd.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> właściwości każdego punktu połączenia obiektów i zapisuje każdej wartości na etykietę. Wykonywanie kodu, klikając pozycję **szczegóły punktu połączenia** przycisku po załadowaniu strony w przeglądarce.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Type" /> formantem serwera, z którą jest skojarzony punkt połączenia.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący typ formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> właściwość jest często <xref:System.Web.UI.WebControls.WebParts.WebPart> typu. Jednak ponieważ dowolny typ kontrolki użytkownika lub formant serwera może uczestniczyć w połączeniach, jeśli została prawidłowo włączona i umieszczone w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> właściwości może zwracać jednego z tych innych serwera kontroli typów także.  
  
 Gdy serwer formantów, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty są umieszczane w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefę, jest ich są ujęte w nawiasy <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu w czasie wykonywania, dzięki czemu może być traktowane jako <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroluje i brać udział w połączeniach. Jednak w przypadku tych formantów w oknie połączenia <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> nie zwraca wartości właściwości <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> wpisz; zwraca typ <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> kontrolki podrzędnej obiektu, który jest typem kontrolki użytkownika lub serwera.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> właściwość zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykład kodu pokazuje tylko strony sieci Web, który zawiera kod, aby dostęp do właściwości; pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasa — Przegląd.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> właściwości każdego punktu połączenia obiektów i zapisuje każdej wartości na etykietę. Wykonywanie kodu, klikając pozycję **szczegóły punktu połączenia** przycisku po załadowaniu strony w przeglądarce.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa ciąg używany do identyfikowania domyślnego punktu połączenia w obrębie kolekcji punktów połączenia skojarzone z kontrolką serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu punktu połączenia jest możliwość określenia Identyfikatora dla punktu połączenia w kodzie źródłowym konsumenta lub dostawca <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować, za pomocą <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> lub <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> atrybutu. Jednakże, gdy atrybut jest dodawany do punktu połączenia w kodzie źródłowym `ID` parametr jest opcjonalny. Jeśli identyfikator nie jest określony w atrybucie, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> pole zawiera ciąg, który jest używany do identyfikowania domyślnego punktu połączenia.  
  
 Jeśli wiele punktów połączenia są zdefiniowane w kontrolce użytkownika lub dostawcę, należy określić identyfikator dla każdego punktu połączenia tak, aby podczas tworzenia połączenia można odróżnić punkty połączenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który służy jako przyjazną nazwę wyświetlaną do reprezentowania punktu połączenia w interfejsie użytkownika (UI).</summary>
        <value>Ciąg, który zawiera przyjazną nazwę wyświetlaną dla <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć połączenia składnika Web Part, kontrolek dostawcy i klienta dla połączenia każdego określić punkt połączenia co najmniej jedną metodę, która umożliwia komunikację i udostępnianie danych. Aby zidentyfikować te metody punktu połączenia, deweloper Określa atrybut na wybrane metody. W polu Dostawca `ConnectionProvider` atrybut jest ustawiony na metody wywołania zwrotnego wybrany, a u odbiorcy `ConnectionConsumer` atrybut jest ustawiony na metodzie, który otrzymuje wystąpienie elementu interfejs, który zawiera dane od dostawcy. Dla obu tych atrybutów jest jeden parametr, który jest zawsze wymagana, niezależnie od tego, które przeładowanie zadeklarowano utworzyć atrybut `displayName` parametru. Deweloper musi przypisać ciąg, który ma być używany jako przyjazną nazwę wyświetlaną dla punktu połączenia, a ciąg staje się wartością <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Wartość właściwości jest wyświetlana w Interfejsie użytkownika strony sieci Web podczas tworzenia połączenia. Na przykład, gdy <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> formant jest dodawany do strony, tworzy on interfejs użytkownika służący do tworzenia połączenia między kontrolkami. Gdy użytkownik zmienia strony do trybu wyświetlania connect a kliknie zlecenie connect <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować połączenia zostanie wyświetlony interfejs użytkownika. Każdy formant, które mogą uczestniczyć w przypadku połączenia znajduje się w interfejsie użytkownika, a obok każdej kontrolki jest formant listy rozwijanej, który wyświetla przyjaznych nazw punktów dostępnego połączenia. Użytkownicy muszą wybrać co najmniej jedno połączenie punkt nawiązać połączenie. Wartości, które pojawiają się na liście punktów połączenia są uzyskiwane z <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> właściwości. Jeśli deweloperom tworzenie niestandardowego interfejsu użytkownika do tworzenia połączenia, mogą używać <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> właściwości w podobny sposób jak Podaj przyjazną nazwę, która reprezentuje punkt połączenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub inny formant serwera, który jest skojarzony z punktu połączenia.</param>
        <summary>Zwraca wartość wskazującą, czy punkt połączenia mogą uczestniczyć w połączeniach.</summary>
        <returns>
          <see langword="true" /> Jeśli formant można utworzyć punktu połączenia do wzięcia udziału w przypadku połączenia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Metody w podstawowym <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasy zawsze zwraca `true`, ale klasy pochodne mogą zastąpić metodę do zwrócenia `true` lub `false` w różnym czasie, na podstawie stanu `control`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metoda zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykład kodu pokazuje tylko strony sieci Web, który zawiera kod, aby dostęp do właściwości; pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasa — Przegląd.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metody na każdym punkt połączenia z obiektami i zapisuje każdej wartości etykiety. Wykonywanie kodu, klikając pozycję **szczegóły punktu połączenia** przycisku po załadowaniu strony w przeglądarce.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który zawiera identyfikator punktu połączenia.</summary>
        <value>Ciąg, który zawiera identyfikator punktu połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy deweloper deklaruje <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> lub <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> atrybutu dla metody w kodzie źródłowym, kontrolki, więc, że metoda może służyć jako punkt połączenia nie jest wymagane do deklarowania `ID` parametr dla atrybutu punktu połączenia. Jest to jedyny atrybut wymagane `displayName` parametru. Domyślny identyfikator jest przypisany do punktu połączenia, używając wartości z <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> pola.  
  
 Jeśli istnieje tylko jedna metoda w kontrolce używany jako punkt połączenia, nie jest konieczne określić identyfikator dla punktu połączenia. Jeśli istnieją określone jako punkty połączenia na wiele sposobów, należy określić identyfikator dla każdej z nich; w przeciwnym razie zostanie zgłoszony wyjątek. Przypisując identyfikator do każdego punktu połączenia, możesz także obejrzeć możliwość określenia, który punkt połączenia do użycia podczas deklarowania połączeń na stronach sieci Web, lub utworzyć je w kodzie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> właściwość zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykład kodu pokazuje tylko strony sieci Web, który zawiera kod, aby dostęp do właściwości; pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasa — Przegląd.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> właściwości każdego punktu połączenia obiektów i zapisuje każdej wartości na etykietę. Wykonywanie kodu, klikając pozycję **szczegóły punktu połączenia** przycisku po załadowaniu strony w przeglądarce.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ interfejsu używanej przez punkt połączenia.</summary>
        <value>A <see cref="T:System.Type" /> odnosi się do typu interfejsu, udostępniane lub wykorzystywane przez kontrolkę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Właściwość wskazuje, jakiego rodzaju interfejsu korzysta z punktu połączenia. Może to pomóc w określeniu, czy dwie kontrolki są zgodne i mogli się komunikować. Jeśli punkt połączenia dostawcy <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> różni się od punktu połączenia klientów <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, dwie kontrolki są niezgodne, a następnie (co oznacza, że nie można bezpośrednio połączone bez transformatora), a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu musi służyć do nawiązania połączenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> właściwość zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykład kodu pokazuje tylko strony sieci Web, który zawiera kod, aby dostęp do właściwości; pełny kod wymagany, aby uruchomić przykład, można wyświetlić w sekcji przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasa — Przegląd.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> właściwości każdego punktu połączenia obiektów i zapisuje każdej wartości na etykietę. Wykonywanie kodu, klikając pozycję **szczegóły punktu połączenia** przycisku po załadowaniu strony w przeglądarce.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
  </Members>
</Type>