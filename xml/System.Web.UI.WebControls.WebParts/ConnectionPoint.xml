<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="933a91474069425f37e5a116c1e3cdb3be8d6f67" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy jako klasa podstawowa dla definiowania połączenia punktu obiektów umożliwiających formantem klienta i dostawcy w połączeniu składników Web Part do udostępniania danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenie każdej części sieci Web składa się z dwóch formantów serwera do udostępniania danych: jeden formant jest konsumenta, drugi dostawca. Omówienie niezbędne składniki połączenia części sieci Web, a sam obiekt połączenia, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> Przegląd klasy. Połączenie każdej części sieci Web wymaga punkty połączenia. Dostawca i kontroli klienta musi mieć co najmniej jedna definicja <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> można udostępniać obiekt (każde z nich można opcjonalnie stosować wiele punktów połączenia), który zawiera szczegóły dotyczące sposobu formantu można połączyć inny formant i typu danych. Rzeczywiste połączenia dostawcy ma własny typ obiektu punktu połączenia (pochodzące od podstawy <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasy), <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> wystąpienia i że użytkownik ma własną obiekt <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> wystąpienia.  
  
 Aby utworzyć punkt połączenia dostawcy, deweloperzy dodać metody wywołania zwrotnego do dostawcy, który zwróci wystąpienia zaimplementowany interfejs z klientem. One należy oznaczyć metody wywołania zwrotnego w kodzie źródłowym z `ConnectionProvider` kodu atrybutu (patrz <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> klasy). Podobnie, aby utworzyć punkt połączenia klienta, deweloperzy musi metody klientowi, który otrzymuje wystąpienie interfejsu i ich należy oznaczyć tej metody z `ConnectionConsumer` atrybutu (patrz <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> klasy).  
  
 Deweloperzy tworzenia połączeń na stronie sieci Web, tworzone jako statyczne lub dynamiczne połączenia. Połączenia statyczne są zadeklarowane w znaczniku strony sieci Web. Gdy jest zadeklarowany jako statyczny połączenia, deweloperzy można wyznaczyć punktów połączenia, które są używane dla konsumentów i dostawcy przez przypisywanie wartości do `ProviderConnectionPointID` i `ConsumerConnectionPointID` atrybutów w `<asp:webpartconnection>` tagu elementu. Ta metoda jest szczególnie przydatne, jeśli wiele punktów połączenia zdefiniowanego w kontroli klienta i dostawcy, ponieważ dzięki statyczne połączenie, aby określić które punkty połączenia do użycia na potrzeby połączenia.  
  
 Dynamiczne połączenia są tworzone programowo, przez dewelopera kodu lub przez użytkowników za pomocą interfejsu użytkownika (UI) udostępniane przez <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> formantu. Można utworzyć połączenia w kodzie, deweloperzy musi pobrać wystąpienia <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> obiektu przez wywołanie metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> metoda <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Przed ich można wywołać tej metody, deweloperzy musi mieć odwołania do konsumenta i kontrolki serwera dostawcy i ich obiektami punktu połączenia odpowiednich. Można pobrać odwołań do punktów połączenia dla dostawcy i kontroli konsumenta, pierwsze wywołanie deweloperzy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager> formantu. Te metody zwracają odpowiednie połączenie punktu obiektów, które z kolei mogą zostać przekazane do metody tworzenia połączeń.  
  
 Gdy klienta i dostawcy punktu obiekty połączeń jednocześnie korzystać z tego samego typu interfejsu, są zgodne i utworzenia bezpośredniego połączenia do udostępniania danych. Jeśli nie działają w tym samym typie interfejsu, <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu musi być używany do tłumaczenia wystąpienie interfejsu od dostawcy do typu, który użytkownik może współpracować z.  
  
 Abstract <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasa udostępnia podstawowe szczegóły punktów połączenia, które są udostępniane przez formanty zarówno klienta i dostawcy. Kilka właściwości zawierają szczegółowe informacje. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> Właściwość wskazuje, czy punkt połączenia mogą uczestniczyć w więcej niż jedno połączenie naraz. Domyślnie punkty połączenia dostawcy mogą uczestniczyć w wielu połączeń, a nie punkty połączenia klienta. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Właściwość wskazuje typ serwera kontroli powiązanej z punktu połączenia. Należy pamiętać, że nie tylko <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty można tworzyć połączeń; żadnego formantu serwera, czy formant ASP.NET, kontrolkę niestandardową lub kontrolkę użytkownika można włączyć brać udział w połączeniach, jeśli umieszczone w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Właściwość zapewnia przyjazną nazwę dla punktu połączenia, które mogą być wyświetlane w interfejsie użytkownika, aby ułatwić użytkownikom tworzących połączenia. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> Właściwość służy jako identyfikator ciągu dla samego obiektu punktu połączenia. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Właściwość wskazuje rozumie, jakiego rodzaju wystąpienie interfejsu punktu połączenia. Określa, czy podany punkt połączenia udostępnia lub wykorzystuje wystąpienie interfejsu jest określany przez czy jest <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> lub <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektu.  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Klasa ma jedną metodę. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Metoda zwraca wartość logiczną wskazującą, czy punkt połączenia jest obecnie mogą brać udział w połączeniach.  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Klasa ma również jedno pole publiczne, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>. To pole zawiera wartość używana do identyfikacji domyślnego punktu połączenia w połączeniu.  
  
> [!NOTE]
>  Atrybuty do określenia punktu połączenia metody mają tylko jeden wymagany parametr `displayName`, dzięki czemu można tworzyć domyślny atrybut punktu połączenia bez określania identyfikatora. W takich przypadkach <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> pola dostarcza wartości podstawowej do użycia.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano tworzenie połączenie części sieci Web, która zawiera wymagane <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> obiektów. Ponieważ <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasa jest abstrakcyjna klasa podstawowa, wystąpień z jej klas podrzędnych--<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>— są faktycznie obiektami używana do utworzenia połączenia.  
  
 W przykładzie przedstawiono czterech części:  
  
-   Formant użytkownika, który umożliwia zmianę części sieci Web trybu wyświetlania na stronie.  
  
-   Źródła kodu interfejsu i dwa <xref:System.Web.UI.WebControls.WebParts.WebPart> steruje działania jako dostawcy i klienta dla połączenia.  
  
-   Strony sieci Web do hosta wszystkich kontrolek i uruchamiania przykładów kodu.  
  
-   Wyjaśnienie sposobu uruchamiania przykładową stronę.  
  
 Pierwsza część w tym przykładzie kodu jest kontrola użytkownika, który umożliwia użytkownikom zmianę trybów wyświetlania na stronie sieci Web. Zapisz poniższy kod źródłowy plik .ascx nadanie mu nazwy pliku, który jest przypisany do `Src` atrybutu `Register` dyrektywy dla tego formantu użytkownika, który jest w górnej części strony hostingu sieci Web. Aby uzyskać szczegółowe informacje dotyczące wyświetlania tryby i opis kodu źródłowego w tym formancie, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 Druga część przykładowy kod jest kodu źródłowego dla interfejsu i kontrolek. Plik źródłowy zawiera prosty interfejs o nazwie `IZipCode`. Istnieje również <xref:System.Web.UI.WebControls.WebParts.WebPart> klasy o nazwie `ZipCodeWebPart` który implementuje interfejs i działa jako kontrolka dostawcy. Jego `ProvideIZipCode` metoda to metoda wywołania zwrotnego, który implementuje element członkowski tylko. Metoda zwraca po prostu wystąpienia interfejsu. Należy pamiętać, że metoda jest oznaczona atrybutem `ConnectionProvider` atrybutu w metadanych. Jest to mechanizm identyfikację metodę jako metoda wywołania zwrotnego dla punktu połączenia dostawcy. Druga <xref:System.Web.UI.WebControls.WebParts.WebPart> nosi nazwę klasy `WeatherWebPart`, i pełni rolę użytkownika dla połączenia. Ta klasa ma metodę o nazwie `GetZipCode` który pobiera wystąpienie elementu `IZipCode` interfejsu z formantu dostawcy. Należy pamiętać, że ta metoda jest oznaczona jako metoda punkt połączenia klienta z `ConnectionConsumer` atrybutu w metadanych. Jest to mechanizm identyfikowania metodę punktu połączenia w formancie użytkownika.  
  
 Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie kodu używane kompilacji dynamicznej. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 Trzeci część przykładowy kod jest strony sieci Web. U góry są `Register` dyrektywy zarejestrowanie formantów niestandardowych, które tworzą połączenia i kontrolki użytkownika, który umożliwia użytkownikom zmianę tryby wyświetlania na stronie. Samo połączenie jest tworzony deklaratywnie poziomu `<staticconnections>` elementu na stronie. Można również utworzyć połączenie programowe; kod dla czynności, które są zawarte w `Button1_Click` metody. Określanie, czy połączenie jest tworzone deklaratywnie lub programowo, zawsze należy określać punkty połączenia dla dostawcy i klienta. `Button2_Click` Uzyskuje dostęp do metody <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> obiektów na klienta i dostawcy i zapisuje niektóre z ich wartości właściwości etykiety na stronie.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 Po załadowaniu strony w przeglądarce, kliknij przycisk **szczegóły punktu połączenia** przycisku. Zostanie wyświetlone informacje o dostawcy i klienta punkty połączeń ustanowionych w deklaratywne połączenia. Następnie użyj **tryb wyświetlania** kontrolka listy rozwijanej, aby przełączyć strony w trybie łączenia. W menu zleceń jednego z <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów (reprezentowane za pomocą strzałki w dół na pasku tytułu), kliknij przycisk Połącz zlecenie. Połączenie, zostanie wyświetlony interfejs użytkownika, są tworzone automatycznie przez `<asp:connectionszone>` kontroli zadeklarowane na stronie. Kliknij przycisk **rozłączenia** przycisk, aby zakończyć istniejące połączenie. Użyj **tryb wyświetlania** formantu, aby przywrócić do trybu przeglądania strony. Następnie kliknij przycisk **połączenia dynamicznego** przycisk, aby utworzyć połączenie programowo. Kliknij przycisk **szczegóły punktu połączenia** przycisk ponownie, aby wskazać szczegółowe informacje o obiektach punktu połączenia dwóch.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy punkt połączenia obsługuje wiele równoczesnych połączeń.</summary>
        <value>
          <see langword="true" /> Jeśli punkt połączenia obsługuje wiele połączeń; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> obiekty mają ich <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> ustawioną wartość właściwości `true` (przez <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> klasy), ponieważ formant części sieci Web, domyślnie umożliwia punkty połączenia dostawcy do połączeń formularza do wielu klientów.  
  
 Z kolei <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiekty mają ich <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> ustawioną wartość właściwości `false` (przez <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> klasy) ponieważ formant części sieci Web, domyślnie umożliwia połączenia klienta punktów, aby nawiązać połączenie z tylko jednego dostawcę w czas.  
  
 Można zmienić domyślne zachowanie dotyczące wielu połączeń, przypisując różne wartości do <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> właściwości (dla dostawców) lub <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> właściwości (dla użytkowników) w dwóch <xref:System.Attribute> klasy służące do połączeń atrybuty. Po włączeniu punkty połączenia klienta do nawiązania połączenia wielu dostawców na tym samym czasie kodu musi uwzględniać wynikowy problemów z synchronizacją.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> właściwości zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykładowy kod przedstawia strony sieci Web, który zawiera kod, aby dostęp do właściwości; dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Przegląd klasy.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> właściwości każdego punktu połączenia obiektów i zapisuje każda wartość etykiety. Wykonanie kodu, klikając **szczegóły punktu połączenia** przycisku po załadowaniu w przeglądarce strony.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Type" /> formantu serwera, z którym jest skojarzona punktu połączenia.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący typ formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> właściwość jest często <xref:System.Web.UI.WebControls.WebParts.WebPart> typu. Jednak ponieważ dowolnego typu kontrolki użytkownika lub kontrolki serwera mogą uczestniczyć w połączenia, jeśli została prawidłowo włączona i umieszczone w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> właściwości można przywrócić jedną z tych innych serwera kontroli typów również.  
  
 Gdy serwer kontroluje, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart> formanty są umieszczane w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy, ich są ujęte w <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> obiektu w czasie wykonywania, mogą stanowić <xref:System.Web.UI.WebControls.WebParts.WebPart> steruje i brać udział w połączeniach. Ale w przypadku takich formantów w oknie połączenia <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> nie może zwracać wartości właściwości <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> wpisz; zwraca typ <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> formant podrzędny obiektu, który jest typem formantu serwera lub użytkownika.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> właściwości zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykładowy kod przedstawia strony sieci Web, który zawiera kod, aby dostęp do właściwości; dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Przegląd klasy.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> właściwości każdego punktu połączenia obiektów i zapisuje każda wartość etykiety. Wykonanie kodu, klikając **szczegóły punktu połączenia** przycisku po załadowaniu w przeglądarce strony.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje ciąg używany do identyfikowania punktu połączenia domyślne w kolekcji punktów połączenia skojarzony z formantem serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu punktu połączenia jest możliwe określenie Identyfikatora punktu połączenia w kodzie źródłowym konsumenta lub dostawcy <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować za pomocą <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> lub <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> atrybutu. Jednak po dodaniu atrybutu do punktu połączenia w kodzie źródłowym `ID` parametr jest opcjonalny. Jeśli identyfikator nie jest określony w atrybucie, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> pole zawiera ciąg, który służy do identyfikowania domyślnego punktu połączenia.  
  
 Jeśli wiele punktów połączenia są zdefiniowane w formancie użytkownika lub dostawcy, należy określić identyfikator dla każdego punktu połączenia, aby punkty połączenia można rozróżnić podczas tworzenia połączenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który służy jako przyjazną nazwę wyświetlaną reprezentuje punkt połączenia w interfejsie użytkownika (UI).</summary>
        <value>Ciąg, który zawiera przyjazną nazwę wyświetlaną dla <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć połączenie części sieci Web, kontrolek dostawcy i klienta dla połączenia każdego określić co najmniej jedno połączenie punkt, metodę, która umożliwia im komunikację i udostępnianie danych. Aby zidentyfikować te metody punktu połączenia, Projektant Określa atrybut na wybrane metody zostaną usunięte. W dostawcy `ConnectionProvider` atrybut jest ustawiony na metodę wywołania zwrotnego wybrany, a w konsumenta, `ConnectionConsumer` atrybut jest ustawiony na metodę, która otrzymuje wystąpienie interfejsu, który zawiera dane od dostawcy. W przypadku obu tych atrybutów jest jeden parametr, który jest zawsze wymagane niezależnie od tego, które przeładowanie jest zadeklarowana, aby utworzyć atrybutu, `displayName` parametru. Deweloper musi przypisać ciąg ma być używany jako przyjazną nazwę wyświetlaną dla punktu połączenia, a ten ciąg staje się wartością <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Wartość właściwości jest wyświetlana w Interfejsie użytkownika strony sieci Web, gdy użytkownicy będą tworzyć połączeń. Na przykład, jeśli <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> formant został dodany do strony, tworzy interfejsu użytkownika dla użytkowników w celu utworzenia połączenia między formantami. Po użytkownik zmienia stronę w trybie wyświetlania connect i kliknie zlecenie connect <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować, połączenie zostanie wyświetlony interfejs użytkownika. Każdej kontrolki, które mogą uczestniczyć w połączeniu znajduje się w interfejsie użytkownika, a obok każdej kontrolki jest kontrolkę listy rozwijanej, która wyświetla przyjaznych nazw jego dostępnych punktów połączenia. Użytkownicy muszą zaznaczyć co najmniej jedno połączenie punkt ustanowić połączenie. Wartości, które znajdują się na liście punktów połączenia są uzyskiwane z <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> właściwości. Jeśli deweloperom tworzenie niestandardowego interfejsu użytkownika dla tworzenia połączenia, można użyć <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> właściwości w podobny sposób jak Podaj przyjazną nazwę, która reprezentuje punktu połączenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lub innych formantu serwera, który jest skojarzony z punktu połączenia.</param>
        <summary>Zwraca wartość wskazującą, czy punkt połączenia mogą brać udział w połączeniach.</summary>
        <returns>
          <see langword="true" /> Jeśli formant można utworzyć punktu połączenia do udziału w przypadku połączenia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Metody w podstawowym <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> klasy zawsze zwraca `true`, ale klasy pochodne mogą zastąpić metodę, aby zwrócić `true` lub `false` w różnym czasie, na podstawie stanu `control`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metody zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykładowy kod przedstawia strony sieci Web, który zawiera kod, aby dostęp do właściwości; dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Przegląd klasy.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> metody dla każdego punktu połączenia obiektów i zapisuje każda wartość etykiety. Wykonanie kodu, klikając **szczegóły punktu połączenia** przycisku po załadowaniu w przeglądarce strony.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który zawiera identyfikator punktu połączenia.</summary>
        <value>Ciąg, który zawiera identyfikator punktu połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy deklaruje dewelopera <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> lub <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> atrybutu dla metody w kodzie źródłowym formantu, aby metody można użyć jako punkt połączenia, nie jest wymagane do deklarowania `ID` parametr dla atrybutu punktu połączenia. Tylko wymaganego atrybutu `displayName` parametru. Domyślny identyfikator jest przypisany do punktu połączenia przy użyciu wartości <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> pola.  
  
 Jeśli istnieje tylko jedna metoda w formancie używany jako punkt połączenia, nie trzeba określić identyfikator punktu połączenia. Jeśli istnieje wiele metod określony jako punkty połączenia, należy określić identyfikator dla każdej z nich; w przeciwnym razie zostanie wygenerowany wyjątek. Przypisując identyfikator do każdego punktu połączenia, należy również umożliwić Określ, którego punktu połączenia do użycia podczas zadeklarować połączeń na stronach sieci Web lub utworzyć je w kodzie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> właściwości zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykładowy kod przedstawia strony sieci Web, który zawiera kod, aby dostęp do właściwości; dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Przegląd klasy.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> właściwości każdego punktu połączenia obiektów i zapisuje każda wartość etykiety. Wykonanie kodu, klikając **szczegóły punktu połączenia** przycisku po załadowaniu w przeglądarce strony.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ interfejsu używanego przez punkt połączenia.</summary>
        <value>A <see cref="T:System.Type" /> , który odpowiada typowi interfejsu dostarczona lub zużyte przez formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Właściwość wskazuje korzysta z jakiego rodzaju interfejsu punktu połączenia. Może to ułatwić ustalenie, czy dwa formanty są zgodne i może się komunikować. Jeśli punkt połączenia dostawcy <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> różni się od punkt połączenia klienta <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, następnie dwóch formantów są niezgodne (co oznacza, że nie można bezpośrednio połączone bez transformatora), a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiekt musi można użyć do nawiązania połączenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> właściwości zarówno <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> i <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> obiektów. Ten przykładowy kod przedstawia strony sieci Web, który zawiera kod, aby dostęp do właściwości; dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Przegląd klasy.  
  
 Kod w `Button2_Click` metoda uzyskuje dostęp do strony sieci Web <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> właściwości każdego punktu połączenia obiektów i zapisuje każda wartość etykiety. Wykonanie kodu, klikając **szczegóły punktu połączenia** przycisku po załadowaniu w przeglądarce strony.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
  </Members>
</Type>