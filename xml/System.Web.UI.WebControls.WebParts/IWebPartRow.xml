<Type Name="IWebPartRow" FullName="System.Web.UI.WebControls.WebParts.IWebPartRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c80b98ffae0dc04e0a126a1e2ae739d75d93fb4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395186" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartRow" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartRow" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartRow" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartRow" />
  <TypeSignature Language="F#" Value="type IWebPartRow = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje interfejs dostawcy do łączenia dwóch formantów serwera przy użyciu jednego pola danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest przeznaczony do użycia z połączeniami składniki Web Part. W przypadku połączenia składniki Web Part dwie kontrolki serwera, które znajdują się <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> w strefie, ustanawiają połączenie i udostępniają dane, z jedną kontrolą działającą jako klient i drugą kontrolę działającą jako dostawca. Mechanizm udostępniania danych w ramach połączenia składniki Web Part jest wystąpieniem interfejsu, które jest obsługiwane przez dostawcę w ramach metody wywołania zwrotnego. Aby nawiązać połączenie, odbiorca i dostawca muszą jednocześnie współpracować z tym samym typem interfejsu w celu udostępniania danych. Jeśli użytkownik nie rozpoznaje typu interfejsu wysyłanego przez dostawcę, nadal można połączyć kontrolki za pomocą transformatora ( <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu), który tłumaczy wystąpienie interfejsu wysyłane przez dostawcę na typ, który konsument wprowadzoną. Aby uzyskać szczegółowe informacje na temat <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> połączeń, zobacz i [składniki Web Part połączenia — Omówienie](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)).  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Interfejs jest interfejsem dostawcy dołączonym do zestawu kontrolki składniki Web Part jako standardowy interfejs do tworzenia połączeń na podstawie wiersza danych. Możesz również utworzyć niestandardowe interfejsy do użycia z połączeniami składniki Web Part, ale w wielu aplikacjach sieci Web opartych na danych, warto utworzyć połączenia na podstawie wspólnego pola (Aby uzyskać szczegółowe informacje, zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfejs), tabelę (Aby uzyskać szczegółowe informacje, zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Interfejs) lub wiersz ze źródła danych. W typowym połączeniu <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka działająca jako dostawca <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> implementuje interfejs i udostępnia wystąpienie interfejsu klientom w specjalnej metodzie wywołania zwrotnego. Na przykład dostawca może zaimplementować <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interfejs dla wiersza, który odnosi się do użytkownika w tabeli informacji o użytkowniku. Inna <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolka działająca jako odbiorca definiuje specjalną metodę w celu otrzymania wystąpienia interfejsu, a następnie wyodrębni dane użytkownika, użyje go w celu wyszukania dodatkowych informacji na temat kont tego użytkownika i wyświetlenia wszystkich informacji związanych z Ten użytkownik na stronie.  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Interfejs ma dwóch uwidocznionych członków. Właściwość zwraca informacje o schemacie dotyczące wiersza danych hermetyzowane <xref:System.ComponentModel.PropertyDescriptorCollection> w obiekcie. <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> Metoda deklaruje metodę, która jest wykorzystywana przez implementujący (na przykład formant dostawcy) do pobierania danych wiersza wystąpienia interfejsu, gdy wywoływana jest metoda wywołania zwrotnego.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć połączenie statyczne między dwoma kontrolkami przy użyciu <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interfejsu. Przykład kodu ma trzy części:  
  
-   Kod źródłowy dwóch niestandardowych <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolek, które mogą tworzyć połączenia <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> przy użyciu interfejsu, z jedną kontrolą działającą jako dostawca, a drugą, działającą jako konsument.  
  
-   Strona sieci Web, która hostuje kontrolki i deklaruje połączenie statyczne w formacie trwałości.  
  
-   Opis tego, co się stanie po uruchomieniu przykładowego kodu.  
  
 Pierwszą częścią przykładu kodu jest kod źródłowy dla dwóch formantów niestandardowych. Pierwszy jest kodem dostawcy, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interfejs. Dla uproszczenia w tym przykładzie dostawca tworzy tabelę z danymi, zamiast łączyć się z bazą danych. `GetConnectionInterface` Metoda służy jako punkt połączenia dostawcy, metoda wywołania zwrotnego zwracająca wystąpienie interfejsu do konsumenta. Podobnie jak w przypadku odbiorcy Pobiera wystąpienie interfejsu od dostawcy w metodzie o nazwie `SetConnectionInterface`, który jest oznaczony `ConnectionConsumer` atrybutem. Po pobraniu wystąpienia interfejsu, konsument, w jego `OnPreRender` metodzie, wywołuje implementację <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> metody w dostawcy, aby pobrać rzeczywiste dane i zapisać je na stronie.  
  
 Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Ten przykład kodu używa kompilacji dynamicznej. Aby zapoznać się z przewodnikiem, który ilustruje sposób [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web.  
  
 [!code-csharp[WebParts_IWebPartRow_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/IRowSamples.cs#2)]
 [!code-vb[WebParts_IWebPartRow_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/IRowSamples.vb#2)]  
  
 Drugą częścią przykładu kodu jest strona sieci Web, która deklaruje połączenie statyczne i obsługuje kontrolki. W górnej części strony jest `Register` dyrektywa, która deklaruje przestrzeń nazw kodu źródłowego znajdującego się w katalogu App_Code. Połączenie jest zadeklarowane za pomocą `<asp:webpartconnection>` elementu. Formanty niestandardowego użytkownika i dostawcy są deklarowane w `<zonetemplate>` elemencie `<asp:webpartzone>` w obrębie elementu, który jest wymagany do nawiązania połączenia (muszą znajdować się w obrębie <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy, która dziedziczy z klasy).  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 Załaduj stronę w przeglądarce. Kontrolka odbiorca wyświetla dane dostarczone z określonego wiersza, które udostępnia dostawca za pośrednictwem wystąpienia <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interfejsu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Omówienie połączeń składniki Web Part</related>
  </Docs>
  <Members>
    <Member MemberName="GetRowData">
      <MemberSignature Language="C#" Value="public void GetRowData (System.Web.UI.WebControls.WebParts.RowCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRowData(class System.Web.UI.WebControls.WebParts.RowCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRowData (callback As RowCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRowData(System::Web::UI::WebControls::WebParts::RowCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetRowData : System.Web.UI.WebControls.WebParts.RowCallback -&gt; unit" Usage="iWebPartRow.GetRowData callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.RowCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.Web.UI.WebControls.WebParts.RowCallback" /> Delegat zawierający adres metody, która odbiera dane.</param>
        <summary>Zwraca dane dla wiersza, który jest używany przez interfejs jako podstawa połączenia między dwoma <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolkami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby pobrać wartości wiersza danych przesłane przez interfejs. Dostawca implementuje tę metodę, a konsument wywołuje ją w momencie, gdy konsument jest gotowy do przetwarzania lub renderowania danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację i użycie <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> metody. Pełny przykład jest przedstawiony w Przegląd klasy dla <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interfejsu. Formant dostawcy implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> metodę, zwracając wartość określonego wiersza w tabeli danych. Kontrolka odbiorcy wywołuje <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> metodę w swojej `OnPreRender` metodzie, aby wartość danych mogła być zapisywana na stronie.  
  
 [!code-csharp[WebParts_IWebPartRow_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/IRowSamples.cs#2)]
 [!code-vb[WebParts_IWebPartRow_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/IRowSamples.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptorCollection" Usage="System.Web.UI.WebControls.WebParts.IWebPartRow.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o schemacie dla wiersza danych, który jest używany do udostępniania danych między <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dwoma kontrolkami.</summary>
        <value><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Opisującym dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zawiera informacje o właściwościach danych. Przy użyciu <xref:System.ComponentModel.PropertyDescriptorCollection> interfejsu w połączeniu otrzymujesz obiekt, do <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> którego odwołuje się właściwość. <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Kontrakt Określa, że wywołanie `Schema[n].GetValue(RowData)` zwraca wartość *n*tej kolumny w wierszu. Musisz użyć właściwości, <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> aby pobrać wartości z wiersza.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację i użycie <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> właściwości. Pełny przykład jest przedstawiony w Przegląd klasy dla <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interfejsu. Formant dostawcy implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> właściwość. Następnie kontrolka odbiorcy w swojej `RenderContents` metodzie <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> wysyła zapytanie do właściwości w celu pobrania informacji o wierszu w miarę zapisywania danych wierszy na stronie.  
  
 [!code-csharp[WebParts_IWebPartRow_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/IRowSamples.cs#2)]
 [!code-vb[WebParts_IWebPartRow_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/IRowSamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>
