<Type Name="CatalogPartCollection" FullName="System.Web.UI.WebControls.WebParts.CatalogPartCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c7d3a6434b73e5034f9eee5dc157e8206886ac1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69402040" /></Metadata><TypeSignature Language="C#" Value="public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CatalogPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CatalogPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type CatalogPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolek służącą do udostępniania wykazów kontrolek serwera sieci Web, które użytkownicy końcowi mogą dodawać do strony sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa to <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> kolekcja formantów tylko do odczytu, zazwyczaj używana przez strefę do śledzenia zestawu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek zawartych w strefie. <xref:System.Web.UI.WebControls.WebParts.CatalogPart> <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>  
  
 Gdy strona składniki Web Part przechodzi w tryb katalogu, strefa tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt składający się <xref:System.Web.UI.WebControls.WebParts.CatalogPart> z kontrolek. Każda <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolka w kolekcji może zawierać odwołania do zera lub większej liczby kontrolek serwera sieci Web, które są wyświetlane w postaci wykazu dostępnych kontrolek serwera.  
  
 Można utworzyć <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> kolekcję kontrolek do użytku programistycznego, jeśli na przykład trzeba wykonać pewne operacje masowe na <xref:System.Web.UI.WebControls.WebParts.CatalogPart> zestawie kontrolek. Mimo że <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt jest tylko do odczytu, można wprowadzać programistyczne zmiany do podstawowych kontrolek, do których odwołuje się kolekcja.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje kilka zastosowania <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> klasy. Ten przykład kodu zawiera cztery części:  
  
-   Kontrolka użytkownika, która umożliwia zmianę trybów wyświetlania na stronie składniki Web Part.  
  
-   Klasa kontrolki niestandardowej <xref:System.Web.UI.WebControls.WebParts.WebPart> o nazwie `TextDisplayWebPart`, do której odwołuje się Strona sieci Web i znajduje się w jednym z <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek.  
  
-   Strona sieci Web `TextDisplayWebPart` , która odwołuje się do kontrolki, <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolkę z dwoma kontrolkami z zestawu kontrolek składniki Web Part zadeklarowanego w strefie i zawiera kod sterowany zdarzeniami służący <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> do tworzenia obiektów i manipulowania nimi.  
  
-   Wyjaśnienie, jak działa przykład kodu po załadowaniu go do przeglądarki.  
  
 Pierwszą częścią przykładu kodu jest kontrolka użytkownika. Kod źródłowy kontrolki użytkownika pochodzi z innego tematu. Aby ten przykład kodu działał, należy uzyskać plik. ascx dla kontrolki użytkownika z [przewodnika: Zmiana trybów wyświetlania na składniki Web Part stronie](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) tematu i umieszczenie pliku w tym samym folderze, w którym znajduje się Strona. aspx w tym przykładzie kodu.  
  
 Drugą częścią przykładu kodu jest `TextDisplayWebPart` kontrolka. Aby przykład kodu był uruchamiany, należy skompilować ten kod źródłowy. Można ją skompilować jawnie i umieścić zestaw w folderze bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można umieścić kod źródłowy w folderze App_Code witryny, w którym będzie on dynamicznie kompilowany w czasie wykonywania. Aby zapoznać się z przewodnikiem, który ilustruje obie metody [kompilowania, zobacz Przewodnik: Opracowywanie i używanie niestandardowej kontrolki](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)serwera sieci Web. Należy zauważyć, że kontrolka ma właściwość `ContentText`o nazwie; ta właściwość zawiera wartość, którą użytkownik wprowadza w polu tekstowym.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 Trzecią częścią przykładu kodu jest strona sieci Web. Zauważ, że `<asp:catalogzone>` element strony zawiera deklaracje dla dwóch <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek. Te kontrolki staną się częścią <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> niestandardowego obiektu, który jest tworzony `Button1_Click` podczas wykonywania metody. <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Kontrolka zawiera kontrolki serwera sieci Web, które zostały wcześniej zamknięte przez użytkownika w czasie wykonywania. Kontrolki w <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolce można dodawać z powrotem do strony. Kontrolka zawiera deklarację kontrolki niestandardowej `TextDisplayWebPart`. <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Gdy strona znajduje się w trybie katalogu, użytkownik może dodać `TextDisplayWebPart` formant do strony, aby można było go użyć w trybie przeglądania normalnego.  
  
 [!code-aspx-csharp[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#1)]  
  
 Podczas ładowania strony w przeglądarce możesz przełączyć stronę do trybu katalogowego, wybierając pozycję **katalog** w kontrolce listy rozwijanej **tryb wyświetlania** . Możesz dodać kontrolkę niestandardową <xref:System.Web.UI.WebControls.WebParts.WebPart> do strony, zaznaczając pole wyboru obok niego i klikając przycisk **Dodaj**. Kliknij przycisk **Zamknij** , aby przywrócić stronę do trybu przeglądania. Po dodaniu kontrolki, jeśli klikniesz menu czasowniki (strzałkę w dół, która pojawia się na pasku tytułu), a następnie klikniesz przycisk **Zamknij**, formant zostanie usunięty ze strony i dodany do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolki. Zwróć stronę do trybu katalogowego i kliknij link **wykazu stron** , aby wyświetlić zawartość <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolki. Zauważ, że w tym miejscu pojawia się już zamknięty formant. Kliknięcie przycisku **właściwości wyświetlania CatalogPart** umożliwia dostęp <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> do obiektu i wyświetla pewne właściwości zawartych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strefa zawierająca <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki jest zazwyczaj formantem, który tworzy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt za pomocą <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> metody. <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Można jednak również utworzyć własny <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt dla innych celów programistycznych.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe, puste wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor inicjuje puste wystąpienie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> klasy. <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> To przeciążenie konstruktora jest używane wewnętrznie przez <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasę w swojej <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metodzie do tworzenia pustego obiektu kolekcji. Następnie strefa tworzy wystąpienia wszystkich <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek zadeklarowanych w szablonie strefy podrzędnej i używa wewnętrznej metody kolekcji, aby je dodać.  
  
 Nie można użyć tego przeciążenia <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> konstruktora, aby utworzyć nowe wystąpienie obiektu <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> i dodać <xref:System.Web.UI.WebControls.WebParts.CatalogPart> do niego formanty. Zamiast tego należy użyć jednego z innych przeciążeń <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> dla konstruktora.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection catalogParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="catalogParts"><see cref="T:System.Collections.ICollection" /> Kontrolki<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> .</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> klasy przez przekazanie <see cref="T:System.Collections.ICollection" /> kolekcji <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor inicjuje wystąpienie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> klasy i <xref:System.Web.UI.WebControls.WebParts.CatalogPart> przekazuje kolekcję kontrolek. <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> Jest to jedno Przeciążenie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> konstruktora, którego można użyć do utworzenia nowego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu i dodania <xref:System.Web.UI.WebControls.WebParts.CatalogPart> do niego kontrolek.  
  
 Mimo że <xref:System.Web.UI.WebControls.WebParts.CatalogPart> wystąpienie utworzone przez konstruktora jest tylko do odczytu, można nadal uzyskać dostęp do poszczególnych kontrolek w kolekcji programowo i wywołać ich właściwości i metody. <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>  
  
 Typowym scenariuszem korzystania z tego konstruktora będzie wykonywanie niektórych operacji wsadowych na całym zestawie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, takich jak zmiana zawartości, wygląd lub położenie powiązanej grupy elementów.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można utworzyć niestandardowe <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>i wykonać operację wsadową zmiany poszczególnych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek w kolekcji, mimo że jest tylko do odczytu. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> przykład w temacie Omówienie klasy.  
  
 Kod `Button1_Click` w metodzie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> <xref:System.Collections.ArrayList> tworzy obiekt, dodaje dwie kontrolki na stronie do obiektu, <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> a następnie tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> Obiekt przy użyciu konstruktora. Przedstawiono w nim również, jak można wprowadzać zmiany wsadowe w <xref:System.Web.UI.WebControls.WebParts.CatalogPart> podstawowych kontrolkach, nawet jeśli sama kolekcja jest tylko do odczytu. Kod wykonuje pętlę w kolekcji, aktualizując <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> właściwość każdej kontrolki.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce możesz przełączyć stronę do trybu katalogowego, wybierając pozycję **katalog** w kontrolce listy rozwijanej **tryb wyświetlania** . Kliknięcie przycisku **właściwości wyświetlania CatalogPart** umożliwia dostęp <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> do obiektu i wyświetla pewne właściwości zawartych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek. Ponadto jeśli umieścisz wskaźnik myszy nad tekstem tytułu w obramowaniu <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> kontrolki, zobaczysz nowy tekst opisu, który został dodany do kontrolki po kliknięciu przycisku (opis pojawia się w etykietce narzędzia). Jeśli klikniesz link **wykazu stron** , aby wyświetlić <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> formant, zobaczysz także zaktualizowany opis.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingCatalogParts As CatalogPartCollection, catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ existingCatalogParts, System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Web.UI.WebControls.WebParts.CatalogPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection (existingCatalogParts, catalogParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingCatalogParts" Type="System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingCatalogParts"><see cref="T:System.Collections.ICollection" /> Istniejących<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolek w strefie.</param>
        <param name="catalogParts">Z dodatkowymi <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />kontrolkami. <see cref="T:System.Collections.ICollection" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> klasy przez przekazanie <see cref="T:System.Collections.ICollection" /> kolekcji istniejących <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolek w strefie oraz dodatkowej kolekcji formantów.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; bool" Usage="catalogPartCollection.Contains catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">Sprawdza <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> , czy znajduje się w kolekcji.</param>
        <summary>Zwraca wartość wskazującą, czy konkretna kontrolka istnieje w kolekcji.</summary>
        <returns>Wartość logiczna wskazująca, czy dana kontrolka znajduje się w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pozwala określić, czy określony <xref:System.Web.UI.WebControls.WebParts.CatalogPart> <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt jest częścią obiektu. <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można określić, czy dana <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolka jest członkiem <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> przykład w temacie Omówienie klasy.  
  
 Kod w `Button1_Click` metodzie tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt o nazwie `myParts`. Metoda używa <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> metody do określenia, `PageCatalogPart1` czy kontrolka istnieje, a jeśli tak, pobiera formant i zmienia wartość właściwości.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce możesz przełączyć stronę do trybu katalogowego, wybierając pozycję **katalog** w kontrolce listy rozwijanej **tryb wyświetlania** . Dodaj kontrolkę <xref:System.Web.UI.WebControls.WebParts.WebPart> niestandardową do strony, zaznaczając pole wyboru obok niego i klikając przycisk **Dodaj**. Kliknij przycisk **Zamknij** , aby przywrócić stronę do trybu przeglądania. Po dodaniu kontrolki, jeśli klikniesz menu czasowniki (strzałkę w dół, która pojawia się na pasku tytułu), a następnie klikniesz przycisk **Zamknij**, formant zostanie usunięty ze strony i dodany do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolki. Zwróć stronę do trybu katalogowego i kliknij link **wykazu stron** , aby wyświetlić zawartość <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolki. Zwróć uwagę, że ZAMKNIĘTA kontrolka została do niej dodana. Kliknięcie przycisku **właściwości wyświetlania CatalogPart** umożliwia dostęp <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> do obiektu i wyświetla pewne właściwości zawartych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek. Zaznacz pole wyboru obok kontrolki serwerowej zawartej w <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolce, kliknij przycisk **Dodaj** , aby dodać ją z powrotem do strony, a następnie kliknij przycisk **Zamknij** , aby przywrócić tryb przeglądania. Kliknij ponownie menu czasowniki na kontrolce i Zauważ, że teraz czasownik zamknięcia został usunięty. Został on usunięty przez `Button1_Click` kod w metodzie, gdy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> użyto metody do sprawdzenia `PageCatalogPart1`, a następnie ustaw jej <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> właściwość na `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.CatalogPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CatalogPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::CatalogPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.CatalogPart[] * int -&gt; unit" Usage="catalogPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.CatalogPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablica <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> obiektów, która zawiera skopiowaną kolekcję.</param>
        <param name="index">Punkt początkowy w tablicy, w której ma zostać umieszczona zawartość kolekcji.</param>
        <summary>Kopiuje kolekcję do tablicy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest przydatna, gdy chcesz złożyć tablicę niestandardową, która może <xref:System.Web.UI.WebControls.WebParts.CatalogPart> zawierać kontrolki w <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekcie lub podzbiór tych kontrolek. <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As CatalogPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Odwołuje się do statycznego, pustego wystąpienia kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Statyczne, tylko do odczytu, puste wystąpienie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> zmniejsza użycie pamięci w przypadkach, gdy puste wystąpienie kolekcji zwraca właściwy typ obiektu z metody lub do porównania wystąpienia z innym obiektem, ale nie trzeba dodawać elementów członkowskich do np.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; int" Usage="catalogPartCollection.IndexOf catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">Element <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> , który jest członkiem kolekcji.</param>
        <summary>Zwraca pozycję określonego elementu członkowskiego kolekcji.</summary>
        <returns>Element, który jest członkiem <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />. <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest przydatna, jeśli masz wiele <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek na stronie składniki Web Part i musisz zlokalizować konkretną kontrolkę w kolekcji. <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można określić położenie elementu członkowskiego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> kolekcji przy użyciu jego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> właściwości. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> przykład w temacie Omówienie klasy.  
  
 Kod w `Button1_Click` metodzie tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt o nazwie `myParts`. Metoda używa <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> właściwości do pobierania położenia <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolki, a następnie zmienia wartość właściwości w kontrolce.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Po załadowaniu strony w przeglądarce można przełączyć ją w tryb katalogu, wybierając pozycję **katalog** w kontrolce listy rozwijanej **tryb wyświetlania** . Kliknięcie przycisku **właściwości wyświetlania CatalogPart** umożliwia dostęp <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> do obiektu i wyświetla pewne właściwości zawartych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek. Kliknij link **wykazu stron** , aby wyświetlić zawartość <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontrolki. Należy zauważyć, że ma tylko tytuł i brak obramowania, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> jego wartość właściwości została zmieniona <xref:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly> na w kodzie, który użył <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> właściwości, aby pobrać formant.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca określony element członkowski kolekcji zgodnie z jego pozycją lub unikatowym identyfikatorem.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[int] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks danego <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> elementu w kolekcji.</param>
        <summary>Pobiera lub ustawia element członkowski kolekcji na podstawie jego pozycji w kolekcji.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> o określonym indeksie w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indeksator pozwala uzyskać dostęp do podstawowych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekcie według indeksu i zmieniać ich wartości właściwości lub metody wywoływania. <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można uzyskać dostęp do elementu członkowskiego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu przy użyciu jego indeksu. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> przykład w temacie Omówienie klasy.  
  
 Kod w `Button1_Click` metodzie tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt o nazwie `myParts`. Należy zauważyć, że metoda używa <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indeksatora do pobierania informacji z pierwszego elementu członkowskiego kolekcji.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce możesz przełączyć stronę do trybu katalogowego, wybierając pozycję **katalog** w kontrolce listy rozwijanej **tryb wyświetlania** . Kliknięcie przycisku **właściwości wyświetlania CatalogPart** umożliwia dostęp <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> do obiektu i wyświetla pewne właściwości zawartych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek. Liczba dostępnych kontrolek serwera w <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> formancie jest uzyskiwana za <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> pomocą indeksatora w `Button1_Click` metodzie.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(id As String) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[System::String ^] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(System::String ^ id); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Unikatowy identyfikator dla danego <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> elementu w kolekcji.</param>
        <summary>Zwraca element członkowski kolekcji na podstawie unikatowego identyfikatora ciągu.</summary>
        <value>Pierwszy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> w kolekcji, którego identyfikator jest równa <paramref name="id" />wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indeksator pozwala uzyskać dostęp do podstawowych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekcie przy użyciu identyfikatora ciągu. <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> Chociaż obiekt jest tylko do odczytu, można zmienić wartości właściwości lub wywołać metody na podstawowych kontrolkach, do których uzyskuje dostęp indeksator.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można uzyskać dostęp do elementu członkowskiego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu przy użyciu jego wartości identyfikatora ciągu. Aby uzyskać pełny kod wymagany do uruchomienia tego przykładu, zobacz sekcję <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> przykład w temacie Omówienie klasy.  
  
 Kod w `Button1_Click` metodzie tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt o nazwie `myParts`. Metoda używa <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indeksatora do pobierania informacji <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> o kontrolce, która jest drugim elementem członkowskim kolekcji.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce możesz przełączyć stronę do trybu katalogowego, wybierając pozycję **katalog** w kontrolce listy rozwijanej **tryb wyświetlania** . Kliknięcie przycisku **właściwości wyświetlania CatalogPart** umożliwia dostęp <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> do obiektu i wyświetla pewne właściwości zawartych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolek. Liczba dostępnych kontrolek serwera w <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> formancie jest uzyskiwana za <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> pomocą indeksatora w `Button1_Click` metodzie.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Kontrolki składniki Web Part ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
