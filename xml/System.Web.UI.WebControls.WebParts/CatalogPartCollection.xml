<Type Name="CatalogPartCollection" FullName="System.Web.UI.WebControls.WebParts.CatalogPartCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="277fb34684370b6b938807b17e08074eccf1e46d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CatalogPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CatalogPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera kolekcję <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formanty używane do zapewnienia katalogi kontrolki serwera sieci Web, które użytkownicy końcowi można dodać do strony sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> Klasy jest tylko do odczytu zbiór <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów, zwykle używane przez <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> strefy, aby śledzić zbiór <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty zawarte w strefie.  
  
 Gdy strona części sieci Web wprowadza tryb katalogu, strefy tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt zawierający <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów. Każdy <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formant w kolekcji może zawierać odwołania do zera lub większej liczbą kontrolki serwera sieci Web, które są wyświetlane w postaci katalogu formantów dostępnego serwera.  
  
 Można utworzyć <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> kolekcja formantów na własny użytek programowe, jeśli na przykład, należy wykonać niektóre masowej operacji na zestawie <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Mimo że <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt jest tylko do odczytu, można zmienić programowe do podstawowej formantów w kolekcji.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano kilka zastosowań <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> klasy. Istnieją cztery części w tym przykładzie kodu:  
  
-   Formant użytkownika, który umożliwia zmianę trybów wyświetlania na stronie części sieci Web.  
  
-   Klasa niestandardowych <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu o nazwie `TextDisplayWebPart`, który odwołuje się do strony sieci Web i znajduje się w jednym z <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów.  
  
-   Strony sieci Web, który odwołuje się do `TextDisplayWebPart` kontrolować, zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogZone> formantu o dwóch <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty z kontroli części sieci Web, ustaw zadeklarowane w strefie i zawiera sterowane zdarzeniami kodu do tworzenia i modyfikowania <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu.  
  
-   Wyjaśnienie, jak przykładowy kod działa po załadowaniu w przeglądarce.  
  
 Pierwsza część przykładowy kod jest kontrolki użytkownika. Kod źródłowy formant użytkownika pochodzi z innego tematu. W tym przykładzie kodu do pracy, należy uzyskać plik .ascx kontrolki użytkownika z [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) tematu i umieścić go w tym samym folderze, w tym przykładzie kodu strony .aspx.  
  
 Druga część przykładowy kod jest `TextDisplayWebPart` formantu. Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. Aby uzyskać wskazówki, który pokazuje obie metody tworzenia, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08). Należy pamiętać, że kontrolka ma właściwości o nazwie `ContentText`; ta właściwość ma wartość w polu tekstowym wprowadzonych przez użytkownika.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 Trzeci część przykładowy kod jest strony sieci Web. Zwróć uwagę, że `<asp:catalogzone>` element strony zawiera deklaracje dla dwóch <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Formanty te staną się częścią niestandardowego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu, który jest tworzony podczas `Button1_Click` metoda jest wykonywana. <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Formant zawiera kontrolki serwera sieci Web, które zostały wcześniej zamknięte przez użytkownika w czasie wykonywania. Formanty w <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> powrót do strony można dodać formantu. <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Formant zawiera deklarację niestandardowego `TextDisplayWebPart` formantu. Gdy strona jest w trybie katalogu, użytkownik może dodawać `TextDisplayWebPart` kontroli do strony, dzięki czemu można w trybie normalnym przeglądania.  
  
 [!code-aspx-csharp[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#1)]  
  
 Podczas ładowania strony w przeglądarce strony można przełączyć do trybu katalogu, wybierając **katalogu** w **tryb wyświetlania** kontrolka listy rozwijanej. Możesz dodać niestandardowe <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu do strony, zaznaczając pole wyboru obok niej i klikając **Dodaj**. Kliknij przycisk **Zamknij** aby powrócić do strony, aby tryb przeglądania. W formancie dodaną, jeśli kliknij menu zleceń (strzałkę w dół wyświetlany na pasku tytułu), a następnie kliknij **Zamknij**, kontrolka jest usuwane ze strony i dodać do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> formantu. Zwraca stronę do trybu katalogu, a następnie kliknij przycisk **katalogu strony** łącze, aby wyświetlić zawartość <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> formantu. Należy zauważyć, że formant, który zostanie teraz zamknięty pojawia się w. Kliknięcie przycisku **właściwości CatalogPart wyświetlania** przycisk uzyskuje dostęp do <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu i wyświetla niektórych właściwości zamkniętego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Strefy, która zawiera <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów jest zwykle kontrolkę, która tworzy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> za pomocą <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> metody. Jednak można również utworzyć własne <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu do innych celów programistycznych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nową, pustą wystąpienie <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> Konstruktor inicjuje puste wystąpienie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> klasy. To przeciążenie konstruktora jest używana wewnętrznie przez <xref:System.Web.UI.WebControls.WebParts.CatalogZone> klasy w jego <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> metodę w celu utworzenia obiektu pustej kolekcji. Strefa tworzy następnie wszystkie wystąpienia <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów zadeklarowany w szablonie strefy podrzędnej, a używa metody wewnętrznej kolekcji je dodać.  
  
 Nie można użyć tego przeciążenia <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> i Dodaj <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty do niego. Należy użyć jednego z przeciążeń dla <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> Konstruktor zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Collections::ICollection ^ catalogParts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="catalogParts">
          <see cref="T:System.Collections.ICollection" /> z <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> klasy, przekazując w <see cref="T:System.Collections.ICollection" /> Kolekcja <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> Konstruktor inicjuje wystąpienie klasy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> klasy i przebiegów w kolekcji <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Jest to jednego przeciążenia <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> Konstruktor, który służy do tworzenia nowego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu i dodać <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty do niego.  
  
 Mimo że <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> utworzonego przez konstruktora wystąpienia jest tylko do odczytu, nadal możesz uzyskać dostępu do poszczególnych <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty w kolekcji programowo i Wywołaj ich właściwości i metody.  
  
 Jeden scenariusz wspólnej za pomocą tego konstruktora będzie, jeśli chcesz wykonać niektórych operacji zbiorczej na cały zestaw <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty, takie jak zmiana zawartości, wyglądu lub pozycji powiązanych grupy elementów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia niestandardowego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>i wykonaj operację wsadową, aby zmienić poszczególne <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formanty w kolekcji, nawet jeśli jest on tylko do odczytu. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> temat klasy.  
  
 Kod w `Button1_Click` metoda tworzy <xref:System.Collections.ArrayList> obiektów, dodaje dwa <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki na stronie do obiektu, a następnie tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> przy użyciu <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> konstruktora. Również pokazano, jak można zmieniać partii do odpowiadającego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki, nawet jeśli sama kolekcja jest tylko do odczytu. Kod w pętli kolekcji, aktualizowanie <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> właściwości każdego formantu.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce strony można przełączyć do trybu katalogu, wybierając **katalogu** w **tryb wyświetlania** kontrolka listy rozwijanej. Kliknięcie przycisku **właściwości CatalogPart wyświetlania** przycisk uzyskuje dostęp do <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu i wyświetla niektórych właściwości zamkniętego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Ponadto jeśli umieść wskaźnik myszy nad tekstem tytuł w obramowania <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> kontroli, zostanie wyświetlony nowy tekst opisu, która została dodana do formantu, gdy kliknięto przycisk (Opis jest wyświetlany w etykietce narzędzia). Jeśli klikniesz przycisk **katalogu strony** łącze, aby wyświetlić <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontroli, znajdują się również ma uaktualniony opis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingCatalogParts As CatalogPartCollection, catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ existingCatalogParts, System::Collections::ICollection ^ catalogParts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingCatalogParts" Type="System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingCatalogParts">
          <see cref="T:System.Collections.ICollection" /> Istniejących <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów w strefie.</param>
        <param name="catalogParts">
          <see cref="T:System.Collections.ICollection" /> Dodatkowych <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> kontrolki.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> klasy, przekazując w <see cref="T:System.Collections.ICollection" /> kolekcji istniejącej <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> formantów w strefie i dodatkowe kolekcji formantów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> który jest sprawdzany w celu określenia, czy znajduje się w kolekcji.</param>
        <summary>Zwraca wartość wskazującą, czy określonego formantu istnieje w kolekcji.</summary>
        <returns>Wartość logiczna wskazująca, czy określonego formantu znajduje się w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> Metody umożliwia określenie, czy do określonego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> obiekt jest częścią <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można określić, czy konkretny <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolka jest elementem członkowskim <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> temat klasy.  
  
 Kod w `Button1_Click` metoda tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu o nazwie `myParts`. W metodzie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> metodę, aby określić, czy `PageCatalogPart1` kontroli istnieje, a jeśli tak, pobiera formant i zmiany wartości właściwości.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce strony można przełączyć do trybu katalogu, wybierając **katalogu** w **tryb wyświetlania** kontrolka listy rozwijanej. Dodawanie niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart> formantu do strony, zaznaczając pole wyboru obok niej i klikając **Dodaj**. Kliknij przycisk **Zamknij** aby powrócić do strony, aby tryb przeglądania. W formancie dodaną, jeśli kliknij menu zleceń (strzałkę w dół wyświetlany na pasku tytułu), a następnie kliknij **Zamknij**, kontrolka jest usuwane ze strony i dodać do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> formantu. Zwraca stronę do trybu katalogu, a następnie kliknij przycisk **katalogu strony** łącze, aby wyświetlić zawartość <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> formantu. Należy zauważyć, że formant, który został zamknięty dodano do niego. Kliknięcie przycisku **właściwości CatalogPart wyświetlania** przycisk uzyskuje dostęp do <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu i wyświetla niektórych właściwości zamkniętego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Zaznacz pole wyboru obok kontrolki serwera zawartych w <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> sterowania, kliknij przycisk **Dodaj** dodać go ponownie na stronie, a następnie kliknij przycisk **Zamknij** aby powrócić do strony, aby tryb przeglądania. Kliknij menu zleceń ponownie w formancie i należy pamiętać, że teraz Zlecenie zamknięcia został usunięty. Usunięto go przez kod w `Button1_Click` metody, gdy używany <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> metody do sprawdzenia `PageCatalogPart1`, a następnie ustaw jego <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> właściwości `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.CatalogPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CatalogPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::CatalogPart ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.CatalogPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablica <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> obiektom zawierać skopiowanych kolekcji.</param>
        <param name="index">Punkt początkowy w tablicy, od której ma zostać umieszczony zawartość kolekcji.</param>
        <summary>Kopiuje kolekcję na tablicę <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo%2A> Metoda jest przydatna, jeśli chcesz utworzyć niestandardowe tablica, która może zawierać <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu lub podzbiór tych kontrolek.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As CatalogPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ Empty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Odwołuje się do statycznego, tylko do odczytu, puste wystąpienie kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest statyczny, tylko do odczytu, puste wystąpienie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> zmniejsza zużycie pamięci w przypadku gdy ma pustą kolekcję wystąpienia zwracany typ prawidłowego obiektu z metody lub porównania wystąpienia z innym obiektem, ale nie trzeba dodawać członków do wystąpienie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> będący członkiem kolekcji.</param>
        <summary>Zwraca pozycję określonego członka kolekcji.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> będący członkiem <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> Metoda jest przydatna, jeśli istnieje wiele <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów na stronie sieci Web Part, a musi zlokalizować określonego formantu w kolekcji.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można określić położenie elementu członkowskiego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> kolekcji przy użyciu jego <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> właściwości. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> temat klasy.  
  
 Kod w `Button1_Click` metoda tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu o nazwie `myParts`. W metodzie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> właściwości do pobrania pozycja <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> kontroli, a następnie zmienia wartość właściwości w formancie.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Po załadowaniu strony w przeglądarce strony można przełączyć do trybu katalogu, wybierając **katalogu** w **tryb wyświetlania** kontrolka listy rozwijanej. Kliknięcie przycisku **właściwości CatalogPart wyświetlania** przycisk uzyskuje dostęp do <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu i wyświetla niektórych właściwości zamkniętego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Kliknij przycisk **katalogu strony** łącze, aby wyświetlić zawartość <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> formantu. Należy pamiętać, że ma tylko tytuł i obramowanie, ponieważ jego <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> wartość właściwości została zmieniona na <xref:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly> w kodzie, który jest używany <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> właściwości do pobrania formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość określonego elementu członkowskiego kolekcji według położenia lub unikatowego identyfikatora.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[int] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks określonego <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> w kolekcji.</param>
        <summary>Pobiera lub ustawia element członkowski kolekcji oparte na jej położenie w kolekcji.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> pod określonym indeksem w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> Indeksatora umożliwia dostęp do odpowiadającego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt przez indeks i zmiany ich wartości właściwości lub wywołać metod.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można pobrać członkiem <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> przy użyciu jej indeksu. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> temat klasy.  
  
 Kod w `Button1_Click` metoda tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu o nazwie `myParts`. Należy pamiętać, że w metodzie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indeksatora, aby pobrać informacje z pierwszego elementu członkowskiego kolekcji.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce strony można przełączyć do trybu katalogu, wybierając **katalogu** w **tryb wyświetlania** kontrolka listy rozwijanej. Kliknięcie przycisku **właściwości CatalogPart wyświetlania** przycisk uzyskuje dostęp do <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu i wyświetla niektórych właściwości zamkniętego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Liczba kontrolek serwera dostępne w ramach <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> formant uzyskuje się za pomocą <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indeksatora w `Button1_Click` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(id As String) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[System::String ^] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(System::String ^ id); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Unikatowy identyfikator dla konkretnej <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> w kolekcji.</param>
        <summary>Zwraca element członkowski kolekcji na podstawie identyfikatora unikatowego ciągu.</summary>
        <value>Pierwszy <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> w kolekcji o identyfikatorze jest równa wartości <paramref name="id" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> Indeksatora umożliwia dostęp do odpowiadającego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> formantów w <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu przy użyciu identyfikatora ciągu. Mimo że <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiekt jest tylko do odczytu, można zmienić wartości właściwości lub wywołać metod w formantach podstawowej dostęp indeksatora.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można pobrać członkiem <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> przy użyciu jego wartość Identyfikatora ciągu. Dla pełny kod wymagany do uruchamiania w przykładzie, zobacz sekcję przykład <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> temat klasy.  
  
 Kod w `Button1_Click` metoda tworzy nowy <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu o nazwie `myParts`. W metodzie <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indeksatora, aby pobrać informacje o <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> formantu, który jest drugim elementem członkowskim kolekcji.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Podczas ładowania strony w przeglądarce strony można przełączyć do trybu katalogu, wybierając **katalogu** w **tryb wyświetlania** kontrolka listy rozwijanej. Kliknięcie przycisku **właściwości CatalogPart wyświetlania** przycisk uzyskuje dostęp do <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> obiektu i wyświetla niektórych właściwości zamkniętego <xref:System.Web.UI.WebControls.WebParts.CatalogPart> kontrolki. Liczba kontrolek serwera dostępne w ramach <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> formant uzyskuje się za pomocą <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indeksatora w `Button1_Click` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>