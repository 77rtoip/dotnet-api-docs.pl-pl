<Type Name="IWebPartTable" FullName="System.Web.UI.WebControls.WebParts.IWebPartTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5ad3e6c37dcb69e948b4f8d2c0ae35427b384e4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688484" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPartTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartTable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartTable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje interfejs dostawcy do łączenia dwóch formantów serwera przy użyciu całej tabeli danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest przeznaczony do użycia z połączeń części sieci Web. W przypadku połączenia składników Web Part dwóch formantów serwera, które znajdują się w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> strefy ustanowić połączenie i udziału danych, z jeden formant, który działa jako klient i inne kontrolki pełnią funkcję dostawcy usług. Mechanizm udostępnianie danych w połączeniu składników Web Part jest wystąpienie interfejsu, który dostawca służy do konsumenta za pomocą metody wywołania zwrotnego. Nawiązanie połączenia klienta i dostawcy musi działać z tego samego typu interfejsu udostępnianie danych. Jeśli klient nie rozpoznaje typ interfejsu wysyłane przez dostawcę, jest nadal możliwe nawiązanie formantów za pomocą transformatora ( <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> obiektu) konwertujący wystąpienie interfejsu wysyłane przez dostawcę na typ który konsumenta rozpoznaje. Szczegółowe informacje dotyczące połączenia, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> i [Omówienie połączeń części sieci Web](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Interfejs jest interfejsem dostawcy dołączonego kontroli części sieci Web, Ustaw jako standardowy interfejs do tworzenia połączeń z tabeli danych. Można również tworzyć niestandardowe interfejsy do korzystania z połączeń części sieci Web, ale w wielu opartych na danych aplikacji sieci Web, jest przydatne do utworzenia połączenia na podstawie typowe pola (Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfejsu), wiersz (Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Interface), lub tabeli ze źródła danych. W związku z typowych <xref:System.Web.UI.WebControls.WebParts.WebPart> kontrolować działający jako dostawca czy implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfejsu i zapewnić wystąpienie interfejsu do odbiorców w metodzie specjalne wywołania zwrotnego. Na przykład dostawca może implementacji <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfejs dla tabeli, która zawiera dane dotyczące wydajności finansowych. Inny <xref:System.Web.UI.WebControls.WebParts.WebPart> kontroli działania konsumenta zdefiniowane specjalnej metody do odbierania wystąpienie interfejsu można wyodrębnić danych i renderowania wykresu, aby wyświetlić wynikowe informacje.  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Interfejs ma dwa narażonych elementów członkowskich. <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> Właściwość zwraca schematu informacji o tabeli danych z <xref:System.ComponentModel.PropertyDescriptorCollection> obiektu. <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> Metoda deklaruje metody, która używa implementujący (takich jak kontrola dostawcy) można pobrać danych tabeli wystąpienie interfejsu po wywołaniu metody wywołania zwrotnego.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia statycznego połączenie między dwoma formantów za pomocą <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfejsu. Przykładowy kod ma trzy części:  
  
-   Kod niestandardowy dwa źródła <xref:System.Web.UI.WebControls.WebParts.WebPart> formantów, które można tworzyć przy użyciu połączenia <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfejs, za pomocą formantu jeden działający jako dostawca i innych działając jako klient.  
  
-   Strona sieci Web hostuje formantów i deklaruje statyczne połączenie w formacie trwałości.  
  
-   Opis co się stanie po uruchomieniu przykładowy kod.  
  
 Pierwsza część przykładu kodu jest kodem źródłowym w przypadku dwóch kontrolek niestandardowych. Najpierw jest kod dla dostawcy, który implementuje <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfejsu. Dla uproszczenia w przykładzie dostawcy tworzy tabelę z niektórych danych, a nie połączenie z bazą danych. `GetConnectionInterface` Metody służy jako punkt połączenia dostawcy, metody wywołania zwrotnego, która zwraca wystąpienie interfejsu do użytkownika. Podobnie jak w przypadku konsumenta, pobiera wystąpienie interfejsu od dostawcy metody o nazwie `SetConnectionInterface`, który jest oznaczony atrybutem `ConnectionConsumer` atrybutu. Po pobraniu wystąpienia interfejsu użytkownika, w jego `OnPreRender` wykonania wywołania metod, <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> metody w dostawcy, aby pobrać dane i zapisz go na stronie.  
  
 Na przykład kodu do uruchomienia należy skompilować ten kod źródłowy. Można go skompilować jawnie i umieścić wynikowego zestawu w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów. Alternatywnie można ustawić kodu źródłowego w folderze App_Code witryny, gdzie ona zostanie dynamicznie skompilowany w czasie wykonywania. W tym przykładzie kodu używane kompilacji dynamicznej. Aby uzyskać wskazówki, który demonstruje sposób kompilowania, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 Druga część przykładowy kod jest strony sieci Web, który deklaruje połączenia statyczne i hosty kontrolki. W górnej części strony jest `Register` dyrektywy, który deklaruje przestrzeni nazw kodu źródłowego w katalogu App_Code. Połączenie jest deklarowany przy użyciu `<asp:webpartconnection>` elementu. Niestandardowe formanty klienta i dostawcy są zadeklarowane w `<zonetemplate>` w elemencie `<asp:webpartzone>` element, który jest wymagany można było nawiązać (one musi znajdować się w strefie, która dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> klasy).  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 Ładowanie strony w przeglądarce. Kontrola użytkownika wyświetla dane dostarczone z określonej tabeli, dzięki czemu dostępne za pośrednictwem wystąpienia dostawcy <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfejsu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
  </Docs>
  <Members>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTableData(class System.Web.UI.WebControls.WebParts.TableCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTableData (callback As TableCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTableData(System::Web::UI::WebControls::WebParts::TableCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.TableCallback" />
      </Parameters>
      <Docs>
        <param name="callback">A <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" /> delegata, który zawiera adres metodę, która odbiera dane.</param>
        <summary>Zwraca dane dla tabeli, który jest używany przez interfejs jako podstawa połączenie między dwiema <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody do pobierania wartości tabeli danych przekazany przez interfejs. Dostawca implementuje tę metodę, a klient wywołuje go w punkcie gdy klient jest gotowy do przetwarzania lub renderowania danych.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację i korzystania z <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> metody. Pełny przykład znajduje się w omówieniu klasy dla <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfejsu. Implementuje dostawcę kontroli <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> metody przekazujących dane w określonej tabeli. Wywołania kontroli konsumenta <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> metody w jego `OnPreRender` metodę, tak, aby wartość danych mogą być zapisywane na stronie.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o schemacie dla tabeli danych, który jest używany do udostępniania danych między dwiema <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> kontrolki.</summary>
        <value>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> opisujący dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zawiera informacje dotyczące właściwości danych w <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> wystąpienia. Istnieje niejawna kontraktu między schemat przywoływany przez <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> właściwości i danych w tabeli. Kontrakt jest to, że dla każdego <xref:System.ComponentModel.PropertyDescriptor> obiektu w <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> właściwość, należy wywołać <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> w elemencie danych tabeli można pobrać wartości w kolumnie lub wiersza tabeli.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację i korzystania z <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> właściwości. Pełny przykład znajduje się w omówieniu klasy dla <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfejsu. Implementuje dostawcę kontroli <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> właściwości. Następnie klient kontrolować, w jego `RenderContents` metody, kwerendy <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> właściwości można pobrać informacji o tabeli jako zapisuje dane w tabeli na stronie.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>