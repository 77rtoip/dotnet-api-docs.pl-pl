<Type Name="OdbcCommand" FullName="System.Data.Odbc.OdbcCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d291e2af7651fa25f6ccc163a0a46fb5b7cc3eac" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36686331" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <TypeSignature Language="F#" Value="type OdbcCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje instrukcję SQL lub procedurę składowaną można wykonać względem źródła danych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommand> Klasa udostępnia następujące metody wykonywania poleceń względem źródła danych:  
  
|Element|Opis|  
|----------|-----------------|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>|Wykonuje polecenia, które zwracają wierszy.|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>|Wykonuje polecenia takie jak instrukcji SQL INSERT, DELETE, aktualizacji i zestawu.|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>|Pobiera pojedynczą wartość, na przykład wartości zagregowanej, z bazy danych.|  
  
 Można resetować <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> właściwości i ponowne użycie <xref:System.Data.Odbc.OdbcCommand> obiektu. Jednak należy zamknąć <xref:System.Data.Odbc.OdbcDataReader> przed utworzeniem nowego lub poprzednie polecenie.  
  
 Jeśli wykonanie polecenia powoduje błąd krytyczny <xref:System.Data.Odbc.OdbcException> takich jak poziom ważności programu SQL Server, 20 lub więcej, <xref:System.Data.Odbc.OdbcConnection> mogą zamknąć. Jednak użytkownik może ponownie otworzyć połączenie i kontynuować.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>.  
  
 [!code-csharp[Classic WebData OdbcCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
    <altmember cref="T:System.Data.Odbc.OdbcConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcCommand" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcCommand" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podstawowy Konstruktor inicjuje wszystkie pola z wartościami domyślnymi. W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Data.Odbc.OdbcCommand>.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|pusty ciąg ("")|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|null|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
        <altmember cref="T:System.Data.Odbc.OdbcConnection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcCommand : string -&gt; System.Data.Odbc.OdbcCommand" Usage="new System.Data.Odbc.OdbcCommand cmdText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcCommand" /> klasy z tekstu zapytania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OdbcConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcCommand : string * System.Data.Odbc.OdbcConnection -&gt; System.Data.Odbc.OdbcCommand" Usage="new System.Data.Odbc.OdbcCommand (cmdText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <param name="connection">
          <see cref="T:System.Data.Odbc.OdbcConnection" /> Obiekt, który reprezentuje połączenie ze źródłem danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcCommand" /> klasy tekst zapytania i <see cref="T:System.Data.Odbc.OdbcConnection" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection, System.Data.Odbc.OdbcTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection, class System.Data.Odbc.OdbcTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OdbcConnection, transaction As OdbcTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText, System::Data::Odbc::OdbcConnection ^ connection, System::Data::Odbc::OdbcTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcCommand : string * System.Data.Odbc.OdbcConnection * System.Data.Odbc.OdbcTransaction -&gt; System.Data.Odbc.OdbcCommand" Usage="new System.Data.Odbc.OdbcCommand (cmdText, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
        <Parameter Name="transaction" Type="System.Data.Odbc.OdbcTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <param name="connection">
          <see cref="T:System.Data.Odbc.OdbcConnection" /> Obiekt, który reprezentuje połączenie ze źródłem danych.</param>
        <param name="transaction">Transakcja, w którym <see cref="T:System.Data.Odbc.OdbcCommand" /> wykonuje.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcCommand" /> klasy tekst zapytania, <see cref="T:System.Data.Odbc.OdbcConnection" /> obiektu, a <see cref="P:System.Data.Odbc.OdbcCommand.Transaction" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia tej implementacji <xref:System.Data.Odbc.OdbcCommand>.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|Nowy <xref:System.Data.Odbc.OdbcConnection> czyli wartość `connection` parametru.|  
  
 Przez ustawienie właściwości pokrewne można zmienić wartości jednego z tych parametrów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="odbcCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Próbuje anulować wykonywanie <see cref="T:System.Data.Odbc.OdbcCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma nic do anulowania, nic się nie dzieje. Jednak jeśli jest poleceniem w procesie, a anulowania spróbuj kończy się niepowodzeniem, zostanie wygenerowany żaden wyjątek.  
  
 Aby anulować zapytania w jednym wątku <xref:System.Data.Odbc.OdbcCommand.Cancel%2A> musi zostać wywołany z innego wątku. Ponieważ nie można wykonać polecenia asynchronicznie <xref:System.Data.Odbc.OdbcCommand>, aby anulować polecenie z wątku innego jeden wątek musi być uruchomiona synchronicznie. Oznacza to, że <xref:System.Data.Odbc.OdbcCommand> obiekt musi być dostępny z obu wątków.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.Odbc.OdbcCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Odbc.Design.OdbcCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcję SQL lub procedurę składowaną można wykonać względem źródła danych.</summary>
        <value>Instrukcję SQL lub procedurę składowaną do wykonania. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.IDbCommand.CommandType%2A> właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> można ustawić właściwości przy użyciu sekwencji unikowych w standardowe procedury przechowywane ODBC. Ustawienie <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> na nazwę procedury składowanej nie działa w przeciwieństwie do innych dostawców danych .NET Framework.  
  
 Wiele funkcji języka, takich jak sprzężenia zewnętrzne i wywołania funkcji skalarnych, zazwyczaj są implementowane przez źródła danych. Nawet składnia dla tych funkcji jest zazwyczaj specyficzne dla źródła danych. W związku z tym ODBC definiuje sekwencji unikowych, zawierających standardowe składnię następujące funkcje języka:  
  
-   Literały Interwał daty, godziny, znaczników czasu i daty/godziny  
  
-   Funkcje skalarne, takie jak liczbowe, typ string i funkcje konwersji typu danych  
  
-   Znak ucieczki predykatu, takich jak  
  
-   Sprzężenia zewnętrzne  
  
-   Wywołania procedur  
  
 Sekwencja specjalna używane przez sterownik ODBC jest następujący:  
  
```  
{extension}  
```  
  
 Ta sekwencja ucieczki jest rozpoznawane i przeanalizować przez sterowników ODBC. One następnie Zastąp wszystkie sekwencje unikowe gramatyki specyficzne dla źródła danych.  
  
 Procedura jest obiekt pliku wykonywalnego przechowywane w źródle danych. Ogólnie rzecz biorąc jest instrukcji SQL, które zostały wstępnie skompilowana. Jest sekwencja wywoływania procedury  
  
```  
{[?=]call procedure-name[([parameter][,[parameter]]...)]}  
```  
  
 gdzie `procedure-name` Określa nazwę procedury i `parameter` określa parametr procedury.  
  
 Polecenie wykonuje tę procedurę składowaną podczas wywoływania jednej z metod wykonania (na przykład <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> lub <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).  
  
 Nie można ustawić <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> i <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> właściwości, jeśli bieżące połączenie jest wykonywanie operacji execute lub fetch.  
  
 Dostawca ODBC.NET nie obsługuje parametrów nazwanych parametrów może być przekazywany do instrukcji SQL lub procedurę składowaną wywoływane przez <xref:System.Data.Odbc.OdbcCommand> podczas <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> ma ustawioną wartość `Text`. W takim przypadku należy użyć symbolu zastępczego znak zapytania (?). Na przykład:  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 W związku z tym w kolejności <xref:System.Data.Odbc.OdbcParameter> obiekty są dodawane do <xref:System.Data.Odbc.OdbcParameterCollection> bezpośrednio musi odpowiadać położenie znaku zapytania symbolu zastępczego dla parametru.  
  
 Jeżeli parametr zawiera wartość null, .NET Framework Data Provider for ODBC nadal wiąże tego parametru, ale używa domyślnego parametru, jeśli została ona wcześniej zdefiniowana przy użyciu SQL_DEFAULT_PARAM, zamiast wartości null. Na przykład <xref:System.Data.Odbc.OdbcParameterCollection>:  
  
```  
{1, null, 2}  
```  
  
 przekazany <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> właściwości:  
  
```  
{call sp(?, ?, ?)}  
```  
  
 powoduje, że dostawca danych programu .NET Framework dla ODBC powiązanie pierwszy parametr na wartość 1, trzeci parametr do wartości 2, a drugi parametr jako SQL_DEFAULT_PARAM. Jednak to zachowanie jest zależny od sterownika. Jeśli sterownik nie obsługuje tej funkcji, wystarczy nie przekazuj wartości dla parametru. Na przykład użyć <xref:System.Data.Odbc.OdbcParameterCollection>:  
  
```  
{1, 2}  
```  
  
 i ustaw <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> właściwości do następującego:  
  
```  
{call sp(?, null, ?)}  
```  
  
> [!NOTE]
>  Jeśli parametr zostanie pominięty, nadal musi występować przecinkami oddzielającego go od innych parametrów. W przypadku pominięcia parametru wejściowego lub wejścia/wyjścia, procedura używa wartość domyślna parametru. Innym sposobem określania jest domyślna wartość parametru wejściowego lub wejścia/wyjścia można ustawić wartości wskaźnika/długości buforu powiązany parametr SQL_DEFAULT_PARAM.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.Connection" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.Odbc.OdbcCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas oczekiwania przed zakończeniem próby wykonania polecenia i wygenerowaniem błędu.</summary>
        <value>Czas w sekundach oczekiwania na wykonanie polecenia. Wartość domyślna to 30 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zero (0) określa nieograniczony czas oczekiwania, a nie czas oczekiwania i dlatego należy unikać.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.Odbc.OdbcCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą sposób <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> właściwości jest interpretowany.</summary>
        <value>Jeden z <see cref="T:System.Data.CommandType" /> wartości. Wartość domyślna to <see langword="Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> właściwość jest ustawiona na `StoredProcedure`, należy ustawić <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> właściwości do pełnej składni wywołania ODBC. Polecenie wykonywania tej procedury składowanej podczas wywoływania jednej z metod wykonania (na przykład <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> lub <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).  
  
 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> i <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> nie można ustawić właściwości, jeśli bieżące połączenie jest wykonywanie operacji execute lub fetch.  
  
 .NET Framework Data Provider for ODBC nie obsługuje przekazywanie nazwane parametry instrukcji SQL lub procedurę składowaną wywoływane przez <xref:System.Data.Odbc.OdbcCommand>. W obu przypadkach należy użyć symbolu zastępczego znak zapytania (?). Na przykład:  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 Kolejność <xref:System.Data.Odbc.OdbcParameter> obiekty są dodawane do <xref:System.Data.Odbc.OdbcParameterCollection> bezpośrednio musi odpowiadać położenie znaku zapytania symbolu zastępczego dla parametru.  
  
> [!NOTE]
>  .NET Framework Data Provider for ODBC nie obsługuje <xref:System.Data.CommandType> ustawienie `TableDirect`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość nie jest prawidłowym <see cref="T:System.Data.CommandType" />.</exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OdbcConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcConnection ^ Connection { System::Data::Odbc::OdbcConnection ^ get(); void set(System::Data::Odbc::OdbcConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Odbc.OdbcConnection with get, set" Usage="System.Data.Odbc.OdbcCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.Odbc.OdbcConnection" /> używane przez to wystąpienie elementu <see cref="T:System.Data.Odbc.OdbcCommand" />.</summary>
        <value>Połączenie ze źródłem danych. Wartość domyślna to wartość null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można ustawić <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>, i <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> właściwości, jeśli bieżące połączenie jest wykonywanie operacji execute lub fetch.  
  
 Jeśli ustawisz <xref:System.Data.Odbc.OdbcCommand.Connection%2A> podczas, gdy transakcja jest w toku i <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> właściwość nie jest zerowa, <xref:System.InvalidOperationException> jest generowany. Jeśli ustawisz <xref:System.Data.Odbc.OdbcCommand.Connection%2A> po zatwierdzeniu lub wycofane, transakcji i <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> właściwość nie jest zerowa, <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> następnie ustawiono właściwość ma wartość null.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> Właściwości została zmieniona, gdy transakcja jest w toku.</exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="odbcCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OdbcParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.Odbc.OdbcParameter" Usage="odbcCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Data.Odbc.OdbcParameter" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommand.CreateParameter%2A> Metoda jest silnie typizowaną wersję <xref:System.Data.IDbCommand.CreateParameter%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.Odbc.OdbcCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.Odbc.OdbcCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.Odbc.OdbcCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.Odbc.OdbcCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy obiekt polecenia powinny być widoczne w formancie dostosowany interfejs.</summary>
        <value>** true **, jeśli obiekt polecenia powinny być widoczne w formancie; w przeciwnym razie ** false **. Wartość domyślna to ** true **.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="odbcCommand.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="odbcCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="odbcCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje instrukcję SQL przed <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> i zwraca liczbę uwzględnionych wierszy.</summary>
        <returns>Dla instrukcji UPDATE, INSERT i DELETE wartość zwracana jest liczba wierszy objętych polecenia. Dla wszystkich innych typów instrukcji wartość zwracana jest wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> do wykonywania operacji katalogu (na przykład podczas badania struktury bazy danych lub tworzenie obiektów bazy danych, takich jak tabele); lub zmienić dane w bazie danych, bez użycia <xref:System.Data.DataSet>, poprzez wykonywanie UPDATE, INSERT lub usunąć instrukcje.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> do wykonywania wielu instrukcji SQL, jeśli podstawowy sterownik ODBC obsługuje tę funkcję. W takim przypadku wartość zwracana jest liczba wierszy objętych wszystkie instrukcje w poleceniu.  
  
 Mimo że <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> zwraca żadnych wierszy, wszystkie parametry wyjściowe lub zwracać wartości mapowane na parametry są wypełniane przy użyciu danych.  
  
 Dla instrukcji UPDATE, INSERT i DELETE wartość zwracana jest liczba wierszy objętych polecenia. Dla wszystkich innych typów instrukcji wartość zwracana jest wartość -1. W przypadku wycofywania -1 jest również wartość zwracaną.  
  
 Gdy istnieje wyzwalacz w tabeli i dane są dodane lub zmienione w tabeli, zwracana wartość zawiera liczbę wierszy dotyczy zarówno operacja wstawiania lub aktualizacji oraz liczbę wierszy, wyzwalacza lub wyzwalaczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie nie istnieje.  - lub - połączenie nie jest otwarty.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> do <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> i tworzy <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OdbcDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.Odbc.OdbcDataReader" Usage="odbcCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wysyła <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> do <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> i tworzy <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
        <returns>
          <see cref="T:System.Data.Odbc.OdbcDataReader" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy ustawić <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> właściwości do pełnej składni wywołania ODBC procedur składowanych. Polecenie wykonuje tę procedurę składowaną podczas wywoływania <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.  
  
 Gdy <xref:System.Data.Odbc.OdbcDataReader> jest używana, skojarzony <xref:System.Data.Odbc.OdbcConnection> jest zajęty obsługujących <xref:System.Data.Odbc.OdbcDataReader>. W tym stanie, można wykonać nie innych operacji na <xref:System.Data.Odbc.OdbcConnection> innego niż jego zamknięciem. Dotyczy to sytuacji, dopóki <xref:System.Data.Odbc.OdbcDataReader.Close%2A> metoda <xref:System.Data.Odbc.OdbcDataReader> jest wywoływana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OdbcDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.Odbc.OdbcDataReader" Usage="odbcCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Jeden z <see langword="System.Data.CommandBehavior" /> wartości.</param>
        <summary>Wysyła <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> do <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />i tworzy <see cref="T:System.Data.Odbc.OdbcDataReader" /> przy użyciu jednej z <see langword="CommandBehavior" /> wartości.</summary>
        <returns>
          <see cref="T:System.Data.Odbc.OdbcDataReader" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli planujesz instrukcji SQL, aby zwrócić tylko jeden wiersz, określając `SingleRow` jako <xref:System.Data.CommandBehavior> wartość może zwiększyć wydajność aplikacji.  
  
 Należy ustawić <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> właściwości do pełnej składni wywołania ODBC procedur składowanych. Polecenie wykonuje tę procedurę składowaną podczas wywoływania <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.  
  
 <xref:System.Data.Odbc.OdbcDataReader> Obsługuje specjalnym trybie, umożliwiającą dużej wartości binarne wydajnie Odczyt. Aby uzyskać więcej informacji, zobacz `SequentialAccess` ustawienie <xref:System.Data.CommandBehavior>.  
  
> [!NOTE]
>  `SequentialAccess` Wartość <xref:System.Data.CommandBehavior> jest bez ograniczania ustawienie; właśnie oznacza ma co najmniej sekwencyjnych dostęp do <xref:System.Data.Odbc.OdbcDataReader>. Na przykład, jeśli używasz sterownik ODBC programu SQL Server w `SequentialAccess` tryb, nadal można będzie przenosić do pierwszej kolumny <xref:System.Data.Odbc.OdbcDataReader> wiersz po przeczytania o innych kolumn sekwencyjnie.  
  
 Gdy <xref:System.Data.Odbc.OdbcDataReader> jest używana, skojarzony <xref:System.Data.Odbc.OdbcConnection> jest zajęty obsługujących <xref:System.Data.Odbc.OdbcDataReader>. W tym stanie, można wykonać nie innych operacji na <xref:System.Data.Odbc.OdbcConnection> innego niż jego zamknięciem. Jest to możliwe do czasu wywołania <xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=nameWithType> metody. Jeśli <xref:System.Data.Odbc.OdbcDataReader> jest tworzony z <xref:System.Data.CommandBehavior> ustawioną `CloseConnection`zamykanie <xref:System.Data.Odbc.OdbcDataReader> automatycznie zamyka połączenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="odbcCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje zapytanie i zwraca pierwszą kolumnę pierwszego wiersza w zestawie wyników zwróconych przez kwerendę. Dodatkowe kolumny lub wiersze są ignorowane.</summary>
        <returns>Ustaw pierwszą kolumnę pierwszego wiersza w wyniku, lub odwołanie o wartości null, jeśli zestaw wyników jest pusty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A> metodę, aby pobrać pojedynczą wartość (na przykład wartości zagregowanej) ze źródła danych. Wymaga to mniejsza ilość kodu niż przy użyciu <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> metody, a następnie wykonuje operacje wymagane do generowania danych zwróconych przez pojedynczą wartość <xref:System.Data.Odbc.OdbcDataReader>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OdbcParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcParameterCollection ^ Parameters { System::Data::Odbc::OdbcParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Odbc.OdbcParameterCollection" Usage="System.Data.Odbc.OdbcCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
        <value>Parametry instrukcji SQL lub procedury składowanej. Wartością domyślną jest pusta kolekcja.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> ustawiono `Text`, dostawcy danych programu .NET Framework dla ODBC nie obsługuje przekazywanie nazwane parametry instrukcji SQL lub procedurę składowaną wywoływane przez <xref:System.Data.Odbc.OdbcCommand>. W obu przypadkach należy użyć symbolu zastępczego znak zapytania (?). Na przykład:  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 Kolejność <xref:System.Data.Odbc.OdbcParameter> obiekty są dodawane do <xref:System.Data.Odbc.OdbcParameterCollection> bezpośrednio musi odpowiadać położenie znaku zapytania symbolu zastępczego dla parametru w tekst polecenia.  
  
> [!NOTE]
>  Parametry w kolekcji nie są zgodne z wymaganiami zapytania do wykonania, może spowodować błąd.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="odbcCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy przygotowane lub skompilowanego wersja polecenia w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommand.Prepare%2A> Metoda wywołuje ODBC `SQLPrepare` funkcji. W zależności od możliwości podstawowy sterownik ODBC i źródła danych parametry, takie jak typy danych może być sprawdzona podczas przygotowywania instrukcji, wszystkie parametry został powiązany lub w przypadku uruchomienia, jeśli nie wszystkie parametry został powiązany. Maksymalna współdziałanie aplikacji należy usunąć powiązania wszystkie parametry, które są stosowane do poprzednich instrukcji SQL przed przygotowaniem instrukcję SQL na tym samym <xref:System.Data.Odbc.OdbcCommand>. Zapobiega to błędy, które są spowodowane przez poprzednie parametry są stosowane do nowych instrukcji SQL.  
  
 Wywołanie metody Execute po wywołaniu metody <xref:System.Data.Odbc.OdbcCommand.Prepare%2A>, jest większa niż wartość określona przez dowolną wartość parametru <xref:System.Data.Odbc.OdbcParameter.Size%2A> właściwości automatycznie jest obcinana do oryginalnego rozmiaru określonego parametru, a nie są zwracane nie błędy obcięcie .  
  
 Dane wyjściowe parametrów (czy przygotowane lub nie) musi być typu danych określonego użytkownika. Jeśli określisz typu danych o zmiennej długości, należy również określić maksymalną <xref:System.Data.Odbc.OdbcParameter.Size%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> Nie jest ustawiona.  - lub - <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> nie jest <see cref="M:System.Data.Odbc.OdbcConnection.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="odbcCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" /> właściwości na wartość domyślną.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wynosi 30 sekund.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Nowy <see cref="T:System.Object" /> czyli kopię tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Data.Odbc.OdbcCommand> wystąpienia jest rzutowane na <xref:System.ICloneable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OdbcTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcTransaction ^ Transaction { System::Data::Odbc::OdbcTransaction ^ get(); void set(System::Data::Odbc::OdbcTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.Odbc.OdbcTransaction with get, set" Usage="System.Data.Odbc.OdbcCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.Odbc.OdbcTransaction" /> w ramach którego <see cref="T:System.Data.Odbc.OdbcCommand" /> wykonuje.</summary>
        <value>
          <see cref="T:System.Data.Odbc.OdbcTransaction" />. Wartość domyślna to wartość null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można ustawić <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> właściwości, jeśli jest już ustawiony na określoną wartość, a polecenie jest w trakcie wykonywania. Jeśli ustawiono właściwość transaction <xref:System.Data.Odbc.OdbcTransaction> obiektu, który nie jest podłączony do tej samej <xref:System.Data.Odbc.OdbcConnection> jako <xref:System.Data.Odbc.OdbcCommand> obiektu, zostanie wygenerowany wyjątek przy następnym uruchomieniu próby wykonania instrukcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą sposób ** aktualizacji ** metody powinny być stosowane wyników polecenia ** DataRow **.</summary>
        <value>Jeden z <see cref="T:System.Data.UpdateRowSource" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.Data.UpdateRowSource> wartość jest **zarówno** chyba, że polecenia są generowane automatycznie, jak <xref:System.Data.Odbc.OdbcCommandBuilder>, w takim przypadku wartość domyślna to **Brak**.  
  
 Aby uzyskać więcej informacji o sposobie używania <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> właściwości, zobacz [parametry element DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>