<Type Name="OdbcCommandBuilder" FullName="System.Data.Odbc.OdbcCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="514d86b482b9de1d47380995839bb84e29be32ac" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36686405" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <TypeSignature Language="F#" Value="type OdbcCommandBuilder = class&#xA;    inherit DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Automatycznie generuje polecenia pojedynczej tabeli, które są używane do zmian do uzgodnienia <see cref="T:System.Data.DataSet" /> z odpowiedniego źródła danych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcDataAdapter> Nie automatycznie wygenerować instrukcji SQL wymagane do uzgodnienia zmian <xref:System.Data.DataSet> skojarzone ze źródłem danych. Można jednak utworzyć <xref:System.Data.Odbc.OdbcCommandBuilder> obiekt, który generuje instrukcje SQL aktualizacje pojedynczej tabeli, ustawiając <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> właściwość <xref:System.Data.Odbc.OdbcDataAdapter>. <xref:System.Data.Odbc.OdbcCommandBuilder> Następnie generuje żadnych dodatkowych instrukcji SQL, które nie zostały ustawione.  
  
 Relacja między <xref:System.Data.Odbc.OdbcDataAdapter> i odpowiednie <xref:System.Data.Odbc.OdbcCommandBuilder> jest zawsze jeden do jednego. Aby utworzyć ten zgodność, należy ustawić <xref:System.Data.Odbc.OdbcDataAdapter> właściwość <xref:System.Data.Odbc.OdbcCommandBuilder> obiektu. Powoduje to <xref:System.Data.Odbc.OdbcCommandBuilder> do zarejestrowania się jako odbiornik, który generuje dane wyjściowe z <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> zdarzenia, które mają wpływ na <xref:System.Data.DataSet>.  
  
 Aby wygenerować instrukcje INSERT, UPDATE lub DELETE, <xref:System.Data.Odbc.OdbcCommandBuilder> używa <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> właściwość, aby pobrać wymagane zestawu metadanych. W przypadku zmiany wartości <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> po ma zostały pobrane metadane, takie jak po pierwszej aktualizacji należy następnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> metody w celu zaktualizowania metadanych.  
  
> [!NOTE]
>  Jeśli instrukcja SELECT przypisany do <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> właściwość używa nazwy kolumn aliasem, wynikowy INSERT, UPDATE, a instrukcji DELETE mogą być niedokładne lub się nie powieść. Jeśli podstawowy sterownik ODBC nie może zapewnić odpowiednią kolumnę podstawową nazwę aliasu kolumny (przy użyciu wartości SQL_DESC_BASE_COLUMN_NAME `SQLColAttribute`), można użyć nazwy aliasu w wygenerowanym instrukcje INSERT, UPDATE i DELETE. Na przykład sterownik Microsoft ODBC dla Oracle zwraca nazwę aliasu jako nazwy podstawowej kolumny. W związku z tym wygenerowanego instrukcje INSERT, UPDATE i DELETE może spowodować błędy.  
  
 <xref:System.Data.Odbc.OdbcCommandBuilder> Używa również <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>, i <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> właściwości odwołuje się <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>. Użytkownik powinien wywoływać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> czy co najmniej jeden z tych właściwości są modyfikowane, czy wartość <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> samej właściwości zostanie zmieniona. W przeciwnym razie <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, i <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> właściwości zachowują swoje poprzedniej wartości.  
  
 Jeśli należy wywołać <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.Odbc.OdbcCommandBuilder> są oddzielone od <xref:System.Data.Odbc.OdbcDataAdapter>, i generowane polecenia nie są już używane.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.Odbc.OdbcCommand>, wraz z <xref:System.Data.Odbc.OdbcDataAdapter> i <xref:System.Data.Odbc.OdbcConnection>, aby wybrać wierszy ze źródła danych. Przykład jest przekazywany zainicjowane <xref:System.Data.DataSet>, ciąg połączenia, ciąg zapytania, który jest instrukcję SQL SELECT i ciąg, który jest nazwą tabeli źródła danych. Następnie tworzony <xref:System.Data.Odbc.OdbcCommandBuilder>.  
  
 [!code-csharp[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podstawowy Konstruktor inicjuje wszystkie pola z wartościami domyślnymi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Odbc.OdbcDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OdbcDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder(System::Data::Odbc::OdbcDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcCommandBuilder : System.Data.Odbc.OdbcDataAdapter -&gt; System.Data.Odbc.OdbcCommandBuilder" Usage="new System.Data.Odbc.OdbcCommandBuilder adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Odbc.OdbcDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> Obiektu do skojarzenia z tym <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> klasa ze skojarzonym <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommandBuilder> Rejestrowane jako odbiornika dla <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> zdarzeń generowanych przez <xref:System.Data.Odbc.OdbcDataAdapter> określone w tej właściwości.  
  
 Po utworzeniu nowego wystąpienia <xref:System.Data.Odbc.OdbcCommandBuilder>, wszelkie istniejące <xref:System.Data.Odbc.OdbcCommandBuilder> skojarzony z tym <xref:System.Data.Odbc.OdbcDataAdapter> zostanie zwolniony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="override this.ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="odbcCommandBuilder.ApplyParameterInfo (parameter, datarow, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OdbcDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcDataAdapter ^ DataAdapter { System::Data::Odbc::OdbcDataAdapter ^ get(); void set(System::Data::Odbc::OdbcDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.Odbc.OdbcDataAdapter with get, set" Usage="System.Data.Odbc.OdbcCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> obiektu, w których <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> obiektu wygeneruje instrukcje SQL.</summary>
        <value>
          <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> Obiekt, który jest skojarzony z tym <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommandBuilder> Rejestrowane jako odbiornika dla <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> zdarzeń generowanych przez <xref:System.Data.Odbc.OdbcDataAdapter> określone w tej właściwości.  
  
 Po utworzeniu nowego wystąpienia <xref:System.Data.Odbc.OdbcCommandBuilder>, wszelkie istniejące <xref:System.Data.Odbc.OdbcCommandBuilder> skojarzony z tym <xref:System.Data.Odbc.OdbcDataAdapter> zostanie zwolniony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.Odbc.OdbcCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OdbcCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::Odbc::OdbcCommand ^ command);" />
      <MemberSignature Language="F#" Value="static member DeriveParameters : System.Data.Odbc.OdbcCommand -&gt; unit" Usage="System.Data.Odbc.OdbcCommandBuilder.DeriveParameters command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Odbc.OdbcCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.Odbc.OdbcCommand" /> Odwołuje się do procedury składowanej, z którego ma pochodzić informacje o parametrach. Pochodne parametry są dodawane do <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> kolekcji <see cref="T:System.Data.Odbc.OdbcCommand" />.</param>
        <summary>Pobiera informacje o parametrach z procedury składowanej określone w <see cref="T:System.Data.Odbc.OdbcCommand" /> i wypełnia <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> kolekcji z określonym <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> zastępuje wszelkie istniejące informacje o parametrach dla <xref:System.Data.Odbc.OdbcCommand>.  
  
 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> wymaga dodatkowych wywołanie ze źródłem danych, aby uzyskać informacje. Jeśli informacje o parametrach jest znana wcześniej, jest bardziej wydajne, aby wypełnić kolekcji parametrów, jawnie ustawiając informacje.  
  
 Można używać tylko <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> z procedur składowanych. Nie można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> do wypełnienia <xref:System.Data.Odbc.OdbcParameterCollection> z dowolnego instrukcje języka Transact-SQL, na przykład sparametryzowanych instrukcji SELECT.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podstawowy sterownik ODBC nie obsługuje zwracania informacji o parametrach procedury składowanej lub tekst polecenia nie jest nazwą prawidłową procedury składowanej lub <see cref="T:System.Data.CommandType" /> określony nie <see langword="CommandType.StoredProcedure" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia usunięć w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Odbc.OdbcCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> i zmodyfikuj <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 Po pierwsze wygenerowaniu instrukcji SQL, należy jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> nadal będą używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : unit -&gt; System.Data.Odbc.OdbcCommand" Usage="odbcCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia usunięć w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia usunięć.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Odbc.OdbcCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> i zmodyfikuj <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 Po pierwsze wygenerowaniu instrukcji SQL, należy jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> będą używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : bool -&gt; System.Data.Odbc.OdbcCommand" Usage="odbcCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Jeśli <see langword="true" />, wygenerować nazwy parametru pasujące nazwy kolumny, jeśli jest to możliwe. Jeśli <see langword="false" />, generowanie @p1, @p2i tak dalej.</param>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia usunięć w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia usunięć.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Odbc.OdbcCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> i zmodyfikuj <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 Po pierwsze wygenerowaniu instrukcji SQL, należy jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> będą używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.Odbc.OdbcCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny. To się powiedzie, tylko wtedy, gdy są spełnione następujące warunki:  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Został określony, a jego długość jest równa lub większa niż nazwa parametru wygenerowany.  
  
-   Nazwa parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> wyrażenia regularnego.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> jest określona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Odbc.OdbcCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> i zmodyfikuj <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 Po pierwsze wygenerowaniu instrukcji SQL, należy jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> będą używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : unit -&gt; System.Data.Odbc.OdbcCommand" Usage="odbcCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Odbc.OdbcCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> i zmodyfikuj <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 Po pierwsze wygenerowaniu instrukcji SQL, należy jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> nadal będą używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : bool -&gt; System.Data.Odbc.OdbcCommand" Usage="odbcCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Jeśli <see langword="true" />, wygenerować nazwy parametru pasujące nazwy kolumny, jeśli jest to możliwe. Jeśli <see langword="false" />, generowanie @p1, @p2i tak dalej.</param>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Odbc.OdbcCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> i zmodyfikuj <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 Po pierwsze wygenerowaniu instrukcji SQL, należy jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> będą używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.Common.DbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny. To się powiedzie, tylko wtedy, gdy są spełnione następujące warunki:  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Został określony, a jego długość jest równa lub większa niż nazwa parametru wygenerowany.  
  
-   Nazwa parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> wyrażenia regularnego.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> jest określona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : int -&gt; string" Usage="odbcCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : string -&gt; string" Usage="odbcCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterPlaceholder : int -&gt; string" Usage="odbcCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia aktualizacji w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Odbc.OdbcCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> i zmodyfikuj <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 Po pierwsze wygenerowaniu instrukcji SQL, należy jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> będą używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : unit -&gt; System.Data.Odbc.OdbcCommand" Usage="odbcCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia aktualizacji w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia aktualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Odbc.OdbcCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> i zmodyfikuj <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 Po pierwsze wygenerowaniu instrukcji SQL, należy jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> nadal będą używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : bool -&gt; System.Data.Odbc.OdbcCommand" Usage="odbcCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Jeśli <see langword="true" />, wygenerować nazwy parametru pasujące nazwy kolumny, jeśli jest to możliwe. Jeśli <see langword="false" />, generowanie @p1, @p2i tak dalej.</param>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia aktualizacji w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Odbc.OdbcCommand" /> obiektu wymagane do przeprowadzenia aktualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Odbc.OdbcCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> i zmodyfikuj <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 Po pierwsze wygenerowaniu instrukcji SQL, należy jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> nadal będą używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.Common.DbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny. To się powiedzie, tylko wtedy, gdy są spełnione następujące warunki:  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Został określony, a jego długość jest równa lub większa niż nazwa parametru wygenerowany.  
  
-   Nazwa parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> wyrażenia regularnego.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> jest określona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Podany identyfikator bez cudzysłowów w przypadku katalogu poprawne zwraca wartość prawidłowego formularza tego identyfikatora w cudzysłowach. W tym poprawnie anulowanie wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string -&gt; string" Usage="odbcCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Oryginalny identyfikator bez cudzysłowów.</param>
        <summary>Podany identyfikator bez cudzysłowów w przypadku katalogu poprawne zwraca wartość prawidłowego formularza tego identyfikatora w cudzysłowach. W tym poprawnie anulowanie wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
        <returns>Identyfikator wersja ujętego w cudzysłów. Osadzone cudzysłowy wewnątrz identyfikator poprawnie będą miały zmienione znaczenie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string * System.Data.Odbc.OdbcConnection -&gt; string" Usage="odbcCommandBuilder.QuoteIdentifier (unquotedIdentifier, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Oryginalny identyfikator bez cudzysłowów.</param>
        <param name="connection">Po upływie połączenia powoduje, że zarządzany otok można pobrać ze sterownika ODBC, wywoływania SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR) znaku cudzysłowu. Po upływie połączenia cytowaną przy użyciu wartości z ciągu <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> i <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</param>
        <summary>Podany identyfikator bez cudzysłowów w przypadku katalogu poprawne zwraca wartość prawidłowego formularza tego identyfikatora w cudzysłowach. W tym poprawnie anulowanie wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
        <returns>Identyfikator wersja ujętego w cudzysłów. Osadzone cudzysłowy wewnątrz identyfikator poprawnie będą miały zmienione znaczenie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="override this.SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="odbcCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Podane identyfikatora ujętego w cudzysłów, zwraca w postaci bez cudzysłowu poprawny identyfikator, łącznie z poprawnie unescaping wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string -&gt; string" Usage="odbcCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Identyfikator, który będzie miał jego osadzone cudzysłowy usunięte.</param>
        <summary>Podane identyfikatora ujętego w cudzysłów, zwraca w postaci bez cudzysłowu poprawny identyfikator, łącznie z poprawnie unescaping wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
        <returns>Identyfikator bez cudzysłowów cudzysłowem osadzonym poprawnie niezmienionym znaczeniu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string * System.Data.Odbc.OdbcConnection -&gt; string" Usage="odbcCommandBuilder.UnquoteIdentifier (quotedIdentifier, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Identyfikator, który będzie miał jego osadzone cudzysłowy usunięte.</param>
        <param name="connection">
          <see cref="T:System.Data.Odbc.OdbcConnection" />.</param>
        <summary>Podane identyfikatora ujętego w cudzysłów, zwraca w postaci bez cudzysłowu poprawny identyfikator, łącznie z poprawnie unescaping wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
        <returns>Identyfikator bez cudzysłowów cudzysłowem osadzonym poprawnie niezmienionym znaczeniu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>