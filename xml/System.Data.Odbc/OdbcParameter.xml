<Type Name="OdbcParameter" FullName="System.Data.Odbc.OdbcParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28832a71bec8dc374624438f5981ee69ae576d51" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36685895" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <TypeSignature Language="F#" Value="type OdbcParameter = class&#xA;    inherit DbParameter&#xA;    interface ICloneable&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameter/OdbcParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje parametr <see cref="T:System.Data.Odbc.OdbcCommand" /> i opcjonalnie jego mapowanie <see cref="T:System.Data.DataColumn" />. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy parametrów nie jest uwzględniana.  
  
 Podczas wykonywania zapytania bazy danych Oracle przy użyciu dostawcy OLE DB firmy Microsoft dla programu Oracle (MSDAORA) i ODBC .NET Framework Data Provider, przy użyciu `LIKE` klauzuli zapytania wartości w polach o stałej długości nie mogą zwracać wszystkie oczekiwane dopasowań. Przyczyną jest fakt, że Oracle odpowiada wartości pól o stałej długości w `LIKE` klauzuli odpowiada całej długości ciągu, w tym wszelkie uzupełnienia spacje końcowe. Na przykład jeśli w tabeli bazy danych programu Oracle zawiera pole o nazwie "Pole1", który jest zdefiniowany jako `char(3)`, a następnie wprowadź wartość "" do wiersza tej tabeli, następujący kod nie będzie zwracać wiersza.  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 Wynika to z faktu Oracle przechowuje wartość kolumny jako "" (dopełnienie "a", na końcowe spacje, do pola stałej długości 3), który Oracle nie traktuje jako dopasowanie dla wartości parametru "a" w odniesieniu `LIKE` porównania pól o stałej długości.  
  
 Aby rozwiązać ten problem, należy dołączyć symbolu wieloznacznego procentu ("%") do wartość parametru (`"a%"`), lub użyj SQL `=` porównania zamiast tego.  
  
   
  
## Examples  
 Poniższy przykład tworzy wiele wystąpień <xref:System.Data.Odbc.OdbcParameter> za pośrednictwem <xref:System.Data.Odbc.OdbcParameterCollection> w <xref:System.Data.Odbc.OdbcDataAdapter>. Te parametry są używane do wybierz dane ze źródła danych i umieść dane w <xref:System.Data.DataSet>. W tym przykładzie założono, że <xref:System.Data.DataSet> i <xref:System.Data.Odbc.OdbcDataAdapter> zostały już utworzone przy użyciu odpowiedniego schematu, poleceń i połączenia.  
  
 [!code-csharp[Classic WebData OdbcParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podstawowy Konstruktor inicjuje wszystkie pola z wartościami domyślnymi.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Jeden z <see cref="T:System.Data.Odbc.OdbcType" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa parametru typu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametr ma nieprawidłowy typ zaplecza.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * obj -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="value">
          <see cref="T:System.Data.Odbc.OdbcParameter" /> Obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa nazwy parametru i <see cref="T:System.Data.Odbc.OdbcParameter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy zachować ostrożność podczas korzystania z tego przeciążenia <xref:System.Data.Odbc.OdbcParameter> konstruktora, aby określić wartości parametru liczby całkowitej. Ponieważ to przeciążenie przyjmuje `value` typu <xref:System.Object>, należy przekonwertować wartość całkowitą <xref:System.Object> wprowadź, jeśli wartość wynosi zero, jak pokazano w poniższym przykładzie C#.  
  
```  
Parameter = new OdbcParameter("@pname", Convert.ToInt32(0));  
```  
  
 Jeśli ta konwersja nie zostanie wykonana, kompilator zakłada próby wywołania <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=nameWithType> przeładowania konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type, int size);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, type, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Jeden z <see cref="T:System.Data.Odbc.OdbcType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa parametru Nazwa, typ danych i długość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametr ma nieprawidłowy typ zaplecza.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size, string sourcecolumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type, int32 size, string sourcecolumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType, size As Integer, sourcecolumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type, int size, System::String ^ sourcecolumn);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int * string -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, type, size, sourcecolumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourcecolumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Jeden z <see cref="T:System.Data.Odbc.OdbcType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <param name="sourcecolumn">Nazwa kolumny źródłowej.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa parametru Nazwa, typ danych, długość i nazwa kolumny źródłowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametr ma nieprawidłowy typ zaplecza.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.Odbc.OdbcType odbcType, int32 size, valuetype System.Data.ParameterDirection parameterDirection, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ parameterName, System::Data::Odbc::OdbcType odbcType, int size, System::Data::ParameterDirection parameterDirection, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int * System.Data.ParameterDirection * bool * byte * byte * string * System.Data.DataRowVersion * obj -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (parameterName, odbcType, size, parameterDirection, isNullable, precision, scale, srcColumn, srcVersion, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="odbcType" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="parameterDirection" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru.</param>
        <param name="odbcType">Jeden z <see cref="T:System.Data.Odbc.OdbcType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <param name="parameterDirection">Jeden z <see cref="T:System.Data.ParameterDirection" /> wartości.</param>
        <param name="isNullable">
          <see langword="true" /> Jeśli wartość pola mogą mieć wartości null; w przeciwnym razie <see langword="false" />.</param>
        <param name="precision">Całkowita liczba cyfr po lewej i prawej strony punktu dziesiętnego, do którego <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> został rozwiązany.</param>
        <param name="scale">Całkowita liczba miejsc dziesiętnych, do którego <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> został rozwiązany.</param>
        <param name="srcColumn">Nazwa kolumny źródłowej.</param>
        <param name="srcVersion">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości.</param>
        <param name="value">
          <see cref="T:System.Object" /> Będący wartością <see cref="T:System.Data.Odbc.OdbcParameter" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa nazwę parametru, typu danych, długość, nazwa kolumny źródłowej, kierunek parametru, dokładność liczbowych i inne właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i wyświetla <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter4#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter4/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter4#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametr ma nieprawidłowy typ zaplecza.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.Odbc.OdbcType odbcType, int32 size, valuetype System.Data.ParameterDirection parameterDirection, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ parameterName, System::Data::Odbc::OdbcType odbcType, int size, System::Data::ParameterDirection parameterDirection, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int * System.Data.ParameterDirection * byte * byte * string * System.Data.DataRowVersion * bool * obj -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (parameterName, odbcType, size, parameterDirection, precision, scale, sourceColumn, sourceVersion, sourceColumnNullMapping, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="odbcType" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="parameterDirection" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru.</param>
        <param name="odbcType">Jeden z <see cref="P:System.Data.Odbc.OdbcParameter.OdbcType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <param name="parameterDirection">Jeden z <see cref="T:System.Data.ParameterDirection" /> wartości.</param>
        <param name="precision">Całkowita liczba cyfr po lewej i prawej strony punktu dziesiętnego, do którego <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> został rozwiązany.</param>
        <param name="scale">Całkowita liczba miejsc dziesiętnych, do którego <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> został rozwiązany.</param>
        <param name="sourceColumn">Nazwa kolumny źródłowej.</param>
        <param name="sourceVersion">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości.</param>
        <param name="sourceColumnNullMapping">
          <see langword="true" /> Jeśli odpowiednia kolumna źródłowego ma wartość null; <see langword="false" /> Jeśli nie jest.</param>
        <param name="value">
          <see cref="T:System.Object" /> Będący wartością <see cref="T:System.Data.Odbc.OdbcParameter" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa nazwę parametru, typu danych, długość, nazwa kolumny źródłowej, kierunek parametru, dokładność liczbowych i inne właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i wyświetla <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  
  
```vb  
Public Sub CreateOdbcParameter()  
  Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 11, ParameterDirection.Output, True, 0, 0, "Description", DataRowVersion.Current, False, "garden hose")  
  MessageBox.Show(parameter.ToString())  
End Sub  
```  
  
```csharp  
public void CreateOdbcParameter()   
{  
  OdbcParameter parameter = new OdbcParameter("Description",OdbcType.VarChar,  
              11,ParameterDirection.Output,true,0,0,"Description",  
              DataRowVersion.Current, false, "garden hose");  
  MessageBox.Show(parameter.ToString());  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametr ma nieprawidłowy typ zaplecza.</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.Odbc.OdbcParameter.DbType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.DbType" /> parametru.</summary>
        <value>Jeden z <see cref="T:System.Data.DbType" /> wartości. Wartość domyślna to <see cref="T:System.String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> i <xref:System.Data.Odbc.OdbcParameter.DbType%2A> są połączone. W związku z tym ustawienie <xref:System.Data.Odbc.OdbcParameter.DbType%2A> zmiany <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> do obsługi <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>.  
  
 Aby uzyskać listę obsługiwanych typów znajduje się w odpowiednim <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> elementu członkowskiego. Aby uzyskać więcej informacji, zobacz [parametry element DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
> [!NOTE]
>  <xref:System.Data.DbType.Object> dla ODBC nie jest obsługiwana przez dostawcę danych programu Microsoft .NET Framework.  
  
   
  
## Examples  
 Następujące przykładowe wywołania **procedury składowanej** z trzema parametrami przy użyciu ODBC zarządzanego dostawcy.  
  
 [!code-csharp[Classic WebData OdbcParameter.DbType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.DbType/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.DbType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.DbType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość nie został ustawiony na prawidłowy <see cref="T:System.Data.DbType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.Odbc.OdbcParameter.Direction" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy parametr tylko wejściowym, jest tylko do danych wyjściowych, dwukierunkowego lub parametru wartości zwracanej procedury składowanej.</summary>
        <value>Jeden z <see cref="T:System.Data.ParameterDirection" /> wartości. Wartość domyślna to <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Data.ParameterDirection> jest `Output`i wykonywanie skojarzonego <xref:System.Data.Odbc.OdbcCommand> nie zwraca wartości <xref:System.Data.Odbc.OdbcParameter> będzie zawierać wartości null. Wartości null są obsługiwane przy użyciu <xref:System.DBNull> klasy.  
  
 `Output`, `InputOut`, i `ReturnValue` Parametry zwracane przez wywołanie metody <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> będą niedostępne do czasu wywołania <xref:System.Data.Odbc.OdbcDataReader.Close%2A> lub `Dispose` na <xref:System.Data.Odbc.OdbcDataReader>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
```vb  
Public Sub CreateMyProc(connection As OdbcConnection)  
  
   Dim command As OdbcCommand = connection.CreateCommand()  
   command.CommandText = "{ call MyProc(?,?,?) }"  
   command.Parameters.Add("", OdbcType.Int).Value = 1  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3  
  
End Sub  
```  
  
```csharp  
public void CreateMyProc(OdbcConnection connection)   
{  
   OdbcCommand command = connection.CreateCommand();  
   command.CommandText = "{ call MyProc(?,?,?) }";  
   command.Parameters.Add("", OdbcType.Int).Value = 1;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość nie została ustawiona na jedną z prawidłowych <see cref="T:System.Data.ParameterDirection" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Data.Odbc.OdbcParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy parametr akceptuje wartości null.</summary>
        <value>
          <see langword="true" /> Jeśli są akceptowane wartości zerowe; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości null są obsługiwane przy użyciu <xref:System.DBNull> klasy.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
   Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOdbcParameter()   
{  
   OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OdbcType">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcType OdbcType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Odbc.OdbcType OdbcType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.OdbcType" />
      <MemberSignature Language="VB.NET" Value="Public Property OdbcType As OdbcType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcType OdbcType { System::Data::Odbc::OdbcType get(); void set(System::Data::Odbc::OdbcType value); };" />
      <MemberSignature Language="F#" Value="member this.OdbcType : System.Data.Odbc.OdbcType with get, set" Usage="System.Data.Odbc.OdbcParameter.OdbcType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.Odbc.OdbcType" /> parametru.</summary>
        <value>
          <see cref="T:System.Data.Odbc.OdbcType" /> Wartość, czyli <see cref="T:System.Data.Odbc.OdbcType" /> parametru. Wartość domyślna to <see langword="Nchar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> i <xref:System.Data.Odbc.OdbcParameter.DbType%2A> są połączone. W związku z tym ustawienie <xref:System.Data.Odbc.OdbcParameter.DbType%2A> zmiany <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> do obsługi <xref:System.Data.Odbc.OdbcType>.  
  
 Aby uzyskać listę obsługiwanych typów znajduje się w odpowiednim <xref:System.Data.Odbc.OdbcType> elementu członkowskiego. Aby uzyskać więcej informacji, zobacz [parametry element DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int with get, set" Usage="System.Data.Odbc.OdbcParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.Odbc.OdbcParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
        <value>Nazwa <see cref="T:System.Data.Odbc.OdbcParameter" />. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast nazwane parametry dostawcy .NET ODBC używa parametrów pozycyjnych, które są oznaczone znakiem zapytania (?) w składni tekst polecenia. Parametr obiekty w <xref:System.Data.Odbc.OdbcParameterCollection> i rzeczywistych parametrów zaakceptowane przez procedurę składowaną lub sparametryzowanych instrukcji SQL zgodne ze sobą na podstawie kolejności, w którym <xref:System.Data.Odbc.OdbcParameter> obiekty są wstawiane do kolekcji, a nie przez Nazwa parametru. Nazwy parametrów można podać, ale zostaną pominięte podczas tworzenia powiązania obiektu parametru.  
  
   
  
## Examples  
 W poniższym przykładzie założono, że źródło danych ma nazwę tabeli **MyTable** i procedury składowanej o nazwie MyProc, która jest zdefiniowana jako:  
  
```  
CREATE TABLE MyTable (col1 int, col2 smallmoney, col3 decimal)  
CREATE PROC MyProc (@p1 int, @p2 smallmoney, @p3 decimal) AS INSERT INTO MyTable VALUES (@p1, @p2, @p3)  
```  
  
 Poniższy przykład tworzy parametrów i wywołuje procedurę MyProc przechowywane:  
  
```vb  
Public Sub CreateMyProc(connection As OdbcConnection)  
  
   Dim command As OdbcCommand = connection.CreateCommand()  
  
   command.CommandText = "{ call MyProc(?,?,?) }"  
   command.Parameters.Add("", OdbcType.Int).Value = 1  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3  
  
End Sub  
```  
  
```csharp  
public void CreateMyProc(OdbcConnection connection)   
{  
   OdbcCommand command = myConnection.CreateCommand();  
  
   command.CommandText = "{ call MyProc(?,?,?) }";  
   command.Parameters.Add("", OdbcType.Int).Value = 1;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Precision : byte with get, set" Usage="System.Data.Odbc.OdbcParameter.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę cyfr używana do reprezentowania <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> właściwości.</summary>
        <value>Maksymalna liczba cyfr używana do reprezentowania <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> właściwości. Wartość domyślna to 0, co oznacza, że dostawca danych określa dokładność <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości na wartość inna niż wartość w bazie danych zależy od implementacji dostawcy danych i mogą zwracać błąd kodu, truncate lub round danych.  
  
 <xref:System.Data.Odbc.OdbcParameter.Precision%2A> Właściwość ma wpływ tylko na parametry których <xref:System.Data.Odbc.OdbcType> jest `Decimal` lub `Numeric`. Dla innych typów danych <xref:System.Data.Odbc.OdbcParameter.Precision%2A> jest ignorowana.  
  
> [!NOTE]
>  Użycie tej właściwości, aby wymusić przekazane do bazy danych nie jest obsługiwane. Aby round, truncate, lub w przeciwnym razie wymuszone danych przed przekazaniem go do bazy danych, użyj <xref:System.Math> klasy, która jest częścią `System` przestrzeni nazw przed przypisywanie wartości do parametru `Value` właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Price", OdbcType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Price", OdbcType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberSignature Language="F#" Value="override this.ResetDbType : unit -&gt; unit" Usage="odbcParameter.ResetDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Typ skojarzony z tym resetuje <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wykonywania polecenia zawierającą wartości parametrów, kodu można ustawić jawnie typ parametru lub parametr można wywnioskować jej typu ze swojej wartości. Wywołanie tej metody resetuje parametr, aby go ponownie wywnioskować jej typu z wartości przekazywane w parametrze. Wywołanie tej metody ma wpływ zarówno na <xref:System.Data.Odbc.OdbcParameter.DbType%2A> i <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> właściwości <xref:System.Data.Odbc.OdbcParameter>.  
  
 Wywoływanie <xref:System.Data.Odbc.OdbcParameter.ResetDbType%2A> resetuje <xref:System.Data.Odbc.OdbcParameter.DbType%2A> jego wartość domyślna (ciąg).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetOdbcType">
      <MemberSignature Language="C#" Value="public void ResetOdbcType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOdbcType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ResetOdbcType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOdbcType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOdbcType();" />
      <MemberSignature Language="F#" Value="member this.ResetOdbcType : unit -&gt; unit" Usage="odbcParameter.ResetOdbcType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Typ skojarzony z tym resetuje <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wykonywania polecenia zawierającą wartości parametrów, kodu można ustawić jawnie typ parametru lub parametr można wywnioskować jej typu ze swojej wartości. Wywołanie tej metody resetuje parametr, aby go ponownie wywnioskować jej typu z wartości przekazywane w parametrze. Wywołanie tej metody ma wpływ zarówno na <xref:System.Data.Odbc.OdbcParameter.DbType%2A> i <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> właściwości <xref:System.Data.Odbc.OdbcParameter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : byte with get, set" Usage="System.Data.Odbc.OdbcParameter.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych, do którego <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> został rozwiązany.</summary>
        <value>Liczba miejsc dziesiętnych, do którego <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> został rozwiązany. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.Scale%2A> Właściwość jest używana tylko dla parametrów wejściowych numerycznych i dziesiętnych.  
  
 Wpływ ustawienia tej właściwości na wartość inną niż wartość w bazie danych zależy od implementacji dostawcy danych i może zwracają kod błędu obcięcia lub zaokrąglona danych.  
  
 <xref:System.Data.Odbc.OdbcParameter.Scale%2A> Właściwość ma wpływ tylko na parametry których <xref:System.Data.Odbc.OdbcType> jest `Decimal` lub `Numeric`. Dla innych typów danych <xref:System.Data.Odbc.OdbcParameter.Scale%2A> jest ignorowana.  
  
 Korzystając z programu SQL Server Native Client 10 (lub późniejszy) aby powiązać parametr, którego typ jest dziesiętna, wartość liczbowa, VarNumeric, DBDate lub Odcisk czasowy, należy ręcznie określić odpowiednią wartość skali.  
  
> [!NOTE]
>  Użycie tej właściwości, aby wymusić przekazane do bazy danych nie jest obsługiwane. Aby round, truncate, lub w przeciwnym razie wymuszone danych przed przekazaniem go do bazy danych, użyj <xref:System.Math> klasy, która jest częścią `System` przestrzeni nazw przed przypisywanie wartości do parametru `Value` właściwości.  
  
> [!NOTE]
>  Dostawcy danych .NET framework, które są dołączone do programu .NET Framework w wersji 1.0 nie weryfikują `scale` z <xref:System.Decimal> wartości parametrów. Może to spowodować zmodyfikowane dane wstawiane w źródle danych. Jeśli używasz .NET Framework w wersji 1.0, sprawdzanie poprawności s`cale` d`ecimal` wartości przed ustawieniem wartości parametru. Gdy używasz wersji .NET Framework 1.1 lub nowszej, `scale` wartości, które przekraczają `decimal` skalowania parametr może być obcięty w skali, tylko jeśli jest to zachowanie sterownika ODBC.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Price", OdbcType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Price", OdbcType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Data.Odbc.OdbcParameter.Size" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalny rozmiar danych w kolumnie.</summary>
        <value>Maksymalny rozmiar danych w kolumnie. Wartością domyślną jest wywnioskowany na podstawie wartości parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.Size%2A> Właściwość jest używana dla typu binary i ciąg.  
  
 Dla typów danych typu i ANSI dane ciągu <xref:System.Data.Odbc.OdbcParameter.Size%2A> właściwość odwołuje się do liczby bajtów. W przypadku danych ciąg Unicode <xref:System.Data.Odbc.OdbcParameter.Size%2A> odwołuje się do liczby znaków. Liczba ciągów nie zawiera znaku zakończenia.  
  
 Dla typów danych o zmiennej długości `Size` opisuje maksymalna ilość danych do przesłania do serwera. Na przykład, aby uzyskać wartość ciągu Unicode `Size` można ograniczyć ilość danych przesyłanych do serwera, aby najpierw sto znaków.  
  
 Dla parametrów dwukierunkowy i danych wyjściowych i wartości zwracane, należy ustawić wartość `Size`. Nie jest to wymagane dla parametrów wejściowych, a jeśli nie jest jawnie ustawiona, wartość jest wywnioskowany na podstawie rzeczywisty rozmiar określony parametr po wykonaniu sparametryzowanych instrukcji.  
  
 <xref:System.Data.Common.DbParameter.DbType%2A>, <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>, I <xref:System.Data.Odbc.OdbcParameter.Size%2A> można wywnioskować przez ustawienie właściwości parametru <xref:System.Data.Odbc.OdbcParameter.Value%2A>. W związku z tym nie są wymagane ich podanie. Jednak nie są widoczne w <xref:System.Data.Odbc.OdbcParameter> ustawienia właściwości. Na przykład, jeśli rozmiar parametru został wywnioskowany `Size` nie zawiera wartości wnioskowany po wykonaniu instrukcji.  
  
> [!NOTE]
>  Aby uzyskać `OdbcParameter` z <xref:System.Data.Odbc.OdbcParameter.Direction%2A> z `ParameterDirection.Output`, `ParameterDirection.InputOutput`, lub `ParameterDirection.ReturnValue`, jest zwracany wyjątek, jeśli polecenie zostanie wykonane, jeśli rozmiar wartość zwrócona przez źródło danych przekracza określoną `Size` z <xref:System.Data.Odbc.OdbcParameter>.  
  
 Dla typów danych o stałej długości, wartość `Size` jest ignorowana. Można pobrać do celów informacyjnych i zwraca maksymalną liczbę bajtów używanych przez dostawcę przy przekazywaniu wartość parametru do serwera.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim myValue As String = "12 foot scarf - multiple colors, one previous owner"  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar)  
    parameter.Direction = ParameterDirection.Output  
    parameter.Size = myValue.Length  
    parameter.Value = myValue  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    string myValue = "12 foot scarf - multiple colors, one previous owner";  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar);  
    parameter.Direction = ParameterDirection.Output;  
    parameter.Size = myValue.Length;  
    parameter.Value = myValue;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.Odbc.OdbcParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kolumny źródłowej mapowane na <see cref="T:System.Data.DataSet" /> i używane do ładowania lub zwracanie <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</summary>
        <value>Nazwa kolumny źródłowej, która będzie służyć do ustawienia wartości tego parametru. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A> jest ustawiona jest wartość inną niż pusty ciąg, wartość parametru jest pobierana z kolumny z `SourceColumn` nazwy. Jeśli <xref:System.Data.Odbc.OdbcParameter.Direction%2A> ustawiono `Input`, wartość jest pobierana z <xref:System.Data.DataSet>. Jeśli `Direction` ma ustawioną wartość `Output`, wartość jest pobierana ze źródła danych. A `Direction` z `InputOutput` jest obie te grupy.  
  
 Aby uzyskać więcej informacji o sposobie używania <xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A> właściwości, zobacz [parametry element DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md) i [aktualizowanie źródła danych z obiektów DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumnNullMapping : bool with get, set" Usage="System.Data.Odbc.OdbcParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia lub pobiera wartość wskazującą, czy kolumna źródłowa jest null. Dzięki temu <see cref="T:System.Data.Common.DbCommandBuilder" /> prawidłowo wygenerować instrukcji Update dla kolumn o wartości null.</summary>
        <value>
          <see langword="true" /> Jeśli kolumna źródłowa jest wartość null; <see langword="false" /> Jeśli nie jest.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> jest używany przez <xref:System.Data.Common.DbCommandBuilder> prawidłowo wygenerować polecenia aktualizacji podczas pracy nad kolumny dopuszczające wartość null. Ogólnie rzecz biorąc, użycie <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> jest ograniczona do deweloperów dziedziczących <xref:System.Data.Common.DbCommandBuilder>.  
  
 <xref:System.Data.Common.DbCommandBuilder> używa tej właściwości, aby określić, czy kolumna źródłowa ma wartość null i ustawia tę właściwość na `true` przypadku wartości null, a `false` Jeśli nie jest. Gdy <xref:System.Data.Common.DbCommandBuilder> jest generowanie jej instrukcji Update, sprawdza <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> dla każdego parametru. Jeśli właściwość jest `true`, <xref:System.Data.Common.DbCommandBuilder> generuje klauzulach WHERE, jak w następującym przykładzie. W tym wyrażeniu zapytania "FieldName" reprezentuje nazwę pola:  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 Jeśli <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> dla pole ma wartość false, <xref:System.Data.Common.DbCommandBuilder> generuje następująca klauzula WHERE:  
  
```  
FieldName = @OriginalFieldName  
```  
  
 Ponadto @IsNull_FieldName zawiera 1, jeśli pola źródłowego zawiera wartość null i 0, jeśli nie ma. Mechanizm ten umożliwia optymalizowanie wydajności w programie SQL Server i zapewnia wspólny kod, który działa na wielu dostawców.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.Odbc.OdbcParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.DataRowVersion" /> do użycia podczas ładowania <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</summary>
        <value>Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości. Ustawieniem domyślnym jest bieżący.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `SourceVersion` Jest używany przez <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> podczas <xref:System.Data.Common.DbDataAdapter.Update*> operację, aby określić, czy do bieżącej lub oryginalne ustawiono wartość parametru. Dzięki temu kluczy podstawowych do zaktualizowania.  
  
 Ta właściwość jest ustawiona na wersję <xref:System.Data.DataRow> używane przez jedną `Item` właściwości (`DataRow` indeksatora), lub <xref:System.Data.DataRow.GetChildRows%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
    parameter.SourceVersion = DataRowVersion.Current  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
    parameter.SourceVersion = DataRowVersion.Current;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Nowy <see cref="T:System.Object" /> czyli kopię tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Data.Odbc.OdbcParameter> wystąpienia jest rzutowane na <xref:System.ICloneable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="odbcParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg, który zawiera <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</summary>
        <returns>Ciąg, który zawiera <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.Odbc.OdbcParameter.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru.</summary>
        <value>
          <see cref="T:System.Object" /> Oznacza to wartość parametru. Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla parametrów wejściowych, wartość jest powiązany z <xref:System.Data.Odbc.OdbcCommand> wysyłanego do serwera. Dla danych wyjściowych i parametry wartość zwracaną wartość jest ustawiana po zakończeniu <xref:System.Data.Odbc.OdbcCommand> oraz po <xref:System.Data.Odbc.OdbcDataReader> jest zamknięty.  
  
 Wartość null parametru jest wysyłany na serwer, użytkownik musi określić <xref:System.DBNull>, niedopuszczania wartości null. Wartość null w systemie jest pusty obiekt, który nie ma wartości. <xref:System.DBNull> jest używana do reprezentowania wartości null. Jeśli parametr jest używany do wywołania procedury składowanej z parametrami, które mają przypisane wartości domyślne, ustawienie <xref:System.Data.Odbc.OdbcParameter.Value%2A> na null powoduje, że wartość domyślna ma być używany.  
  
 Jeśli aplikacja określa typ bazy danych, wiązana wartość jest konwertowana na tego typu, gdy dostawca wysyła dane do serwera. Dostawca podejmuje próbę przekonwertowania dowolnego typu wartości, jeśli obsługuje <xref:System.IConvertible> interfejsu. Może spowodować błędy konwersji, jeśli określony typ nie jest zgodny z wartością.  
  
 Zarówno <xref:System.Data.Odbc.OdbcParameter.DbType%2A> i <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> można wywnioskować przez ustawienie właściwości <xref:System.Data.Odbc.OdbcParameter.Value%2A>. Jeśli ma to zastosowanie, rozmiar, precision i scale jest również wywnioskować na podstawie <xref:System.Data.Odbc.OdbcParameter.Value%2A> po wykonaniu sparametryzowanych instrukcji. Wywnioskowane wartości nie są widoczne dla użytkownika.  
  
 <xref:System.Data.Odbc.OdbcParameter.Value%2A> Właściwości jest zastępowany przez `Update` metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre jego właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.Value = "garden hose"  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.Value = "garden hose";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>