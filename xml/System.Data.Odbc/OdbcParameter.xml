<Type Name="OdbcParameter" FullName="System.Data.Odbc.OdbcParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40c5dc16d468f38a9a2b62ee568e1cd5085a278f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69126263" /></Metadata><TypeSignature Language="C#" Value="public sealed class OdbcParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <TypeSignature Language="F#" Value="type OdbcParameter = class&#xA;    inherit DbParameter&#xA;    interface ICloneable&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataParameter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataParameter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameter/OdbcParameterConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje parametr do <see cref="T:System.Data.Odbc.OdbcCommand" /> i opcjonalnie, jego mapowanie <see cref="T:System.Data.DataColumn" />na. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W nazwach parametrów nie jest rozróżniana wielkość liter.  
  
 Podczas wykonywania zapytania dotyczącego bazy danych Oracle przy użyciu Microsoft OLE DB Provider dla Oracle (MSDAORA i) i dostawca danych ODBC .NET Framework użycie `LIKE` klauzuli w celu zbadania wartości pól o stałej długości może nie zwracać wszystkich oczekiwanych dopasowań. Przyczyną jest to, że gdy Oracle dopasowuje wartości dla pól o stałej długości `LIKE` w klauzuli, dopasowuje całą długość ciągu, łącznie z wszelkimi końcowymi spacjami uzupełniania. Na przykład jeśli tabela w bazie danych Oracle zawiera pole o nazwie "pole1", które jest zdefiniowane jako `char(3)`, i wprowadzisz wartość "a" do wiersza tej tabeli, poniższy kod nie zwróci wiersza.  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 Jest to spowodowane tym, że program Oracle przechowuje wartość kolumny jako "a" (uzupełnienie "a", z spacjami końcowymi, do stałej długości pola wynoszącej 3), której Oracle nie traktuje jako dopasowanie wartości parametru "a" w przypadku `LIKE` porównania pól o stałej długości.  
  
 Aby rozwiązać ten problem, Dołącz wartość procentową ("%") symbol wieloznaczny do wartości`"a%"`parametru () lub zamiast tego `=` Użyj porównania SQL.  
  
   
  
## Examples  
 Poniższy przykład tworzy wiele wystąpień <xref:System.Data.Odbc.OdbcParameter> <xref:System.Data.Odbc.OdbcParameterCollection> przez <xref:System.Data.Odbc.OdbcDataAdapter>. Te parametry służą do wybierania danych ze źródła danych i umieszczania danych w <xref:System.Data.DataSet>. W tym przykładzie przyjęto <xref:System.Data.DataSet> założenie <xref:System.Data.Odbc.OdbcDataAdapter> , że a i zostały już utworzone przy użyciu odpowiedniego schematu, poleceń i połączenia.  
  
 [!code-csharp[Classic WebData OdbcParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor podstawowy inicjuje wszystkie pola do ich wartości domyślnych.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Jedna z <see cref="T:System.Data.Odbc.OdbcType" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa nazwy parametru i typu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametrze jest nieprawidłowym typem danych zaplecza.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * obj -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="value"><see cref="T:System.Data.Odbc.OdbcParameter" /> Obiekt.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa nazwy parametru <see cref="T:System.Data.Odbc.OdbcParameter" /> i obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy zachować ostrożność podczas korzystania z tego przeciążenia konstruktora <xref:System.Data.Odbc.OdbcParameter> , aby określić wartości parametru Integer. Ponieważ to Przeciążenie `value` Pobiera typ <xref:System.Object>, należy przekonwertować wartość całkowitą na <xref:System.Object> typ, gdy wartość jest równa zero, jak pokazano w poniższym C# przykładzie.  
  
```  
Parameter = new OdbcParameter("@pname", Convert.ToInt32(0));  
```  
  
 Jeśli ta konwersja nie zostanie wykonana, kompilator zakłada, że próbujesz wywołać <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=nameWithType> przeciążenie konstruktora.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type, int size);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, type, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Jedna z <see cref="T:System.Data.Odbc.OdbcType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa nazwy parametru, typu danych i długości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametrze jest nieprawidłowym typem danych zaplecza.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size, string sourcecolumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type, int32 size, string sourcecolumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType, size As Integer, sourcecolumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type, int size, System::String ^ sourcecolumn);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int * string -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (name, type, size, sourcecolumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourcecolumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru.</param>
        <param name="type">Jedna z <see cref="T:System.Data.Odbc.OdbcType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <param name="sourcecolumn">Nazwa kolumny źródłowej.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa nazwy parametru, typu danych, długości i nazwy kolumny źródłowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametrze jest nieprawidłowym typem danych zaplecza.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.Odbc.OdbcType odbcType, int32 size, valuetype System.Data.ParameterDirection parameterDirection, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ parameterName, System::Data::Odbc::OdbcType odbcType, int size, System::Data::ParameterDirection parameterDirection, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int * System.Data.ParameterDirection * bool * byte * byte * string * System.Data.DataRowVersion * obj -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (parameterName, odbcType, size, parameterDirection, isNullable, precision, scale, srcColumn, srcVersion, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="odbcType" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="parameterDirection" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru.</param>
        <param name="odbcType">Jedna z <see cref="T:System.Data.Odbc.OdbcType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <param name="parameterDirection">Jedna z <see cref="T:System.Data.ParameterDirection" /> wartości.</param>
        <param name="isNullable"><see langword="true" />Jeśli wartość pola może mieć wartość null; w <see langword="false" />przeciwnym razie.</param>
        <param name="precision">Całkowita liczba cyfr z lewej i prawej strony przecinka dziesiętnego, do którego <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> zostanie rozpoznany.</param>
        <param name="scale">Łączna liczba rozwiązanych miejsc <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> dziesiętnych.</param>
        <param name="srcColumn">Nazwa kolumny źródłowej.</param>
        <param name="srcVersion">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości.</param>
        <param name="value">Jest to wartość <see cref="T:System.Data.Odbc.OdbcParameter" />. <see cref="T:System.Object" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa nazwy parametru, typu danych, długości, nazwy kolumny źródłowej, kierunku parametru, dokładności liczbowej i innych właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>wyświetla.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter4#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter4/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter4#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametrze jest nieprawidłowym typem danych zaplecza.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.Odbc.OdbcType odbcType, int32 size, valuetype System.Data.ParameterDirection parameterDirection, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ parameterName, System::Data::Odbc::OdbcType odbcType, int size, System::Data::ParameterDirection parameterDirection, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Odbc.OdbcParameter : string * System.Data.Odbc.OdbcType * int * System.Data.ParameterDirection * byte * byte * string * System.Data.DataRowVersion * bool * obj -&gt; System.Data.Odbc.OdbcParameter" Usage="new System.Data.Odbc.OdbcParameter (parameterName, odbcType, size, parameterDirection, precision, scale, sourceColumn, sourceVersion, sourceColumnNullMapping, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="odbcType" Type="System.Data.Odbc.OdbcType" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="parameterDirection" Type="System.Data.ParameterDirection" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="precision" Type="System.Byte" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="scale" Type="System.Byte" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="sourceColumn" Type="System.String" Index="6" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" Index="7" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" Index="8" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="9" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru.</param>
        <param name="odbcType">Jedna z <see cref="P:System.Data.Odbc.OdbcParameter.OdbcType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <param name="parameterDirection">Jedna z <see cref="T:System.Data.ParameterDirection" /> wartości.</param>
        <param name="precision">Całkowita liczba cyfr z lewej i prawej strony przecinka dziesiętnego, do którego <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> zostanie rozpoznany.</param>
        <param name="scale">Łączna liczba rozwiązanych miejsc <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> dziesiętnych.</param>
        <param name="sourceColumn">Nazwa kolumny źródłowej.</param>
        <param name="sourceVersion">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości.</param>
        <param name="sourceColumnNullMapping"><see langword="true" />Jeśli odpowiadająca kolumna źródłowa dopuszcza wartość null; <see langword="false" /> Jeśli tak nie jest.</param>
        <param name="value">Jest to wartość <see cref="T:System.Data.Odbc.OdbcParameter" />. <see cref="T:System.Object" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.Odbc.OdbcParameter" /> klasy, która używa nazwy parametru, typu danych, długości, nazwy kolumny źródłowej, kierunku parametru, dokładności liczbowej i innych właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>wyświetla.  
  
```vb  
Public Sub CreateOdbcParameter()  
  Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 11, ParameterDirection.Output, True, 0, 0, "Description", DataRowVersion.Current, False, "garden hose")  
  MessageBox.Show(parameter.ToString())  
End Sub  
```  
  
```csharp  
public void CreateOdbcParameter()   
{  
  OdbcParameter parameter = new OdbcParameter("Description",OdbcType.VarChar,  
              11,ParameterDirection.Output,true,0,0,"Description",  
              DataRowVersion.Current, false, "garden hose");  
  MessageBox.Show(parameter.ToString());  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="type" /> parametrze jest nieprawidłowym typem danych zaplecza.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.Odbc.OdbcParameter.DbType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.DbType" /> parametr.</summary>
        <value>Jedna z <see cref="T:System.Data.DbType" /> wartości. Wartość domyślna to <see cref="T:System.String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> I<xref:System.Data.Odbc.OdbcParameter.DbType%2A> są połączone. W związku z tym <xref:System.Data.Odbc.OdbcParameter.DbType%2A> ustawienie <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> zmiany na pomocniczą <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>.  
  
 Aby uzyskać listę obsługiwanych typów danych, zobacz odpowiedni <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> element członkowski. Aby uzyskać więcej informacji, zobacz [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
> [!NOTE]
>  <xref:System.Data.DbType.Object>Program nie obsługuje Dostawca danych Microsoft .NET Framework dla ODBC.  
  
   
  
## Examples  
 Poniższy przykład wywołuje **procedurę składowaną** z trzema parametrami przy użyciu dostawcy zarządzanego ODBC.  
  
 [!code-csharp[Classic WebData OdbcParameter.DbType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.DbType/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.DbType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.DbType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość nie została ustawiona jako prawidłowa <see cref="T:System.Data.DbType" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.Odbc.OdbcParameter.Direction" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy parametr jest tylko wejściowy, tylko w trybie wyjściowym, dwukierunkowym lub parametrem wartości zwracanej procedury składowanej.</summary>
        <value>Jedna z <see cref="T:System.Data.ParameterDirection" /> wartości. Wartość domyślna to <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommand> <xref:System.Data.Odbc.OdbcParameter> Jeśli jest ,`Output`a wykonywanie skojarzone nie zwraca wartości, będzie zawierać wartość null. <xref:System.Data.ParameterDirection> Wartości null są obsługiwane za pomocą <xref:System.DBNull> klasy.  
  
 `Output`, `InputOut`, i `ReturnValue` parametry zwracane przez wywołanie <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> nie <xref:System.Data.Odbc.OdbcDataReader.Close%2A> sądostępne`Dispose` do momentu wywołania lub w. <xref:System.Data.Odbc.OdbcDataReader>  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
```vb  
Public Sub CreateMyProc(connection As OdbcConnection)  
  
   Dim command As OdbcCommand = connection.CreateCommand()  
   command.CommandText = "{ call MyProc(?,?,?) }"  
   command.Parameters.Add("", OdbcType.Int).Value = 1  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3  
  
End Sub  
```  
  
```csharp  
public void CreateMyProc(OdbcConnection connection)   
{  
   OdbcCommand command = connection.CreateCommand();  
   command.CommandText = "{ call MyProc(?,?,?) }";  
   command.Parameters.Add("", OdbcType.Int).Value = 1;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość nie została ustawiona na jedną z prawidłowych <see cref="T:System.Data.ParameterDirection" /> wartości.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Data.Odbc.OdbcParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy parametr akceptuje wartości null.</summary>
        <value><see langword="true" />Jeśli wartości null są akceptowane; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości null są obsługiwane za pomocą <xref:System.DBNull> klasy.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
   Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOdbcParameter()   
{  
   OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="OdbcType">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcType OdbcType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Odbc.OdbcType OdbcType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.OdbcType" />
      <MemberSignature Language="VB.NET" Value="Public Property OdbcType As OdbcType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcType OdbcType { System::Data::Odbc::OdbcType get(); void set(System::Data::Odbc::OdbcType value); };" />
      <MemberSignature Language="F#" Value="member this.OdbcType : System.Data.Odbc.OdbcType with get, set" Usage="System.Data.Odbc.OdbcParameter.OdbcType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.Odbc.OdbcType" /> parametr.</summary>
        <value>Wartość, która <see cref="T:System.Data.Odbc.OdbcType" /> jest wartością parametru. <see cref="T:System.Data.Odbc.OdbcType" /> Wartość domyślna to <see langword="Nchar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> I<xref:System.Data.Odbc.OdbcParameter.DbType%2A> są połączone. W związku z tym <xref:System.Data.Odbc.OdbcParameter.DbType%2A> ustawienie <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> zmiany na pomocniczą <xref:System.Data.Odbc.OdbcType>.  
  
 Aby uzyskać listę obsługiwanych typów danych, zobacz odpowiedni <xref:System.Data.Odbc.OdbcType> element członkowski. Aby uzyskać więcej informacji, zobacz [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int with get, set" Usage="System.Data.Odbc.OdbcParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.Odbc.OdbcParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
        <value>Nazwa <see cref="T:System.Data.Odbc.OdbcParameter" />. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast parametrów nazwanych, Dostawca ODBC .NET używa parametrów pozycyjnych, które są oznaczone znakiem zapytania (?) w składni tekstu polecenia. Obiekty parametrów w <xref:System.Data.Odbc.OdbcParameterCollection> i rzeczywiste parametry akceptowane przez procedurę składowaną lub sparametryzowanej instrukcji SQL odpowiadają sobie nawzajem w zależności od kolejności, w <xref:System.Data.Odbc.OdbcParameter> jakiej obiekty są wstawiane do kolekcji, a nie przez Nazwa parametru. Można podać nazwy parametrów, ale zostaną one zignorowane podczas wiązania obiektu parametru.  
  
   
  
## Examples  
 W poniższym przykładzie przyjęto założenie, że źródło danych ma nazwę tabeli **MyTable** i procedurę przechowywaną o nazwie "Moja proc" zdefiniowaną jako:  
  
```  
CREATE TABLE MyTable (col1 int, col2 smallmoney, col3 decimal)  
CREATE PROC MyProc (@p1 int, @p2 smallmoney, @p3 decimal) AS INSERT INTO MyTable VALUES (@p1, @p2, @p3)  
```  
  
 Poniższy przykład tworzy parametry i wywołuje procedurę przechowywaną procedury składowanej:  
  
```vb  
Public Sub CreateMyProc(connection As OdbcConnection)  
  
   Dim command As OdbcCommand = connection.CreateCommand()  
  
   command.CommandText = "{ call MyProc(?,?,?) }"  
   command.Parameters.Add("", OdbcType.Int).Value = 1  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3  
  
End Sub  
```  
  
```csharp  
public void CreateMyProc(OdbcConnection connection)   
{  
   OdbcCommand command = myConnection.CreateCommand();  
  
   command.CommandText = "{ call MyProc(?,?,?) }";  
   command.Parameters.Add("", OdbcType.Int).Value = 1;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Precision : byte with get, set" Usage="System.Data.Odbc.OdbcParameter.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę cyfr używanych do reprezentowania <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> właściwości.</summary>
        <value>Maksymalna liczba cyfr użyta do reprezentowania <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> właściwości. Wartość domyślna to 0, co oznacza, że dostawca danych ustawia precyzję dla <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości na wartość inną niż wartość w bazie danych zależy od implementacji dostawcy danych i może zwracać kod błędu, obcinać lub zaokrąglać dane.  
  
 Właściwość ma wpływ tylko na parametry <xref:System.Data.Odbc.OdbcType> , `Decimal` których parametr ma wartość lub `Numeric`. <xref:System.Data.Odbc.OdbcParameter.Precision%2A> W przypadku innych typów <xref:System.Data.Odbc.OdbcParameter.Precision%2A> danych jest ignorowana.  
  
> [!NOTE]
>  Użycie tej właściwości w celu przekształcenie danych przesyłanych do bazy danych nie jest obsługiwane. Aby zaokrąglić, obciąć lub w inny sposób wymuszać dane przed przekazaniem ich do <xref:System.Math> bazy danych, należy użyć klasy `System` , która jest częścią przestrzeni nazw przed przypisaniem `Value` wartości do właściwości parametru.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Price", OdbcType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Price", OdbcType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberSignature Language="F#" Value="override this.ResetDbType : unit -&gt; unit" Usage="odbcParameter.ResetDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje typ skojarzony z tym <see cref="T:System.Data.Odbc.OdbcParameter" />elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wykonujesz polecenie, które zawiera wartości parametrów, kod może jawnie ustawić typ parametru lub parametr może wywnioskować swój typ z jego wartości. Wywołanie tej metody resetuje parametr tak, aby mógł ponownie wnioskować o jego typ z wartości przekazaną w parametrze. Wywołanie tej metody ma wpływ <xref:System.Data.Odbc.OdbcParameter.DbType%2A> na właściwości <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> <xref:System.Data.Odbc.OdbcParameter>i.  
  
 Wywoływanie <xref:System.Data.Odbc.OdbcParameter.ResetDbType%2A> resetuje <xref:System.Data.Odbc.OdbcParameter.DbType%2A> do wartości domyślnej (ciąg).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="ResetOdbcType">
      <MemberSignature Language="C#" Value="public void ResetOdbcType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOdbcType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ResetOdbcType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOdbcType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOdbcType();" />
      <MemberSignature Language="F#" Value="member this.ResetOdbcType : unit -&gt; unit" Usage="odbcParameter.ResetOdbcType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje typ skojarzony z tym <see cref="T:System.Data.Odbc.OdbcParameter" />elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wykonujesz polecenie, które zawiera wartości parametrów, kod może jawnie ustawić typ parametru lub parametr może wywnioskować swój typ z jego wartości. Wywołanie tej metody resetuje parametr tak, aby mógł ponownie wnioskować o jego typ z wartości przekazaną w parametrze. Wywołanie tej metody ma wpływ <xref:System.Data.Odbc.OdbcParameter.DbType%2A> na właściwości <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> <xref:System.Data.Odbc.OdbcParameter>i.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : byte with get, set" Usage="System.Data.Odbc.OdbcParameter.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych, do których <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> zostanie rozwiązany.</summary>
        <value>Liczba rozwiązanych miejsc <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> dziesiętnych. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.Scale%2A> Właściwość jest używana tylko dla parametrów wejściowych dziesiętnych i liczbowych.  
  
 Efekt ustawienia tej właściwości na wartość inną niż wartość w bazie danych zależy od implementacji dostawcy danych i może zwracać kod błędu lub obciąć lub zaokrąglić dane.  
  
 Właściwość ma wpływ tylko na parametry <xref:System.Data.Odbc.OdbcType> , `Decimal` których parametr ma wartość lub `Numeric`. <xref:System.Data.Odbc.OdbcParameter.Scale%2A> W przypadku innych typów <xref:System.Data.Odbc.OdbcParameter.Scale%2A> danych jest ignorowana.  
  
 W przypadku używania SQL Server Native Client 10 (lub nowszego) do powiązania parametru, którego typem jest Decimal, numeric, VarNumeric, DBDate lub DBTimeStamp, należy ręcznie określić odpowiednią wartość skali.  
  
> [!NOTE]
>  Użycie tej właściwości w celu przekształcenie danych przesyłanych do bazy danych nie jest obsługiwane. Aby zaokrąglić, obciąć lub w inny sposób wymuszać dane przed przekazaniem ich do <xref:System.Math> bazy danych, należy użyć klasy `System` , która jest częścią przestrzeni nazw przed przypisaniem `Value` wartości do właściwości parametru.  
  
> [!NOTE]
>  .NET Framework dostawcy danych, którzy są dołączeni do .NET Framework wersji 1,0, nie `scale` weryfikują <xref:System.Decimal> wartości parametrów. Może to spowodować Wstawianie modyfikowanych danych w źródle danych. Jeśli używasz .NET Framework w wersji 1,0, sprawdź `scale` poprawność `decimal` wartości przed ustawieniem wartości parametru. W przypadku używania .NET Framework w wersji 1,1 lub nowszej, `scale` wartości `decimal` przekraczające skalę parametru mogą być obcinane tylko w skali, jeśli jest to zachowanie bazowego sterownika ODBC.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Price", OdbcType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Price", OdbcType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Data.Odbc.OdbcParameter.Size" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalny rozmiar danych w kolumnie.</summary>
        <value>Maksymalny rozmiar danych w kolumnie. Wartość domyślna jest wywnioskowana z wartości parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.Size%2A> Właściwość jest używana dla typów binarnych i ciągów.  
  
 W przypadku typów danych niebędących ciągami i danych <xref:System.Data.Odbc.OdbcParameter.Size%2A> ciągu ANSI Właściwość przywołuje liczbę bajtów. Dla danych <xref:System.Data.Odbc.OdbcParameter.Size%2A> ciągu Unicode odnosi się do liczby znaków. Liczba ciągów nie zawiera znaku kończącego.  
  
 W przypadku typów danych o zmiennej długości `Size` program opisuje maksymalną ilość danych do przesłania do serwera. Na przykład w przypadku wartości `Size` ciągu Unicode może służyć do ograniczenia ilości danych wysyłanych do serwera do pierwszych 100 znaków.  
  
 W przypadku parametrów dwukierunkowy i Output oraz wartości zwracanych należy ustawić wartość `Size`. Nie jest to wymagane w przypadku parametrów wejściowych, a jeśli nie zostanie ustawiona jawnie, wartość jest wywnioskowana z rzeczywistego rozmiaru określonego parametru w przypadku wykonania instrukcji sparametryzowanej.  
  
 ,, I <xref:System.Data.Odbc.OdbcParameter.Value%2A>właściwości parametru można wywnioskować według ustawienia. <xref:System.Data.Odbc.OdbcParameter.Size%2A> <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> <xref:System.Data.Common.DbParameter.DbType%2A> W związku z tym nie trzeba określać ich. Jednak nie są one widoczne w <xref:System.Data.Odbc.OdbcParameter> ustawieniach właściwości. Na przykład jeśli rozmiar parametru został wywnioskowany, `Size` nie zawiera wartości wywnioskowanej po wykonaniu instrukcji.  
  
> [!NOTE]
>  `ParameterDirection.InputOutput`W przypadku `OdbcParameter` `Size` z <xref:System.Data.Odbc.OdbcParameter.Direction%2A> ,`ParameterDirection.Output`lub ,wyjątekjestgenerowany,gdypoleceniejestwykonywane,jeślirozmiarwartości`ParameterDirection.ReturnValue`zwróconej przez źródło danych przekracza określoną <xref:System.Data.Odbc.OdbcParameter>wartość.  
  
 W przypadku typów danych o stałej długości wartość `Size` jest ignorowana. Można ją pobrać do celów informacyjnych i zwraca maksymalną ilość bajtów używaną przez dostawcę podczas przesyłania wartości parametru do serwera.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim myValue As String = "12 foot scarf - multiple colors, one previous owner"  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar)  
    parameter.Direction = ParameterDirection.Output  
    parameter.Size = myValue.Length  
    parameter.Value = myValue  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    string myValue = "12 foot scarf - multiple colors, one previous owner";  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar);  
    parameter.Direction = ParameterDirection.Output;  
    parameter.Size = myValue.Length;  
    parameter.Value = myValue;  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.Odbc.OdbcParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kolumny źródłowej zamapowanej <see cref="T:System.Data.DataSet" /> na i użytą do załadowania lub <see cref="P:System.Data.Odbc.OdbcParameter.Value" />zwrócenia.</summary>
        <value>Nazwa kolumny źródłowej, która będzie używana do ustawiania wartości tego parametru. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A> jest ustawiona na coś innego niż pusty ciąg, wartość parametru jest pobierana z kolumny `SourceColumn` o nazwie. Jeśli <xref:System.Data.Odbc.OdbcParameter.Direction%2A> jest ustawiona na `Input`, <xref:System.Data.DataSet>wartość jest pobierana z. Jeśli `Direction` jest ustawiona na `Output`, wartość jest pobierana ze źródła danych. A `Direction` z`InputOutput` jest kombinacją obu.  
  
 Aby uzyskać więcej informacji na temat sposobu korzystania <xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A> z właściwości, zobacz [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md) i [Aktualizowanie źródeł danych za pomocą adapterów](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumnNullMapping : bool with get, set" Usage="System.Data.Odbc.OdbcParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia lub pobiera wartość wskazującą, czy kolumna źródłowa dopuszcza wartość null. Umożliwia <see cref="T:System.Data.Common.DbCommandBuilder" /> to poprawne generowanie instrukcji update dla kolumn dopuszczających wartości null.</summary>
        <value><see langword="true" />Jeśli kolumna źródłowa ma wartość null; <see langword="false" /> Jeśli tak nie jest.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A>jest używana przez <xref:System.Data.Common.DbCommandBuilder> program do prawidłowej generacji poleceń aktualizacji w przypadku kolumn o wartości null. Ogólnie rzecz biorąc, <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> korzystanie z programu jest ograniczone do deweloperów <xref:System.Data.Common.DbCommandBuilder>dziedziczących z programu.  
  
 <xref:System.Data.Common.DbCommandBuilder>używa tej właściwości, aby określić, czy kolumna źródłowa dopuszcza wartość null, i ustawia `true` tę właściwość na, jeśli nie `false` jest to wartość null, i jeśli nie jest. Kiedy <xref:System.Data.Common.DbCommandBuilder> generuje swoją instrukcję Update, bada <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> dla każdego parametru. Jeśli właściwość ma `true`wartość, <xref:System.Data.Common.DbCommandBuilder> program generuje klauzule WHERE podobne do poniższego przykładu. W tym wyrażeniu zapytania "NazwaPola" reprezentuje nazwę pola:  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 Jeśli <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> pole ma wartość false, <xref:System.Data.Common.DbCommandBuilder> generuje następującą klauzulę WHERE:  
  
```  
FieldName = @OriginalFieldName  
```  
  
 Ponadto @IsNull_FieldName zawiera 1, jeśli pole źródłowe zawiera wartość null, a wartość 0, jeśli nie. Ten mechanizm umożliwia optymalizację wydajności w SQL Server i zapewnia obsługę wspólnego kodu, który działa dla wielu dostawców.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.Odbc.OdbcParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.DataRowVersion" /> do użycia podczas ładowania <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</summary>
        <value>Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości. Wartość domyślna to Current.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest używany przez <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> podczas<xref:System.Data.Common.DbDataAdapter.Update*> operacji do określenia, czy wartość parametru jest ustawiona na Current czy Original. `SourceVersion` Dzięki temu klucze podstawowe mają być aktualizowane.  
  
 Ta właściwość jest <xref:System.Data.DataRow> ustawiona na wersję używaną przez `Item` Właściwość (`DataRow` indeksator) lub <xref:System.Data.DataRow.GetChildRows%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
    parameter.SourceVersion = DataRowVersion.Current  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
    parameter.SourceVersion = DataRowVersion.Current;  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.ICloneable.Clone" />Zobacz.</summary>
        <returns>Nowy <see cref="T:System.Object" /> , który jest kopią tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Data.Odbc.OdbcParameter> gdy wystąpienie jest rzutowane <xref:System.ICloneable> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="odbcParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg, który zawiera <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</summary>
        <returns>Ciąg, który zawiera <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.Odbc.OdbcParameter.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru.</summary>
        <value><see cref="T:System.Object" /> Jest to wartość parametru. Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku parametrów wejściowych wartość jest powiązana z <xref:System.Data.Odbc.OdbcCommand> , która jest wysyłana do serwera. W przypadku parametrów danych wyjściowych i zwracanych wartość jest ustawiana po zakończeniu <xref:System.Data.Odbc.OdbcCommand> i <xref:System.Data.Odbc.OdbcDataReader> po zamknięciu.  
  
 Po wysłaniu wartości parametru o wartości null do serwera, użytkownik musi określić <xref:System.DBNull>, a nie null. Wartość null w systemie jest pustym obiektem, który nie ma wartości. <xref:System.DBNull>służy do reprezentowania wartości null. Jeśli parametr jest używany do wywołania procedury składowanej z parametrami, które mają wartości domyślne, <xref:System.Data.Odbc.OdbcParameter.Value%2A> ustawienie wartość null powoduje użycie wartości domyślnej.  
  
 Jeśli aplikacja określa typ bazy danych, wartość związana jest konwertowana na ten typ, gdy dostawca wysyła dane do serwera. Dostawca próbuje przekonwertować dowolny typ wartości, jeśli obsługuje <xref:System.IConvertible> interfejs. Błędy konwersji mogą wynikać, jeśli określony typ nie jest zgodny z wartością.  
  
 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> Właściwości i <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> można wywnioskować według ustawienia <xref:System.Data.Odbc.OdbcParameter.Value%2A>. W razie potrzeby, rozmiar, precyzja i skala są również wywnioskowane z <xref:System.Data.Odbc.OdbcParameter.Value%2A> momentu wykonania instrukcji sparametryzowanej. Jednak wartości wywnioskowane nie są widoczne dla użytkownika.  
  
 Właściwość jest zastępowana `Update` przez metodę. <xref:System.Data.Odbc.OdbcParameter.Value%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.Odbc.OdbcParameter> i ustawia niektóre właściwości.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.Value = "garden hose"  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.Value = "garden hose";  
 }  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Praca z poleceniami</related>
      </Docs>
    </Member>
  </Members>
</Type>
