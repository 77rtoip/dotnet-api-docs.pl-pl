<Type Name="HasRunnableWorkflowEvent" FullName="System.Activities.DurableInstancing.HasRunnableWorkflowEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1cfd646d1e20d071ee8c664f99f0d0a8ba1ebead" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36655566" /></Metadata><TypeSignature Language="C#" Value="public sealed class HasRunnableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HasRunnableWorkflowEvent extends System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;class System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HasRunnableWorkflowEvent&#xA;Inherits InstancePersistenceEvent(Of HasRunnableWorkflowEvent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HasRunnableWorkflowEvent sealed : System::Runtime::DurableInstancing::InstancePersistenceEvent&lt;System::Activities::DurableInstancing::HasRunnableWorkflowEvent ^&gt;" />
  <TypeSignature Language="F#" Value="type HasRunnableWorkflowEvent = class&#xA;    inherit InstancePersistenceEvent&lt;HasRunnableWorkflowEvent&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Activities.DurableInstancing.HasRunnableWorkflowEvent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Przedstawia zdarzenie, która wywołuje Store wystąpienia przepływu pracy SQL, aby powiadomić hosty przepływu pracy, o istnieniu wystąpień możliwych do uruchomienia w bazie danych trwałości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienie jest *możliwy do uruchomienia*, jeśli nie jest w stanie wstrzymania lub stanu ukończenia i spełnia następujące warunki:  
  
-   Wystąpienie jest odblokowana i ma oczekujące czasomierza, który wygasł.  
  
-   Wystąpienie jest odblokowana i jego stan to **Executing**.  
  
-   Wystąpienie ma nieprawidłowy blokadę.  
  
 Magazyn wystąpień należy okresowo wyszukiwać wystąpień możliwych do uruchomienia, które należą do hosta przepływu pracy, który używa magazynu. Powinna ona zgłosić <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> gdy znajdzie możliwe do uruchomienia wystąpienia w magazynie w trwałości, który odpowiada jego typ hosta przepływu pracy. Magazyn wystąpień nie znajdzie możliwe do uruchomienia wystąpienia w magazynie w trwałości, nadal należy do żadnych wystąpień możliwych do uruchomienia w sklepie trwałości monitorowania.  
  
 Po podnoszenie HasRunnableWorkflowEvent, Magazyn wystąpienia ma zostać zatrzymana, wystąpień możliwych do uruchomienia w sklepie trwałości monitorowania, dopóki nie odbierze i wykonuje <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>. Monitorowanie nadal tylko, jeśli wykonanie TryLoadRunnableWorkflowCommand nie zwraca żadnych wystąpień możliwych do uruchomienia.  
  
 Gdy hosta przepływu pracy otrzymuje HasRunnableWorkflowEvent, wykonuje <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> względem magazynu wystąpienia można załadować wystąpienia w pamięci.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HasRunnableWorkflowEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HasRunnableWorkflowEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>