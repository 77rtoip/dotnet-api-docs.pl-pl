<Type Name="ClientRoleProvider" FullName="System.Web.ClientServices.Providers.ClientRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="182319b6e7db61683e17363d96c1f36f75c26d6d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36604804" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.Providers.ClientRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type ClientRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Pobiera informacje o rolach dla aplikacji systemu Windows z usługi ról Microsoft Ajax.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć usługi aplikacji klienta, można pobrać informacji o roli z istniejącej usługi ról, konfigurując aplikacji umożliwiająca użycie <xref:System.Web.ClientServices.Providers.ClientRoleProvider> klasy. Po przeprowadzeniu konfiguracji, można określić, czy uwierzytelniony użytkownik jest w określonej roli, wywołując <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody <xref:System.Security.Principal.IPrincipal> zwrócony przez `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> właściwości. Aplikacje skonfigurowane do korzystania z usługi aplikacji klienta, ta właściwość zwraca <xref:System.Web.ClientServices.ClientRolePrincipal>. Ponieważ ta klasa implementuje <xref:System.Security.Principal.IPrincipal> interfejsu, nie trzeba jawnie odwoływać. <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType> Wewnętrznie wywołuje metodę <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=nameWithType> metody.  
  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> Klasy jest dostawcy członkostwa roli tylko do odczytu, który pobiera informacje o rolach dla uwierzytelnionych użytkowników z usługi ról wskazywanym przez <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> właściwości. Wartość <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> właściwości jest zazwyczaj pobierana z pliku konfiguracji aplikacji oraz innych wartości konfiguracji. Aby uzyskać więcej informacji, zobacz [porady: Konfigurowanie usługi aplikacji klienta](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 Można pobrać bieżącego <xref:System.Web.ClientServices.Providers.ClientRoleProvider> wystąpienie za pośrednictwem `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=nameWithType> właściwości.  
  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> Klasy obsługuje tylko <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> i <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> metody <xref:System.Web.Security.RoleProvider> klasy abstrakcyjnej. Podczas wywoływania jednej z tych metod dla danego użytkownika dostawcę usługi najpierw sprawdza dane lokalne pamięci podręcznej informacje o rolach. Jeśli pamięci podręcznej nie zawiera żadnych informacji o roli lub wygasł pamięci podręcznej, dostawca usług pobiera informacje o rolach usługi ról i dodaje go do pamięci podręcznej.  
  
 Po skonfigurowaniu usługi aplikacji klienta, można określić wartość limitu czasu dla pamięci podręcznej ról. Aby wymusić <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> metody do pobierania danych roli usługi zamiast lokalnej pamięci podręcznej wywołania <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> metody pierwszy.  
  
 Nie można użyć <xref:System.Web.ClientServices.Providers.ClientRoleProvider> klasy do tworzenia lub usuwania ról, aby zmodyfikować członkostwo ról użytkowników. Aby utworzyć lub zmodyfikować informacje o rolach, należy zmienić konfigurację usługi roli na serwerze.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak do tej właściwości programowo skonfiguruj role lokalizacji usługi.  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
    <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
    <altmember cref="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="clientRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Nie używany.</param>
        <param name="roleNames">Nie używany.</param>
        <summary>Ta metoda nie jest używana przez tę klasę.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest używana przez tę klasę.</summary>
        <value>Nazwa aplikacji dla dostawcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości nie ma znaczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="clientRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nie używany.</param>
        <summary>Ta metoda nie jest używana przez tę klasę.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="clientRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nie używany.</param>
        <param name="throwOnPopulatedRole">Nie używany.</param>
        <summary>Ta metoda nie jest używana przez tę klasę.</summary>
        <returns>Nie dotyczy. Ta metoda zawsze zwraca wyjątek.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="clientRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nie używany.</param>
        <param name="usernameToMatch">Nie używany.</param>
        <summary>Ta metoda nie jest używana przez tę klasę.</summary>
        <returns>Nie dotyczy. Ta metoda zawsze zwraca wyjątek.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="clientRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ta metoda nie jest używana przez tę klasę.</summary>
        <returns>Nie dotyczy. Ta metoda zawsze zwraca wyjątek.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="clientRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika, który można pobrać ról.</param>
        <summary>Pobiera nazwy ról, do których określony użytkownik należy.</summary>
        <returns>Nazwy roli, która <paramref name="username" /> należy lub pusta tablica, jeśli użytkownik nie jest uwierzytelniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> Metoda pobiera informacje o rolach użytkownika bieżącego, uwierzytelnionym, który należy określić w `username` parametru. Nazwa użytkownika można uzyskać za pomocą `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> właściwości w następujący sposób: `Thread.CurrentPrincipal.Identity.Name`.  
  
 Dostawcy usług buforuje informacje o rolach o lokalnego systemu plików w celu uniknięcia usługa niepotrzebne wywołania. Aby uzyskać więcej informacji, zobacz <xref:System.Web.ClientServices.Providers.ClientRoleProvider> Przegląd klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak do używania tej metody w celu ustalenia, czy dane logowania użytkownika wygasło przed testowaniem członkostwo roli. Ten kod przyjęto założenie, że wszystkich prawidłowych użytkowników są skojarzone z co najmniej jedną rolę. W takim przypadku <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> — metoda nie zwróci żadnych ról dla poprzednio uwierzytelniony użytkownik, którego logowanie wygasło. Jeśli dane logowania użytkownika wygasł, ten kod wyświetla okno dialogowe logowania. W przeciwnym razie wywołuje <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> metodę, aby określić, czy użytkownik jest w roli "manager". Ograniczony kod znajduje się w `PerformManagerTask` metody, która nie jest dostępna.  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> jest <see cref="F:System.String.Empty" /> lub <see langword="null" />.  - lub - <paramref name="username" /> nie jest nazwą użytkownika bieżącego, uwierzytelnionego użytkownika.</exception>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="clientRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nie używany.</param>
        <summary>Ta metoda nie jest używana przez tę klasę.</summary>
        <returns>Nie dotyczy. Ta metoda zawsze zwraca wyjątek.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="clientRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Przyjazna nazwa dostawcy.</param>
        <param name="config">Kolekcja par nazw i wartości reprezentujących atrybuty specyficzne dla dostawcy określonego w konfiguracji dla tego dostawcy.</param>
        <summary>Inicjuje dostawcę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Wywołań modelu rozszerzalności <xref:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize%2A> metodę, aby zainicjować <xref:System.Web.ClientServices.Providers.ClientRoleProvider> korzystając z informacji w pliku konfiguracyjnym aplikacji. Ta metoda rozpoznaje następujące atrybuty konfiguracji usługi roli:  
  
-   `name`  
  
-   `description`  
  
-   `cacheTimeout`  
  
-   `connectionStringName`  
  
-   `serviceUri`  
  
-   `honorCookieExpiry`  
  
 Aby uzyskać więcej informacji o tych atrybutów, zobacz [porady: Konfigurowanie usługi aplikacji klienta](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.  - lub - <paramref name="config" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest pusty.  - lub - <paramref name="config" /> zawiera nierozpoznaną wartość.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> został już zainicjowany.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="config" /> zawiera <c>Limit_czasu_pamięci_podręcznej</c> wartość, która nie znajduje się w poprawnym formacie do konwersji na <see cref="T:System.Int32" /> wartość.</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="config" /> zawiera <c>Limit_czasu_pamięci_podręcznej</c> wartość reprezentującą liczbę mniej niż <see cref="F:System.Int32.MinValue" /> lub większa niż <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="clientRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika.</param>
        <param name="roleName">Nazwa roli.</param>
        <summary>Pobiera wartość wskazującą, czy określony użytkownik ma określoną rolę.</summary>
        <returns>
          <see langword="true" /> Jeśli określony użytkownik jest w określonej roli; <see langword="false" /> Jeśli określony użytkownik nie jest uwierzytelniony, lub nie znajduje się w określonej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić, czy uwierzytelniony użytkownik jest w określonej roli, wywołując <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody <xref:System.Security.Principal.IPrincipal> zwrócony przez `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> właściwości. Aplikacje skonfigurowane do korzystania z usługi aplikacji klienta, ta właściwość zwraca <xref:System.Web.ClientServices.ClientRolePrincipal>. Ponieważ ta klasa implementuje <xref:System.Security.Principal.IPrincipal> interfejsu, nie trzeba jawnie odwoływać. <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType> Wewnętrznie wywołuje metodę <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> metody. <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> Używa metody <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> metodę, aby określić, czy użytkownik jest wskazane przez `username` jest w roli wskazywanym przez `roleName`.  
  
 Dostawcy usług buforuje informacje o rolach o lokalnego systemu plików w celu uniknięcia usługa niepotrzebne wywołania. Aby uzyskać więcej informacji, zobacz <xref:System.Web.ClientServices.Providers.ClientRoleProvider> Przegląd klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak na dostęp do tej metody bezpośrednio w celu określenia, czy użytkownik ma określoną rolę. Ten kod najpierw sprawdza, czy logowanie użytkownika wygasło. Jawne <xref:System.Web.ClientServices.Providers.ClientRoleProvider> odwołanie jest wymagane do wywołania <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> metody, więc tego samego odwołania są używane do wywoływania <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> metody. Jeśli użytkownik jest w roli "manager", ten kod wywołuje `PerformManagerTask` metody, która nie jest dostępna.  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> jest <see cref="F:System.String.Empty" /> lub <see langword="null" />.  - lub - <paramref name="username" /> nie jest nazwą użytkownika bieżącego, uwierzytelnionego użytkownika.</exception>
        <exception cref="T:System.Net.WebException">Użytkownik jest już uwierzytelniony.  - lub - usługi ról nie jest dostępna.</exception>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
        <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="clientRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Nie używany.</param>
        <param name="roleNames">Nie używany.</param>
        <summary>Ta metoda nie jest używana przez tę klasę.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCache">
      <MemberSignature Language="C#" Value="public void ResetCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCache();" />
      <MemberSignature Language="F#" Value="member this.ResetCache : unit -&gt; unit" Usage="clientRoleProvider.ResetCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa informacje o pamięci podręcznej rolach i przywraca limitu czasu pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> Metoda usuwa wszystkie informacje o rolach z lokalnej pamięci podręcznej i powoduje, że pamięć podręczna wygaśnie. Po wywołaniu tej metody następnego wywołania w celu <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> lub <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> — metoda pobiera informacje o rolach z usługi roli skonfigurowanych zamiast lokalnej pamięci podręcznej.  
  
 Ta metoda umożliwia umożliwiają użytkownikom odświeżania pamięci podręcznej ról podczas ich roli został zmodyfikowany, ale nie upłynął jeszcze pamięci podręcznej. Aby uzyskać informacje o tym, jak ustawić interwał limitu czasu pamięci podręcznej ról, zobacz [porady: Konfigurowanie usługi aplikacji klienta](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak zresetować pamięć podręczną, role lokalne przy użyciu tej metody.  
  
 [!code-csharp[ClientApplicationServices#314](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#314)]
 [!code-vb[ClientApplicationServices#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#314)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="clientRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nie używany.</param>
        <summary>Ta metoda nie jest używana przez tę klasę.</summary>
        <returns>Nie dotyczy. Ta metoda zawsze zwraca wyjątek.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceUri">
      <MemberSignature Language="C#" Value="public string ServiceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceUri" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceUri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceUri : string with get, set" Usage="System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI usługi roli.</summary>
        <value>Usługa roli identyfikatora URI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można ustawić <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> właściwości w kodzie aplikacji, ale zazwyczaj ustawia wartość w pliku konfiguracyjnym aplikacji. Dzięki temu można zmienić lokalizacji usługi bez konieczności ponownego kompilowania kodu. Aby uzyskać więcej informacji, zobacz [porady: Konfigurowanie usługi aplikacji klienta](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 Po ustawieniu programowo lokalizacji usługi, należy określić usługę pełny identyfikator URI, który zawsze będzie kończyć "Role_JSON_AppService.axd".  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak do tej właściwości programowo skonfiguruj role lokalizacji usługi.  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podczas pobierania tej właściwości, żadna usługa identyfikatora URI, został znaleziony w pliku konfiguracyjnym aplikacji, a ta właściwość nie została wcześniej ustawiona.</exception>
      </Docs>
    </Member>
  </Members>
</Type>