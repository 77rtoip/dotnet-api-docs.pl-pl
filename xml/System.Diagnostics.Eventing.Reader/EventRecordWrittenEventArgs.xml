<Type Name="EventRecordWrittenEventArgs" FullName="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="255dbda02652febec0ec1f78b33c7939e1bc2fa8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37665711" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventRecordWrittenEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRecordWrittenEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRecordWrittenEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventRecordWrittenEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type EventRecordWrittenEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="87cbc-101">Gdy <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> zdarzenie jest zgłaszane, wystąpienie tego obiektu jest przekazywany do metody delegata, która obsługuje zdarzenie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="87cbc-101">When the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised, an instance of this object is passed to the delegate method that handles the event.</span>
      </span>
      <span data-ttu-id="87cbc-102">Ten obiekt zawiera zdarzenia, które zostały opublikowane w usłudze dziennika zdarzeń lub wyjątek, który wystąpił podczas subskrypcji zdarzeń nie powiodło się.</span>
      <span class="sxs-lookup">
        <span data-stu-id="87cbc-102">This object contains the event that was published to the event log or the exception that occurred when the event subscription failed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87cbc-103">Na przykład kodu za pomocą tej klasy, zobacz [porady: subskrybowanie do zdarzeń w dzienniku zdarzeń](http://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span><span class="sxs-lookup"><span data-stu-id="87cbc-103">For example code using this class, see [How to: Subscribe to Events in an Event Log](http://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EventException">
      <MemberSignature Language="C#" Value="public Exception EventException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception EventException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ EventException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventException : Exception" Usage="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="87cbc-104">Pobiera wyjątek, który wystąpił podczas subskrypcji zdarzeń nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87cbc-104">Gets the exception that occurred when the event subscription failed.</span>
          </span>
          <span data-ttu-id="87cbc-105">Wyjątek ma opis niepowodzenia subskrypcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87cbc-105">The exception has a description of why the subscription failed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="87cbc-106">Zwraca <see cref="T:System.Exception" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87cbc-106">Returns an <see cref="T:System.Exception" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventRecord">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventRecord EventRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Eventing.Reader.EventRecord EventRecord" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventRecord As EventRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventRecord ^ EventRecord { System::Diagnostics::Eventing::Reader::EventRecord ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventRecord : System.Diagnostics.Eventing.Reader.EventRecord" Usage="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="87cbc-107">Pobiera rekord zdarzenia, które są publikowane w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87cbc-107">Gets the event record that is published to the event log.</span>
          </span>
          <span data-ttu-id="87cbc-108">To zdarzenie spełnia kryteria zapytania określony w subskrypcji zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87cbc-108">This event matches the criteria from the query specified in the event subscription.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="87cbc-109">Zwraca <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87cbc-109">Returns a <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>