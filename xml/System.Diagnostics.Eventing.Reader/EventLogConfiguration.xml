<Type Name="EventLogConfiguration" FullName="System.Diagnostics.Eventing.Reader.EventLogConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc8e53c792d41383e1bf1f6aa8eb88ac27575df2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30449169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventLogConfiguration : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogConfiguration extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogConfiguration&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogConfiguration : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="26829-101">Zawiera statyczny informacji i ustawień konfiguracyjnych dla dziennika zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26829-101">Contains static information and configuration settings for an event log.</span>
      </span>
      <span data-ttu-id="26829-102">Wiele ustawień konfiguracji zostały zdefiniowane przez dostawcę zdarzeń, który utworzył dziennik.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26829-102">Many of the configurations settings were defined by the event provider that created the log.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26829-103">Jeśli właściwość zostanie zmieniona dla tego obiektu, wywołanie <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> metodę, aby zapisać zmiany.</span><span class="sxs-lookup"><span data-stu-id="26829-103">If a property is changed for this object, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26829-104">Na przykład kodu za pomocą tej klasy, zobacz [porady: Konfigurowanie i odczytu dziennika zdarzeń właściwości](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span><span class="sxs-lookup"><span data-stu-id="26829-104">For example code using this class, see [How to: Configure and Read Event Log Properties](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="26829-105">Inicjuje nowy <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-105">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="26829-106">Nazwa lokalnym dzienniku zdarzeń, dla którego można pobrać informacji i ustawień konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-106">The name of the local event log for which to get information and configuration settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26829-107">Inicjuje nowy <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> obiektu określając lokalnym dzienniku zdarzeń, dla którego można pobrać informacji i ustawień konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-107">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the local event log for which to get information and configuration settings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName, System.Diagnostics.Eventing.Reader.EventLogSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, class System.Diagnostics.Eventing.Reader.EventLogSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, session As EventLogSession)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName, System::Diagnostics::Eventing::Reader::EventLogSession ^ session);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="session" Type="System.Diagnostics.Eventing.Reader.EventLogSession" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="26829-108">Nazwa dziennika zdarzeń, dla którego można pobrać informacji i ustawień konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-108">The name of the event log for which to get information and configuration settings.</span>
          </span>
        </param>
        <param name="session">
          <span data-ttu-id="26829-109">Używany do określenia usługa Dziennik zdarzeń, którego należy określony dziennik sesji dziennika zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-109">The event log session used to determine the event log service that the specified log belongs to.</span>
          </span>
          <span data-ttu-id="26829-110">Sesja albo jest połączona z usługą dziennika zdarzeń na komputerze lokalnym lub zdalnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-110">The session is either connected to the event log service on the local computer or a remote computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26829-111">Inicjuje nowy <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> obiektu, określając nazwę dziennika, dla którego można pobrać informacji i ustawień konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-111">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the name of the log for which to get information and configuration settings.</span>
          </span>
          <span data-ttu-id="26829-112">Dziennik może być na komputerze lokalnym lub zdalnym, oparte na sesji dziennik zdarzeń określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-112">The log can be on the local computer or a remote computer, based on the event log session specified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="26829-113">Zwalnia zasoby używane przez ten obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-113">Releases the resources used by this object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26829-114">Zwalnia wszystkie zasoby używane przez ten obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-114">Releases all the resources used by this object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="26829-115">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-115">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26829-116">Zwalnia zasoby niezarządzane używane przez ten obiekt i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-116">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClassicLog">
      <MemberSignature Language="C#" Value="public bool IsClassicLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClassicLog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClassicLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClassicLog { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-117">Pobiera flagę wskazującą, czy dziennik zdarzeń jest klasyczny dziennik zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-117">Gets the flag that indicates if the event log is a classic event log.</span>
          </span>
          <span data-ttu-id="26829-118">Klasyczny dziennik zdarzeń jest jedną z jego zdarzeń zdefiniowanych w pliku .mc zamiast manifestu (plik .xml) używany przez dostawcę zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-118">A classic event log is one that has its events defined in a .mc file instead of a manifest (.xml file) used by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-119">Zwraca <see langword="true" /> czy dziennik zdarzeń dziennika klasycznym, a zwraca <see langword="false" /> Jeśli dziennik zdarzeń nie jest klasycznego dziennika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-119">Returns <see langword="true" /> if the event log is a classic log, and returns <see langword="false" /> if the event log is not a classic log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-120">Pobiera lub ustawia wartość logiczną określającą, czy dziennik zdarzeń jest włączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-120">Gets or sets a Boolean value that determines whether the event log is enabled or disabled.</span>
          </span>
          <span data-ttu-id="26829-121">Dziennik włączone jest rejestrowane zdarzenia i wyłączonych dziennika jest jeden, w którym nie mogą być rejestrowane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-121">An enabled log is one in which events can be logged, and a disabled log is one in which events cannot be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-122">Zwraca <see langword="true" /> Jeśli dziennik jest włączony i zwraca <see langword="false" /> Jeśli dziennik jest wyłączony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-122">Returns <see langword="true" /> if the log is enabled, and returns <see langword="false" /> if the log is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26829-123">Jeśli wartość tej właściwości zostanie zmieniona, wywołanie <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> metodę, aby zapisać zmiany.</span><span class="sxs-lookup"><span data-stu-id="26829-123">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFilePath">
      <MemberSignature Language="C#" Value="public string LogFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-124">Pobiera lub ustawia ścieżkę katalogu do lokalizacji pliku przechowywania zdarzenia w dzienniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-124">Gets or sets the file directory path to the location of the file where the events are stored for the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-125">Zwraca ciąg, który zawiera ścieżkę do pliku dziennika zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-125">Returns a string that contains the path to the event log file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26829-126">Jeśli wartość tej właściwości zostanie zmieniona, wywołanie <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> metodę, aby zapisać zmiany.</span><span class="sxs-lookup"><span data-stu-id="26829-126">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIsolation">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogIsolation As EventLogIsolation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogIsolation LogIsolation { System::Diagnostics::Eventing::Reader::EventLogIsolation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogIsolation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-127">Pobiera <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> wartość, która określa, czy dziennik zdarzeń aplikacji, system lub niestandardowych dziennika zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-127">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value that specifies whether the event log is an application, system, or custom event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-128">Zwraca <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-128">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMode">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogMode LogMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogMode LogMode" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMode As EventLogMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogMode LogMode { System::Diagnostics::Eventing::Reader::EventLogMode get(); void set(System::Diagnostics::Eventing::Reader::EventLogMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-129">Pobiera lub ustawia <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> wartość, która określa sposób obsługi zdarzeń, gdy dziennik zdarzeń zostaje zapełniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-129">Gets or sets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value that determines how events are handled when the event log becomes full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-130">Zwraca <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-130">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26829-131">Jeśli wartość tej właściwości zostanie zmieniona, wywołanie <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> metodę, aby zapisać zmiany.</span><span class="sxs-lookup"><span data-stu-id="26829-131">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public string LogName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-132">Pobiera nazwę dziennika zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-132">Gets the name of the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-133">Zwraca ciąg zawierający nazwę dziennika zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-133">Returns a string that contains the name of the event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogType LogType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogType LogType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogType As EventLogType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogType LogType { System::Diagnostics::Eventing::Reader::EventLogType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-134">Pobiera <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> wartość, która określa typ dziennika zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-134">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value that determines the type of the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-135">Zwraca <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-135">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeInBytes">
      <MemberSignature Language="C#" Value="public long MaximumSizeInBytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumSizeInBytes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumSizeInBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumSizeInBytes { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-136">Pobiera lub ustawia maksymalny rozmiar w bajtach, które może być w pliku dziennika zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-136">Gets or sets the maximum size, in bytes, that the event log file is allowed to be.</span>
          </span>
          <span data-ttu-id="26829-137">Gdy plik osiągnie ten maksymalny rozmiar, jest uważany za zapełniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-137">When the file reaches this maximum size, it is considered full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-138">Zwraca wartość typu long reprezentujący maksymalny rozmiar w bajtach, czy w pliku dziennika zdarzeń może być.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-138">Returns a long value that represents the maximum size, in bytes, that the event log file is allowed to be.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26829-139">Jeśli wartość tej właściwości zostanie zmieniona, wywołanie <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> metodę, aby zapisać zmiany.</span><span class="sxs-lookup"><span data-stu-id="26829-139">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwningProviderName">
      <MemberSignature Language="C#" Value="public string OwningProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OwningProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OwningProviderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-140">Pobiera nazwę dostawcy zdarzeń, który utworzył ten dziennik zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-140">Gets the name of the event provider that created this event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-141">Zwraca ciąg zawierający nazwę dostawcy zdarzeń, który utworzył ten dziennik zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-141">Returns a string that contains the name of the event provider that created this event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderBufferSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderBufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderBufferSize As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderBufferSize { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-142">Pobiera rozmiar buforu, który używa dostawcy zdarzeń do publikowania zdarzeń w dzienniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-142">Gets the size of the buffer that the event provider uses for publishing events to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-143">Zwraca wartość całkowitą, która może mieć wartości null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-143">Returns an integer value that can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderControlGuid">
      <MemberSignature Language="C#" Value="public Nullable&lt;Guid&gt; ProviderControlGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; ProviderControlGuid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderControlGuid As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Guid&gt; ProviderControlGuid { Nullable&lt;Guid&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-144">Pobiera formant Unikatowy identyfikator globalny (GUID) dla dziennika zdarzeń, jeśli dziennik jest dziennik debugowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-144">Gets the control globally unique identifier (GUID) for the event log if the log is a debug log.</span>
          </span>
          <span data-ttu-id="26829-145">Jeśli ten dziennik nie jest dziennik debugowania, ta wartość będzie równa null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-145">If this log is not a debug log, this value will be null.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-146">Zwraca wartość identyfikatora GUID ani mieć wartości null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-146">Returns a GUID value or null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderKeywords">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; ProviderKeywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; ProviderKeywords" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderKeywords As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; ProviderKeywords { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-147">Pobiera lub ustawia maskę — słowo kluczowe używaną przez dostawcę zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-147">Gets or sets keyword mask used by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-148">Zwraca wartość typu long, który może mieć wartości null, jeśli dostawca zdarzeń nie zdefiniowano żadnych słów kluczowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-148">Returns a long value that can be null if the event provider did not define any keywords.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26829-149">Jeśli wartość tej właściwości zostanie zmieniona, wywołanie <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> metodę, aby zapisać zmiany.</span><span class="sxs-lookup"><span data-stu-id="26829-149">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderLatency">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLatency { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLatency" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderLatency As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLatency { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-150">Pobiera godzinę maksymalnego czasu oczekiwania używany przez dostawcę zdarzeń podczas publikowania zdarzenia w dzienniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-150">Gets the maximum latency time used by the event provider when publishing events to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-151">Zwraca wartość całkowitą, która może mieć wartości null, jeśli nie określono żadnej czasu opóźnienia przez dostawcę zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-151">Returns an integer value that can be null if no latency time was specified by the event provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderLevel">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderLevel As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLevel { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-152">Pobiera lub ustawia poziom maksymalny zdarzenia (określające ważność zdarzenia), który może być rejestrowane w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-152">Gets or sets the maximum event level (which defines the severity of the event) that is allowed to be logged in the event log.</span>
          </span>
          <span data-ttu-id="26829-153">Ta wartość jest określona przez dostawcę zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-153">This value is defined by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-154">Zwraca wartość całkowitą, który może mieć wartości null, jeśli poziom maksymalny zdarzenia nie zostały zdefiniowane w zdarzeniu dostawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-154">Returns an integer value that can be null if the maximum event level was not defined in the event provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26829-155">Jeśli wartość tej właściwości zostanie zmieniona, wywołanie <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> metodę, aby zapisać zmiany.</span><span class="sxs-lookup"><span data-stu-id="26829-155">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderMaximumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMaximumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-156">Pobiera maksymalną liczbę buforów używanej przez dostawcę zdarzeń do publikowania zdarzeń w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-156">Gets the maximum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-157">Zwraca wartość całkowitą, która jest maksymalna liczba buforów użytych przez dostawcę zdarzeń do publikowania zdarzeń w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-157">Returns an integer value that is the maximum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
          <span data-ttu-id="26829-158">Ta wartość może być zerowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-158">This value can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderMinimumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMinimumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-159">Pobiera minimalną liczbę buforów używanej przez dostawcę zdarzeń do publikowania zdarzeń w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-159">Gets the minimum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-160">Zwraca wartość całkowitą, która jest minimalna liczba buforów użytych przez dostawcę zdarzeń do publikowania zdarzeń w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-160">Returns an integer value that is the minimum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
          <span data-ttu-id="26829-161">Ta wartość może być zerowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-161">This value can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; ProviderNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; ProviderNames" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderNames As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ ProviderNames { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-162">Pobiera kolekcję wyliczalny nazwy wszystkich dostawców zdarzeń, które mogą publikować zdarzenia w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-162">Gets an enumerable collection of the names of all the event providers that can publish events to this event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-163">Zwraca kolekcję wyliczalny ciągów zawierających nazwy dostawcy zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-163">Returns an enumerable collection of strings that contain the event provider names.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public void SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26829-164">Powoduje zapisanie ustawień konfiguracji</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-164">Saves the configuration settings that</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityDescriptor">
      <MemberSignature Language="C#" Value="public string SecurityDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityDescriptor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityDescriptor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26829-165">Pobiera lub Ustawia deskryptor zabezpieczeń w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-165">Gets or sets the security descriptor of the event log.</span>
          </span>
          <span data-ttu-id="26829-166">Deskryptor zabezpieczeń definiuje użytkowników i grup użytkowników, które mogą odczytywać i zapisywać w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-166">The security descriptor defines the users and groups of users that can read and write to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26829-167">Zwraca ciąg, który zawiera deskryptora zabezpieczeń dla dziennika zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26829-167">Returns a string that contains the security descriptor for the event log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26829-168">Jeśli wartość tej właściwości zostanie zmieniona, wywołanie <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> metodę, aby zapisać zmiany.</span><span class="sxs-lookup"><span data-stu-id="26829-168">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>