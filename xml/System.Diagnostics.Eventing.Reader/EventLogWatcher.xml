<Type Name="EventLogWatcher" FullName="System.Diagnostics.Eventing.Reader.EventLogWatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14f56fb71839b16a8d6add6ded856eb87538859d" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56774435" /></Metadata><TypeSignature Language="C#" Value="public class EventLogWatcher : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogWatcher extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogWatcher&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogWatcher : IDisposable" />
  <TypeSignature Language="F#" Value="type EventLogWatcher = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e6c47-101">Umożliwia subskrybowanie zdarzeń przychodzących.</span><span class="sxs-lookup"><span data-stu-id="e6c47-101">Allows you to subscribe to incoming events.</span></span> <span data-ttu-id="e6c47-102">Każdorazowo żądanego zdarzenia są publikowane w dzienniku zdarzeń, <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> zdarzenie jest zgłaszane, a metoda, która obsługuje zdarzenie to zostanie wykonana.</span><span class="sxs-lookup"><span data-stu-id="e6c47-102">Each time a desired event is published to an event log, the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised, and the method that handles this event will be executed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6c47-103">Wystąpienia tej klasy są tworzone na podstawie <xref:System.Diagnostics.Eventing.Reader.EventLogQuery> obiektów, które określają kwerendy dla subskrypcji zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6c47-103">The instances of this class are created from <xref:System.Diagnostics.Eventing.Reader.EventLogQuery> objects, which specify a query for the event subscription.</span></span> <span data-ttu-id="e6c47-104">Gdy zdarzenie jest rejestrowane za zgodnego z kryteriami, wyrażone w zapytaniu, a następnie <xref:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="e6c47-104">When an event is logged that matches the criteria expressed in the query, then the <xref:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6c47-105">Na przykład kodu za pomocą tej klasy, zobacz [jak: Subskrybowanie do zdarzeń w dzienniku zdarzeń](https://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span><span class="sxs-lookup"><span data-stu-id="e6c47-105">For example code using this class, see [How to: Subscribe to Events in an Event Log](https://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-106">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-106">Technology Summary for Reading and Managing Event Logs</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-107">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-107">Event Log Scenarios</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6c47-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e6c47-108">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-109">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-109">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-110">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-110">Event Log Scenarios</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogWatcher (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventQuery As EventLogQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogWatcher(System::Diagnostics::Eventing::Reader::EventLogQuery ^ eventQuery);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogWatcher : System.Diagnostics.Eventing.Reader.EventLogQuery -&gt; System.Diagnostics.Eventing.Reader.EventLogWatcher" Usage="new System.Diagnostics.Eventing.Reader.EventLogWatcher eventQuery" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" />
      </Parameters>
      <Docs>
        <param name="eventQuery"><span data-ttu-id="e6c47-111">Określa kwerendy dla subskrypcji zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6c47-111">Specifies a query for the event subscription.</span></span> <span data-ttu-id="e6c47-112">Gdy zdarzenie jest rejestrowane za zgodnego z kryteriami, wyrażone w zapytaniu, a następnie <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="e6c47-112">When an event is logged that matches the criteria expressed in the query, then the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised.</span></span></param>
        <summary><span data-ttu-id="e6c47-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> klasy, określając zapytania dotyczącego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e6c47-113">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class by specifying an event query.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-114">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-114">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-115">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-115">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogWatcher (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogWatcher(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogWatcher : string -&gt; System.Diagnostics.Eventing.Reader.EventLogWatcher" Usage="new System.Diagnostics.Eventing.Reader.EventLogWatcher path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e6c47-116">Ścieżka lub nazwa monitorowanie dziennika zdarzeń dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e6c47-116">The path or name of the event log monitor for events.</span></span> <span data-ttu-id="e6c47-117">Jeśli dowolne zdarzenie jest rejestrowane w tym dzienniku zdarzeń, a następnie <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="e6c47-117">If any event is logged in this event log, then the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised.</span></span></param>
        <summary><span data-ttu-id="e6c47-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> klasy, określając nazwę lub ścieżkę do dziennika zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6c47-118">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class by specifying the name or path to an event log.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-119">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-119">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-120">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-120">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogWatcher (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, class System.Diagnostics.Eventing.Reader.EventBookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventQuery As EventLogQuery, bookmark As EventBookmark)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogWatcher(System::Diagnostics::Eventing::Reader::EventLogQuery ^ eventQuery, System::Diagnostics::Eventing::Reader::EventBookmark ^ bookmark);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogWatcher : System.Diagnostics.Eventing.Reader.EventLogQuery * System.Diagnostics.Eventing.Reader.EventBookmark -&gt; System.Diagnostics.Eventing.Reader.EventLogWatcher" Usage="new System.Diagnostics.Eventing.Reader.EventLogWatcher (eventQuery, bookmark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" />
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" />
      </Parameters>
      <Docs>
        <param name="eventQuery"><span data-ttu-id="e6c47-121">Określa kwerendy dla subskrypcji zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6c47-121">Specifies a query for the event subscription.</span></span> <span data-ttu-id="e6c47-122">Gdy zdarzenie jest rejestrowane za zgodnego z kryteriami, wyrażone w zapytaniu, a następnie <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="e6c47-122">When an event is logged that matches the criteria expressed in the query, then the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised.</span></span></param>
        <param name="bookmark"><span data-ttu-id="e6c47-123">Zakładka (symbol zastępczy), używane jako pozycja początkowa w dzienniku zdarzeń lub strumienia zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6c47-123">The bookmark (placeholder) used as a starting position in the event log or stream of events.</span></span> <span data-ttu-id="e6c47-124">Tylko zdarzenia, które zostały zarejestrowane po zdarzeń zakładki, zostanie zwrócony przez zapytanie.</span><span class="sxs-lookup"><span data-stu-id="e6c47-124">Only events that have been logged after the bookmark event will be returned by the query.</span></span></param>
        <summary><span data-ttu-id="e6c47-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> klasy, określając zapytania dotyczącego zdarzenia i zakładki, która jest używana jako pozycja początkowa dla zapytania.</span><span class="sxs-lookup"><span data-stu-id="e6c47-125">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class by specifying an event query and a bookmark that is used as starting position for the query.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-126">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-126">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-127">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-127">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogWatcher (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark, bool readExistingEvents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, class System.Diagnostics.Eventing.Reader.EventBookmark bookmark, bool readExistingEvents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventQuery As EventLogQuery, bookmark As EventBookmark, readExistingEvents As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogWatcher(System::Diagnostics::Eventing::Reader::EventLogQuery ^ eventQuery, System::Diagnostics::Eventing::Reader::EventBookmark ^ bookmark, bool readExistingEvents);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogWatcher : System.Diagnostics.Eventing.Reader.EventLogQuery * System.Diagnostics.Eventing.Reader.EventBookmark * bool -&gt; System.Diagnostics.Eventing.Reader.EventLogWatcher" Usage="new System.Diagnostics.Eventing.Reader.EventLogWatcher (eventQuery, bookmark, readExistingEvents)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" />
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" />
        <Parameter Name="readExistingEvents" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="eventQuery"><span data-ttu-id="e6c47-128">Określa kwerendy dla subskrypcji zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6c47-128">Specifies a query for the event subscription.</span></span> <span data-ttu-id="e6c47-129">Gdy zdarzenie jest rejestrowane za zgodnego z kryteriami, wyrażone w zapytaniu, a następnie <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="e6c47-129">When an event is logged that matches the criteria expressed in the query, then the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised.</span></span></param>
        <param name="bookmark"><span data-ttu-id="e6c47-130">Zakładka (symbol zastępczy), używane jako pozycja początkowa w dzienniku zdarzeń lub strumienia zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6c47-130">The bookmark (placeholder) used as a starting position in the event log or stream of events.</span></span> <span data-ttu-id="e6c47-131">Tylko zdarzenia, które zostały zarejestrowane po zdarzeń zakładki, zostanie zwrócony przez zapytanie.</span><span class="sxs-lookup"><span data-stu-id="e6c47-131">Only events that have been logged after the bookmark event will be returned by the query.</span></span></param>
        <param name="readExistingEvents"><span data-ttu-id="e6c47-132">Wartość logiczna określająca, czy mogła odczytywać zdarzenia, które już istnieją w dzienniku zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6c47-132">A Boolean value that determines whether to read the events that already exist in the event log.</span></span> <span data-ttu-id="e6c47-133">Jeśli ta wartość jest <see langword="true" />, a następnie istniejące zdarzenia są odczytywane i jeśli ta wartość jest <see langword="false" />, a następnie istniejących zdarzeń nie są dostępne.</span><span class="sxs-lookup"><span data-stu-id="e6c47-133">If this value is <see langword="true" />, then the existing events are read and if this value is <see langword="false" />, then the existing events are not read.</span></span></param>
        <summary><span data-ttu-id="e6c47-134">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> klasy, określając zapytania dotyczącego zdarzenia, zakładki, która jest używana jako pozycja początkowa dla zapytania i wartość logiczną, która określa, czy można odczytać zdarzenia z już istniejącymi w dzienniku zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6c47-134">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class by specifying an event query, a bookmark that is used as starting position for the query, and a Boolean value that determines whether to read the events that already exist in the event log.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-135">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-135">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-136">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-136">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6c47-137">Zwalnia zasoby używane przez ten obiekt.</span><span class="sxs-lookup"><span data-stu-id="e6c47-137">Releases the resources used by this object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventLogWatcher.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6c47-138">Zwalnia wszystkie zasoby, które są używane przez ten obiekt.</span><span class="sxs-lookup"><span data-stu-id="e6c47-138">Releases all the resources used by this object.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-139">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-139">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-140">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-140">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventLogWatcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="e6c47-141"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="e6c47-141"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="e6c47-142">Zwalnia zasoby niezarządzane używane przez ten obiekt i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="e6c47-142">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-143">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-143">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-144">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-144">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6c47-145">Pobiera lub ustawia wartość wskazującą, czy ten obiekt rozpoczyna się w dostarczanie zdarzeń do delegata zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e6c47-145">Gets or sets a value that indicates whether this object starts delivering events to the event delegate.</span></span></summary>
        <value><span data-ttu-id="e6c47-146"><see langword="true" /> gdy ten obiekt może dostarczać zdarzenia delegata zdarzenia; <see langword="false" /> gdy ten obiekt został zatrzymany dostarczania.</span><span class="sxs-lookup"><span data-stu-id="e6c47-146"><see langword="true" /> when this object can deliver events to the event delegate; <see langword="false" /> when this object has stopped delivery.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-147">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-147">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-148">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-148">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EventRecordWritten">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt; EventRecordWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt; EventRecordWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />
      <MemberSignature Language="VB.NET" Value="Public Event EventRecordWritten As EventHandler(Of EventRecordWrittenEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Eventing::Reader::EventRecordWrittenEventArgs ^&gt; ^ EventRecordWritten;" />
      <MemberSignature Language="F#" Value="member this.EventRecordWritten : EventHandler&lt;System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt; " Usage="member this.EventRecordWritten : System.EventHandler&lt;System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6c47-149">Umożliwia ustawienie delegata (metoda obsługi zdarzeń), która jest wywoływana za każdym razem, gdy zostaje opublikowane zdarzenie spełniający kryteria określone w zdarzeniu zapytania dla tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="e6c47-149">Allows setting a delegate (event handler method) that gets called every time an event is published that matches the criteria specified in the event query for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e6c47-150">Na przykład kodu za pomocą tej klasy, zobacz [jak: Subskrybowanie do zdarzeń w dzienniku zdarzeń](https://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span><span class="sxs-lookup"><span data-stu-id="e6c47-150">For example code using this class, see [How to: Subscribe to Events in an Event Log](https://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="e6c47-151">Podsumowanie informacji o technologii do odczytu i zarządzanie dziennikami zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-151">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="e6c47-152">Scenariusze dziennika zdarzeń</span><span class="sxs-lookup"><span data-stu-id="e6c47-152">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>