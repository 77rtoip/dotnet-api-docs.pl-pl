<Type Name="InstancePersistenceContext" FullName="System.Runtime.DurableInstancing.InstancePersistenceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da9726ebb98607c42e4b0426b7992de2ce345954" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InstancePersistenceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InstancePersistenceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InstancePersistenceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="380fb-101">Reprezentuje informacje o stanie wykonywania, podczas gdy polecenia trwałości jest wykonywana.</span>
      <span class="sxs-lookup">
        <span data-stu-id="380fb-101">Represents execution state information while a persistence command is being executed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-102">Wystąpienie tej klasy jest przekazywany do metody metody TryCommand implementacji dostawcy trwałości.</span><span class="sxs-lookup"><span data-stu-id="380fb-102">An instance of this class is passed to the TryCommand method of persistence provider implementations.</span></span> <span data-ttu-id="380fb-103">Klasa jest używana przez dostawców trwałości sprawdzić widok wystąpienia w pamięci, a także wskazuje wyniki operacji w zewnętrznym sklepie, co może wpływać na widoku lub innych kontekstu w pamięci.</span><span class="sxs-lookup"><span data-stu-id="380fb-103">Persistence providers use this class to inspect the in-memory view of the instance as well as indicate the results of operations on the external store which may affect the view or other in-memory context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void AssociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociatedInstanceKey(Guid key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="380fb-104">Identyfikator klucza wystąpienia dla klucza, który został skojarzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-104">The instance key identifier  for the key that has been associated.</span>
          </span>
          <span data-ttu-id="380fb-105">Nie może mieć wartości Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-105">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-106">Wskazuje, że dostawca trwałości pomyślnie jest skojarzony klucz do bieżącego wystąpienia w magazynie wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-106">Indicates that the persistence provider has successfully associated a key to the current instance in the instance store.</span>
          </span>
          <span data-ttu-id="380fb-107">Identyfikator klucza jest określony jako parametr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-107">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-108">Klucz wystąpienia musi być nieskojarzone.</span><span class="sxs-lookup"><span data-stu-id="380fb-108">The instance key must be unassociated.</span></span> <span data-ttu-id="380fb-109">Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="380fb-109">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBindReclaimedLock">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBindReclaimedLock (instanceVersion As Long, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBindReclaimedLock(long instanceVersion, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="380fb-110">Wersja blokady przechowywać na wystąpienie, lub wartość zero, jeśli dostawca trwałości nie implementuje wersji blokady.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-110">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="380fb-111">Limit czasu operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-111">The timeout period for the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="380fb-112">Metoda wywoływana, gdy operacja została wykonana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-112">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="380fb-113">Informacje o stanie skojarzone z operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-113">The state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-114">Rozpocznij operację asynchroniczną można powiązać istniejącą blokadę wystąpienia bieżącego dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-114">Begin an asynchronous operation to bind an existing lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="380fb-115">Wersja istniejącą blokadę jest przekazywana jako parametr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-115">The version of the existing lock is passed as a parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380fb-116">Stan operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-116">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-117">Podczas próby uzyskania blokady, dostawca trwałości może zdecydować, czy bieżące wystąpienie jest już zablokowana w sklepie bieżącym.</span><span class="sxs-lookup"><span data-stu-id="380fb-117">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="380fb-118">Jeśli token blokady pasuje do bieżącego uchwyt blokady token, dostawca trwałości można spróbować odzyskać blokady przez kontrolę wersji i przekazaniem ich do BeginBindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="380fb-118">If the lock token matches the current handle’s lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BeginBindReclaimedLock.</span></span> <span data-ttu-id="380fb-119">Dostawca trwałości nie musi wprowadzać zmian do wystąpienia, dopóki blokada jest pomyślnie odzyskać.</span><span class="sxs-lookup"><span data-stu-id="380fb-119">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="380fb-120">Jeśli nie inne dojścia jest powiązana z blokady, następnie BeginBindReclaimedLock, operacja zakończy się powodzeniem i bieżące dojścia staje się powiązane z blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-120">If no other handle is bound to the lock, then the BeginBindReclaimedLock operation succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="380fb-121">W przeciwnym razie BeginBindReclaimedLock lub EndBindReclaimedLock generuje InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="380fb-121">Otherwise, BeginBindReclaimedLock or EndBindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="380fb-122">Jeśli polecenia są w toku na inne dojść, operacja nie może zakończyć się podczas oczekiwania na wyniki z tych poleceń, aby zdecydować, czy można odzyskać blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-122">If commands are in progress on other handles, the operation may not complete while waiting for the outcome of those commands to decide whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="380fb-123">Bieżący dojście wystąpienia musi być powiązana z wystąpienia i właściciel blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-123">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="380fb-124">Nie można wypełniać wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-124">The instance must not be completed.</span></span> <span data-ttu-id="380fb-125">Token blokady skojarzone z właścicielem blokady służy do identyfikowania właściciela blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-125">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="380fb-126">Po blokady jest powiązany z dojściem, pozostaje powiązane dojście przez czas ich istnienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-126">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="380fb-127">Token blokady ani wersja wystąpienia nie może być zmieniona.</span><span class="sxs-lookup"><span data-stu-id="380fb-127">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="380fb-128">Do wykonania polecenia trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-128">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="380fb-129">Wartość limitu czasu dla operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-129">The time-out value for the operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="380fb-130">Delegata, który otrzymuje powiadomienie o asynchroniczną odbierania, że operacja żądania zostało ukończone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-130">The delegate that receives the notification of the asynchronous receive that a request operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="380fb-131">Informacje o stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-131">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-132">Rozpoczyna asynchronicznie wykonywania polecenia trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-132">Begins executing a persistence command asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380fb-133">Stan operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-133">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-134">Dostawca trwałości ta metoda służy do wykonywania poleceń podrzędne jako część polecenia.</span><span class="sxs-lookup"><span data-stu-id="380fb-134">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="380fb-135">Podpolecenie zostanie wykonana przy użyciu BeginTryCommand, podobnie jak polecenia przekazywane do InstanceStore.BeginExecute.</span><span class="sxs-lookup"><span data-stu-id="380fb-135">The sub-command will be executed using BeginTryCommand, similar to commands passed to InstanceStore.BeginExecute.</span></span> <span data-ttu-id="380fb-136">Polecenia mogą być zagnieżdżane, ale polecenie nie musi wykonać więcej niż jeden podpolecenie naraz.</span><span class="sxs-lookup"><span data-stu-id="380fb-136">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindAcquiredLock">
      <MemberSignature Language="C#" Value="public void BindAcquiredLock (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindAcquiredLock(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindAcquiredLock (instanceVersion As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindAcquiredLock(long instanceVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="380fb-137">Wersja blokady nabyte w wystąpieniu czy zero, jeśli dostawca trwałości nie implementuje wersji blokady.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-137">Version of the lock acquired on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-138">Wiąże nowo pobranych blokady wystąpienia bieżącego dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-138">Binds a newly acquired lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="380fb-139">Wersja blokady nabytych przez niego jest przekazywana jako parametr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-139">The version of the acquired lock is passed as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-140">Jeśli dostawca trwałości implementuje obsługi wersji blokady, zawsze, gdy blokada jest nakładana na wystąpienie, wersja musi być zwiększana o w zewnętrznym sklepie.</span><span class="sxs-lookup"><span data-stu-id="380fb-140">If a persistence provider implements lock versioning, then each time a lock is acquired on the instance, the version must be incremented by one in the external store.</span></span> <span data-ttu-id="380fb-141">Wystąpienie jest zablokowane, po raz pierwszy powinna to być wersja 1.</span><span class="sxs-lookup"><span data-stu-id="380fb-141">The first time the instance is locked, the version should be 1.</span></span> <span data-ttu-id="380fb-142">Każde przejęcie blokady unieważnia poprzedniej blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-142">Each lock acquisition invalidates the previous lock.</span></span> <span data-ttu-id="380fb-143">Bieżący dojście wystąpienia musi być powiązana z wystąpienia i właściciel blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-143">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="380fb-144">Nie można wypełniać wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-144">The instance must not be completed.</span></span> <span data-ttu-id="380fb-145">Token blokady skojarzone z właścicielem blokady służy do identyfikowania właściciela blokady</span><span class="sxs-lookup"><span data-stu-id="380fb-145">The lock token associated with the lock owner is used to identify the owner of the lock</span></span>  
  
 <span data-ttu-id="380fb-146">Po blokady jest powiązany z dojściem, pozostaje powiązane dojście przez czas ich istnienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-146">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="380fb-147">Token blokady ani wersja wystąpienia nie może być zmieniona.</span><span class="sxs-lookup"><span data-stu-id="380fb-147">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEvent">
      <MemberSignature Language="C#" Value="public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindEvent (persistenceEvent As InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="380fb-148">
            <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> Obiekt zawierający informacje o zdarzeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-148">An <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> object containing information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-149">Wiąże <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> do dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-149">Binds an <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> to an instance handle.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstance">
      <MemberSignature Language="C#" Value="public void BindInstance (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstance(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstance (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstance(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="380fb-150">Identyfikator wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-150">An instance identifier.</span>
          </span>
          <span data-ttu-id="380fb-151">Nie może mieć wartości Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-151">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-152">Wiąże wystąpienie, którego identyfikator jest określony jako parametr do bieżącego dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-152">Binds an instance whose identifier is specified as a parameter to the current instance handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-153">Gdy wystąpienie jest powiązany z dojściem, pozostaje związane dojście przez czas ich istnienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-153">Once an instance is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="380fb-154">Żadne inne wystąpienie kiedykolwiek można powiązać dojścia.</span><span class="sxs-lookup"><span data-stu-id="380fb-154">No other instance can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstanceOwner">
      <MemberSignature Language="C#" Value="public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstanceOwner(valuetype System.Guid instanceOwnerId, valuetype System.Guid lockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstanceOwner (instanceOwnerId As Guid, lockToken As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstanceOwner(Guid instanceOwnerId, Guid lockToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceOwnerId" Type="System.Guid" />
        <Parameter Name="lockToken" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceOwnerId">
          <span data-ttu-id="380fb-155">Identyfikator właściciela wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-155">The identifier for the instance owner.</span>
          </span>
        </param>
        <param name="lockToken">
          <span data-ttu-id="380fb-156">Token blokady właściciela wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-156">The lock token of the instance owner.</span>
          </span>
          <span data-ttu-id="380fb-157">Dostawca trwałości może wybrać tę samą wartość dla identyfikatora właściciela wystąpienia i token blokady właściciela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-157">A persistence provider may choose to use the same value for the instance owner identifier and the owner’s lock token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-158">Wiąże właściciela wystąpienia bieżącego dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-158">Binds an instance owner to the current instance handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-159">Po właściciela wystąpienia jest powiązany z dojściem, pozostaje powiązane dojście przez czas ich istnienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-159">Once an instance owner is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="380fb-160">Nie właściciela wystąpienia kiedykolwiek może być powiązana z dojścia.</span><span class="sxs-lookup"><span data-stu-id="380fb-160">No other instance owner can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindReclaimedLock">
      <MemberSignature Language="C#" Value="public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindReclaimedLock (instanceVersion As Long, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindReclaimedLock(long instanceVersion, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="380fb-161">Wersja blokady przechowywać na wystąpienie, lub wartość zero, jeśli dostawca trwałości nie implementuje wersji blokady.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-161">Version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="380fb-162">Wartość limitu czasu dla operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-162">The time-out value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-163">Wiąże istniejącą blokadę wystąpienia bieżącego dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-163">Binds an existing lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="380fb-164">Wersja istniejącą blokadę jest przekazywana jako parametr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-164">The version of the existing lock is passed as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-165">Podczas próby uzyskania blokady, dostawca trwałości może zdecydować, czy bieżące wystąpienie jest już zablokowana w sklepie bieżącym.</span><span class="sxs-lookup"><span data-stu-id="380fb-165">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="380fb-166">Jeśli token blokady pasuje do bieżącego uchwyt blokady token, dostawca trwałości można spróbować odzyskać blokady przez kontrolę wersji i przekazaniem ich do BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="380fb-166">If the lock token matches the current handle’s lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BindReclaimedLock.</span></span> <span data-ttu-id="380fb-167">Dostawca trwałości nie musi wprowadzać zmian do wystąpienia, dopóki blokada jest pomyślnie odzyskać.</span><span class="sxs-lookup"><span data-stu-id="380fb-167">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="380fb-168">Jeśli nie inne dojścia jest powiązana z blokady, BindReclaimedLock zakończy się powodzeniem, i bieżące dojścia staje się powiązana blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-168">If no other handle is bound to the lock, then BindReclaimedLock succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="380fb-169">W przeciwnym razie BindReclaimedLock zgłasza InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="380fb-169">Otherwise, BindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="380fb-170">Jeśli polecenia są w toku na inne dojść, BindReclaimedLock, można zablokować oczekiwanie na wyniki tych poleceń, przed podjęciem decyzji, czy można odzyskać blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-170">If commands are in progress on other handles, BindReclaimedLock may block waiting for the outcome of those commands before deciding whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="380fb-171">Bieżący dojście wystąpienia musi być powiązana z wystąpienia i właściciel blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-171">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="380fb-172">Nie można wypełniać wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-172">The instance must not be completed.</span></span> <span data-ttu-id="380fb-173">Token blokady skojarzone z właścicielem blokady służy do identyfikowania właściciela blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-173">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="380fb-174">Po blokady jest powiązany z dojściem, pozostaje powiązane dojście przez czas ich istnienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-174">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="380fb-175">Token blokady ani wersja wystąpienia nie może być zmieniona.</span><span class="sxs-lookup"><span data-stu-id="380fb-175">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstance">
      <MemberSignature Language="C#" Value="public void CompletedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="380fb-176">Wskazuje, że dostawca trwałości pomyślnie oznaczył bieżącego wystąpienia jako zakończony w magazynie wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-176">Indicates that the persistence provider has successfully marked the current instance as complete in the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-177">Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="380fb-177">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="380fb-178">Wystąpienie musi zostać zainicjowany i nie już zostać ukończone.</span><span class="sxs-lookup"><span data-stu-id="380fb-178">The instance must be initialized and not be already completed.</span></span> <span data-ttu-id="380fb-179">(Wystąpienie jest zainicjowana Jeśli kiedykolwiek utrwaleniu zestaw danych do niego). Wszystkie klucze skojarzone z wystąpieniem muszą być wypełnione.</span><span class="sxs-lookup"><span data-stu-id="380fb-179">(An instance is initialized if a set of instance data has ever been persisted to it.) All of the keys associated to the instance must be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstanceKey">
      <MemberSignature Language="C#" Value="public void CompletedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstanceKey(Guid key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="380fb-180">Identyfikator klucza wystąpienia dla klucza, który został wykonany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-180">The instance key identifier for the key that has been completed.</span>
          </span>
          <span data-ttu-id="380fb-181">Nie może mieć wartości Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-181">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-182">Wskazuje, że dostawca trwałości pomyślnie oznaczył klucz jako zakończony w zewnętrznym sklepie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-182">Indicates that the persistence provider has successfully marked a key as complete in the external store.</span>
          </span>
          <span data-ttu-id="380fb-183">Identyfikator klucza jest określony jako parametr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-183">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-184">Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="380fb-184">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="380fb-185">Klucz wystąpienia muszą być skojarzone z bieżącym wystąpieniem i nie już zostać ukończone.</span><span class="sxs-lookup"><span data-stu-id="380fb-185">The instance key must be associated to the current instance and not be already completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindReclaimedLockException">
      <MemberSignature Language="C#" Value="public Exception CreateBindReclaimedLockException (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception CreateBindReclaimedLockException(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBindReclaimedLockException (instanceVersion As Long) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ CreateBindReclaimedLockException(long instanceVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="380fb-186">Wersja blokady przechowywać na wystąpienie, lub wartość zero, jeśli dostawca trwałości nie implementuje wersji blokady.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-186">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-187">Tworzy wystąpienie wyjątku, który może zostać wygenerowany z metody TryCommand, aby wyzwolić BindReclaimedLock zachowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-187">Creates an instance of an exception which can be thrown from TryCommand to trigger BindReclaimedLock behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="380fb-188">Wystąpił wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-188">An exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-189">Przykładowy kod:</span><span class="sxs-lookup"><span data-stu-id="380fb-189">Sample code:</span></span>  
  
```  
  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    throw context.CreateBindReclaimedLockException(5);  
}  
is equivalent to  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    context.BindReclaimedLock(5, timeout);  
    throw new OperationCanceledException();  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBindReclaimedLock">
      <MemberSignature Language="C#" Value="public void EndBindReclaimedLock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBindReclaimedLock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBindReclaimedLock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBindReclaimedLock(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="380fb-190">Wynik operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-190">The result of the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-191">Kończy operację asynchroniczną uruchomione przez <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-191">Ends the asynchronous operation started by the <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public void EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndExecute (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndExecute(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="380fb-192">Stan operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-192">The status of an asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-193">Kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-193">Ends the asynchronous operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (command As InstancePersistenceCommand, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="380fb-194">Do wykonania polecenia trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-194">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="380fb-195">Wartość limitu czasu dla operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-195">The time-out value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-196">Wykonuje polecenia trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-196">Executes a persistence command.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-197">Dostawca trwałości ta metoda służy do wykonywania poleceń podrzędne jako część polecenia.</span><span class="sxs-lookup"><span data-stu-id="380fb-197">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="380fb-198">Podpolecenie zostanie wykonana przy użyciu metody TryCommand, podobnie jak polecenia przekazywane do wywoływania metody InstanceStore.Execute.</span><span class="sxs-lookup"><span data-stu-id="380fb-198">The sub-command will be executed using TryCommand, similar to commands passed to InstanceStore.Execute.</span></span> <span data-ttu-id="380fb-199">Polecenia mogą być zagnieżdżane, ale polecenie nie musi wykonać więcej niż jeden podpolecenie naraz.</span><span class="sxs-lookup"><span data-stu-id="380fb-199">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceHandle InstanceHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceHandle As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceHandle ^ InstanceHandle { System::Runtime::DurableInstancing::InstanceHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="380fb-200">Pobiera bieżący dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-200">Gets the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="380fb-201">Bieżący dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-201">The current instance handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceVersion">
      <MemberSignature Language="C#" Value="public long InstanceVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceVersion { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="380fb-202">Pobiera wersję blokadzie w bieżącym wystąpieniu przez dojście do bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-202">Gets the version of the lock held on the current instance by the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="380fb-203">Wersja blokady wystąpienia powiązany z bieżącym dojście wystąpienia lub wartość -1 Jeśli dojście nie jest powiązany z blokadą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-203">The version of the instance lock bound to the current instance handle, or -1 if the handle isn’t bound to a lock.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-204">Dostawca trwałości należy sprawdzić tę wartość z wersją blokady lock przechowywane w wystąpieniu w magazynie wystąpień, gdy wykonywanie operacji wymagającej blokady (na przykład trwałych danych wystąpienia) przy użyciu dojścia powiązany blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-204">The persistence provider should check this value against the lock version of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="380fb-205">Jeśli nie jest zgodna z wersją blokady, polecenie powinna zakończyć się niepowodzeniem z InstanceLockLostException.</span><span class="sxs-lookup"><span data-stu-id="380fb-205">If the lock version doesn’t match, the command should fail with InstanceLockLostException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceView">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceView InstanceView" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceView As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceView ^ InstanceView { System::Runtime::DurableInstancing::InstanceView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="380fb-206">Pobiera obiekt widoku wystąpienia, który reprezentuje stan w pamięci bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-206">Gets the instance view object that represents the in-memory state of the current instance.</span>
          </span>
          <span data-ttu-id="380fb-207">Ten widok odzwierciedla aktualizacji, jak zostały wprowadzone za pomocą polecenia w toku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-207">This view reflects updates as they are made by the command in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="380fb-208">Widok wystąpienia obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-208">The instance view object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedInstance">
      <MemberSignature Language="C#" Value="public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadedInstance(valuetype System.Runtime.DurableInstancing.InstanceState state, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadedInstance (state As InstanceState, instanceData As IDictionary(Of XName, InstanceValue), instanceMetadata As IDictionary(Of XName, InstanceValue), associatedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)), completedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadedInstance(System::Runtime::DurableInstancing::InstanceState state, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceData, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ associatedInstanceKeyMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ completedInstanceKeyMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Runtime.DurableInstancing.InstanceState" />
        <Parameter Name="instanceData" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="instanceMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="associatedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
        <Parameter Name="completedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="380fb-209">Informacje o stanie wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-209">The instance state information.</span>
          </span>
        </param>
        <param name="instanceData">
          <span data-ttu-id="380fb-210">Dane wystąpienia jako słownik <see cref="T:System.Xml.Linq.XName" /> i <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-210">The instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="instanceMetadata">
          <span data-ttu-id="380fb-211">Metadane wystąpienia jako kolekcja <see cref="T:System.Xml.Linq.XName" /> i <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-211">Instance metadata as a collection of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="associatedInstanceKeyMetadata">
          <span data-ttu-id="380fb-212">Skojarzone metadane klucza wystąpienia jako słownik identyfikatora wystąpienia i wystąpienia klucza metadanych, który jest słownikiem <see cref="T:System.Xml.Linq.XName" /> i <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-212">Associated instance key metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="completedInstanceKeyMetadata">
          <span data-ttu-id="380fb-213">Ukończono metadanych wystąpienia jako słownik identyfikatora wystąpienia i wystąpienia klucza metadanych, który jest słownikiem <see cref="T:System.Xml.Linq.XName" /> i <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-213">Completed instance metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-214">Wskazuje, że dostawca trwałości pomyślnie pobrał z magazynu wystąpień bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-214">Indicates that the persistence provider has successfully retrieved the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-215">Bieżący dojście wystąpienia musi być powiązany z wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="380fb-215">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="380fb-216">Czy dojście wystąpienia jest powiązany z blokadą lub załadowanego wystąpienia jest oznaczona jako zakończona, załadowanych danych jest uznawane za zgodne ze sobą. w przeciwnym razie uważa się za wątpliwe.</span><span class="sxs-lookup"><span data-stu-id="380fb-216">If the instance handle is bound to a lock or the loaded instance is marked as complete, the loaded data is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockToken">
      <MemberSignature Language="C#" Value="public Guid LockToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid LockToken" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockToken As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid LockToken { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="380fb-217">Pobiera token właściciela wystąpienia, powiązany z bieżącym dojście wystąpienia blokady.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-217">Gets the lock token of the instance owner bound to the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="380fb-218">Token blokady powiązany z bieżącym dojście wystąpienia lub wartości GUID.Empty Jeśli dojście nie jest powiązany z właścicielem wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-218">The lock token bound to the current instance handle, or Guid.Empty if the handle isn’t bound to an instance owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-219">Dostawca trwałości należy sprawdzić tę wartość przed token blokady blokady przechowywane w wystąpieniu w magazynie wystąpień, gdy wykonywanie operacji wymagającej blokady (na przykład trwałych danych wystąpienia) przy użyciu dojścia powiązany blokady.</span><span class="sxs-lookup"><span data-stu-id="380fb-219">The persistence provider should check this value against the lock token of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="380fb-220">Jeśli token blokady nie odpowiada, polecenie powinna zakończyć się niepowodzeniem z InstanceLockLostException.</span><span class="sxs-lookup"><span data-stu-id="380fb-220">If the lock token doesn’t match, the command should fail with InstanceLockLostException.</span></span>  
  
 <span data-ttu-id="380fb-221">Dostawca trwałości należy używać tej wartości jako token blokady podczas pobierania nowych blokadę wystąpienia (na przykład przy użyciu dojścia nie jest już powiązany z blokadą trwałych danych wystąpienia).</span><span class="sxs-lookup"><span data-stu-id="380fb-221">The persistence provider should use this value as the lock token when acquiring a new lock on an instance (such as persisting instance data using a handle not already bound to a lock).</span></span> <span data-ttu-id="380fb-222">Jeśli wystąpienie jest już zablokowana w magazynie wystąpień i token blokady zgodny ten token blokady, dostawca trwałości mogą próbować odzyskać wystąpienia przy użyciu BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="380fb-222">If the instance is already locked in the instance store and the lock token matches this lock token, the persistence provider can attempt to reclaim the instance using BindReclaimedLock.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedInstance">
      <MemberSignature Language="C#" Value="public void PersistedInstance (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PersistedInstance(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PersistedInstance (data As IDictionary(Of XName, InstanceValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PersistedInstance(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="380fb-223">Dane wystąpienia jako słownik <see cref="T:System.Xml.Linq.XName" /> i <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-223">Instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-224">Wskazuje, że dostawca trwałości pomyślnie utrwalił zestaw danych wystąpienia w magazynie wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-224">Indicates that the persistence provider has successfully persisted a set of instance data to the instance store.</span>
          </span>
          <span data-ttu-id="380fb-225">Skutkuje to inicjowania wystąpienia, jeśli nie był już.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-225">This has the effect of initializing the instance if it wasn’t already.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-226">Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="380fb-226">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="380fb-227">Każdy zestaw danych wystąpienia całkowicie zastępuje poprzedniego zestawu.</span><span class="sxs-lookup"><span data-stu-id="380fb-227">Each set of instance data completely replaces the previous set.</span></span> <span data-ttu-id="380fb-228">Zestaw danych wystąpienia może mieć wartości null — jest to ten sam, jak pusty.</span><span class="sxs-lookup"><span data-stu-id="380fb-228">The set of instance data may be null – this is the same as empty.</span></span> <span data-ttu-id="380fb-229">Utrwalanie pusty zestaw danych wystąpienia usuwa istniejący zestaw danych wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-229">Persisting a null set of instance data deletes the existing set of instance data.</span></span> <span data-ttu-id="380fb-230">(Utrwalanie zestaw danych nie ma wpływu na wystąpienie metadanych.)</span><span class="sxs-lookup"><span data-stu-id="380fb-230">(Persisting a set of instance data has no effect on instance metadata.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueriedInstanceStore">
      <MemberSignature Language="C#" Value="public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueriedInstanceStore(class System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueriedInstanceStore (queryResult As InstanceStoreQueryResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueriedInstanceStore(System::Runtime::DurableInstancing::InstanceStoreQueryResult ^ queryResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryResult" Type="System.Runtime.DurableInstancing.InstanceStoreQueryResult" />
      </Parameters>
      <Docs>
        <param name="queryResult">
          <span data-ttu-id="380fb-231">Wyniki zapytania względem magazynie wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-231">The results of a query against an instance store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-232">Dodaje <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> przekazać jako parametru do listy <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> obiekty w <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-232">Adds the <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> passed as a parameter to a list of <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> objects in an <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceKeyMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceKeyMetadata(valuetype System.Guid key, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceKeyMetadata (key As Guid, metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceKeyMetadata(Guid key, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="380fb-233">Identyfikator klucza wystąpienia dla klucza odczytano którego metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-233">The instance key identifier for the key whose metadata was read.</span>
          </span>
          <span data-ttu-id="380fb-234">Nie może mieć wartości Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-234">Must not be Guid.Empty.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="380fb-235">Metadane jako słownik <see cref="T:System.Xml.Linq.XName" /> i <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-235">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="380fb-236">
            <see langword="True" /> Jeśli metadane reprezentuje wszystkie metadane skojarzone Key wystąpienia, w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-236">
              <see langword="True" /> if the metadata represents all of the metadata associated to the instance key, otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-237">Wskazuje, że dostawca trwałości został pomyślnie odczytać niektóre wystąpienia metadanych klucza dla klucza skojarzonego z bieżącego wystąpienia w sklepie wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-237">Indicates that the persistence provider has successfully read some instance key metadata for a key associated to the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-238">Bieżący dojście wystąpienia musi być powiązany z wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="380fb-238">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="380fb-239">Jeśli bieżące wystąpienie jest oznaczona jako zakończona dojście wystąpienia jest powiązany z blokadą, metadanych jest uznawane za zgodne ze sobą. w przeciwnym razie uważa się za wątpliwe.</span><span class="sxs-lookup"><span data-stu-id="380fb-239">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="380fb-240">Metadane jako słownik <see cref="T:System.Xml.Linq.XName" /> i <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-240">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="380fb-241">
            <see langword="True" /> Jeśli metadane reprezentuje wszystkie metadane skojarzone z wystąpieniem, w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-241">
              <see langword="True" /> if the metadata represents all of the metadata associated to the instance, otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-242">Wskazuje, że dostawca trwałości ma pomyślnie odczytać metadanych niektóre wystąpienia dla bieżącego wystąpienia w magazynie wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-242">Indicates that the persistence provider has successfully read some instance metadata for the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceOwnerMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceOwnerMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceOwnerMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceOwnerMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="380fb-243">Słownik <see cref="T:System.Xml.Linq.XName" /> i <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-243">The dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="380fb-244">Wartość określającą czy spójności należy ustawić <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> lub <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-244">The value to specify whether the consistency to be set to <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> or <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-245">Ustawia metadane właściciela wystąpienia przy użyciu danych przekazanych w parametrze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-245">Sets the instance owner metadata using the data passed in the parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-246">Bieżący dojście wystąpienia musi być powiązany z wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="380fb-246">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="380fb-247">Jeśli bieżące wystąpienie jest oznaczona jako zakończona dojście wystąpienia jest powiązany z blokadą, metadanych jest uznawane za zgodne ze sobą. w przeciwnym razie uważa się za wątpliwe.</span><span class="sxs-lookup"><span data-stu-id="380fb-247">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancellationHandler">
      <MemberSignature Language="C#" Value="public void SetCancellationHandler (Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCancellationHandler(class System.Action`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancellationHandler (cancellationHandler As Action(Of InstancePersistenceContext))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCancellationHandler(Action&lt;System::Runtime::DurableInstancing::InstancePersistenceContext ^&gt; ^ cancellationHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationHandler" Type="System.Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt;" />
      </Parameters>
      <Docs>
        <param name="cancellationHandler">
          <span data-ttu-id="380fb-248">Odwołanie do funkcji do wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-248">The reference to a function to be called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-249">Ustawia program obsługi anulowania można wywołać, gdy żądanie anulowania operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-249">Sets the cancellation handler to be called when the cancel of an operation is requested.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-250">Jeśli zostanie wywołany obsługi anulowania, dostawca trwałości powinien anulowanie wszystkich oczekujących operacji i zgłosić operationcanceledexception — z metody TryCommand, aby wskazać, że polecenia trwałości zostało przerwane przed ukończeniem.</span><span class="sxs-lookup"><span data-stu-id="380fb-250">If the cancellation handler is called, the persistence provider should cancel all pending operations and throw OperationCanceledException from TryCommand to indicate that the persistence command was interrupted before it could be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnassociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void UnassociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnassociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnassociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnassociatedInstanceKey(Guid key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="380fb-251">Identyfikator klucza wystąpienia dla klucza, który został nieskojarzone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-251">The instance key identifier for the key that has been unassociated.</span>
          </span>
          <span data-ttu-id="380fb-252">Nie może mieć wartości Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-252">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-253">Wskazuje, że dostawca trwałości został pomyślnie usunąć skojarzenia klucza z bieżącego wystąpienia w magazynie wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-253">Indicates that the persistence provider has successfully disassociated a key from the current instance in the instance store.</span>
          </span>
          <span data-ttu-id="380fb-254">Identyfikator klucza jest określony jako parametr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-254">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-255">Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="380fb-255">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="380fb-256">Klucz wystąpienia muszą być skojarzone z bieżącym wystąpieniem i muszą być oznaczone jako ukończone.</span><span class="sxs-lookup"><span data-stu-id="380fb-256">The instance key must be associated to the current instance and must be marked complete.</span></span> <span data-ttu-id="380fb-257">Bieżące wystąpienie nie może być oznaczona ukończone.</span><span class="sxs-lookup"><span data-stu-id="380fb-257">The current instance must not be marked complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserContext">
      <MemberSignature Language="C#" Value="public object UserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserContext { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="380fb-258">Pobiera informacje kontekstu użytkownika dołączony do bieżącego dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-258">Gets the user context information attached to the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="380fb-259">Informacje o kontekście użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-259">The user context information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-260">Obiekt jest zwracany z InstanceStore.OnNewInstanceHandle dla bieżącego dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-260">The object is the one that is returned from InstanceStore.OnNewInstanceHandle for the current instance handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceKeyMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceKeyMetadataValue(valuetype System.Guid key, class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceKeyMetadataValue (key As Guid, name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceKeyMetadataValue(Guid key, System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="380fb-261">Identyfikator klucza wystąpienia dla klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-261">The instance key identifier for the key.</span>
          </span>
          <span data-ttu-id="380fb-262">Nie może mieć wartości Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-262">Must not be Guid.Empty.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="380fb-263">Nazwa właściwości metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-263">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="380fb-264">Wartość właściwości metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-264">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-265">Wskazuje, czy dostawca trwałości został pomyślnie zapisany wartość metadanych dla klucza wystąpienia, która jest skojarzona z bieżącym wystąpieniem w magazynie wystąpień</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-265">Indicates that the persistence provider has successfully written a metadata value for an instance key that is associated with the current instance to the instance store</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-266">Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="380fb-266">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="380fb-267">Klucz wystąpienia muszą być skojarzone z bieżącym wystąpieniem i nie można ukończyć.</span><span class="sxs-lookup"><span data-stu-id="380fb-267">The instance key must be associated with the current instance and must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="380fb-268">Nazwa właściwości metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-268">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="380fb-269">Wartość właściwości metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-269">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-270">Wskazuje, czy dostawca trwałości został pomyślnie zapisane wartość metadanych dla bieżącego wystąpienia magazynu zewnętrznego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-270">Indicates that the persistence provider has successfully written a metadata value for the current instance to the external instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-271">Bieżący dojście wystąpienia musi być powiązany z wystąpieniem a także jest zablokowany w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="380fb-271">The current instance handle must be bound to an instance as well as has a lock on that instance.</span></span> <span data-ttu-id="380fb-272">Nie można wypełniać wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-272">The instance must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceOwnerMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceOwnerMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceOwnerMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceOwnerMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="380fb-273">Nazwa właściwości metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-273">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="380fb-274">Wartość właściwości metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-274">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="380fb-275">Wskazuje, czy dostawca trwałości został pomyślnie zapisany wartości metadanych dla bieżącego wystąpienia w magazynie wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="380fb-275">Indicates that the persistence provider has successfully written a metadata value for the current instance owner to the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="380fb-276">Bieżący dojście wystąpienia musi być powiązany z właścicielem wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="380fb-276">The current instance handle must be bound to an instance owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>