<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e1c307c5d88796df0bd407c00fa925981bc8079" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53292331" /></Metadata><TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <TypeSignature Language="F#" Value="type InstanceStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e1877-101">Reprezentuje magazyn wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-101">Represents an instance store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1877-102">Dostawcy stanów trwałych zapewnia dostęp do sklepu wystąpienie za pośrednictwem konkretną implementację <xref:System.Runtime.DurableInstancing.InstanceStore> klasy.</span><span class="sxs-lookup"><span data-stu-id="e1877-102">A persistence provider provides access to an instance store through a concrete implementation of the <xref:System.Runtime.DurableInstancing.InstanceStore> class.</span></span>  
  
 <span data-ttu-id="e1877-103">Dostawcy stanów trwałych mogą wezwać InstanceHandle.Free uchwyty przekazany do TryCommand, nawet w przypadku, po zakończeniu wykonywania polecenia podczas wykonywania.</span><span class="sxs-lookup"><span data-stu-id="e1877-103">Persistence providers may call InstanceHandle.Free on handles passed to TryCommand, even after the command has finished executing.</span></span> <span data-ttu-id="e1877-104">Ale trwałości, którą dostawców nie musi posiadać silne odwołuje się do InstanceHandle lub InstanceOwner obiektów, ponieważ może to uniemożliwić objekt InstanceStore jako elementu bezużytecznego zbierane.</span><span class="sxs-lookup"><span data-stu-id="e1877-104">But persistence providers must not hold strong references to InstanceHandle or InstanceOwner objects, as this can prevent InstanceStore from being garbage collected.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e1877-105">Nie można zmienić definicji przepływu pracy dla utrwalonych przepływów pracy.</span><span class="sxs-lookup"><span data-stu-id="e1877-105">Workflow definitions for persisted workflows cannot be changed.</span></span> <span data-ttu-id="e1877-106">Zmiana definicji przepływu pracy po jego jest trwały, środowisko wykonawcze przepływów pracy ulegnie awarii po załadowaniu przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="e1877-106">If a workflow definition is changed after it is persisted, the workflow runtime will crash when the workflow is reloaded.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1877-107">Inicjuje wystąpienie <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e1877-107">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginExecute (handle, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="e1877-108">Dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-108">An instance handle.</span></span></param>
        <param name="command"><span data-ttu-id="e1877-109">Polecenie do wykonania.</span><span class="sxs-lookup"><span data-stu-id="e1877-109">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="e1877-110">Wartość limitu czasu wykonywania polecenia.</span><span class="sxs-lookup"><span data-stu-id="e1877-110">The timeout value for the command execution.</span></span></param>
        <param name="callback"><span data-ttu-id="e1877-111">Delegat asynchroniczne wywołanie zwrotne, który odbiera powiadomienie o zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e1877-111">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="e1877-112">Informacje o stanie.</span><span class="sxs-lookup"><span data-stu-id="e1877-112">The state information.</span></span></param>
        <summary><span data-ttu-id="e1877-113">Asynchronicznie wykonuje takich jak polecenia trwałości <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> i <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span><span class="sxs-lookup"><span data-stu-id="e1877-113">Asynchronously executes persistence commands such as <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span></span></summary>
        <returns><span data-ttu-id="e1877-114">Stan operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e1877-114">The state of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1877-115">Wywołuje hosta <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> metody asynchroniczne wykonywanie polecenia trwałości względem dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-115">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> method to execute a persistence command against an instance handle asynchronously.</span></span> <span data-ttu-id="e1877-116">Host uzyskuje dojście wystąpienia, wywołując <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e1877-116">The host obtains the instance handle by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="e1877-117">Dojście wystąpienia może być powiązany z jednostek reprezentujących kontekstu i podmiotu polecenia, takie jak wystąpienia, właściciel wystąpienie lub wystąpienia blokady.</span><span class="sxs-lookup"><span data-stu-id="e1877-117">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="e1877-118">Tylko jedno polecenie może być wystawiony na podstawie dojście wystąpienia w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="e1877-118">Only one command may be issued against an instance handle at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginTryCommand (context, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1877-119">Kontekst wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-119">The instance context.</span></span></param>
        <param name="command"><span data-ttu-id="e1877-120">Polecenie trwałości do wykonania.</span><span class="sxs-lookup"><span data-stu-id="e1877-120">The persistence command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="e1877-121">Wartość limitu czasu wykonywania polecenia.</span><span class="sxs-lookup"><span data-stu-id="e1877-121">The timeout value for the command execution.</span></span></param>
        <param name="callback"><span data-ttu-id="e1877-122">Delegat asynchroniczne wywołanie zwrotne, który odbiera powiadomienie o zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e1877-122">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="e1877-123">Informacje o stanie.</span><span class="sxs-lookup"><span data-stu-id="e1877-123">The state information.</span></span></param>
        <summary><span data-ttu-id="e1877-124">Dostawcy stanów trwałych implementuje ta metoda, która określa, czy można wykonywać polecenia określonego stanu trwałego.</span><span class="sxs-lookup"><span data-stu-id="e1877-124">A persistence provider implements this method, which determines whether a particular persistence command can be executed.</span></span> <span data-ttu-id="e1877-125">Jeśli to polecenie można wykonać, wykonuje polecenie asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="e1877-125">If the command can be executed, executes the command asynchronously.</span></span></summary>
        <returns><span data-ttu-id="e1877-126">Stan operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e1877-126">The state of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1877-127">Jeśli to polecenie można wykonać, dostawcy stanów trwałych wzywa odpowiednich metod InstancePersistenceContext zapewnienie wyniki polecenia.</span><span class="sxs-lookup"><span data-stu-id="e1877-127">If the command can be executed, the persistence provider calls relevant methods on the InstancePersistenceContext to provide the results of the command.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e1877-128">Mimo że ta metoda jest zadeklarowany jako `virtual` zamiast `abstract`, Brak implementacji.</span><span class="sxs-lookup"><span data-stu-id="e1877-128">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="e1877-129">Ta metoda musi zostać zastąpiona w celu zapewnienia funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1877-129">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginWaitForEvents (handle, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="e1877-130">Dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-130">An instance handle.</span></span></param>
        <param name="timeout"><span data-ttu-id="e1877-131">Okres, po której upłynie limit czasu operacji.</span><span class="sxs-lookup"><span data-stu-id="e1877-131">The period after which the operation times out.</span></span></param>
        <param name="callback"><span data-ttu-id="e1877-132">Metoda wywoływana po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e1877-132">The method to be called after the asynchronous operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e1877-133">Obiekt zawierający informacje o stanie związane z operacją asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="e1877-133">An object containing the state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="e1877-134">Rozpoczyna operację asynchroniczną do nasłuchiwania zdarzeń zgłoszone przez wystąpienia w sklepie dojście do konkretnego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-134">Begins an asynchronous operation to listen for any events raised by the instance store for a specific instance handle.</span></span></summary>
        <returns><span data-ttu-id="e1877-135">Zwraca <see cref="T:System.IAsyncResult" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="e1877-135">Returns an <see cref="T:System.IAsyncResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1877-136">Tworzy dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-136">Creates an instance handle.</span></span> <span data-ttu-id="e1877-137">Jeśli ustawiono DefaultInstanceOwner, wartość zostanie automatycznie powiązany jako nowy uchwyt wystąpienia właściciela.</span><span class="sxs-lookup"><span data-stu-id="e1877-137">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle's instance owner.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : unit -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1877-138">Tworzy dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-138">Creates an instance handle.</span></span></summary>
        <returns><span data-ttu-id="e1877-139">Dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-139">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="e1877-140">Identyfikator wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-140">An instance identifier.</span></span> <span data-ttu-id="e1877-141">Nie może być Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="e1877-141">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="e1877-142">Tworzy dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-142">Creates an instance handle.</span></span>  <span data-ttu-id="e1877-143">Jeśli ustawiono DefaultInstanceOwner, wartość zostanie automatycznie powiązany jako nowy uchwyt wystąpienia właściciela.</span><span class="sxs-lookup"><span data-stu-id="e1877-143">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="e1877-144">Identyfikator wystąpienia przekazany jako parametr zostanie automatycznie powiązany jako nowy uchwyt wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-144">The instance identifier passed as a parameter is automatically bound as the new handle's instance.</span></span></summary>
        <returns><span data-ttu-id="e1877-145">Dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-145">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="e1877-146">Właściciel wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-146">The owner of an instance.</span></span></param>
        <summary><span data-ttu-id="e1877-147">Tworzy dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-147">Creates an instance handle.</span></span> <span data-ttu-id="e1877-148">Jeśli właściciel wystąpienia przekazany jako parametr nie ma wartość null, wartość zostanie automatycznie powiązany jako nowy uchwyt wystąpienia właściciela.</span><span class="sxs-lookup"><span data-stu-id="e1877-148">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="e1877-149">(W przeciwnym razie nie ma właściciela wystąpienia jest powiązana, nawet wtedy, gdy ustawiono DefaultInstanceOwner.)</span><span class="sxs-lookup"><span data-stu-id="e1877-149">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.)</span></span></summary>
        <returns><span data-ttu-id="e1877-150">Dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-150">The instance handle.</span></span> <span data-ttu-id="e1877-151">Wartość zerowa wskazuje, że nowy uchwyt nie powinny automatycznie powiązany z właścicielem wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-151">A null value indicates that the new handle should not be automatically bound to an instance owner.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner * Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle (owner, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="e1877-152">Obiekt InstanceOwner, który reprezentuje właścicielem wystąpienia usługi.</span><span class="sxs-lookup"><span data-stu-id="e1877-152">An InstanceOwner object  that represents the owner of an instance.</span></span> <span data-ttu-id="e1877-153">Należy przekazać wartości null jako wartość tego parametru, aby wskazać, że nowy uchwyt nie powinny automatycznie powiązany z właścicielem wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-153">Pass null as the value for this parameter to indicate that the new handle should not be automatically bound to an instance owner.</span></span></param>
        <param name="instanceId"><span data-ttu-id="e1877-154">Identyfikator wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-154">An instance identifier.</span></span> <span data-ttu-id="e1877-155">Nie może być Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="e1877-155">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="e1877-156">Tworzy dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-156">Creates an instance handle.</span></span> <span data-ttu-id="e1877-157">Jeśli właściciel wystąpienia przekazany jako parametr nie ma wartość null, wartość zostanie automatycznie powiązany jako nowy uchwyt wystąpienia właściciela.</span><span class="sxs-lookup"><span data-stu-id="e1877-157">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="e1877-158">(W przeciwnym razie nie ma właściciela wystąpienia jest powiązana, nawet wtedy, gdy ustawiono DefaultInstanceOwner.) Identyfikator wystąpienia przekazany jako parametr zostanie automatycznie powiązany jako nowy uchwyt wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-158">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.) The instance identifier passed as a parameter is automatically bound as the new handle's instance.</span></span></summary>
        <returns><span data-ttu-id="e1877-159">Dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-159">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceOwner with get, set" Usage="System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1877-160">Pobiera lub ustawia domyślny właściciel wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-160">Gets or sets the default instance owner.</span></span></summary>
        <value><span data-ttu-id="e1877-161">Domyślnym właścicielem wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-161">The default instance owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1877-162">Niektóre hosty wywnioskować właściciela wystąpienia do użycia przez czytanie tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="e1877-162">Some hosts infer the instance owner to use by reading this property.</span></span> <span data-ttu-id="e1877-163">WorkflowApplication można użyć tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="e1877-163">WorkflowApplication can use this property.</span></span> <span data-ttu-id="e1877-164">WorkflowServiceHost nie używa tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="e1877-164">WorkflowServiceHost does not use this property.</span></span>  
  
 <span data-ttu-id="e1877-165">Podawany DefaultInstanceOwner musi być równa null, gdy nie jest już konieczne.</span><span class="sxs-lookup"><span data-stu-id="e1877-165">The DefaultInstanceOwner propery must be set to null when it is no longer necessary.</span></span> <span data-ttu-id="e1877-166">Objekt InstanceStore obiekty mogą nie być bezużyteczne, jeśli DefaultInstanceOwner nie ma wartości null.</span><span class="sxs-lookup"><span data-stu-id="e1877-166">InstanceStore objects might not be garbage collected if DefaultInstanceOwner is not null.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e1877-167">Mimo że ta metoda jest zadeklarowany jako `virtual` zamiast `abstract`, Brak implementacji.</span><span class="sxs-lookup"><span data-stu-id="e1877-167">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="e1877-168">Ta metoda musi zostać zastąpiona w celu zapewnienia funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1877-168">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e1877-169">Wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="e1877-169">The result of the operation.</span></span></param>
        <summary><span data-ttu-id="e1877-170">Kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="e1877-170">Ends the asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e1877-171">Obiekt InstanceView reprezentujący znanego stanu wystąpienia po pomyślnym wykonaniu tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="e1877-171">An InstanceView object  representing the known state of the instance after the successful completion of the command.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1877-172">Jeśli BeginExecute została wywołana w ramach transakcji, ten stan może zawierać niezatwierdzone dane.</span><span class="sxs-lookup"><span data-stu-id="e1877-172">If BeginExecute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="e1877-173">Gdy transakcja została zatwierdzona pomyślnie, dane w InstanceView obiektu jest uznawana za zatwierdzone.</span><span class="sxs-lookup"><span data-stu-id="e1877-173">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTryCommand : IAsyncResult -&gt; bool&#xA;override this.EndTryCommand : IAsyncResult -&gt; bool" Usage="instanceStore.EndTryCommand result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e1877-174">Wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="e1877-174">The result of the operation.</span></span></param>
        <summary><span data-ttu-id="e1877-175">Kończy operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="e1877-175">Ends an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e1877-176">Powinna zostać zwrócona wartość false, jeśli go nie obsługuje polecenia przekazywany do metody BeginTryCommand implementacji dostawcy stanów stałych.</span><span class="sxs-lookup"><span data-stu-id="e1877-176">A persistence provider implementation should return false if it doesn't support the command passed to the BeginTryCommand method.</span></span> <span data-ttu-id="e1877-177">W przeciwnym razie jest powinien zwrócić wartość true lub zgłosić wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e1877-177">Otherwise it should return true or throw an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="e1877-178">Mimo że ta metoda jest zadeklarowany jako `virtual` zamiast `abstract`, Brak implementacji.</span><span class="sxs-lookup"><span data-stu-id="e1877-178">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="e1877-179">Ta metoda musi zostać zastąpiona w celu zapewnienia funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1877-179">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWaitForEvents : IAsyncResult -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.EndWaitForEvents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e1877-180">Obiekt IAsyncResult został przekazany do klienta przez metody Begin.</span><span class="sxs-lookup"><span data-stu-id="e1877-180">An IAsyncResult object that was handed over to the client by the Begin method.</span></span></param>
        <summary><span data-ttu-id="e1877-181">Kończy operację asynchroniczną, inicjowane przez <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="e1877-181">Ends the asynchronous operation initiated by the <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="e1877-182">Zwraca listę <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="e1877-182">Returns a list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.Execute (handle, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="e1877-183">Dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-183">An instance handle.</span></span></param>
        <param name="command"><span data-ttu-id="e1877-184">Polecenie do wykonania.</span><span class="sxs-lookup"><span data-stu-id="e1877-184">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="e1877-185">Wartość limitu czasu dla operacji.</span><span class="sxs-lookup"><span data-stu-id="e1877-185">The timeout value for the operation.</span></span></param>
        <summary><span data-ttu-id="e1877-186">Polecenie trwałości jest wykonywana synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="e1877-186">Executes a persistence command synchronously.</span></span> <span data-ttu-id="e1877-187">Przykłady poleceń trwałości: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> i <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span><span class="sxs-lookup"><span data-stu-id="e1877-187">Examples of persistence commands are: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span></span></summary>
        <returns><span data-ttu-id="e1877-188">Obiekt InstanceView reprezentujący znanego stanu wystąpienia po pomyślnym wykonaniu tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="e1877-188">An InstanceView object representing the known state of the instance after the successful completion of the command.</span></span>  <span data-ttu-id="e1877-189">Jeśli wykonanie została wywołana w ramach transakcji, ten stan może zawierać niezatwierdzone dane.</span><span class="sxs-lookup"><span data-stu-id="e1877-189">If Execute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="e1877-190">Gdy transakcja została zatwierdzona pomyślnie, dane w InstanceView obiektu jest uznawana za zatwierdzone</span><span class="sxs-lookup"><span data-stu-id="e1877-190">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1877-191">Wywołuje hosta <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> metodę, aby wykonać polecenie trwałości względem dojście wystąpienia, która hosta uzyskuje się za pomocą wywołania <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e1877-191">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> method to execute a persistence command against an instance handle, which the host obtains by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="e1877-192">Dojście wystąpienia może być powiązany z jednostek reprezentujących kontekstu i podmiotu polecenia, takie jak wystąpienia, właściciel wystąpienie lub wystąpienia blokady.</span><span class="sxs-lookup"><span data-stu-id="e1877-192">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="e1877-193">Tylko jedno polecenie może być wystawiony na podstawie dojście wystąpienia w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="e1877-193">Only one command may be issued against an instance handle at a time.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e1877-194">Jeśli ta metoda jest wykonywane przy użyciu <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, utworzy on <xref:System.Runtime.DurableInstancing.InstanceOwner> i powiąż go z wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="e1877-194">If this method is executed with a <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, it will create an <xref:System.Runtime.DurableInstancing.InstanceOwner> and bind it to the instance.</span></span> <span data-ttu-id="e1877-195">Oznacza to, że żaden inny proces będą mogli korzystać z tego przepływu pracy; zakończenia procesu, przepływ pracy nie można odzyskać ani wykonywane.</span><span class="sxs-lookup"><span data-stu-id="e1877-195">This means that no other process will be able to access that workflow; if the process ends, the workflow cannot be recovered or executed.</span></span> <span data-ttu-id="e1877-196">Jeśli przepływ pracy zostanie wykonany ponownie <xref:System.Runtime.DurableInstancing.InstanceLockedException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="e1877-196">If such a workflow is executed again, a <xref:System.Runtime.DurableInstancing.InstanceLockedException> will be thrown.</span></span>  
>   
>  <span data-ttu-id="e1877-197">Jeśli <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> jest nie używane magazyn wystąpienia spowoduje utworzenie tymczasowego <xref:System.Runtime.DurableInstancing.InstanceOwner> , zostaną usunięte po zakończeniu procesu.</span><span class="sxs-lookup"><span data-stu-id="e1877-197">If <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> is not used, the instance store will create a temporary <xref:System.Runtime.DurableInstancing.InstanceOwner> that will be deleted at the end of the process.</span></span> <span data-ttu-id="e1877-198">Jednak jeśli proces zakończy się przed punktu końcowego trwałość przepływu pracy, to zostanie zgłoszony wyjątek, chyba że okres określony w **HostLockRenewalPeriod** parametru utracił ważność.</span><span class="sxs-lookup"><span data-stu-id="e1877-198">However, if the process ends before the workflow's final persistence point, this exception will be thrown, unless the period of time specified in the **HostLockRenewalPeriod** parameter has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.GetEvents : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent[]" Usage="instanceStore.GetEvents owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="e1877-199"><see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> Obiekt reprezentujący właścicielem wystąpienia usługi.</span><span class="sxs-lookup"><span data-stu-id="e1877-199">An <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object representing the owner of an instance.</span></span></param>
        <summary><span data-ttu-id="e1877-200">Pobiera wszystkie powiązane zdarzenia sygnałowego <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="e1877-200">Gets all the signaled events bound to an <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object.</span></span></summary>
        <returns><span data-ttu-id="e1877-201">Zwraca tablicę <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="e1877-201">Returns an array of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceOwners : unit -&gt; System.Runtime.DurableInstancing.InstanceOwner[]" Usage="instanceStore.GetInstanceOwners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1877-202">Pobiera obiekt każdego InstanceOwner, który jest powiązany z uchwyt prawidłowego wystąpienia lub nie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="e1877-202">Gets each InstanceOwner object that is bound to a valid instance handle or has not been garbage collected.</span></span></summary>
        <returns><span data-ttu-id="e1877-203">Właściciel wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-203">The owner of the instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1877-204">Zwraca tablicę obiektów InstanceOwner.</span><span class="sxs-lookup"><span data-stu-id="e1877-204">Returns an array of InstanceOwner objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberSignature Language="F#" Value="abstract member OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit&#xA;override this.OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit" Usage="instanceStore.OnFreeInstanceHandle (instanceHandle, userContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle"><span data-ttu-id="e1877-205">Dojście wystąpienia, która została zwolniona.</span><span class="sxs-lookup"><span data-stu-id="e1877-205">The instance handle that was freed.</span></span></param>
        <param name="userContext"><span data-ttu-id="e1877-206">Informacje kontekstu użytkownika dostawcy stanów trwałych, który został zwrócony z OnNewInstanceHandle lub wartość null, jeśli OnNewInstanceHandle nie zostanie zastąpione.</span><span class="sxs-lookup"><span data-stu-id="e1877-206">The persistence provider's user context information that was returned from OnNewInstanceHandle, or null if OnNewInstanceHandle is not overridden.</span></span></param>
        <summary><span data-ttu-id="e1877-207">Wywoływane, gdy dojście wystąpienia jest zwalniana.</span><span class="sxs-lookup"><span data-stu-id="e1877-207">Invoked when an instance handle is freed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberSignature Language="F#" Value="abstract member OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj&#xA;override this.OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj" Usage="instanceStore.OnNewInstanceHandle instanceHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle"><span data-ttu-id="e1877-208">Dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-208">An instance handle.</span></span></param>
        <summary><span data-ttu-id="e1877-209">Wywoływane, gdy zostanie utworzony nowy dojście wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-209">Invoked when a new instance handle is created.</span></span></summary>
        <returns><span data-ttu-id="e1877-210">Obiekt.</span><span class="sxs-lookup"><span data-stu-id="e1877-210">An object.</span></span>  <span data-ttu-id="e1877-211">Ten obiekt kontekstu użytkownika będą dostępne dla dostawcy stanów trwałych, gdy polecenia są wykonywane przy użyciu dojścia i uchwyt jest zwalniana.</span><span class="sxs-lookup"><span data-stu-id="e1877-211">This user context object will be available to the persistence provider when commands are executed using the handle, and when the handle is freed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ResetEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.ResetEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="e1877-212">Zdarzenie trwałości, które zostało wcześniej sygnalizowane i zostaną zresetowane.</span><span class="sxs-lookup"><span data-stu-id="e1877-212">The persistence event that was signaled earlier and to be reset.</span></span></param>
        <param name="owner"><span data-ttu-id="e1877-213">Właściciel wystąpienia skojarzone ze zdarzeniem trwałości.</span><span class="sxs-lookup"><span data-stu-id="e1877-213">The instance owner associated with the persistence event.</span></span></param>
        <summary><span data-ttu-id="e1877-214">Resetuje zdarzenia sygnałowego i usuwa zdarzenie z listy zdarzeń sygnałowego utrzymywane przez właściciela wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-214">Resets the signaled event and removes the event from the signaled events list maintained by the instance owner.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.SignalEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.SignalEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="e1877-215">Zdarzenie trwałości, który ma być zasygnalizowany.</span><span class="sxs-lookup"><span data-stu-id="e1877-215">The persistence event to be signaled.</span></span></param>
        <param name="owner"><span data-ttu-id="e1877-216">Właściciel wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-216">The instance owner.</span></span></param>
        <summary><span data-ttu-id="e1877-217">Magazyn wystąpień wywołuje tę metodę w celu zasygnalizowania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e1877-217">An instance store invokes this method to signal an event.</span></span> <span data-ttu-id="e1877-218">Hosta przepływu pracy, które subskrybuje dla tego zdarzenia trwałości odebraniu i podejmuje odpowiednie działania.</span><span class="sxs-lookup"><span data-stu-id="e1877-218">A workflow host that subscribes for this persistence event receives it and takes an appropriate action.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool&#xA;override this.TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool" Usage="instanceStore.TryCommand (context, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1877-219">Kontekst wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e1877-219">The instance context.</span></span></param>
        <param name="command"><span data-ttu-id="e1877-220">Polecenie do wykonania.</span><span class="sxs-lookup"><span data-stu-id="e1877-220">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="e1877-221">Wartość limitu czasu dla operacji.</span><span class="sxs-lookup"><span data-stu-id="e1877-221">Timeout value for the operation.</span></span></param>
        <summary><span data-ttu-id="e1877-222">Dostawcy stanów trwałych implementuje ta metoda, która określa, czy polecenie trwałości określonej mogą być wykonywane i jeśli może zostać wykonane polecenie wykonuje go asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="e1877-222">A persistence provider implements this method, which determines whether a particular persistence command can be executed and if the command can be executed executes it asynchronously.</span></span></summary>
        <returns><span data-ttu-id="e1877-223">Implementacja dostawcy stanów trwałych powinna zwrócić <see langword="false" /> Jeśli go nie obsługuje polecenia przekazany jako parametr; w przeciwnym razie powinien zostać zwrócony <see langword="true" /> lub zgłosić wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e1877-223">A persistence provider implementation should return <see langword="false" /> if it doesn't support the command passed as a parameter; otherwise it should return <see langword="true" /> or throw an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1877-224">Jeśli to polecenie można wykonać, dostawcy stanów trwałych wywołuje odpowiednich metod na <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> zapewnienie wyniki polecenia.</span><span class="sxs-lookup"><span data-stu-id="e1877-224">If the command can be executed, the persistence provider calls relevant methods on the <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> to provide the results of the command.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.WaitForEvents (handle, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="e1877-225">Dojście wystąpienia, który jest powiązany z zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e1877-225">The instance handle that is bound to the event.</span></span></param>
        <param name="timeout"><span data-ttu-id="e1877-226">Przedział czasu, po upływie limitu czasu operacji oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e1877-226">The time span after which the waiting operation times out.</span></span></param>
        <summary><span data-ttu-id="e1877-227">Hosta przepływu pracy jest zwykle wywołuje tę metodę w celu oczekiwania na zdarzenie ma być zasygnalizowany.</span><span class="sxs-lookup"><span data-stu-id="e1877-227">A workflow host typically invokes this method to wait for an event to be signaled.</span></span></summary>
        <returns><span data-ttu-id="e1877-228">Lista <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="e1877-228">A list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>