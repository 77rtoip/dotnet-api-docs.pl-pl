<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6596a79c48ca9827c47f213b39d9aec72e827a2f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30564832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6fc57-101">Reprezentuje magazyn wystąpienia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fc57-101">Represents an instance store.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc57-102">Dostawca trwałości zapewnia dostęp do sklepu wystąpienie za pośrednictwem konkretną implementację <xref:System.Runtime.DurableInstancing.InstanceStore> klasy.</span><span class="sxs-lookup"><span data-stu-id="6fc57-102">A persistence provider provides access to an instance store through a concrete implementation of the <xref:System.Runtime.DurableInstancing.InstanceStore> class.</span></span>  
  
 <span data-ttu-id="6fc57-103">Dostawców trwałości może wywołać InstanceHandle.Free na dojściach przekazany do metody TryCommand, nawet po zakończeniu wykonywania polecenia podczas wykonywania.</span><span class="sxs-lookup"><span data-stu-id="6fc57-103">Persistence providers may call InstanceHandle.Free on handles passed to TryCommand, even after the command has finished executing.</span></span> <span data-ttu-id="6fc57-104">Ale trwałości, który dostawców nie musi posiadać silne odwołuje się do obiektu InstanceHandle lub obiektu InstanceOwner obiektów, jak to może uniemożliwić obiektu InstanceStore bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="6fc57-104">But persistence providers must not hold strong references to InstanceHandle or InstanceOwner objects, as this can prevent InstanceStore from being garbage collected.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="6fc57-105">Nie można zmienić definicji przepływu pracy utrwalonych przepływów pracy.</span><span class="sxs-lookup"><span data-stu-id="6fc57-105">Workflow definitions for persisted workflows cannot be changed.</span></span> <span data-ttu-id="6fc57-106">Zmiana definicji przepływu pracy po jego zachowania środowiska uruchomieniowego przepływu pracy ulegnie awarii po załadowaniu przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="6fc57-106">If a workflow definition is changed after it is persisted, the workflow runtime will crash when the workflow is reloaded.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fc57-107">Inicjuje wystąpienie klasy <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-107">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="6fc57-108">Dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-108">An instance handle.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="6fc57-109">Polecenie do wykonania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-109">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="6fc57-110">Wartość limitu czasu wykonywania polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-110">The timeout value for the command execution.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="6fc57-111">Delegat asynchroniczne wywołanie zwrotne, która odbiera powiadomienia o ukończeniu operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-111">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="6fc57-112">Informacje o stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-112">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-113">Asynchronicznie wykonuje polecenia trwałości, takich jak <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> i <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-113">Asynchronously executes persistence commands such as <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-114">Stan operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-114">The state of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc57-115">Wywołuje hosta <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> metody do wykonania polecenia trwałości przed dojście wystąpienia asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="6fc57-115">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> method to execute a persistence command against an instance handle asynchronously.</span></span> <span data-ttu-id="6fc57-116">Host uzyskuje dojście wystąpienia wywołując <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fc57-116">The host obtains the instance handle by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="6fc57-117">Dojście wystąpienia może być powiązany z jednostek, które reprezentują kontekstu i temat tego polecenia, takie jak wystąpienia, właściciela wystąpienia lub blokady wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6fc57-117">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="6fc57-118">Tylko jedno polecenie może być wystawiony na podstawie dojście wystąpienia w czasie.</span><span class="sxs-lookup"><span data-stu-id="6fc57-118">Only one command may be issued against an instance handle at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="6fc57-119">Kontekst wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-119">The instance context.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="6fc57-120">Do wykonania polecenia trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-120">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="6fc57-121">Wartość limitu czasu wykonywania polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-121">The timeout value for the command execution.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="6fc57-122">Delegat asynchroniczne wywołanie zwrotne, która odbiera powiadomienia o ukończeniu operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-122">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="6fc57-123">Informacje o stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-123">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-124">Dostawca trwałości implementuje ta metoda, która określa, czy można wykonać polecenie określonego trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-124">A persistence provider implements this method, which determines whether a particular persistence command can be executed.</span>
          </span>
          <span data-ttu-id="6fc57-125">Jeśli można wykonać polecenia, wykonuje polecenie asynchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-125">If the command can be executed, executes the command asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-126">Stan operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-126">The state of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc57-127">Jeśli można wykonać polecenia, dostawca trwałości wywołuje odpowiednich metod w obiekcie InstancePersistenceContext w celu udostępniania wyników polecenia.</span><span class="sxs-lookup"><span data-stu-id="6fc57-127">If the command can be executed, the persistence provider calls relevant methods on the InstancePersistenceContext to provide the results of the command.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="6fc57-128">Mimo że ta metoda jest zadeklarowany jako `virtual` zamiast `abstract`, brak żadnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="6fc57-128">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="6fc57-129">Ta metoda musi zostać zastąpiona w celu zapewnienia funkcji.</span><span class="sxs-lookup"><span data-stu-id="6fc57-129">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="6fc57-130">Dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-130">An instance handle.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="6fc57-131">Okres, po którym upłynie limit czasu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-131">The period after which the operation times out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="6fc57-132">Metoda wywoływana po zakończeniu operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-132">The method to be called after the asynchronous operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="6fc57-133">Obiekt zawierający informacje o stanie skojarzone z operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-133">An object containing the state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-134">Rozpoczyna operację asynchroniczną do nasłuchiwania zdarzeń zgłoszone przez wystąpienia w sklepie dojście określone wystąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-134">Begins an asynchronous operation to listen for any events raised by the instance store for a specific instance handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-135">Zwraca <see cref="T:System.IAsyncResult" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-135">Returns an <see cref="T:System.IAsyncResult" /> object..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fc57-136">Tworzy dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-136">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="6fc57-137">Jeśli ustawiono domyślnego, wartość jest automatycznie powiązany jako właściciela wystąpienia nowy uchwyt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-137">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fc57-138">Tworzy dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-138">Creates an instance handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-139">Dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-139">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="6fc57-140">Identyfikator wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-140">An instance identifier.</span>
          </span>
          <span data-ttu-id="6fc57-141">Nie może mieć wartości Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-141">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-142">Tworzy dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-142">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="6fc57-143">Jeśli ustawiono domyślnego, wartość jest automatycznie powiązany jako właściciela wystąpienia nowy uchwyt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-143">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="6fc57-144">Identyfikator wystąpienia przekazany jako parametr automatycznie jest powiązany jako nowe dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-144">The instance identifier passed as a parameter is automatically bound as the new handle’s instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-145">Dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-145">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="6fc57-146">Właściciel wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-146">The owner of an instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-147">Tworzy dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-147">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="6fc57-148">Jeśli właściciela wystąpienia przekazany jako parametr nie jest zerowa, wartość jest automatycznie powiązany jako właściciela wystąpienia nowy uchwyt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-148">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="6fc57-149">(W przeciwnym razie nie wystąpienia jest powiązany właściciel, nawet jeśli jest ustawiona właściwość DefaultInstanceOwner.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-149">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-150">Dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-150">The instance handle.</span>
          </span>
          <span data-ttu-id="6fc57-151">Wartości null wskazuje, czy nowy uchwyt nie powinien automatycznie powiązany z właścicielem wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-151">A null value indicates that the new handle should not be automatically bound to an instance owner.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="6fc57-152">Obiekt InstanceOwner, który reprezentuje właściciela wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-152">An InstanceOwner object  that represents the owner of an instance.</span>
          </span>
          <span data-ttu-id="6fc57-153">Należy przekazać wartość null jako wartość tego parametru wskazać, czy nowy uchwyt nie powinien automatycznie powiązany z właścicielem wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-153">Pass null as the value for this parameter to indicate that the new handle should not be automatically bound to an instance owner.</span>
          </span>
        </param>
        <param name="instanceId">
          <span data-ttu-id="6fc57-154">Identyfikator wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-154">An instance identifier.</span>
          </span>
          <span data-ttu-id="6fc57-155">Nie może mieć wartości Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-155">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-156">Tworzy dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-156">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="6fc57-157">Jeśli właściciela wystąpienia przekazany jako parametr nie jest zerowa, wartość jest automatycznie powiązany jako właściciela wystąpienia nowy uchwyt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-157">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="6fc57-158">(W przeciwnym razie nie wystąpienia jest powiązany właściciel, nawet jeśli jest ustawiona właściwość DefaultInstanceOwner.) Identyfikator wystąpienia przekazany jako parametr automatycznie jest powiązany jako nowe dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-158">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.) The instance identifier passed as a parameter is automatically bound as the new handle’s instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-159">Dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-159">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fc57-160">Pobiera lub ustawia domyślnego właściciela wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-160">Gets or sets the default instance owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fc57-161">Domyślnego właściciela wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-161">The default instance owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc57-162">Niektóre hosty wnioskować właściciela wystąpienia do użycia przy odczycie tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="6fc57-162">Some hosts infer the instance owner to use by reading this property.</span></span> <span data-ttu-id="6fc57-163">Tej właściwości można użyć obiektu WorkflowApplication.</span><span class="sxs-lookup"><span data-stu-id="6fc57-163">WorkflowApplication can use this property.</span></span> <span data-ttu-id="6fc57-164">Obiekt WorkflowServiceHost nie używa tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="6fc57-164">WorkflowServiceHost does not use this property.</span></span>  
  
 <span data-ttu-id="6fc57-165">Właściwość właściwość DefaultInstanceOwner musi mieć ustawioną wartość null, gdy nie jest już konieczne.</span><span class="sxs-lookup"><span data-stu-id="6fc57-165">The DefaultInstanceOwner propery must be set to null when it is no longer necessary.</span></span> <span data-ttu-id="6fc57-166">Obiektu InstanceStore obiekty mogą nie być bezużytecznych, jeśli właściwość DefaultInstanceOwner nie jest zerowa.</span><span class="sxs-lookup"><span data-stu-id="6fc57-166">InstanceStore objects might not be garbage collected if DefaultInstanceOwner is not null.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="6fc57-167">Mimo że ta metoda jest zadeklarowany jako `virtual` zamiast `abstract`, brak żadnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="6fc57-167">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="6fc57-168">Ta metoda musi zostać zastąpiona w celu zapewnienia funkcji.</span><span class="sxs-lookup"><span data-stu-id="6fc57-168">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="6fc57-169">Wynik operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-169">The result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-170">Kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-170">Ends the asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-171">Obiekt InstanceView reprezentujący znanego stanu wystąpienia po pomyślnym zakończeniu polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-171">An InstanceView object  representing the known state of the instance after the successful completion of the command.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc57-172">Jeśli BeginExecute została wywołana w ramach transakcji, ten stan może obejmować niezatwierdzone dane.</span><span class="sxs-lookup"><span data-stu-id="6fc57-172">If BeginExecute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="6fc57-173">Gdy transakcja została pomyślnie przekazana, dane w InstanceView obiektu jest uznawana za zatwierdzone.</span><span class="sxs-lookup"><span data-stu-id="6fc57-173">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="6fc57-174">Wynik operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-174">The result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-175">Kończy operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-175">Ends an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-176">Implementacja dostawcy trwałości powinna zostać zwrócona wartość false, jeśli go nie obsługuje polecenia przekazywany do metody BeginTryCommand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-176">A persistence provider implementation should return false if it doesn’t support the command passed to the BeginTryCommand method.</span>
          </span>
          <span data-ttu-id="6fc57-177">W przeciwnym razie go powinna zwrócić wartość true lub zgłosić wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-177">Otherwise it should return true or throw an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="6fc57-178">Mimo że ta metoda jest zadeklarowany jako `virtual` zamiast `abstract`, brak żadnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="6fc57-178">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="6fc57-179">Ta metoda musi zostać zastąpiona w celu zapewnienia funkcji.</span><span class="sxs-lookup"><span data-stu-id="6fc57-179">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="6fc57-180">Obiekt IAsyncResult, który został przekazany do klienta przez metodę Begin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-180">An IAsyncResult object that was handed over to the client by the Begin method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-181">Kończy operację asynchroniczną inicjowane przez <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-181">Ends the asynchronous operation initiated by the <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-182">Zwraca listę <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> obiektów...</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-182">Returns a list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="6fc57-183">Dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-183">An instance handle.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="6fc57-184">Polecenie do wykonania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-184">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="6fc57-185">Wartość limitu czasu dla operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-185">The timeout value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-186">Wykonuje polecenia trwałości synchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-186">Executes a persistence command synchronously.</span>
          </span>
          <span data-ttu-id="6fc57-187">Przykłady poleceń trwałości: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> i <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-187">Examples of persistence commands are: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-188">Obiekt InstanceView reprezentujący znanego stanu wystąpienia po pomyślnym zakończeniu polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-188">An InstanceView object representing the known state of the instance after the successful completion of the command.</span>
          </span>
          <span data-ttu-id="6fc57-189">Jeśli wykonanie została wywołana w ramach transakcji, ten stan może obejmować niezatwierdzone dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-189">If Execute was called under a transaction, this state may include uncommitted data.</span>
          </span>
          <span data-ttu-id="6fc57-190">Gdy transakcja została pomyślnie przekazana, dane w InstanceView obiektu jest uznawana za zatwierdzone</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-190">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc57-191">Wywołuje hosta <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> metody do wykonania przed dojście wystąpienia, która uzyskuje hosta za pomocą polecenia trwałości <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6fc57-191">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> method to execute a persistence command against an instance handle, which the host obtains by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="6fc57-192">Dojście wystąpienia może być powiązany z jednostek, które reprezentują kontekstu i temat tego polecenia, takie jak wystąpienia, właściciela wystąpienia lub blokady wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6fc57-192">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="6fc57-193">Tylko jedno polecenie może być wystawiony na podstawie dojście wystąpienia w czasie.</span><span class="sxs-lookup"><span data-stu-id="6fc57-193">Only one command may be issued against an instance handle at a time.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="6fc57-194">Jeśli ta metoda jest wykonywane z <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, utworzy on <xref:System.Runtime.DurableInstancing.InstanceOwner> i powiąż go z wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="6fc57-194">If this method is executed with a <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, it will create an <xref:System.Runtime.DurableInstancing.InstanceOwner> and bind it to the instance.</span></span> <span data-ttu-id="6fc57-195">Oznacza to, że żaden inny proces nie będzie mógł uzyskać dostępu do tego przepływu pracy; proces zakończy działanie, przepływ pracy nie można odzyskać lub wykonywane.</span><span class="sxs-lookup"><span data-stu-id="6fc57-195">This means that no other process will be able to access that workflow; if the process ends, the workflow cannot be recovered or executed.</span></span> <span data-ttu-id="6fc57-196">Jeśli przepływ pracy jest wykonywane ponownie, <xref:System.Runtime.DurableInstancing.InstanceLockedException> zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="6fc57-196">If such a workflow is executed again, a <xref:System.Runtime.DurableInstancing.InstanceLockedException> will be thrown.</span></span>  
>   
>  <span data-ttu-id="6fc57-197">Jeśli <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> jest nieużywane, w magazynie wystąpień spowoduje utworzenie tymczasowego <xref:System.Runtime.DurableInstancing.InstanceOwner> które zostaną usunięte po zakończeniu procesu.</span><span class="sxs-lookup"><span data-stu-id="6fc57-197">If <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> is not used, the instance store will create a temporary <xref:System.Runtime.DurableInstancing.InstanceOwner> that will be deleted at the end of the process.</span></span> <span data-ttu-id="6fc57-198">Jednak jeśli proces kończy się przed punktu końcowego utrwalania przepływu pracy, to zostanie wygenerowany wyjątek, chyba że okres określony w **HostLockRenewalPeriod** parametru utracił ważność.</span><span class="sxs-lookup"><span data-stu-id="6fc57-198">However, if the process ends before the workflow’s final persistence point, this exception will be thrown, unless the period of time specified in the **HostLockRenewalPeriod** parameter has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="6fc57-199">
            <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> Obiekt reprezentujący właściciela wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-199">An <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object representing the owner of an instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-200">Pobiera wszystkie sygnałowego zdarzenia powiązane z <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-200">Gets all the signaled events bound to an <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-201">Zwraca tablicę <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> obiektów...</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-201">Returns an array of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fc57-202">Pobiera każdego obiektu InstanceOwner, który jest powiązany z dojścia prawidłowego wystąpienia lub nie została wyrzucona jako element bezużyteczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-202">Gets each InstanceOwner object that is bound to a valid instance handle or has not been garbage collected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-203">Właściciel tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-203">The owner of the instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc57-204">Zwraca tablicę obiektów InstanceOwner.</span><span class="sxs-lookup"><span data-stu-id="6fc57-204">Returns an array of InstanceOwner objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">
          <span data-ttu-id="6fc57-205">Dojście wystąpienia, który został zwolniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-205">The instance handle that was freed.</span>
          </span>
        </param>
        <param name="userContext">
          <span data-ttu-id="6fc57-206">Dostawca trwałości użytkownika informacje o kontekście zwrócony przez OnNewInstanceHandle lub wartość null, jeśli OnNewInstanceHandle nie zostanie zastąpiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-206">The persistence provider’s user context information that was returned from OnNewInstanceHandle, or null if OnNewInstanceHandle is not overridden.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-207">Wywoływane, gdy zostanie zwolniona dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-207">Invoked when an instance handle is freed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">
          <span data-ttu-id="6fc57-208">Dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-208">An instance handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-209">Wywoływane, gdy jest tworzony nowy dojście wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-209">Invoked when a new instance handle is created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-210">Obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-210">An object.</span>
          </span>
          <span data-ttu-id="6fc57-211">Tego obiektu kontekstu użytkownika będzie dostępne dla dostawcy trwałości, gdy polecenia są wykonywane przy użyciu dojścia i gdy dojście zostanie zwolniona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-211">This user context object will be available to the persistence provider when commands are executed using the handle, and when the handle is freed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="6fc57-212">Zdarzenia trwałości, który został wcześniej sygnalizowane i zostaną zresetowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-212">The persistence event that was signaled earlier and to be reset.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="6fc57-213">Właściciela wystąpienia, skojarzone ze zdarzeniem trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-213">The instance owner associated with the persistence event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-214">Resetuje sygnałowego zdarzeń i usuwa zdarzenia z listy zdarzeń sygnałowego obsługiwanego przez właściciela wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-214">Resets the signaled event and removes the event from the signaled events list maintained by the instance owner.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="6fc57-215">Zdarzenia trwałości zasygnalizować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-215">The persistence event to be signaled.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="6fc57-216">Właściciela wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-216">The instance owner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-217">Magazyn wystąpienia wywołuje tę metodę w celu sygnału zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-217">An instance store invokes this method to signal an event.</span>
          </span>
          <span data-ttu-id="6fc57-218">Hosta przepływu pracy, które subskrybuje dla tego zdarzenia trwałości odbiera on i podejmuje odpowiednie działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-218">A workflow host that subscribes for this persistence event receives it and takes an appropriate action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="6fc57-219">Kontekst wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-219">The instance context.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="6fc57-220">Polecenie do wykonania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-220">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="6fc57-221">Wartość limitu czasu dla operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-221">Timeout value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-222">Dostawca trwałości implementuje ta metoda, która określa, czy polecenia trwałości określonego mogą być wykonywane i czy można wykonać polecenia wykonuje on asynchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-222">A persistence provider implements this method, which determines whether a particular persistence command can be executed and if the command can be executed executes it asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-223">Implementacja dostawcy trwałości powinien zwrócić <see langword="false" /> Jeśli go nie obsługuje polecenia przekazany jako parametr; w przeciwnym razie powinien on zwrócić <see langword="true" /> lub zgłosić wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-223">A persistence provider implementation should return <see langword="false" /> if it doesn’t support the command passed as a parameter; otherwise it should return <see langword="true" /> or throw an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fc57-224">Jeśli można wykonać polecenia, dostawca trwałości wywołuje odpowiednich metod w <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> do udostępniania wyników polecenia.</span><span class="sxs-lookup"><span data-stu-id="6fc57-224">If the command can be executed, the persistence provider calls relevant methods on the <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> to provide the results of the command.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="6fc57-225">Dojście wystąpienia, który jest powiązany ze zdarzeniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-225">The instance handle that is bound to the event.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="6fc57-226">Przedział czasu, po którym oczekiwania upłynął limit czasu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-226">The time span after which the waiting operation times out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fc57-227">Hosta przepływów pracy zwykle wywołuje tę metodę oczekiwania na zdarzenie, aby zostać zgłoszony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-227">A workflow host typically invokes this method to wait for an event to be signaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fc57-228">Lista <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fc57-228">A list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>