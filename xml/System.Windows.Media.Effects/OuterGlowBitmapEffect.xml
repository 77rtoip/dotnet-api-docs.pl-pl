<Type Name="OuterGlowBitmapEffect" FullName="System.Windows.Media.Effects.OuterGlowBitmapEffect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5110b2842c9bcc3415a8f2b9434f655e933ea7b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69448361" /></Metadata><TypeSignature Language="C#" Value="public sealed class OuterGlowBitmapEffect : System.Windows.Media.Effects.BitmapEffect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OuterGlowBitmapEffect extends System.Windows.Media.Effects.BitmapEffect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OuterGlowBitmapEffect&#xA;Inherits BitmapEffect" />
  <TypeSignature Language="C++ CLI" Value="public ref class OuterGlowBitmapEffect sealed : System::Windows::Media::Effects::BitmapEffect" />
  <TypeSignature Language="F#" Value="type OuterGlowBitmapEffect = class&#xA;    inherit BitmapEffect" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Effects.BitmapEffect</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Tworzy otoczkę koloru wokół obiektów lub obszarów koloru.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]efekty mapy bitowej to oprogramowanie renderowane. Każdy obiekt, który stosuje efekt, będzie również renderowany w oprogramowaniu. Efekty bitmapowe nie powinny być stosowane do dużych wizualizacji ani animacji, ponieważ może to obniżyć wydajność.  
  
 <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>jest jednym z kilku efektów, które są dostarczane z [!INCLUDE[TLA2#tla_lhsdk](~/includes/tla2sharptla-lhsdk-md.md)]. Inne efekty obejmują:  
  
-   <xref:System.Windows.Media.Effects.BlurBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.EmbossBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.BevelBitmapEffect>  
  
 Na poniższej ilustracji przedstawiono <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect> zastosowanie do obiektu wizualnego (w tym przypadku zastosowano <xref:System.Windows.Controls.TextBox>do).  
  
 ![Zrzut ekranu Zrzut ekranu OuterGlowBitmapEffect]efekt(~/add/media/effects-outerglowsimple.png "mapy bitowej: Efekt mapy bitowej OuterGlowBitmapEffect")  
  
 Na poniższych ilustracjach przedstawiono efekt kilku podstawowych właściwości <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.  
  
-   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize%2A> Właściwość określa rozmiar blasku otoczki:  
  
 ![Zrzut ekranu Zrzut ekranu OuterGlowBitmapEffect]efekt(~/add/media/effects-outerglowglowsize.png "mapy bitowej: Efekt mapy bitowej OuterGlowBitmapEffect")  
  
-   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise%2A> Właściwość określa poziom szumu blasku:  
  
 ![Zrzut ekranu Zrzut ekranu przedstawiający]wartości(~/add/media/effects-outerglownoise.png "właściwości szumu: Porównanie wartości właściwości szumu")  
  
-   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity%2A> Właściwość określa, jak przezroczysty jest blask:  
  
 ![Zrzut ekranu Porównuje wartość](~/add/media/effects-outerglowopacity.png "właściwości krycie blasku zrzutu ekranu: Porównanie wartości właściwości nieprzezroczystości blasku")  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">do tworzenia wystąpienia <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" /> klasy. Skojarzone wyliczenia:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <altmember cref="T:System.Windows.Media.Effects.BlurBitmapEffect" />
    <altmember cref="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
    <altmember cref="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
    <altmember cref="T:System.Windows.Media.Effects.BevelBitmapEffect" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OuterGlowBitmapEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OuterGlowBitmapEffect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.OuterGlowBitmapEffect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.OuterGlowBitmapEffect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As OuterGlowBitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::OuterGlowBitmapEffect ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Effects.OuterGlowBitmapEffect" Usage="outerGlowBitmapEffect.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.OuterGlowBitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />elementu, tworząc głębokie kopie wartości tego obiektu. Podczas kopiowania właściwości zależności ta metoda kopiuje odwołania do zasobów i powiązania danych (ale mogą nie być już rozpoznawane), ale nie ma animacji ani ich bieżących wartości.</summary>
        <returns>Modyfikowalny klon bieżącego obiektu. <see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była<see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu). Dla wygody ta metoda przesłania dziedziczonej wersji.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.OuterGlowBitmapEffect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.OuterGlowBitmapEffect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As OuterGlowBitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::OuterGlowBitmapEffect ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Effects.OuterGlowBitmapEffect" Usage="outerGlowBitmapEffect.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.OuterGlowBitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" /> obiektu, tworząc głębokie kopie bieżących wartości tego obiektu. Odwołania do zasobów, powiązania danych i animacje nie są kopiowane, ale ich bieżące wartości to.</summary>
        <returns>Modyfikowalny klon bieżącego obiektu. <see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu). Dla wygody ta metoda przesłania dziedziczonej wersji.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="outerGlowBitmapEffect.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUnmanagedEffect">
      <MemberSignature Language="C#" Value="protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CreateUnmanagedEffect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateUnmanagedEffect () As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Runtime::InteropServices::SafeHandle ^ CreateUnmanagedEffect();" />
      <MemberSignature Language="F#" Value="override this.CreateUnmanagedEffect : unit -&gt; System.Runtime.InteropServices.SafeHandle" Usage="outerGlowBitmapEffect.CreateUnmanagedEffect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlowColor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Color GlowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Color GlowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GlowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Color GlowColor { System::Windows::Media::Color get(); void set(System::Windows::Media::Color value); };" />
      <MemberSignature Language="F#" Value="member this.GlowColor : System.Windows.Media.Color with get, set" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Pobiera lub ustawia kolor blasku otoczki.</summary>
        <value>Kolor blasku otoczki. Wartość domyślna to biały.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_GlowColor"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlowColorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty GlowColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty GlowColorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GlowColorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ GlowColorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable GlowColorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Identyfikuje właściwość <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlowSize">
      <MemberSignature Language="C#" Value="public double GlowSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GlowSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" />
      <MemberSignature Language="VB.NET" Value="Public Property GlowSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double GlowSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.GlowSize : double with get, set" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Pobiera lub ustawia grubość blasku otoczki.</summary>
        <value>Grubość blasku otoczki w [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]. Prawidłowy zakres wartości to od 1 do 199. Wartość domyślna to 20.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na poniższej ilustracji przedstawiono efekt tej właściwości.  
  
 ![Zrzut ekranu Zrzut ekranu OuterGlowBitmapEffect]efekt(~/add/media/effects-outerglowglowsize.png "mapy bitowej: Efekt mapy bitowej OuterGlowBitmapEffect")  
  
<a name="dependencyPropertyInfo_GlowSize"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlowSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty GlowSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty GlowSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GlowSizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ GlowSizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable GlowSizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Identyfikuje właściwość <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Noise">
      <MemberSignature Language="C#" Value="public double Noise { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Noise" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" />
      <MemberSignature Language="VB.NET" Value="Public Property Noise As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Noise { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Noise : double with get, set" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Pobiera lub ustawia graininess blasku otoczki.</summary>
        <value>Graininess (poziom szumu) blasku otoczki. Prawidłowy zakres wartości to od 0,0 do 1,0, z 0,0 nie określa szumu i 1,0, określając maksymalną liczbę szumów. Wartość 0,5 wskazuje 50 procent szumu, wartość 0,75 75 wskazuje na szumu i tak dalej. Wartość domyślna to 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na poniższej ilustracji przedstawiono efekt tej właściwości.  
  
 ![Zrzut ekranu Zrzut ekranu przedstawiający]wartości(~/add/media/effects-outerglownoise.png "właściwości szumu: Porównanie wartości właściwości szumu")  
  
<a name="dependencyPropertyInfo_Noise"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoiseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NoiseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NoiseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoiseProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NoiseProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoiseProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Identyfikuje właściwość <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Pobiera lub ustawia stopień przejrzystości blasku otoczki.</summary>
        <value>Poziom nieprzezroczystości blasku. Wartość 0 oznacza, że blask Halo jest całkowicie przezroczysty, a wartość 1 oznacza, że blask jest całkowicie nieprzezroczysty. Wartość 0,5 wskazuje, że blask ma 50 procent nieprzezroczystości, wartość 0,725 wskazuje, że blask 72,5 jest nieprzezroczysty i tak dalej. Wartości mniejsze od 0 są traktowane jak 0, podczas gdy wartości większe niż 1 są traktowane jako 1. Domyślnym ustawieniem jest 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na poniższej ilustracji przedstawiono efekt tej właściwości:  
  
 ![Zrzut ekranu Porównuje wartość](~/add/media/effects-outerglowopacity.png "właściwości krycie blasku zrzutu ekranu: Porównanie wartości właściwości nieprzezroczystości blasku")  
  
 Nieprzezroczystość można także określić przy użyciu wartości alfa <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor%2A>elementu.  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Uwaga: Ten interfejs API jest już przestarzały.** Nieprzestarzała alternatywa to <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Identyfikuje właściwość <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUnmanagedPropertyState">
      <MemberSignature Language="C#" Value="protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateUnmanagedPropertyState(class System.Runtime.InteropServices.SafeHandle unmanagedEffect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateUnmanagedPropertyState (unmanagedEffect As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateUnmanagedPropertyState(System::Runtime::InteropServices::SafeHandle ^ unmanagedEffect);" />
      <MemberSignature Language="F#" Value="override this.UpdateUnmanagedPropertyState : System.Runtime.InteropServices.SafeHandle -&gt; unit" Usage="outerGlowBitmapEffect.UpdateUnmanagedPropertyState unmanagedEffect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedEffect" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="unmanagedEffect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
