<Type Name="VisualStyleRenderer" FullName="System.Windows.Forms.VisualStyles.VisualStyleRenderer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0496941fd94e220901f7d3e12c8bbbffd654a959" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69196784" /></Metadata><TypeSignature Language="C#" Value="public sealed class VisualStyleRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VisualStyleRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualStyleRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStyleRenderer sealed" />
  <TypeSignature Language="F#" Value="type VisualStyleRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia metody do rysowania i pobierania informacji o <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przestrzeń nazw uwidacznia <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> obiekty, które reprezentują wszystkie kontrolki i elementy interfejsu użytkownika, które są obsługiwane przez style wizualne. <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> Aby narysować lub uzyskać informacje dotyczące określonego elementu, musisz ustawić <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> dla elementu, który Cię interesuje. Obiekt <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> jest automatycznie ustawiany na określony <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> w <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%2A> konstruktorze, ale można również ustawić <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters%2A> istniejący <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> dla innego elementu, wywołując metodę.  
  
 Aby narysować element, użyj <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> metody. Klasa zawiera również metody, takie jak <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetColor%2A> i <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A>, które zawierają informacje o sposobie definiowania elementu przez bieżący styl wizualizacji. <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>  
  
 Konstruktor i wiele <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> metod generują wyjątki, chyba że style wizualne są włączone w systemie operacyjnym, a style wizualizacji są stosowane do obszaru klienta okna aplikacji. <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%2A> Aby sprawdzić te warunki, użyj `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> właściwości.  
  
 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> Klasa otacza funkcję interfejsu API style wizualizacji (Uxtheme) z części powłoki systemu Windows zestawu SDK platformy Windows.
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> klasy w celu zaimplementowania kontrolki niestandardowej, która symuluje niektóre podstawowe elementy interfejsu użytkownika okna, w tym przeciąganie z paskiem tytułu, zmianę rozmiarów z uchwytem zmiany rozmiarów i zamknięcie. W tym przykładzie użyto <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> kilku obiektów, które reprezentują standardowe części okna, w tym elementy uwidocznione <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption>przez klasy <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CloseButton>, i <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Gripper> .  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleInformation" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStyleRenderer (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (element As VisualStyleElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStyleRenderer(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.VisualStyles.VisualStyleRenderer : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; System.Windows.Forms.VisualStyles.VisualStyleRenderer" Usage="new System.Windows.Forms.VisualStyles.VisualStyleRenderer element" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> To<see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> będzie reprezentować.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> klasy przy użyciu danego <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName%2A?displayProperty=nameWithType>Ten konstruktor używa właściwości <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Part%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.State%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> , i <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>parametru, aby zainicjować właściwości, i. `element`  
  
 Przed użyciem tego konstruktora należy wywołać `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> metodę, aby sprawdzić, czy bieżący styl wizualizacji zawiera definicję elementu określonego przez `element` parametr.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%28System.Windows.Forms.VisualStyles.VisualStyleElement%29> konstruktora do <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>utworzenia. Ten przykład kodu jest częścią większego przykładu kodu podanego <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> w przeglądzie klasy.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">System operacyjny nie obsługuje stylów wizualnych.  
  
 —lub—  
  
 Style wizualizacji są wyłączane przez użytkownika w systemie operacyjnym.  
  
 —lub—  
  
 Style wizualne nie są stosowane do obszaru klienckiego okien aplikacji.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="element" />nie jest zdefiniowany przez bieżący styl wizualizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStyleRenderer (string className, int part, int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string className, int32 part, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (className As String, part As Integer, state As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStyleRenderer(System::String ^ className, int part, int state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.VisualStyles.VisualStyleRenderer : string * int * int -&gt; System.Windows.Forms.VisualStyles.VisualStyleRenderer" Usage="new System.Windows.Forms.VisualStyles.VisualStyleRenderer (className, part, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="part" Type="System.Int32" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="className">Nazwa klasy elementu, który <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> będzie reprezentować.</param>
        <param name="part">Część elementu, który <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> będzie reprezentować.</param>
        <param name="state">Stan elementu, który <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> będzie reprezentować.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> klasy za pomocą podanej wartości klasy, części i stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor `className`używa parametrów, `part` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>i `state`do inicjowania właściwości <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> , i. <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>  
  
 Przed użyciem tego konstruktora `static` należy wywołać <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> metodę, aby sprawdzić, czy bieżący styl wizualizacji zawiera definicję elementu określonego przez `className`parametry, `part`i `state` .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">System operacyjny nie obsługuje stylów wizualnych.  
  
 —lub—  
  
 Style wizualizacji są wyłączane przez użytkownika w systemie operacyjnym.  
  
 —lub—  
  
 Style wizualne nie są stosowane do obszaru klienckiego okien aplikacji.</exception>
        <exception cref="T:System.ArgumentException">Kombinacja <paramref name="className" />, <paramref name="part" />i niejestzdefiniowanaprzezbieżącystylwizualizacji.<paramref name="state" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public string Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Class" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Class { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Class : string" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę klasy bieżącego elementu stylu wizualnego.</summary>
        <value>Ciąg, który identyfikuje klasę bieżącego elementu stylu wizualizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość identyfikuje grupę powiązanych kontrolek lub elementów interfejsu użytkownika. Aby uzyskać więcej informacji na temat klasy, części i stanu elementu stylu wizualizacji, zobacz <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> Klasa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBackground">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje obraz tła bieżącego elementu stylu wizualnego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground (dc As IDeviceContext, bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; unit" Usage="visualStyleRenderer.DrawBackground (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Używany do rysowania obrazu tła.</param>
        <param name="bounds">, <see cref="T:System.Drawing.Rectangle" /> W którym jest rysowany obraz tła.</param>
        <summary>Rysuje obraz tła bieżącego elementu stylu wizualizacji w określonym prostokącie obwiedni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do rysowania tła bieżącego elementu stylu wizualizacji określonego przez <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, i <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> właściwości.  
  
 `bounds` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> Jeśli lub prostokąt<xref:System.Drawing.Rectangle.Height%2A> określony przez parametr jest mniejszy niż 0, metoda zwróci wartość bez rysowania tła. <xref:System.Drawing.Rectangle.Width%2A>  
  
 Tłem elementu stylu wizualnego może być plik mapy bitowej lub wypełnione obramowanie. Aby określić typ tła, należy wywołać <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> metodę z <xref:System.Windows.Forms.VisualStyles.EnumProperty.BackgroundType?displayProperty=nameWithType>wartością argumentu. Aby określić, czy tło elementu będzie skalowane w celu dopasowania do określonych granic, wywołaj <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> metodę z <xref:System.Windows.Forms.VisualStyles.EnumProperty.SizingType?displayProperty=nameWithType>wartością argumentu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%28System.Drawing.IDeviceContext%2CSystem.Drawing.Rectangle%29> metody do rysowania a <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> <xref:System.Windows.Forms.Control.OnPaint%2A> w ramach metody kontrolki niestandardowej. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> w przeglądzie klasy.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Drawing.Rectangle clipRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Rectangle clipRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground (dc As IDeviceContext, bounds As Rectangle, clipRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Drawing::Rectangle clipRectangle);" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit" Usage="visualStyleRenderer.DrawBackground (dc, bounds, clipRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="clipRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Używany do rysowania obrazu tła.</param>
        <param name="bounds">, <see cref="T:System.Drawing.Rectangle" /> W którym jest rysowany obraz tła.</param>
        <param name="clipRectangle">A <see cref="T:System.Drawing.Rectangle" /> , który definiuje prostokąt przycinania dla operacji rysowania.</param>
        <summary>Rysuje obraz tła bieżącego elementu stylu wizualizacji w określonym prostokącie obwiedni i przycięty do określonego prostokąta wycinka.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do rysowania tła bieżącego elementu stylu wizualizacji określonego przez <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, i <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> właściwości. Tło zostanie przycięte do obszaru określonego przez `clipRectangle` parametr.  
  
 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> Jeśli lub <xref:System.Drawing.Rectangle.Width%2A> <xref:System.Drawing.Rectangle.Height%2A> prostokąt`bounds` określonyprzezalboparametry`clipRectangle` są mniejsze niż 0, metoda zwróci wartość bez rysowania tła.  
  
 Tłem elementu stylu wizualnego może być plik mapy bitowej lub wypełnione obramowanie. Aby określić typ tła, należy wywołać <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> metodę z <xref:System.Windows.Forms.VisualStyles.EnumProperty.BackgroundType?displayProperty=nameWithType>wartością argumentu. Aby określić, czy tło elementu będzie skalowane w celu dopasowania do określonych granic, wywołaj <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> metodę z <xref:System.Windows.Forms.VisualStyles.EnumProperty.SizingType?displayProperty=nameWithType>wartością argumentu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEdge">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DrawEdge (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.Edges edges, System.Windows.Forms.VisualStyles.EdgeStyle style, System.Windows.Forms.VisualStyles.EdgeEffects effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle DrawEdge(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.Edges edges, valuetype System.Windows.Forms.VisualStyles.EdgeStyle style, valuetype System.Windows.Forms.VisualStyles.EdgeEffects effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawEdge(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.Edges,System.Windows.Forms.VisualStyles.EdgeStyle,System.Windows.Forms.VisualStyles.EdgeEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle DrawEdge(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::Edges edges, System::Windows::Forms::VisualStyles::EdgeStyle style, System::Windows::Forms::VisualStyles::EdgeEffects effects);" />
      <MemberSignature Language="F#" Value="member this.DrawEdge : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.Edges * System.Windows.Forms.VisualStyles.EdgeStyle * System.Windows.Forms.VisualStyles.EdgeEffects -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.DrawEdge (dc, bounds, edges, style, effects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="edges" Type="System.Windows.Forms.VisualStyles.Edges" />
        <Parameter Name="style" Type="System.Windows.Forms.VisualStyles.EdgeStyle" />
        <Parameter Name="effects" Type="System.Windows.Forms.VisualStyles.EdgeEffects" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Używane do rysowania krawędzi.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> Którego granice definiują krawędzie do rysowania.</param>
        <param name="edges">Bitowa kombinacja <see cref="T:System.Windows.Forms.VisualStyles.Edges" /> wartości.</param>
        <param name="style">Bitowa kombinacja <see cref="T:System.Windows.Forms.VisualStyles.EdgeStyle" /> wartości.</param>
        <param name="effects">Bitowa kombinacja <see cref="T:System.Windows.Forms.VisualStyles.EdgeEffects" /> wartości.</param>
        <summary>Rysuje co najmniej jedną krawędź określonego prostokąta ograniczenia.</summary>
        <returns>, Który reprezentuje wnętrze <paramref name="bounds" /> parametru, minus krawędzi, które zostały narysowane. <see cref="T:System.Drawing.Rectangle" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImage">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje określony obraz w określonym prostokącie obwiedni.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Image -&gt; unit" Usage="visualStyleRenderer.DrawImage (g, bounds, image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> Używany do rysowania obrazu.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , w którym obraz jest rysowany.</param>
        <param name="image"><see cref="T:System.Drawing.Image" /> Do rysowania.</param>
        <summary>Rysuje określony obraz w obrębie określonych granic.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli styl wizualizacji stosuje jeden z efektów określonych przez <xref:System.Windows.Forms.VisualStyles.IconEffect?displayProperty=nameWithType> wartości do bieżącego elementu, ta metoda zastosuje efekt do rysowanego obrazu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" />lub <paramref name="image" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.ImageList imageList, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.ImageList imageList, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ImageList,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::ImageList ^ imageList, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ImageList * int -&gt; unit" Usage="visualStyleRenderer.DrawImage (g, bounds, imageList, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="imageList" Type="System.Windows.Forms.ImageList" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> Używany do rysowania obrazu.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , w którym obraz jest rysowany.</param>
        <param name="imageList"><see cref="T:System.Windows.Forms.ImageList" /> Zawierający<see cref="T:System.Drawing.Image" /> do rysowania.</param>
        <param name="imageIndex">Indeks <see cref="T:System.Drawing.Image" /> w programie <paramref name="imageList" /> do narysowania.</param>
        <summary>Rysuje obraz z określonego <see cref="T:System.Windows.Forms.ImageList" /> zakresu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli styl wizualizacji stosuje jeden z efektów określonych przez <xref:System.Windows.Forms.VisualStyles.IconEffect?displayProperty=nameWithType> wartości do bieżącego elementu, ta metoda zastosuje efekt do rysowanego obrazu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" />lub <paramref name="image" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="imageIndex" />jest mniejsza od 0 lub większa lub równa liczbie obrazów w <paramref name="imageList" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawParentBackground">
      <MemberSignature Language="C#" Value="public void DrawParentBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.Control childControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawParentBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.Control childControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawParentBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawParentBackground (dc As IDeviceContext, bounds As Rectangle, childControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawParentBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::Control ^ childControl);" />
      <MemberSignature Language="F#" Value="member this.DrawParentBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.Control -&gt; unit" Usage="visualStyleRenderer.DrawParentBackground (dc, bounds, childControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="childControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="dc">Używane do rysowania tła <paramref name="childControl" />elementu nadrzędnego. <see cref="T:System.Drawing.IDeviceContext" /> Ten obiekt zazwyczaj należy do formantu podrzędnego.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , w której ma zostać narysowane tło kontrolki nadrzędnej. Ten prostokąt powinien znajdować się wewnątrz granic formantu podrzędnego.</param>
        <param name="childControl">Kontrolka, której tło elementu nadrzędnego zostanie narysowane.</param>
        <summary>Rysuje tło elementu nadrzędnego kontrolki w określonym obszarze.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rysuje tekst w określonych granicach.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Używany do rysowania tekstu.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , w której ma zostać narysowany tekst.</param>
        <param name="textToDraw">Tekst do narysowania.</param>
        <summary>Rysuje tekst w określonych granicach przy użyciu domyślnego formatowania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, drawDisabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, bool drawDisabled);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * bool -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw, drawDisabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="drawDisabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Używany do rysowania tekstu.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , w której ma zostać narysowany tekst.</param>
        <param name="textToDraw">Tekst do narysowania.</param>
        <param name="drawDisabled"><see langword="true" />Aby narysować szary tekst; w przeciwnym razie. <see langword="false" /></param>
        <summary>Rysuje tekst w określonych granicach przy użyciu opcji wyświetlania wyłączonego tekstu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, drawDisabled As Boolean, flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, bool drawDisabled, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * bool * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw, drawDisabled, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="drawDisabled" Type="System.Boolean" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Używany do rysowania tekstu.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , w której ma zostać narysowany tekst.</param>
        <param name="textToDraw">Tekst do narysowania.</param>
        <param name="drawDisabled"><see langword="true" />Aby narysować szary tekst; w przeciwnym razie. <see langword="false" /></param>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Rysuje tekst w określonym prostokącie obwiedni z opcją wyświetlania wyłączonego tekstu i zastosowania innego formatowania tekstu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundContentRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBackgroundContentRectangle (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBackgroundContentRectangle(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundContentRectangle(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundContentRectangle (dc As IDeviceContext, bounds As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBackgroundContentRectangle(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundContentRectangle : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetBackgroundContentRectangle (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera cały obszar tła bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca obszar zawartości tła bieżącego elementu stylu wizualizacji.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> , który zawiera obszar zawartości tła bieżącego elementu stylu wizualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Styl wizualizacji może definiować obszar zawartości w każdym obrazie tła. Jest to obszar, w którym zawartość, taka jak tekst i ikony, można umieścić bez zastępowania obramowań tła. Ta metoda używa danego obszaru tła do obliczania obszaru zawartości dla bieżącego elementu stylu wizualnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBackgroundExtent (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle contentBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBackgroundExtent(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle contentBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundExtent (dc As IDeviceContext, contentBounds As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBackgroundExtent(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle contentBounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundExtent : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetBackgroundExtent (dc, contentBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="contentBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="contentBounds">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera obszar zawartości bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca cały obszar tła dla bieżącego elementu stylu wizualnego.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> , który zawiera cały obszar tła bieżącego elementu stylu wizualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Styl wizualizacji może definiować obszar zawartości w każdym obrazie tła. Jest to obszar, w którym zawartość, taka jak tekst i ikony, można umieścić bez zastępowania obramowań tła. Ta metoda używa danego obszaru zawartości do obliczenia całego obszaru tła dla bieżącego elementu stylu wizualnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundRegion">
      <MemberSignature Language="C#" Value="public System.Drawing.Region GetBackgroundRegion (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region GetBackgroundRegion(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundRegion (dc As IDeviceContext, bounds As Rectangle) As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Region ^ GetBackgroundRegion(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundRegion : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Region" Usage="visualStyleRenderer.GetBackgroundRegion (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera cały obszar tła bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca region tła bieżącego elementu stylu wizualizacji.</summary>
        <returns><see cref="T:System.Drawing.Region" /> Zawiera tło bieżącego elementu stylu wizualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do uzyskania <xref:System.Drawing.Region> elementu stylu wizualnego, który zawiera częściowo przezroczyste lub alfa-mieszanki części w tle.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion%2A> jak używać metody w kontrolce niestandardowej. Ten przykład używa <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion%2A> do <xref:System.Drawing.Region> uzyskania elementu <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption.Active%2A?displayProperty=nameWithType> paska tytułu okna zwróconego przez właściwość. <xref:System.Drawing.Region> Służy do<xref:System.Windows.Forms.Control.Region%2A?displayProperty=nameWithType> ustawiania właściwości kontrolki, tak aby pasek tytułu okna pojawił się z zaokrąglonymi rogami zdefiniowanymi przez standardowy styl wizualny systemu Windows XP. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> w przeglądzie klasy.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#30)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean (System.Windows.Forms.VisualStyles.BooleanProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean(valuetype System.Windows.Forms.VisualStyles.BooleanProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBoolean(System.Windows.Forms.VisualStyles.BooleanProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean (prop As BooleanProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean(System::Windows::Forms::VisualStyles::BooleanProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetBoolean : System.Windows.Forms.VisualStyles.BooleanProperty -&gt; bool" Usage="visualStyleRenderer.GetBoolean prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.BooleanProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" /> wartości, która określa wartość właściwości, która ma zostać pobrana dla bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca wartość określonej właściwości logicznej dla bieżącego elementu stylu wizualnego.</summary>
        <returns><see langword="true" />Jeśli właściwość określona przez <paramref name="prop" /> parametr jest <see langword="true" /> dla bieżącego elementu stylu wizualnego; w przeciwnym razie, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Style wizualne używają zestawu wartości logicznych do opisywania niektórych właściwości elementów zdefiniowanych przez styl. Te właściwości są hermetyzowane przez <xref:System.Windows.Forms.VisualStyles.BooleanProperty> wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetColor (System.Windows.Forms.VisualStyles.ColorProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetColor(valuetype System.Windows.Forms.VisualStyles.ColorProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetColor(System.Windows.Forms.VisualStyles.ColorProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColor (prop As ColorProperty) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetColor(System::Windows::Forms::VisualStyles::ColorProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetColor : System.Windows.Forms.VisualStyles.ColorProperty -&gt; System.Drawing.Color" Usage="visualStyleRenderer.GetColor prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.ColorProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" /> wartości, która określa wartość właściwości, która ma zostać pobrana dla bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca wartość określonej właściwości Color dla bieżącego elementu stylu wizualnego.</summary>
        <returns>A <see cref="T:System.Drawing.Color" /> , który zawiera wartość właściwości określonej <paramref name="prop" /> przez parametr dla bieżącego elementu stylu wizualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Style wizualne używają zestawu wartości koloru do opisywania niektórych właściwości elementów zdefiniowanych przez styl. Te właściwości są hermetyzowane przez <xref:System.Windows.Forms.VisualStyles.ColorProperty> wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumValue">
      <MemberSignature Language="C#" Value="public int GetEnumValue (System.Windows.Forms.VisualStyles.EnumProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEnumValue(valuetype System.Windows.Forms.VisualStyles.EnumProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue(System.Windows.Forms.VisualStyles.EnumProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumValue (prop As EnumProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEnumValue(System::Windows::Forms::VisualStyles::EnumProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetEnumValue : System.Windows.Forms.VisualStyles.EnumProperty -&gt; int" Usage="visualStyleRenderer.GetEnumValue prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.EnumProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" /> wartości, która określa wartość właściwości, która ma zostać pobrana dla bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca wartość określonej właściwości typu wyliczeniowego dla bieżącego elementu stylu wizualnego.</summary>
        <returns>Wartość całkowita właściwości określona przez <paramref name="prop" /> parametr dla bieżącego elementu stylu wizualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Style wizualne używają zestawu typów wyliczeniowych do opisywania niektórych właściwości elementów zdefiniowanych przez styl. Te typy wyliczeniowe są hermetyzowane przez <xref:System.Windows.Forms.VisualStyles.EnumProperty> wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFilename">
      <MemberSignature Language="C#" Value="public string GetFilename (System.Windows.Forms.VisualStyles.FilenameProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetFilename(valuetype System.Windows.Forms.VisualStyles.FilenameProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFilename(System.Windows.Forms.VisualStyles.FilenameProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFilename (prop As FilenameProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetFilename(System::Windows::Forms::VisualStyles::FilenameProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetFilename : System.Windows.Forms.VisualStyles.FilenameProperty -&gt; string" Usage="visualStyleRenderer.GetFilename prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.FilenameProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" /> wartości, która określa wartość właściwości, która ma zostać pobrana dla bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca wartość określonej właściwości nazwy pliku dla bieżącego elementu stylu wizualnego.</summary>
        <returns>A <see cref="T:System.String" /> , który zawiera wartość właściwości określonej <paramref name="prop" /> przez parametr dla bieżącego elementu stylu wizualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Style wizualne mogą określać nazwy plików obrazów, które są używane do rysowania określonego elementu w różnych rozmiarach i rozdzielczościach. Te nazwy plików są hermetyzowane przez <xref:System.Windows.Forms.VisualStyles.FilenameProperty> wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font GetFont (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.FontProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Font GetFont(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.FontProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFont(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.FontProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFont (dc As IDeviceContext, prop As FontProperty) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Font ^ GetFont(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::FontProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetFont : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.FontProperty -&gt; System.Drawing.Font" Usage="visualStyleRenderer.GetFont (dc, prop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.FontProperty" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="prop">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.FontProperty" /> wartości, która określa wartość właściwości, która ma zostać pobrana dla bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca wartość określonej właściwości czcionki dla bieżącego elementu stylu wizualnego.</summary>
        <returns>A <see cref="T:System.Drawing.Font" /> , który zawiera wartość właściwości określonej <paramref name="prop" /> przez parametr dla bieżącego elementu stylu wizualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Style wizualne używają zestawu wartości czcionki do opisywania niektórych właściwości elementów zdefiniowanych przez styl. Te właściwości są hermetyzowane przez <xref:System.Windows.Forms.VisualStyles.FontProperty> wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.FontProperty" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public int GetInteger (System.Windows.Forms.VisualStyles.IntegerProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetInteger(valuetype System.Windows.Forms.VisualStyles.IntegerProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetInteger(System.Windows.Forms.VisualStyles.IntegerProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInteger (prop As IntegerProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInteger(System::Windows::Forms::VisualStyles::IntegerProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetInteger : System.Windows.Forms.VisualStyles.IntegerProperty -&gt; int" Usage="visualStyleRenderer.GetInteger prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.IntegerProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" /> wartości, która określa wartość właściwości, która ma zostać pobrana dla bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca wartość określonej właściwości Integer dla bieżącego elementu stylu wizualnego.</summary>
        <returns>Wartość całkowita właściwości określona przez <paramref name="prop" /> parametr dla bieżącego elementu stylu wizualnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Style wizualne używają zestawu wartości całkowitych do opisywania niektórych właściwości elementów zdefiniowanych przez styl. Te właściwości są hermetyzowane przez <xref:System.Windows.Forms.VisualStyles.IntegerProperty> wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMargins">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding GetMargins (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.MarginProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.Padding GetMargins(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.MarginProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetMargins(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.MarginProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMargins (dc As IDeviceContext, prop As MarginProperty) As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Padding GetMargins(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::MarginProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetMargins : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.MarginProperty -&gt; System.Windows.Forms.Padding" Usage="visualStyleRenderer.GetMargins (dc, prop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.MarginProperty" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="prop">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" /> wartości, która określa wartość właściwości, która ma zostać pobrana dla bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca wartość określonej właściwości marginesów dla bieżącego elementu stylu wizualnego.</summary>
        <returns>A <see cref="T:System.Windows.Forms.Padding" /> , który zawiera wartość właściwości określonej <paramref name="prop" /> przez parametr dla bieżącego elementu stylu wizualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Style wizualne używają zestawu wartości marginesów do opisywania niektórych właściwości elementów zdefiniowanych przez styl. Te właściwości są hermetyzowane przez <xref:System.Windows.Forms.VisualStyles.MarginProperty> wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" /> wartości.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPartSize">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość właściwości określonej wielkości dla bieżącej części stylu wizualizacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPartSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size GetPartSize (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.ThemeSizeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size GetPartSize(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.ThemeSizeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.ThemeSizeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartSize (dc As IDeviceContext, type As ThemeSizeType) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size GetPartSize(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::ThemeSizeType type);" />
      <MemberSignature Language="F#" Value="member this.GetPartSize : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.ThemeSizeType -&gt; System.Drawing.Size" Usage="visualStyleRenderer.GetPartSize (dc, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="type" Type="System.Windows.Forms.VisualStyles.ThemeSizeType" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="type">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> wartości, która określa wartość rozmiaru do pobrania dla części.</param>
        <summary>Zwraca wartość właściwości określonej wielkości dla bieżącej części stylu wizualizacji.</summary>
        <returns>A <see cref="T:System.Drawing.Size" /> , który zawiera rozmiar określony <paramref name="type" /> przez parametr dla bieżącej części stylu wizualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj tylko <xref:System.Windows.Forms.VisualStyles.ThemeSizeType.True> wartości i <xref:System.Windows.Forms.VisualStyles.ThemeSizeType.Minimum> powinny być używane dla parametrutejmetody.`type`  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize%28System.Drawing.IDeviceContext%2CSystem.Windows.Forms.VisualStyles.ThemeSizeType%29> metody w kontrolce niestandardowej do uzyskiwania rozmiarów paska tytułu okna, przycisku **zamknięcia** , obramowań i uchwytu zmiany rozmiaru określonego przez styl wizualizacji. Te rozmiary są używane do obliczania rozmiarów <xref:System.Drawing.Rectangle> obiektów używanych do <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> rysowania obiektów, które reprezentują te części okna. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> w przeglądzie klasy.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size GetPartSize (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ThemeSizeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size GetPartSize(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.ThemeSizeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.ThemeSizeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartSize (dc As IDeviceContext, bounds As Rectangle, type As ThemeSizeType) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size GetPartSize(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::ThemeSizeType type);" />
      <MemberSignature Language="F#" Value="member this.GetPartSize : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.ThemeSizeType -&gt; System.Drawing.Size" Usage="visualStyleRenderer.GetPartSize (dc, bounds, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="type" Type="System.Windows.Forms.VisualStyles.ThemeSizeType" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera obszar, w którym zostanie narysowana część.</param>
        <param name="type">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> wartości, która określa wartość rozmiaru do pobrania dla części.</param>
        <summary>Zwraca wartość właściwości określonej wielkości dla bieżącej części stylu wizualizacji przy użyciu określonych granic rysowania.</summary>
        <returns>A <see cref="T:System.Drawing.Size" /> , który zawiera rozmiar określony <paramref name="type" /> przez parametr dla bieżącej części stylu wizualizacji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.Point GetPoint (System.Windows.Forms.VisualStyles.PointProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point GetPoint(valuetype System.Windows.Forms.VisualStyles.PointProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPoint(System.Windows.Forms.VisualStyles.PointProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPoint (prop As PointProperty) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point GetPoint(System::Windows::Forms::VisualStyles::PointProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetPoint : System.Windows.Forms.VisualStyles.PointProperty -&gt; System.Drawing.Point" Usage="visualStyleRenderer.GetPoint prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.PointProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.PointProperty" /> wartości, która określa wartość właściwości, która ma zostać pobrana dla bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca wartość określonej właściwości punktu dla bieżącego elementu stylu wizualnego.</summary>
        <returns>A <see cref="T:System.Drawing.Point" /> , który zawiera wartość właściwości określonej <paramref name="prop" /> przez parametr dla bieżącego elementu stylu wizualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Style wizualne używają zestawu wartości punktów do opisywania niektórych właściwości elementów zdefiniowanych przez styl. Te właściwości są hermetyzowane przez <xref:System.Windows.Forms.VisualStyles.PointProperty> wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPoint%2A> metody w kontrolce niestandardowej do uzyskania przesunięcia przycisku **zamknięcia** okna w odniesieniu do prawego górnego rogu paska tytułu. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> w przeglądzie klasy.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.PointProperty" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (System.Windows.Forms.VisualStyles.StringProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.Windows.Forms.VisualStyles.StringProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetString(System.Windows.Forms.VisualStyles.StringProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (prop As StringProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Windows::Forms::VisualStyles::StringProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetString : System.Windows.Forms.VisualStyles.StringProperty -&gt; string" Usage="visualStyleRenderer.GetString prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.StringProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Jedna z <see cref="T:System.Windows.Forms.VisualStyles.StringProperty" /> wartości, która określa wartość właściwości, która ma zostać pobrana dla bieżącego elementu stylu wizualnego.</param>
        <summary>Zwraca wartość określonej właściwości ciągu dla bieżącego elementu stylu wizualnego.</summary>
        <returns>A <see cref="T:System.String" /> , który zawiera wartość właściwości określonej <paramref name="prop" /> przez parametr dla bieżącego elementu stylu wizualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Style wizualne używają zestawu wartości ciągu do opisywania niektórych właściwości elementów zdefiniowanych przez styl. Te właściwości są hermetyzowane przez <xref:System.Windows.Forms.VisualStyles.StringProperty> wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" />nie jest jedną z <see cref="T:System.Windows.Forms.VisualStyles.StringProperty" /> wartości.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextExtent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca rozmiar i lokalizację określonego ciągu podczas rysowania z czcionką bieżącego elementu stylu wizualizacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetTextExtent (System.Drawing.IDeviceContext dc, string textToDraw, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetTextExtent(class System.Drawing.IDeviceContext dc, string textToDraw, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.String,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextExtent (dc As IDeviceContext, textToDraw As String, flags As TextFormatFlags) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetTextExtent(System::Drawing::IDeviceContext ^ dc, System::String ^ textToDraw, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetTextExtent : System.Drawing.IDeviceContext * string * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetTextExtent (dc, textToDraw, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="textToDraw">Ciąg do pomiaru.</param>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Zwraca rozmiar i lokalizację określonego ciągu podczas rysowania z czcionką bieżącego elementu stylu wizualizacji.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> , który zawiera obszar wymagany do dopasowania renderowanego tekstu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetTextExtent (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetTextExtent(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextExtent (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, flags As TextFormatFlags) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetTextExtent(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetTextExtent : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetTextExtent (dc, bounds, textToDraw, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> Służy do sterowania przepływem i zawijaniem tekstu.</param>
        <param name="textToDraw">Ciąg do pomiaru.</param>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Windows.Forms.TextFormatFlags" /> wartości.</param>
        <summary>Zwraca rozmiar i lokalizację określonego ciągu podczas rysowania przy użyciu czcionki bieżącego elementu stylu wizualizacji w określonym początkowym prostokącie granic.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> , który zawiera obszar wymagany do dopasowania renderowanego tekstu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextMetrics">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.TextMetrics GetTextMetrics (System.Drawing.IDeviceContext dc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.TextMetrics GetTextMetrics(class System.Drawing.IDeviceContext dc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextMetrics(System.Drawing.IDeviceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextMetrics (dc As IDeviceContext) As TextMetrics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::TextMetrics GetTextMetrics(System::Drawing::IDeviceContext ^ dc);" />
      <MemberSignature Language="F#" Value="member this.GetTextMetrics : System.Drawing.IDeviceContext -&gt; System.Windows.Forms.VisualStyles.TextMetrics" Usage="visualStyleRenderer.GetTextMetrics dc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.TextMetrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <summary>Pobiera informacje o czcionce określonej przez bieżący element stylu wizualizacji.</summary>
        <returns>A <see cref="T:System.Windows.Forms.VisualStyles.TextMetrics" /> , który zawiera informacje o czcionce określonej przez bieżący element stylu wizualizacji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator dla bieżącej klasy elementów stylu wizualnego.</summary>
        <value>Identyfikuje zestaw danych, który definiuje klasę elementów określoną przez <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />. <see cref="T:System.IntPtr" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana wewnętrznie przez <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> metody. Jeśli klasa elementów określona przez <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> właściwość nie jest zdefiniowana przez bieżący styl wizualizacji, ta właściwość zwraca. <xref:System.IntPtr.Zero?displayProperty=nameWithType>  
  
 Ta wartość właściwości jest unieważniona, gdy zmieni się styl wizualny systemu operacyjnego lub jeśli użytkownik wyłączy style wizualne. Jeśli uzyskujesz dostęp bezpośrednio do tej właściwości, kod powinien ponownie zbadać tę właściwość, aby uzyskać nowe dojście <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged?displayProperty=nameWithType> , gdy zdarzenie zostanie wywołane <xref:Microsoft.Win32.UserPreferenceChangedEventArgs.Category%2A?displayProperty=nameWithType> z wartością <xref:Microsoft.Win32.UserPreferenceCategory.VisualStyle?displayProperty=nameWithType>właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">System operacyjny nie obsługuje stylów wizualnych.  
  
 —lub—  
  
 Style wizualizacji są wyłączane przez użytkownika w systemie operacyjnym.  
  
 —lub—  
  
 Style wizualne nie są stosowane do obszaru klienckiego okien aplikacji.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestBackground">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy punkt jest zawarty w tle bieżącego elementu stylu wizualnego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle backgroundRectangle, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle backgroundRectangle, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTestBackground (dc As IDeviceContext, backgroundRectangle As Rectangle, pt As Point, options As HitTestOptions) As HitTestCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle backgroundRectangle, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (dc, backgroundRectangle, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="backgroundRectangle">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera tło bieżącego elementu stylu wizualizacji.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> Do przetestowania.</param>
        <param name="options">Bitowa kombinacja <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" /> wartości.</param>
        <summary>Zwraca kod testu trafień wskazujący, czy punkt jest zawarty w tle bieżącego elementu stylu wizualizacji.</summary>
        <returns>, Który opisuje, <paramref name="pt" /> gdzie znajduje się w tle bieżącego elementu stylu wizualizacji. <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.Graphics g, System.Drawing.Rectangle backgroundRectangle, System.Drawing.Region region, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle backgroundRectangle, class System.Drawing.Region region, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Region,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::Graphics ^ g, System::Drawing::Rectangle backgroundRectangle, System::Drawing::Region ^ region, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Region * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (g, backgroundRectangle, region, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> Ta operacja zostanie użyta.</param>
        <param name="backgroundRectangle">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera tło bieżącego elementu stylu wizualizacji.</param>
        <param name="region">A <see cref="T:System.Drawing.Region" /> , który określa granice obszaru testu trafień w tle.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> Do przetestowania.</param>
        <param name="options">Bitowa kombinacja <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" /> wartości.</param>
        <summary>Zwraca kod testu trafień wskazujący, czy punkt jest zawarty w tle bieżącego elementu stylu wizualizacji i w obrębie określonych granic.</summary>
        <returns>, Który opisuje, <paramref name="pt" /> gdzie znajduje się w tle bieżącego elementu stylu wizualnego, jeśli w ogóle. <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle backgroundRectangle, IntPtr hRgn, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle backgroundRectangle, native int hRgn, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.IntPtr,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTestBackground (dc As IDeviceContext, backgroundRectangle As Rectangle, hRgn As IntPtr, pt As Point, options As HitTestOptions) As HitTestCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle backgroundRectangle, IntPtr hRgn, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * nativeint * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (dc, backgroundRectangle, hRgn, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="hRgn" Type="System.IntPtr" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> Ta operacja zostanie użyta.</param>
        <param name="backgroundRectangle">A <see cref="T:System.Drawing.Rectangle" /> , który zawiera tło bieżącego elementu stylu wizualizacji.</param>
        <param name="hRgn">Dojście systemu Windows do <see cref="T:System.Drawing.Region" /> obiektu, który określa granice obszaru testowania trafień w tle.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> Do przetestowania.</param>
        <param name="options">Bitowa kombinacja <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" /> wartości.</param>
        <summary>Zwraca kod testu trafień wskazujący, czy punkt jest zawarty w tle bieżącego elementu stylu wizualizacji i w określonym regionie.</summary>
        <returns>, Który opisuje, <paramref name="pt" /> gdzie znajduje się w tle bieżącego elementu stylu wizualizacji. <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundPartiallyTransparent">
      <MemberSignature Language="C#" Value="public bool IsBackgroundPartiallyTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBackgroundPartiallyTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsBackgroundPartiallyTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBackgroundPartiallyTransparent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBackgroundPartiallyTransparent();" />
      <MemberSignature Language="F#" Value="member this.IsBackgroundPartiallyTransparent : unit -&gt; bool" Usage="visualStyleRenderer.IsBackgroundPartiallyTransparent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy tło bieżącego elementu stylu wizualizacji zawiera dowolne elementy półprzezroczysty lub alfa-Blend.</summary>
        <returns><see langword="true" />Jeśli tło bieżącego elementu stylu wizualizacji zawiera dowolne elementy półprzezroczysty lub alfa-Blend. w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementDefined">
      <MemberSignature Language="C#" Value="public static bool IsElementDefined (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsElementDefined(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsElementDefined (element As VisualStyleElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsElementDefined(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="static member IsElementDefined : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; bool" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element">, <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> Których kombinacji klas i części zostanie zweryfikowane.</param>
        <summary>Określa, czy określony element stylu wizualizacji jest zdefiniowany przez bieżący styl wizualizacji.</summary>
        <returns><see langword="true" />Jeśli kombinacja <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName" /> <see langword="false" />i <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Part" /> właściwości<paramref name="element" /> są zdefiniowane; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda sprawdza wartość <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> właściwości wewnętrznie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> metody w celu ustalenia, czy należy zainicjować element <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> w danym <xref:System.Windows.Forms.VisualStyles.VisualStyleElement>. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> w przeglądzie klasy.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">System operacyjny nie obsługuje stylów wizualnych.  
  
 —lub—  
  
 Style wizualizacji są wyłączane przez użytkownika w systemie operacyjnym.  
  
 —lub—  
  
 Style wizualne nie są stosowane do obszaru klienckiego okien aplikacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy system operacyjny używa stylów wizualnych do rysowania kontrolek.</summary>
        <value><see langword="true" />Jeśli system operacyjny obsługuje style wizualne, użytkownik włączył style wizualne w systemie operacyjnym, a style wizualizacji są stosowane do obszaru klienckiego systemu Windows. w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano, jak indywidualnie sprawdzać każdy z trzech warunków, które muszą istnieć <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> , aby można było zwrócić `true`właściwość.  
  
|Warunek|Jak określić osobno|  
|---------------|---------------------------------|  
|System operacyjny obsługuje style wizualne.|Sprawdź, czy <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> Właściwość <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> klasy ma `true`wartość.|  
|Użytkownik włączył style wizualne w systemie operacyjnym.|Sprawdź, czy <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> Właściwość <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> klasy ma `true`wartość.|  
|Style wizualizacji są używane do rysowania obszaru klienta w oknach aplikacji.|Sprawdź, czy <xref:System.Windows.Forms.Application.VisualStyleState%2A> Właściwość <xref:System.Windows.Forms.Application> klasy ma wartość <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType> lub <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastHResult">
      <MemberSignature Language="C#" Value="public int LastHResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastHResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.LastHResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastHResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastHResult { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastHResult : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.LastHResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kod ostatniego błędu zwrócony przez metody interfejsu API natywnych stylów wizualnych (Uxtheme) hermetyzowane przez <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> klasę.</summary>
        <value>Wartość określająca kod ostatnio zwracanego przez natywne style wizualizacji metody interfejsu API, które są hermetyzowane przez tę klasę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość pobiera wartość HRESULT, która została zwrócona przez ostatnią metodę interfejsu API natywnych stylów wizualnych wywoływaną przez <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> element członkowski klasy. Aby uzyskać więcej informacji o interfejsie API natywnych stylów wizualizacji, zobacz "Używanie stylów wizualnych systemu Windows XP" w części zestaw SDK [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library/)platformy MSDN w witrynie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Part">
      <MemberSignature Language="C#" Value="public int Part { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Part" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Part As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Part { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Part : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera część bieżącego elementu stylu wizualnego.</summary>
        <value>Wartość określająca część bieżącego elementu stylu wizualizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość identyfikuje konkretną specjalizację klasy. Aby uzyskać więcej informacji na temat klasy, części i stanu elementu stylu wizualizacji, zobacz <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> Klasa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParameters">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia bieżący element stylu wizualizacji tego <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />elementu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (element As VisualStyleElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; unit" Usage="visualStyleRenderer.SetParameters element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element">A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> , który określa nowe wartości <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />właściwości, <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />i <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" /> .</param>
        <summary>Ustawia to <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> dla elementu stylu wizualizacji reprezentowanego przez określony <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda sprawdza wartość <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> właściwości wewnętrznie. Przed wywołaniem tej metody należy wywołać <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> metodę, aby sprawdzić, czy bieżący styl wizualizacji zawiera definicję elementu określonego `element` przez parametr.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters%28System.Windows.Forms.VisualStyles.VisualStyleElement%29> metody w celu <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> ustawienia do nowej <xref:System.Windows.Forms.VisualStyles.VisualStyleElement>. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> w przeglądzie klasy.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="element" />nie jest zdefiniowany przez bieżący styl wizualizacji.</exception>
        <exception cref="T:System.InvalidOperationException">System operacyjny nie obsługuje stylów wizualnych.  
  
 —lub—  
  
 Style wizualizacji są wyłączane przez użytkownika w systemie operacyjnym.  
  
 —lub—  
  
 Style wizualne nie są stosowane do obszaru klienckiego okien aplikacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (string className, int part, int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(string className, int32 part, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (className As String, part As Integer, state As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::String ^ className, int part, int state);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : string * int * int -&gt; unit" Usage="visualStyleRenderer.SetParameters (className, part, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="part" Type="System.Int32" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="className">Nowa wartość <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" /> właściwości.</param>
        <param name="part">Nowa wartość <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" /> właściwości.</param>
        <param name="state">Nowa wartość <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" /> właściwości.</param>
        <summary>Ustawia ten <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> element na elementu stylu wizualizacji reprezentowane przez określone wartości klasy, części i stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda sprawdza wartość <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> właściwości wewnętrznie. Przed <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> wywołaniem tej metody należy wywołać metodę, aby sprawdzić, czy bieżący styl wizualizacji zawiera definicję elementu określonego `className`przez parametry, `part`i `state` .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kombinacja <paramref name="className" />, <paramref name="part" />i niejestzdefiniowanaprzezbieżącystylwizualizacji.<paramref name="state" /></exception>
        <exception cref="T:System.InvalidOperationException">System operacyjny nie obsługuje stylów wizualnych.  
  
 —lub—  
  
 Style wizualizacji są wyłączane przez użytkownika w systemie operacyjnym.  
  
 —lub—  
  
 Style wizualne nie są stosowane do obszaru klienckiego okien aplikacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public int State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int State { int get(); };" />
      <MemberSignature Language="F#" Value="member this.State : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan bieżącego elementu stylu wizualnego.</summary>
        <value>Wartość, która identyfikuje stan bieżącego elementu stylu wizualnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość identyfikuje bieżący stan wizualny elementu identyfikowanego przez wartości bieżące <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> i <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A> właściwości. Aby uzyskać więcej informacji na temat klasy, części i stanu elementu stylu wizualizacji, zobacz <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> Klasa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
