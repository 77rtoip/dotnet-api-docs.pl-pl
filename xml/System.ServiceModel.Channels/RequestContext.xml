<Type Name="RequestContext" FullName="System.ServiceModel.Channels.RequestContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c6932a28b3858d462a9461251439838f9c7a258" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36421540" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RequestContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RequestContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.RequestContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RequestContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestContext abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type RequestContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="731fa-101">Udostępnia odpowiedzi, które są korelowane z przychodzącego żądania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="731fa-101">Provides a reply that is correlated to an incoming request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="731fa-102">Pobierz kontekst żądania od <xref:System.ServiceModel.Channels.IReplyChannel>.</span><span class="sxs-lookup"><span data-stu-id="731fa-102">You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>.</span></span> <span data-ttu-id="731fa-103">Każdy <xref:System.ServiceModel.Channels.RequestContext> hermetyzuje informacje wymagane do odpowiedzi na żądanie, dzięki czemu nie trzeba blok w kanale podczas oczekiwania na każdy komunikat żądania do odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="731fa-103">Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.</span></span>  
  
 <span data-ttu-id="731fa-104">W modelu żądania/odpowiedzi <xref:System.ServiceModel.Channels.RequestContext> skojarzenia między polega na żądanie i odpowiedź, który jest wysyłany jest obiekt. Gdy serwer odbiera żądanie, zapewnia <xref:System.ServiceModel.Channels.RequestContext> wystąpienia reprezentujący żądanie do kanału.</span><span class="sxs-lookup"><span data-stu-id="731fa-104">In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel.</span></span> <span data-ttu-id="731fa-105">Kontekst żądania zawiera na pierwotny komunikat żądania wśród innych przydatnych właściwości.</span><span class="sxs-lookup"><span data-stu-id="731fa-105">The request context contains the original request message among other useful properties.</span></span> <span data-ttu-id="731fa-106">Ten kontekst żądania jest następnie zwiniętych wewnątrz <xref:System.ServiceModel.OperationContext> do pobrania przez usługę.</span><span class="sxs-lookup"><span data-stu-id="731fa-106">This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service.</span></span> <span data-ttu-id="731fa-107">Zazwyczaj używają <xref:System.ServiceModel.OperationContext.Current%2A> właściwości do uzyskania dostępu do żądania bieżącej operacji.</span><span class="sxs-lookup"><span data-stu-id="731fa-107">You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation.</span></span>  
  
 <span data-ttu-id="731fa-108">Wartość <xref:System.ServiceModel.Channels.RequestContext> może być `null`.</span><span class="sxs-lookup"><span data-stu-id="731fa-108">The value of the <xref:System.ServiceModel.Channels.RequestContext> can be `null`.</span></span> <span data-ttu-id="731fa-109">Ponieważ roli kontekstu żądania jest łącze żądań do odpowiedzi, go nie ma sensu na kontekst żądania, gdy nie ma odpowiedzi, a w tym przypadku ustawiono kontekstu `null`.</span><span class="sxs-lookup"><span data-stu-id="731fa-109">Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to `null`.</span></span> <span data-ttu-id="731fa-110">Dla operacji jednokierunkowych na podstawie modelu żądanie/odpowiedź serwer odbiera żądania, ale nie wysyła ponownie odpowiedzi do klienta.</span><span class="sxs-lookup"><span data-stu-id="731fa-110">For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client.</span></span> <span data-ttu-id="731fa-111">Jeśli <xref:System.ServiceModel.Channels.RequestContext> jest `null` nieoczekiwanie, sprawdź najpierw czy kontrakt operacji IsOneWay.</span><span class="sxs-lookup"><span data-stu-id="731fa-111">So if the <xref:System.ServiceModel.Channels.RequestContext> is `null` unexpectedly, check first whether the operation contract is IsOneWay.</span></span>  
  
 <span data-ttu-id="731fa-112">Specjalna uwaga dla użytkowników zarządzanych C++ wynikające z tej klasy:</span><span class="sxs-lookup"><span data-stu-id="731fa-112">Special note for Managed C++ users deriving from this class:</span></span>  
  
-   <span data-ttu-id="731fa-113">Umieść programu Oczyszczanie kod w (włączone) (Rozpocznij) Zamknij (i/lub OnAbort), nie w destruktora.</span><span class="sxs-lookup"><span data-stu-id="731fa-113">Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</span></span>  
  
-   <span data-ttu-id="731fa-114">Unikaj destruktory: spowodują one kompilatora automatycznie wygenerować <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="731fa-114">Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable>.</span></span>  
  
-   <span data-ttu-id="731fa-115">Unikaj-reference elementów członkowskich: spowodują kompilatora automatycznie wygenerować <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="731fa-115">Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable>.</span></span>  
  
-   <span data-ttu-id="731fa-116">Należy unikać finalizatorów; ale przeprowadzenie jedną ma pomijać ostrzeżeń kompilacji i wywołanie <xref:System.GC.SuppressFinalize%28System.Object%29> i finalizator się (włączone) (Rozpocznij) Zamknij (i/lub OnAbort) emulować, jakie byłyby generowanych automatycznie <xref:System.IDisposable> zachowanie.</span><span class="sxs-lookup"><span data-stu-id="731fa-116">Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RequestContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RequestContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="731fa-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.RequestContext" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.RequestContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Abort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="requestContext.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="731fa-118">W przypadku przesłonięcia w klasie pochodnej, przerwanie przetwarzania żądania skojarzony z kontekstem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-118">When overridden in a derived class, aborts processing the request associated with the context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReply">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="731fa-119">Rozpoczyna operację asynchroniczną na udzielenie odpowiedzi na żądanie skojarzone z bieżącego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-119">Begins an asynchronous operation to reply to the request associated with the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="731fa-120">Operacja asynchroniczna jest dostępne z lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="731fa-120">The asynchronous operation is available with or without an explicit time-out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReply">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReply(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginReply(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReply : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="requestContext.BeginReply (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="731fa-121">Przychodzący <see cref="T:System.ServiceModel.Channels.Message" /> zawierający żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-121">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="731fa-122">
            <see cref="T:System.AsyncCallback" /> Delegata, który otrzyma powiadomienie o ukończeniu operacji asynchronicznej odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="731fa-123">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z operacji asynchronicznych odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-123">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="731fa-124">W przypadku przesłonięcia w klasie pochodnej, rozpoczyna operację asynchroniczną na udzielenie odpowiedzi na żądanie skojarzone z bieżącego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-124">When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="731fa-125">
            <see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchronicznego odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="731fa-126">Użycie asynchronicznego <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> metodą podczas przetwarzania aplikacji należy kontynuować bez oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="731fa-126">Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting.</span></span> <span data-ttu-id="731fa-127">Użyj jednej z synchronicznego <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> metod, gdy nie jest możliwa do bieżącego wątku zablokowanie, gdy w odpowiedzi na komunikat żądania lub dopóki nie zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="731fa-127">Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</span></span>  
  
 <span data-ttu-id="731fa-128">Ta metoda otrzymuje powiadomienie, poprzez wywołanie zwrotne, tożsamości programu obsługi zdarzeń dla tej operacji.</span><span class="sxs-lookup"><span data-stu-id="731fa-128">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="731fa-129">Operacja nie jest pełną, aż do odpowiedź jest wysyłana lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="731fa-129">The operation is not complete until either the reply is sent or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="731fa-130">
            <para>Operacja zgłasza <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony przed zakończeniem działania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-130">
              <para>The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginReply">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReply(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginReply(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReply : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="requestContext.BeginReply (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="731fa-131">Przychodzący <see cref="T:System.ServiceModel.Channels.Message" /> zawierający żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-131">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="731fa-132">
            <see cref="T:System.TimeSpan" /> , Która określa czas oczekiwania na odpowiedź na żądanie dostępne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to an available request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="731fa-133">
            <see cref="T:System.AsyncCallback" /> Delegata, który otrzyma powiadomienie o ukończeniu operacji asynchronicznej odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-133">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="731fa-134">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z operacji asynchronicznych odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-134">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="731fa-135">W przypadku przesłonięcia w klasie pochodnej, rozpoczyna operację asynchroniczną na udzielenie odpowiedzi na żądanie skojarzone z bieżącego kontekstu w określonym interwale czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-135">When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="731fa-136">
            <see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchronicznego odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-136">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="731fa-137">Użycie asynchronicznego <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> metodę, aby zezwolić na przetwarzanie aplikacji kontynuować bez oczekiwania na żądanie zakończyć.</span><span class="sxs-lookup"><span data-stu-id="731fa-137">Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method to allow the application processing to continue without waiting for the request to complete.</span></span>  
  
 <span data-ttu-id="731fa-138">Użyj jednej z synchronicznego <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> metod, gdy nie jest możliwa do bieżącego wątku zablokowanie, gdy w odpowiedzi na komunikat żądania lub dopóki nie zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="731fa-138">Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</span></span> <span data-ttu-id="731fa-139">Ta metoda otrzymuje powiadomienie, poprzez wywołanie zwrotne, tożsamości programu obsługi zdarzeń dla tej operacji.</span><span class="sxs-lookup"><span data-stu-id="731fa-139">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="731fa-140">Operacja nie jest pełną, aż do odpowiedź jest wysyłana lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="731fa-140">The operation is not complete until either the reply is sent or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="731fa-141">
            <para>Operacja zgłasza <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony przed zakończeniem działania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-141">
              <para>The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="731fa-142">Zamyka operację, która jest podczas odpowiadania na kontekst żądania skojarzonego z bieżącego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-142">Closes the operation that is replying to the request context associated with the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="requestContext.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="731fa-143">W przypadku przesłonięcia w klasie pochodnej, zamyka operację, która jest podczas odpowiadania na kontekst żądania skojarzonego z bieżącego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-143">When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="requestContext.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="731fa-144">
            <see cref="T:System.TimeSpan" /> , Który określa przedział czasu, w którym należy zamknąć operacji odpowiedzi skojarzone z bieżącego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-144">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the reply operation associated with the current context must close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="731fa-145">W przypadku przesłonięcia w klasie pochodnej, zamyka operację, która jest podczas odpowiadania na kontekst żądania skojarzony z bieżącego kontekstu w określonym interwale czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-145">When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="731fa-146">
            <para>Operacja powinien zgłosić <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony przed zakończeniem działania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-146">
              <para>The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="requestContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="731fa-147">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-147">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="731fa-148">Zwalnia zasoby skojarzone z kontekstem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-148">Releases resources associated with the context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReply">
      <MemberSignature Language="C#" Value="public abstract void EndReply (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReply(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndReply (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndReply(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReply : IAsyncResult -&gt; unit" Usage="requestContext.EndReply result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="731fa-149">
            <see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do jednego z <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-149">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="731fa-150">W przypadku przesłonięcia w klasie pochodnej, kończy operację asynchroniczną na udzielenie odpowiedzi na komunikat żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-150">When overridden in a derived class, completes an asynchronous operation to reply to a request message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reply">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="731fa-151">Odpowiedzi na komunikat żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-151">Replies to a request message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public abstract void Reply (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reply(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Reply : System.ServiceModel.Channels.Message -&gt; unit" Usage="requestContext.Reply message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="731fa-152">Przychodzący <see cref="T:System.ServiceModel.Channels.Message" /> zawierający żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-152">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="731fa-153">W przypadku przesłonięcia w klasie pochodnej, odpowiedzi na komunikat żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-153">When overridden in a derived class, replies to a request message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="731fa-154">Użyj <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> gdy jest akceptowalne dla bieżącego wątku zablokowanie, gdy zostanie wysłana odpowiedź na komunikat żądania.</span><span class="sxs-lookup"><span data-stu-id="731fa-154">Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message.</span></span> <span data-ttu-id="731fa-155">Wątek jest zablokowana w górę do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="731fa-155">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="731fa-156">Jeśli przetwarzanie aplikacji należy kontynuować bez oczekiwania na odpowiedź zakończyć, użycie asynchronicznego <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="731fa-156">If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method.</span></span> <span data-ttu-id="731fa-157">Ta metoda otrzymuje powiadomienie, poprzez wywołanie zwrotne, tożsamości programu obsługi zdarzeń dla tej operacji.</span><span class="sxs-lookup"><span data-stu-id="731fa-157">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="731fa-158">Operacja nie jest pełną, aż do komunikat o stanie się dostępny w kanale lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="731fa-158">The operation is not complete until either a message becomes available in the channel or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public abstract void Reply (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reply(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Reply : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="requestContext.Reply (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="731fa-159">Przychodzący <see cref="T:System.ServiceModel.Channels.Message" /> zawierający żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-159">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="731fa-160">
            <see cref="T:System.TimeSpan" /> , Która określa czas oczekiwania na odpowiedź na żądanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-160">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to a request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="731fa-161">W przypadku przesłonięcia w klasie pochodnej, odpowiedzi na komunikat żądania w określonym interwale czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-161">When overridden in a derived class, replies to a request message within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="731fa-162">Użyj <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> gdy jest akceptowalne dla bieżącego wątku zablokowanie, gdy zostanie wysłana odpowiedź na komunikat żądania.</span><span class="sxs-lookup"><span data-stu-id="731fa-162">Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message.</span></span> <span data-ttu-id="731fa-163">Wątek jest zablokowana w górę do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="731fa-163">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="731fa-164">Jeśli przetwarzanie aplikacji należy kontynuować bez oczekiwania na odpowiedź zakończyć, użycie asynchronicznego <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="731fa-164">If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method.</span></span> <span data-ttu-id="731fa-165">Ta metoda otrzymuje powiadomienie, poprzez wywołanie zwrotne, tożsamości programu obsługi zdarzeń dla tej operacji.</span><span class="sxs-lookup"><span data-stu-id="731fa-165">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="731fa-166">Operacja nie jest pełną, aż do komunikat o stanie się dostępny w kanale lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="731fa-166">The operation is not complete until either a message becomes available in the channel or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message RequestMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Message RequestMessage" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.RequestContext.RequestMessage" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequestMessage As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::Message ^ RequestMessage { System::ServiceModel::Channels::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestMessage : System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.RequestContext.RequestMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="731fa-167">W przypadku przesłonięcia w klasie pochodnej pobiera komunikat, który zawiera żądanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-167">When overridden in a derived class, gets the message that contains the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="731fa-168">
            <see cref="T:System.ServiceModel.Channels.Message" /> Zawierający żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-168">The <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="731fa-169">Zwalnia zasoby zarządzane i niezarządzane skojarzony z kontekstem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="731fa-169">Releases both managed and unmanaged resources associated with the context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>