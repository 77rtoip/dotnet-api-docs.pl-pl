<Type Name="IInputChannel" FullName="System.ServiceModel.Channels.IInputChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2dc8466a0eab8c4b6523c6cb4479b1a0fc8a7363" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69155801" /></Metadata><TypeSignature Language="C#" Value="public interface IInputChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInputChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IInputChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInputChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInputChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IInputChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f9cc1-101">Definiuje interfejs, który kanał musi zaimplementować, aby odebrać komunikat.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-101">Defines the interface that a channel must implement to receive a message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="f9cc1-102"><xref:System.ServiceModel.Channels.IInputChannel> Kontrakt obejmuje synchroniczną i asynchroniczną odmianę funkcji Receive, try-to-Receive i oczekiwanie na komunikaty.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-102">The <xref:System.ServiceModel.Channels.IInputChannel> contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.</span></span>  
  
 <span data-ttu-id="f9cc1-103">Model ściągania jest zazwyczaj <xref:System.ServiceModel.Channels.IInputChannel> używany do odbierania komunikatów: wywoływany <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> ("ściągający" komunikat z kanału), a następnie poczekaj na nadejście komunikatu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-103">The pull model is used typically with an <xref:System.ServiceModel.Channels.IInputChannel> to receive messages: you call <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> (to "pull" a message out of the channel) and then wait for a message to arrive.</span></span> <span data-ttu-id="f9cc1-104">Alternatywnym wzorcem użycia jest wywołanie <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> metody <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>lub, a następnie <xref:System.ServiceModel.Channels.IInputChannel.Receive%28System.TimeSpan%29>wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-104">An alternative usage pattern is to call <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> or <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>, and then call <xref:System.ServiceModel.Channels.IInputChannel.Receive%28System.TimeSpan%29>.</span></span> <span data-ttu-id="f9cc1-105">Takie podejście jest typowe w przypadku transakcyjnych zastosowań, w których rozpoczęto transakcję między <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> wywołaniami do i <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-105">This approach is common for transactional usages where you start the transaction between the calls to <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> and <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span>  
  
 <span data-ttu-id="f9cc1-106"><xref:System.ServiceModel.Channels.IInputChannel> Nie musi być powiązane z pojedynczym nadawcą.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-106">An <xref:System.ServiceModel.Channels.IInputChannel> is not necessarily bound to a single sender.</span></span> <span data-ttu-id="f9cc1-107">Inne kanały i interfejsy kanałów mogą zapewnić korelację między określonymi nadawcami a <xref:System.ServiceModel.Channels.IInputChannel>, ale kontrakt podstawowy nie ma takich ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-107">Other channels and channel interfaces can provide a correlation between particular senders and an <xref:System.ServiceModel.Channels.IInputChannel>, but the base contract makes no such restriction.</span></span> <span data-ttu-id="f9cc1-108">Implementacja może utworzyć nową <xref:System.ServiceModel.Channels.IInputChannel> dla każdego komunikatu lub użyć <xref:System.ServiceModel.Channels.IInputChannel> jej ponownie dla wielu komunikatów i nadawców.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-108">An implementation can create a new <xref:System.ServiceModel.Channels.IInputChannel> for each message or reuse the same <xref:System.ServiceModel.Channels.IInputChannel> for multiple messages and senders.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginReceive">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9cc1-109">Rozpoczyna asynchroniczne operacje odbierania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-109">Begins an asynchronous receive operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-110">Użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> , jeśli chcesz, aby przetwarzanie aplikacji było kontynuowane bez oczekiwania na odebranie żądania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-110">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span> <span data-ttu-id="f9cc1-111">Użyj metody synchronicznej <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> , gdy jest akceptowalny do zablokowania bieżącego wątku do momentu odebrania komunikatu żądania lub przekroczenia przedziału `timeout` czasu określonego przez.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-111">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until the request message is received or the interval of time specified by the `timeout` has been exceeded.</span></span> <span data-ttu-id="f9cc1-112">Operacja asynchroniczna jest dostępna z niejawnym limitem czasu lub bez niego.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-112">The asynchronous operation is available with or without an explicit timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceive(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReceive : AsyncCallback * obj -&gt; IAsyncResult" Usage="iInputChannel.BeginReceive (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="f9cc1-113"><see cref="T:System.AsyncCallback" /> Delegat, który odbiera powiadomienie o ukończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-113">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="f9cc1-114">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z operacją asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-114">An object, specified by the application, that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="f9cc1-115">Rozpoczyna operację asynchroniczną, aby odebrać komunikat z obiektem stanu skojarzonym z nim.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-115">Begins an asynchronous operation to receive a message that has a state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-116"><see cref="T:System.IAsyncResult" /> Odwołujący się do odbierania komunikatów asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-116">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message reception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-117">Użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> , jeśli chcesz, aby przetwarzanie aplikacji było kontynuowane bez oczekiwania na odebranie żądania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-117">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span> <span data-ttu-id="f9cc1-118">Użyj metody synchronicznej <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> , gdy jest akceptowalny do zablokowania bieżącego wątku do momentu odebrania komunikatu żądania lub przekroczenia przedziału `timeout` czasu określonego przez.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-118">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until the request message is received or the interval of time specified by the `timeout` has been exceeded.</span></span> <span data-ttu-id="f9cc1-119">Operacja asynchroniczna jest dostępna z niejawnym limitem czasu lub bez niego.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-119">The asynchronous operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="f9cc1-120">Ta metoda odbiera powiadomienie przez wywołanie zwrotne tożsamości programu obsługi zdarzeń dla operacji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-120">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="f9cc1-121">Operacja nie zostanie ukończona, dopóki wiadomość nie zostanie udostępniona w kanale.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-121">The operation is not complete until a message becomes available in the channel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9cc1-122">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-122">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReceive : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInputChannel.BeginReceive (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f9cc1-123"><see cref="T:System.TimeSpan" /> Określa interwał czasu oczekiwania na udostępnienie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-123">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for a message to become available.</span></span></param>
        <param name="callback"><span data-ttu-id="f9cc1-124"><see cref="T:System.AsyncCallback" /> Delegat, który odbiera powiadomienie o ukończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-124">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="f9cc1-125">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z operacją asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-125">An object, specified by the application, that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="f9cc1-126">Rozpoczyna operację asynchroniczną, aby odebrać komunikat, który ma określony limit czasu i skojarzony z nim obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-126">Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-127"><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji odbierania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-127">The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-128">Użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> , jeśli chcesz, aby przetwarzanie aplikacji było kontynuowane bez oczekiwania na odebranie żądania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-128">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span> <span data-ttu-id="f9cc1-129">Użyj metody synchronicznej <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> , gdy jest akceptowalny do zablokowania bieżącego wątku do momentu odebrania komunikatu żądania lub przekroczenia przedziału `timeout` czasu określonego przez.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-129">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until the request message is received or the interval of time specified by the `timeout` has been exceeded.</span></span> <span data-ttu-id="f9cc1-130">Operacja asynchroniczna jest dostępna z niejawnym limitem czasu lub bez niego.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-130">The asynchronous operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="f9cc1-131">Operacja nie zostanie ukończona, dopóki wiadomość nie zostanie udostępniona w kanale lub upłynie limit czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-131">The operation is not complete until either a message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9cc1-132">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-132">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="f9cc1-133">Określony <paramref name="timeout" /> limit został przekroczony przed ukończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-133">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9cc1-134">Określony limit czasu jest mniejszy od zera.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-134">The timeout specified is less than zero.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f9cc1-135">Operacja zgłasza <see cref="T:System.TimeoutException" /> wyjątek, jeśli określony <paramref name="timeout" /> zostanie przekroczony przed ukończeniem.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-135">The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginTryReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTryReceive (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTryReceive(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTryReceive (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTryReceive(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryReceive : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInputChannel.BeginTryReceive (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f9cc1-136"><see cref="T:System.TimeSpan" /> Określa interwał czasu oczekiwania na udostępnienie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-136">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for a message to become available.</span></span></param>
        <param name="callback"><span data-ttu-id="f9cc1-137"><see cref="T:System.AsyncCallback" /> Delegat, który odbiera powiadomienie o ukończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-137">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="f9cc1-138">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z operacją asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-138">An object, specified by the application, that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="f9cc1-139">Rozpoczyna operację asynchroniczną, aby odebrać komunikat, który ma określony limit czasu i skojarzony z nim obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-139">Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-140"><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji odbierania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-140">The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-141">Użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> , jeśli chcesz, aby przetwarzanie aplikacji było kontynuowane bez oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-141">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method when you want the application processing to continue without waiting.</span></span> <span data-ttu-id="f9cc1-142">Użyj metody synchronicznej <xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29> , gdy jest akceptowalny do zablokowania bieżącego wątku podczas odpowiedzi na komunikat żądania lub do momentu przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-142">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29> method when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.</span></span>  
  
 <span data-ttu-id="f9cc1-143">Operacja nie zostanie ukończona, dopóki wiadomość nie zostanie udostępniona w kanale lub zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-143">The operation is not complete until either a message becomes available in the channel or the timeout occurs.</span></span>  
  
 <span data-ttu-id="f9cc1-144">Jeśli zamierzasz obsługiwać limity czasu i nie tylko ponownie zgłosić lub otoczyćsz <xref:System.TimeoutException>, należy wywołać <xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> zamiast <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-144">If you are going to handle timeouts and not just re-throw or wrap the <xref:System.TimeoutException>, then you should call <xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> instead of <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="f9cc1-145">Jeśli nie chcesz traktować przekroczeń limitu czasu <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>, w przeciwnym razie utracisz informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-145">If you are not going to treat timeouts specially then just call <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>, otherwise you lose error information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9cc1-146">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-146">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="f9cc1-147">Określony <paramref name="timeout" /> limit został przekroczony przed ukończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-147">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9cc1-148">Określony limit czasu jest mniejszy od zera.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-148">The timeout specified is less than zero.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f9cc1-149">Operacja wraca <see langword="false" /> z w <see cref="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)" /> przypadku przekroczenia określonego. <paramref name="timeout" /></span><span class="sxs-lookup"><span data-stu-id="f9cc1-149">The operation returns <see langword="false" /> from <see cref="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForMessage">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForMessage (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForMessage(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForMessage (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForMessage(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForMessage : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInputChannel.BeginWaitForMessage (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f9cc1-150"><see cref="T:System.TimeSpan" /> Określa interwał czasu oczekiwania na udostępnienie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-150">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for a message to become available.</span></span></param>
        <param name="callback"><span data-ttu-id="f9cc1-151"><see cref="T:System.AsyncCallback" /> Delegat, który odbiera powiadomienie o ukończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-151">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="f9cc1-152">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z operacją asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-152">An object, specified by the application, that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="f9cc1-153">Rozpoczyna asynchroniczne operacje oczekiwania na zakończenie dla komunikatu do odebrania, które ma określony limit czasu i skojarzony z nim obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-153">Begins an asynchronous wait-for-a-message-to-arrive operation that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-154"><see cref="T:System.IAsyncResult" /> Odwołuje się do operacji asynchronicznej, aby poczekać na nadejście komunikatu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-154">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to wait for a message to arrive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-155">Użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> , jeśli chcesz, aby przetwarzanie aplikacji było kontynuowane bez oczekiwania na nadejście komunikatu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-155">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method if you need the application processing to continue without waiting for the message to arrive.</span></span> <span data-ttu-id="f9cc1-156">Użyj metody synchronicznej <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> , gdy jest akceptowalny do zablokowania bieżącego wątku podczas oczekiwania na nadejście komunikatu w kolejce.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-156">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> method when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="f9cc1-157">Wątek jest blokowany do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-157">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="f9cc1-158">Ta metoda odbiera powiadomienie przez wywołanie zwrotne tożsamości programu obsługi zdarzeń dla operacji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-158">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="f9cc1-159">Operacja nie zostanie ukończona, dopóki wiadomość nie zostanie udostępniona w kanale lub upłynie limit czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-159">The operation is not complete until either a message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9cc1-160">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-160">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="f9cc1-161">Określony <paramref name="timeout" /> limit został przekroczony przed ukończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-161">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9cc1-162">Określony limit czasu jest mniejszy od zera.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-162">The timeout specified is less than zero.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f9cc1-163">Operacja zwraca <see langword="false" /> w przypadku przekroczenia określonego <paramref name="timeout" /> limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-163">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded, not a timeout exception.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndReceive (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndReceive(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndReceive(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReceive : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="iInputChannel.EndReceive result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="f9cc1-164">Zwracany przez wywołanie jednej <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> z metod. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="f9cc1-164">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> methods.</span></span></param>
        <summary><span data-ttu-id="f9cc1-165">Kończy operację asynchroniczną w celu odebrania komunikatu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-165">Completes an asynchronous operation to receive a message.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-166"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-166">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9cc1-167">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-167">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryReceive">
      <MemberSignature Language="C#" Value="public bool EndTryReceive (IAsyncResult result, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndTryReceive(class System.IAsyncResult result, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTryReceive (result As IAsyncResult, ByRef message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndTryReceive(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="abstract member EndTryReceive : IAsyncResult *  -&gt; bool" Usage="iInputChannel.EndTryReceive (result, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="f9cc1-168">Zwracany przez wywołanie <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />metody. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="f9cc1-168">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <param name="message"><span data-ttu-id="f9cc1-169"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-169">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></param>
        <summary><span data-ttu-id="f9cc1-170">Kończy określoną operację asynchroniczną w celu odebrania komunikatu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-170">Completes the specified asynchronous operation to receive a message.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-171"><see langword="true" />Jeśli wiadomość zostanie odebrana przed upływem określonego interwału czasu; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-171"><see langword="true" /> if a message is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9cc1-172">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-172">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForMessage">
      <MemberSignature Language="C#" Value="public bool EndWaitForMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForMessage (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndWaitForMessage(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForMessage : IAsyncResult -&gt; bool" Usage="iInputChannel.EndWaitForMessage result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="f9cc1-173"><see cref="T:System.IAsyncResult" /> Identyfikujeoperacjędozakończeniaizktórejma<see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> zostać pobrany wynik końcowy.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-173">The <see cref="T:System.IAsyncResult" /> that identifies the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> operation to finish, and from which to retrieve an end result.</span></span></param>
        <summary><span data-ttu-id="f9cc1-174">Kończy określoną operację asynchronicznego oczekiwania na komunikat.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-174">Completes the specified asynchronous wait-for-a-message operation.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-175"><see langword="true" />Jeśli komunikat dotarł przed <paramref name="timeout" /> przekroczeniem limitu, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f9cc1-175"><see langword="true" /> if a message has arrived before the <paramref name="timeout" /> has been exceeded; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9cc1-176">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-176">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IInputChannel.LocalAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ LocalAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IInputChannel.LocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9cc1-177">Pobiera adres, na którym kanał wejściowy odbiera komunikaty.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-177">Gets the address on which the input channel receives messages.</span></span></summary>
        <value><span data-ttu-id="f9cc1-178"><see cref="T:System.ServiceModel.EndpointAddress" /> Na którym kanale wejściowym odbiera komunikaty.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-178">The <see cref="T:System.ServiceModel.EndpointAddress" /> on which the input channel receives messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-179">Jeśli ten kanał wejściowy nie ma adresu autonomicznego (na przykład po stronie wejściowej kanału TCP zainicjowanego przez klienta), ta właściwość jest `null`.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-179">If this input channel does not have a standalone address (for example, it is the input-side of a client-initiated TCP channel), then this property is `null`.</span></span>  
  
 <span data-ttu-id="f9cc1-180">Ta właściwość może być używana przez kanały wyższego poziomu na potrzeby korelacji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-180">This property can be used by higher-level channels for correlation purposes.</span></span> <span data-ttu-id="f9cc1-181">Na przykład, jeśli kanał wyższego poziomu implementuje żądanie-odpowiedź na górze <xref:System.ServiceModel.Channels.IDuplexChannel>, może <xref:System.ServiceModel.Channels.IInputChannel.LocalAddress%2A> użyć właściwości w nagłówku ReplyTo WS-Addressing.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-181">For example, if a higher-level channel implements request-reply on top of a <xref:System.ServiceModel.Channels.IDuplexChannel>, it can use the <xref:System.ServiceModel.Channels.IInputChannel.LocalAddress%2A> property in the WS-Addressing ReplyTo header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9cc1-182">Poniższy kod ilustruje sposób implementacji tej właściwości:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-182">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Receive">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="f9cc1-183">Operacja nie została ukończona z interwałem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-183">The operation did not complete with the timeout interval.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="f9cc1-184">Kanał wejściowy nie powiódł się.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-184">The input channel failed.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException"><span data-ttu-id="f9cc1-185">Kanał wejściowy został przerwany.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-185">The input channel has been aborted.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="f9cc1-186">Błąd kanału wejściowego.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-186">The input channel faulted.</span></span></exception>
        <summary><span data-ttu-id="f9cc1-187">Zwraca komunikat otrzymany przez kanał wejściowy, jeśli jest dostępny z przedziałem czasu, który jest jawnie lub niejawnie zdefiniowany.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-187">Returns a message received by the input channel, if one is available with an interval of time that is explicitly or implicitly defined.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-188">Użyj metody synchronicznej <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> , gdy jest akceptowalny do zablokowania bieżącego wątku do momentu odebrania komunikatu żądania lub przekroczenia przedziału `timeout`czasu określonego przez.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-188">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until it receives the request message or exceeds the interval of time specified by `timeout`.</span></span> <span data-ttu-id="f9cc1-189">Użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> , gdy potrzebujesz, aby przetwarzanie aplikacji było kontynuowane bez oczekiwania na odebranie żądania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-189">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you need the application processing to continue without waiting for the request to be received.</span></span>  
  
 <span data-ttu-id="f9cc1-190">Operacja synchroniczna <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> jest dostępna z niejawnym limitem czasu lub bez niego.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-190">The synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="f9cc1-191">Jeśli komunikat nie jest dostępny, jest blokowany do momentu udostępnienia lub do momentu przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-191">If a message is not available, it blocks until one is available or until the timeout is exceeded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Receive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Receive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.Receive" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Receive();" />
      <MemberSignature Language="F#" Value="abstract member Receive : unit -&gt; System.ServiceModel.Channels.Message" Usage="iInputChannel.Receive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9cc1-192">Zwraca otrzymany komunikat, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-192">Returns the message received, if one is available.</span></span> <span data-ttu-id="f9cc1-193">Jeśli komunikat nie jest dostępny, bloki dla domyślnego interwału czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-193">If a message is not available, blocks for a default interval of time.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-194"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-194">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-195">Użyj metody synchronicznej <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> , gdy jest akceptowalny do zablokowania bieżącego wątku do momentu odebrania komunikatu żądania lub przekroczenia przedziału `timeout`czasu określonego przez.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-195">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until it receives the request message or exceeds the interval of time specified by `timeout`.</span></span> <span data-ttu-id="f9cc1-196">Użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> , jeśli chcesz, aby przetwarzanie aplikacji było kontynuowane bez oczekiwania na odebranie żądania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-196">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span>  
  
 <span data-ttu-id="f9cc1-197">Operacja synchroniczna <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> jest dostępna z niejawnym limitem czasu lub bez niego.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-197">The synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="f9cc1-198">Jeśli komunikat nie jest dostępny, jest blokowany do momentu udostępnienia lub do momentu przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-198">If a message is not available, it blocks until one is available or until the timeout is exceeded.</span></span>  
  
 <span data-ttu-id="f9cc1-199"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>może być wywoływana wiele razy lub współbieżnie.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-199"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="f9cc1-200">Dla każdego <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> odebranego komunikatu można wykonać tylko jedno wywołanie.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-200">Only one <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> call can complete for each message received.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9cc1-201">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-201">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Receive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Receive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Receive(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Receive : TimeSpan -&gt; System.ServiceModel.Channels.Message" Usage="iInputChannel.Receive timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f9cc1-202">Określa, jak długo operacja odbierania musi zakończyć się przed upływem limitu czasu i <see cref="T:System.TimeoutException" />wyrzucając. <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="f9cc1-202">The <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out and throwing a <see cref="T:System.TimeoutException" />.</span></span></param>
        <summary><span data-ttu-id="f9cc1-203">Zwraca otrzymany komunikat, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-203">Returns the message received, if one is available.</span></span> <span data-ttu-id="f9cc1-204">Jeśli komunikat nie jest dostępny, bloki w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-204">If a message is not available, blocks for a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-205"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-205">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-206">Użyj metody synchronicznej <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> , gdy jest akceptowalny do zablokowania bieżącego wątku do momentu odebrania komunikatu żądania lub przekroczenia przedziału `timeout`czasu określonego przez.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-206">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until it receives the request message or exceeds the interval of time specified by `timeout`.</span></span> <span data-ttu-id="f9cc1-207">Użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> , jeśli chcesz, aby przetwarzanie aplikacji było kontynuowane bez oczekiwania na odebranie żądania.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-207">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span>  
  
 <span data-ttu-id="f9cc1-208">Operacja synchroniczna <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> jest dostępna z niejawnym limitem czasu lub bez niego.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-208">The synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="f9cc1-209">Jeśli komunikat nie jest dostępny, jest blokowany do momentu udostępnienia lub do momentu przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-209">If a message is not available, it blocks until one is available or until the timeout is exceeded.</span></span>  
  
 <span data-ttu-id="f9cc1-210"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>może być wywoływana wiele razy lub współbieżnie.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-210"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="f9cc1-211">Dla każdego <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> odebranego komunikatu można wykonać tylko jedno wywołanie.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-211">Only one <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> call can complete for each message received.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9cc1-212">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-212">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="f9cc1-213">Określony <paramref name="timeout" /> limit został przekroczony przed ukończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-213">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9cc1-214">Określony limit czasu jest mniejszy od zera.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-214">The timeout specified is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (TimeSpan timeout, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(valuetype System.TimeSpan timeout, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (timeout As TimeSpan, ByRef message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReceive(TimeSpan timeout, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="abstract member TryReceive : TimeSpan *  -&gt; bool" Usage="iInputChannel.TryReceive (timeout, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f9cc1-215">Zwracany przez wywołanie jednej <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> z metod. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="f9cc1-215">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> methods.</span></span></param>
        <param name="message"><span data-ttu-id="f9cc1-216"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-216">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></param>
        <summary><span data-ttu-id="f9cc1-217">Próbuje odebrać komunikat w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-217">Tries to receive a message within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-218"><see langword="true" />Jeśli komunikat zostanie odebrany przed <paramref name="timeout" /> przekroczeniem limitu, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f9cc1-218"><see langword="true" /> if a message is received before the <paramref name="timeout" /> has been exceeded; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-219">Jeśli zamierzasz obsługiwać limity czasu i nie tylko ponownie zgłosić lub otoczyćsz <xref:System.TimeoutException>, należy wywołać <xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29> zamiast <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-219">If you are going to handle timeouts and not just re-throw or wrap the <xref:System.TimeoutException>, then you should call <xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29> instead of <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span>  
  
 <span data-ttu-id="f9cc1-220">Jeśli nie chcesz traktować przekroczeń limitu czasu, wystarczy wywołać <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>polecenie, w przeciwnym razie utracisz informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-220">If you are not going to treat timeouts specially then just call <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>, otherwise you will lose error information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9cc1-221">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-221">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="f9cc1-222">Określony <paramref name="timeout" /> limit został przekroczony przed ukończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-222">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9cc1-223">Określony limit czasu jest mniejszy od zera.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-223">The timeout specified is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForMessage">
      <MemberSignature Language="C#" Value="public bool WaitForMessage (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForMessage(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForMessage (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForMessage(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitForMessage : TimeSpan -&gt; bool" Usage="iInputChannel.WaitForMessage timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f9cc1-224"><see cref="T:System.TimeSpan" /> Określa maksymalny interwał czasu oczekiwania na nadejście komunikatu przed upływem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-224">The <see cref="T:System.TimeSpan" /> specifies the maximum interval of time to wait for a message to arrive before timing out.</span></span></param>
        <summary><span data-ttu-id="f9cc1-225">Zwraca wartość wskazującą, czy wiadomość dotarła w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-225">Returns a value that indicates whether a message has arrived within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="f9cc1-226"><see langword="true" />Jeśli komunikat dotarł przed <paramref name="timeout" /> przekroczeniem limitu, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f9cc1-226"><see langword="true" /> if a message has arrived before the <paramref name="timeout" /> has been exceeded; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9cc1-227">Wywołanie <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> nie powoduje, że komunikat jest odbierany lub przetwarzany w inny sposób.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-227">Calling <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> does not result in a message being received or processed in any other way.</span></span>  
  
 <span data-ttu-id="f9cc1-228"><xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> Metoda istnieje głównie dla scenariuszy transakcyjnych, w których użytkownik chce otrzymać komunikat przy użyciu transakcji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-228">The <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> method exists primarily for transacted scenarios where the user wants to receive the message using a transaction.</span></span> <span data-ttu-id="f9cc1-229">W przypadku użycia <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> zwykle w tym celu użytkownik musi utworzyć transakcję, a następnie wywołać <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> i nadzieję, że wiadomość dociera przed upływem limitu czasu transakcji, co może być niemożliwe.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-229">When using just <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> normally for this, the user must create the transaction and then call <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and hope the message arrives before the transaction times out, which may not be possible.</span></span>  
  
 <span data-ttu-id="f9cc1-230">Zamiast tego użytkownik może nawiązać <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> połączenie z dowolnym przekroczeniem limitu czasu (nawet nieskończonym), a następnie po nadejściu wiadomości może otworzyć transakcję <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> , wywołać i upewnić się, że mogą oni otrzymać komunikat z powrotem przed wygaśnięciem transakcji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-230">Instead, the user can call <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> with whatever time out they want (even infinite), then when a message arrives they can open the transaction, call <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and be confident that they can get the message back before the transaction expires.</span></span>  
  
 <span data-ttu-id="f9cc1-231">Ta metoda jest synchroniczna, dlatego blokuje bieżący wątek do momentu dostępności komunikatu lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-231">This method is synchronous, so it blocks the current thread until a message is available or the time out occurs.</span></span> <span data-ttu-id="f9cc1-232">Użyj <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> , gdy jest akceptowalny do zablokowania bieżącego wątku podczas oczekiwania na nadejście komunikatu w kolejce.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-232">Use <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="f9cc1-233">Wątek jest blokowany do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-233">The thread is blocked up to the specified `timeout`.</span></span> <span data-ttu-id="f9cc1-234">Aby przetwarzanie aplikacji było kontynuowane bez oczekiwania, użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> .</span><span class="sxs-lookup"><span data-stu-id="f9cc1-234">If you need the application processing to continue without waiting, use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9cc1-235">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="f9cc1-235">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="f9cc1-236">Określony <paramref name="timeout" /> limit został przekroczony przed ukończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-236">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9cc1-237">Określony limit czasu jest mniejszy od zera.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-237">The timeout specified is less than zero.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f9cc1-238">Operacja zwraca <see langword="false" /> w przypadku przekroczenia określonego <paramref name="timeout" /> limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f9cc1-238">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded, not a timeout exception.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
