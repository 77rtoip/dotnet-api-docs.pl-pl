<Type Name="IInputChannel" FullName="System.ServiceModel.Channels.IInputChannel">
  <TypeSignature Language="C#" Value="public interface IInputChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInputChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IInputChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInputChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInputChannel : System::ServiceModel::Channels::IChannel" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1e554-101">Definiuje interfejs, który kanał musi implementować można odebrać wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-101">Defines the interface that a channel must implement to receive a message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-102"><xref:System.ServiceModel.Channels.IInputChannel> Umowa obejmuje synchroniczne i asynchroniczne wariantów Receive, spróbuj odbierania i oczekiwania na wiadomość funkcje.</span><span class="sxs-lookup"><span data-stu-id="1e554-102">The <xref:System.ServiceModel.Channels.IInputChannel> contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.</span></span>  
  
 <span data-ttu-id="1e554-103">Model polegający na ściąganiu jest zwykle używany z <xref:System.ServiceModel.Channels.IInputChannel> do odbierania wiadomości: należy wywołać <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> (aby "pull" komunikat poza kanału) i poczekaj na odbierane wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-103">The pull model is used typically with an <xref:System.ServiceModel.Channels.IInputChannel> to receive messages: you call <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> (to "pull" a message out of the channel) and then wait for a message to arrive.</span></span> <span data-ttu-id="1e554-104">Wzorca użycia alternatywnych jest wywołanie <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> lub <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>, a następnie wywołać <xref:System.ServiceModel.Channels.IInputChannel.Receive%28System.TimeSpan%29>.</span><span class="sxs-lookup"><span data-stu-id="1e554-104">An alternative usage pattern is to call <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> or <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>, and then call <xref:System.ServiceModel.Channels.IInputChannel.Receive%28System.TimeSpan%29>.</span></span> <span data-ttu-id="1e554-105">Takie podejście jest typowe dla transakcyjnego użycia miejsca rozpoczęcia transakcji między wywołań <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> i <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e554-105">This approach is common for transactional usages where you start the transaction between the calls to <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> and <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span>  
  
 <span data-ttu-id="1e554-106"><xref:System.ServiceModel.Channels.IInputChannel> Niekoniecznie nie jest powiązany z jednego nadawcy.</span><span class="sxs-lookup"><span data-stu-id="1e554-106">An <xref:System.ServiceModel.Channels.IInputChannel> is not necessarily bound to a single sender.</span></span> <span data-ttu-id="1e554-107">Inne kanały i interfejsy kanału zapewniają korelacja określonych nadawców i <xref:System.ServiceModel.Channels.IInputChannel>, ale podstawowego kontraktu powoduje, że ma takie ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="1e554-107">Other channels and channel interfaces can provide a correlation between particular senders and an <xref:System.ServiceModel.Channels.IInputChannel>, but the base contract makes no such restriction.</span></span> <span data-ttu-id="1e554-108">Wdrożenia można utworzyć nowy <xref:System.ServiceModel.Channels.IInputChannel> dla każdego komunikatu lub ponownie użyj tego samego <xref:System.ServiceModel.Channels.IInputChannel> dla wielu komunikatów i nadawcy.</span><span class="sxs-lookup"><span data-stu-id="1e554-108">An implementation can create a new <xref:System.ServiceModel.Channels.IInputChannel> for each message or reuse the same <xref:System.ServiceModel.Channels.IInputChannel> for multiple messages and senders.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginReceive">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e554-109">Rozpoczyna się asynchronicznej operacji odbioru.</span><span class="sxs-lookup"><span data-stu-id="1e554-109">Begins an asynchronous receive operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-110">Użycie asynchronicznego <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> metody, jeśli chcesz przetwarzania aplikacji, aby kontynuować bez oczekiwania na żądanie do odebrania.</span><span class="sxs-lookup"><span data-stu-id="1e554-110">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span> <span data-ttu-id="1e554-111">Użyj synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> metody, gdy nie jest możliwa do bieżącego wątku zablokowana do momentu otrzymania komunikatu żądania lub przedział czasu określony przez `timeout` został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="1e554-111">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until the request message is received or the interval of time specified by the `timeout` has been exceeded.</span></span> <span data-ttu-id="1e554-112">Operacja asynchroniczna jest dostępne z lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-112">The asynchronous operation is available with or without an explicit timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceive(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="1e554-113"><see cref="T:System.AsyncCallback" /> Delegata, który otrzyma powiadomienie o ukończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="1e554-113">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="1e554-114">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="1e554-114">An object, specified by the application, that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="1e554-115">Rozpoczyna operację asynchroniczną, aby otrzymywać wiadomość ma obiekt stanu skojarzonych z nim.</span><span class="sxs-lookup"><span data-stu-id="1e554-115">Begins an asynchronous operation to receive a message that has a state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="1e554-116"><see cref="T:System.IAsyncResult" /> , Która odwołuje się do odbioru komunikatów asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="1e554-116">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message reception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-117">Użycie asynchronicznego <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> metody, jeśli chcesz przetwarzania aplikacji, aby kontynuować bez oczekiwania na żądanie do odebrania.</span><span class="sxs-lookup"><span data-stu-id="1e554-117">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span> <span data-ttu-id="1e554-118">Użyj synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> metody, gdy nie jest możliwa do bieżącego wątku zablokowana do momentu otrzymania komunikatu żądania lub przedział czasu określony przez `timeout` został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="1e554-118">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until the request message is received or the interval of time specified by the `timeout` has been exceeded.</span></span> <span data-ttu-id="1e554-119">Operacja asynchroniczna jest dostępne z lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-119">The asynchronous operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="1e554-120">Ta metoda otrzymuje powiadomienie, poprzez wywołanie zwrotne, tożsamości programu obsługi zdarzeń dla tej operacji.</span><span class="sxs-lookup"><span data-stu-id="1e554-120">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="1e554-121">Operacji nie jest ukończone, dopóki komunikat o stanie się dostępny w kanale.</span><span class="sxs-lookup"><span data-stu-id="1e554-121">The operation is not complete until a message becomes available in the channel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e554-122">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-122">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1e554-123"><see cref="T:System.TimeSpan" /> , Która określa czas oczekiwania na udostępnienie wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-123">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for a message to become available.</span></span></param>
        <param name="callback"><span data-ttu-id="1e554-124"><see cref="T:System.AsyncCallback" /> Delegata, który otrzyma powiadomienie o ukończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="1e554-124">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="1e554-125">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="1e554-125">An object, specified by the application, that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="1e554-126">Rozpoczyna operację asynchroniczną na komunikat, który ma określony limit czasu i skojarzonych z nim obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="1e554-126">Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="1e554-127"><see cref="T:System.IAsyncResult" /> Odwołania asynchroniczną operacji odbioru.</span><span class="sxs-lookup"><span data-stu-id="1e554-127">The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-128">Użycie asynchronicznego <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> metody, jeśli chcesz przetwarzania aplikacji, aby kontynuować bez oczekiwania na żądanie do odebrania.</span><span class="sxs-lookup"><span data-stu-id="1e554-128">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span> <span data-ttu-id="1e554-129">Użyj synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> metody, gdy nie jest możliwa do bieżącego wątku zablokowana do momentu otrzymania komunikatu żądania lub przedział czasu określony przez `timeout` został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="1e554-129">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until the request message is received or the interval of time specified by the `timeout` has been exceeded.</span></span> <span data-ttu-id="1e554-130">Operacja asynchroniczna jest dostępne z lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-130">The asynchronous operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="1e554-131">Operacja nie jest pełną, dopóki komunikat o stanie się dostępny w kanale albo występuje limit czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-131">The operation is not complete until either a message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e554-132">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-132">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="1e554-133">Określony <paramref name="timeout" /> został przekroczony przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="1e554-133">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1e554-134">Określony limit czasu jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e554-134">The timeout specified is less than zero.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="1e554-135">Operacja zgłasza <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony przed zakończeniem działania.</span><span class="sxs-lookup"><span data-stu-id="1e554-135">The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginTryReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTryReceive (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTryReceive(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTryReceive (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTryReceive(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1e554-136"><see cref="T:System.TimeSpan" /> , Która określa czas oczekiwania na udostępnienie wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-136">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for a message to become available.</span></span></param>
        <param name="callback"><span data-ttu-id="1e554-137"><see cref="T:System.AsyncCallback" /> Delegata, który otrzyma powiadomienie o ukończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="1e554-137">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="1e554-138">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="1e554-138">An object, specified by the application, that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="1e554-139">Rozpoczyna operację asynchroniczną na komunikat, który ma określony limit czasu i skojarzonych z nim obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="1e554-139">Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="1e554-140"><see cref="T:System.IAsyncResult" /> Odwołania asynchroniczną operacji odbioru.</span><span class="sxs-lookup"><span data-stu-id="1e554-140">The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-141">Użycie asynchronicznego <xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> metody, jeśli chcesz przetwarzania aplikacji, aby kontynuować bez oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="1e554-141">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method when you want the application processing to continue without waiting.</span></span> <span data-ttu-id="1e554-142">Użyj synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29> metody, gdy nie jest możliwa do bieżącego wątku zablokowanie, gdy w odpowiedzi na komunikat żądania lub dopóki nie zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-142">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29> method when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.</span></span>  
  
 <span data-ttu-id="1e554-143">Operacja nie jest pełną, aż do komunikat o stanie się dostępny w kanale lub zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-143">The operation is not complete until either a message becomes available in the channel or the timeout occurs.</span></span>  
  
 <span data-ttu-id="1e554-144">Jeśli zamierzasz obsługiwać przekroczeń limitu czasu i nie tylko ponownie zgłosić lub zawijać <xref:System.TimeoutException>, a następnie należy wywołać <xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> zamiast <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e554-144">If you are going to handle timeouts and not just re-throw or wrap the <xref:System.TimeoutException>, then you should call <xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> instead of <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="1e554-145">Jeśli nie ma specjalnie traktują limitów czasu następnie po prostu Wywołaj <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>, w przeciwnym razie utracić informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="1e554-145">If you are not going to treat timeouts specially then just call <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>, otherwise you lose error information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e554-146">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-146">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="1e554-147">Określony <paramref name="timeout" /> został przekroczony przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="1e554-147">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1e554-148">Określony limit czasu jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e554-148">The timeout specified is less than zero.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="1e554-149">Zwraca operacji <see langword="false" /> z <see cref="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)" /> Jeśli określonego <paramref name="timeout" /> został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="1e554-149">The operation returns <see langword="false" /> from <see cref="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForMessage">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForMessage (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForMessage(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForMessage (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForMessage(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1e554-150"><see cref="T:System.TimeSpan" /> , Która określa czas oczekiwania na udostępnienie wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-150">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for a message to become available.</span></span></param>
        <param name="callback"><span data-ttu-id="1e554-151"><see cref="T:System.AsyncCallback" /> Delegata, który otrzyma powiadomienie o ukończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="1e554-151">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="1e554-152">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="1e554-152">An object, specified by the application, that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="1e554-153">Rozpoczyna operację asynchroniczną wait-for-a-message-to-arrive, która ma określony limit czasu i skojarzonych z nim obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="1e554-153">Begins an asynchronous wait-for-a-message-to-arrive operation that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="1e554-154"><see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchroniczna oczekiwania na odebranie wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-154">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to wait for a message to arrive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-155">Użycie asynchronicznego <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> metodę, jeśli potrzebujesz przetwarzania aplikacji, aby kontynuować bez oczekiwania na odebranie wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-155">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method if you need the application processing to continue without waiting for the message to arrive.</span></span> <span data-ttu-id="1e554-156">Użyj synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> metody, gdy nie jest możliwa do bieżącego wątku być blokowane podczas oczekiwania na odebranie w kolejce wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-156">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> method when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1e554-157">Wątek jest zablokowana w górę do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="1e554-157">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="1e554-158">Ta metoda otrzymuje powiadomienie, poprzez wywołanie zwrotne, tożsamości programu obsługi zdarzeń dla tej operacji.</span><span class="sxs-lookup"><span data-stu-id="1e554-158">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="1e554-159">Operacja nie jest pełną, dopóki komunikat o stanie się dostępny w kanale albo występuje limit czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-159">The operation is not complete until either a message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e554-160">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-160">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="1e554-161">Określony <paramref name="timeout" /> został przekroczony przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="1e554-161">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1e554-162">Określony limit czasu jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e554-162">The timeout specified is less than zero.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="1e554-163">Zwraca operacji <see langword="false" /> Jeśli określonego <paramref name="timeout" /> przekroczeniu nie wyjątek limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-163">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded, not a timeout exception.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndReceive (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndReceive(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndReceive(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1e554-164"><see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do jednego z <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> metody.</span><span class="sxs-lookup"><span data-stu-id="1e554-164">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> methods.</span></span></param>
        <summary><span data-ttu-id="1e554-165">Kończy operację asynchroniczną można odebrać wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-165">Completes an asynchronous operation to receive a message.</span></span></summary>
        <returns><span data-ttu-id="1e554-166"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="1e554-166">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e554-167">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-167">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryReceive">
      <MemberSignature Language="C#" Value="public bool EndTryReceive (IAsyncResult result, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndTryReceive(class System.IAsyncResult result, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTryReceive (result As IAsyncResult, ByRef message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndTryReceive(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1e554-168"><see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="1e554-168">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <param name="message"><span data-ttu-id="1e554-169"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="1e554-169">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></param>
        <summary><span data-ttu-id="1e554-170">Kończy określonej operacji asynchronicznej można odebrać wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-170">Completes the specified asynchronous operation to receive a message.</span></span></summary>
        <returns>
          <span data-ttu-id="1e554-171"><see langword="true" /> Jeśli wiadomość zostanie odebrana przed określonym interwale upłynie czas; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e554-171"><see langword="true" /> if a message is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e554-172">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-172">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForMessage">
      <MemberSignature Language="C#" Value="public bool EndWaitForMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForMessage (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndWaitForMessage(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1e554-173"><see cref="T:System.IAsyncResult" /> , Które identyfikują <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> operację, aby zakończyć i z którego można pobrać wyniku.</span><span class="sxs-lookup"><span data-stu-id="1e554-173">The <see cref="T:System.IAsyncResult" /> that identifies the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> operation to finish, and from which to retrieve an end result.</span></span></param>
        <summary><span data-ttu-id="1e554-174">Kończy określonej operacji asynchronicznej oczekiwania dla wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-174">Completes the specified asynchronous wait-for-a-message operation.</span></span></summary>
        <returns>
          <span data-ttu-id="1e554-175"><see langword="true" /> Jeśli wiadomość dotarła przed <paramref name="timeout" /> została przekroczona; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e554-175"><see langword="true" /> if a message has arrived before the <paramref name="timeout" /> has been exceeded; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e554-176">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-176">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IInputChannel.LocalAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ LocalAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e554-177">Pobiera adres, na którym kanał wejściowy odbiera wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-177">Gets the address on which the input channel receives messages.</span></span></summary>
        <value><span data-ttu-id="1e554-178"><see cref="T:System.ServiceModel.EndpointAddress" /> Na którym kanał wejściowy odbiera wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-178">The <see cref="T:System.ServiceModel.EndpointAddress" /> on which the input channel receives messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-179">Jeśli ten kanał wejściowy nie ma adresu autonomiczne (na przykład jest stronie dane wejściowe kanału TCP inicjowanej przez klienta), a następnie ta właściwość jest `null`.</span><span class="sxs-lookup"><span data-stu-id="1e554-179">If this input channel does not have a standalone address (for example, it is the input-side of a client-initiated TCP channel), then this property is `null`.</span></span>  
  
 <span data-ttu-id="1e554-180">Ta właściwość może służyć przez kanały wyższego poziomu dla korelacji.</span><span class="sxs-lookup"><span data-stu-id="1e554-180">This property can be used by higher-level channels for correlation purposes.</span></span> <span data-ttu-id="1e554-181">Na przykład, jeśli żądanie odpowiedź, nad implementuje kanału wyższego poziomu <xref:System.ServiceModel.Channels.IDuplexChannel>, może użyć <xref:System.ServiceModel.Channels.IInputChannel.LocalAddress%2A> właściwości w nagłówku protokołu WS-Addressing ReplyTo.</span><span class="sxs-lookup"><span data-stu-id="1e554-181">For example, if a higher-level channel implements request-reply on top of a <xref:System.ServiceModel.Channels.IDuplexChannel>, it can use the <xref:System.ServiceModel.Channels.IInputChannel.LocalAddress%2A> property in the WS-Addressing ReplyTo header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e554-182">Poniższy kod ilustruje sposób implementowania tej właściwości:</span><span class="sxs-lookup"><span data-stu-id="1e554-182">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Receive">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="1e554-183">Operacja nie została ukończona z interwał limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-183">The operation did not complete with the timeout interval.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="1e554-184">Kanał wejściowy nie powiodło się.</span><span class="sxs-lookup"><span data-stu-id="1e554-184">The input channel failed.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException"><span data-ttu-id="1e554-185">Kanał wejściowy zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="1e554-185">The input channel has been aborted.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="1e554-186">Wystąpił błąd kanału wejściowego.</span><span class="sxs-lookup"><span data-stu-id="1e554-186">The input channel faulted.</span></span></exception>
        <summary><span data-ttu-id="1e554-187">Zwraca komunikat odebrany przez kanał wejściowy, jeśli jest dostępny z przedział czasu, który jest jawnie lub niejawnie zdefiniowany.</span><span class="sxs-lookup"><span data-stu-id="1e554-187">Returns a message received by the input channel, if one is available with an interval of time that is explicitly or implicitly defined.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-188">Użyj synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> metody, gdy nie jest możliwa do bieżącego wątku zablokowanie, dopóki odbierze komunikatu żądania lub przekracza przedział czasu określony przez `timeout`.</span><span class="sxs-lookup"><span data-stu-id="1e554-188">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until it receives the request message or exceeds the interval of time specified by `timeout`.</span></span> <span data-ttu-id="1e554-189">Użycie asynchronicznego <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> metody, gdy będziesz potrzebować przetwarzania aplikacji, aby kontynuować bez oczekiwania na żądanie do odebrania.</span><span class="sxs-lookup"><span data-stu-id="1e554-189">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you need the application processing to continue without waiting for the request to be received.</span></span>  
  
 <span data-ttu-id="1e554-190">Synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> operacja jest niedostępna lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-190">The synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="1e554-191">Jeśli wiadomość nie jest dostępna, blokuje dopóki nie jest dostępny lub dopóki nie zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-191">If a message is not available, it blocks until one is available or until the timeout is exceeded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Receive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Receive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.Receive" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Receive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e554-192">Zwraca komunikat, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="1e554-192">Returns the message received, if one is available.</span></span> <span data-ttu-id="1e554-193">Jeśli wiadomość nie jest dostępna, bloków dla domyślny interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-193">If a message is not available, blocks for a default interval of time.</span></span></summary>
        <returns><span data-ttu-id="1e554-194"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="1e554-194">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-195">Użyj synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> metody, gdy nie jest możliwa do bieżącego wątku zablokowanie, dopóki odbierze komunikatu żądania lub przekracza przedział czasu określony przez `timeout`.</span><span class="sxs-lookup"><span data-stu-id="1e554-195">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until it receives the request message or exceeds the interval of time specified by `timeout`.</span></span> <span data-ttu-id="1e554-196">Użycie asynchronicznego <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> metody, jeśli chcesz przetwarzania aplikacji, aby kontynuować bez oczekiwania na żądanie do odebrania.</span><span class="sxs-lookup"><span data-stu-id="1e554-196">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span>  
  
 <span data-ttu-id="1e554-197">Synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> operacja jest niedostępna lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-197">The synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="1e554-198">Jeśli wiadomość nie jest dostępna, blokuje dopóki nie jest dostępny lub dopóki nie zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-198">If a message is not available, it blocks until one is available or until the timeout is exceeded.</span></span>  
  
 <span data-ttu-id="1e554-199"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> może zostać wywołana wiele razy lub jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="1e554-199"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="1e554-200">Tylko jeden <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> wywołania można wykonać dla każdego komunikatu Odebrano.</span><span class="sxs-lookup"><span data-stu-id="1e554-200">Only one <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> call can complete for each message received.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e554-201">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-201">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Receive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Receive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Receive(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1e554-202"><see cref="T:System.TimeSpan" /> Określający, jak długo ma zostać ukończona przed limit czasu i zgłaszanie operacji odbierania <see cref="T:System.TimeoutException" />.</span><span class="sxs-lookup"><span data-stu-id="1e554-202">The <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out and throwing a <see cref="T:System.TimeoutException" />.</span></span></param>
        <summary><span data-ttu-id="1e554-203">Zwraca komunikat, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="1e554-203">Returns the message received, if one is available.</span></span> <span data-ttu-id="1e554-204">Jeśli wiadomość nie jest dostępna, bloków w określonym interwale czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-204">If a message is not available, blocks for a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="1e554-205"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="1e554-205">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-206">Użyj synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> metody, gdy nie jest możliwa do bieżącego wątku zablokowanie, dopóki odbierze komunikatu żądania lub przekracza przedział czasu określony przez `timeout`.</span><span class="sxs-lookup"><span data-stu-id="1e554-206">Use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> method when it is acceptable for the current thread to be blocked until it receives the request message or exceeds the interval of time specified by `timeout`.</span></span> <span data-ttu-id="1e554-207">Użycie asynchronicznego <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> metody, jeśli chcesz przetwarzania aplikacji, aby kontynuować bez oczekiwania na żądanie do odebrania.</span><span class="sxs-lookup"><span data-stu-id="1e554-207">Use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> method when you want the application processing to continue without waiting for the request to be received.</span></span>  
  
 <span data-ttu-id="1e554-208">Synchroniczne <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> operacja jest niedostępna lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-208">The synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> operation is available with or without an explicit timeout.</span></span>  
  
 <span data-ttu-id="1e554-209">Jeśli wiadomość nie jest dostępna, blokuje dopóki nie jest dostępny lub dopóki nie zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-209">If a message is not available, it blocks until one is available or until the timeout is exceeded.</span></span>  
  
 <span data-ttu-id="1e554-210"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> może zostać wywołana wiele razy lub jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="1e554-210"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="1e554-211">Tylko jeden <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> wywołania można wykonać dla każdego komunikatu Odebrano.</span><span class="sxs-lookup"><span data-stu-id="1e554-211">Only one <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> call can complete for each message received.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e554-212">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-212">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="1e554-213">Określony <paramref name="timeout" /> został przekroczony przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="1e554-213">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1e554-214">Określony limit czasu jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e554-214">The timeout specified is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (TimeSpan timeout, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(valuetype System.TimeSpan timeout, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (timeout As TimeSpan, ByRef message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReceive(TimeSpan timeout, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1e554-215"><see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do jednego z <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> metody.</span><span class="sxs-lookup"><span data-stu-id="1e554-215">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> methods.</span></span></param>
        <param name="message"><span data-ttu-id="1e554-216"><see cref="T:System.ServiceModel.Channels.Message" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="1e554-216">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</span></span></param>
        <summary><span data-ttu-id="1e554-217">Próbuje komunikat o błędzie w określonym interwale czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-217">Tries to receive a message within a specified interval of time.</span></span></summary>
        <returns>
          <span data-ttu-id="1e554-218"><see langword="true" /> Jeśli wiadomość zostanie odebrana przed <paramref name="timeout" /> została przekroczona; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e554-218"><see langword="true" /> if a message is received before the <paramref name="timeout" /> has been exceeded; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-219">Jeśli zamierzasz obsługiwać przekroczeń limitu czasu i nie tylko ponownie zgłosić lub zawijać <xref:System.TimeoutException>, a następnie należy wywołać <xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29> zamiast <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e554-219">If you are going to handle timeouts and not just re-throw or wrap the <xref:System.TimeoutException>, then you should call <xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29> instead of <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span>  
  
 <span data-ttu-id="1e554-220">Jeśli nie ma specjalnie traktują limitów czasu następnie po prostu Wywołaj <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>, w przeciwnym razie zostaną utracone informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="1e554-220">If you are not going to treat timeouts specially then just call <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>, otherwise you will lose error information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e554-221">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-221">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="1e554-222">Określony <paramref name="timeout" /> został przekroczony przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="1e554-222">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1e554-223">Określony limit czasu jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e554-223">The timeout specified is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForMessage">
      <MemberSignature Language="C#" Value="public bool WaitForMessage (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForMessage(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForMessage (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForMessage(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1e554-224"><see cref="T:System.TimeSpan" /> Określa maksymalny interwał czasu oczekiwania na odebranie przed przekroczeniem limitu czasu wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-224">The <see cref="T:System.TimeSpan" /> specifies the maximum interval of time to wait for a message to arrive before timing out.</span></span></param>
        <summary><span data-ttu-id="1e554-225">Zwraca wartość wskazującą, czy odebrano komunikat w określonym interwale czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-225">Returns a value that indicates whether a message has arrived within a specified interval of time.</span></span></summary>
        <returns>
          <span data-ttu-id="1e554-226"><see langword="true" /> Jeśli wiadomość dotarła przed <paramref name="timeout" /> została przekroczona; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e554-226"><see langword="true" /> if a message has arrived before the <paramref name="timeout" /> has been exceeded; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e554-227">Wywoływanie <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> nie powoduje trwa komunikatów odebranych lub przetwarzane w inny sposób.</span><span class="sxs-lookup"><span data-stu-id="1e554-227">Calling <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> does not result in a message being received or processed in any other way.</span></span>  
  
 <span data-ttu-id="1e554-228"><xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> Istnieje metoda przede wszystkim dotyczące transakcyjne scenariusze, w których użytkownik chce odbierać wiadomości przy użyciu transakcji.</span><span class="sxs-lookup"><span data-stu-id="1e554-228">The <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> method exists primarily for transacted scenarios where the user wants to receive the message using a transaction.</span></span> <span data-ttu-id="1e554-229">Używając po prostu <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> zwykle w tym celu użytkownik musi utworzyć transakcji, a następnie wywołać <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> i nadzieję, że komunikat dociera przed transakcji limitu czasu, który może nie być możliwe.</span><span class="sxs-lookup"><span data-stu-id="1e554-229">When using just <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> normally for this, the user must create the transaction and then call <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and hope the message arrives before the transaction times out, which may not be possible.</span></span>  
  
 <span data-ttu-id="1e554-230">Zamiast tego użytkownik może wywołać <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> o niezależnie od limitu czasu chcą (nawet nieskończone), a następnie po nadejściu wiadomości mogą otwierać transakcji, wywołań <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> i mieć pewność, że komunikat może uzyskać przed wygaśnięciem transakcji.</span><span class="sxs-lookup"><span data-stu-id="1e554-230">Instead, the user can call <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> with whatever time out they want (even infinite), then when a message arrives they can open the transaction, call <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and be confident that they can get the message back before the transaction expires.</span></span>  
  
 <span data-ttu-id="1e554-231">Ta metoda jest synchroniczne, więc blokuje bieżącego wątku, dopóki wiadomości jest dostępna lub występuje limit czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-231">This method is synchronous, so it blocks the current thread until a message is available or the time out occurs.</span></span> <span data-ttu-id="1e554-232">Użyj <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> gdy jest akceptowalne dla bieżącego wątku być blokowane podczas oczekiwania na odebranie w kolejce wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1e554-232">Use <xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="1e554-233">Wątek jest zablokowana w górę do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="1e554-233">The thread is blocked up to the specified `timeout`.</span></span> <span data-ttu-id="1e554-234">Jeśli potrzebujesz przetwarzania aplikacji, aby kontynuować bez oczekiwania na użycie asynchronicznego <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="1e554-234">If you need the application processing to continue without waiting, use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e554-235">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="1e554-235">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingduplexchannel.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="1e554-236">Określony <paramref name="timeout" /> został przekroczony przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="1e554-236">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1e554-237">Określony limit czasu jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e554-237">The timeout specified is less than zero.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="1e554-238">Zwraca operacji <see langword="false" /> Jeśli określonego <paramref name="timeout" /> przekroczeniu nie wyjątek limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="1e554-238">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded, not a timeout exception.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>