<Type Name="ChannelListenerBase" FullName="System.ServiceModel.Channels.ChannelListenerBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f526f8f1a42ca18fb83c27264828924b756a8aab" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36526047" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelListenerBase extends System.ServiceModel.Channels.ChannelManagerBase implements class System.ServiceModel.Channels.IChannelListener, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ChannelListenerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelListenerBase&#xA;Inherits ChannelManagerBase&#xA;Implements IChannelListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelListenerBase abstract : System::ServiceModel::Channels::ChannelManagerBase, System::ServiceModel::Channels::IChannelListener" />
  <TypeSignature Language="F#" Value="type ChannelListenerBase = class&#xA;    inherit ChannelManagerBase&#xA;    interface IChannelListener&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.ChannelManagerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Udostępnia typowe Podstawowa implementacja odbiorniki kanałów w usłudze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Odbiorniki kanałów w usłudze Zaczekaj, a następnie zaakceptuj kanały utworzone za pomocą fabryk na kliencie. Po nawiązaniu połączenia kanał między klientem a usługą mogą być wymieniane wiadomości i aplikacje rozproszone mogą się komunikować. Przetwarzanie funkcje udostępniane przez odbiornik stanowi warstwę do zestawu skumulowany odbiorników kanału do modułowości podczas wybierania funkcji Windows Communication Foundation (WCF) do wdrożenia. Każdy odbiornik kanału w stosie usługi odpowiada fabryki kanałów w stosie klienta. Utworzone przez fabryki kanału to naprawdę stosu kanałów, które są akceptowane i przetwarzane przez stos odbiorników w usłudze.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Konstruktor inicjuje właściwości limitu czasu o wartości limitu czasu modelu usługi podczas wymiany wiadomości. Wartość domyślna to 1 minuta otwartego, wysyłanie i zamknij operacje i 10 minut dla operacji odbierania. Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> Jeśli chcesz określić wartości dla tych limitów czasu operacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelListenerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelListenerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor domyślny inicjuje właściwości limitu czasu o wartości limitu czasu modelu usługi podczas wymiany wiadomości. Wartość domyślna to 1 minuta otwartego, wysyłanie i zamknij operacje i 10 minut dla operacji odbierania. Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> Jeśli chcesz określić wartości dla tych limitów czasu operacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IDefaultCommunicationTimeouts timeouts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (timeouts As IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelListenerBase(System::ServiceModel::IDefaultCommunicationTimeouts ^ timeouts);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.ChannelListenerBase : System.ServiceModel.IDefaultCommunicationTimeouts -&gt; System.ServiceModel.Channels.ChannelListenerBase" Usage="new System.ServiceModel.Channels.ChannelListenerBase timeouts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeouts" Type="System.ServiceModel.IDefaultCommunicationTimeouts" />
      </Parameters>
      <Docs>
        <param name="timeouts">
          <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> Określające domyślne limity czasu otwartego, wysyłania, odbierania i zamknąć operacji podczas wymiany wiadomości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> klasy z określoną wartość domyślną limity czasu komunikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> zamiast domyślnego konstruktora, jeśli chcesz określać wartości niestandardowych do otwarcia, wysyłania, odbierania i zamknij przekroczeń limitu czasu operacji zamiast przy użyciu wartości domyślnych modelu usługi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelListenerBase.BeginWaitForChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> Określający, jak długo ma zakończyć przed przekroczeniem limitu czasu oczekiwania operacji kanału.</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, która odbiera powiadomienia o zakończeniu asynchronicznego czas oczekiwania operacji kanału.</param>
        <param name="state">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z asynchronicznego czas oczekiwania operacji kanału.</param>
        <summary>Po zaimplementowaniu w klasie pochodnej, rozpoczyna operację asynchroniczną oczekiwania kanału do odbierania.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się asynchroniczne czas oczekiwania operacji kanału.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Odbiornik kanału nie został otwarty i nie można go użyć.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny interwał przeznaczony na zakończenie operacji zamknięcia.</summary>
        <value>Wartość domyślna <see cref="T:System.TimeSpan" /> określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu operacji zamknięcia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest ustawiana podczas tworzenia nowego <xref:System.ServiceModel.Channels.ChannelListenerBase> obiektu. Wartość domyślna <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> ustawia konstruktora <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> właściwości na wartość 1 minutę. Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> Jeśli chcesz określić inną wartość dla tego limitu czasu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny interwał przeznaczony na zakończenie operacji otwarcia.</summary>
        <value>Wartość domyślna <see cref="T:System.TimeSpan" /> określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu operacji otwarcia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest ustawiana podczas tworzenia nowego <xref:System.ServiceModel.Channels.ChannelListenerBase> obiektu. Wartość domyślna <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> ustawia konstruktora <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> właściwości na wartość 1 minutę. Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> Jeśli chcesz określić inną wartość dla tego limitu czasu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultReceiveTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultReceiveTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultReceiveTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultReceiveTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultReceiveTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny interwał przeznaczony na zakończenie operacji odbioru.</summary>
        <value>Wartość domyślna <see cref="T:System.TimeSpan" /> określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu operacji odbierania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest ustawiana podczas tworzenia nowego <xref:System.ServiceModel.Channels.ChannelListenerBase> obiektu. Wartość domyślna <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> ustawia konstruktora <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> właściwości na wartość 10 minut. Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> Jeśli chcesz określić inną wartość dla tego limitu czasu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSendTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultSendTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultSendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSendTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultSendTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSendTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny interwał przeznaczony na zakończenie operacji wysyłania.</summary>
        <value>Wartość domyślna <see cref="T:System.TimeSpan" /> określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu operacji wysyłania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest ustawiana podczas tworzenia nowego <xref:System.ServiceModel.Channels.ChannelListenerBase> obiektu. Wartość domyślna <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> ustawia konstruktora <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> właściwości na wartość 1 minutę. Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> Jeśli chcesz określić inną wartość dla tego limitu czasu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForChannel">
      <MemberSignature Language="C#" Value="public bool EndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndWaitForChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForChannel : IAsyncResult -&gt; bool&#xA;override this.EndWaitForChannel : IAsyncResult -&gt; bool" Usage="channelListenerBase.EndWaitForChannel result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" /> metody.</param>
        <summary>Po zaimplementowaniu w klasie pochodnej, kończy operację asynchroniczną oczekiwania kanały do odbierania.</summary>
        <returns>
          <see langword="true" /> Jeśli wiadomość dostarczona; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)&#xA;override this.GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="channelListenerBase.GetProperty " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.GetProperty``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Typizowany obiekt, dla którego metoda wykonywania zapytania.</typeparam>
        <summary>Zwraca typizowany obiekt żądanie, jeśli nie istnieje z odpowiednią warstwę stosu kanału.</summary>
        <returns>Obiekt typu T wymagane, jeśli jest obecny lub <see langword="null" /> Jeśli nie jest.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia to żądanie typu obiektu, na przykład interfejsu do ustawiania właściwości lub pobieranie stanu z odpowiednią warstwę stosu odbiornika kanałów. W przypadku warstwy obsługuje zwracania żądanego obiektu, zwraca go. W przeciwnym razie po prostu deleguje wywołania do następnej warstwy ze stosu. Jeśli pełne w dół stosu i warstwy nie obsługuje żądanego obiektu, a następnie metoda zwraca `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginWaitForChannel">
      <MemberSignature Language="C#" Value="protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnBeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract IAsyncResult ^ OnBeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelListenerBase.OnBeginWaitForChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> Określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu operacji oczekiwania na początek.</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, która odbiera powiadomienia operację asynchroniczną na rozpoczęcie ukończenia oczekiwania.</param>
        <param name="state">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z asynchroniczną na rozpoczęcie operacji oczekiwania.</param>
        <summary>Po zaimplementowaniu w klasie pochodnej, stanowi rozszerzalność przy uruchamianiu oczekiwania kanału do odbierania.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Odwołuje się do rozpoczęcia asynchronicznego na zlecenia oczekiwania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndWaitForChannel">
      <MemberSignature Language="C#" Value="protected abstract bool OnEndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnEndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnEndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnEndWaitForChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndWaitForChannel : IAsyncResult -&gt; bool" Usage="channelListenerBase.OnEndWaitForChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Po zaimplementowaniu w klasie pochodnej, stanowi rozszerzalności podczas kończenia oczekiwanie na kanał do odbierania.</summary>
        <returns>
          <see langword="true" /> Jeśli metoda ukończone przed przedział czasu określony przez <paramref name="timeout" /> wygasłych; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWaitForChannel">
      <MemberSignature Language="C#" Value="protected abstract bool OnWaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnWaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnWaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnWaitForChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member OnWaitForChannel : TimeSpan -&gt; bool" Usage="channelListenerBase.OnWaitForChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> Określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu podczas oczekiwania na operację kanału.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zapewnia punkt rozszerzalności podczas oczekiwania kanału do odbierania.</summary>
        <returns>
          <see langword="true" /> Jeśli metoda ukończone przed przedział czasu określony przez <paramref name="timeout" /> wygasłych; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public abstract Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.Uri" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.ServiceModel.Channels.ChannelListenerBase.Uri" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IChannelListener.Uri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej pobiera identyfikator URI, na którym odbiornika kanałów nasłuchuje przychodzących kanału.</summary>
        <value>
          <see cref="T:System.Uri" /> Na którym odbiornika kanałów nasłuchuje przychodzących kanałów.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForChannel">
      <MemberSignature Language="C#" Value="public bool WaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitForChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitForChannel : TimeSpan -&gt; bool&#xA;override this.WaitForChannel : TimeSpan -&gt; bool" Usage="channelListenerBase.WaitForChannel timeout" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> Określający, jak długo ma zakończyć przed przekroczeniem limitu czasu oczekiwania operacji kanału.</param>
        <summary>Po zaimplementowaniu w klasie pochodnej, czeka na kanał do odbierania.</summary>
        <returns>
          <see langword="true" /> Jeśli kanał dotarły przed przedział czasu określony przez <paramref name="timeout" /> wygasłych; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>