<Type Name="ChannelListenerBase" FullName="System.ServiceModel.Channels.ChannelListenerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa73fa74126b943734f954483888ffa57d0e0877" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399297" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelListenerBase extends System.ServiceModel.Channels.ChannelManagerBase implements class System.ServiceModel.Channels.IChannelListener, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ChannelListenerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelListenerBase&#xA;Inherits ChannelManagerBase&#xA;Implements IChannelListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelListenerBase abstract : System::ServiceModel::Channels::ChannelManagerBase, System::ServiceModel::Channels::IChannelListener" />
  <TypeSignature Language="F#" Value="type ChannelListenerBase = class&#xA;    inherit ChannelManagerBase&#xA;    interface IChannelListener&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.ChannelManagerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="dcace-101">Zawiera wspólną implementację podstawową dla odbiorników kanałów w usłudze.</span><span class="sxs-lookup"><span data-stu-id="dcace-101">Provides a common base implementation for channel listeners on the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcace-102">Odbiorniki kanału w usłudze czekają, a następnie akceptują kanały utworzone przez fabrykę na kliencie.</span><span class="sxs-lookup"><span data-stu-id="dcace-102">The channel listeners on the service wait for and then accept the channels created by factories on the client.</span></span> <span data-ttu-id="dcace-103">Po ustanowieniu połączenia kanału między klientem a usługą komunikaty mogą być wymieniane i mogą komunikować się aplikacje rozproszone.</span><span class="sxs-lookup"><span data-stu-id="dcace-103">Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate.</span></span> <span data-ttu-id="dcace-104">Funkcje przetwarzania dostarczone przez odbiornik są podzielone na stos zestawu odbiorników kanałów w celu zapewnienia modularności podczas wybierania funkcji Windows Communication Foundation (WCF) do wdrożenia.</span><span class="sxs-lookup"><span data-stu-id="dcace-104">The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the Windows Communication Foundation (WCF) features to deploy.</span></span> <span data-ttu-id="dcace-105">Każdy odbiornik kanału w stosie usług odpowiada fabryki kanałów w stosie klienta.</span><span class="sxs-lookup"><span data-stu-id="dcace-105">Each channel listener in the service stack corresponds to a channel factory in the client stack.</span></span> <span data-ttu-id="dcace-106">Kanał utworzony przez fabrykę jest w rzeczywistości stosem kanałów, które są akceptowane i przetwarzane przez stos odbiorników w usłudze.</span><span class="sxs-lookup"><span data-stu-id="dcace-106">The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcace-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="dcace-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcace-108">Konstruktor domyślny <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> inicjuje właściwości limitu czasu dla wartości limitu czasu modelu usługi podczas wymiany komunikatów.</span><span class="sxs-lookup"><span data-stu-id="dcace-108">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor initializes timeout properties with the service model timeout values when exchanging messages.</span></span> <span data-ttu-id="dcace-109">Wartość domyślna to 1 minuta dla operacji otwierania, wysyłania i zamykania oraz 10 minut dla operacji odbierania.</span><span class="sxs-lookup"><span data-stu-id="dcace-109">The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.</span></span> <span data-ttu-id="dcace-110">Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> , jeśli chcesz określić inne wartości dla tych limitów czasu operacji.</span><span class="sxs-lookup"><span data-stu-id="dcace-110">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelListenerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelListenerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcace-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="dcace-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcace-112">Konstruktor bez parametrów inicjuje właściwości limitu czasu dla wartości limitu czasu modelu usługi podczas wymiany komunikatów.</span><span class="sxs-lookup"><span data-stu-id="dcace-112">The parameterless constructor initializes timeout properties with the service model timeout values when exchanging messages.</span></span> <span data-ttu-id="dcace-113">Wartość domyślna to 1 minuta dla operacji otwierania, wysyłania i zamykania oraz 10 minut dla operacji odbierania.</span><span class="sxs-lookup"><span data-stu-id="dcace-113">The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.</span></span> <span data-ttu-id="dcace-114">Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> , jeśli chcesz określić inne wartości dla tych limitów czasu operacji.</span><span class="sxs-lookup"><span data-stu-id="dcace-114">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IDefaultCommunicationTimeouts timeouts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (timeouts As IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelListenerBase(System::ServiceModel::IDefaultCommunicationTimeouts ^ timeouts);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.ChannelListenerBase : System.ServiceModel.IDefaultCommunicationTimeouts -&gt; System.ServiceModel.Channels.ChannelListenerBase" Usage="new System.ServiceModel.Channels.ChannelListenerBase timeouts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeouts" Type="System.ServiceModel.IDefaultCommunicationTimeouts" />
      </Parameters>
      <Docs>
        <param name="timeouts"><span data-ttu-id="dcace-115"><see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> Określają one domyślne limity czasu dla operacji otwierania, wysyłania, odbierania i zamykania podczas wymiany komunikatów.</span><span class="sxs-lookup"><span data-stu-id="dcace-115">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.</span></span></param>
        <summary><span data-ttu-id="dcace-116">Inicjuje nowe wystąpienie <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> klasy z określonymi domyślnymi limitami czasu komunikacji.</span><span class="sxs-lookup"><span data-stu-id="dcace-116">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class with specified default communication timeouts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcace-117">Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> zamiast konstruktora bez parametrów, jeśli chcesz określić wartości niestandardowe dla limitów czasu operacji otwierania, wysyłania, odbierania i zamykania zamiast korzystać z wartości domyślnych modelu usługi.</span><span class="sxs-lookup"><span data-stu-id="dcace-117">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the parameterless constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelListenerBase.BeginWaitForChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dcace-118"><see cref="T:System.TimeSpan" /> Określa czas oczekiwania na ukończenie operacji kanału przed upływem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-118">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="dcace-119"><see cref="T:System.AsyncCallback" /> Obiekt delegowany, który odbiera powiadomienie o asynchronicznym zakończeniu oczekiwania dla operacji w kanale.</span><span class="sxs-lookup"><span data-stu-id="dcace-119">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.</span></span></param>
        <param name="state"><span data-ttu-id="dcace-120">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczną operacją oczekiwania dla operacji kanału.</span><span class="sxs-lookup"><span data-stu-id="dcace-120">An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.</span></span></param>
        <summary><span data-ttu-id="dcace-121">Po zaimplementowaniu w klasie pochodnej rozpoczyna operację asynchroniczną w celu oczekiwania na nadejście kanału.</span><span class="sxs-lookup"><span data-stu-id="dcace-121">When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="dcace-122"><see cref="T:System.IAsyncResult" /> , Który odwołuje się do asynchronicznego oczekiwania dla operacji kanału.</span><span class="sxs-lookup"><span data-stu-id="dcace-122">The <see cref="T:System.IAsyncResult" /> that references the asynchronous wait for a channel operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dcace-123">Odbiornik kanału nie został otwarty i nie można go użyć.</span><span class="sxs-lookup"><span data-stu-id="dcace-123">The channel listener has not been opened and so cannot be used.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcace-124">Pobiera domyślny interwał czasu podanego do ukończenia operacji zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="dcace-124">Gets the default interval of time provided for a close operation to complete.</span></span></summary>
        <value><span data-ttu-id="dcace-125">Wartość domyślna <see cref="T:System.TimeSpan" /> określająca czas trwania operacji zamykania przed upływem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-125">The default <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcace-126">Ta wartość jest ustawiana podczas tworzenia nowego <xref:System.ServiceModel.Channels.ChannelListenerBase> obiektu.</span><span class="sxs-lookup"><span data-stu-id="dcace-126">This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object.</span></span> <span data-ttu-id="dcace-127">Domyślny <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Konstruktor<xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> ustawia właściwość na wartość 1 minuty.</span><span class="sxs-lookup"><span data-stu-id="dcace-127">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> property to a value of 1 minute.</span></span> <span data-ttu-id="dcace-128">Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> , jeśli chcesz określić inną wartość dla tego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-128">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcace-129">Pobiera domyślny interwał czasu podanego dla operacji otwierania.</span><span class="sxs-lookup"><span data-stu-id="dcace-129">Gets the default interval of time provided for an open operation to complete.</span></span></summary>
        <value><span data-ttu-id="dcace-130">Wartość domyślna <see cref="T:System.TimeSpan" /> określająca czas trwania operacji otwierania przed upływem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-130">The default <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcace-131">Ta wartość jest ustawiana podczas tworzenia nowego <xref:System.ServiceModel.Channels.ChannelListenerBase> obiektu.</span><span class="sxs-lookup"><span data-stu-id="dcace-131">This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object.</span></span> <span data-ttu-id="dcace-132">Domyślny <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Konstruktor<xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> ustawia właściwość na wartość 1 minuty.</span><span class="sxs-lookup"><span data-stu-id="dcace-132">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> property to a value of 1 minute.</span></span> <span data-ttu-id="dcace-133">Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> , jeśli chcesz określić inną wartość dla tego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-133">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultReceiveTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultReceiveTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultReceiveTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultReceiveTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultReceiveTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcace-134">Pobiera domyślny interwał czasu podanego dla operacji odbioru.</span><span class="sxs-lookup"><span data-stu-id="dcace-134">Gets the default interval of time provided for a receive operation to complete.</span></span></summary>
        <value><span data-ttu-id="dcace-135">Wartość domyślna <see cref="T:System.TimeSpan" /> określająca czas trwania operacji odbierania przed upływem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-135">The default <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcace-136">Ta wartość jest ustawiana podczas tworzenia nowego <xref:System.ServiceModel.Channels.ChannelListenerBase> obiektu.</span><span class="sxs-lookup"><span data-stu-id="dcace-136">This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object.</span></span> <span data-ttu-id="dcace-137">Domyślny <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Konstruktor<xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> ustawia właściwość na wartość 10 minut.</span><span class="sxs-lookup"><span data-stu-id="dcace-137">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> property to a value of 10 minutes.</span></span> <span data-ttu-id="dcace-138">Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> , jeśli chcesz określić inną wartość dla tego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-138">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSendTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultSendTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultSendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSendTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultSendTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSendTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcace-139">Pobiera domyślny interwał czasu podanego do ukończenia operacji wysyłania.</span><span class="sxs-lookup"><span data-stu-id="dcace-139">Gets the default interval of time provided for a send operation to complete.</span></span></summary>
        <value><span data-ttu-id="dcace-140">Wartość domyślna <see cref="T:System.TimeSpan" /> określająca czas trwania operacji wysyłania przed upływem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-140">The default <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcace-141">Ta wartość jest ustawiana podczas tworzenia nowego <xref:System.ServiceModel.Channels.ChannelListenerBase> obiektu.</span><span class="sxs-lookup"><span data-stu-id="dcace-141">This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object.</span></span> <span data-ttu-id="dcace-142">Domyślny <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Konstruktor<xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> ustawia właściwość na wartość 1 minuty.</span><span class="sxs-lookup"><span data-stu-id="dcace-142">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> property to a value of 1 minute.</span></span> <span data-ttu-id="dcace-143">Użyj <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> , jeśli chcesz określić inną wartość dla tego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-143">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForChannel">
      <MemberSignature Language="C#" Value="public bool EndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndWaitForChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForChannel : IAsyncResult -&gt; bool&#xA;override this.EndWaitForChannel : IAsyncResult -&gt; bool" Usage="channelListenerBase.EndWaitForChannel result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="dcace-144">Zwracany przez wywołanie <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" />metody. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="dcace-144">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" /> method.</span></span></param>
        <summary><span data-ttu-id="dcace-145">Po zaimplementowaniu w klasie pochodnej wykonuje operację asynchroniczną w celu oczekiwania na nadejście kanałów.</span><span class="sxs-lookup"><span data-stu-id="dcace-145">When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.</span></span></summary>
        <returns><span data-ttu-id="dcace-146"><see langword="true" />w przypadku odebrania komunikatu; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="dcace-146"><see langword="true" /> if a message arrived; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)&#xA;override this.GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="channelListenerBase.GetProperty " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.GetProperty``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="dcace-147">Typ obiektu, dla którego Metoda wykonuje zapytanie.</span><span class="sxs-lookup"><span data-stu-id="dcace-147">The typed object for which the method is querying.</span></span></typeparam>
        <summary><span data-ttu-id="dcace-148">Zwraca żądany obiekt typu, jeśli jest obecny, z odpowiedniej warstwy w stosie kanału.</span><span class="sxs-lookup"><span data-stu-id="dcace-148">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span></span></summary>
        <returns><span data-ttu-id="dcace-149">Obiekt typu T żądany, jeśli jest obecny lub <see langword="null" /> nie jest.</span><span class="sxs-lookup"><span data-stu-id="dcace-149">The typed object T requested if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcace-150">Użyj tego żądania, aby zażądać określonego typu obiektu, takiego jak interfejs do ustawiania właściwości lub pobierania stanu z odpowiedniej warstwy w stosie odbiornika kanału.</span><span class="sxs-lookup"><span data-stu-id="dcace-150">Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel listener stack.</span></span> <span data-ttu-id="dcace-151">Jeśli warstwa obsługuje zwracanie żądanego obiektu, zwraca go.</span><span class="sxs-lookup"><span data-stu-id="dcace-151">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="dcace-152">W przeciwnym razie po prostu deleguje wywołanie do następnej warstwy w stosie.</span><span class="sxs-lookup"><span data-stu-id="dcace-152">If not, it simply delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="dcace-153">Jeśli zostanie umieszczony na dole stosu i żadna warstwa nie obsługuje żądanego obiektu, metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="dcace-153">If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginWaitForChannel">
      <MemberSignature Language="C#" Value="protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnBeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract IAsyncResult ^ OnBeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelListenerBase.OnBeginWaitForChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dcace-154">Określa <see cref="T:System.TimeSpan" /> , jak długo upłynął limit czasu oczekiwania na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="dcace-154">The <see cref="T:System.TimeSpan" /> that specifies how long the on begin wait operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="dcace-155"><see cref="T:System.AsyncCallback" /> Delegat, który odbiera powiadomienie o operacji asynchronicznej przy rozpoczęciu oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="dcace-155">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on begin wait completion.</span></span></param>
        <param name="state"><span data-ttu-id="dcace-156">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z operacją asynchroniczną podczas rozpoczęcia oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="dcace-156">An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.</span></span></param>
        <summary><span data-ttu-id="dcace-157">Po zaimplementowaniu w klasie pochodnej udostępnia punkt rozszerzalności, gdy rozpoczyna się oczekiwanie na nadejście kanału.</span><span class="sxs-lookup"><span data-stu-id="dcace-157">When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="dcace-158"><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji oczekiwania przy rozpoczęciu.</span><span class="sxs-lookup"><span data-stu-id="dcace-158">The <see cref="T:System.IAsyncResult" /> that references the asynchronous on begin wait operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndWaitForChannel">
      <MemberSignature Language="C#" Value="protected abstract bool OnEndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnEndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnEndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnEndWaitForChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndWaitForChannel : IAsyncResult -&gt; bool" Usage="channelListenerBase.OnEndWaitForChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="dcace-159">Zwracany przez wywołanie <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />metody. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="dcace-159">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="dcace-160">Po zaimplementowaniu w klasie pochodnej udostępnia punkt rozszerzalności podczas kończenia oczekiwania na nadejście kanału.</span><span class="sxs-lookup"><span data-stu-id="dcace-160">When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="dcace-161"><see langword="true" />Jeśli metoda została zakończona przed upływem czasu określonego przez <paramref name="timeout" /> wygasły; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="dcace-161"><see langword="true" /> if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWaitForChannel">
      <MemberSignature Language="C#" Value="protected abstract bool OnWaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnWaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnWaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnWaitForChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member OnWaitForChannel : TimeSpan -&gt; bool" Usage="channelListenerBase.OnWaitForChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dcace-162"><see cref="T:System.TimeSpan" /> Określa czas oczekiwania na ukończenie operacji kanału przed upływem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-162">The <see cref="T:System.TimeSpan" /> that specifies how long the on wait for a channel operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="dcace-163">Gdy jest zastępowany w klasie pochodnej, udostępnia punkt rozszerzalności podczas oczekiwania na nadejście kanału.</span><span class="sxs-lookup"><span data-stu-id="dcace-163">When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="dcace-164"><see langword="true" />Jeśli metoda została zakończona przed upływem czasu określonego przez <paramref name="timeout" /> wygasły; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="dcace-164"><see langword="true" /> if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public abstract Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.Uri" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.ServiceModel.Channels.ChannelListenerBase.Uri" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IChannelListener.Uri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcace-165">W przypadku wdrożenia w klasie pochodnej pobiera identyfikator URI, na którym odbiornik kanału nasłuchuje kanału przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="dcace-165">When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.</span></span></summary>
        <value><span data-ttu-id="dcace-166"><see cref="T:System.Uri" /> Na którym odbiornik kanału nasłuchuje kanałów przychodzących.</span><span class="sxs-lookup"><span data-stu-id="dcace-166">The <see cref="T:System.Uri" /> on which the channel listener listens for incoming channels.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForChannel">
      <MemberSignature Language="C#" Value="public bool WaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitForChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitForChannel : TimeSpan -&gt; bool&#xA;override this.WaitForChannel : TimeSpan -&gt; bool" Usage="channelListenerBase.WaitForChannel timeout" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="dcace-167"><see cref="T:System.TimeSpan" /> Określa czas oczekiwania na ukończenie operacji kanału przed upływem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="dcace-167">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="dcace-168">Po zaimplementowaniu w klasie pochodnej czeka na nadejście kanału.</span><span class="sxs-lookup"><span data-stu-id="dcace-168">When implemented in a derived class, waits for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="dcace-169"><see langword="true" />Jeśli kanał dotarł przed upływem czasu określonego przez <paramref name="timeout" /> wygasły, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="dcace-169"><see langword="true" /> if a channel arrived before the interval of time specified by the <paramref name="timeout" /> expired; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>