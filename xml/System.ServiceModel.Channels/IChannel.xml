<Type Name="IChannel" FullName="System.ServiceModel.Channels.IChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a0e0ed7fb610d29a0978a233a2450628e2573d9" />
    <Meta Name="ms.sourcegitcommit" Value="1afcc8f9041ff3093fd13fb0afda92ac188878a9" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/06/2018" />
    <Meta Name="ms.locfileid" Value="43849397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannel : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannel implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannel&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannel : System::ServiceModel::ICommunicationObject" />
  <TypeSignature Language="F#" Value="type IChannel = interface&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje podstawowe interfejs, który muszą implementować wszystkie obiekty kanału. Wymaga to, że implementują interfejsu maszyny stanu, które są współużytkowane przez wszystkie obiekty komunikacji oraz miały zaimplementowane metodę, aby pobrać obiekty ze stosu kanału.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 Kanały musi spełniać kontrakt automatu stanów, zgodnie z definicją <xref:System.ServiceModel.ICommunicationObject> interfejsu.  
  
 <xref:System.ServiceModel.Channels.IChannel> Dodaje interfejsu  
  
 <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> Metoda <xref:System.ServiceModel.ICommunicationObject> interfejsu. Ta metoda zapewnia mechanizm służący do pobierania właściwości ze stosu kanału, niezależnie od tego, gdzie w stosie tych właściwości na żywo. Termin "property" w nazwie metody odnosi się do informacji, który należy do jednego z kanałów w stosie. Typ CLR tej właściwości zależy od `T`. Ta metoda pobierania służy również na fabryki kanałów i odbiorników kanału.  
  
 `IChannel` jest dziedziczona przez każdy z interfejsów channel skojarzonych z wzorców podstawowych wymiany komunikatów:  
  
-   <xref:System.ServiceModel.Channels.IInputChannel> do odbierania wiadomości.  
  
-   <xref:System.ServiceModel.Channels.IOutputChannel> do wysyłania wiadomości.  
  
-   <xref:System.ServiceModel.Channels.IRequestChannel> Wysyłanie żądania.  
  
-   <xref:System.ServiceModel.Channels.IReplyChannel> na udzielenie odpowiedzi.  
  
-   <xref:System.ServiceModel.Channels.IDuplexChannel> dwukierunkowej wiadomości.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="iChannel.GetProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Typizowany obiekt, dla której metodę wykonywania zapytań.</typeparam>
        <summary>Zwraca typizowany obiekt wymagane, jeśli jest obecny, z odpowiednią warstwę stosu kanału.</summary>
        <returns>Typizowany obiekt <paramref name="T" /> wymagane, jeśli jest obecny lub <see langword="null" /> Jeśli tak nie jest.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Umożliwia to żądanie typizowany obiekt, takich jak interfejs do ustawiania właściwości lub pobierania stanu z odpowiednią warstwę stosu kanału. Jeśli warstwa obsługuje zwraca żądany obiekt, zwraca go. W przeciwnym razie deleguje ona wywołania do następnej warstwy ze stosu. Jeśli otrzymuje na dole stosu i nie warstwy kanału obsługiwane żądany obiekt, a następnie metoda zwraca `null`.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można zaimplementować tę właściwość według kanału, który deleguje wywołanie za pomocą stosu`InnerChannel` właściwość, która pobiera kanał wewnętrznego dla tego kanału.  
  
 [!code-csharp[S_UEIChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueichannel/cs/generatedclient.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>