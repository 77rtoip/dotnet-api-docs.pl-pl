<Type Name="FaultConverter" FullName="System.ServiceModel.Channels.FaultConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7a76592242fea34223263f8dcd034fc5f06d849" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36422466" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FaultConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FaultConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.FaultConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FaultConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FaultConverter abstract" />
  <TypeSignature Language="F#" Value="type FaultConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="34a9f-101">Konwertuje wyjątków zgłaszanych przez kanał do komunikatów "fault SOAP" zgodnych ze standardami protokołu kanału.</span>
      <span class="sxs-lookup">
        <span data-stu-id="34a9f-101">Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FaultConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FaultConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34a9f-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.FaultConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.FaultConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultFaultConverter">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.FaultConverter GetDefaultFaultConverter (System.ServiceModel.Channels.MessageVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.FaultConverter GetDefaultFaultConverter(class System.ServiceModel.Channels.MessageVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultFaultConverter (version As MessageVersion) As FaultConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::FaultConverter ^ GetDefaultFaultConverter(System::ServiceModel::Channels::MessageVersion ^ version);" />
      <MemberSignature Language="F#" Value="static member GetDefaultFaultConverter : System.ServiceModel.Channels.MessageVersion -&gt; System.ServiceModel.Channels.FaultConverter" Usage="System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.FaultConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="34a9f-103">Wersja komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-103">The message version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34a9f-104">Pobiera konwerter błędów domyślne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-104">Gets the default fault converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34a9f-105">Wystąpienie <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-105">An instance of <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34a9f-106">Kanały transportu powinny delegować do tej metody można pobrać konwerter błędu protokołu SOAP, WS-Addressing domyślne.</span><span class="sxs-lookup"><span data-stu-id="34a9f-106">Transport channels should delegate to this method to get the default SOAP WS-Addressing fault converter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTryCreateException">
      <MemberSignature Language="C#" Value="protected abstract bool OnTryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTryCreateException(class System.ServiceModel.Channels.Message message, class System.ServiceModel.Channels.MessageFault fault, [out] class System.Exception&amp; exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnTryCreateException(System::ServiceModel::Channels::Message ^ message, System::ServiceModel::Channels::MessageFault ^ fault, [Runtime::InteropServices::Out] Exception ^ % exception);" />
      <MemberSignature Language="F#" Value="abstract member OnTryCreateException : System.ServiceModel.Channels.Message * System.ServiceModel.Channels.MessageFault *  -&gt; bool" Usage="faultConverter.OnTryCreateException (message, fault, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.MessageFault" />
        <Parameter Name="exception" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="34a9f-107">Komunikat o błędzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-107">The fault message.</span>
          </span>
        </param>
        <param name="fault">
          <span data-ttu-id="34a9f-108">Błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-108">The fault.</span>
          </span>
        </param>
        <param name="exception">
          <span data-ttu-id="34a9f-109">Jeśli konwersja powiedzie się, wyjątek protokołu SOAP, jest zwracana jako <see langword="out" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-109">If conversion is successful, the SOAP exception, returned as an <see langword="out" /> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34a9f-110">Próbuje utworzyć wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-110">Tries to create the exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34a9f-111">
            <see langword="true" /> Jeśli błąd został pomyślnie przekonwertowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-111">
              <see langword="true" /> if fault was successfully converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="34a9f-112">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-112">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34a9f-113">Dla warstwy kanału zaimplementować `GetProperty<FaultConverter>` do obsługi konwertowania komunikaty o błędach SOAP wyjątków, przesłonić tę metodę w celu utworzenia wyjątku, wykonując następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="34a9f-113">For a channel layer to implement `GetProperty<FaultConverter>` to support converting fault messages to SOAP exceptions, override this method to create an exception by doing the following steps:</span></span>  
  
-   <span data-ttu-id="34a9f-114">Sprawdź komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="34a9f-114">Inspect the fault message.</span></span>  
  
-   <span data-ttu-id="34a9f-115">Rozpoznany, wykonaj odpowiednie konwersji.</span><span class="sxs-lookup"><span data-stu-id="34a9f-115">If recognized, do the appropriate conversion.</span></span>  
  
-   <span data-ttu-id="34a9f-116">Jeśli nie został rozpoznany, przekonwertuj go przez wywołanie do `GetProperty<FaultConverter>` w wewnętrznym kanale.</span><span class="sxs-lookup"><span data-stu-id="34a9f-116">If not recognized, convert it by a call to `GetProperty<FaultConverter>` on the inner channel.</span></span>  
  
 <span data-ttu-id="34a9f-117">Kanały transportu powinny być delegowane do <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> uzyskać konwerter błędu SOAP/WS-Addressing domyślne.</span><span class="sxs-lookup"><span data-stu-id="34a9f-117">Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTryCreateFaultMessage">
      <MemberSignature Language="C#" Value="protected abstract bool OnTryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTryCreateFaultMessage(class System.Exception exception, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnTryCreateFaultMessage(Exception ^ exception, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="abstract member OnTryCreateFaultMessage : Exception *  -&gt; bool" Usage="faultConverter.OnTryCreateFaultMessage (exception, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="34a9f-118">Wyjątek protokołu SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-118">The SOAP exception.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="34a9f-119">Komunikat o błędzie zwrócony jako <see langword="out" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-119">The fault message returned as an <see langword="out" /> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34a9f-120">Próbuje utworzyć komunikat o błędzie, gdy ten błąd został przekonwertowany na wyjątek protokołu SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-120">Tries to create the fault message once the fault has been converted to a SOAP exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34a9f-121">
            <see langword="true" /> Jeśli komunikat o błędzie został pomyślnie utworzony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-121">
              <see langword="true" /> if fault message was successfully created; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="34a9f-122">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-122">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34a9f-123">Implementowanie kanałów, które obsługuje błąd konwersji `GetProperty<FaultConverter>` i przesłonić tę metodę można wykonać następujące czynności.</span><span class="sxs-lookup"><span data-stu-id="34a9f-123">Channels that support fault conversion implement `GetProperty<FaultConverter>` and override this method to do the following.</span></span> <span data-ttu-id="34a9f-124">Jeśli warstwę można przekonwertować wyjątek nie; w przeciwnym razie wywołuje `GetProperty<FaultConverter>` w jego wewnętrznym kanale.</span><span class="sxs-lookup"><span data-stu-id="34a9f-124">If a layer can convert the exception it does; otherwise it calls `GetProperty<FaultConverter>` on its inner channel.</span></span> <span data-ttu-id="34a9f-125">Kanały transportu powinny być delegowane do <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> uzyskać konwerter błędu SOAP/WS-Addressing domyślne.</span><span class="sxs-lookup"><span data-stu-id="34a9f-125">Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateException">
      <MemberSignature Language="C#" Value="public bool TryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCreateException(class System.ServiceModel.Channels.Message message, class System.ServiceModel.Channels.MessageFault fault, [out] class System.Exception&amp; exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateException(System::ServiceModel::Channels::Message ^ message, System::ServiceModel::Channels::MessageFault ^ fault, [Runtime::InteropServices::Out] Exception ^ % exception);" />
      <MemberSignature Language="F#" Value="member this.TryCreateException : System.ServiceModel.Channels.Message * System.ServiceModel.Channels.MessageFault *  -&gt; bool" Usage="faultConverter.TryCreateException (message, fault, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.MessageFault" />
        <Parameter Name="exception" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="34a9f-126">Komunikat o błędzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-126">The fault message.</span>
          </span>
        </param>
        <param name="fault">
          <span data-ttu-id="34a9f-127">Błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-127">The fault.</span>
          </span>
        </param>
        <param name="exception">
          <span data-ttu-id="34a9f-128">Jeśli konwersja powiedzie się, wyjątek protokołu SOAP, jest zwracana jako <see langword="out" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-128">If conversion is successful, the SOAP exception, returned as an <see langword="out" /> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34a9f-129">Opakowuje <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> z sprawdzanie błędów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-129">Wraps <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> with error checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34a9f-130">
            <see langword="true" /> Jeśli błąd został pomyślnie przekonwertowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-130">
              <see langword="true" /> if fault was successfully converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="34a9f-131">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-131">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34a9f-132"><xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> jest klasą abstrakcyjną, które należy wdrożyć.</span><span class="sxs-lookup"><span data-stu-id="34a9f-132"><xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> is an abstract class that you must implement.</span></span> <span data-ttu-id="34a9f-133">Bieżąca metoda opakowuje kilku testów błąd parametru wokół wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="34a9f-133">The current method wraps several parameter error tests around a call to that method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="34a9f-134">
            <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> zwrócony <see langword="false" /> , ale <paramref name="exception" /> nie jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-134">
              <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> returned <see langword="false" /> but <paramref name="exception" /> is not <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFaultMessage">
      <MemberSignature Language="C#" Value="public bool TryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCreateFaultMessage(class System.Exception exception, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateFaultMessage(Exception ^ exception, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="member this.TryCreateFaultMessage : Exception *  -&gt; bool" Usage="faultConverter.TryCreateFaultMessage (exception, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="34a9f-135">Wyjątek protokołu SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-135">The SOAP exception.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="34a9f-136">Komunikat o błędzie zwrócony jako <see langword="out" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-136">The fault message returned as an <see langword="out" /> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34a9f-137">Opakowuje <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" /> z sprawdzanie błędów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-137">Wraps <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" /> with error checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34a9f-138">
            <see langword="true" /> Jeśli komunikat o błędzie został pomyślnie utworzony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-138">
              <see langword="true" /> if fault message was successfully created; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="34a9f-139">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-139">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34a9f-140"><xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> jest klasą abstrakcyjną, które należy wdrożyć.</span><span class="sxs-lookup"><span data-stu-id="34a9f-140"><xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> is an abstract class that you must implement.</span></span> <span data-ttu-id="34a9f-141">Bieżąca metoda opakowuje kilku testów błąd wokół wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="34a9f-141">The current method wraps several error tests around a call to that method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="34a9f-142">
            <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> zwrócony <see langword="false" /> , ale <paramref name="message" /> nie jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34a9f-142">
              <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> returned <see langword="false" /> but <paramref name="message" /> is not <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>