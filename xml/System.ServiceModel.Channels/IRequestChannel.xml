<Type Name="IRequestChannel" FullName="System.ServiceModel.Channels.IRequestChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3308815bb08b3c00595dd459fdc5ee7f5f09da66" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36525566" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRequestChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IRequestChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRequestChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IRequestChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje kontrakt, które kanał należy wdrożyć na stronie żądania powiadomienia "żądanie-odpowiedź" między punktami końcowymi obsługi wiadomości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.IRequestChannel> Definiuje synchroniczne i asynchroniczne wariantów <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> metodę, która zwraca komunikat odpowiedzi. Zapewnia także <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> i <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> właściwości, aby pobrać adres punktu końcowego i identyfikator URI, do którego wysyła komunikat żądania.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna operację asynchroniczną do przesyłania komunikat żądania po stronie odpowiedzi wymiany komunikatów żądanie odpowiedź.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Żądanie <see cref="T:System.ServiceModel.Channels.Message" /> przekazywanych.</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, który otrzyma powiadomienie o ukończeniu operacji asynchronicznej przesyłania komunikatu żądania.</param>
        <param name="state">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z przesyłania komunikatu żądania operacji asynchronicznej.</param>
        <summary>Rozpoczyna operację asynchroniczną do przesyłania komunikat żądania po stronie odpowiedzi wymiany komunikatów żądanie odpowiedź.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który odwołuje się do przekazywania komunikatów asynchronicznych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> jest generowany. Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości. Wartość domyślna to 65 536 bajtów.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób zaimplementować tę metodę.  
  
 [!code-csharp[S_UE_HttpCookieSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Żądanie <see cref="T:System.ServiceModel.Channels.Message" /> przekazywanych.</param>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> , Który określa przedział czasu, w którym można odebrać odpowiedzi.</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, który otrzyma powiadomienie o ukończeniu operacji asynchronicznej przesyłania komunikatu żądania.</param>
        <param name="state">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z przesyłania komunikatu żądania operacji asynchronicznej.</param>
        <summary>Rozpoczyna operację asynchroniczną do przesyłania komunikat żądania po stronie odpowiedzi wymiany komunikatów typu żądanie odpowiedź w określonym interwale czasu.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który odwołuje się do przekazywania komunikatów asynchronicznych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> powinien zostać zgłoszony. Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości. Wartość domyślna to 65 536 bajtów.  
  
 Jeśli `timeout` jest przekazywany podczas wywoływania funkcji, a następnie ta wartość jest używana. Jeśli <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> jest ustawiona na powiązanie, wartość w powiązaniu jest używany, jeśli nie, a następnie `timeout` określono podczas wywoływania funkcji.  
  
 <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> Jest używana, jeśli określono limitu czasu dla obu powiązania lub podczas wywoływania funkcji. Ta wartość domyślna to 1 minuta.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób zaimplementować tę metodę:  
  
 [!code-csharp[S_UE_HttpCookieSession#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Operacja powinien zgłosić <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony przed zakończeniem operacji.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRequest (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.EndRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> metody.</param>
        <summary>Kończy operację asynchroniczną do zwrócenia na podstawie komunikatu odpowiedzi na żądanie przesyłane.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.Message" /> Otrzymanych w odpowiedzi na żądanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> jest generowany. Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości. Wartość domyślna to 65 536 bajtów.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób zaimplementować tę metodę.  
  
 [!code-csharp[S_UE_HttpCookieSession#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres zdalny, do którego kanał żądania wysyła wiadomości.</summary>
        <value>
          <see cref="T:System.ServiceModel.EndpointAddress" /> Do której kanał żądania wysyła wiadomości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.EndpointAddress> Służy jako docelowy ultimate i adresu fizycznego, jeśli <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> nie jest określona. Jeśli <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> zostanie określony, to rzeczywisty adres fizyczny jest wysyłany komunikat, a za pomocą którego wiadomości musi przejść do osiągnięcia miejsca docelowego.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób wykonania tej właściwości.  
  
 [!code-csharp[S_UE_HttpCookieSession#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Request">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła żądanie oparta na komunikatach i zwraca skorelowane na podstawie komunikatu odpowiedzi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Żądanie <see cref="T:System.ServiceModel.Channels.Message" /> przekazywanych.</param>
        <summary>Wysyła żądanie oparta na komunikatach i zwraca skorelowane na podstawie komunikatu odpowiedzi.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.Message" /> Otrzymanych w odpowiedzi na żądanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacje <xref:System.ServiceModel.Channels.IRequestChannel> upewnij się, że komunikat odpowiedzi są skorelowane z komunikatu żądania.  
  
 Ogólnie rzecz biorąc jeśli implementacja <xref:System.ServiceModel.Channels.IRequestChannel> odbiera komunikat, który nie jest skorelowany oczekujące żądanie zostanie odrzucone.  
  
 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> Metodę można wywołać jednocześnie przez wiele wątków.  
  
 Przekazaniem ich do kanału żądania powoduje, że komunikat można było uzyskać dostęp. Po wywołaniu metody <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, możesz sprawdzić już komunikatu lub wywołania <xref:System.ServiceModel.Channels.Message.Close%2A> w komunikacie.  
  
 Jeśli komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> jest generowany. Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości. Wartość domyślna to 65 536 bajtów.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób zaimplementować tę metodę:  
  
 [!code-csharp[S_UE_HttpCookieSession#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message * TimeSpan -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">Żądanie <see cref="T:System.ServiceModel.Channels.Message" /> przekazywanych.</param>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> , Który określa przedział czasu, w którym można odebrać odpowiedzi.</param>
        <summary>Wysyła żądanie oparta na komunikatach i zwraca skorelowane na podstawie komunikatu odpowiedzi w określonym interwale czasu.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.Message" /> Otrzymanych w odpowiedzi na żądanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacje <xref:System.ServiceModel.Channels.IRequestChannel> upewnij się, że komunikat odpowiedzi są skorelowane z komunikatu żądania.  
  
 Ogólnie rzecz biorąc jeśli implementacja <xref:System.ServiceModel.Channels.IRequestChannel> odbiera komunikat, który nie jest skorelowany oczekujące żądanie zostanie odrzucone.  
  
 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> Metodę można wywołać jednocześnie przez wiele wątków.  
  
 Przekazaniem ich do kanału żądania powoduje, że komunikat można było uzyskać dostęp. Po wywołaniu metody <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, możesz sprawdzić już komunikatu lub wywołania <xref:System.ServiceModel.Channels.Message.Close%2A> w komunikacie.  
  
 Jeśli komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> jest generowany. Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości. Wartość domyślna to 65 536 bajtów.  
  
 Jeśli `timeout` jest przekazywany podczas wywoływania funkcji, a następnie ta wartość jest używana. Jeśli <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> jest ustawiona na powiązanie, wartość w powiązaniu jest używany, jeśli nie, a następnie `timeout` określono podczas wywoływania funkcji.  
  
 <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> Jest używana, jeśli określono limitu czasu dla obu powiązania lub podczas wywoływania funkcji. Ta wartość domyślna to 1 minuta.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób zaimplementować tę metodę.  
  
 [!code-csharp[S_UE_HttpCookieSession#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Operacja powinien zgłosić <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony przed zakończeniem operacji.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres transportu, do której żądanie jest wysyłania.</summary>
        <value>
          <see cref="T:System.Uri" /> Zawierający adres transportu, do którego są wysyłane wiadomości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.EndpointAddress> Służy jako docelowy ultimate i adresu fizycznego, jeśli <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> nie jest określona. Jeśli <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> zostanie określony, to rzeczywisty adres fizyczny jest wysyłany komunikat, a za pomocą którego wiadomości musi przejść do osiągnięcia miejsca docelowego.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób wykonania tej właściwości.  
  
 [!code-csharp[S_UE_HttpCookieSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>