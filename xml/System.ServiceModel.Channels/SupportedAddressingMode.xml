<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="d964a-101">Określa, czy usługa obsługuje wysyłanie odpowiedzi na adresy anonimowe, tylko adresy nieanonimowych i/lub.</span><span class="sxs-lookup"><span data-stu-id="d964a-101">Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d964a-102">To wyliczenie służy do określania możliwości serwer, który z kolei nakłada zapotrzebowania na swoich klientów.</span><span class="sxs-lookup"><span data-stu-id="d964a-102">This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</span></span>  
  
 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<span data-ttu-id="d964a-103"> istnieje wiele formantów adresów, służącą do wysyłania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="d964a-103"> has a variety of addressing controls for specifying where messages should be sent.</span></span> <span data-ttu-id="d964a-104">Na przykład istnieje logicznym <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> adres docelowy komunikatu, fizyczny ("poprzez") adres używany przez transport, na którym nasłuchuje usługa, a <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> adres punktu końcowego, który udostępnia adres punktu końcowego klienta.</span><span class="sxs-lookup"><span data-stu-id="d964a-104">For example, there is the logical <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> address of the endpoint that provides the address of the client endpoint.</span></span>  
  
 <span data-ttu-id="d964a-105">W przypadku najprostszych stronami wymiany wiadomości między sobą tylko go nie jest konieczne oddzielnie Określ tych adresów.</span><span class="sxs-lookup"><span data-stu-id="d964a-105">In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</span></span> <span data-ttu-id="d964a-106">Jednak ponieważ wymiany może wymagać innych miejsc docelowych wiadomości, musi być możliwe określenie adresów musi jawnie udostępniane.</span><span class="sxs-lookup"><span data-stu-id="d964a-106">But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</span></span> <span data-ttu-id="d964a-107">Nawet między stronami dwóch tę możliwość czasami jest wymagane jako dwa protokołu HTTP z gdzie serwera należy utworzyć własny żądania HTTP.</span><span class="sxs-lookup"><span data-stu-id="d964a-107">Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</span></span> <span data-ttu-id="d964a-108">Następujące rodzaje relacje są definiowane przez <xref:System.ServiceModel.Channels.SupportedAddressingMode> wyliczenie do przechwycenia te wzorce obsługi komunikatów:</span><span class="sxs-lookup"><span data-stu-id="d964a-108">The following kinds of relationships are defined by the <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeration to capture these messaging patterns:</span></span>  
  
-   <span data-ttu-id="d964a-109">Anonimowe adresy są najbardziej podstawowej postaci adresowania.</span><span class="sxs-lookup"><span data-stu-id="d964a-109">Anonymous addresses are the most basic form of addressing.</span></span> <span data-ttu-id="d964a-110">Adresowanie anonimowego jest używana po domyślną ścieżkę dla odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="d964a-110">Anonymous addressing is used when there is a default path for a response.</span></span> <span data-ttu-id="d964a-111">Protokół TCP jest transportu komunikacja dwukierunkowa i mogą być wysyłane odpowiedzi na wiadomość TCP do drugiej stronie gniazda, który wysłał oryginalnej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="d964a-111">TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</span></span> <span data-ttu-id="d964a-112">Podobnie model żądanie odpowiedź HTTP wysyła odpowiedzi za pośrednictwem kanału odpowiedzi HTTP.</span><span class="sxs-lookup"><span data-stu-id="d964a-112">Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</span></span> <span data-ttu-id="d964a-113">Żadna z tych odpowiedzi, wymaga określenia, gdzie będą wiadomości odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="d964a-113">Neither of these responses requires specifying where the response messages are going.</span></span> <span data-ttu-id="d964a-114">Jeśli serwer wymaga anonimowe odpowiedzi od klienta, używa anonimowe wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="d964a-114">When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</span></span> <span data-ttu-id="d964a-115">Usługi WCF dostarczane przez system <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> i <xref:System.ServiceModel.WSHttpBinding> powiązania zawsze używać adresów anonimowych.</span><span class="sxs-lookup"><span data-stu-id="d964a-115">The WCF system-provided <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> and <xref:System.ServiceModel.WSHttpBinding> bindings always use Anonymous addresses.</span></span>  
  
-   <span data-ttu-id="d964a-116">Nieanonimowych adresy są używane podczas wysyłania odpowiedzi wymaga utworzenia nowego kanału komunikacji.</span><span class="sxs-lookup"><span data-stu-id="d964a-116">NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</span></span> <span data-ttu-id="d964a-117">Usługi WCF dostarczane przez system <xref:System.ServiceModel.WSDualHttpBinding> powiązania używa nieanonimowych adresu.</span><span class="sxs-lookup"><span data-stu-id="d964a-117">The WCF system-provided <xref:System.ServiceModel.WSDualHttpBinding> binding uses a NonAnonymous address.</span></span> <span data-ttu-id="d964a-118">Z podwójną HTTP klient tworzy żądanie HTTP, aby wysłać wiadomość, a następnie serwera musi utworzyć własną żądania HTTP do wysłania do odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="d964a-118">With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</span></span> <span data-ttu-id="d964a-119">Ponieważ serwer inicjuje wysyłania, musi on mieć określonego punktu końcowego do nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="d964a-119">Because the server is initiating the send, it must have a specific endpoint to establish the connection.</span></span> <span data-ttu-id="d964a-120">Należy podać serwer adres punktu końcowego dla odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="d964a-120">You must provide the server the address of an endpoint for its response.</span></span> <span data-ttu-id="d964a-121">Podobnie jeśli usługa musi odpowiadać, jednokierunkowe wiadomość, która odebrała, wymagany jest również nieanonimowych adresów, ponieważ nie jest dostępna dla komunikacji nie kanału zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="d964a-121">Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</span></span> <span data-ttu-id="d964a-122">Jeśli serwer wysyła wiadomość ponownie, wymagany jest osobny operacji z używany do wysyłania do pierwszej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="d964a-122">If the server sends a message back, a completely separate operation from that used to send the first message is required.</span></span>  
  
-   <span data-ttu-id="d964a-123">Mieszany jest trzeci formularza adresowania, który łączy anonimowe i nieanonimowych adresów w zależności od tego, który jest wysyłany komunikat.</span><span class="sxs-lookup"><span data-stu-id="d964a-123">Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</span></span> <span data-ttu-id="d964a-124">Typowym przykładem adresowania trybu mieszanego jest użycie dedykowanych maszyny do przetwarzania awarii lub potwierdzeń wiadomości.</span><span class="sxs-lookup"><span data-stu-id="d964a-124">A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</span></span> <span data-ttu-id="d964a-125">W przypadku standardowej wymiany sekwencji odpowiedzi HTTP lub TCP, odpowiedzi Użyj anonimowe adresowania, ale usterek Użyj nieanonimowych adresowania.</span><span class="sxs-lookup"><span data-stu-id="d964a-125">If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</span></span> <span data-ttu-id="d964a-126">Gdy WCF nie zawiera mieszane adresowania funkcji w jednym z powiązań standardowych, istnieje możliwość zapisu kanału, który umożliwia usłudze wysyłania odpowiedzi bezpośrednio na kanału zwrotnego (jeśli jest to adres odpowiedzi jest anonimowy) lub oddzielny kanał (gdy Adres odpowiedzi jest nieanonimowych).</span><span class="sxs-lookup"><span data-stu-id="d964a-126">While WCF does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</span></span> <span data-ttu-id="d964a-127">W takim przypadku można określić elementu powiązania kanału <xref:System.ServiceModel.Channels.SupportedAddressingMode> mieszany.</span><span class="sxs-lookup"><span data-stu-id="d964a-127">In such a case, the binding element of the channel is used to set <xref:System.ServiceModel.Channels.SupportedAddressingMode> to Mixed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d964a-128">Serwer obsługuje tylko adresy anonimowe i klientów, musisz podać adres anonimowy odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="d964a-128">The server only supports anonymous addresses and clients must provide an anonymous response address.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d964a-129">Serwer obsługuje zarówno anonimowych, jak i nieanonimowych adresy i może wybrać jednego lub obu klientów.</span><span class="sxs-lookup"><span data-stu-id="d964a-129">The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d964a-130">Serwer obsługuje tylko adresy anonimowe i klientów, należy podać adres nieanonimowych odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="d964a-130">The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>