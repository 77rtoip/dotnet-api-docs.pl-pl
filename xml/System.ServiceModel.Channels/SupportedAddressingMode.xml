<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed6ff44a3743f1203dea877309b989d8aaffda93" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69107172" /></Metadata><TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="b1e56-101">Określa, czy usługa obsługuje wysyłanie odpowiedzi tylko do adresów anonimowych, tylko do adresów nieanonimowych lub do obu.</span><span class="sxs-lookup"><span data-stu-id="b1e56-101">Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1e56-102">To Wyliczenie służy do określania możliwości serwera, co z kolei nakłada wymóg na jego klientów.</span><span class="sxs-lookup"><span data-stu-id="b1e56-102">This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</span></span>  
  
 <span data-ttu-id="b1e56-103">Windows Communication Foundation (WCF) ma różne mechanizmy kontroli adresowania służące do określania, gdzie mają być wysyłane komunikaty.</span><span class="sxs-lookup"><span data-stu-id="b1e56-103">Windows Communication Foundation (WCF) has a variety of addressing controls for specifying where messages should be sent.</span></span> <span data-ttu-id="b1e56-104">Na przykład istnieje adres logiczny <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> dla miejsca docelowego wiadomości, adres fizyczny ("przez"), używany przez transport, na którym nasłuchuje usługa <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> i adres punktu końcowego, który zapewnia adres punktu końcowego klienta.</span><span class="sxs-lookup"><span data-stu-id="b1e56-104">For example, there is the logical <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> address of the endpoint that provides the address of the client endpoint.</span></span>  
  
 <span data-ttu-id="b1e56-105">W największej sytuacji, gdy dwie strony wymieniają wiadomości tylko między sobą, nie trzeba podawać tych adresów osobno.</span><span class="sxs-lookup"><span data-stu-id="b1e56-105">In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</span></span> <span data-ttu-id="b1e56-106">Jednak ponieważ wymiany mogą dotyczyć innych miejsc docelowych komunikatów, należy określić, kiedy należy jawnie podać adresy.</span><span class="sxs-lookup"><span data-stu-id="b1e56-106">But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</span></span> <span data-ttu-id="b1e56-107">Nawet między zaledwie dwie strony taka możliwość jest czasami wymagana, podobnie jak w przypadku podwójnego protokołu HTTP, gdzie serwer musi utworzyć własne żądanie HTTP.</span><span class="sxs-lookup"><span data-stu-id="b1e56-107">Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</span></span> <span data-ttu-id="b1e56-108">Następujące rodzaje relacji są zdefiniowane przez <xref:System.ServiceModel.Channels.SupportedAddressingMode> Wyliczenie do przechwytywania wzorców obsługi komunikatów:</span><span class="sxs-lookup"><span data-stu-id="b1e56-108">The following kinds of relationships are defined by the <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeration to capture these messaging patterns:</span></span>  
  
-   <span data-ttu-id="b1e56-109">Adresy anonimowe są najbardziej podstawową formą adresowania.</span><span class="sxs-lookup"><span data-stu-id="b1e56-109">Anonymous addresses are the most basic form of addressing.</span></span> <span data-ttu-id="b1e56-110">Adresy anonimowe są używane, gdy istnieje ścieżka domyślna odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="b1e56-110">Anonymous addressing is used when there is a default path for a response.</span></span> <span data-ttu-id="b1e56-111">TCP jest dwukierunkową transportem komunikacyjnym i odpowiedzią na komunikat protokołu TCP można wysłać z powrotem do drugiej strony gniazda, które wysłało oryginalną wiadomość.</span><span class="sxs-lookup"><span data-stu-id="b1e56-111">TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</span></span> <span data-ttu-id="b1e56-112">Podobnie model żądanie-odpowiedź protokołu HTTP wysyła odpowiedzi za pośrednictwem kanału odpowiedzi HTTP.</span><span class="sxs-lookup"><span data-stu-id="b1e56-112">Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</span></span> <span data-ttu-id="b1e56-113">Żadna z tych odpowiedzi nie wymaga określenia miejsca, w którym będą wysyłane komunikaty odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="b1e56-113">Neither of these responses requires specifying where the response messages are going.</span></span> <span data-ttu-id="b1e56-114">Gdy serwer wymaga anonimowych odpowiedzi z klienta, używa wartości anonimowej wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="b1e56-114">When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</span></span> <span data-ttu-id="b1e56-115">Usługi WCF dostarczone <xref:System.ServiceModel.NetTcpBinding> <xref:System.ServiceModel.BasicHttpBinding> przez system i <xref:System.ServiceModel.WSHttpBinding> powiązania zawsze używają adresów anonimowych.</span><span class="sxs-lookup"><span data-stu-id="b1e56-115">The WCF system-provided <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> and <xref:System.ServiceModel.WSHttpBinding> bindings always use Anonymous addresses.</span></span>  
  
-   <span data-ttu-id="b1e56-116">Adresy nieanonimowe są używane podczas wysyłania odpowiedzi wymaga utworzenia nowego kanału na potrzeby komunikacji.</span><span class="sxs-lookup"><span data-stu-id="b1e56-116">NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</span></span> <span data-ttu-id="b1e56-117">Powiązanie dostarczone <xref:System.ServiceModel.WSDualHttpBinding> z systemem WCF używa nieanonimowego adresu.</span><span class="sxs-lookup"><span data-stu-id="b1e56-117">The WCF system-provided <xref:System.ServiceModel.WSDualHttpBinding> binding uses a NonAnonymous address.</span></span> <span data-ttu-id="b1e56-118">Przy użyciu podwójnego protokołu HTTP klient tworzy żądanie HTTP, aby wysłać komunikat, a następnie serwer musi utworzyć własne żądanie HTTP, aby wysłać odpowiedź.</span><span class="sxs-lookup"><span data-stu-id="b1e56-118">With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</span></span> <span data-ttu-id="b1e56-119">Ponieważ serwer inicjuje wysyłanie, musi mieć określony punkt końcowy, aby nawiązać połączenie.</span><span class="sxs-lookup"><span data-stu-id="b1e56-119">Because the server is initiating the send, it must have a specific endpoint to establish the connection.</span></span> <span data-ttu-id="b1e56-120">Należy podać serwerowi adres punktu końcowego odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="b1e56-120">You must provide the server the address of an endpoint for its response.</span></span> <span data-ttu-id="b1e56-121">Podobnie, jeśli usługa musi odpowiedzieć na odebrany komunikat jednokierunkowy, wymaga również nieanonimowego adresu, ponieważ nie ma dostępnego kanału do komunikacji.</span><span class="sxs-lookup"><span data-stu-id="b1e56-121">Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</span></span> <span data-ttu-id="b1e56-122">Jeśli serwer wysyła komunikat z powrotem, wymagana jest całkowicie oddzielna operacja z, która została użyta do wysłania pierwszej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="b1e56-122">If the server sends a message back, a completely separate operation from that used to send the first message is required.</span></span>  
  
-   <span data-ttu-id="b1e56-123">Mieszane to trzecia postać adresów, która łączy anonimowe i nieanonimowe adresy w zależności od wysyłanego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="b1e56-123">Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</span></span> <span data-ttu-id="b1e56-124">Typowym przykładem adresowania w trybie mieszanym jest użycie dedykowanego komputera do przetwarzania błędów lub komunikatów potwierdzających.</span><span class="sxs-lookup"><span data-stu-id="b1e56-124">A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</span></span> <span data-ttu-id="b1e56-125">Jeśli Standardowa sekwencja wymiany dla odpowiedzi to HTTP lub TCP, odpowiedzi używają anonimowego adresowania, ale błędy używają nieanonimowego adresowania.</span><span class="sxs-lookup"><span data-stu-id="b1e56-125">If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</span></span> <span data-ttu-id="b1e56-126">Mimo że WCF nie zapewnia mieszanych funkcji adresowania w jednym ze standardowych powiązań, można napisać kanał, który umożliwia usłudze wysyłanie odpowiedzi bezpośrednio w kanale zaplecza (gdy adres odpowiedzi jest anonimowy) lub w osobnym kanale (gdy Adres odpowiedzi jest nieanonimowy.</span><span class="sxs-lookup"><span data-stu-id="b1e56-126">While WCF does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</span></span> <span data-ttu-id="b1e56-127">W takim przypadku element powiązania kanału jest używany do ustawiania wartości <xref:System.ServiceModel.Channels.SupportedAddressingMode> mieszanej.</span><span class="sxs-lookup"><span data-stu-id="b1e56-127">In such a case, the binding element of the channel is used to set <xref:System.ServiceModel.Channels.SupportedAddressingMode> to Mixed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b1e56-128">Serwer obsługuje tylko adresy anonimowe i klienci muszą podawać anonimowy adres odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="b1e56-128">The server only supports anonymous addresses and clients must provide an anonymous response address.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b1e56-129">Serwer obsługuje zarówno adresy anonimowe, jak i nieanonimowe, a klienci mogą wybrać jedną lub obie.</span><span class="sxs-lookup"><span data-stu-id="b1e56-129">The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b1e56-130">Serwer obsługuje tylko adresy nieanonimowe i klienci muszą podać nieanonimowy adres odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="b1e56-130">The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
