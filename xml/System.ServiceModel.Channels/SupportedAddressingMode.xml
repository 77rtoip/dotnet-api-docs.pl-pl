<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7572a49e3eb49e3e583c5413d3be8bece2605b1d" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313554" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa, czy usługa obsługuje wysyłanie odpowiedzi na adresy anonimowe, tylko adresy nieanonimowych i/lub.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To wyliczenie służy do określania możliwości serwer, który z kolei nakłada zapotrzebowania na swoich klientów.  
  
 Windows Communication Foundation (WCF) ma wiele adresów do określenia, gdzie mają być wysyłane wiadomości. Na przykład istnieje logicznym <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> adres docelowy komunikatu, fizyczny ("poprzez") adres używany przez transport, na którym nasłuchuje usługa, a <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> adres punktu końcowego, który udostępnia adres punktu końcowego klienta.  
  
 W przypadku najprostszych stronami wymiany wiadomości między sobą tylko go nie jest konieczne oddzielnie Określ tych adresów. Jednak ponieważ wymiany może wymagać innych miejsc docelowych wiadomości, musi być możliwe określenie adresów musi jawnie udostępniane. Nawet między stronami dwóch tę możliwość czasami jest wymagane jako dwa protokołu HTTP z gdzie serwera należy utworzyć własny żądania HTTP. Następujące rodzaje relacje są definiowane przez <xref:System.ServiceModel.Channels.SupportedAddressingMode> wyliczenie do przechwycenia te wzorce obsługi komunikatów:  
  
-   Anonimowe adresy są najbardziej podstawowej postaci adresowania. Adresowanie anonimowego jest używana po domyślną ścieżkę dla odpowiedzi. Protokół TCP jest transportu komunikacja dwukierunkowa i mogą być wysyłane odpowiedzi na wiadomość TCP do drugiej stronie gniazda, który wysłał oryginalnej wiadomości. Podobnie model żądanie odpowiedź HTTP wysyła odpowiedzi za pośrednictwem kanału odpowiedzi HTTP. Żadna z tych odpowiedzi, wymaga określenia, gdzie będą wiadomości odpowiedzi. Jeśli serwer wymaga anonimowe odpowiedzi od klienta, używa anonimowe wartości wyliczenia. Usługi WCF dostarczane przez system <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> i <xref:System.ServiceModel.WSHttpBinding> powiązania zawsze używać adresów anonimowych.  
  
-   Nieanonimowych adresy są używane podczas wysyłania odpowiedzi wymaga utworzenia nowego kanału komunikacji. Usługi WCF dostarczane przez system <xref:System.ServiceModel.WSDualHttpBinding> powiązania używa nieanonimowych adresu. Z podwójną HTTP klient tworzy żądanie HTTP, aby wysłać wiadomość, a następnie serwera musi utworzyć własną żądania HTTP do wysłania do odpowiedzi. Ponieważ serwer inicjuje wysyłania, musi on mieć określonego punktu końcowego do nawiązania połączenia. Należy podać serwer adres punktu końcowego dla odpowiedzi. Podobnie jeśli usługa musi odpowiadać, jednokierunkowe wiadomość, która odebrała, wymagany jest również nieanonimowych adresów, ponieważ nie jest dostępna dla komunikacji nie kanału zwrotnego. Jeśli serwer wysyła wiadomość ponownie, wymagany jest osobny operacji z używany do wysyłania do pierwszej wiadomości.  
  
-   Mieszany jest trzeci formularza adresowania, który łączy anonimowe i nieanonimowych adresów w zależności od tego, który jest wysyłany komunikat. Typowym przykładem adresowania trybu mieszanego jest użycie dedykowanych maszyny do przetwarzania awarii lub potwierdzeń wiadomości. W przypadku standardowej wymiany sekwencji odpowiedzi HTTP lub TCP, odpowiedzi Użyj anonimowe adresowania, ale usterek Użyj nieanonimowych adresowania. Gdy WCF nie zawiera mieszane adresowania funkcji w jednym z powiązań standardowych, istnieje możliwość zapisu kanału, który umożliwia usłudze wysyłania odpowiedzi bezpośrednio na kanału zwrotnego (jeśli jest to adres odpowiedzi jest anonimowy) lub oddzielny kanał (gdy Adres odpowiedzi jest nieanonimowych). W takim przypadku można określić elementu powiązania kanału <xref:System.ServiceModel.Channels.SupportedAddressingMode> mieszany.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Serwer obsługuje tylko adresy anonimowe i klientów, musisz podać adres anonimowy odpowiedzi.</summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Serwer obsługuje zarówno anonimowych, jak i nieanonimowych adresy i może wybrać jednego lub obu klientów.</summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Serwer obsługuje tylko adresy anonimowe i klientów, należy podać adres nieanonimowych odpowiedzi.</summary>
      </Docs>
    </Member>
  </Members>
</Type>