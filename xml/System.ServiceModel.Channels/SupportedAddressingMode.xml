<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ae63748c67f545e380dccbb2d4ab05c995bd875" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37460100" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa, czy usługa obsługuje wysyłanie odpowiedzi na tylko anonimowych adresów, tylko adresy anonimowe lub obydwoma tymi serwerami.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To wyliczenie jest używane do określania możliwości serwera, co z kolei nakłada wymaganie na swoich klientów.  
  
 Windows Communication Foundation (WCF) zawiera szereg adresowania służy do określania, gdzie mają być wysyłane wiadomości. Na przykład jest logicznym <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> adres docelowy komunikatu, fizycznych ("za pośrednictwem") adres, używany przez transportu, na którym nasłuchuje usługa, a <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> adres punktu końcowego, który zawiera adres punktu końcowego klienta.  
  
 W przypadku najbardziej podstawowym gdy obie strony wymiany wiadomości między sobą, jest nie należy określić te adresy oddzielnie. Ale ponieważ wymiany może obejmować innych miejsc docelowych wiadomości, musi być możliwe określić, kiedy adresy muszą zostać podane jawnie. Nawet między stronami tylko dwa tę możliwość czasami jest wymagane jako podwójną HTTP z której serwer musi utworzyć swój własny żądania HTTP. Następujące rodzaje relacji są definiowane przez <xref:System.ServiceModel.Channels.SupportedAddressingMode> wyliczeniu, aby przechwytywać te wzorce obsługi komunikatów:  
  
-   Adresy anonimowe są podstawowe formie adresowania. Adresowania anonimowego jest używana po domyślnej ścieżki dla odpowiedzi. Protokół TCP jest transportu dwukierunkowej komunikacji i odpowiedź na komunikat protokołu TCP można wysyłane z powrotem do drugiej stronie gniazda, który wysłał oryginalny wiadomość. Podobnie model "żądanie-odpowiedź" HTTP wysyła odpowiedzi za pomocą kanału odpowiedzi HTTP. Żadna z tych odpowiedzi wymaga określenia pliku gdzie wiadomości odpowiedzi. Jeśli serwer wymaga anonimowe odpowiedzi od klienta, zostanie użyta wartość anonimowe wyliczenia. Usługi WCF, dostarczane przez system <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> i <xref:System.ServiceModel.WSHttpBinding> powiązania zawsze używaj anonimowych adresów.  
  
-   Nieanonimowych adresy są używane podczas wysyłania odpowiedzi wymaga utworzenia nowego kanału komunikacji. Usługi WCF, dostarczane przez system <xref:System.ServiceModel.WSDualHttpBinding> powiązania używa nieanonimowych adresu. Z podwójną HTTP klient tworzy żądanie HTTP do wysyłania wiadomości, a następnie serwera musi utworzyć swój własny żądania HTTP do wysłania odpowiedzi. Ponieważ serwer inicjuje wysyłania, musi on mieć określonego punktu końcowego do nawiązania połączenia. Podaj serwer adres punktu końcowego w swojej odpowiedzi. Podobnie jeśli usługa musi odpowiedzieć na komunikat jednokierunkowy, który otrzymał, wymaga to również nieanonimowych adresów, ponieważ nie jest dostępny dla komunikacji kanału zwrotnego, nie. Jeśli serwer wysyła komunikat Wstecz, wymagany jest oddzielną operację z używanym do wysyłania do pierwszej wiadomości.  
  
-   Mieszane to trzecia formą adresowania, która łączy anonimowe, jak i nieanonimowych adresów, w zależności od komunikat, który jest wysyłany. Typowym przykładem adresowania w trybie mieszanym jest użycie dedykowanych maszyn do przetwarzania komunikatów błędów lub potwierdzenia. W przypadku protokołu HTTP lub TCP sekwencja standardowej wymiany odpowiedzi odpowiedzi Użyj anonimowe adresowania, ale usterek Użyj nieanonimowym adresowania. Chociaż usługi WCF nie zawiera mieszany adresowania funkcję w jednym z jego standardowe powiązania, jest możliwość napisania kanału, który umożliwia usłudze wysyłania odpowiedzi bezpośrednio na kanału zwrotnego (jeśli jest to adres odpowiedzi są anonimowe) lub oddzielny kanał (gdy Adres odpowiedzi jest nieanonimowych). W takim przypadku element powiązania kanału służy do ustawiania <xref:System.ServiceModel.Channels.SupportedAddressingMode> mieszany.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Serwer obsługuje tylko adresy anonimowe i klientów, musisz podać adres anonimowe odpowiedzi.</summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Serwer obsługuje nieanonimowym i anonimowych adresów, a klienci mają możliwość użycia jednego lub obu.</summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Serwer obsługuje tylko adresy anonimowe, a klienci podać adres nieanonimowym odpowiedzi.</summary>
      </Docs>
    </Member>
  </Members>
</Type>