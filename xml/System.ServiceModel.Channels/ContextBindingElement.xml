<Type Name="ContextBindingElement" FullName="System.ServiceModel.Channels.ContextBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10f36e9e657b0cacd1c847bb927637cc0c5d9214" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30572491" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Channels.IContextBindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Channels.IContextBindingElement, class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ContextBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextBindingElement&#xA;Inherits BindingElement&#xA;Implements IContextBindingElement, IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextBindingElement : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Channels::IContextBindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IContextBindingElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia poziom ochrony i mechanizm wymiany w ramach elementu powiązania i funkcji do budowania odbiorniki kanałów i fabryki kontekstu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.ContextBindingElement> Zezwala użytkownikowi na dodawanie elementu do powiązania usługi zarządzania jego protokół wymiany kontekstu. <xref:System.ServiceModel.Channels.ContextBindingElement> Umieszczany jest zwykle na niezawodność, zabezpieczeń i elementy powiązania transportu. A <xref:System.ServiceModel.Channels.ContextBindingElement> nie wymaga żadnych opcji konfiguracji i można utworzyć fabryki kanałów dla <xref:System.ServiceModel.Channels.IRequestChannel>, <xref:System.ServiceModel.Channels.IRequestSessionChannel>, i <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. Można również utworzyć kanał odbiorników dla <xref:System.ServiceModel.Channels.IReplyChannel>, <xref:System.ServiceModel.Channels.IReplySessionChannel>, i <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. Kanał kontekstu nie zmienia interfejsu kanału — podstawowy stos kanału musi obsługiwać możliwość kształt i sesji żądanego kanału.  
  
 Odbiorniki kanałów i fabryk służą do utworzenia część stosy kanału używane do przetwarzania komunikatów przychodzących i wychodzących.  
  
> [!NOTE]
>  Jeśli powiązanie opartymi na sesji jest tworzony z <xref:System.ServiceModel.Channels.ContextBindingElement> i używana z kontraktem, który określa <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A>  =  <xref:System.ServiceModel.SessionMode.NotAllowed>, <xref:System.InvalidOperationException> jest generowany po utworzeniu kanału z następującym tekstem: "zarządzania kontekstem kanału Nie można włączać lub wyłączać po otwarciu kanału." Należy ustawić <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> do <xref:System.ServiceModel.SessionMode.Allowed> lub <xref:System.ServiceModel.SessionMode.Required> lub nie korzystania z kanału opartymi na sesji.  
  
 Podczas tworzenia niestandardowego powiązania, zalecane jest dodanie <xref:System.ServiceModel.Channels.ContextBindingElement> do <xref:System.ServiceModel.Channels.BindingElementCollection> niestandardowego powiązania przed dodaniem niezawodność, a elementy powiązania zabezpieczeń, jeśli jest obecny. W przeciwnym razie usługa może zgłaszać <xref:System.ServiceModel.ProtocolException> z następującym komunikatem:  
  
 "Kanał kontekstu odebrał komunikat z kontekstem, który nie odpowiada bieżącemu kontekstowi buforowanemu w kanale. Upewnij się, że usługa nie zmienia kontekstu po jego pierwotnym ustawieniu lub wyłącz zarządzanie kontekstem przez ustawienie właściwości kanału "IContextManager.Enabled" na wartość false."  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawia domyślne wartości <xref:System.Net.Security.ProtectionLevel.Sign> dla <xref:System.Net.Security.ProtectionLevel> i <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> dla <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">
          <see cref="T:System.Net.Security.ProtectionLevel" /> Dla elementu powiązania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> klasy z określonym poziomem ochrony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawia wartość domyślną <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> dla <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="protectionLevel" /> Jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel, valuetype System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel, System::ServiceModel::Channels::ContextExchangeMechanism contextExchangeMechanism);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="contextExchangeMechanism" Type="System.ServiceModel.Channels.ContextExchangeMechanism" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">
          <see cref="T:System.Net.Security.ProtectionLevel" /> Dla elementu powiązania.</param>
        <param name="contextExchangeMechanism">
          <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" /> , Który określa mechanizm używany do wymiany kontekstu dla elementu powiązania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> klasy z określonym poziomem mechanizmu ochrony i exchange.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="protectionLevel" /> lub <paramref name="contextExchangeMechanism" /> jest nieprawidłowa.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel, valuetype System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, class System.Uri clientCallbackAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel, System::ServiceModel::Channels::ContextExchangeMechanism contextExchangeMechanism, Uri ^ clientCallbackAddress);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="contextExchangeMechanism" Type="System.ServiceModel.Channels.ContextExchangeMechanism" />
        <Parameter Name="clientCallbackAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">Poziom ochrony formularza elementu powiązania.</param>
        <param name="contextExchangeMechanism">Mechanizm używany do wymiany kontekstu dla elementu powiązania.</param>
        <param name="clientCallbackAddress">Adres wywołania zwrotnego klienta.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> klasy z poziomu ochrony określony mechanizm wymiany kontekstu i adres wywołania zwrotnego klienta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress, bool contextManagementEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel, valuetype System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, class System.Uri clientCallbackAddress, bool contextManagementEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel, System::ServiceModel::Channels::ContextExchangeMechanism contextExchangeMechanism, Uri ^ clientCallbackAddress, bool contextManagementEnabled);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="contextExchangeMechanism" Type="System.ServiceModel.Channels.ContextExchangeMechanism" />
        <Parameter Name="clientCallbackAddress" Type="System.Uri" />
        <Parameter Name="contextManagementEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">Poziom ochrony dla elementu powiązania.</param>
        <param name="contextExchangeMechanism">Mechanizm używany do wymiany kontekstu dla elementu powiązania.</param>
        <param name="clientCallbackAddress">Adres wywołania zwrotnego klienta.</param>
        <param name="contextManagementEnabled">
          <see langword="true" /> Jeśli zarządzanie kontekstem jest włączone; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> z poziomu ochrony określonej, mechanizm wymiany kontekstu, adres wywołania zwrotnego klienta i wartość, która określa, czy włączono zarządzanie kontekstem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Tworzy typ kanału fabryki kanałów.</typeparam>
        <param name="context">
          <see cref="T:System.ServiceModel.Channels.BindingContext" /> Dla kanału.</param>
        <summary>Tworzy stosu fabryki kanału klienta, który tworzy określony typ kanału dla określonego kontekstu.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> Typu <paramref name="TChannel" /> dla określonego kontekstu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> zestaw jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Typ kanału, który akceptuje odbiornika kanałów.</typeparam>
        <param name="context">
          <see cref="T:System.ServiceModel.Channels.BindingContext" /> Dla odbiornika.</param>
        <summary>Tworzy stosu odbiornika kanału klienta, który akceptuje określony typ kanału dla określonego kontekstu.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> Typu <paramref name="TChannel" /> dla określonego kontekstu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> zestaw jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Tworzy typ kanału fabryki kanałów. Tylko <see cref="T:System.ServiceModel.Channels.IRequestChannel" />, <see cref="T:System.ServiceModel.Channels.IRequestSessionChannel" />, i <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> domyślnie są dozwolone.</typeparam>
        <param name="context">
          <see cref="T:System.ServiceModel.Channels.BindingContext" /> Fabryki.</param>
        <summary>Zwraca wartość wskazującą, czy bieżący element powiązania może zbudować fabryki dla określonego typu kanału i kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli stosu fabryki kanałów określonego mogą być wbudowane w kliencie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Typ kanału, który akceptuje odbiornika kanałów. Tylko <see cref="T:System.ServiceModel.Channels.IReplyChannel" />, <see cref="T:System.ServiceModel.Channels.IReplySessionChannel" />, i <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> domyślnie są dozwolone.</typeparam>
        <param name="context">
          <see cref="T:System.ServiceModel.Channels.BindingContext" /> Dla odbiornika.</param>
        <summary>Zwraca wartość wskazującą, czy bieżącego powiązania można utworzyć odbiornika dla określonego typu kanału i kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli stosu odbiornika kanałów określonego mogą być wbudowane w usługi; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCallbackAddress">
      <MemberSignature Language="C#" Value="public Uri ClientCallbackAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientCallbackAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCallbackAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientCallbackAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres wywołania zwrotnego dla elementu powiązania klienta.</summary>
        <value>Adres wywołania zwrotnego klienta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> zainicjowany z bieżącego obiektu.</summary>
        <returns>A <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> zainicjowany z bieżącego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sklonowany <xref:System.ServiceModel.Channels.ContextBindingElement> obiekt ma taką samą <xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A> i <xref:System.ServiceModel.Channels.ContextExchangeMechanism> wartości bieżącego <xref:System.ServiceModel.Channels.ContextBindingElement> obiektu.  
  
 Spowoduje to utworzenie pełną kopię bieżącego powiązania elementu drzewa obiektów, skrót głębokie klonowania. Głębokie klonowania obiektu tworzy kopię obiektu i kopie wszystkich bezpośrednio lub pośrednio odwołuje się ten obiekt. Jest to Kopiowanie całego obiektu wykresu. Zwracanie głębokie klonowania umożliwia środowiska uruchomieniowego do obsługi sytuacji, w której wiele powiązań niestandardowych udostępnianie element niestandardowego powiązania. Jeśli nie są zwracane w klonowania głębokie, zachowania w czasie wykonywania jest niezdefiniowana. Pobieżnego klonu obiektu jest kopię tylko obiekt. Jeśli obiekt zawiera odwołania do innych obiektów, kopię pobieżną nie tworzy kopie określonego obiektów; Zamiast tego są kopiowane tylko odwołania do oryginalnych obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextExchangeMechanism">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.ContextExchangeMechanism ContextExchangeMechanism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Channels.ContextExchangeMechanism ContextExchangeMechanism" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextExchangeMechanism As ContextExchangeMechanism" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::ContextExchangeMechanism ContextExchangeMechanism { System::ServiceModel::Channels::ContextExchangeMechanism get(); void set(System::ServiceModel::Channels::ContextExchangeMechanism value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.ContextExchangeMechanism</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia mechanizm wymiany używany do komunikacji kontekst dla elementu powiązania.</summary>
        <value>
          <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" /> , Który określa mechanizm używany do wymiany kontekstu dla elementu powiązania.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Podana wartość jest nieprawidłowa.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContextManagementEnabled">
      <MemberSignature Language="C#" Value="public bool ContextManagementEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextManagementEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextManagementEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContextManagementEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy włączono zarządzanie kontekstem.</summary>
        <value>
          <see langword="true" /> Jeśli zarządzanie kontekstem jest włączone; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportPolicy">
      <MemberSignature Language="C#" Value="public virtual void ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <see cref="T:System.ServiceModel.Description.MetadataExporter" /> Który Eksportuje informacje o metadanych.</param>
        <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> obiekt, który zawiera mapowania z wyeksportowane elementy WSDL Opis kontraktu.</param>
        <summary>Zapisuje niestandardowych asercji zasad w kontekście elementu powiązania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" /> lub potwierdzenia zasad w powiązaniu <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typizowany obiekt, dla którego metoda wykonywania zapytania.</typeparam>
        <param name="context">
          <see cref="T:System.ServiceModel.Channels.BindingContext" /> Określony.</param>
        <summary>Zwraca obiekt typu z określonego kontekstu z odpowiednią warstwę stosu kanału.</summary>
        <returns>Typizowany obiekt <paramref name="T" /> wymagane, jeśli jest obecny.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom ochrony dla elementu powiązania z kontekstu.</summary>
        <value>
          <see cref="T:System.Net.Security.ProtectionLevel" /> Dla elementu powiązania.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Podana wartość jest nieprawidłowa.</exception>
      </Docs>
    </Member>
  </Members>
</Type>