<Type Name="IReplyChannel" FullName="System.ServiceModel.Channels.IReplyChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b77f14f17d350b6b20418f214c645c2bcc60ca55" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69155580" /></Metadata><TypeSignature Language="C#" Value="public interface IReplyChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReplyChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IReplyChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReplyChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReplyChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IReplyChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="88584-101">Definiuje interfejs, który musi zostać wdrożony przez kanał po stronie odbiorczej komunikacji typu żądanie-odpowiedź między punktami końcowymi komunikatów.</span><span class="sxs-lookup"><span data-stu-id="88584-101">Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="88584-102">Interfejs zawiera synchroniczne i asynchroniczne warianty <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> metody zwracają <xref:System.ServiceModel.Channels.RequestContext> metodę, która może służyć do konstruowania odpowiedzi na otrzymane żądania. <xref:System.ServiceModel.Channels.IReplyChannel></span><span class="sxs-lookup"><span data-stu-id="88584-102">The <xref:System.ServiceModel.Channels.IReplyChannel> interface includes synchronous and asynchronous variants of a <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> method return an <xref:System.ServiceModel.Channels.RequestContext> that can be used to construct replies to received requests.</span></span>  
  
 <span data-ttu-id="88584-103">Kontrakt obejmuje synchroniczną i asynchroniczną odmianę funkcji Receive, try-to-Receive i oczekiwanie na komunikaty.</span><span class="sxs-lookup"><span data-stu-id="88584-103">The contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.</span></span>  
  
 <span data-ttu-id="88584-104"><xref:System.ServiceModel.Channels.IReplyChannel> Nie musi być powiązane z pojedynczym nadawcą.</span><span class="sxs-lookup"><span data-stu-id="88584-104">An <xref:System.ServiceModel.Channels.IReplyChannel> is not necessarily bound to a single sender.</span></span> <span data-ttu-id="88584-105">Inne kanały i interfejsy kanałów zapewniają korelację między nadawcą a kanałem odpowiedzi, ale kontrakt podstawowy nie ma takich ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="88584-105">Other channels and channel interfaces provide correlation between the sender and the reply channel, but the base contract makes no such restriction.</span></span>  
  
 <span data-ttu-id="88584-106">Model ściągania jest używany z <xref:System.ServiceModel.Channels.IReplyChannel> do odbierania komunikatów.</span><span class="sxs-lookup"><span data-stu-id="88584-106">The pull model is used with an <xref:System.ServiceModel.Channels.IReplyChannel> to receive messages.</span></span> <span data-ttu-id="88584-107">Ten model składa się <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> z wywołania (lub jednego z jego wariantów), a następnie czeka na nadejście komunikatu.</span><span class="sxs-lookup"><span data-stu-id="88584-107">This model consists of calling <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> (or one of its variants) and then waiting for a message to arrive.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginReceiveRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88584-108">Rozpoczyna operację asynchroniczną w celu odebrania dostępnego żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-108">Begins an asynchronous operation to receive an available request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceiveRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveRequest (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceiveRequest(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveRequest (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveRequest(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReceiveRequest : AsyncCallback * obj -&gt; IAsyncResult" Usage="iReplyChannel.BeginReceiveRequest (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="88584-109"><see cref="T:System.AsyncCallback" /> Delegat odnoszący się do powiadomienia asynchronicznego o otrzymaniu żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-109">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="88584-110">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczne odbieranie operacji żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-110">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span></span></param>
        <summary><span data-ttu-id="88584-111">Rozpoczyna operację asynchroniczną w celu odebrania dostępnego żądania z domyślnym limitem czasu.</span><span class="sxs-lookup"><span data-stu-id="88584-111">Begins an asynchronous operation to receive an available request with a default timeout.</span></span></summary>
        <returns><span data-ttu-id="88584-112"><see cref="T:System.IAsyncResult" /> , Który odwołuje się do asynchronicznego odbioru żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-112">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reception of the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88584-113">Metoda implementuje standardowy wzorzec do wywoływania <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest> asynchronicznego. <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.AsyncCallback%2CSystem.Object%29></span><span class="sxs-lookup"><span data-stu-id="88584-113">The <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.AsyncCallback%2CSystem.Object%29> method implements the standard pattern for invoking <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest> asynchronously.</span></span> <span data-ttu-id="88584-114">Domyślny limit czasu wynosi 1 minutę.</span><span class="sxs-lookup"><span data-stu-id="88584-114">The default timeout is 1 minute.</span></span> <span data-ttu-id="88584-115">Jeśli w powiązaniu używanym do skonfigurowania połączenia zostanie ustawiony limit czasu odbioru, ta wartość jest używana.</span><span class="sxs-lookup"><span data-stu-id="88584-115">If a receive timeout is set on the binding used to configure the connection, then that value is used.</span></span> <span data-ttu-id="88584-116">Użyj <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> , jeśli chcesz określić jawny limit czasu dla wywołania, które zastępuje te inne wartości.</span><span class="sxs-lookup"><span data-stu-id="88584-116">Use <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> if you want to specify an explicit timeout with the call that overrides these other values.</span></span>  
  
 <span data-ttu-id="88584-117">Jeśli otrzymany komunikat żądania jest większy niż maksymalny rozmiar komunikatu dozwolony przez używane powiązanie, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="88584-117">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="88584-118">Maksymalny rozmiar wiadomości jest ustawiany przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="88584-118">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="88584-119">Wartość domyślna to 65536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="88584-119">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88584-120">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-120">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceiveRequest(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveRequest (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveRequest(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReceiveRequest : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iReplyChannel.BeginReceiveRequest (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="88584-121"><see cref="T:System.TimeSpan" /> Określa interwał czasu oczekiwania na odbiór dostępnego żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-121">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reception of an available request.</span></span></param>
        <param name="callback"><span data-ttu-id="88584-122"><see cref="T:System.AsyncCallback" /> Delegat odnoszący się do powiadomienia asynchronicznego o otrzymaniu żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="88584-123">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczne odbieranie operacji żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-123">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span></span></param>
        <summary><span data-ttu-id="88584-124">Rozpoczyna operację asynchroniczną w celu odebrania dostępnego żądania z określonym limitem czasu.</span><span class="sxs-lookup"><span data-stu-id="88584-124">Begins an asynchronous operation to receive an available request with a specified timeout.</span></span></summary>
        <returns><span data-ttu-id="88584-125"><see cref="T:System.IAsyncResult" /> , Który odwołuje się do asynchronicznego odbioru żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reception of the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88584-126">Metoda implementuje standardowy wzorzec do wywoływania <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29> asynchronicznego. <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29></span><span class="sxs-lookup"><span data-stu-id="88584-126">The <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method implements the standard pattern for invoking <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29> asynchronously.</span></span> <span data-ttu-id="88584-127">Limit czasu ustawiony dla tej metody przesłania limit czasu odbierania ustawiony dla powiązania, które jest używane do konfigurowania połączenia.</span><span class="sxs-lookup"><span data-stu-id="88584-127">The timeout set on this method overrides a receive timeout set on the binding that is used to configure the connection.</span></span>  
  
 <span data-ttu-id="88584-128">Jeśli otrzymany komunikat żądania jest większy niż maksymalny rozmiar komunikatu dozwolony przez używane powiązanie, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="88584-128">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="88584-129">Maksymalny rozmiar wiadomości jest ustawiany przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="88584-129">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="88584-130">Wartość domyślna to 65536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="88584-130">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88584-131">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-131">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryReceiveRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTryReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTryReceiveRequest(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTryReceiveRequest (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTryReceiveRequest(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryReceiveRequest : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iReplyChannel.BeginTryReceiveRequest (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="88584-132">Określa, jak długo operacja odbierania żądania ma zostać ukończona przed upływem limitu czasu i zwróceniem <see langword="false" />. <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="88584-132">The <see cref="T:System.TimeSpan" /> that specifies how long the receive request operation has to complete before timing out and returning <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="88584-133"><see cref="T:System.AsyncCallback" /> Delegat odnoszący się do powiadomienia asynchronicznego o otrzymaniu żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-133">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="88584-134">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczne odbieranie operacji żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-134">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span></span></param>
        <summary><span data-ttu-id="88584-135">Rozpoczyna operację asynchroniczną w celu odebrania komunikatu żądania z określonym przekroczeniem czasu i skojarzonego z nim obiektu stanu.</span><span class="sxs-lookup"><span data-stu-id="88584-135">Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="88584-136"><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji odbierania żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-136">The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive request operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88584-137">Użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> , gdy potrzebujesz, aby przetwarzanie aplikacji było kontynuowane bez oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="88584-137">Use the asynchronous <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method when you need the application processing to continue without waiting.</span></span> <span data-ttu-id="88584-138">Użyj jednej z metod synchronicznych <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> , gdy jest akceptowalny do zablokowania bieżącego wątku podczas odpowiedzi na komunikat żądania lub do momentu przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="88584-138">Use one of the synchronous <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.</span></span>  
  
 <span data-ttu-id="88584-139">Ta metoda odbiera powiadomienie przez wywołanie zwrotne tożsamości programu obsługi zdarzeń dla operacji.</span><span class="sxs-lookup"><span data-stu-id="88584-139">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="88584-140">Operacja nie zostanie ukończona, dopóki wiadomość nie zostanie udostępniona w kanale lub upłynie limit czasu.</span><span class="sxs-lookup"><span data-stu-id="88584-140">The operation is not complete until either a message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88584-141">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-141">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="88584-142">Operacja zwraca <see langword="false" /> , jeśli określony <paramref name="timeout" /> zostanie przekroczony.</span><span class="sxs-lookup"><span data-stu-id="88584-142">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForRequest (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForRequest(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForRequest (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForRequest(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForRequest : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iReplyChannel.BeginWaitForRequest (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="88584-143"><see cref="T:System.TimeSpan" /> Określa interwał czasu oczekiwania na odbiór dostępnego żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-143">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reception of an available request.</span></span></param>
        <param name="callback"><span data-ttu-id="88584-144"><see cref="T:System.AsyncCallback" /> Delegat odnoszący się do powiadomienia asynchronicznego o otrzymaniu żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-144">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="88584-145">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczne odbieranie operacji żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-145">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span></span></param>
        <summary><span data-ttu-id="88584-146">Rozpoczyna asynchroniczną operację żądania, która ma określony limit czasu i skojarzony z nim obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="88584-146">Begins an asynchronous request operation that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="88584-147"><see cref="T:System.IAsyncResult" /> Odwołuje się do operacji asynchronicznej, aby poczekać na nadejście komunikatu żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to wait for a request message to arrive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88584-148">Użyj metody synchronicznej <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> , gdy jest akceptowalny do zablokowania bieżącego wątku podczas oczekiwania na nadejście komunikatu żądania do kolejki.</span><span class="sxs-lookup"><span data-stu-id="88584-148">Use the synchronous <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> method when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</span></span> <span data-ttu-id="88584-149">Wątek jest blokowany do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="88584-149">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="88584-150">Ta metoda odbiera powiadomienie przez wywołanie zwrotne tożsamości programu obsługi zdarzeń dla operacji.</span><span class="sxs-lookup"><span data-stu-id="88584-150">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="88584-151">Operacja nie zostanie zakończona do momentu udostępnienia komunikatu żądania w kanale lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="88584-151">The operation is not complete until either a request message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88584-152">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-152">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="88584-153">Operacja zwraca <see langword="false" /> , jeśli określony <paramref name="timeout" /> zostanie przekroczony.</span><span class="sxs-lookup"><span data-stu-id="88584-153">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext EndReceiveRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.RequestContext EndReceiveRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveRequest (result As IAsyncResult) As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::RequestContext ^ EndReceiveRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReceiveRequest : IAsyncResult -&gt; System.ServiceModel.Channels.RequestContext" Usage="iReplyChannel.EndReceiveRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="88584-154">Zwracany przez wywołanie <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />metody. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="88584-154">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method.</span></span></param>
        <summary><span data-ttu-id="88584-155">Kończy operację asynchroniczną w celu odebrania dostępnego żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-155">Completes an asynchronous operation to receive an available request.</span></span></summary>
        <returns><span data-ttu-id="88584-156"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Służy do konstruowania odpowiedzi na żądanie.</span><span class="sxs-lookup"><span data-stu-id="88584-156">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct a reply to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88584-157">Jeśli otrzymany komunikat żądania jest większy niż maksymalny rozmiar komunikatu dozwolony przez używane powiązanie, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="88584-157">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="88584-158">Maksymalny rozmiar wiadomości jest ustawiany przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="88584-158">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="88584-159">Wartość domyślna to 65536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="88584-159">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88584-160">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-160">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="88584-161">Operacja powinna zgłosić <see cref="T:System.TimeoutException" /> , jeśli określony <paramref name="timeout" /> limit zostanie przekroczony przed ukończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="88584-161">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndTryReceiveRequest">
      <MemberSignature Language="C#" Value="public bool EndTryReceiveRequest (IAsyncResult result, out System.ServiceModel.Channels.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndTryReceiveRequest(class System.IAsyncResult result, [out] class System.ServiceModel.Channels.RequestContext&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTryReceiveRequest (result As IAsyncResult, ByRef context As RequestContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndTryReceiveRequest(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::ServiceModel::Channels::RequestContext ^ % context);" />
      <MemberSignature Language="F#" Value="abstract member EndTryReceiveRequest : IAsyncResult *  -&gt; bool" Usage="iReplyChannel.EndTryReceiveRequest (result, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="context" Type="System.ServiceModel.Channels.RequestContext" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="88584-162">Zwracany przez wywołanie <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />metody. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="88584-162">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <param name="context"><span data-ttu-id="88584-163"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="88584-163">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> received.</span></span></param>
        <summary><span data-ttu-id="88584-164">Kończy określoną operację asynchroniczną w celu odebrania komunikatu żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-164">Completes the specified asynchronous operation to receive a request message.</span></span></summary>
        <returns><span data-ttu-id="88584-165"><see langword="true" />w przypadku odebrania komunikatu żądania przed upływem określonego interwału czasu; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="88584-165"><see langword="true" /> if a request message is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="88584-166">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-166">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForRequest">
      <MemberSignature Language="C#" Value="public bool EndWaitForRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForRequest (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndWaitForRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForRequest : IAsyncResult -&gt; bool" Usage="iReplyChannel.EndWaitForRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="88584-167"><see cref="T:System.IAsyncResult" /> Identyfikujeoperacjędozakończeniaizktórejma<see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> zostać pobrany wynik końcowy.</span><span class="sxs-lookup"><span data-stu-id="88584-167">The <see cref="T:System.IAsyncResult" /> that identifies the <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> operation to finish, and from which to retrieve an end result.</span></span></param>
        <summary><span data-ttu-id="88584-168">Kończy określoną operację asynchronicznego oczekiwania na żądanie.</span><span class="sxs-lookup"><span data-stu-id="88584-168">Completes the specified asynchronous wait-for-a-request message operation.</span></span></summary>
        <returns><span data-ttu-id="88584-169"><see langword="true" />Jeśli żądanie zostanie odebrane przed upływem określonego interwału czasu; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="88584-169"><see langword="true" /> if a request is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="88584-170">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-170">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IReplyChannel.LocalAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ LocalAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IReplyChannel.LocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88584-171">Pobiera adres, na którym kanał odpowiedzi odbiera komunikaty.</span><span class="sxs-lookup"><span data-stu-id="88584-171">Gets the address on which this reply channel receives messages.</span></span></summary>
        <value><span data-ttu-id="88584-172"><see cref="T:System.ServiceModel.EndpointAddress" /> Na którym kanale odpowiedzi odbiera komunikaty.</span><span class="sxs-lookup"><span data-stu-id="88584-172">The <see cref="T:System.ServiceModel.EndpointAddress" /> on which this reply channel receives messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="88584-173">Poniższy kod ilustruje sposób implementacji tej właściwości:</span><span class="sxs-lookup"><span data-stu-id="88584-173">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88584-174">Zwraca kontekst otrzymanego żądania (jeśli jest dostępny)</span><span class="sxs-lookup"><span data-stu-id="88584-174">Returns the context of the request received, if one is available</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext ReceiveRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.RequestContext ReceiveRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveRequest () As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::RequestContext ^ ReceiveRequest();" />
      <MemberSignature Language="F#" Value="abstract member ReceiveRequest : unit -&gt; System.ServiceModel.Channels.RequestContext" Usage="iReplyChannel.ReceiveRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88584-175">Zwraca kontekst otrzymanego żądania, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="88584-175">Returns the context of the request received, if one is available.</span></span> <span data-ttu-id="88584-176">Jeśli kontekst jest niedostępny, czeka, aż będzie dostępny.</span><span class="sxs-lookup"><span data-stu-id="88584-176">If a context is not available, waits until there is one available.</span></span></summary>
        <returns><span data-ttu-id="88584-177"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Używane do konstruowania odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="88584-177">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct replies.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88584-178"><xref:System.ServiceModel.Channels.RequestContext>hermetyzuje komunikat żądania i mechanizm odpowiedzi na tę wiadomość.</span><span class="sxs-lookup"><span data-stu-id="88584-178"><xref:System.ServiceModel.Channels.RequestContext> encapsulates the request message and a mechanism for replying to that message.</span></span>  
  
 <span data-ttu-id="88584-179"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>może być wywoływana wiele razy lub współbieżnie.</span><span class="sxs-lookup"><span data-stu-id="88584-179"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="88584-180">Odebrano <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> tylko jedno wywołanie dla żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-180">Only one <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> call completes per request received.</span></span>  
  
 <span data-ttu-id="88584-181">Jeśli otrzymany komunikat żądania jest większy niż maksymalny rozmiar komunikatu dozwolony przez używane powiązanie, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="88584-181">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="88584-182">Maksymalny rozmiar wiadomości jest ustawiany przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="88584-182">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="88584-183">Wartość domyślna to 65536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="88584-183">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88584-184">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-184">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext ReceiveRequest (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.RequestContext ReceiveRequest(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveRequest (timeout As TimeSpan) As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::RequestContext ^ ReceiveRequest(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveRequest : TimeSpan -&gt; System.ServiceModel.Channels.RequestContext" Usage="iReplyChannel.ReceiveRequest timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="88584-185">Określa, jak długo trwa odbieranie operacji żądania przed upływem limitu czasu i zwracaniem <see langword="false" />. <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="88584-185">The <see cref="T:System.TimeSpan" /> that specifies how long the receive of a request operation has to complete before timing out and returning <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="88584-186">Zwraca kontekst otrzymanego żądania, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="88584-186">Returns the context of the request received, if one is available.</span></span> <span data-ttu-id="88584-187">Jeśli kontekst jest niedostępny, czeka, aż będzie dostępny.</span><span class="sxs-lookup"><span data-stu-id="88584-187">If a context is not available, waits until there is one available.</span></span></summary>
        <returns><span data-ttu-id="88584-188"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Używane do konstruowania odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="88584-188">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct replies.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88584-189"><xref:System.ServiceModel.Channels.RequestContext>hermetyzuje komunikat żądania i mechanizm odpowiedzi na tę wiadomość.</span><span class="sxs-lookup"><span data-stu-id="88584-189"><xref:System.ServiceModel.Channels.RequestContext> encapsulates the request message and a mechanism for replying to that message.</span></span>  
  
 <span data-ttu-id="88584-190"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>może być wywoływana wiele razy lub współbieżnie.</span><span class="sxs-lookup"><span data-stu-id="88584-190"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="88584-191">Odebrano <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> tylko jedno wywołanie dla żądania.</span><span class="sxs-lookup"><span data-stu-id="88584-191">Only one <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> call completes per request received.</span></span>  
  
 <span data-ttu-id="88584-192">Jeśli otrzymany komunikat żądania jest większy niż maksymalny rozmiar komunikatu dozwolony przez używane powiązanie, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="88584-192">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="88584-193">Maksymalny rozmiar wiadomości jest ustawiany przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="88584-193">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="88584-194">Wartość domyślna to 65536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="88584-194">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88584-195">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-195">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveRequest">
      <MemberSignature Language="C#" Value="public bool TryReceiveRequest (TimeSpan timeout, out System.ServiceModel.Channels.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceiveRequest(valuetype System.TimeSpan timeout, [out] class System.ServiceModel.Channels.RequestContext&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveRequest (timeout As TimeSpan, ByRef context As RequestContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReceiveRequest(TimeSpan timeout, [Runtime::InteropServices::Out] System::ServiceModel::Channels::RequestContext ^ % context);" />
      <MemberSignature Language="F#" Value="abstract member TryReceiveRequest : TimeSpan *  -&gt; bool" Usage="iReplyChannel.TryReceiveRequest (timeout, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="context" Type="System.ServiceModel.Channels.RequestContext" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="88584-196">Określa, jak długo trwa odbieranie operacji żądania przed upływem limitu czasu i zwracaniem <see langword="false" />. <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="88584-196">The <see cref="T:System.TimeSpan" /> that specifies how long the receive of a request operation has to complete before timing out and returning <see langword="false" />.</span></span></param>
        <param name="context"><span data-ttu-id="88584-197"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="88584-197">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> received.</span></span></param>
        <summary><span data-ttu-id="88584-198">Zwraca wartość wskazującą, czy żądanie jest odbierane przed upływem określonego interwału czasu.</span><span class="sxs-lookup"><span data-stu-id="88584-198">Returns a value that indicates whether a request is received before a specified interval of time elapses.</span></span></summary>
        <returns><span data-ttu-id="88584-199"><see langword="true" />w przypadku odebrania komunikatu żądania przed upływem określonego interwału czasu; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="88584-199"><see langword="true" /> if a request message is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88584-200">Użyj <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> , gdy jest akceptowalny do zablokowania bieżącego wątku podczas oczekiwania na nadejście komunikatu żądania do kolejki.</span><span class="sxs-lookup"><span data-stu-id="88584-200">Use <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</span></span> <span data-ttu-id="88584-201">Wątek jest blokowany do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="88584-201">The thread is blocked up to the specified `timeout`.</span></span> <span data-ttu-id="88584-202">Aby przetwarzanie aplikacji było kontynuowane bez oczekiwania, użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> .</span><span class="sxs-lookup"><span data-stu-id="88584-202">If you need the application processing to continue without waiting, use the asynchronous <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88584-203">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-203">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="88584-204">Operacja zwraca <see langword="false" /> , jeśli określony <paramref name="timeout" /> zostanie przekroczony.</span><span class="sxs-lookup"><span data-stu-id="88584-204">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="WaitForRequest">
      <MemberSignature Language="C#" Value="public bool WaitForRequest (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForRequest(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForRequest (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForRequest(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitForRequest : TimeSpan -&gt; bool" Usage="iReplyChannel.WaitForRequest timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="88584-205">Określa, jak długo trwa wykonywanie operacji żądania przed upływem limitu czasu i zwróceniem <see langword="false" />. <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="88584-205">The <see cref="T:System.TimeSpan" /> that specifies how long a request operation has to complete before timing out and returning <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="88584-206">Zwraca wartość wskazującą, czy komunikat żądania jest odbierany przed upływem określonego interwału czasu.</span><span class="sxs-lookup"><span data-stu-id="88584-206">Returns a value that indicates whether a request message is received before a specified interval of time elapses.</span></span></summary>
        <returns><span data-ttu-id="88584-207"><see langword="true" />Jeśli żądanie zostanie odebrane przed upływem określonego interwału czasu; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="88584-207"><see langword="true" /> if a request is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88584-208">Wywołanie <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> nie powoduje, że komunikat żądania jest odbierany lub przetwarzany w jakikolwiek sposób.</span><span class="sxs-lookup"><span data-stu-id="88584-208">Calling <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> does not result in a request message being received or processed in any way.</span></span>  
  
 <span data-ttu-id="88584-209"><xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> Metoda istnieje głównie dla scenariuszy transakcyjnych, w których użytkownik chce otrzymać komunikat przy użyciu transakcji.</span><span class="sxs-lookup"><span data-stu-id="88584-209">The <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method exists primarily for transacted scenarios where the user wants to receive the message using a transaction.</span></span> <span data-ttu-id="88584-210">W przypadku użycia <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> zwykle w tym celu użytkownik musi utworzyć transakcję, a następnie wywołać <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> i mamy nadzieję, że wiadomość dociera przed upływem limitu czasu transakcji, co może być niemożliwe.</span><span class="sxs-lookup"><span data-stu-id="88584-210">When using just <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> normally for this, the user must create the transaction, and then call <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> and hope the message arrives before the transaction times out, which may not be possible.</span></span>  
  
 <span data-ttu-id="88584-211">Zamiast tego użytkownik może wywoływać <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> i określić limit czasu (nawet nieskończony), po nadejściu wiadomości może otworzyć transakcję, wywołać <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> i upewnić się, że mogą otrzymać komunikat z powrotem przed wygaśnięciem transakcji.</span><span class="sxs-lookup"><span data-stu-id="88584-211">Instead, the user can call <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> and specify the time out (even infinite), then when a message arrives they can open the transaction, call <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> and be confident that they can get the message back before the transaction expires.</span></span>  
  
 <span data-ttu-id="88584-212">Użyj <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> , gdy jest akceptowalny do zablokowania bieżącego wątku podczas oczekiwania na nadejście komunikatu w kolejce.</span><span class="sxs-lookup"><span data-stu-id="88584-212">Use <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="88584-213">Wątek jest blokowany do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="88584-213">The thread is blocked up to the specified `timeout`.</span></span> <span data-ttu-id="88584-214">Aby przetwarzanie aplikacji było kontynuowane bez oczekiwania, użyj metody asynchronicznej <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> .</span><span class="sxs-lookup"><span data-stu-id="88584-214">If you need the application processing to continue without waiting, use the asynchronous <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88584-215">Poniższy kod ilustruje sposób implementacji tej metody:</span><span class="sxs-lookup"><span data-stu-id="88584-215">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="88584-216">Operacja zwraca <see langword="false" /> , jeśli określony <paramref name="timeout" /> zostanie przekroczony.</span><span class="sxs-lookup"><span data-stu-id="88584-216">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
