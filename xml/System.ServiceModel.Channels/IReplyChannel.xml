<Type Name="IReplyChannel" FullName="System.ServiceModel.Channels.IReplyChannel">
  <TypeSignature Language="C#" Value="public interface IReplyChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReplyChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IReplyChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReplyChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReplyChannel : System::ServiceModel::Channels::IChannel" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f084c-101">Definiuje interfejs, który kanał musi implementować się po stronie odbiorczej powiadomienia "żądanie-odpowiedź" między punktami końcowymi obsługi wiadomości.</span><span class="sxs-lookup"><span data-stu-id="f084c-101">Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-102"><xref:System.ServiceModel.Channels.IReplyChannel> Interfejs zawiera synchroniczne i asynchroniczne wariantów <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> metody zwracany <xref:System.ServiceModel.Channels.RequestContext> można skonstruować odpowiedzi na żądania odebrane.</span><span class="sxs-lookup"><span data-stu-id="f084c-102">The <xref:System.ServiceModel.Channels.IReplyChannel> interface includes synchronous and asynchronous variants of a <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> method return an <xref:System.ServiceModel.Channels.RequestContext> that can be used to construct replies to received requests.</span></span>  
  
 <span data-ttu-id="f084c-103">Umowa zawiera synchroniczne i asynchroniczne wariantów Receive, spróbuj odbierania i oczekiwania na wiadomość funkcje.</span><span class="sxs-lookup"><span data-stu-id="f084c-103">The contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.</span></span>  
  
 <span data-ttu-id="f084c-104"><xref:System.ServiceModel.Channels.IReplyChannel> Niekoniecznie nie jest powiązany z jednego nadawcy.</span><span class="sxs-lookup"><span data-stu-id="f084c-104">An <xref:System.ServiceModel.Channels.IReplyChannel> is not necessarily bound to a single sender.</span></span> <span data-ttu-id="f084c-105">Inne kanały i interfejsy kanału zapewniają korelacji między nadawcą i kanał odpowiedzi, ale podstawowego kontraktu sprawia, że ma takie ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="f084c-105">Other channels and channel interfaces provide correlation between the sender and the reply channel, but the base contract makes no such restriction.</span></span>  
  
 <span data-ttu-id="f084c-106">Model polegający na ściąganiu jest używany z <xref:System.ServiceModel.Channels.IReplyChannel> do odbierania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="f084c-106">The pull model is used with an <xref:System.ServiceModel.Channels.IReplyChannel> to receive messages.</span></span> <span data-ttu-id="f084c-107">Ten model składa się z telefoniczną <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> (lub jeden z jej wariantów), a następnie oczekiwanie na odebranie wiadomości.</span><span class="sxs-lookup"><span data-stu-id="f084c-107">This model consists of calling <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> (or one of its variants) and then waiting for a message to arrive.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginReceiveRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f084c-108">Rozpoczyna operację asynchroniczną do obierania żądań od dostępne.</span><span class="sxs-lookup"><span data-stu-id="f084c-108">Begins an asynchronous operation to receive an available request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceiveRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveRequest (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceiveRequest(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveRequest (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveRequest(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="f084c-109"><see cref="T:System.AsyncCallback" /> Delegata, który otrzymuje powiadomienie o asynchroniczną odbierania, że operacja żądania zostało ukończone.</span><span class="sxs-lookup"><span data-stu-id="f084c-109">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="f084c-110">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z asynchronicznego odbioru operacji żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-110">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span></span></param>
        <summary><span data-ttu-id="f084c-111">Rozpoczyna operację asynchroniczną do obierania żądań dostępne z domyślny limit czasu.</span><span class="sxs-lookup"><span data-stu-id="f084c-111">Begins an asynchronous operation to receive an available request with a default timeout.</span></span></summary>
        <returns><span data-ttu-id="f084c-112"><see cref="T:System.IAsyncResult" /> , Która odwołuje się asynchronicznego odbioru żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-112">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reception of the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-113"><xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.AsyncCallback%2CSystem.Object%29> Metoda implementuje wzorzec standardowy do wywoływania <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest> asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="f084c-113">The <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.AsyncCallback%2CSystem.Object%29> method implements the standard pattern for invoking <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest> asynchronously.</span></span> <span data-ttu-id="f084c-114">Domyślny limit czasu wynosi 1 min.</span><span class="sxs-lookup"><span data-stu-id="f084c-114">The default timeout is 1 minute.</span></span> <span data-ttu-id="f084c-115">Jeśli limit czasu odbioru jest ustawiona na powiązanie użyty do skonfigurowania połączenia, ta wartość jest używana.</span><span class="sxs-lookup"><span data-stu-id="f084c-115">If a receive timeout is set on the binding used to configure the connection, then that value is used.</span></span> <span data-ttu-id="f084c-116">Użyj <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> Jeśli chcesz określić jawne limit czasu wywołania, który zastępuje te inne wartości.</span><span class="sxs-lookup"><span data-stu-id="f084c-116">Use <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> if you want to specify an explicit timeout with the call that overrides these other values.</span></span>  
  
 <span data-ttu-id="f084c-117">Jeśli odebrany komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="f084c-117">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="f084c-118">Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f084c-118">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="f084c-119">Wartość domyślna to 65 536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="f084c-119">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f084c-120">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-120">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceiveRequest(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveRequest (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveRequest(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f084c-121"><see cref="T:System.TimeSpan" /> , Który określa przedział czasu oczekiwania na odebranie dostępne żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-121">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reception of an available request.</span></span></param>
        <param name="callback"><span data-ttu-id="f084c-122"><see cref="T:System.AsyncCallback" /> Delegata, który otrzymuje powiadomienie o asynchroniczną odbierania, że operacja żądania zostało ukończone.</span><span class="sxs-lookup"><span data-stu-id="f084c-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="f084c-123">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z asynchronicznego odbioru operacji żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-123">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span></span></param>
        <summary><span data-ttu-id="f084c-124">Rozpoczyna operację asynchroniczną do obierania żądań dostępne z określonego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="f084c-124">Begins an asynchronous operation to receive an available request with a specified timeout.</span></span></summary>
        <returns><span data-ttu-id="f084c-125"><see cref="T:System.IAsyncResult" /> , Która odwołuje się asynchronicznego odbioru żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reception of the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-126"><xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> Metoda implementuje wzorzec standardowy do wywoływania <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29> asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="f084c-126">The <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method implements the standard pattern for invoking <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29> asynchronously.</span></span> <span data-ttu-id="f084c-127">Limit czasu ustawiony dla tej metody przesłania limit czasu odbioru ustawiony dla powiązania używanego w taki sposób, aby skonfigurować połączenie.</span><span class="sxs-lookup"><span data-stu-id="f084c-127">The timeout set on this method overrides a receive timeout set on the binding that is used to configure the connection.</span></span>  
  
 <span data-ttu-id="f084c-128">Jeśli odebrany komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="f084c-128">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="f084c-129">Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f084c-129">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="f084c-130">Wartość domyślna to 65 536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="f084c-130">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f084c-131">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-131">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryReceiveRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTryReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTryReceiveRequest(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTryReceiveRequest (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTryReceiveRequest(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f084c-132"><see cref="T:System.TimeSpan" /> Określający, jak długo ma zostać ukończona przed limit czasu i zwracanie operacji żądania odbierania <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f084c-132">The <see cref="T:System.TimeSpan" /> that specifies how long the receive request operation has to complete before timing out and returning <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="f084c-133"><see cref="T:System.AsyncCallback" /> Delegata, który otrzymuje powiadomienie o asynchroniczną odbierania, że operacja żądania zostało ukończone.</span><span class="sxs-lookup"><span data-stu-id="f084c-133">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="f084c-134">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z asynchronicznego odbioru operacji żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-134">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span></span></param>
        <summary><span data-ttu-id="f084c-135">Rozpoczyna operację asynchroniczną komunikat żądania, który ma określony limit czasu i skojarzonych z nim obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="f084c-135">Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="f084c-136"><see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja żądania asynchronicznego odbioru.</span><span class="sxs-lookup"><span data-stu-id="f084c-136">The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive request operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-137">Użycie asynchronicznego <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> metody, gdy będziesz potrzebować przetwarzania aplikacji, aby kontynuować bez oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="f084c-137">Use the asynchronous <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method when you need the application processing to continue without waiting.</span></span> <span data-ttu-id="f084c-138">Użyj jednej z synchronicznego <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> metod, gdy nie jest możliwa do bieżącego wątku zablokowanie, gdy w odpowiedzi na komunikat żądania lub dopóki nie zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="f084c-138">Use one of the synchronous <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.</span></span>  
  
 <span data-ttu-id="f084c-139">Ta metoda otrzymuje powiadomienie, poprzez wywołanie zwrotne, tożsamości programu obsługi zdarzeń dla tej operacji.</span><span class="sxs-lookup"><span data-stu-id="f084c-139">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="f084c-140">Operacja nie jest pełną, dopóki komunikat o stanie się dostępny w kanale albo występuje limit czasu.</span><span class="sxs-lookup"><span data-stu-id="f084c-140">The operation is not complete until either a message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f084c-141">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-141">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="f084c-142">Zwraca operacji <see langword="false" /> Jeśli określonego <paramref name="timeout" /> został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="f084c-142">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForRequest (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForRequest(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForRequest (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForRequest(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f084c-143"><see cref="T:System.TimeSpan" /> , Który określa przedział czasu oczekiwania na odebranie dostępne żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-143">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reception of an available request.</span></span></param>
        <param name="callback"><span data-ttu-id="f084c-144"><see cref="T:System.AsyncCallback" /> Delegata, który otrzymuje powiadomienie o asynchroniczną odbierania, że operacja żądania zostało ukończone.</span><span class="sxs-lookup"><span data-stu-id="f084c-144">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="f084c-145">Obiekt określony przez aplikację, zawierający informacje o stanie skojarzone z asynchronicznego odbioru operacji żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-145">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span></span></param>
        <summary><span data-ttu-id="f084c-146">Rozpoczyna operację żądania asynchronicznego, która ma określony limit czasu i skojarzonych z nim obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="f084c-146">Begins an asynchronous request operation that has a specified time out and state object associated with it.</span></span></summary>
        <returns><span data-ttu-id="f084c-147"><see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchroniczna oczekiwania na odebranie komunikat żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to wait for a request message to arrive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-148">Użyj synchroniczne <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> metody, gdy nie jest możliwa do bieżącego wątku być blokowane podczas oczekiwania na komunikat żądania w kolejce.</span><span class="sxs-lookup"><span data-stu-id="f084c-148">Use the synchronous <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> method when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</span></span> <span data-ttu-id="f084c-149">Wątek jest zablokowana w górę do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="f084c-149">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="f084c-150">Ta metoda otrzymuje powiadomienie, poprzez wywołanie zwrotne, tożsamości programu obsługi zdarzeń dla tej operacji.</span><span class="sxs-lookup"><span data-stu-id="f084c-150">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="f084c-151">Operacja nie jest pełną, aż do komunikatu żądania staje się dostępna w kanale lub występuje limit czasu.</span><span class="sxs-lookup"><span data-stu-id="f084c-151">The operation is not complete until either a request message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f084c-152">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-152">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="f084c-153">Zwraca operacji <see langword="false" /> Jeśli określonego <paramref name="timeout" /> został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="f084c-153">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext EndReceiveRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.RequestContext EndReceiveRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveRequest (result As IAsyncResult) As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::RequestContext ^ EndReceiveRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="f084c-154"><see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> metody.</span><span class="sxs-lookup"><span data-stu-id="f084c-154">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method.</span></span></param>
        <summary><span data-ttu-id="f084c-155">Kończy operację asynchroniczną do obierania żądań od dostępne.</span><span class="sxs-lookup"><span data-stu-id="f084c-155">Completes an asynchronous operation to receive an available request.</span></span></summary>
        <returns><span data-ttu-id="f084c-156"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Użyty do utworzenia odpowiedzi na żądanie.</span><span class="sxs-lookup"><span data-stu-id="f084c-156">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct a reply to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-157">Jeśli odebrany komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="f084c-157">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="f084c-158">Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f084c-158">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="f084c-159">Wartość domyślna to 65 536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="f084c-159">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f084c-160">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-160">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="f084c-161">Operacja powinien zgłosić <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="f084c-161">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndTryReceiveRequest">
      <MemberSignature Language="C#" Value="public bool EndTryReceiveRequest (IAsyncResult result, out System.ServiceModel.Channels.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndTryReceiveRequest(class System.IAsyncResult result, [out] class System.ServiceModel.Channels.RequestContext&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTryReceiveRequest (result As IAsyncResult, ByRef context As RequestContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndTryReceiveRequest(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::ServiceModel::Channels::RequestContext ^ % context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="context" Type="System.ServiceModel.Channels.RequestContext&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="f084c-162"><see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="f084c-162">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <param name="context"><span data-ttu-id="f084c-163"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="f084c-163">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> received.</span></span></param>
        <summary><span data-ttu-id="f084c-164">Kończy operację asynchroniczną określony komunikat żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-164">Completes the specified asynchronous operation to receive a request message.</span></span></summary>
        <returns>
          <span data-ttu-id="f084c-165"><see langword="true" /> Jeśli komunikat żądania zostanie odebrana przed określonym interwale upłynie czas; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f084c-165"><see langword="true" /> if a request message is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f084c-166">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-166">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForRequest">
      <MemberSignature Language="C#" Value="public bool EndWaitForRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForRequest (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndWaitForRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="f084c-167"><see cref="T:System.IAsyncResult" /> , Które identyfikują <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> operację, aby zakończyć i z którego można pobrać wyniku.</span><span class="sxs-lookup"><span data-stu-id="f084c-167">The <see cref="T:System.IAsyncResult" /> that identifies the <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> operation to finish, and from which to retrieve an end result.</span></span></param>
        <summary><span data-ttu-id="f084c-168">Kończy operację określonego komunikatu oczekiwania dla żądania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="f084c-168">Completes the specified asynchronous wait-for-a-request message operation.</span></span></summary>
        <returns>
          <span data-ttu-id="f084c-169"><see langword="true" /> Jeśli żądanie zostanie odebrane przed określonym interwale upłynie czas; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f084c-169"><see langword="true" /> if a request is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f084c-170">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-170">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IReplyChannel.LocalAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ LocalAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f084c-171">Pobiera adres, na którym ten kanał odpowiedzi odbiera wiadomości.</span><span class="sxs-lookup"><span data-stu-id="f084c-171">Gets the address on which this reply channel receives messages.</span></span></summary>
        <value><span data-ttu-id="f084c-172"><see cref="T:System.ServiceModel.EndpointAddress" /> Na którym ten kanał odpowiedzi odbiera wiadomości.</span><span class="sxs-lookup"><span data-stu-id="f084c-172">The <see cref="T:System.ServiceModel.EndpointAddress" /> on which this reply channel receives messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f084c-173">Poniższy kod ilustruje sposób implementowania tej właściwości:</span><span class="sxs-lookup"><span data-stu-id="f084c-173">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f084c-174">Zwraca kontekst żądania otrzymane, jeśli jest dostępny</span><span class="sxs-lookup"><span data-stu-id="f084c-174">Returns the context of the request received, if one is available</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext ReceiveRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.RequestContext ReceiveRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveRequest () As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::RequestContext ^ ReceiveRequest();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f084c-175">Zwraca kontekst żądania otrzymane, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="f084c-175">Returns the context of the request received, if one is available.</span></span> <span data-ttu-id="f084c-176">Kontekst nie jest dostępna, czeka, dopóki nie jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="f084c-176">If a context is not available, waits until there is one available.</span></span></summary>
        <returns><span data-ttu-id="f084c-177"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Użyty do utworzenia odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="f084c-177">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct replies.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-178"><xref:System.ServiceModel.Channels.RequestContext> hermetyzuje komunikat żądania i mechanizm odpowiedzi na tę wiadomość.</span><span class="sxs-lookup"><span data-stu-id="f084c-178"><xref:System.ServiceModel.Channels.RequestContext> encapsulates the request message and a mechanism for replying to that message.</span></span>  
  
 <span data-ttu-id="f084c-179"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> może zostać wywołana wiele razy lub jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="f084c-179"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="f084c-180">Tylko jeden <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> na Odebrano żądanie ukończenia wywołania.</span><span class="sxs-lookup"><span data-stu-id="f084c-180">Only one <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> call completes per request received.</span></span>  
  
 <span data-ttu-id="f084c-181">Jeśli odebrany komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="f084c-181">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="f084c-182">Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f084c-182">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="f084c-183">Wartość domyślna to 65 536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="f084c-183">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f084c-184">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-184">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext ReceiveRequest (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.RequestContext ReceiveRequest(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveRequest (timeout As TimeSpan) As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::RequestContext ^ ReceiveRequest(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f084c-185"><see cref="T:System.TimeSpan" /> Określający, jak długo ma przed limit czasu i zwracanie wykonaj odbieranie operacji żądania <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f084c-185">The <see cref="T:System.TimeSpan" /> that specifies how long the receive of a request operation has to complete before timing out and returning <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f084c-186">Zwraca kontekst żądania otrzymane, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="f084c-186">Returns the context of the request received, if one is available.</span></span> <span data-ttu-id="f084c-187">Kontekst nie jest dostępna, czeka, dopóki nie jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="f084c-187">If a context is not available, waits until there is one available.</span></span></summary>
        <returns><span data-ttu-id="f084c-188"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Użyty do utworzenia odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="f084c-188">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct replies.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-189"><xref:System.ServiceModel.Channels.RequestContext> hermetyzuje komunikat żądania i mechanizm odpowiedzi na tę wiadomość.</span><span class="sxs-lookup"><span data-stu-id="f084c-189"><xref:System.ServiceModel.Channels.RequestContext> encapsulates the request message and a mechanism for replying to that message.</span></span>  
  
 <span data-ttu-id="f084c-190"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> może zostać wywołana wiele razy lub jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="f084c-190"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="f084c-191">Tylko jeden <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> na Odebrano żądanie ukończenia wywołania.</span><span class="sxs-lookup"><span data-stu-id="f084c-191">Only one <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> call completes per request received.</span></span>  
  
 <span data-ttu-id="f084c-192">Jeśli odebrany komunikat żądania jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie jest używany, <xref:System.ServiceModel.QuotaExceededException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="f084c-192">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="f084c-193">Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f084c-193">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="f084c-194">Wartość domyślna to 65 536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="f084c-194">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f084c-195">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-195">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveRequest">
      <MemberSignature Language="C#" Value="public bool TryReceiveRequest (TimeSpan timeout, out System.ServiceModel.Channels.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceiveRequest(valuetype System.TimeSpan timeout, [out] class System.ServiceModel.Channels.RequestContext&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveRequest (timeout As TimeSpan, ByRef context As RequestContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReceiveRequest(TimeSpan timeout, [Runtime::InteropServices::Out] System::ServiceModel::Channels::RequestContext ^ % context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="context" Type="System.ServiceModel.Channels.RequestContext&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f084c-196"><see cref="T:System.TimeSpan" /> Określający, jak długo ma przed limit czasu i zwracanie wykonaj odbieranie operacji żądania <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f084c-196">The <see cref="T:System.TimeSpan" /> that specifies how long the receive of a request operation has to complete before timing out and returning <see langword="false" />.</span></span></param>
        <param name="context"><span data-ttu-id="f084c-197"><see cref="T:System.ServiceModel.Channels.RequestContext" /> Odebrane.</span><span class="sxs-lookup"><span data-stu-id="f084c-197">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> received.</span></span></param>
        <summary><span data-ttu-id="f084c-198">Zwraca wartość wskazującą, czy przed o określony interwał czasu upłynie zostanie odebrane żądanie.</span><span class="sxs-lookup"><span data-stu-id="f084c-198">Returns a value that indicates whether a request is received before a specified interval of time elapses.</span></span></summary>
        <returns>
          <span data-ttu-id="f084c-199"><see langword="true" /> Jeśli komunikat żądania zostanie odebrana przed określonym interwale upłynie czas; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f084c-199"><see langword="true" /> if a request message is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-200">Użyj <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> gdy jest akceptowalne dla bieżącego wątku być blokowane podczas oczekiwania na komunikat żądania w kolejce.</span><span class="sxs-lookup"><span data-stu-id="f084c-200">Use <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</span></span> <span data-ttu-id="f084c-201">Wątek jest zablokowana w górę do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="f084c-201">The thread is blocked up to the specified `timeout`.</span></span> <span data-ttu-id="f084c-202">Jeśli potrzebujesz przetwarzania aplikacji, aby kontynuować bez oczekiwania na użycie asynchronicznego <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="f084c-202">If you need the application processing to continue without waiting, use the asynchronous <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f084c-203">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-203">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="f084c-204">Zwraca operacji <see langword="false" /> Jeśli określonego <paramref name="timeout" /> został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="f084c-204">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WaitForRequest">
      <MemberSignature Language="C#" Value="public bool WaitForRequest (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForRequest(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForRequest (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForRequest(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="f084c-205"><see cref="T:System.TimeSpan" /> Określa, jak długo żądanie operacji musi zostać ukończona przed limit czasu i zwracanie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f084c-205">The <see cref="T:System.TimeSpan" /> that specifies how long a request operation has to complete before timing out and returning <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f084c-206">Zwraca wartość wskazującą, czy przed o określony interwał czasu upłynie odebraniu komunikatu żądania.</span><span class="sxs-lookup"><span data-stu-id="f084c-206">Returns a value that indicates whether a request message is received before a specified interval of time elapses.</span></span></summary>
        <returns>
          <span data-ttu-id="f084c-207"><see langword="true" /> Jeśli żądanie zostanie odebrane przed określonym interwale upłynie czas; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f084c-207"><see langword="true" /> if a request is received before the specified interval of time elapses; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f084c-208">Wywoływanie <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> nie powoduje komunikat żądania trwa odebranych lub przetwarzane w dowolny sposób.</span><span class="sxs-lookup"><span data-stu-id="f084c-208">Calling <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> does not result in a request message being received or processed in any way.</span></span>  
  
 <span data-ttu-id="f084c-209"><xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> Istnieje metoda przede wszystkim dotyczące transakcyjne scenariusze, w których użytkownik chce odbierać wiadomości przy użyciu transakcji.</span><span class="sxs-lookup"><span data-stu-id="f084c-209">The <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method exists primarily for transacted scenarios where the user wants to receive the message using a transaction.</span></span> <span data-ttu-id="f084c-210">Używając po prostu <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> zwykle w tym celu użytkownik musi utworzyć transakcji, a następnie wywołać <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> i nadzieję, że komunikat dociera przed transakcji limitu czasu, który może nie być możliwe.</span><span class="sxs-lookup"><span data-stu-id="f084c-210">When using just <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> normally for this, the user must create the transaction, and then call <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> and hope the message arrives before the transaction times out, which may not be possible.</span></span>  
  
 <span data-ttu-id="f084c-211">Zamiast tego użytkownik może wywołać <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> i określ limit czasu (nawet nieskończone), a następnie po nadejściu wiadomości mogą otwierać transakcji, wywołaj <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> i mieć pewność, że komunikat może uzyskać przed wygaśnięciem transakcji.</span><span class="sxs-lookup"><span data-stu-id="f084c-211">Instead, the user can call <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> and specify the time out (even infinite), then when a message arrives they can open the transaction, call <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> and be confident that they can get the message back before the transaction expires.</span></span>  
  
 <span data-ttu-id="f084c-212">Użyj <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> gdy jest akceptowalne dla bieżącego wątku być blokowane podczas oczekiwania na odebranie w kolejce wiadomości.</span><span class="sxs-lookup"><span data-stu-id="f084c-212">Use <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="f084c-213">Wątek jest zablokowana w górę do określonego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="f084c-213">The thread is blocked up to the specified `timeout`.</span></span> <span data-ttu-id="f084c-214">Jeśli potrzebujesz przetwarzania aplikacji, aby kontynuować bez oczekiwania na użycie asynchronicznego <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="f084c-214">If you need the application processing to continue without waiting, use the asynchronous <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f084c-215">Poniższy kod ilustruje sposób implementowania tej metody:</span><span class="sxs-lookup"><span data-stu-id="f084c-215">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="f084c-216">Zwraca operacji <see langword="false" /> Jeśli określonego <paramref name="timeout" /> został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="f084c-216">The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>