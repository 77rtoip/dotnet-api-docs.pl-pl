<Type Name="CompositeDuplexBindingElement" FullName="System.ServiceModel.Channels.CompositeDuplexBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e88f8b0e475131ee9d2ad9c054af95bf6acfeaa8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompositeDuplexBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositeDuplexBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositeDuplexBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeDuplexBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="68e09-101">Reprezentuje element powiązania, który jest używany, gdy klient musi ujawniać punkt końcowy usługi by wysłać wiadomości do klienta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68e09-101">Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e09-102">Jest to zazwyczaj używane z transportu, takich jak HTTP, które nie zezwalają na komunikacji dupleksowej natywnie.</span><span class="sxs-lookup"><span data-stu-id="68e09-102">This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.</span></span> <span data-ttu-id="68e09-103">TCP, natomiast zezwalania na komunikację z dupleksu natywnie i nie wymagają użycia tego elementu powiązania do wysyłania wiadomości z powrotem do klienta usługi.</span><span class="sxs-lookup"><span data-stu-id="68e09-103">TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.</span></span>  
  
 <span data-ttu-id="68e09-104">Klient musi ujawniać adres, w którym usługa może nawiązać kontakt z go do nawiązania połączenia z usługą do klienta.</span><span class="sxs-lookup"><span data-stu-id="68e09-104">The client must expose an address at which the service can contact it to establish a connection from the service to the client.</span></span> <span data-ttu-id="68e09-105">Ten adres klienta jest zapewniana przez <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="68e09-105">This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property.</span></span> <span data-ttu-id="68e09-106">Należy pamiętać, że [!INCLUDE[indigo1](~/includes/indigo1-md.md)] generuje automatycznie <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> Jeśli jeden nie jest jawnie ustawiona przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="68e09-106">Note that [!INCLUDE[indigo1](~/includes/indigo1-md.md)] auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeDuplexBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeDuplexBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68e09-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="68e09-108">
            <see cref="T:System.ServiceModel.Channels.IChannel" /> Tworzącego fabryka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-108">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="68e09-109">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> Zapewnia kontekstu wymagane do utworzenia fabryki kanałów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-109">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68e09-110">Zwraca fabryki kanałów, który może tworzyć złożone kanału dwukierunkowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-110">Returns a channel factory that can create a composite duplex channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68e09-111">A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> tworzącą złożonego Kanał dupleksowy typu <paramref name="TChannel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-111">A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> that creates a composite duplex channel of type <paramref name="TChannel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e09-112">Kontekst kompilacji wymaga <xref:System.ServiceModel.Channels.IOutputChannel> dla `TChannel`.</span><span class="sxs-lookup"><span data-stu-id="68e09-112">The build context requires an <xref:System.ServiceModel.Channels.IOutputChannel> for the `TChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e09-113">
            <paramref name="context" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-113">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="68e09-114">
            <paramref name="TChannel" /> Nie jest typu <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> i nie jest obsługiwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-114">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> and is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="68e09-115">
            <see cref="T:System.ServiceModel.Channels.IChannel" /> Akceptującego odbiornika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-115">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="68e09-116">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> Zapewnia kontekstu wymagane do utworzenia odbiornika kanałów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-116">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68e09-117">Zwraca odbiornik kanału, który może zaakceptować złożonego kanału dwukierunkowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-117">Returns a channel listener that can accept a composite duplex channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68e09-118">
            <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> Która akceptuje złożonego Kanał dupleksowy typu <paramref name="TChannel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-118">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> that accepts a composite duplex channel of type <paramref name="TChannel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e09-119">Kontekst kompilacji wymaga <xref:System.ServiceModel.Channels.IInputChannel> dla `TChannel`.</span><span class="sxs-lookup"><span data-stu-id="68e09-119">The build context requires an <xref:System.ServiceModel.Channels.IInputChannel> for the `TChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e09-120">
            <paramref name="context" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-120">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="68e09-121">
            <paramref name="TChannel" /> Nie jest typu <see cref="T:System.ServiceModel.Channels.IInputChannel" /> i nie jest obsługiwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-121">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IInputChannel" /> and is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="68e09-122">
            <see cref="T:System.ServiceModel.Channels.IChannel" /> Tworzącego fabryki kanałów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-122">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="68e09-123">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> Zapewnia kontekstu wymagane do utworzenia odbiornika kanałów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-123">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68e09-124">Zwraca wartość wskazującą, czy powiązania może zbudować fabryki kanału który tworzy określony typ kanału, który spełnia wymagania kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-124">Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68e09-125">
            <see langword="true" /> Jeśli powiązanie może zbudować fabryki kanału; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-125">
              <see langword="true" /> if the binding can build the channel factory; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e09-126">`true` Jeśli `TChannel`  ==  <xref:System.ServiceModel.Channels.IOutputChannel> i powiązanie wewnętrzne, można także utworzyć <xref:System.ServiceModel.Channels.IOutputChannel>; w przeciwnym razie `false`.</span><span class="sxs-lookup"><span data-stu-id="68e09-126">`true` if `TChannel` == <xref:System.ServiceModel.Channels.IOutputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IOutputChannel>; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e09-127">
            <paramref name="context" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-127">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="68e09-128">
            <see cref="T:System.ServiceModel.Channels.IChannel" /> Akceptującego odbiornika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-128">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="68e09-129">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> Zapewnia kontekstu wymagane do utworzenia odbiornika kanałów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-129">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68e09-130">Zwraca wartość wskazującą, czy powiązanie można utworzyć odbiornika kanałów który akceptuje określony typ kanału, który spełnia wymagania kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-130">Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68e09-131">
            <see langword="true" /> Jeśli odbiornik kanału mogą być wbudowane w kompilacji, należy zaakceptować określony typ kanału; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-131">
              <see langword="true" /> if the channel listener can be built for the build required to accept the specified type of channel; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e09-132">`true` Jeśli `TChannel`  ==  <xref:System.ServiceModel.Channels.IInputChannel> i powiązanie wewnętrzne, można także utworzyć <xref:System.ServiceModel.Channels.IInputChannel>; w przeciwnym razie `false`.</span><span class="sxs-lookup"><span data-stu-id="68e09-132">`true` if `TChannel` == <xref:System.ServiceModel.Channels.IInputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IInputChannel>; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e09-133">
            <paramref name="context" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-133">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68e09-134">Pobiera lub ustawia adres podstawowy klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-134">Gets or sets the base address for the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68e09-135">A <see cref="T:System.Uri" /> zawierający adres podstawowy klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-135">A <see cref="T:System.Uri" /> that contains the base address for the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e09-136">Ta właściwość zapewnia adres, pod którym usługa może nawiązać kontakt z klienta.</span><span class="sxs-lookup"><span data-stu-id="68e09-136">This property provides an address at which the service can contact the client.</span></span> <span data-ttu-id="68e09-137">A `null` wartość powoduje, że system ma automatycznie generować adres podstawowy klienta.</span><span class="sxs-lookup"><span data-stu-id="68e09-137">A `null` value causes the system to automatically generate a client base address.</span></span>  
  
 <span data-ttu-id="68e09-138">Jest to adres podstawowy nie jako adres bezwzględny.</span><span class="sxs-lookup"><span data-stu-id="68e09-138">This is a base address, not an absolute address.</span></span> <span data-ttu-id="68e09-139">Identyfikator GUID jest dołączany do podstawowego adresu podczas generowania punktów końcowych klienta z tego powiązania.</span><span class="sxs-lookup"><span data-stu-id="68e09-139">A GUID is appended to the base address when generating client endpoints from this binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68e09-140">Zwraca bezpośredni klonowania bieżącego elementu powiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-140">Returns a deep clone of the current binding element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68e09-141">A <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> to głębokie klonowania bieżącego elementu powiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-141">A <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> that is a deep clone of the current binding element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e09-142">Zwracanie klon umożliwia środowiska uruchomieniowego do obsługi sytuacji, w której wiele powiązań niestandardowych udostępnianie element niestandardowego powiązania.</span><span class="sxs-lookup"><span data-stu-id="68e09-142">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="68e09-143">Jeśli nie są zwracane w klonowania, zachowania w czasie wykonywania jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="68e09-143">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="68e09-144">Głębokie klonowania obiektu tworzy kopię obiektu i kopie wszystkich bezpośrednio lub pośrednio odwołuje się ten obiekt.</span><span class="sxs-lookup"><span data-stu-id="68e09-144">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="68e09-145">(Jest to również nazywane Kopiowanie całego obiektu wykresu.) Pobieżnego klonu obiektu, natomiast stanowi kopię tylko obiekt.</span><span class="sxs-lookup"><span data-stu-id="68e09-145">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="68e09-146">Jeśli obiekt zawiera odwołania do innych obiektów, kopię pobieżną nie tworzy kopie określonego obiektów; Zamiast tego są kopiowane tylko odwołania do oryginalnych obiektów.</span><span class="sxs-lookup"><span data-stu-id="68e09-146">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span> <span data-ttu-id="68e09-147">W szczególności bezpośrednich kopię <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> kopiowane przez <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="68e09-147">In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="68e09-148">Typizowany obiekt, których obsługa jest testowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-148">The typed object whose support is being tested.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="68e09-149">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> Zapewnia kontekstu wymagane do utworzenia kanału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-149">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68e09-150">Zwraca obiekt typu żądanie z warstwy odpowiedni w jednym stosów kanału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-150">Returns a typed object requested from the appropriate layer in one of the channel stacks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68e09-151">Typizowany obiekt <paramref name="T" /> wymagane, jeśli jest obsługiwany; lub <see langword="null" /> Jeśli nie jest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-151">The typed object <paramref name="T" /> requested if it is supported; or <see langword="null" /> if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e09-152">Umożliwia to żądanie typu obiektu, na przykład interfejs dla właściwości lub pobrania stanu, z warstwy odpowiedni skumulowany powiązanie.</span><span class="sxs-lookup"><span data-stu-id="68e09-152">Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding.</span></span> <span data-ttu-id="68e09-153">W przypadku warstwy obsługuje zwracania żądanego obiektu, zwraca go.</span><span class="sxs-lookup"><span data-stu-id="68e09-153">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="68e09-154">W przeciwnym razie deleguje ona wywołania do następnej warstwy ze stosu.</span><span class="sxs-lookup"><span data-stu-id="68e09-154">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="68e09-155">Jeśli pełne w dół stosu i nie obsługuje warstwy uzyskanie żądanego obiektu wywołującego jest zwracany `null` wartość.</span><span class="sxs-lookup"><span data-stu-id="68e09-155">If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a `null` value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e09-156">
            <paramref name="context" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-156">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="68e09-157">
            <see cref="T:System.ServiceModel.Description.MetadataExporter" /> Można zmodyfikować eksportowanie procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-157">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="68e09-158">
            <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> Można wstawić Twojej potwierdzenia zasad niestandardowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-158">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68e09-159">Eksportowanie niestandardowych asercji zasad dotyczących powiązań reprezentujących obecności dupleks złożone powiązanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-159">Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="68e09-160"> <xref:System.ServiceModel.Description.IPolicyExportExtension>.</span><span class="sxs-lookup"><span data-stu-id="68e09-160"> <xref:System.ServiceModel.Description.IPolicyExportExtension>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e09-161">
            <paramref name="context" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68e09-161">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>