<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingElement.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b6b861ea100cda6f809cb09d8db7daabb5f047f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b6b861ea100cda6f809cb09d8db7daabb5f047f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</source>
          <target state="translated">Elementy powiązania, które kompilują fabryk kanałów i odbiorników kanału dla różnych typów kanałów, które są używane do przetwarzania komunikatów przychodzących i wychodzących.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>A binding consists of an ordered set of binding elements that inherit from this abstract base class.</source>
          <target state="translated">Powiązanie składa się z uporządkowany zestaw elementów, które dziedziczą z to abstrakcyjna klasa podstawowa wiązania.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph> Klasa dziedziczy <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Creating a binding and binding element for your transport is optional if you are just using the channel model.</source>
          <target state="translated">Tworzenie powiązania i elementu powiązania dla transport jest opcjonalne, jeśli używane są tylko model kanału.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>It is possible to do everything you need through the channel factory and listener as long as they are made public.</source>
          <target state="translated">Użytkownik może robić wszystko, czego należy za pomocą fabryki kanału i odbiornika tak długo, jak są one publiczne.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model uses a factory pattern where the binding is used to create the channel stack.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> Modelu usług korzysta ze wzorca fabryki gdzie powiązania jest używany do tworzenia kanału stosu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>If you want to use the <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> service model, then using a transport binding element is required.</source>
          <target state="translated">Jeśli chcesz użyć <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> usługi modelu, a następnie za pomocą elementu powiązania transportu jest wymagana.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</source>
          <target state="translated">Wprowadzenie do tego elementu powiązania do powiązania jest dobrym rozwiązaniem, ponieważ eliminuje konieczność użytkownikom tworzenie własnych niestandardowych powiązania dla transport.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</source>
          <target state="translated">Najlepiej utworzyć powiązanie i element powiązania i Ukryj fabryki kanału i odbiornika w zestawie.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>On the sending side, a binding is used to build a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</source>
          <target state="translated">Po stronie wysyłającej powiązania jest używany do tworzenia <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, który z kolei stosu kompilacje kanału i zwraca odwołanie do góry kanału w stosie.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The application can then use this channel to send messages.</source>
          <target state="translated">Aplikacji można następnie używać tego kanału do wysyłania wiadomości.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Similarly, on the receiving side a binding is used to build a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, which listens for incoming messages.</source>
          <target state="translated">Podobnie po stronie odbiorczej powiązania jest używany do tworzenia <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, która nasłuchuje przychodzących wiadomości.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> Zawiera komunikaty do nasłuchiwania aplikacji, tworząc stosy kanału i przekazywanie aplikacji odwołaniem do górnej kanału.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The application then uses this channel to receive incoming messages.</source>
          <target state="translated">Następnie aplikacja użyje tego kanału do odbierania wiadomości przychodzących.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>If you are adding message headers that must be encrypted you must return a <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> method when asked for <ph id="ph3">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</source>
          <target state="translated">Jeśli dodajesz musi zwracać komunikat nagłówki, które muszą być szyfrowane, możesz <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> wystąpienia z wymaganiami dotyczącymi z <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> metody w odpowiedzi na <ph id="ph3">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</source>
          <target state="translated">Poniższy przykład pokazuje, jak dodać element powiązania transportu do niestandardowego powiązania i późniejszego kompilowania odbiornik kanału, który może zaakceptować wiadomości przychodzących.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> to be cloned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> Klonowania.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class from a specified binding element.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> klasy z elementu określonego powiązania.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the factory builds.</source>
          <target state="translated">Typ kanału, który tworzy fabrykę.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> Udostępniająca kontekstu dla elementu powiązania.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel factory for producing channels of a specified type from the binding context.</source>
          <target state="translated">Inicjuje fabryki kanałów do produkcji kanałów określonego typu z kontekstu powiązania.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> Typu <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> zainicjowany z <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the listener is built to accept.</source>
          <target state="translated">Typ kanału obiektu nasłuchującego korzysta z wbudowanej zaakceptować.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> Udostępniająca kontekstu dla elementu powiązania.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel listener to accept channels of a specified type from the binding context.</source>
          <target state="translated">Inicjuje odbiornik kanału, aby zaakceptować kanałów określonego typu z kontekstu powiązania.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> Typu <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> zainicjowany z <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the channel factory produces.</source>
          <target state="translated">Tworzy typ kanału fabryki kanałów.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> Udostępniająca kontekstu dla elementu powiązania.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</source>
          <target state="translated">Zwraca wartość wskazującą, czy element powiązania może zbudować fabryki kanału dla określonego typu kanału.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph3">&lt;paramref name="TChannel" /&gt;</ph> can be built by the binding element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> typu <ph id="ph3">&lt;paramref name="TChannel" /&gt;</ph> może być skompilowany przez element powiązania; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this method if you want to check that the channel factory for channels of type <ph id="ph1">`TChannel`</ph> can be build for the <ph id="ph2">`context`</ph> provided before attempting to build the factory.</source>
          <target state="translated">Ta metoda Jeśli chcesz sprawdzić, czy fabryka kanałów dla kanałów typu <ph id="ph1">`TChannel`</ph> może być kompilacji <ph id="ph2">`context`</ph> przed podjęciem próby zbudować fabryki.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Alternatively, build the channel factory by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> and catch the exception generated if it cannot be built.</source>
          <target state="translated">Alternatywnie zbudować fabryki kanału wywołując <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> i przechwytywać elementu exception generowany, gdy nie może zostać utworzony.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the listener accepts.</source>
          <target state="translated">Typ kanału, który akceptuje odbiornika.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> Udostępniająca kontekstu dla elementu powiązania.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</source>
          <target state="translated">Zwraca wartość wskazującą, czy element powiązania można utworzyć odbiornika dla określonego typu kanału.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> of type <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> can be built by the binding element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> typu <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> może być skompilowany przez element powiązania; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this method if you want to check that the channel listener for channels of type <ph id="ph1">`TChannel`</ph> can be build for the <ph id="ph2">`context`</ph> provided before attempting to build the listener.</source>
          <target state="translated">Ta metoda Jeśli chcesz sprawdzić, czy kanał odbiornika kanałów typu <ph id="ph1">`TChannel`</ph> może być kompilacji <ph id="ph2">`context`</ph> podana przed przystąpieniem do tworzenia odbiornika.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Alternatively, build the channel listener by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> and catch the exception generated if it cannot be built.</source>
          <target state="translated">Można również utworzyć odbiornika kanałów przez wywołanie metody <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> i przechwytywać elementu exception generowany, gdy nie może zostać utworzony.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>When overridden in a derived class, returns a copy of the binding element object.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej zwraca kopię obiektu element powiązania.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> object that is a deep clone of the original.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> obiekt, który jest głębokie klonowania oryginału.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> method to return a deep clone of your binding element.</source>
          <target state="translated">Implementowanie <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> metodę, aby zwrócić głębokie klonowania z elementu powiązania.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">Zwracanie klon umożliwia środowiska uruchomieniowego do obsługi sytuacji, w której wiele powiązań niestandardowych udostępnianie element niestandardowego powiązania.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>If a clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">Jeśli nie są zwracane w klonowania, zachowania w czasie wykonywania jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">Głębokie klonowania obiektu tworzy kopię obiektu i kopie wszystkich bezpośrednio lub pośrednio odwołuje się ten obiekt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">(Jest to również nazywane Kopiowanie całego obiektu wykresu.) Pobieżnego klonu obiektu, natomiast stanowi kopię tylko obiekt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">Jeśli obiekt zawiera odwołania do innych obiektów, kopię pobieżną nie tworzy kopie określonego obiektów; Zamiast tego są kopiowane tylko odwołania do oryginalnych obiektów.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">Typizowany obiekt, dla którego metoda wykonywania zapytania.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> Dla elementu powiązania.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej zwraca żądanego, typu obiektu, jeśli jest dostępna z odpowiednią warstwę stosu powiązania.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not present.</source>
          <target state="translated">Typizowany obiekt <ph id="ph1">&lt;paramref name="T" /&gt;</ph> wymagane, jeśli jest obecny lub <ph id="ph2">&lt;see langword="null" /&gt;</ph> , jeśli nie jest zainstalowany.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to retrieve capabilities, requirements and parameters from the binding element stack.</source>
          <target state="translated">Umożliwia pobrać elementu stosu powiązanie funkcji, wymagań i parametry.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a binding element supports returning the requested object, it returns it.</source>
          <target state="translated">Jeśli element powiązania obsługuje zwracania żądanego obiektu, zwraca go.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next binding element in the stack.</source>
          <target state="translated">Jeśli nie, deleguje wywołania do następnego elementu powiązania ze stosu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Jeśli pełne w dół stosu i żaden element powiązania obsługiwane żądanego obiektu, a następnie metoda zwraca <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If you are adding message headers that must be encrypted you must return a <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from this method when asked for <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</source>
          <target state="translated">Jeśli dodajesz musi zwracać komunikat nagłówki, które muszą być szyfrowane, możesz <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> wystąpienia z wymaganiami dotyczącymi z tej metody, jeśli wyświetlony monit o podanie <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>