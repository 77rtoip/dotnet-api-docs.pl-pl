<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4893578ce73fa37c40f4ed3571ed2e659faba7dc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69155868" /></Metadata><TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje interfejs dla sesji zaimplementowanej po każdej stronie komunikacji dwukierunkowej między punktami końcowymi komunikatów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interfejs jest złożeniem sesji przychodzącej, zdefiniowanej <xref:System.ServiceModel.Channels.IInputSession> przez interfejs i <xref:System.ServiceModel.Channels.IOutputSession> sesji wychodzącej, zdefiniowanej przez interfejs. <xref:System.ServiceModel.Channels.IDuplexSession> Sesja przychodząca lub sesja wychodząca można przerwać niezależnie od siebie. Sesję wychodzącą można przerwać synchronicznie, wywołując <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> lub asynchronicznie wywołując <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>metodę.  
  
 Sesja przychodząca może zostać przerwana zdalnie. Skojarzona z sesją przychodzącą `null` rozpoczyna się po zamknięciu sesji. <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna operację asynchroniczną w celu zakończenia sesji wychodzącej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegat.</param>
        <param name="state"><see langword="object" /> Zawiera informacje o stanie dla tego żądania.</param>
        <summary>Rozpoczyna operację asynchroniczną w celu zakończenia sesji wychodzącej.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołuje się do kończenia asynchronicznej sesji wychodzącej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakończenie sesji wychodzącej nie ma wpływu na sesję przychodzącą i dlatego nie ma żadnej instrukcji dotyczącej możliwości odbierania wiadomości w sesji skojarzonej z tym kanałem wejściowym. Ta operacja musi zostać zakończona w domyślnym interwale czasu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> Określa przedział czasu, w którym operacja musi zostać zakończona.</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegat.</param>
        <param name="state"><see langword="object" /> Zawiera informacje o stanie dla tego żądania.</param>
        <summary>Rozpoczyna operację asynchroniczną w celu zakończenia sesji wychodzącej z określonym limitem czasu, w ramach której operacja musi zostać zakończona.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołuje się do kończenia asynchronicznej sesji wychodzącej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakończenie sesji wychodzącej nie ma wpływu na sesję przychodzącą i dlatego nie ma żadnej instrukcji dotyczącej możliwości odbierania wiadomości w sesji skojarzonej z tym kanałem wejściowym.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kończy sesję wychodzącą, która wskazuje, że żadne komunikaty nie będą wysyłane z tego punktu końcowego w kanale skojarzonym z sesją.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy sesję wychodzącą, która wskazuje, że żadne komunikaty nie będą wysyłane z tego punktu końcowego w kanale skojarzonym z sesją.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> sygnałów z drugą stroną sesji, która powinna zostać zwrócona `null` przez wszystkie oczekujące lub kolejne wywołania do <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A>jest idempotentne, więc jego wywołanie nie ma wpływu.  
  
 Zakończenie sesji wychodzącej nie ma wpływu na sesję przychodzącą i dlatego nie ma żadnej instrukcji dotyczącej możliwości odbierania wiadomości w sesji skojarzonej z tym kanałem wejściowym.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />jest metodą sesji, która może współdziałać <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> z właścicielem sesji. W szczególności, jeśli okres istnienia sesji jest umieszczany wraz z okresem istnienia kanału (na przykład z użyciem protokołu TCP i niezawodnej sesji i zabezpieczeń): 
-Jeśli <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> jest wywoływana przed <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> jest wywoływana w <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> kanale, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> należy poczekać na zakończenie.  
  
- <see cref="F:System.ServiceModel.CommunicationState.Created" /> Jeśli kanał jest w <see cref="F:System.ServiceModel.CommunicationState.Opening" /> stanielub<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , powinien zgłosić. <see cref="T:System.InvalidOperationException" />  
  
-Jeśli kanał jest w <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanie, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> należy zgłosić <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-Kanał powinien zgłaszać błąd <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , jeśli zostanie wyrzucany.  
  
- <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> Implementacja w kanale powinna wywołać <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , a następnie sprawdzić, czy <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> funkcja <see langword="null" />Returns wskazuje <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , że została wywołana po drugiej stronie sesji.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> Określa przedział czasu, w którym operacja musi zostać zakończona.</param>
        <summary>Kończy sesję wychodzącą, która wskazuje, że żadne komunikaty nie będą wysyłane z tego punktu końcowego w kanale skojarzonym z sesją w określonym przedziale czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> sygnałów z drugą stroną sesji, która powinna zostać zwrócona `null` przez wszystkie oczekujące lub kolejne wywołania do <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A>jest idempotentne, więc jego wywołanie nie ma wpływu.  
  
 Zakończenie sesji wychodzącej nie ma wpływu na sesję przychodzącą i dlatego nie ma żadnej instrukcji dotyczącej możliwości odbierania wiadomości w sesji skojarzonej z tym kanałem wejściowym.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />jest metodą sesji, która może współdziałać <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> z właścicielem sesji. W szczególności, jeśli okres istnienia sesji jest umieszczany wraz z okresem istnienia kanału (na przykład z użyciem protokołu TCP i niezawodnej sesji i zabezpieczeń): 
-Jeśli <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> jest wywoływana przed <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> jest wywoływana w <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> kanale, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> należy poczekać na zakończenie.  
  
- <see cref="F:System.ServiceModel.CommunicationState.Created" /> Jeśli kanał jest w <see cref="F:System.ServiceModel.CommunicationState.Opening" /> stanielub<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , powinien zgłosić. <see cref="T:System.InvalidOperationException" />  
  
-Jeśli kanał jest w <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanie, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> należy zgłosić <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-Kanał powinien zgłaszać błąd <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , jeśli zostanie wyrzucany.  
  
- <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> Implementacja w kanale powinna wywołać <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , a następnie sprawdzić, czy <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> zwraca <see langword="null" />, wskazując, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> że został wywołany po drugiej stronie sesji.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Zwracany przez wywołanie jednej <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> z metod. <see cref="T:System.IAsyncResult" /></param>
        <summary>Kończy operację asynchroniczną w celu zakończenia sesji wychodzącej, która wskazuje, że żadne komunikaty nie będą wysyłane z tego punktu końcowego w kanale skojarzonym z sesją.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakończenie sesji wychodzącej nie ma wpływu na sesję przychodzącą i dlatego nie ma żadnej instrukcji dotyczącej możliwości odbierania wiadomości w sesji skojarzonej z danym kanałem wejściowym  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
