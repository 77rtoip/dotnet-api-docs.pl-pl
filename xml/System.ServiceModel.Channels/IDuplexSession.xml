<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDuplexSession.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac589db8df12be0427a200fdb3f6b65d6b7b48cb5e1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89db8df12be0427a200fdb3f6b65d6b7b48cb5e1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IDuplexSession">
          <source>Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints.</source>
          <target state="translated">Definiuje interfejs dla sesji na każdej stronie dwukierunkową komunikację między punktami końcowymi obsługi wiadomości.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IDuplexSession">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession&gt;</ph> interface is the union of the inbound session, defined by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputSession&gt;</ph> interface, and the outbound session, defined by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IOutputSession&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession&gt;</ph> Interfejs jest Unii sesji przychodzących, zdefiniowane przez <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputSession&gt;</ph> interfejsu i wychodzących sesji, zdefiniowane przez <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IOutputSession&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IDuplexSession">
          <source>Either the inbound session or outbound session can be terminated independently of the other.</source>
          <target state="translated">Sesji przychodzących lub wychodzących sesji może być zakończona niezależnie od drugiego.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IDuplexSession">
          <source>The outbound session can be terminated synchronously by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A&gt;</ph> or asynchronously by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A&gt;</ph>.</source>
          <target state="translated">Wychodzących sesji można synchronicznie przerwane przez wywołanie metody <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A&gt;</ph> , asynchronicznie przez wywołanie <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IDuplexSession">
          <source>The inbound session can be remotely terminated.</source>
          <target state="translated">Sesja przychodzącej można zdalnie zakończona.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IDuplexSession">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> associated with the inbound session starts returning <ph id="ph2">`null`</ph> when that session is shutdown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> Skojarzone z uruchomieniu sesji przychodzących zwracanie <ph id="ph2">`null`</ph> podczas tej sesji jest zamykana.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IDuplexSession">
          <source>Begins an asynchronous operation to terminate the outbound session.</source>
          <target state="translated">Rozpoczyna operację asynchroniczną, aby zakończyć sesję ruchu wychodzącego.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> Delegowanie.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> that contains state information for this request.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="object" /&gt;</ph> Zawierający informacje o stanie dla tego żądania.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to terminate the outbound session.</source>
          <target state="translated">Rozpoczyna operację asynchroniczną, aby zakończyć sesję ruchu wychodzącego.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous outbound session termination.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> , Która odwołuje się zakończenie asynchronicznej wychodzących sesji.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
          <source>Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</source>
          <target state="translated">Zakończeniem wychodzących sesji nie ma wpływu na przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania wiadomości w sesji skojarzonego z kanału wejściowego.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
          <source>This operation must complete within a default interval of time.</source>
          <target state="translated">Tę operację należy wykonać w ramach domyślny interwał czasu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time within which the operation must complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> , Który określa przedział czasu, w którym należy wykonać operację.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> Delegowanie.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> that contains state information for this request.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="object" /&gt;</ph> Zawierający informacje o stanie dla tego żądania.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</source>
          <target state="translated">Rozpoczyna operację asynchroniczną, aby zakończyć sesję wychodzące z określonego limitu czasu, w którym należy wykonać operację.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous outbound session termination.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> , Która odwołuje się zakończenie asynchronicznej wychodzących sesji.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</source>
          <target state="translated">Zakończeniem wychodzących sesji nie ma wpływu na przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania wiadomości w sesji skojarzonego z kanału wejściowego.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IDuplexSession">
          <source>Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</source>
          <target state="translated">Kończy wychodzących sesji, która wskazuje, że nie komunikaty będą wysyłane z tego punktu końcowego w kanale skojarzony z sesją.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source>Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</source>
          <target state="translated">Kończy wychodzących sesji, która wskazuje, że nie komunikaty będą wysyłane z tego punktu końcowego w kanale skojarzony z sesją.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source>Calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession&gt;</ph> signals to the other side of the session that it should return <ph id="ph2">`null`</ph> from any outstanding or subsequent calls made to <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession&gt;</ph> sygnały do drugiej stronie sesji, który powinien zostać zwrócony <ph id="ph2">`null`</ph> wszystkie oczekujące lub kolejnych wywołań <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A&gt;</ph> is idempotent, so calling it again has no effect.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A&gt;</ph> jest idempotentności, więc ponownego wywoływania nie ma wpływu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source>Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</source>
          <target state="translated">Zakończeniem wychodzących sesji nie ma wpływu na przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania wiadomości w sesji skojarzonego z kanału wejściowego.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source><ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> is a session method that can interact with the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /&gt;</ph> that owns the session.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> jest to metoda sesji, które mogą kontaktować się z <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /&gt;</ph> , który jest właścicielem sesji.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source>In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</source>
          <target state="translated">W szczególności, jeśli Twoje okres istnienia sesji jest umieszczany razem z kanału okres istnienia (tak, jakby była TCP i niezawodnej sesji i bezpieczeństwo):</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source>If <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> is called before <ph id="ph2">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> is called on the channel, <ph id="ph3">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> should wait for <ph id="ph4">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> to finish.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> jest wywoływana przed <ph id="ph2">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> jest wywoływana w kanale, <ph id="ph3">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> ma oczekiwać na <ph id="ph4">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> aby zakończyć.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source>If the channel is in the <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state, <ph id="ph3">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> should throw an <ph id="ph4">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">Jeśli kanał jest w <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> lub <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> stanu, <ph id="ph3">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> powinien zgłosić <ph id="ph4">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source>If the channel is in the <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state, <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> should throw a <ph id="ph3">&lt;see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /&gt;</ph>.</source>
          <target state="translated">Jeśli kanał jest w <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> stanu, <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> powinien zgłosić <ph id="ph3">&lt;see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source>The channel should fault if <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> throws.</source>
          <target state="translated">Kanał powinien fault, jeśli <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
          <source>The implementation of <ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> on the channel should call <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> and then verify that <ph id="ph3">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /&gt;</ph> returns <ph id="ph4">&lt;see langword="null" /&gt;</ph>, which indicates that <ph id="ph5">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> was called from the other side of the session.</source>
          <target state="translated">Implementacja <ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> w kanale powinien wywoływać <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> , a następnie sprawdź, czy <ph id="ph3">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /&gt;</ph> zwraca <ph id="ph4">&lt;see langword="null" /&gt;</ph>, co oznacza, że <ph id="ph5">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> została wywołana z drugiej strony sesji.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time within which the operation must complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> , Który określa przedział czasu, w którym należy wykonać operację.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</source>
          <target state="translated">Kończy wychodzących sesji, która wskazuje, że nie komunikaty będą wysyłane z tego punktu końcowego w kanale skojarzony z sesją w określonym interwale czasu.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>Calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29&gt;</ph> signals to the other side of the session that it should return <ph id="ph2">`null`</ph> from any outstanding or subsequent calls made to <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29&gt;</ph> sygnały do drugiej stronie sesji, który powinien zostać zwrócony <ph id="ph2">`null`</ph> wszystkie oczekujące lub kolejnych wywołań <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A&gt;</ph> is idempotent, so calling it again has no effect.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A&gt;</ph> jest idempotentności, więc ponownego wywoływania nie ma wpływu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</source>
          <target state="translated">Zakończeniem wychodzących sesji nie ma wpływu na przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania wiadomości w sesji skojarzonego z kanału wejściowego.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source><ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> is a session method that can interact with the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /&gt;</ph> that owns the session.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> jest to metoda sesji, które mogą kontaktować się z <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /&gt;</ph> , który jest właścicielem sesji.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</source>
          <target state="translated">W szczególności, jeśli Twoje okres istnienia sesji jest umieszczany razem z kanału okres istnienia (tak, jakby była TCP i niezawodnej sesji i bezpieczeństwo):</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>If <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> is called before <ph id="ph2">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> is called on the channel, <ph id="ph3">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> should wait for <ph id="ph4">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> to finish.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> jest wywoływana przed <ph id="ph2">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> jest wywoływana w kanale, <ph id="ph3">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> ma oczekiwać na <ph id="ph4">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> aby zakończyć.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>If the channel is in the <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state, <ph id="ph3">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> should throw an <ph id="ph4">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">Jeśli kanał jest w <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> lub <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> stanu, <ph id="ph3">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> powinien zgłosić <ph id="ph4">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>If the channel is in the <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state, <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> should throw a <ph id="ph3">&lt;see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /&gt;</ph>.</source>
          <target state="translated">Jeśli kanał jest w <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> stanu, <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> powinien zgłosić <ph id="ph3">&lt;see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>The channel should fault if <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> throws.</source>
          <target state="translated">Kanał powinien fault, jeśli <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
          <source>The implementation of <ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> on the channel should call <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> and then verify that <ph id="ph3">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /&gt;</ph> returns <ph id="ph4">&lt;see langword="null" /&gt;</ph>, indicating that <ph id="ph5">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> was called from the other side of the session.</source>
          <target state="translated">Implementacja <ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> w kanale powinien wywoływać <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> , a następnie sprawdź, czy <ph id="ph3">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /&gt;</ph> zwraca <ph id="ph4">&lt;see langword="null" /&gt;</ph>, wskazujące który <ph id="ph5">&lt;see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /&gt;</ph> została wywołana z drugiej strony sesji.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to one of the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> Zwrócony przez wywołanie do jednego z <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
          <source>Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</source>
          <target state="translated">Kończy operację asynchroniczną, aby zakończyć wychodzących sesji, która wskazuje, że nie komunikaty będą wysyłane z tego punktu końcowego w kanale skojarzony z sesją.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
          <source>Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel</source>
          <target state="translated">Przerywanie sesji wychodzących nie wpływa przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania wiadomości w sesji skojarzonego z kanału wejściowego</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>