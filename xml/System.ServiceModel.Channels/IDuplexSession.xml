<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7b801b05899f26eebe24bc1705382cc49a5b354" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51303356" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="46b5c-101">Definiuje interfejs dla sesji na każdej stronie dwukierunkowej komunikacji między punktami końcowymi przesyłania komunikatów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46b5c-101">Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46b5c-102"><xref:System.ServiceModel.Channels.IDuplexSession> Interfejs jest złożenie przychodzących sesji, zdefiniowane przez <xref:System.ServiceModel.Channels.IInputSession> interfejsu i wychodzących sesji, zdefiniowane przez <xref:System.ServiceModel.Channels.IOutputSession> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="46b5c-102">The <xref:System.ServiceModel.Channels.IDuplexSession> interface is the union of the inbound session, defined by the <xref:System.ServiceModel.Channels.IInputSession> interface, and the outbound session, defined by the <xref:System.ServiceModel.Channels.IOutputSession> interface.</span></span> <span data-ttu-id="46b5c-103">Przychodzących sesji lub wychodzących sesji można przerywać działanie niezależnie od drugiego.</span><span class="sxs-lookup"><span data-stu-id="46b5c-103">Either the inbound session or outbound session can be terminated independently of the other.</span></span> <span data-ttu-id="46b5c-104">Wychodzących sesji można przerywać działanie synchronicznie, wywołując <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> lub asynchronicznie przez wywołanie <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span><span class="sxs-lookup"><span data-stu-id="46b5c-104">The outbound session can be terminated synchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> or asynchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span></span>  
  
 <span data-ttu-id="46b5c-105">Przychodzących sesji można zdalnie zakończone.</span><span class="sxs-lookup"><span data-stu-id="46b5c-105">The inbound session can be remotely terminated.</span></span> <span data-ttu-id="46b5c-106"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> Skojarzone z przychodzących sesji rozpoczyna się, zwracając `null` podczas tej sesji jest zamknięcie.</span><span class="sxs-lookup"><span data-stu-id="46b5c-106">The <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associated with the inbound session starts returning `null` when that session is shutdown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="46b5c-107">Rozpoczyna operację asynchroniczną, aby zakończyć sesję ruchu wychodzącego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-107">Begins an asynchronous operation to terminate the outbound session.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="46b5c-108">
            <see cref="T:System.AsyncCallback" /> Delegować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-108">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="46b5c-109">
            <see langword="object" /> Zawierający informacje o stanie dla tego żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-109">An <see langword="object" /> that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46b5c-110">Rozpoczyna operację asynchroniczną, aby zakończyć sesję ruchu wychodzącego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-110">Begins an asynchronous operation to terminate the outbound session.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46b5c-111">
            <see cref="T:System.IAsyncResult" /> Odwołujący się przed zakończeniem asynchronicznego wychodzących sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-111">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46b5c-112">Wychodzących sesji nie ma wpływu na przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania komunikatów w sesji skojarzone z kanału wejściowego.</span><span class="sxs-lookup"><span data-stu-id="46b5c-112">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span> <span data-ttu-id="46b5c-113">Ta operacja musi zostać zakończone w domyślny interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="46b5c-113">This operation must complete within a default interval of time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="46b5c-114">
            <see cref="T:System.TimeSpan" /> , Który określa przedział czasu, w którym należy wykonać operację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-114">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="46b5c-115">
            <see cref="T:System.AsyncCallback" /> Delegować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-115">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="46b5c-116">
            <see langword="object" /> Zawierający informacje o stanie dla tego żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-116">An <see langword="object" /> that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46b5c-117">Rozpoczyna operację asynchroniczną, aby zakończyć sesję ruchu wychodzącego z określonego limitu czasu, w którym należy wykonać operację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-117">Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46b5c-118">
            <see cref="T:System.IAsyncResult" /> Odwołujący się przed zakończeniem asynchronicznego wychodzących sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-118">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46b5c-119">Wychodzących sesji nie ma wpływu na przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania komunikatów w sesji skojarzone z kanału wejściowego.</span><span class="sxs-lookup"><span data-stu-id="46b5c-119">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="46b5c-120">Kończy sesję ruchu wychodzącego, który wskazuje, że dalszych komunikatów wysyłanych z tego punktu końcowego w kanale, który został skojarzony z sesją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-120">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46b5c-121">Kończy sesję ruchu wychodzącego, który wskazuje, że dalszych komunikatów wysyłanych z tego punktu końcowego w kanale, który został skojarzony z sesją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-121">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46b5c-122">Wywoływanie <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> sygnałów do drugiej stronie sesji, który powinien zostać zwrócony `null` wszystkie oczekujące lub kolejnych wywołań <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="46b5c-122">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="46b5c-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> jest idempotentne, dzięki czemu ponownego wywoływania nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="46b5c-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="46b5c-124">Wychodzących sesji nie ma wpływu na przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania komunikatów w sesji skojarzone z kanału wejściowego.</span><span class="sxs-lookup"><span data-stu-id="46b5c-124">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="46b5c-125">
              <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> jest to metoda sesji, która może współdziałać z <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> , który jest właścicielem sesji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-125">
                <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span>
            </span>
            <span data-ttu-id="46b5c-126">W szczególności usługi okres istnienia sesji jest umieszczany razem z okresem istnienia Twojego kanału (tak, jakby była przy użyciu protokołu TCP i niezawodnej sesji i zabezpieczeń):</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-126">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span>
            </span>
            <span data-ttu-id="46b5c-127">-Jeśli <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> jest wywoływana przed <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> nosi nazwę na kanale, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> ma oczekiwać <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> na zakończenie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-127">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span>
            </span>
            <span data-ttu-id="46b5c-128">— Jeśli kanał jest <see cref="F:System.ServiceModel.CommunicationState.Created" /> lub <see cref="F:System.ServiceModel.CommunicationState.Opening" /> stanu, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> powinno zgłosić <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-128">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
            <span data-ttu-id="46b5c-129">— Jeśli kanał jest <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> powinno zgłosić <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-129">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span>
            </span>
            <span data-ttu-id="46b5c-130">-Kanału powinien błędów, jeśli <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> zgłasza wyjątek.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-130">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span>
            </span>
            <span data-ttu-id="46b5c-131">-Wdrożenia <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> w kanale powinien wywoływać <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> i sprawdź, czy <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> zwraca <see langword="null" />, który wskazuje, że <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> została wywołana z drugiej strony sesji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-131">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, which indicates that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="46b5c-132">
            <see cref="T:System.TimeSpan" /> , Który określa przedział czasu, w którym należy wykonać operację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46b5c-133">Kończy sesję ruchu wychodzącego, który wskazuje, że dalszych komunikatów wysyłanych z tego punktu końcowego w kanale, który został skojarzony z sesją w określonym interwale czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-133">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46b5c-134">Wywoływanie <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> sygnałów do drugiej stronie sesji, który powinien zostać zwrócony `null` wszystkie oczekujące lub kolejnych wywołań <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="46b5c-134">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="46b5c-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> jest idempotentne, dzięki czemu ponownego wywoływania nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="46b5c-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="46b5c-136">Wychodzących sesji nie ma wpływu na przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania komunikatów w sesji skojarzone z kanału wejściowego.</span><span class="sxs-lookup"><span data-stu-id="46b5c-136">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="46b5c-137">
              <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> jest to metoda sesji, która może współdziałać z <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> , który jest właścicielem sesji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-137">
                <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span>
            </span>
            <span data-ttu-id="46b5c-138">W szczególności usługi okres istnienia sesji jest umieszczany razem z okresem istnienia Twojego kanału (tak, jakby była przy użyciu protokołu TCP i niezawodnej sesji i zabezpieczeń):</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-138">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span>
            </span>
            <span data-ttu-id="46b5c-139">-Jeśli <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> jest wywoływana przed <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> nosi nazwę na kanale, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> ma oczekiwać <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> na zakończenie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-139">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span>
            </span>
            <span data-ttu-id="46b5c-140">— Jeśli kanał jest <see cref="F:System.ServiceModel.CommunicationState.Created" /> lub <see cref="F:System.ServiceModel.CommunicationState.Opening" /> stanu, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> powinno zgłosić <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-140">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
            <span data-ttu-id="46b5c-141">— Jeśli kanał jest <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> powinno zgłosić <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-141">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span>
            </span>
            <span data-ttu-id="46b5c-142">-Kanału powinien błędów, jeśli <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> zgłasza wyjątek.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-142">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span>
            </span>
            <span data-ttu-id="46b5c-143">-Wdrożenia <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> w kanale powinien wywoływać <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> i sprawdź, czy <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> zwraca <see langword="null" />oznaczający, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> została wywołana z drugiej strony sesji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="46b5c-143">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, indicating that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="46b5c-144">
            <see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do jednego z <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-144">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46b5c-145">Kończy operację asynchroniczną, aby zakończyć sesję ruchu wychodzącego, która wskazuje, że dalszych komunikatów wysyłanych z tego punktu końcowego w kanale, który został skojarzony z sesją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46b5c-145">Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46b5c-146">Wychodzących sesji nie ma wpływu na przychodzących sesji i dlatego sprawia, że oświadczenia o możliwość odbierania komunikatów w sesji skojarzone z kanału wejściowego</span><span class="sxs-lookup"><span data-stu-id="46b5c-146">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>