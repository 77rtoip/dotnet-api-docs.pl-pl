<Type Name="IChannelListener" FullName="System.ServiceModel.Channels.IChannelListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d2595925eefa8e472cb197b25293dfdd2c5c750" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37461055" /></Metadata><TypeSignature Language="C#" Value="public interface IChannelListener : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelListener implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelListener&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelListener : System::ServiceModel::ICommunicationObject" />
  <TypeSignature Language="F#" Value="type IChannelListener = interface&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje interfejs, który musi być implementowana przez odbiornik kanału, aby zaakceptować kanałów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.IChannelListener> Interfejs reprezentuje podstawowy interfejs dla odbiorniki kanałów.  
  
 Odbiorniki kanałów i ich skojarzone kanały są zazwyczaj używane przez usługi, które odbierają komunikacja zainicjowana przez klientów. Kanał fabryki, które implementują <xref:System.ServiceModel.Channels.IChannelFactory> interfejsu, z drugiej strony, zapewniają mechanizmy służące do tworzenia kanałów za pomocą których komunikacja z usługą jest inicjowana.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginWaitForChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iChannelListener.BeginWaitForChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> , Który określa czas oczekiwania operacji kanału musi ukończyć przed przekroczeniem limitu czasu.</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegata, który będą wysyłane powiadomienia o zakończeniu asynchronicznego oczekiwania dla operacji kanału.</param>
        <param name="state">Obiekt określony przez aplikację, która zawiera informacje o stanie związane z asynchronicznego oczekiwania dla operacji kanału.</param>
        <summary>Rozpoczyna operację asynchroniczną oczekiwania kanału dostarczenie, który musi zostać zakończony w określonym interwale czasu.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołujący się asynchronicznego oczekiwania dla operacji kanału.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForChannel">
      <MemberSignature Language="C#" Value="public bool EndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndWaitForChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForChannel : IAsyncResult -&gt; bool" Usage="iChannelListener.EndWaitForChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" /> metody.</param>
        <summary>Kończy operację asynchroniczną oczekiwania kanały dostarczenie.</summary>
        <returns><see langword="true" /> Jeśli wiadomość dotarła; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="iChannelListener.GetProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Typizowany obiekt, dla której metodę wykonywania zapytań.</typeparam>
        <summary>Zwraca typizowany obiekt wymagane, jeśli jest obecny, z odpowiednią warstwę stosu kanału.</summary>
        <returns>Typizowany obiekt <paramref name="T" /> wymagane, jeśli jest obecny lub <see langword="null" /> Jeśli tak nie jest.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia typizowany obiekt, takich jak interfejs do ustawiania właściwości lub pobierania stanu z odpowiednią warstwę stosu kanał "request". Jeśli warstwa obsługuje zwraca żądany obiekt, zwraca go. W przeciwnym razie deleguje ona wywołania do następnej warstwy ze stosu. Jeśli otrzymuje na dole stosu i nie warstwy kanału obsługiwane żądany obiekt, a następnie metoda zwraca `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IChannelListener.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.ServiceModel.Channels.IChannelListener.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator URI, na którym odbiorników, które są generowane przez fabrykę nasłuchiwania.</summary>
        <value><see cref="T:System.Uri" /> Na której nasłuchiwania odbiorników, które są generowane przez fabrykę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator URI oznacza adres transportu, na którym <xref:System.ServiceModel.Channels.IChannelListener> nasłuchuje komunikatów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForChannel">
      <MemberSignature Language="C#" Value="public bool WaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitForChannel : TimeSpan -&gt; bool" Usage="iChannelListener.WaitForChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> , Który określa czas oczekiwania operacji kanału musi ukończyć przed przekroczeniem limitu czasu.</param>
        <summary>Czeka, aż kanału do odbierania.</summary>
        <returns><see langword="true" /> Jeśli kanał dotarła przed przedział czasu określony przez <paramref name="timeout" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>