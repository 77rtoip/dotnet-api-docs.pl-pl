<Type Name="IOutputChannel" FullName="System.ServiceModel.Channels.IOutputChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d10091866c33541577926d783ba95e76626e8044" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56068493" /></Metadata><TypeSignature Language="C#" Value="public interface IOutputChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOutputChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IOutputChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOutputChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOutputChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IOutputChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje interfejs, który muszą implementować kanał, aby wysłać wiadomość.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <xref:System.ServiceModel.Channels.IOutputChannel> Interfejs definiuje synchroniczne i asynchroniczne warianty <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> operacji. Zapewnia <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A> dla wiadomości wysyłanych na kanale miejsca docelowego.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna operację asynchroniczną do wysyłania wiadomości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginSend : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOutputChannel.BeginSend (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.ServiceModel.Channels.Message" /> Wysyłanych w kanale danych wyjściowych.</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegować.</param>
        <param name="state">Obiekt określony przez aplikację, która zawiera informacje o stanie związane z operacją asynchronicznego wysyłania.</param>
        <summary>Rozpoczyna operację asynchroniczną do przesyłania komunikatów do miejsca docelowego kanału danych wyjściowych.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołujący się transmisji komunikatów asynchronicznych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Miejsce docelowe dla wiadomości wysyłanych w kanale danych wyjściowych jest określona w czasie tworzenia kanału.  
  
 <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> Metody nie gwarantuje dostarczanie komunikatów do zdalnego punktu końcowego. Jeśli wymagane są gwarancje dostarczenia, użyj <xref:System.ServiceModel.Channels.IOutputSessionChannel>.  
  
 Jeśli komunikat wysłany jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie, jest używane, <xref:System.ServiceModel.QuotaExceededException> zgłaszany. Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości. Wartość domyślna to 65536 bajtów.  
  
   
  
## Examples  
 Poniższy kod ilustruje sposób zaimplementować tę metodę:  
  
 [!code-csharp[S_UE_MessageInterceptor#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginSend : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOutputChannel.BeginSend (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.ServiceModel.Channels.Message" /> Wysyłanych w kanale danych wyjściowych.</param>
        <param name="timeout"><see cref="T:System.TimeSpan" /> Określający, ile operacji wysyłania musi ukończyć przed przekroczeniem limitu czasu.</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegata, która odbiera powiadomienia o operacji asynchronicznej Wyślij ukończenia.</param>
        <param name="state">Obiekt określony przez aplikację, która zawiera informacje o stanie związane z operacją asynchronicznego wysyłania.</param>
        <summary>Rozpoczyna operację asynchroniczną do przesyłania komunikatów do miejsca docelowego kanału danych wyjściowych w określonym interwale czasu.</summary>
        <returns><see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchronicznego wysyłania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Miejsce docelowe dla wiadomości wysyłanych w kanale danych wyjściowych jest określona w czasie tworzenia kanału.  
  
 <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> Metody nie gwarantuje dostarczanie komunikatów do zdalnego punktu końcowego. Jeśli wymagane są gwarancje dostarczenia, użyj <xref:System.ServiceModel.Channels.IOutputSessionChannel>.  
  
 Jeśli komunikat wysłany jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie, jest używane, <xref:System.ServiceModel.QuotaExceededException> zgłaszany. Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości. Wartość domyślna to 65536 bajtów.  
  
   
  
## Examples  
 Poniższy kod ilustruje sposób zaimplementować tę metodę:  
  
 [!code-csharp[S_UE_MessageInterceptor#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Operacja powinno zgłosić <see cref="T:System.TimeoutException" /> Jeśli określony <paramref name="timeout" /> zostanie przekroczony.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public void EndSend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSend (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndSend : IAsyncResult -&gt; unit" Usage="iOutputChannel.EndSend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" /> metody.</param>
        <summary>Kończy operację asynchroniczną do przesyłania komunikatów do miejsca docelowego kanału danych wyjściowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli komunikat wysłany jest większy, że maksymalna komunikatu rozmiar dozwolony przez powiązanie, jest używane, <xref:System.ServiceModel.QuotaExceededException> zgłaszany. Maksymalny rozmiar wiadomości jest ustawiana przez <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> właściwości. Wartość domyślna to 65536 bajtów.  
  
   
  
## Examples  
 Poniższy kod ilustruje sposób zaimplementować tę metodę:  
  
 [!code-csharp[S_UE_MessageInterceptor#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera docelowej usługi, do którego są wysyłane komunikaty o w kanale danych wyjściowych.</summary>
        <value><see cref="T:System.ServiceModel.EndpointAddress" /> Usługi, z którym kanał danych wyjściowych wysyła wiadomości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.EndpointAddress> Służy jako ostatecznego miejsca docelowego i adresu fizycznego, jeśli <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> nie zostanie określony. Jeśli <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> zostanie określony, to rzeczywisty adres fizyczny do jest wysyłana wiadomość i za pomocą którego wiadomość musi przejść do przyjeździe do miejsca docelowego.  
  
   
  
## Examples  
 Poniższy kod ilustruje sposób implementacji tej właściwości:  
  
 [!code-csharp[S_UE_MessageInterceptor#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła komunikat na kanał bieżący danych wyjściowych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.ServiceModel.Channels.Message -&gt; unit" Usage="iOutputChannel.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.ServiceModel.Channels.Message" /> Wysyłanych w kanale danych wyjściowych.</param>
        <summary>Przesyła wiadomość do miejsca docelowego kanału danych wyjściowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Miejsce docelowe dla wiadomości wysyłanych w kanale danych wyjściowych jest określona w czasie tworzenia kanału.  
  
 <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> Metody nie gwarantuje dostarczanie komunikatów do zdalnego punktu końcowego. Implementacja <xref:System.ServiceModel.Channels.IOutputChannel> dyskretnie można porzucić wiadomości z różnych powodów. Może istnieć ma więcej miejsca buforu, na przykład. Jeśli wymagane są gwarancje dostarczenia, użyj <xref:System.ServiceModel.Channels.IOutputSessionChannel>.  
  
 Przekazywanie wiadomość w kanale danych wyjściowych powoduje, że komunikat, który ma być używane. Po wywołaniu metody <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, nie będzie można sprawdzić wiadomości lub wywołania <xref:System.ServiceModel.Channels.Message.Close%2A> wiadomości.  
  
   
  
## Examples  
 Poniższy kod ilustruje sposób zaimplementować tę metodę:  
  
 [!code-csharp[S_UE_MessageInterceptor#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="iOutputChannel.Send (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.ServiceModel.Channels.Message" /> Wysyłanych w kanale danych wyjściowych.</param>
        <param name="timeout"><see cref="T:System.TimeSpan" /> Określający, ile operacji wysyłania musi ukończyć przed przekroczeniem limitu czasu.</param>
        <summary>Wysyła komunikat na kanał bieżący dane wyjściowe w określonym interwale czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Miejsce docelowe dla wiadomości wysyłanych w kanale danych wyjściowych jest określona w czasie tworzenia kanału.  
  
 <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> Metody nie gwarantuje dostarczanie komunikatów do zdalnego punktu końcowego. Implementacja <xref:System.ServiceModel.Channels.IOutputChannel> dyskretnie można porzucić wiadomości z różnych powodów. Może istnieć ma więcej miejsca buforu, na przykład. Jeśli wymagane są gwarancje dostarczenia, użyj <xref:System.ServiceModel.Channels.IOutputSessionChannel>.  
  
 Przekazywanie wiadomość w kanale danych wyjściowych powoduje, że komunikat, który ma być używane. Po wywołaniu metody <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, nie będzie można sprawdzić wiadomości lub wywołania <xref:System.ServiceModel.Channels.Message.Close%2A> wiadomości.  
  
   
  
## Examples  
 Poniższy kod ilustruje sposób zaimplementować tę metodę:  
  
 [!code-csharp[S_UE_MessageInterceptor#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Operacja powinno zgłosić <see cref="T:System.TimeoutException" /> Jeśli określony <paramref name="timeout" /> zostanie przekroczony.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IOutputChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator URI, który zawiera adres transportu, do którego komunikaty są wysyłane w kanale danych wyjściowych.</summary>
        <value><see cref="T:System.Uri" /> Zawierający adres transportu, do którego komunikaty są wysyłane w kanale danych wyjściowych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.EndpointAddress> Służy jako ostatecznego miejsca docelowego i adresu fizycznego, jeśli <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> nie zostanie określony. Jeśli <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> zostanie określony, to rzeczywisty adres fizyczny do jest wysyłana wiadomość i za pomocą którego wiadomość musi przejść do przyjeździe do miejsca docelowego.  
  
   
  
## Examples  
 Poniższy kod ilustruje sposób implementacji tej właściwości:  
  
 [!code-csharp[S_UE_MessageInterceptor#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>