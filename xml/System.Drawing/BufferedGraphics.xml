<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="385cd9f35c51508596737a223b79889e3e7131a1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69248378" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphics = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Udostępnia bufor grafiki dla podwójnego buforowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.BufferedGraphics> Klasa umożliwia implementowanie niestandardowego podwójnego buforowania grafiki. Zawiera otokę dla buforu grafiki, a także metody, których można użyć do zapisu w buforze i renderowania jego zawartości na urządzeniu wyjściowym.  
  
 Grafiki używające podwójnego buforowania mogą zmniejszyć lub wyeliminować migotanie, które jest spowodowane przez ponowne narysowanie powierzchni ekranu. W przypadku korzystania z podwójnego buforowania zaktualizowane grafiki są najpierw rysowane w buforze w pamięci, a zawartość tego buforu jest szybko zapisywana na część lub na całej wyświetlonej powierzchni. To stosunkowo krótkie zastąpienie wyświetlanej grafiki zwykle zmniejsza lub eliminuje migotanie, które czasami występuje, gdy grafika jest aktualizowana.  
  
> [!NOTE]
>  Najprostszym sposobem użycia podwójnego buforowania jest ustawienie <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flagi stylu kontrolki w kontrolce <xref:System.Windows.Forms.Control.SetStyle%2A> przy użyciu metody. <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> Ustawienie flagi kontrolki przekierowuje wszystkie malowanie dla formantu za pośrednictwem domyślnego bufora grafiki, bez konieczności dodatkowego kodu. Ta flaga jest domyślnie ustawiona `true` na wartość.  
  
 Klasa nie ma konstruktora publicznego i musi zostać utworzona <xref:System.Drawing.BufferedGraphicsContext> przez domenę aplikacji przy użyciu jej <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metody. <xref:System.Drawing.BufferedGraphics> Możesz pobrać <xref:System.Drawing.BufferedGraphicsContext> dla bieżącej domeny aplikacji ze statycznej <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> właściwości.  
  
 <xref:System.Drawing.BufferedGraphics.Graphics%2A> Właściwość może służyć do rysowania w buforze grafiki. Ta właściwość zapewnia dostęp do <xref:System.Drawing.Graphics> obiektu, który jest pobierany do bufora grafiki przydzieloną dla tego <xref:System.Drawing.BufferedGraphics> obiektu.  
  
 <xref:System.Drawing.BufferedGraphics.Render%2A> Metoda bez argumentów rysuje zawartość buforu grafiki do powierzchni określonej podczas przydzielenia buforu. Inne przeciążenia <xref:System.Drawing.BufferedGraphics.Render%2A> metody umożliwiają <xref:System.Drawing.Graphics> określenie obiektu lub <xref:System.IntPtr> obiektu, który wskazuje na kontekst urządzenia, do którego należy narysować zawartość bufora grafiki.  
  
 Aby uzyskać więcej informacji na temat rysowania grafiki o podwójnej buforowaniu, zobacz [podwójnie buforowana grafika](~/docs/framework/winforms/advanced/double-buffered-graphics.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Drawing.BufferedGraphics> obiektu do rysowania grafiki przy użyciu kilku typów implementacji buforowania. Klikanie formularza Alternatywnie uruchamia i kończy czasomierz, który powoduje, że aktualizacje są rysowane. Aktualizacje rysowania umożliwiają zaobserwowanie efektu podwójnego buforowania. Kliknięcie prawym przyciskiem myszy w formularzu spowoduje przechodzenie między następującymi trybami rysowania:  
  
-   Rysowanie bezpośrednio do <xref:System.Windows.Forms.Control.Handle%2A> elementu <xref:System.Windows.Forms.Form>dla.  
  
-   Rysowanie przez zastąpienie <xref:System.Windows.Forms.Form.OnPaint%2A> metody <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> przy użyciu stylu kontrolki.  
  
-   Rysowanie przez zastąpienie <xref:System.Windows.Forms.Form.OnPaint%2A> metody metody formularza bez <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> użycia stylu formantu.  
  
 W każdym trybie jest rysowany tekst, który identyfikuje bieżący tryb i opisuje zachowanie, które występuje po naciśnięciu każdego przycisku myszy.  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><see cref="T:System.Drawing.BufferedGraphics" /> Klasa nie jest bezpieczna wątkowo. Podczas uzyskiwania dostępu do buforu grafiki z oddzielnych wątków należy użyć mechanizmu kontroli dostępu do wątków, aby zapobiec konfliktom.</threadsafe>
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez <see cref="T:System.Drawing.BufferedGraphics" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Drawing.BufferedGraphics.Dispose%2A> po zakończeniu korzystania z <xref:System.Drawing.BufferedGraphics> obiektu. <xref:System.Drawing.BufferedGraphics.Dispose%2A> Metoda<xref:System.Drawing.BufferedGraphics> pozostawia obiekt w stanie niezdatnym do użytku. Po wywołaniu <xref:System.Drawing.BufferedGraphics.Dispose%2A>należy wydać wszystkie odwołania <xref:System.Drawing.BufferedGraphics> do obiektu, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Drawing.BufferedGraphics> , która zajmowała obiekt. Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Drawing.BufferedGraphics.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.Drawing.BufferedGraphics> do obiektu. W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Drawing.BufferedGraphics> `Finalize` metody obiektu przez moduł zbierający elementy bezużyteczne.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia obiektowi podjęcie próby zwolnienia zasobów i wykonywanie innych operacji czyszczenia przed odinstalowaniem ich przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.BufferedGraphics.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Drawing.Graphics" /> Pobiera obiekt, który wyprowadza do bufora grafiki.</summary>
        <value><see cref="T:System.Drawing.Graphics" /> Obiekt, który wyprowadza bufor grafiki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość udostępnia <xref:System.Drawing.Graphics> obiekt, który jest pobierany do bufora grafiki przydzieloną dla tego <xref:System.Drawing.BufferedGraphics> obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje zawartość bufora grafiki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberSignature Language="F#" Value="member this.Render : unit -&gt; unit" Usage="bufferedGraphics.Render " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zawartość bufora grafiki na urządzeniu domyślnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje zawartość buforu grafiki do urządzenia określonego przez wywołanie <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metody <xref:System.Drawing.BufferedGraphicsContext> użytej do utworzenia tego <xref:System.Drawing.BufferedGraphics> obiektu.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Drawing.Graphics -&gt; unit" Usage="bufferedGraphics.Render target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.Drawing.Graphics" /> Obiekt, do którego ma zostać zapisana zawartość bufora grafiki.</param>
        <summary>Zapisuje zawartość buforu grafiki do określonego <see cref="T:System.Drawing.Graphics" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje zawartość buforu grafiki do określonego <xref:System.Drawing.Graphics> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje renderowanie zawartości buforu grafiki do określonego <xref:System.Drawing.Graphics> obiektu. Ten kod jest częścią większego przykładu dostarczonego dla <xref:System.Drawing.BufferedGraphics> klasy.  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberSignature Language="F#" Value="member this.Render : nativeint -&gt; unit" Usage="bufferedGraphics.Render targetDC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC"><see cref="T:System.IntPtr" /> Wskazuje kontekst urządzenia, do którego należy napisać zawartość bufora grafiki.</param>
        <summary>Zapisuje zawartość buforu grafiki do kontekstu urządzenia skojarzonego z określonym <see cref="T:System.IntPtr" /> dojściem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje zawartość buforu grafiki do kontekstu urządzenia skojarzonego z określonym <xref:System.IntPtr> dojściem.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób renderowania zawartości buforu `grafx` grafiki do określonego kontekstu urządzenia. Ten kod jest częścią większego przykładu dostarczonego dla <xref:System.Drawing.BufferedGraphics> klasy.  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">w celu uzyskania dostępu do kodu niezarządzanego. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <altmember cref="T:System.IntPtr" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
  </Members>
</Type>
