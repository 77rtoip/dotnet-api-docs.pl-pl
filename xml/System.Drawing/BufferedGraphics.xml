<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="385cd9f35c51508596737a223b79889e3e7131a1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69248378" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphics = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="09845-101">Udostępnia bufor grafiki dla podwójnego buforowania.</span><span class="sxs-lookup"><span data-stu-id="09845-101">Provides a graphics buffer for double buffering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09845-102"><xref:System.Drawing.BufferedGraphics> Klasa umożliwia implementowanie niestandardowego podwójnego buforowania grafiki.</span><span class="sxs-lookup"><span data-stu-id="09845-102">The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="09845-103">Zawiera otokę dla buforu grafiki, a także metody, których można użyć do zapisu w buforze i renderowania jego zawartości na urządzeniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="09845-103">It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="09845-104">Grafiki używające podwójnego buforowania mogą zmniejszyć lub wyeliminować migotanie, które jest spowodowane przez ponowne narysowanie powierzchni ekranu.</span><span class="sxs-lookup"><span data-stu-id="09845-104">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span> <span data-ttu-id="09845-105">W przypadku korzystania z podwójnego buforowania zaktualizowane grafiki są najpierw rysowane w buforze w pamięci, a zawartość tego buforu jest szybko zapisywana na część lub na całej wyświetlonej powierzchni.</span><span class="sxs-lookup"><span data-stu-id="09845-105">When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</span></span> <span data-ttu-id="09845-106">To stosunkowo krótkie zastąpienie wyświetlanej grafiki zwykle zmniejsza lub eliminuje migotanie, które czasami występuje, gdy grafika jest aktualizowana.</span><span class="sxs-lookup"><span data-stu-id="09845-106">This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09845-107">Najprostszym sposobem użycia podwójnego buforowania jest ustawienie <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flagi stylu kontrolki w kontrolce <xref:System.Windows.Forms.Control.SetStyle%2A> przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="09845-107">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="09845-108"><xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> Ustawienie flagi kontrolki przekierowuje wszystkie malowanie dla formantu za pośrednictwem domyślnego bufora grafiki, bez konieczności dodatkowego kodu.</span><span class="sxs-lookup"><span data-stu-id="09845-108">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="09845-109">Ta flaga jest domyślnie ustawiona `true` na wartość.</span><span class="sxs-lookup"><span data-stu-id="09845-109">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="09845-110">Klasa nie ma konstruktora publicznego i musi zostać utworzona <xref:System.Drawing.BufferedGraphicsContext> przez domenę aplikacji przy użyciu jej <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metody. <xref:System.Drawing.BufferedGraphics></span><span class="sxs-lookup"><span data-stu-id="09845-110">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="09845-111">Możesz pobrać <xref:System.Drawing.BufferedGraphicsContext> dla bieżącej domeny aplikacji ze statycznej <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="09845-111">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="09845-112"><xref:System.Drawing.BufferedGraphics.Graphics%2A> Właściwość może służyć do rysowania w buforze grafiki.</span><span class="sxs-lookup"><span data-stu-id="09845-112">The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer.</span></span> <span data-ttu-id="09845-113">Ta właściwość zapewnia dostęp do <xref:System.Drawing.Graphics> obiektu, który jest pobierany do bufora grafiki przydzieloną dla tego <xref:System.Drawing.BufferedGraphics> obiektu.</span><span class="sxs-lookup"><span data-stu-id="09845-113">This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 <span data-ttu-id="09845-114"><xref:System.Drawing.BufferedGraphics.Render%2A> Metoda bez argumentów rysuje zawartość buforu grafiki do powierzchni określonej podczas przydzielenia buforu.</span><span class="sxs-lookup"><span data-stu-id="09845-114">The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</span></span> <span data-ttu-id="09845-115">Inne przeciążenia <xref:System.Drawing.BufferedGraphics.Render%2A> metody umożliwiają <xref:System.Drawing.Graphics> określenie obiektu lub <xref:System.IntPtr> obiektu, który wskazuje na kontekst urządzenia, do którego należy narysować zawartość bufora grafiki.</span><span class="sxs-lookup"><span data-stu-id="09845-115">Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.</span></span>  
  
 <span data-ttu-id="09845-116">Aby uzyskać więcej informacji na temat rysowania grafiki o podwójnej buforowaniu, zobacz [podwójnie buforowana grafika](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span><span class="sxs-lookup"><span data-stu-id="09845-116">For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09845-117">Poniższy przykład kodu demonstruje użycie <xref:System.Drawing.BufferedGraphics> obiektu do rysowania grafiki przy użyciu kilku typów implementacji buforowania.</span><span class="sxs-lookup"><span data-stu-id="09845-117">The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations.</span></span> <span data-ttu-id="09845-118">Klikanie formularza Alternatywnie uruchamia i kończy czasomierz, który powoduje, że aktualizacje są rysowane.</span><span class="sxs-lookup"><span data-stu-id="09845-118">Clicking the form alternately starts and stops a timer that causes draw updates.</span></span> <span data-ttu-id="09845-119">Aktualizacje rysowania umożliwiają zaobserwowanie efektu podwójnego buforowania.</span><span class="sxs-lookup"><span data-stu-id="09845-119">The draw updates allow you to observe the effect of double buffering.</span></span> <span data-ttu-id="09845-120">Kliknięcie prawym przyciskiem myszy w formularzu spowoduje przechodzenie między następującymi trybami rysowania:</span><span class="sxs-lookup"><span data-stu-id="09845-120">Right-clicking the form cycles through the following drawing modes:</span></span>  
  
-   <span data-ttu-id="09845-121">Rysowanie bezpośrednio do <xref:System.Windows.Forms.Control.Handle%2A> elementu <xref:System.Windows.Forms.Form>dla.</span><span class="sxs-lookup"><span data-stu-id="09845-121">Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.</span></span>  
  
-   <span data-ttu-id="09845-122">Rysowanie przez zastąpienie <xref:System.Windows.Forms.Form.OnPaint%2A> metody <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> przy użyciu stylu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="09845-122">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
-   <span data-ttu-id="09845-123">Rysowanie przez zastąpienie <xref:System.Windows.Forms.Form.OnPaint%2A> metody metody formularza bez <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> użycia stylu formantu.</span><span class="sxs-lookup"><span data-stu-id="09845-123">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
 <span data-ttu-id="09845-124">W każdym trybie jest rysowany tekst, który identyfikuje bieżący tryb i opisuje zachowanie, które występuje po naciśnięciu każdego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="09845-124">In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</span></span>  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="09845-125"><see cref="T:System.Drawing.BufferedGraphics" /> Klasa nie jest bezpieczna wątkowo.</span><span class="sxs-lookup"><span data-stu-id="09845-125">The <see cref="T:System.Drawing.BufferedGraphics" /> class is not thread safe.</span></span> <span data-ttu-id="09845-126">Podczas uzyskiwania dostępu do buforu grafiki z oddzielnych wątków należy użyć mechanizmu kontroli dostępu do wątków, aby zapobiec konfliktom.</span><span class="sxs-lookup"><span data-stu-id="09845-126">When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</span></span></threadsafe>
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="09845-127">Podwójnie buforowana grafika</span><span class="sxs-lookup"><span data-stu-id="09845-127">Double Buffered Graphics</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09845-128">Zwalnia wszystkie zasoby używane przez <see cref="T:System.Drawing.BufferedGraphics" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="09845-128">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09845-129">Wywołaj <xref:System.Drawing.BufferedGraphics.Dispose%2A> po zakończeniu korzystania z <xref:System.Drawing.BufferedGraphics> obiektu.</span><span class="sxs-lookup"><span data-stu-id="09845-129">Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="09845-130"><xref:System.Drawing.BufferedGraphics.Dispose%2A> Metoda<xref:System.Drawing.BufferedGraphics> pozostawia obiekt w stanie niezdatnym do użytku.</span><span class="sxs-lookup"><span data-stu-id="09845-130">The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state.</span></span> <span data-ttu-id="09845-131">Po wywołaniu <xref:System.Drawing.BufferedGraphics.Dispose%2A>należy wydać wszystkie odwołania <xref:System.Drawing.BufferedGraphics> do obiektu, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Drawing.BufferedGraphics> , która zajmowała obiekt.</span><span class="sxs-lookup"><span data-stu-id="09845-131">After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying.</span></span> <span data-ttu-id="09845-132">Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="09845-132">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09845-133">Zawsze wywołuj <xref:System.Drawing.BufferedGraphics.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.Drawing.BufferedGraphics> do obiektu.</span><span class="sxs-lookup"><span data-stu-id="09845-133">Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="09845-134">W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Drawing.BufferedGraphics> `Finalize` metody obiektu przez moduł zbierający elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="09845-134">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="09845-135">Podwójnie buforowana grafika</span><span class="sxs-lookup"><span data-stu-id="09845-135">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09845-136">Umożliwia obiektowi podjęcie próby zwolnienia zasobów i wykonywanie innych operacji czyszczenia przed odinstalowaniem ich przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="09845-136">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.BufferedGraphics.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09845-137"><see cref="T:System.Drawing.Graphics" /> Pobiera obiekt, który wyprowadza do bufora grafiki.</span><span class="sxs-lookup"><span data-stu-id="09845-137">Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></summary>
        <value><span data-ttu-id="09845-138"><see cref="T:System.Drawing.Graphics" /> Obiekt, który wyprowadza bufor grafiki.</span><span class="sxs-lookup"><span data-stu-id="09845-138">A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09845-139">Ta właściwość udostępnia <xref:System.Drawing.Graphics> obiekt, który jest pobierany do bufora grafiki przydzieloną dla tego <xref:System.Drawing.BufferedGraphics> obiektu.</span><span class="sxs-lookup"><span data-stu-id="09845-139">This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="09845-140">Podwójnie buforowana grafika</span><span class="sxs-lookup"><span data-stu-id="09845-140">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09845-141">Zapisuje zawartość bufora grafiki.</span><span class="sxs-lookup"><span data-stu-id="09845-141">Writes the contents of the graphics buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberSignature Language="F#" Value="member this.Render : unit -&gt; unit" Usage="bufferedGraphics.Render " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09845-142">Zapisuje zawartość bufora grafiki na urządzeniu domyślnym.</span><span class="sxs-lookup"><span data-stu-id="09845-142">Writes the contents of the graphics buffer to the default device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09845-143">Ta metoda zapisuje zawartość buforu grafiki do urządzenia określonego przez wywołanie <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metody <xref:System.Drawing.BufferedGraphicsContext> użytej do utworzenia tego <xref:System.Drawing.BufferedGraphics> obiektu.</span><span class="sxs-lookup"><span data-stu-id="09845-143">This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="09845-144">Podwójnie buforowana grafika</span><span class="sxs-lookup"><span data-stu-id="09845-144">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Drawing.Graphics -&gt; unit" Usage="bufferedGraphics.Render target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="09845-145"><see cref="T:System.Drawing.Graphics" /> Obiekt, do którego ma zostać zapisana zawartość bufora grafiki.</span><span class="sxs-lookup"><span data-stu-id="09845-145">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="09845-146">Zapisuje zawartość buforu grafiki do określonego <see cref="T:System.Drawing.Graphics" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="09845-146">Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09845-147">Ta metoda zapisuje zawartość buforu grafiki do określonego <xref:System.Drawing.Graphics> obiektu.</span><span class="sxs-lookup"><span data-stu-id="09845-147">This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09845-148">Poniższy przykład kodu demonstruje renderowanie zawartości buforu grafiki do określonego <xref:System.Drawing.Graphics> obiektu.</span><span class="sxs-lookup"><span data-stu-id="09845-148">The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="09845-149">Ten kod jest częścią większego przykładu dostarczonego dla <xref:System.Drawing.BufferedGraphics> klasy.</span><span class="sxs-lookup"><span data-stu-id="09845-149">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="09845-150">Podwójnie buforowana grafika</span><span class="sxs-lookup"><span data-stu-id="09845-150">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberSignature Language="F#" Value="member this.Render : nativeint -&gt; unit" Usage="bufferedGraphics.Render targetDC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC"><span data-ttu-id="09845-151"><see cref="T:System.IntPtr" /> Wskazuje kontekst urządzenia, do którego należy napisać zawartość bufora grafiki.</span><span class="sxs-lookup"><span data-stu-id="09845-151">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="09845-152">Zapisuje zawartość buforu grafiki do kontekstu urządzenia skojarzonego z określonym <see cref="T:System.IntPtr" /> dojściem.</span><span class="sxs-lookup"><span data-stu-id="09845-152">Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09845-153">Ta metoda zapisuje zawartość buforu grafiki do kontekstu urządzenia skojarzonego z określonym <xref:System.IntPtr> dojściem.</span><span class="sxs-lookup"><span data-stu-id="09845-153">This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09845-154">Poniższy przykład kodu demonstruje sposób renderowania zawartości buforu `grafx` grafiki do określonego kontekstu urządzenia.</span><span class="sxs-lookup"><span data-stu-id="09845-154">The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context.</span></span> <span data-ttu-id="09845-155">Ten kod jest częścią większego przykładu dostarczonego dla <xref:System.Drawing.BufferedGraphics> klasy.</span><span class="sxs-lookup"><span data-stu-id="09845-155">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="09845-156">w celu uzyskania dostępu do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="09845-156">for access to unmanaged code.</span></span> <span data-ttu-id="09845-157">Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="09845-157">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.IntPtr" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="09845-158">Podwójnie buforowana grafika</span><span class="sxs-lookup"><span data-stu-id="09845-158">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
