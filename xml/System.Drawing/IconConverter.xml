<Type Name="IconConverter" FullName="System.Drawing.IconConverter">
  <TypeSignature Language="C#" Value="public class IconConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IconConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.IconConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class IconConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class IconConverter : System::ComponentModel::ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d738c-101">Konwertuje <see cref="T:System.Drawing.Icon" /> obiektu z jednego typu danych do innego.</span><span class="sxs-lookup"><span data-stu-id="d738c-101">Converts an <see cref="T:System.Drawing.Icon" /> object from one data type to another.</span></span> <span data-ttu-id="d738c-102">Uzyskiwanie dostępu do tej klasy przy użyciu <see cref="T:System.ComponentModel.TypeDescriptor" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d738c-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IconConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d738c-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.IconConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d738c-103">Initializes a new instance of the <see cref="T:System.Drawing.IconConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d738c-104"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="d738c-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="d738c-105">A <see cref="T:System.Type" /> chcesz konwertować z typu, który określa.</span><span class="sxs-lookup"><span data-stu-id="d738c-105">A <see cref="T:System.Type" /> that specifies the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="d738c-106">Określa, czy to <see cref="T:System.Drawing.IconConverter" /> można przekonwertować wystąpienia określonego typu do <see cref="T:System.Drawing.Icon" />, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="d738c-106">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Icon" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="d738c-107">Ta metoda zwraca <see langword="true" /> Jeśli <see cref="T:System.Drawing.IconConverter" /> można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d738c-107">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d738c-108">Ta metoda zwraca `true` tylko wtedy, gdy `sourceType` jest taka sama na tablicę bajtów.</span><span class="sxs-lookup"><span data-stu-id="d738c-108">This method returns `true` only if `sourceType` is equal to a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d738c-109"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="d738c-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d738c-110">A <see cref="T:System.Type" /> ma zostać przekonwertowany na typ, który określa.</span><span class="sxs-lookup"><span data-stu-id="d738c-110">A <see cref="T:System.Type" /> that specifies the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="d738c-111">Określa, czy to <see cref="T:System.Drawing.IconConverter" /> można przekonwertować <see cref="T:System.Drawing.Icon" /> na wystąpienie określonego typu, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="d738c-111">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an <see cref="T:System.Drawing.Icon" /> to an instance of a specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="d738c-112">Ta metoda zwraca <see langword="true" /> Jeśli <see cref="T:System.Drawing.IconConverter" /> można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d738c-112">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d738c-113">Ta metoda zwraca `true` tylko wtedy, gdy `destinationType` jest równa tablica bajtów lub ciąg.</span><span class="sxs-lookup"><span data-stu-id="d738c-113">This method returns `true` only if `destinationType` is equal to a byte array or string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d738c-114"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="d738c-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="d738c-115">A <see cref="T:System.Globalization.CultureInfo" /> przechowuje informacje o określonej kulturze.</span><span class="sxs-lookup"><span data-stu-id="d738c-115">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture.</span></span></param>
        <param name="value"><span data-ttu-id="d738c-116"><see cref="T:System.Object" /> Do skonwertowania.</span><span class="sxs-lookup"><span data-stu-id="d738c-116">The <see cref="T:System.Object" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="d738c-117">Konwertuje określony obiekt do <see cref="T:System.Drawing.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="d738c-117">Converts a specified object to an <see cref="T:System.Drawing.Icon" />.</span></span></summary>
        <returns><span data-ttu-id="d738c-118">Jeśli ta metoda zakończy się powodzeniem, zwraca <see cref="T:System.Drawing.Icon" /> on utworzony za pomocą konwersji podanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="d738c-118">If this method succeeds, it returns the <see cref="T:System.Drawing.Icon" /> that it created by converting the specified object.</span></span> <span data-ttu-id="d738c-119">W przeciwnym razie zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d738c-119">Otherwise, it throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d738c-120">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="d738c-120">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d738c-121"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span><span class="sxs-lookup"><span data-stu-id="d738c-121">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="d738c-122">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który określa Konwencji formatowania używane przez określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="d738c-122">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies formatting conventions used by a particular culture.</span></span></param>
        <param name="value"><span data-ttu-id="d738c-123">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="d738c-123">The object to convert.</span></span> <span data-ttu-id="d738c-124">Ten obiekt powinien być typu ikony lub typu, które mogą być rzutowane na <see cref="T:System.Drawing.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="d738c-124">This object should be of type icon or some type that can be cast to <see cref="T:System.Drawing.Icon" />.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d738c-125">Typ docelowy konwersji ikony.</span><span class="sxs-lookup"><span data-stu-id="d738c-125">The type to convert the icon to.</span></span></param>
        <summary><span data-ttu-id="d738c-126">Konwertuje <see cref="T:System.Drawing.Icon" /> (lub obiekt, który mogą być rzutowane na <see cref="T:System.Drawing.Icon" />) do określonego typu.</span><span class="sxs-lookup"><span data-stu-id="d738c-126">Converts an <see cref="T:System.Drawing.Icon" /> (or an object that can be cast to an <see cref="T:System.Drawing.Icon" />) to a specified type.</span></span></summary>
        <returns><span data-ttu-id="d738c-127">Ta metoda zwraca przekonwertowany obiekt.</span><span class="sxs-lookup"><span data-stu-id="d738c-127">This method returns the converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d738c-128">Domyślna implementacja wywołuje <xref:System.Object.ToString%2A> metody dla obiekt Jeśli obiekt jest prawidłowy, a jeśli typ docelowy jest `string`.</span><span class="sxs-lookup"><span data-stu-id="d738c-128">The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`.</span></span> <span data-ttu-id="d738c-129">Jeśli ta metoda nie można przekonwertować na typ docelowy, zgłasza <xref:System.NotSupportedException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d738c-129">If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d738c-130">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="d738c-130">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>