<Type Name="IconConverter" FullName="System.Drawing.IconConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4866c25b701a457a2aed08432a4ee603e651108" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69360201" /></Metadata><TypeSignature Language="C#" Value="public class IconConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IconConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.IconConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class IconConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class IconConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type IconConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="933ea-101"><see cref="T:System.Drawing.Icon" /> Konwertuje obiekt z jednego typu danych na inny.</span><span class="sxs-lookup"><span data-stu-id="933ea-101">Converts an <see cref="T:System.Drawing.Icon" /> object from one data type to another.</span></span> <span data-ttu-id="933ea-102">Uzyskuj dostęp do tej klasy <see cref="T:System.ComponentModel.TypeDescriptor" /> za pomocą obiektu.</span><span class="sxs-lookup"><span data-stu-id="933ea-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IconConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="933ea-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.IconConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="933ea-103">Initializes a new instance of the <see cref="T:System.Drawing.IconConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="iconConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="933ea-104"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="933ea-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="933ea-105">A <see cref="T:System.Type" /> , który określa typ, z którego ma zostać przeprowadzona konwersja.</span><span class="sxs-lookup"><span data-stu-id="933ea-105">A <see cref="T:System.Type" /> that specifies the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="933ea-106">Określa <see cref="T:System.Drawing.Icon" />, czy <see cref="T:System.Drawing.IconConverter" /> można skonwertować wystąpienie określonego typu na typ, przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="933ea-106">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Icon" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="933ea-107">Ta metoda zwraca <see langword="true" /> , <see cref="T:System.Drawing.IconConverter" /> <see langword="false" />jeśli może wykonać konwersję; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="933ea-107">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="933ea-108">Ta metoda zwraca `true` tylko wtedy `sourceType` , gdy jest równa tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="933ea-108">This method returns `true` only if `sourceType` is equal to a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="iconConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="933ea-109"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="933ea-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="933ea-110">A <see cref="T:System.Type" /> , który określa typ do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="933ea-110">A <see cref="T:System.Type" /> that specifies the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="933ea-111">Określa, czy <see cref="T:System.Drawing.IconConverter" /> można <see cref="T:System.Drawing.Icon" /> przekonwertować na wystąpienie określonego typu, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="933ea-111">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an <see cref="T:System.Drawing.Icon" /> to an instance of a specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="933ea-112">Ta metoda zwraca <see langword="true" /> , <see cref="T:System.Drawing.IconConverter" /> <see langword="false" />jeśli może wykonać konwersję; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="933ea-112">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="933ea-113">Ta metoda zwraca `true` tylko wtedy `destinationType` , gdy jest taka sama jak tablica lub ciąg bajtowy.</span><span class="sxs-lookup"><span data-stu-id="933ea-113">This method returns `true` only if `destinationType` is equal to a byte array or string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="iconConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="933ea-114"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="933ea-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="933ea-115">A <see cref="T:System.Globalization.CultureInfo" /> , który zawiera informacje o określonej kulturze.</span><span class="sxs-lookup"><span data-stu-id="933ea-115">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture.</span></span></param>
        <param name="value"><span data-ttu-id="933ea-116"><see cref="T:System.Object" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="933ea-116">The <see cref="T:System.Object" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="933ea-117">Konwertuje określony obiekt na <see cref="T:System.Drawing.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="933ea-117">Converts a specified object to an <see cref="T:System.Drawing.Icon" />.</span></span></summary>
        <returns><span data-ttu-id="933ea-118">Jeśli ta metoda powiedzie się, zwraca <see cref="T:System.Drawing.Icon" /> , że została utworzona przez konwersję określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="933ea-118">If this method succeeds, it returns the <see cref="T:System.Drawing.Icon" /> that it created by converting the specified object.</span></span> <span data-ttu-id="933ea-119">W przeciwnym razie zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="933ea-119">Otherwise, it throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="933ea-120">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="933ea-120">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="iconConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="933ea-121"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="933ea-121">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="933ea-122"><see cref="T:System.Globalization.CultureInfo" /> Obiekt, który określa konwencje formatowania używane przez określoną kulturę.</span><span class="sxs-lookup"><span data-stu-id="933ea-122">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies formatting conventions used by a particular culture.</span></span></param>
        <param name="value"><span data-ttu-id="933ea-123">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="933ea-123">The object to convert.</span></span> <span data-ttu-id="933ea-124">Ten obiekt powinien być typu Icon lub innego typu, który może być rzutowany <see cref="T:System.Drawing.Icon" />na.</span><span class="sxs-lookup"><span data-stu-id="933ea-124">This object should be of type icon or some type that can be cast to <see cref="T:System.Drawing.Icon" />.</span></span></param>
        <param name="destinationType"><span data-ttu-id="933ea-125">Typ, do którego ma zostać przekonwertowana ikona.</span><span class="sxs-lookup"><span data-stu-id="933ea-125">The type to convert the icon to.</span></span></param>
        <summary><span data-ttu-id="933ea-126">Konwertuje (lub obiekt, który może być rzutowany <see cref="T:System.Drawing.Icon" />na) do określonego typu. <see cref="T:System.Drawing.Icon" /></span><span class="sxs-lookup"><span data-stu-id="933ea-126">Converts an <see cref="T:System.Drawing.Icon" /> (or an object that can be cast to an <see cref="T:System.Drawing.Icon" />) to a specified type.</span></span></summary>
        <returns><span data-ttu-id="933ea-127">Ta metoda zwraca przekonwertowany obiekt.</span><span class="sxs-lookup"><span data-stu-id="933ea-127">This method returns the converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="933ea-128">Domyślna implementacja wywołuje <xref:System.Object.ToString%2A> metodę w obiekcie, jeśli obiekt jest prawidłowy i jeśli typem docelowym jest `string`.</span><span class="sxs-lookup"><span data-stu-id="933ea-128">The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`.</span></span> <span data-ttu-id="933ea-129">Jeśli ta metoda nie może konwertować na typ docelowy, zgłasza <xref:System.NotSupportedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="933ea-129">If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="933ea-130">Nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="933ea-130">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
