<Type Name="Graphics+DrawImageAbort" FullName="System.Drawing.Graphics+DrawImageAbort">
  <Metadata><Meta Name="ms.openlocfilehash" Value="897738808f3fec2c7d9699cff736ff2dea3df00a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69360238" /></Metadata><TypeSignature Language="C#" Value="public delegate bool Graphics.DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Graphics/DrawImageAbort extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics.DrawImageAbort" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Graphics.DrawImageAbort(callbackdata As IntPtr) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public: delegate bool Graphics::DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="F#" Value="type Graphics.DrawImageAbort = delegate of nativeint -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="callbackdata" Type="System.IntPtr" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="callbackdata"><span data-ttu-id="002ac-101">Wewnętrzny wskaźnik określający dane dla metody wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="002ac-101">Internal pointer that specifies data for the callback method.</span></span> <span data-ttu-id="002ac-102">Ten parametr nie jest przesyłany przez <see cref="Overload:System.Drawing.Graphics.DrawImage" /> wszystkie przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="002ac-102">This parameter is not passed by all <see cref="Overload:System.Drawing.Graphics.DrawImage" /> overloads.</span></span> <span data-ttu-id="002ac-103">Możesz testować pod kątem nieobecności, sprawdzając wartość <see cref="F:System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="002ac-103">You can test for its absence by checking for the value <see cref="F:System.IntPtr.Zero" />.</span></span></param>
    <summary><span data-ttu-id="002ac-104">Zapewnia metodę wywołania zwrotnego, gdy <see cref="Overload:System.Drawing.Graphics.DrawImage" /> Metoda powinna przedwcześnie anulować wykonywanie i zatrzymać Rysowanie obrazu.</span><span class="sxs-lookup"><span data-stu-id="002ac-104">Provides a callback method for deciding when the <see cref="Overload:System.Drawing.Graphics.DrawImage" /> method should prematurely cancel execution and stop drawing an image.</span></span></summary>
    <returns><span data-ttu-id="002ac-105">Ta metoda zwraca <see langword="true" /> <see cref="Overload:System.Drawing.Graphics.DrawImage" /> , jeśli zdecyduje, że metoda powinna przedwcześnie zatrzymać wykonywanie.</span><span class="sxs-lookup"><span data-stu-id="002ac-105">This method returns <see langword="true" /> if it decides that the <see cref="Overload:System.Drawing.Graphics.DrawImage" /> method should prematurely stop execution.</span></span> <span data-ttu-id="002ac-106">W przeciwnym razie <see langword="false" /> zwraca <see cref="Overload:System.Drawing.Graphics.DrawImage" /> , aby wskazać, że metoda powinna kontynuować wykonywanie.</span><span class="sxs-lookup"><span data-stu-id="002ac-106">Otherwise it returns <see langword="false" /> to indicate that the <see cref="Overload:System.Drawing.Graphics.DrawImage" /> method should continue execution.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002ac-107">Ta metoda jest używana w połączeniu z <xref:System.Drawing.Graphics.DrawImage%2A> metodą <xref:System.Drawing.Graphics> klasy.</span><span class="sxs-lookup"><span data-stu-id="002ac-107">This method is used in conjunction with the <xref:System.Drawing.Graphics.DrawImage%2A> method of the <xref:System.Drawing.Graphics> class.</span></span> <span data-ttu-id="002ac-108">Niektóre przeciążenia <xref:System.Drawing.Graphics.DrawImage%2A> metody wywołania metody wywołania zwrotnego zdefiniowanej przez aplikację tego typu, aby dowiedzieć się, czy przeciążenia powinny zatrzymać lub kontynuować wykonywanie.</span><span class="sxs-lookup"><span data-stu-id="002ac-108">Certain overloads of the <xref:System.Drawing.Graphics.DrawImage%2A> method call an application-defined callback method of this type to find out if the overloads should stop or continue execution.</span></span>  
  
 <span data-ttu-id="002ac-109">Podczas wykonywania odpowiednie <xref:System.Drawing.Graphics.DrawImage%2A> przeciążenia często wywołują tę metodę wywołania zwrotnego, aby dowiedzieć się, czy powinny one zatrzymać Rysowanie określonego obrazu lub czy powinny kontynuować rysowanie obrazu.</span><span class="sxs-lookup"><span data-stu-id="002ac-109">During execution, the relevant <xref:System.Drawing.Graphics.DrawImage%2A> overloads frequently call this callback method to find out if they should stop drawing the specified image or if they should continue drawing the image.</span></span> <span data-ttu-id="002ac-110">Metoda <xref:System.Drawing.Graphics.DrawImageAbort> wywołania zwrotnego może określić, czy należy kontynuować, czy nie na podstawie wybranego algorytmu zawartego w nim, opcjonalnie używając danych przesłanych przez parametr callbackdata.</span><span class="sxs-lookup"><span data-stu-id="002ac-110">The <xref:System.Drawing.Graphics.DrawImageAbort> callback method can determine whether to continue or not based on a chosen algorithm included in it, optionally using the data passed to it by the callbackdata parameter.</span></span> <span data-ttu-id="002ac-111">Na przykład algorytm może określić, czy obraz przewinie się na ekranie, i sygnalizować anulowanie <xref:System.Drawing.Graphics.DrawImage%2A> metody, aby zatrzymać Rysowanie.</span><span class="sxs-lookup"><span data-stu-id="002ac-111">For example, an algorithm might determine if the image has scrolled off the screen and signal a cancellation to the <xref:System.Drawing.Graphics.DrawImage%2A> method to stop drawing.</span></span>  
  
 <span data-ttu-id="002ac-112">Deklaracja użytkownika tej metody obsługi zdarzeń musi mieć te same parametry co <xref:System.Drawing.Graphics.DrawImageAbort> deklaracja delegata.</span><span class="sxs-lookup"><span data-stu-id="002ac-112">A user declaration of this event-handling method must have the same parameters as the <xref:System.Drawing.Graphics.DrawImageAbort> delegate declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="002ac-113">Ten przykład to uproszczony implementacja <xref:System.Drawing.Graphics.DrawImageAbort> delegata.</span><span class="sxs-lookup"><span data-stu-id="002ac-113">This example is a simplistic implementation of the <xref:System.Drawing.Graphics.DrawImageAbort> delegate.</span></span> <span data-ttu-id="002ac-114">Sprawdza tylko, czy <xref:System.Drawing.Graphics.DrawImage%2A> Metoda przekazała dane za pomocą parametru callbackdata.</span><span class="sxs-lookup"><span data-stu-id="002ac-114">It merely checks to see if the <xref:System.Drawing.Graphics.DrawImage%2A> method has passed it data using the callbackdata parameter.</span></span> <span data-ttu-id="002ac-115">(Niektóre <xref:System.Drawing.Graphics.DrawImage%2A> przeciążenia mają `DrawImageAbort` tylko parametr i nie przekazują danych; `callbackdata` Niektóre przeciążenia mają zarówno `DrawImageAbort` parametry, jak i i mogą przekazywać dane.) Jeśli żadne dane nie zostały przesłane, powraca `true` do sygnału do metody wywołującej <xref:System.Drawing.Graphics.DrawImage%2A> , która powinna anulować Rysowanie.</span><span class="sxs-lookup"><span data-stu-id="002ac-115">(Some <xref:System.Drawing.Graphics.DrawImage%2A> overloads have only a `DrawImageAbort` parameter and pass no data; some overloads have both `DrawImageAbort` and `callbackdata` parameters and can pass data.) If no data was passed, it returns `true` to signal to the calling <xref:System.Drawing.Graphics.DrawImage%2A> method that it should cancel the drawing.</span></span> <span data-ttu-id="002ac-116">Jeśli dane zostały przesłane, powraca `false` do sygnał, że rysowanie powinno być kontynuowane.</span><span class="sxs-lookup"><span data-stu-id="002ac-116">If data was passed, it returns `false` to signal that drawing should continue.</span></span>  
  
 <span data-ttu-id="002ac-117">Realistyczna implementacja tego wywołania zwrotnego będzie obejmowała rzeczywiste badanie niektórych kryteriów w celu anulowania lub kontynuowania wykonywania.</span><span class="sxs-lookup"><span data-stu-id="002ac-117">A realistic implementation of this callback would involve the actual scrutiny of some criteria to cancel or continue the execution.</span></span>  
  
```vb  
Private Function DrawImageCallback(callBackData As IntPtr) As Boolean  
     ' Test for call that passes callBackData parameter.  
     If callBackData.Equals(IntPtr.Zero) Then  
         ' If no callBackData passed, abort DrawImage method.  
         Return True  
     Else  
         ' If callBackData passed, continue DrawImage method.  
         Return False  
     End If  
 End Function 'DrawImageCallback  
```  
  
```csharp  
// Define DrawImageAbort callback method.  
 private bool DrawImageCallback(IntPtr callbackdata)  
 {  
    // Test for call that passes callBackData parameter.  
    if(callbackdata==IntPtr.Zero)  
    {  
       // If no callbackdata passed, cancel DrawImage method.  
       return true;  
    }  
    else  
    {  
       // If callbackdata passed, continue DrawImage method.  
       return false;  
    }  
 }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
