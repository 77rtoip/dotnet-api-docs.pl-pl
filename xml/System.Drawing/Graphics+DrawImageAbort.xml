<Type Name="Graphics+DrawImageAbort" FullName="System.Drawing.Graphics+DrawImageAbort">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07ba4559a69b40a9d30f8680daa62570accc52f1" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52914473" /></Metadata><TypeSignature Language="C#" Value="public delegate bool Graphics.DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Graphics/DrawImageAbort extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics.DrawImageAbort" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Graphics.DrawImageAbort(callbackdata As IntPtr) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public: delegate bool Graphics::DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="F#" Value="type Graphics.DrawImageAbort = delegate of nativeint -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="callbackdata" Type="System.IntPtr" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="callbackdata">Wewnętrzny wskaźnik, który określa dane do metody wywołania zwrotnego. Ten parametr nie zostanie przekazany przez wszystkie <see cref="Overload:System.Drawing.Graphics.DrawImage" /> przeciążenia. Możesz sprawdzić jego nieobecności, sprawdzając wartość <see cref="F:System.IntPtr.Zero" />.</param>
    <summary>Zapewnia metodę wywołania zwrotnego dotyczących decydowania, kiedy <see cref="Overload:System.Drawing.Graphics.DrawImage" /> metoda przedwcześnie może anulować wykonanie i Zatrzymaj rysowania obrazu.</summary>
    <returns>Ta metoda zwraca <see langword="true" /> jeśli wykryje, że <see cref="Overload:System.Drawing.Graphics.DrawImage" /> metoda przedwcześnie należy zatrzymać wykonywanie. W przeciwnym razie zwraca <see langword="false" /> z informacją, że <see cref="Overload:System.Drawing.Graphics.DrawImage" /> metody powinno być kontynuowane wykonywanie.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana w połączeniu z <xref:System.Drawing.Graphics.DrawImage%2A> metody <xref:System.Drawing.Graphics> klasy. Niektóre przeciążenia <xref:System.Drawing.Graphics.DrawImage%2A> metoda wywołuje metodę wywołania zwrotnego z zdefiniowanych przez aplikację tego typu, aby dowiedzieć się, jeśli przeciążenia, należy zatrzymać lub kontynuować wykonywanie.  
  
 W czasie wykonywania właściwych <xref:System.Drawing.Graphics.DrawImage%2A> przeciążenia często wywołać tę metodę wywołania zwrotnego, aby dowiedzieć się, czy ma zostać zatrzymana, rysowania określonego obrazu, czy powinno być kontynuowane, rysowania obrazu. <xref:System.Drawing.Graphics.DrawImageAbort> Metody wywołania zwrotnego można określić, czy chcesz kontynuować, lub nie na podstawie wybranego algorytmu zawarte w nim, opcjonalnie przy użyciu danych przekazany przez parametr callbackdata. Na przykład algorytm może określić, czy obraz ma być przewijane mieściły się na ekranie i sygnałów anulowania do <xref:System.Drawing.Graphics.DrawImage%2A> metodę, aby zatrzymać Rysowanie.  
  
 Oświadczenie użytkownika o tej metody obsługi zdarzeń musi mieć te same parametry jako <xref:System.Drawing.Graphics.DrawImageAbort> delegować deklaracji.  
  
   
  
## Examples  
 W tym przykładzie jest uproszczony implementacją <xref:System.Drawing.Graphics.DrawImageAbort> delegować. Jedynie sprawdza, czy <xref:System.Drawing.Graphics.DrawImage%2A> metoda został przekazany, jego danych za pomocą parametru callbackdata. (Niektóre <xref:System.Drawing.Graphics.DrawImage%2A> przeciążenia mają tylko `DrawImageAbort` parametru i przekazywać żadnych danych; niektóre przeciążenia mieć zarówno `DrawImageAbort` i `callbackdata` parametrów i przekazać dane.) Jeśli żadne dane nie został przekazany, funkcja zwraca `true` celu zasygnalizowania do wywołania <xref:System.Drawing.Graphics.DrawImage%2A> metody, należy go anulować rysunku. Jeśli danych został przekazany, funkcja zwraca `false` do sygnalizowania, że rysowania powinno być kontynuowane.  
  
 Realistyczne wdrożenia to wywołanie zwrotne obejmowałaby rzeczywista analiza kryteriów można anulować lub kontynuować wykonywanie.  
  
```vb  
Private Function DrawImageCallback(callBackData As IntPtr) As Boolean  
     ' Test for call that passes callBackData parameter.  
     If callBackData.Equals(IntPtr.Zero) Then  
         ' If no callBackData passed, abort DrawImage method.  
         Return True  
     Else  
         ' If callBackData passed, continue DrawImage method.  
         Return False  
     End If  
 End Function 'DrawImageCallback  
```  
  
```csharp  
// Define DrawImageAbort callback method.  
 private bool DrawImageCallback(IntPtr callbackdata)  
 {  
    // Test for call that passes callBackData parameter.  
    if(callbackdata==IntPtr.Zero)  
    {  
       // If no callbackdata passed, cancel DrawImage method.  
       return true;  
    }  
    else  
    {  
       // If callbackdata passed, continue DrawImage method.  
       return false;  
    }  
 }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>