<Type Name="ImageFormatConverter" FullName="System.Drawing.ImageFormatConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb40f91651c7c1b510d718bfedc1c92f22aec91d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452436" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImageFormatConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageFormatConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ImageFormatConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageFormatConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageFormatConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Drawing.ImageFormatConverter" /> jest klasą, który może służyć do przekonwertowania <see cref="T:System.Drawing.Imaging.ImageFormat" /> obiektów z danych jednego typu na inny. Uzyskiwanie dostępu do tej klasy przy użyciu <see cref="T:System.ComponentModel.TypeDescriptor" /> obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konwerter typów służy do konwertowania wartości typów danych. Konwerter typów obsługuje również właściwości konfiguracji w czasie projektowania, zapewniając konwersji wartości tekstowej lub listę wartości, które użytkownicy mogą wybrać z. Dostęp <xref:System.Drawing.ImageFormatConverter> klasy za pomocą <xref:System.ComponentModel.TypeDescriptor> klasy przez wywołanie metody <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody.  
  
 <xref:System.Drawing.ImageFormatConverter> Konwertuje do i z formatów obrazów znane, jak określono w <xref:System.Drawing.Imaging.ImageFormat> klasy.  
  
> [!NOTE]
>  Jeśli chcesz konwertowanie formatów obrazów, takich jak konwertowanie BMP i JPEG, użyj jednej z <xref:System.Drawing.Image.Save%2A?displayProperty=nameWithType> metody, która przyjmuje <xref:System.Drawing.Imaging.ImageFormat> obiektu jako parametr.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageFormatConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageFormatConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.ImageFormatConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie twórz <xref:System.Drawing.ImageFormatConverter> obiekt bezpośrednio. Dostęp <xref:System.Drawing.ImageFormatConverter> klasy za pomocą <xref:System.ComponentModel.TypeDescriptor> klasy przez wywołanie metody <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst elementu formatującego. Aby uzyskać więcej informacji o środowisku, które ten konwerter jest wywoływana z tego obiektu w można. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</param>
        <param name="sourceType">Typ, który ma zostać przekonwertowany z.</param>
        <summary>Wskazuje, czy ten konwerter można przekonwertować obiektu w określony typ źródła natywnego typu konwertera.</summary>
        <returns>Ta metoda zwraca <see langword="true" /> Jeśli ten obiekt może dokonać konwersji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.ImageFormatConverter> Konwertuje do i z formatów obrazów znane, jak określono w <xref:System.Drawing.Imaging.ImageFormat> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , Który określa kontekst dla tej konwersji typu.</param>
        <param name="destinationType">
          <see cref="T:System.Type" /> Reprezentujący typ, do którego ma zostać przekonwertowany to <see cref="T:System.Drawing.Imaging.ImageFormat" /> obiektu.</param>
        <summary>Pobiera wartość wskazującą, czy ten konwerter można przekonwertować obiektu na typ docelowy określony przy użyciu kontekstu.</summary>
        <returns>Ta metoda zwraca <see langword="true" /> Jeśli ten obiekt może dokonać konwersji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.ImageFormatConverter> Konwertuje do i z formatów obrazów znane, jak określono w <xref:System.Drawing.Imaging.ImageFormat> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst elementu formatującego. Aby uzyskać więcej informacji o środowisku, które ten konwerter jest wywoływana z tego obiektu w można. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który określa Konwencji formatowania dla określonej kultury.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje określony obiekt do <see cref="T:System.Drawing.Imaging.ImageFormat" /> obiektu.</summary>
        <returns>Przekonwertowany obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.ImageFormatConverter> Konwertuje do i z formatów obrazów znane, jak określono w <xref:System.Drawing.Imaging.ImageFormat> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Nie można wykonać konwersji.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst elementu formatującego. Aby uzyskać więcej informacji o środowisku, które ten konwerter jest wywoływana z tego obiektu w można. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który określa Konwencji formatowania dla określonej kultury.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <param name="destinationType">Typ docelowy konwersji obiektu do.</param>
        <summary>Konwertuje określony obiekt określonego typu.</summary>
        <returns>Przekonwertowany obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.ImageFormatConverter> Konwertuje do i z formatów obrazów znane, jak określono w <xref:System.Drawing.Imaging.ImageFormat> klasy.  
  
 Najbardziej typowych konwersji typu jest do i z typem ciągu. Domyślna implementacja wywołuje <xref:System.Object.ToString%2A> metody obiektu, jeśli obiekt jest prawidłowy, a jeśli typ docelowy jest `string`. Jeśli ta metoda nie może przekonwertować określonego obiektu na typ docelowy, zgłasza <xref:System.NotSupportedException> wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Nie można wykonać konwersji.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> jest <see langword="null." /></exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst elementu formatującego. Aby uzyskać więcej informacji o środowisku, które ten konwerter jest wywoływana z tego obiektu w można. Może to być <see langword="null" />, dlatego należy zawsze sprawdzić. Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</param>
        <summary>Pobiera kolekcję zawierającą zestaw standardowych wartości dla tego modułu sprawdzania poprawności jest przeznaczona dla typu danych. Zwraca <see langword="null" /> Jeśli typem danych nie obsługuje standardowy zestaw wartości.</summary>
        <returns>Kolekcja, która zawiera standardowy zestaw prawidłowych wartości lub <see langword="null" />. Domyślna implementacja zawsze zwraca <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Deskryptor typu za pomocą którego można podać dodatkowy kontekst.</param>
        <summary>Wskazuje, czy ten obiekt obsługuje standardowy zestaw wartości, które mogą być pobierane z listy.</summary>
        <returns>Ta metoda zwraca <see langword="true" /> Jeśli <see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" /> można wywołać metody, aby znaleźć wspólny zbiór wartości obiekt obsługuje.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>