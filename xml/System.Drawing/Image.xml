<Type Name="Image" FullName="System.Drawing.Image">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39e462697b994994f65a8d2433d98a35691fb92b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452736" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Image : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Image extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Image" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Image&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Image abstract : MarshalByRefObject, ICloneable, IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.ImageEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ImageConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Abstrakcyjna klasa podstawowa, która udostępnia funkcje <see cref="T:System.Drawing.Bitmap" /> i <see cref="T:System.Drawing.Imaging.Metafile" /> podrzędne klasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rysowanie <xref:System.Drawing.Image> na formularzu systemu Windows, należy użyć jednej z <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows. Program obsługi jest <xref:System.Windows.Forms.Control.Paint> zdarzeń. A <xref:System.Drawing.Graphics> obiekt przekazywany do zdarzenia i jest używany do rysowania obrazu w formularzu. Kod wykonuje następujące czynności:  
  
-   Tworzy obraz z pliku o nazwie SampImag.jpg. Ten plik musi znajdować się w tym samym folderze co plik wykonywalny aplikacji.  
  
-   Tworzy punkt, w którym ma zostać narysowany lewego górnego rogu obrazu.  
  
-   Rysuje obraz nieskalowanego w formularzu.  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#55)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#55)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#55)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dokładną kopię to <see cref="T:System.Drawing.Image" />.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Ta metoda tworzy, rzutowany jako obiekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez to <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Wywoływanie zawsze <xref:System.Drawing.Image.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Drawing.Image>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Drawing.Image> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez to <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.Drawing.Image.Dispose%2A> metoda pozwala zasoby używane przez to <xref:System.Drawing.Image> odbiorczego do innych celów.  
  
 Wywołanie <xref:System.Drawing.Image.Dispose%2A> po zakończeniu przy użyciu <xref:System.Drawing.Image>. <xref:System.Drawing.Image.Dispose%2A> Pozostawia metody <xref:System.Drawing.Image> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Drawing.Image.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Drawing.Image> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Drawing.Image> klasy. Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Wywoływanie zawsze <xref:System.Drawing.Image.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Drawing.Image>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Drawing.Image> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Drawing.Image" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Wywoływanie zawsze <xref:System.Drawing.Image.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Drawing.Image>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Drawing.Image> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Image ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Image ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public int Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Flags" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Flags { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera atrybut flagi danych pikseli <see cref="T:System.Drawing.Image" />.</summary>
        <value>Liczbę całkowitą przedstawiającą bitowe połączenie <see cref="T:System.Drawing.Imaging.ImageFlags" /> dla tego <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość całkowita zwracane z tej metody odpowiada sumę <xref:System.Drawing.Imaging.ImageFlags>, zgodnie z opisem w poniższej tabeli.  
  
|Wartość ImageFlag|Reprezentacja|  
|---------------------|----------------------------|  
|`ImageFlagsNone`|0|  
|`ImageFlagsScalable`|1|  
|`ImageFlagsHasAlpha`|2|  
|`ImageFlagsHasTranslucent`|4|  
|`ImageFlagsPartiallyScalable`|8|  
|`ImageFlagsColorSpaceRGB`|16|  
|`ImageFlagsColorSpaceCMYK`|32|  
|`ImageFlagsColorSpaceGRAY`|64|  
|`ImageFlagsColorSpaceYCBCR`|128|  
|`ImageFlagsColorSpaceYCCK`|256|  
|`ImageFlagsHasRealDPI`|4096|  
|`ImageFlagsHasRealPixelSize`|8192|  
|`ImageFlagsReadOnly`|65536|  
|`ImageFlagsCaching`|131072|  
  
 Na przykład jeśli <xref:System.Drawing.Image.Flags%2A> 77960, zwracana właściwość obrazu <xref:System.Drawing.Imaging.ImageFlags> obrazu może być <xref:System.Drawing.Imaging.ImageFlags.ReadOnly>, <xref:System.Drawing.Imaging.ImageFlags.HasRealDpi>, <xref:System.Drawing.Imaging.ImageFlags.HasRealPixelSize>, <xref:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr>, i <xref:System.Drawing.Imaging.ImageFlags.PartiallyScalable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameDimensionsList">
      <MemberSignature Language="C#" Value="public Guid[] FrameDimensionsList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid[] FrameDimensionsList" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.FrameDimensionsList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FrameDimensionsList As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Guid&gt; ^ FrameDimensionsList { cli::array &lt;Guid&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę identyfikatorów GUID, które reprezentują wymiary ramki w ramach tego <see cref="T:System.Drawing.Image" />.</summary>
        <value>Tablicę identyfikatorów GUID, które określają wymiary ramki w ramach tego <see cref="T:System.Drawing.Image" /> od najważniejszych do najmniej znaczący.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca informacje na temat ramki wiele obrazów, które są dostępne w dwóch style: wiele stron i wielu rozdzielczości.  
  
 Obraz strony wielu jest obraz, który zawiera więcej niż jeden obraz. Każdej strony zawiera jeden obraz (lub ramki). Te strony (lub obrazów lub ramki) zazwyczaj są wyświetlane w przedziale czasu, aby utworzyć animację, takich jak animowanych plików GIF.  
  
 Obraz wielu rozpoznawania jest obraz, który zawiera więcej niż jedną kopię obrazu na różne metody rozwiązywania. Jest ona powszechnie stosowana przez mapowanie MCI gdzie rozmiar obrazu wyświetlanego Określa rozdzielczość obrazu używanych na rysunku. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] może obsługiwać dowolnej liczby stron (lub obrazów lub ramki), a także dowolnej liczby rozwiązania. Właściwości są zdefiniowane wymiary <xref:System.Drawing.Imaging.FrameDimension>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromFile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy <see cref="T:System.Drawing.Image" /> z określonego pliku.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFile (filename As String) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromFile(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Ciąg zawierający nazwę pliku, z którym ma zostać utworzony <see cref="T:System.Drawing.Image" />.</param>
        <summary>Tworzy <see cref="T:System.Drawing.Image" /> z określonego pliku.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zarządzanym GDI + ma wbudowane kodeków obsługujących następujące typy plików:  
  
-   BMP  
  
-   GIF  
  
-   JPEG  
  
-   PNG  
  
-   TIFF  
  
 Plik jest zablokowany do momentu <xref:System.Drawing.Image> został usunięty.  
  
 Jeśli plik nie ma prawidłowego formatu obrazu lub [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] nie obsługuje format pikseli z plików, ta metoda zgłasza <xref:System.OutOfMemoryException> wyjątku.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Klasa nie obsługuje alfa przezroczystości map bitowych. Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Image.FromFile%2A> <xref:System.Drawing.Image.GetPropertyItem%2A> i <xref:System.Drawing.Image.SetPropertyItem%2A> metody. W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Do uruchomienia tego przykładu, wklej go do formularza i obsługiwać formularza <xref:System.Windows.Forms.Control.Paint> zdarzenia przez wywołanie metody `DemonstratePropertyItem` jest metoda `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Plik nie ma prawidłowego formatu obrazu.  
  
 —lub—  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] nie obsługuje format piksela pliku.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Określony plik nie istnieje.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> jest <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromFile (string filename, bool useEmbeddedColorManagement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromFile(string filename, bool useEmbeddedColorManagement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFile (filename As String, useEmbeddedColorManagement As Boolean) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromFile(System::String ^ filename, bool useEmbeddedColorManagement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useEmbeddedColorManagement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Ciąg zawierający nazwę pliku, z którym ma zostać utworzony <see cref="T:System.Drawing.Image" />.</param>
        <param name="useEmbeddedColorManagement">Ustaw <see langword="true" /> używanie informacji dotyczących zarządzania kolor osadzone w pliku obrazu; w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy <see cref="T:System.Drawing.Image" /> z określonego pliku przy użyciu osadzonych informacji o zarządzaniu kolorów w tym pliku.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zarządzanym GDI + ma wbudowane kodeków obsługujących następujące typy plików:  
  
-   BMP  
  
-   GIF  
  
-   JPEG  
  
-   PNG  
  
-   TIFF  
  
 Jeśli plik nie ma prawidłowego formatu obrazu lub [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] nie obsługuje format pikseli z plików, ta metoda zgłasza <xref:System.OutOfMemoryException> wyjątku.  
  
 Plik jest zablokowany do momentu <xref:System.Drawing.Image> został usunięty.  
  
 `useEmbeddedColorManagement` Parametr określa, czy nowe <xref:System.Drawing.Image> stosuje korekcji kolorów zgodnie z informacji zarządzania kolor osadzonych w pliku obrazu. Osadzone informacje mogą uwzględniać profile konsorcjum kolor międzynarodowych (ICC), wartości gamma i trójchromatyczna informacji.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Klasa nie obsługuje alfa przezroczystości map bitowych. Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak uzyskać nowego przy użyciu mapy bitowej <xref:System.Drawing.Image.FromFile%2A> metody. Ilustruje też <xref:System.Drawing.TextureBrush>.  
  
 W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Tworzenie formularza zawierającego przycisk o nazwie `Button2`. Wklej kod do formularza i skojarz `Button2_Click` metody za pomocą przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń.  
  
 [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Plik nie ma prawidłowego formatu obrazu.  
  
 —lub—  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] nie obsługuje format piksela pliku.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Określony plik nie istnieje.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> jest <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy <see cref="T:System.Drawing.Bitmap" /> dojścia systemu Windows.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHbitmap">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHbitmap(native int hbitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromHbitmap(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHbitmap (hbitmap As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHbitmap(IntPtr hbitmap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hbitmap" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hbitmap">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] Dojścia mapy bitowej, z którym ma zostać utworzony <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Tworzy <see cref="T:System.Drawing.Bitmap" /> z dojściem do mapy bitowej GDI.</summary>
        <returns>
          <see cref="T:System.Drawing.Bitmap" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Image.FromHbitmap%2A> Metoda tworzy kopię [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] mapy bitowej; aby można było wydać przychodzącego [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap przy użyciu [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` metody natychmiast po utworzeniu nowej <xref:System.Drawing.Image>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHbitmap">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap, IntPtr hpalette);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHbitmap(native int hbitmap, native int hpalette) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHbitmap (hbitmap As IntPtr, hpalette As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHbitmap(IntPtr hbitmap, IntPtr hpalette);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hbitmap" Type="System.IntPtr" />
        <Parameter Name="hpalette" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hbitmap">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] Dojścia mapy bitowej, z którym ma zostać utworzony <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="hpalette">Dojście do [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] palety używane do definiowania kolorów mapy bitowej, jeśli określono mapy bitowej <c>hBitmap</c> parametr nie jest mapą bitową niezależnych od urządzenia (DIB).</param>
        <summary>Tworzy <see cref="T:System.Drawing.Bitmap" /> z dojściem do mapy bitowej GDI i dojścia do palety GDI.</summary>
        <returns>
          <see cref="T:System.Drawing.Bitmap" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Image.FromHbitmap%2A> Metoda tworzy kopię [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] mapy bitowej; aby można było wydać przychodzącego [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap przy użyciu [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` metody natychmiast po utworzeniu nowej <xref:System.Drawing.Image>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromStream">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy <see cref="T:System.Drawing.Image" /> ze strumienia określone dane.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromStream(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">A <see cref="T:System.IO.Stream" /> zawiera dane dla tego <see cref="T:System.Drawing.Image" />.</param>
        <summary>Tworzy <see cref="T:System.Drawing.Image" /> ze strumienia określone dane.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy pozostawić strumienia otwarte przez czas ich istnienia <xref:System.Drawing.Image>.  
  
 Strumień jest resetowany do zera, jeśli ta metoda jest wywoływana kolejno z tego samego strumienia.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Klasa nie obsługuje alfa przezroczystości map bitowych. Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Strumień nie ma prawidłowego formatu obrazu  
  
 —lub—  
  
 <paramref name="stream" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromStream(class System.IO.Stream stream, bool useEmbeddedColorManagement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromStream(System::IO::Stream ^ stream, bool useEmbeddedColorManagement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useEmbeddedColorManagement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">A <see cref="T:System.IO.Stream" /> zawiera dane dla tego <see cref="T:System.Drawing.Image" />.</param>
        <param name="useEmbeddedColorManagement">
          <see langword="true" /> Aby użyć informacji o zarządzaniu kolor osadzone w strumieniu danych; w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy <see cref="T:System.Drawing.Image" /> ze strumienia określone dane, opcjonalnie używając osadzonych informacji o zarządzaniu kolorów w strumieniu.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy pozostawić strumienia otwarte przez czas ich istnienia <xref:System.Drawing.Image>.  
  
 `useEmbeddedColorManagement` Parametr określa, czy nowe <xref:System.Drawing.Image> stosuje korekcji kolorów zgodnie z informacji zarządzania kolor osadzonych w strumieniu danych. Osadzone informacje mogą uwzględniać profile konsorcjum kolor międzynarodowych (ICC), wartości gamma i trójchromatyczna informacji.  
  
 Strumień jest resetowany do zera, jeśli ta metoda jest wywoływana kolejno z tego samego strumienia.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Klasa nie obsługuje alfa przezroczystości map bitowych. Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Strumień nie ma prawidłowego formatu obrazu  
  
 —lub—  
  
 <paramref name="stream" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromStream(class System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromStream(System::IO::Stream ^ stream, bool useEmbeddedColorManagement, bool validateImageData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useEmbeddedColorManagement" Type="System.Boolean" />
        <Parameter Name="validateImageData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">A <see cref="T:System.IO.Stream" /> zawiera dane dla tego <see cref="T:System.Drawing.Image" />.</param>
        <param name="useEmbeddedColorManagement">
          <see langword="true" /> Aby użyć informacji o zarządzaniu kolor osadzone w strumieniu danych; w przeciwnym razie <see langword="false" />.</param>
        <param name="validateImageData">
          <see langword="true" /> Aby sprawdzić poprawność danych obrazu; w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy <see cref="T:System.Drawing.Image" /> ze strumienia określone dane, opcjonalnie używając osadzonych informacji o zarządzaniu kolorów i sprawdzanie poprawności danych obrazu.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `useEmbeddedColorManagement` Parametr określa, czy nowe <xref:System.Drawing.Image> stosuje korekcji kolorów zgodnie z informacji zarządzania kolor osadzonych w strumieniu danych. Osadzone informacje mogą uwzględniać profile konsorcjum kolor międzynarodowych (ICC), wartości gamma i trójchromatyczna informacji.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Klasa nie obsługuje alfa przezroczystości map bitowych. Aby włączyć alfa przezroczystości, za pomocą obrazów PNG 32 bity na piksel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Strumień nie ma prawidłowego formatu obrazu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (ref System.Drawing.GraphicsUnit pageUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(valuetype System.Drawing.GraphicsUnit&amp; pageUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds (ByRef pageUnit As GraphicsUnit) As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::GraphicsUnit % pageUnit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageUnit" Type="System.Drawing.GraphicsUnit&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pageUnit">Jeden z <see cref="T:System.Drawing.GraphicsUnit" /> wskazaniem jednostki miary prostokątem wartości.</param>
        <summary>Pobiera granicami obrazu w określonych jednostkach.</summary>
        <returns>
          <see cref="T:System.Drawing.RectangleF" /> Reprezentujący granicami obrazu, w określonej jednostce.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można załadować mapy bitowej z <xref:System.Drawing.Icon> obsługi, za pomocą <xref:System.Drawing.GraphicsUnit> wyliczenie i sposobu użycia <xref:System.Drawing.Rectangle.Round%2A> metodę, by narysować prostokątne granice mapy bitowej.  
  
 W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Tworzenie formularza, który zawiera przycisk o nazwie `Button2`. Wklej kod do formularza i skojarzyć tę metodę przy użyciu przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń.  
  
 [!code-cpp[System.Drawing.BitmapMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.BitmapMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BitmapMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoderParameterList">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameters GetEncoderParameterList (Guid encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.EncoderParameters GetEncoderParameterList(valuetype System.Guid encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncoderParameterList (encoder As Guid) As EncoderParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::EncoderParameters ^ GetEncoderParameterList(Guid encoder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="encoder">Identyfikator GUID, który określa kodera obrazu.</param>
        <summary>Zwraca informacje na temat parametrów obsługiwanych przez koder określonego obrazu.</summary>
        <returns>
          <see cref="T:System.Drawing.Imaging.EncoderParameters" /> Zawierający tablicę <see cref="T:System.Drawing.Imaging.EncoderParameter" /> obiektów. Każdy <see cref="T:System.Drawing.Imaging.EncoderParameter" /> zawiera informacje o jeden z parametrów obsługiwanych przez koder określonego obrazu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrameCount">
      <MemberSignature Language="C#" Value="public int GetFrameCount (System.Drawing.Imaging.FrameDimension dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFrameCount(class System.Drawing.Imaging.FrameDimension dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFrameCount (dimension As FrameDimension) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFrameCount(System::Drawing::Imaging::FrameDimension ^ dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Drawing.Imaging.FrameDimension" />
      </Parameters>
      <Docs>
        <param name="dimension">A <see cref="T:System.Drawing.Imaging.FrameDimension" /> , który określa tożsamość do typu wymiaru.</param>
        <summary>Zwraca liczbę ramek określonego wymiaru.</summary>
        <returns>Liczba ramek w określonym wymiarze.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca informacje na temat ramki wiele obrazów, które są dostępne w dwóch style: wiele stron i wielu rozdzielczości.  
  
 Obraz strony wielu jest obraz, który zawiera więcej niż jeden obraz. Każdej strony zawiera jeden obraz (lub ramki). Te strony (lub obrazów lub ramki) zazwyczaj są wyświetlane w przedziale czasu, aby utworzyć animację, takich jak animowanych plików GIF.  
  
 Obraz wielu rozpoznawania jest obraz, który zawiera więcej niż jedną kopię obrazu na różne metody rozwiązywania. Jest ona powszechnie stosowana przez mapowanie MCI gdzie rozmiar obrazu wyświetlanego Określa rozdzielczość obrazu używanych na rysunku. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] może obsługiwać dowolnej liczby stron (lub obrazów lub ramki), a także dowolnej liczby rozwiązania. Właściwości są zdefiniowane wymiary <xref:System.Drawing.Imaging.FrameDimension>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelFormatSize">
      <MemberSignature Language="C#" Value="public static int GetPixelFormatSize (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPixelFormatSize(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPixelFormatSize (pixfmt As PixelFormat) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetPixelFormatSize(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> Elementu członkowskiego, który określa format, dla której ma zostać znaleziony rozmiar.</param>
        <summary>Zwraca liczbę bitów na piksel podanym formacie pikseli głębi kolorów.</summary>
        <returns>Głębi kolorów podanym formacie pikseli.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyItem">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.PropertyItem GetPropertyItem (int propid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.PropertyItem GetPropertyItem(int32 propid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetPropertyItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyItem (propid As Integer) As PropertyItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::PropertyItem ^ GetPropertyItem(int propid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.PropertyItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propid">Identyfikator elementu właściwości do pobrania.</param>
        <summary>Pobiera element określonej właściwości z tego <see cref="T:System.Drawing.Image" />.</summary>
        <returns>
          <see cref="T:System.Drawing.Imaging.PropertyItem" /> Pobiera tej metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać listę właściwości elementu identyfikatorów i łącza do dodatkowych informacji, zobacz <xref:System.Drawing.Imaging.PropertyItem.Id%2A>.  
  
 Trudno jest ustawiona właściwość elementów, ponieważ <xref:System.Drawing.Imaging.PropertyItem> klasa nie ma konstruktorów publicznych. Jednym ze sposobów obejść to ograniczenie jest uzyskanie <xref:System.Drawing.Imaging.PropertyItem> pobierając <xref:System.Drawing.Image.PropertyItems%2A> wartość właściwości lub wywołania <xref:System.Drawing.Image.GetPropertyItem%2A> metody <xref:System.Drawing.Image> ma już elementów właściwości. Następnie można ustawić pola <xref:System.Drawing.Imaging.PropertyItem> i przekaż go do <xref:System.Drawing.Image.SetPropertyItem%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Image.GetPropertyItem%2A> i <xref:System.Drawing.Image.SetPropertyItem%2A> metody. W tym przykładzie wywołuje <xref:System.Drawing.Image.GetPropertyItem%2A> przekazywanie wartość Identyfikatora. Dla listy identyfikator wartości, zobacz <xref:System.Drawing.Imaging.PropertyItem.Id%2A>. W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Do uruchomienia tego przykładu, wklej go do formularza i obsługiwać formularza <xref:System.Windows.Forms.Control.Paint> zdarzenia przez wywołanie metody `DemonstratePropertyItem` jest metoda `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Format obrazu tego obrazu nie obsługuje elementów właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetThumbnailImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetThumbnailImage (int thumbWidth, int thumbHeight, System.Drawing.Image.GetThumbnailImageAbort callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetThumbnailImage(int32 thumbWidth, int32 thumbHeight, class System.Drawing.Image/GetThumbnailImageAbort callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetThumbnailImage (thumbWidth As Integer, thumbHeight As Integer, callback As Image.GetThumbnailImageAbort, callbackData As IntPtr) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetThumbnailImage(int thumbWidth, int thumbHeight, System::Drawing::Image::GetThumbnailImageAbort ^ callback, IntPtr callbackData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thumbWidth" Type="System.Int32" />
        <Parameter Name="thumbHeight" Type="System.Int32" />
        <Parameter Name="callback" Type="System.Drawing.Image+GetThumbnailImageAbort" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="thumbWidth">Szerokość w pikselach żądany obraz miniatury.</param>
        <param name="thumbHeight">Wysokość w pikselach żądany obraz miniatury.</param>
        <param name="callback">A <see cref="T:System.Drawing.Image.GetThumbnailImageAbort" /> delegowanie.  
  
 **Uwaga** należy utworzyć delegata i przekazać odwołanie do delegata jako <c>wywołania zwrotnego</c> parametru, ale delegat nie jest używany.</param>
        <param name="callbackData">Musi być <see cref="F:System.IntPtr.Zero" />.</param>
        <summary>Zwraca miniatury dla tej <see cref="T:System.Drawing.Image" />.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> Reprezentujący miniatury.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Drawing.Image> zawiera osadzony obraz miniatury, ta metoda pobiera osadzonych miniatur i może jej obsłużyć żądany rozmiar. Jeśli <xref:System.Drawing.Image> nie zawiera osadzony obraz miniatury, ta metoda tworzy obraz miniatury przez skalowanie głównego obrazu.  
  
 <xref:System.Drawing.Image.GetThumbnailImage%2A> Metoda działa również gdy żądane obraz miniatury ma rozmiar około 120 x 120 pikseli. Jeśli żądanie duży obraz miniatury (na przykład 300 x 300) z <xref:System.Drawing.Image> zawierającego osadzony miniatur, może być utracie jakości obraz miniatury. Może być lepsze skalowanie głównego obrazu (zamiast skalowanie osadzonych miniatur) przez wywołanie metody <xref:System.Drawing.Graphics.DrawImage%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy i wyświetla obraz miniatury. Ten delegat nie jest wywoływana.  
  
 [!code-csharp[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#getthumbnail)]
 [!code-vb[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#getthumbnail)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wysokość w pikselach <see cref="T:System.Drawing.Image" />.</summary>
        <value>Wysokość w pikselach <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia nowej mapy bitowej z pliku, przy użyciu <xref:System.Drawing.Bitmap.GetPixel%2A> i <xref:System.Drawing.Bitmap.SetPixel%2A> metody, aby zmienić kolory obrazu. Ponadto użyto <xref:System.Drawing.Image.PixelFormat%2A> i <xref:System.Drawing.Image.Height%2A> właściwości.  
  
 W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows, który zawiera <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, i <xref:System.Windows.Forms.Button> o nazwie `Label1`, `PictureBox1`, i `Button1`odpowiednio. Wklej kod do formularza i skojarz `Button1_Click` metody za pomocą przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalResolution">
      <MemberSignature Language="C#" Value="public float HorizontalResolution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HorizontalResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.HorizontalResolution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalResolution As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float HorizontalResolution { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozdzielczość pozioma w pikseli na cal to <see cref="T:System.Drawing.Image" />.</summary>
        <value>Rozdzielczość w poziomie w pikseli na cal to <see cref="T:System.Drawing.Image" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAlphaPixelFormat">
      <MemberSignature Language="C#" Value="public static bool IsAlphaPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAlphaPixelFormat(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAlphaPixelFormat (pixfmt As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAlphaPixelFormat(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> Do testowania.</param>
        <summary>Zwraca wartość wskazującą, czy wybrano format to <see cref="T:System.Drawing.Image" /> zawiera informacje alfa.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="pixfmt" /> zawiera informacje alfa; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonicalPixelFormat">
      <MemberSignature Language="C#" Value="public static bool IsCanonicalPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCanonicalPixelFormat(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCanonicalPixelFormat (pixfmt As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCanonicalPixelFormat(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> Do testowania.</param>
        <summary>Zwraca wartość wskazującą, czy 32 bity na piksel w formacie pikseli.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="pixfmt" /> canonical a w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Format pikseli canonical wskazuje formacie pikseli 32 bity na piksel. Ten format Określa głębokość 24-bitowe i kanał alfa 8-bitową.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExtendedPixelFormat">
      <MemberSignature Language="C#" Value="public static bool IsExtendedPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsExtendedPixelFormat(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsExtendedPixelFormat (pixfmt As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsExtendedPixelFormat(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> Wyliczenie do testowania.</param>
        <summary>Zwraca wartość wskazującą, czy 64 bity na piksel w formacie pikseli.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="pixfmt" /> rozszerzonej, a w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.ColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.ColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::ColorPalette ^ Palette { System::Drawing::Imaging::ColorPalette ^ get(); void set(System::Drawing::Imaging::ColorPalette ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.ColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia paletę kolorów używaną dla tego <see cref="T:System.Drawing.Image" />.</summary>
        <value>A <see cref="T:System.Drawing.Imaging.ColorPalette" /> reprezentujący paletę kolorów używaną dla tego <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca kopię <xref:System.Drawing.Imaging.ColorPalette> obiekt używany przez to <xref:System.Drawing.Image>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalDimension">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF PhysicalDimension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.SizeF PhysicalDimension" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PhysicalDimension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalDimension As SizeF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::SizeF PhysicalDimension { System::Drawing::SizeF get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szerokość i wysokość obrazu.</summary>
        <value>A <see cref="T:System.Drawing.SizeF" /> strukturę, która reprezentuje szerokość i wysokość tego <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obraz jest mapą bitową, zwracane są szerokość i wysokość w pikselach. Jeśli obraz jest metaplik, szerokość i wysokość są zwracane w 0,01 milimetra jednostki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelFormat">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.PixelFormat PixelFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.PixelFormat PixelFormat" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PixelFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelFormat As PixelFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::PixelFormat PixelFormat { System::Drawing::Imaging::PixelFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.PixelFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera format piksela dla <see cref="T:System.Drawing.Image" />.</summary>
        <value>A <see cref="T:System.Drawing.Imaging.PixelFormat" /> reprezentujący format piksela dla tego <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia nowej mapy bitowej z pliku, przy użyciu <xref:System.Drawing.Bitmap.GetPixel%2A> i <xref:System.Drawing.Bitmap.SetPixel%2A> metody, aby zmienić kolory obrazu. Ponadto użyto <xref:System.Drawing.Image.PixelFormat%2A> właściwości.  
  
 W tym przykładzie jest przeznaczona do użycia w formularzu systemu Windows, który zawiera <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> i <xref:System.Windows.Forms.Button> o nazwie `Label1`, `PictureBox1`, i `Button1`odpowiednio. Wklej kod do formularza i skojarz `Button1_Click` metody za pomocą przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyIdList">
      <MemberSignature Language="C#" Value="public int[] PropertyIdList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PropertyIdList" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PropertyIdList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyIdList As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PropertyIdList { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikatory elementów właściwości przechowywanych w tym <see cref="T:System.Drawing.Image" />.</summary>
        <value>Tablica właściwości identyfikatory, po jednej dla każdego elementu właściwości przechowywanych w tym obrazie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obraz nie zawiera żadnych elementów właściwości lub format obrazu nie obsługuje elementów właściwości <xref:System.Drawing.Image.PropertyIdList%2A> właściwość zwraca pustą tablicę (to znaczy tablicy o zerowej długości).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyItems">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.PropertyItem[] PropertyItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.PropertyItem[] PropertyItems" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PropertyItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyItems As PropertyItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Imaging::PropertyItem ^&gt; ^ PropertyItems { cli::array &lt;System::Drawing::Imaging::PropertyItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.PropertyItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie właściwości elementów (elementy metadanych) przechowywane w tym <see cref="T:System.Drawing.Image" />.</summary>
        <value>Tablica <see cref="T:System.Drawing.Imaging.PropertyItem" /> obiektów, dla każdej właściwości elementu przechowywane w obrazie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obraz nie zawiera żadnych elementów właściwości lub format obrazu nie obsługuje elementów właściwości <xref:System.Drawing.Image.PropertyItems%2A> zwraca pustą tablicę (to znaczy tablicy o zerowej długości).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób odczytywania i wyświetlić metadane w pliku obrazu przy użyciu <xref:System.Drawing.Imaging.PropertyItem?displayProperty=nameWithType> klasy i <xref:System.Drawing.Image.PropertyItems%2A> właściwości.  
  
 W tym przykładzie ma być używany w formularzu systemu Windows, który importuje <xref:System.Drawing.Imaging?displayProperty=nameWithType> przestrzeni nazw. Wklej kod w formularzu i zmień ścieżkę, aby `fakePhoto.jpg` wskaż plik obrazu, w tym systemie. Wywołanie `ExtractMetaData` metody podczas obsługi formularza <xref:System.Windows.Forms.Control.Paint> przekazywania zdarzeń `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.ImageExample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ImageExample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ImageExample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawFormat">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.ImageFormat RawFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.ImageFormat RawFormat" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.RawFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawFormat As ImageFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::ImageFormat ^ RawFormat { System::Drawing::Imaging::ImageFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.ImageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera format pliku <see cref="T:System.Drawing.Image" />.</summary>
        <value>
          <see cref="T:System.Drawing.Imaging.ImageFormat" /> Reprezentujący format pliku <see cref="T:System.Drawing.Image" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyItem">
      <MemberSignature Language="C#" Value="public void RemovePropertyItem (int propid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyItem(int32 propid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.RemovePropertyItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyItem (propid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyItem(int propid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propid">Identyfikator właściwości elementu do usunięcia.</param>
        <summary>Usuwa element określonej właściwości z tego <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trudno jest ustawiona właściwość elementów, ponieważ <xref:System.Drawing.Imaging.PropertyItem> klasa nie ma konstruktorów publicznych. Jednym ze sposobów obejść to ograniczenie jest uzyskanie <xref:System.Drawing.Imaging.PropertyItem> pobierając <xref:System.Drawing.Image.PropertyItems%2A> wartość właściwości lub wywołania <xref:System.Drawing.Image.GetPropertyItem%2A> metody <xref:System.Drawing.Image> ma już elementów właściwości. Następnie można ustawić pola <xref:System.Drawing.Imaging.PropertyItem> i przekaż go do <xref:System.Drawing.Image.SetPropertyItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Obraz nie zawiera elementu żądanej właściwości.  
  
 —lub—  
  
 Format obrazu dla tego obrazu nie obsługuje elementów właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="RotateFlip">
      <MemberSignature Language="C#" Value="public void RotateFlip (System.Drawing.RotateFlipType rotateFlipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateFlip(valuetype System.Drawing.RotateFlipType rotateFlipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateFlip(System::Drawing::RotateFlipType rotateFlipType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotateFlipType" Type="System.Drawing.RotateFlipType" />
      </Parameters>
      <Docs>
        <param name="rotateFlipType">A <see cref="T:System.Drawing.RotateFlipType" /> elementu członkowskiego, który określa typ obracanie i przerzucanie do zastosowania do obrazu.</param>
        <summary>Obraca, przerzucania, lub obraca i Przerzuca <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Image.RotateFlip%2A> Metody obraca obraz do ruchu wskazówek zegara.  
  
 Jeśli chcesz korzystać po został obrócony obraz, należy zawsze pobierać nowy obiekt grafiki z obrazu, w przeciwnym razie może wystąpić wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Drawing.Image.RotateFlip%2A> metoda <xref:System.Drawing.Image> i <xref:System.Drawing.RotateFlipType> wyliczenia.  
  
 W tym przykładzie jest przeznaczona do użycia w formularzu systemu Windows, który zawiera <xref:System.Windows.Forms.PictureBox> o nazwie `PictureBox1` i przycisk o nazwie `Button1`. Wklej kod w formie wywołania `InitializeBitmap` z konstruktora formularza i skojarz `Button1_Click` przy użyciu przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń. Upewnij się, że podana ścieżka do mapy bitowej jest prawidłowy w tym systemie.  
  
 [!code-cpp[System.Drawing.BitmapMembers#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.BitmapMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#3)]
 [!code-vb[System.Drawing.BitmapMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ten obraz jest zapisywany do określonego strumienia w określonym formacie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Ciąg zawierający nazwę pliku, w którym chcesz zapisać to <see cref="T:System.Drawing.Image" />.</param>
        <summary>Powoduje to zapisanie <see cref="T:System.Drawing.Image" /> do określonego pliku lub strumienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli format pliku obrazu nie kodera, koder Portable Network Graphics (PNG) jest używany. Jeśli używasz <xref:System.Drawing.Image.Save%2A> metodę, aby zapisać obraz w formacie Windows Metafile Format (WMF) lub Format rozszerzony metaplik (EMF), wynikowy plik jest zapisywany w formacie Portable Network Graphics (PNG). Ten problem występuje, ponieważ [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] składnika [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] nie ma koder, który służy do zapisywania plików jako .wmf lub .emf plików.  
  
 Zapisywanie do tego samego pliku, który został skonstruowany z obrazu nie jest dozwolone i zgłasza wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Drawing.Image.Save%2A> metody. W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Tworzenie formularza, który zawiera przycisk o nazwie `Button5`. Wklej kod do formularza i skojarzyć metody przy użyciu przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń.  
  
 [!code-cpp[System.Drawing.ImageExample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ImageExample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ImageExample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> jest <see langword="null." /></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Obraz został zapisany w formacie nieprawidłowy obraz.  
  
 —lub—  
  
 Obraz został zapisany do tego samego pliku, który został utworzony.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> Którym zostanie zapisany obraz.</param>
        <param name="format">
          <see cref="T:System.Drawing.Imaging.ImageFormat" /> , Który określa format obrazu zapisane.</param>
        <summary>Ten obraz jest zapisywany do określonego strumienia w określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy unikać zapisywania obrazu w strumieniu, którego użyto do jego utworzenia. W ten sposób może spowodować uszkodzenie strumienia.  
  
 Obraz należy zapisać w strumieniu przy przesunięciu zero. Jeśli wszelkie dodatkowe dane zostały zapisane w strumieniu przed zapisaniem obrazu, dane obrazu w strumieniu zostanie uszkodzony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> lub <paramref name="format" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Obraz został zapisany w formacie zły obraz</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String, format As ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="filename">Ciąg zawierający nazwę pliku, w którym chcesz zapisać to <see cref="T:System.Drawing.Image" />.</param>
        <param name="format">
          <see cref="T:System.Drawing.Imaging.ImageFormat" /> Dla tego <see cref="T:System.Drawing.Image" />.</param>
        <summary>Powoduje to zapisanie <see cref="T:System.Drawing.Image" /> do określonego pliku w określonym formacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia mapy bitowej z typem i sposobu użycia <xref:System.Drawing.Image.Save%2A> metody. Aby uruchomić ten przykład, Wklej kod w formularzu systemu Windows. Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzeń i wywołanie `ConstructFromResourceSaveAsGif` jest metoda `e` jako <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> lub <paramref name="format" /> jest <see langword="null." /></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Obraz został zapisany w formacie nieprawidłowy obraz.  
  
 —lub—  
  
 Obraz został zapisany do tego samego pliku, który został utworzony.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, class System.Drawing.Imaging.ImageCodecInfo encoder, class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::Drawing::Imaging::ImageCodecInfo ^ encoder, System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoder" Type="System.Drawing.Imaging.ImageCodecInfo" />
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> Którym zostanie zapisany obraz.</param>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> Dla tego <see cref="T:System.Drawing.Image" />.</param>
        <param name="encoderParams">
          <see cref="T:System.Drawing.Imaging.EncoderParameters" /> , Który określa parametry używane przez koder obrazu.</param>
        <summary>Ten obraz jest zapisywany do określonego strumienia z kodera określony i parametry kodera obrazu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie zapisuj obrazu na strumieniu, który został użyty do utworzenia obrazu. W ten sposób może spowodować uszkodzenie strumienia.  
  
 Obraz należy zapisać w strumieniu przy przesunięciu zero. Jeśli wszelkie dodatkowe dane zostały zapisane w strumieniu przed zapisaniem obrazu, dane obrazu w strumieniu zostanie uszkodzony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Obraz został zapisany w formacie nieprawidłowy obraz.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename, class System.Drawing.Imaging.ImageCodecInfo encoder, class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String, encoder As ImageCodecInfo, encoderParams As EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename, System::Drawing::Imaging::ImageCodecInfo ^ encoder, System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoder" Type="System.Drawing.Imaging.ImageCodecInfo" />
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="filename">Ciąg zawierający nazwę pliku, w którym chcesz zapisać to <see cref="T:System.Drawing.Image" />.</param>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> Dla tego <see cref="T:System.Drawing.Image" />.</param>
        <param name="encoderParams">
          <see cref="T:System.Drawing.Imaging.EncoderParameters" /> Do użycia dla tego <see cref="T:System.Drawing.Image" />.</param>
        <summary>Powoduje to zapisanie <see cref="T:System.Drawing.Image" /> do określonego pliku, z określonymi parametrami koder i koder obrazu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zapisywanie do tego samego pliku, który został skonstruowany z obrazu nie jest dozwolone i zgłasza wyjątek.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Drawing.Bitmap> obiekt z pliku BMP. Kod zapisuje mapy bitowej trzy pliki JPEG, każda z poziomu różnych jakości.  
  
 [!code-cpp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> lub <paramref name="encoder" /> jest <see langword="null." /></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Obraz został zapisany w formacie nieprawidłowy obraz.  
  
 —lub—  
  
 Obraz został zapisany do tego samego pliku, który został utworzony.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveAdd">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje informacje w określonym <see cref="T:System.Drawing.Image" /> tej <see cref="T:System.Drawing.Image" />. Określony <see cref="T:System.Drawing.Imaging.EncoderParameters" /> określić, jak nowe informacje jest włączona do istniejącego obrazu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveAdd">
      <MemberSignature Language="C#" Value="public void SaveAdd (System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAdd(class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAdd (encoderParams As EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAdd(System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="encoderParams">
          <see cref="T:System.Drawing.Imaging.EncoderParameters" /> Przechowuje parametrów wymaganych przez koder obrazu, który jest używany przez operacji dodawania Zapisz.</param>
        <summary>Dodaje do pliku lub strumienia określone w wywołaniu poprzedniej ramki <see cref="Overload:System.Drawing.Image.Save" /> metody. Użyj tej metody, aby zapisać wybrane ramki za pomocą obrazu ramki wielu do innego obrazu ramki wielu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAdd">
      <MemberSignature Language="C#" Value="public void SaveAdd (System.Drawing.Image image, System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAdd(class System.Drawing.Image image, class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAdd(System::Drawing::Image ^ image, System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> Zawiera ramki do dodania.</param>
        <param name="encoderParams">
          <see cref="T:System.Drawing.Imaging.EncoderParameters" /> Przechowuje parametrów wymaganych przez koder obrazu, który jest używany przez operacji dodawania Zapisz.</param>
        <summary>Dodaje do pliku lub strumienia określone w wywołaniu poprzedniej ramki <see cref="Overload:System.Drawing.Image.Save" /> metody.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectActiveFrame">
      <MemberSignature Language="C#" Value="public int SelectActiveFrame (System.Drawing.Imaging.FrameDimension dimension, int frameIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SelectActiveFrame(class System.Drawing.Imaging.FrameDimension dimension, int32 frameIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectActiveFrame (dimension As FrameDimension, frameIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SelectActiveFrame(System::Drawing::Imaging::FrameDimension ^ dimension, int frameIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Drawing.Imaging.FrameDimension" />
        <Parameter Name="frameIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">A <see cref="T:System.Drawing.Imaging.FrameDimension" /> , który określa tożsamość do typu wymiaru.</param>
        <param name="frameIndex">Indeks aktywną ramkę.</param>
        <summary>Wybiera określony przez wymiarów i indeksu ramki.</summary>
        <returns>Zawsze zwraca wartość 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możliwe wartości `dimensionID` parametr to właściwości <xref:System.Drawing.Imaging.FrameDimension>. Mogą one używane do identyfikowania obrazu na podstawie czasu, rozwiązania lub numer strony.  
  
 Wywołanie tej metody powoduje, że wszystkie zmiany wprowadzone do poprzedniej ramki do usunięcia. Przed wybraniem innej ramki, należy zapisać wszystkie zmiany wprowadzone do bieżącej ramki, łącznie ze zmianą właściwości i wartości pikseli. Jeśli wywołanie <xref:System.Drawing.Image.SelectActiveFrame%2A> metody zakończy się pomyślnie (wyjątek występuje), metoda zwraca wartość 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyItem">
      <MemberSignature Language="C#" Value="public void SetPropertyItem (System.Drawing.Imaging.PropertyItem propitem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyItem(class System.Drawing.Imaging.PropertyItem propitem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyItem (propitem As PropertyItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyItem(System::Drawing::Imaging::PropertyItem ^ propitem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propitem" Type="System.Drawing.Imaging.PropertyItem" />
      </Parameters>
      <Docs>
        <param name="propitem">
          <see cref="T:System.Drawing.Imaging.PropertyItem" /> Mają być przechowywane.</param>
        <summary>Zapisuje element właściwości (element metadanych) w tym <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli format obrazu nie obsługuje właściwości elementów, ta metoda zgłasza <xref:System.ArgumentException> z komunikatem "Właściwość nie jest obsługiwana." Jeśli format obrazu obsługuje właściwości elementów, ale nie obsługuje określonej właściwości, którą próbujesz ustawić, ta metoda ignoruje próby, ale nie zgłasza wyjątek.  
  
 Trudno jest ustawiona właściwość elementów, ponieważ <xref:System.Drawing.Imaging.PropertyItem> klasa nie ma konstruktorów publicznych. Jednym ze sposobów obejść to ograniczenie jest uzyskanie <xref:System.Drawing.Imaging.PropertyItem> pobierając <xref:System.Drawing.Image.PropertyItems%2A> wartość właściwości lub wywołania <xref:System.Drawing.Image.GetPropertyItem%2A> metody <xref:System.Drawing.Image> ma już elementów właściwości. Następnie można ustawić pola <xref:System.Drawing.Imaging.PropertyItem> i przekaż go do <xref:System.Drawing.Image.SetPropertyItem%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Image.GetPropertyItem%2A> i <xref:System.Drawing.Image.SetPropertyItem%2A> metody. W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Do uruchomienia tego przykładu, wklej go do formularza i obsługiwać formularza <xref:System.Windows.Forms.Control.Paint> zdarzenia przez wywołanie metody `DemonstratePropertyItem` jest metoda `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Format obrazu tego obrazu nie obsługuje elementów właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szerokość i wysokość w pikselach, ten obraz.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> strukturę, która reprezentuje szerokość i wysokość w pikselach tego obrazu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełniania danych.</param>
        <param name="context">Miejsce docelowe (zobacz <see cref="T:System.Runtime.Serialization.StreamingContext" />) tej serializacji.</param>
        <summary>Wypełnia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> z dane potrzebne do zserializowania obiektu docelowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który udostępnia dodatkowe dane dotyczące obrazu.</summary>
        <value>
          <see cref="T:System.Object" /> Zapewniający dodatkowe dane dotyczące obrazu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalResolution">
      <MemberSignature Language="C#" Value="public float VerticalResolution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 VerticalResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.VerticalResolution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalResolution As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float VerticalResolution { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozdzielczość w pionie w pikseli na cal to <see cref="T:System.Drawing.Image" />.</summary>
        <value>Rozdzielczość w pionie w pikseli na cal to <see cref="T:System.Drawing.Image" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szerokość w pikselach <see cref="T:System.Drawing.Image" />.</summary>
        <value>Szerokość w pikselach <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia nowego <xref:System.Drawing.Bitmap> z pliku, przy użyciu <xref:System.Drawing.Bitmap.GetPixel%2A> i <xref:System.Drawing.Bitmap.SetPixel%2A> metody, aby zmienić kolory obrazu. Ponadto użyto <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, i <xref:System.Drawing.Image.Height%2A> właściwości.  
  
 W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows, który zawiera <xref:System.Windows.Forms.Label> ,<xref:System.Windows.Forms.PictureBox> i <xref:System.Windows.Forms.Button> o nazwie `Label1`, `PictureBox1` i `Button1`odpowiednio. Wklej kod do formularza i skojarz `Button1_Click` metody za pomocą przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>