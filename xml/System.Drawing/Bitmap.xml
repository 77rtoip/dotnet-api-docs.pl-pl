<Type Name="Bitmap" FullName="System.Drawing.Bitmap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="685d90b2ad238b5334b23baaeef346fafcc9f17f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36340722" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Bitmap : System.Drawing.Image" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Bitmap extends System.Drawing.Image" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Bitmap" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Bitmap&#xA;Inherits Image" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bitmap sealed : System::Drawing::Image" />
  <TypeSignature Language="F#" Value="type Bitmap = class&#xA;    inherit Image" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Image</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Hermetyzuje GDI + bitmapy, który składa się z danych pikseli grafiki obrazu i jego atrybuty. A <see cref="T:System.Drawing.Bitmap" /> jest obiekt służący do pracy z obrazami zdefiniowane przez danych pikseli.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mapy bitowej składa się z danych pikseli grafiki obrazu i jego atrybuty. Istnieje wiele standardowych formatów zapisywania do pliku mapy bitowej. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] obsługuje następujące formaty plików: BMP, GIF, EXIF, JPG, PNG i TIFF. Aby uzyskać więcej informacji na temat obsługiwanych formatów, zobacz [typy map bitowych](~/docs/framework/winforms/advanced/types-of-bitmaps.md).  
  
 Można utworzyć obrazy z strumieni, plików i innych źródeł przy użyciu jednej z <xref:System.Drawing.Bitmap.%23ctor%2A> konstruktorów i je zapisać do strumienia lub usługi w systemie plików z <xref:System.Drawing.Image.Save%2A> metody. Obrazy są rysowane na ekranie lub pamięci za pomocą <xref:System.Drawing.Graphics.DrawImage%2A> metody <xref:System.Drawing.Graphics> obiektu. Aby uzyskać listę tematów dotyczących pracy z plikami obrazów, zobacz [Praca z obrazami, mapami bitowymi, ikony i metapliki](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md).  
  
> [!NOTE]
>  <xref:System.Drawing.Bitmap> Klasa nie jest dostępny w domenach aplikacji. Na przykład w przypadku utworzenia dynamicznym <xref:System.AppDomain> i utworzyć kilka pędzle, pióra i map bitowych w tej domenie, a następnie przekaż te obiekty z powrotem do domeny głównej aplikacji, można pomyślnie użyć pióra i pędzle. Jednak jeśli wywołujesz <xref:System.Drawing.Graphics.DrawImage%2A> metodę, by narysować organizowane <xref:System.Drawing.Bitmap>, pojawi się następujący wyjątek.  
>   
>  Usługi zdalne nie można odnaleźć pola "obrazu macierzystego" w typie "System.Drawing.Image".  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia nowego <xref:System.Drawing.Bitmap> z pliku, przy użyciu <xref:System.Drawing.Bitmap.GetPixel%2A> i <xref:System.Drawing.Bitmap.SetPixel%2A> metody, aby zmienić kolory obrazu. Ponadto użyto <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, i <xref:System.Drawing.Image.Height%2A> właściwości.  
  
 W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows, który zawiera <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, i <xref:System.Windows.Forms.Button> o nazwie `Label1`, `PictureBox1`, i `Button1`odpowiednio. Wklej kod do formularza i skojarz `Button1_Click` metody za pomocą przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.PictureBox" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Image" /> z którym ma zostać utworzony nowy <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy z określonego istniejącego obrazu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień danych używana do załadowania obrazu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy ze strumienia określone dane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy pozostawić strumienia otwarte przez czas ich istnienia <xref:System.Drawing.Bitmap>.  
  
 Ze względu na ograniczenia [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] dekoder, <xref:System.ArgumentException?displayProperty=nameWithType> jest generowany, jeśli utworzenia mapy bitowej z obrazu PNG zawierających tylko jeden wymiar większy niż 65 535 pikseli.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można załadować mapy bitowej ze strumienia.  
  
 W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Tworzenie formularza, który zawiera <xref:System.Windows.Forms.PictureBox> o nazwie `PictureBox1`. Wklej kod do formularza i wywołanie `InitializeStreamBitmap` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-cpp[System.Drawing.BitmapMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.BitmapMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#2)]
 [!code-vb[System.Drawing.BitmapMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> nie zawiera danych obrazu lub jest <see langword="null" />.  - lub - <paramref name="stream" /> zawiera plik obrazu PNG o jednowymiarowej jest większy niż 65 535 pikseli.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nazwa pliku mapy bitowej i ścieżka.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy z określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa pliku i ścieżka może być względną ścieżką bezwzględną lub aplikacji. Użyj tego konstruktora, aby otworzyć obrazy z następujące formaty plików: BMP, GIF, EXIF, JPG, PNG i TIFF. Aby uzyskać więcej informacji na temat obsługiwanych formatów, zobacz [typy map bitowych](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Plik jest zablokowany do momentu <xref:System.Drawing.Bitmap> został usunięty.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Nie znaleziono określonego pliku.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, valuetype System.Drawing.Size newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, newSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, System::Drawing::Size newSize);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * System.Drawing.Size -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, newSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="newSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Image" /> z którym ma zostać utworzony nowy <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="newSize">
          <see cref="T:System.Drawing.Size" /> Strukturę, która reprezentuje rozmiar nowego <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy z określonego istniejącego obrazu przeskalować do określonego rozmiaru.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Wysokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy z określonym rozmiarem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Drawing.Bitmap> z <xref:System.Drawing.Imaging.PixelFormat> wartości wyliczenia <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (stream, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień danych używana do załadowania obrazu.</param>
        <param name="useIcm">
          <see langword="true" /> Aby użyć korekcji kolorów dla tego <see cref="T:System.Drawing.Bitmap" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy ze strumienia określone dane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy pozostawić strumienia otwarte przez czas ich istnienia <xref:System.Drawing.Bitmap>.  
  
 Ze względu na ograniczenia [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] dekoder, <xref:System.ArgumentException?displayProperty=nameWithType> jest generowany, jeśli utworzenia mapy bitowej z obrazu PNG zawierających tylko jeden wymiar większy niż 65 535 pikseli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> nie zawiera danych obrazu lub jest <see langword="null" />.  - lub - <paramref name="stream" /> zawiera plik obrazu PNG o jednowymiarowej jest większy niż 65 535 pikseli.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, useIcm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (filename, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Nazwa pliku mapy bitowej.</param>
        <param name="useIcm">
          <see langword="true" /> Aby użyć korekcji kolorów dla tego <see cref="T:System.Drawing.Bitmap" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy z określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby otworzyć obrazy z następujące formaty plików: BMP, GIF, EXIF, JPG, PNG i TIFF. Aby uzyskać więcej informacji na temat obsługiwanych formatów, zobacz [typy map bitowych](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Plik jest zablokowany do momentu <xref:System.Drawing.Bitmap> został usunięty.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia nowej mapy bitowej z pliku. W przykładzie użyto <xref:System.Drawing.Bitmap.GetPixel%2A> i <xref:System.Drawing.Bitmap.SetPixel%2A> metody, aby zmienić kolory obrazu. Ponadto użyto <xref:System.Drawing.Image.PixelFormat%2A> właściwości.  
  
 W tym przykładzie jest przeznaczona do użycia w formularzu systemu Windows, który zawiera <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> i <xref:System.Windows.Forms.Button> o nazwie `Label1`, `PictureBox1` i `Button1`odpowiednio. Wklej kod do formularza i skojarz `Button1_Click` metody za pomocą przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla wywołania do kodu niezarządzanego. Wyliczenie pokrewne: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(Type ^ type, System::String ^ resource);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : Type * string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (type, resource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Klasa służy do wyodrębniania zasobu.</param>
        <param name="resource">Nazwa zasobu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy z określonego zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor łączy podanego typu przestrzeni nazw i nazwę ciągu zasobu i wyszukuje dopasowania w manifeście zestawu. Na przykład można przekazać <xref:System.Windows.Forms.Button> typu i `Button.bmp` do tego konstruktora i wyszukuje zasób o nazwie `System.Windows.Forms.Button.bmp`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia mapy bitowej z typem i sposobu użycia <xref:System.Drawing.Image.Save%2A> metody. Aby uruchomić ten przykład, Wklej kod w formularzu systemu Windows. Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzeń i wywołanie `ConstructFromResourceSaveAsGif` jest metoda `e` jako <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Image" /> z którym ma zostać utworzony nowy <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="width">Szerokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Wysokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy z określonego istniejącego obrazu przeskalować do określonego rozmiaru.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Graphics -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, g)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Wysokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> Obiekt, który określa rozdzielczość nowego <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy z określonego rozmiaru i rozpoznawania określonego <see cref="T:System.Drawing.Graphics" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowy <xref:System.Drawing.Bitmap> ta metoda tworzy trwa jego rozdzielczość w poziomie i w pionie z <xref:System.Drawing.Graphics.DpiX%2A> i <xref:System.Drawing.Graphics.DpiY%2A> właściwości `g`odpowiednio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, format As PixelFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, format)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Wysokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Nowy format piksela <see cref="T:System.Drawing.Bitmap" />. To należy określić wartość, która rozpoczyna się od <c>Format</c>.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> z określonego rozmiaru i formatu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">A <see cref="T:System.Drawing.Imaging.PixelFormat" /> określona jest wartość, której nazwa nie rozpoczyna się * Format *. Na przykład określenie <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> spowoduje, że <see cref="T:System.ArgumentException" />, ale <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> nie.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, int32 stride, valuetype System.Drawing.Imaging.PixelFormat format, native int scan0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, stride As Integer, format As PixelFormat, scan0 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, int stride, System::Drawing::Imaging::PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * int * System.Drawing.Imaging.PixelFormat * nativeint -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, stride, format, scan0)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="scan0" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Wysokość w pikselach nowej <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="stride">Liczba całkowita, która określa przesunięcie bajtów od początku wiersza jedno skanowanie do następnej. Jest to zazwyczaj (lecz niekoniecznie) liczbę bajtów w formacie pikseli (na przykład 2 do 16 bitów na piksel) pomnożona przez szerokość mapy bitowej. Wartość przekazana do tego parametru musi być wielokrotnością liczby 4...</param>
        <param name="format">Nowy format piksela <see cref="T:System.Drawing.Bitmap" />. To należy określić wartość, która rozpoczyna się od <c>Format</c>.</param>
        <param name="scan0">Wskaźnik do tablicy bajtów z danymi pikseli.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy określony rozmiar, format pikseli i danych pikseli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element wywołujący jest odpowiedzialny za przydzielanie i zwalnianie blok pamięci określony przez `scan0` parametru. Jednak pamięć nie powinny zostać zwolnione do pokrewny <xref:System.Drawing.Bitmap> zostanie zwolniony.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Drawing.Bitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Drawing.Imaging.PixelFormat%2CSystem.IntPtr%29> konstruktora. W tym przykładzie jest przeznaczona do użycia z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> parametr, który jest parametrem elementu <xref:System.Windows.Forms.Control.Paint> zdarzeń.  
  
 [!code-csharp[System.Drawing.MiscExamples#Constructor](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#constructor)]
 [!code-vb[System.Drawing.MiscExamples#Constructor](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#constructor)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A <see cref="T:System.Drawing.Imaging.PixelFormat" /> określona jest wartość, której nazwa nie rozpoczyna się * Format *. Na przykład określenie <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> spowoduje, że <see cref="T:System.ArgumentException" />, ale <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> nie.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla wywołania do kodu niezarządzanego. Wyliczenie pokrewne: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clone">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy kopię sekcji tego <see cref="T:System.Drawing.Bitmap" /> zdefiniowane z określonym <see cref="T:System.Drawing.Imaging.PixelFormat" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As Rectangle, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::Rectangle rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.Rectangle * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Określa część <see cref="T:System.Drawing.Bitmap" /> do skopiowania. Współrzędne są podawane względem to <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Nowy format piksela <see cref="T:System.Drawing.Bitmap" />. To należy określić wartość, która rozpoczyna się od <c>Format</c>.</param>
        <summary>Tworzy kopię sekcji tego <see cref="T:System.Drawing.Bitmap" /> zdefiniowane przez <see cref="T:System.Drawing.Rectangle" /> struktury i z określonym <see cref="T:System.Drawing.Imaging.PixelFormat" /> wyliczenia.</summary>
        <returns>Nowe <see cref="T:System.Drawing.Bitmap" /> tworzącą tę metodę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Bitmap> z pliku.  
  
-   Klonów część który <xref:System.Drawing.Bitmap>.  
  
-   Rysuje sklonowany części ekranu.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> znajduje się poza granicami źródła mapy bitowej.</exception>
        <exception cref="T:System.ArgumentException">Wysokość lub szerokość <paramref name="rect" /> ma wartość 0.  - lub - <see cref="T:System.Drawing.Imaging.PixelFormat" /> określona jest wartość, której nazwa nie rozpoczyna się * Format *. Na przykład określenie <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> spowoduje, że <see cref="T:System.ArgumentException" />, ale <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> nie.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As RectangleF, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::RectangleF rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.RectangleF * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Określa część <see cref="T:System.Drawing.Bitmap" /> do skopiowania.</param>
        <param name="format">Określa <see cref="T:System.Drawing.Imaging.PixelFormat" /> wyliczenie dla docelowego <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Tworzy kopię sekcji tego <see cref="T:System.Drawing.Bitmap" /> zdefiniowane z określonym <see cref="T:System.Drawing.Imaging.PixelFormat" /> wyliczenia.</summary>
        <returns>
          <see cref="T:System.Drawing.Bitmap" /> Tworzącą tę metodę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Bitmap> z pliku.  
  
-   Klonów część który <xref:System.Drawing.Bitmap>.  
  
-   Rysuje sklonowany części ekranu.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> znajduje się poza granicami źródła mapy bitowej.</exception>
        <exception cref="T:System.ArgumentException">Wysokość lub szerokość <paramref name="rect" /> ma wartość 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromHicon">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHicon (IntPtr hicon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHicon(native int hicon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHicon (hicon As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHicon(IntPtr hicon);" />
      <MemberSignature Language="F#" Value="static member FromHicon : nativeint -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromHicon hicon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hicon" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hicon">Dojście do ikony.</param>
        <summary>Tworzy <see cref="T:System.Drawing.Bitmap" /> z dojścia systemu Windows do ikony.</summary>
        <returns>
          <see cref="T:System.Drawing.Bitmap" /> Tworzącą tę metodę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Pobiera dojścia do istniejącego obrazu ikony.  
  
-   Tworzy <xref:System.Drawing.Bitmap> z dojścia.  
  
-   Rysuje <xref:System.Drawing.Bitmap> do ekranu.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla wywołania do kodu niezarządzanego. Wyliczenie pokrewne: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromResource(native int hinstance, string bitmapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromResource (hinstance As IntPtr, bitmapName As String) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromResource(IntPtr hinstance, System::String ^ bitmapName);" />
      <MemberSignature Language="F#" Value="static member FromResource : nativeint * string -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromResource (hinstance, bitmapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hinstance" Type="System.IntPtr" />
        <Parameter Name="bitmapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hinstance">Dojście do pliku wykonywalnego, który zawiera zasób wystąpienia.</param>
        <param name="bitmapName">Ciąg zawierający nazwę zasobu mapy bitowej.</param>
        <summary>Tworzy <see cref="T:System.Drawing.Bitmap" /> z określonego zasobu systemu Windows.</summary>
        <returns>
          <see cref="T:System.Drawing.Bitmap" /> Tworzącą tę metodę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.FromResource%2A> wymaga uprawnień do wywoływanie kodu niezarządzanego. Dla zarządzanych zamiast tworzenia mapy bitowej z zasobu osadzonego, zobacz <xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>. <xref:System.Drawing.Bitmap.FromResource%2A> działa tylko z mapy bitowe, które są nazywane zasobów w bibliotece DLL.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla wywołania do kodu niezarządzanego. Wyliczenie pokrewne: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy obiekt mapy bitowej GDI z GDI + <see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap();" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : unit -&gt; nativeint" Usage="bitmap.GetHbitmap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy [! Obiekt mapy bitowej include[ndptecgdi](~/includes/ndptecgdi-MD.MD)] tego <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Dojście do [! Obiekt mapy bitowej include[ndptecgdi](~/includes/ndptecgdi-MD.MD)], który tworzy tę metodę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest odpowiedzialny za wywoływanie [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` metodę, aby zwolnić pamięć, używany przez [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] obiekt mapy bitowej. Aby uzyskać więcej informacji na temat map bitowych GDI zobacz [mapy bitowe](http://go.microsoft.com/fwlink/?LinkId=205685) w dokumentacji systemu Windows GDI.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Bitmap.GetHbitmap%2A> metody.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wysokość lub szerokość mapy bitowej jest większa niż <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla wywołania do kodu niezarządzanego. Wyliczenie pokrewne: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap (System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap(valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap (background As Color) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap(System::Drawing::Color background);" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : System.Drawing.Color -&gt; nativeint" Usage="bitmap.GetHbitmap background" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="background">A <see cref="T:System.Drawing.Color" /> struktury, która określa kolor tła. Ten parametr jest ignorowana, jeśli jest całkowicie nieprzezroczyste mapy bitowej.</param>
        <summary>Tworzy [! Obiekt mapy bitowej include[ndptecgdi](~/includes/ndptecgdi-MD.MD)] tego <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Dojście do [! Obiekt mapy bitowej include[ndptecgdi](~/includes/ndptecgdi-MD.MD)], który tworzy tę metodę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest odpowiedzialny za wywoływanie [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` metodę, aby zwolnić pamięć, używany przez [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] obiekt mapy bitowej. Aby uzyskać więcej informacji na temat map bitowych GDI zobacz [mapy bitowe](http://go.microsoft.com/fwlink/?LinkId=205685) w dokumentacji systemu Windows GDI.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Bitmap.GetHbitmap%2A>.method.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wysokość lub szerokość mapy bitowej jest większa niż <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla wywołania do kodu niezarządzanego. Wyliczenie pokrewne: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHicon">
      <MemberSignature Language="C#" Value="public IntPtr GetHicon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHicon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHicon" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHicon () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHicon();" />
      <MemberSignature Language="F#" Value="member this.GetHicon : unit -&gt; nativeint" Usage="bitmap.GetHicon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca dojście do ikony.</summary>
        <returns>Dojście systemu Windows do ikony z tego samego obrazu jak <see cref="T:System.Drawing.Bitmap" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowo ikony tworzone z dojścia będą mieć taki sam rozmiar jak oryginalny mapy bitowej.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Bitmap>.  
  
-   Rysuje tego obiektu na ekranie.  
  
-   Pobiera ikonę obsługę <xref:System.Drawing.Bitmap>.  
  
-   Ustawia <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=nameWithType> atrybutu formularza do ikony tworzone z dojścia.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla wywołania do kodu niezarządzanego. Wyliczenie pokrewne: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPixel (x As Integer, y As Integer) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetPixel(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetPixel : int * int -&gt; System.Drawing.Color" Usage="bitmap.GetPixel (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna x pikseli do pobrania.</param>
        <param name="y">Współrzędna y pikseli do pobrania.</param>
        <summary>Pobiera kolor piksela określony w tym <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>A <see cref="T:System.Drawing.Color" /> strukturę, która reprezentuje kolor piksela określony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod pobiera kolor piksel mapy bitowej, a następnie umieszcza prostokąt koloru.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="x" /> jest mniejsza niż 0, lub większa niż lub równa <see cref="P:System.Drawing.Image.Width" />.  - lub - <paramref name="y" /> jest mniejsza niż 0, lub większa niż lub równa <see cref="P:System.Drawing.Image.Height" />.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LockBits">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Blokuje <see cref="T:System.Drawing.Bitmap" /> do pamięci systemowej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function LockBits (rect As Rectangle, flags As ImageLockMode, format As PixelFormat) As BitmapData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> struktury, który określa część <see cref="T:System.Drawing.Bitmap" /> do blokady.</param>
        <param name="flags">
          <see cref="T:System.Drawing.Imaging.ImageLockMode" /> Wyliczenia, która określa poziom dostępu (odczyt/zapis) dla <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">A <see cref="T:System.Drawing.Imaging.PixelFormat" /> wyliczenia, która określa format danych <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Blokuje <see cref="T:System.Drawing.Bitmap" /> do pamięci systemowej.</summary>
        <returns>A <see cref="T:System.Drawing.Imaging.BitmapData" /> zawierający informacje dotyczące tej operacji blokowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Drawing.Bitmap.LockBits%2A> metody do blokowania istniejącej mapy bitowej w pamięci systemowej, tak aby można ją zmienić programowo. Można zmienić kolor obrazu <xref:System.Drawing.Bitmap.SetPixel%2A> metody, mimo że <xref:System.Drawing.Bitmap.LockBits%2A> metoda oferuje lepszą wydajność w przypadku zmiany na dużą skalę.  
  
 <xref:System.Drawing.Imaging.BitmapData> Określa atrybuty <xref:System.Drawing.Bitmap>, takich jak rozmiar, format pikseli, początkowy adres danych pikseli w pamięci, a długość każdej linii skanowania (krok).  
  
 Podczas wywoływania tej metody, należy użyć członka <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> wyliczenie zawierający wartość określonej usługi bits na piksel (BPP). Przy użyciu <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> wartości, takich jak <xref:System.Drawing.Imaging.PixelFormat.Indexed> i <xref:System.Drawing.Imaging.PixelFormat.Gdi> zgłosi <xref:System.ArgumentException?displayProperty=nameWithType>. Ponadto zgłosi przekazywanie pikseli niepoprawny format mapy bitowej <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, i <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> właściwości; <xref:System.Drawing.Bitmap.LockBits%2A> i <xref:System.Drawing.Bitmap.UnlockBits%2A> metod; i <xref:System.Drawing.Imaging.ImageLockMode> wyliczenia. W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. W tym przykładzie zaprojektowano nie działać poprawnie przy wszystkich formatów pikseli, ale aby podać przykład sposobu użycia <xref:System.Drawing.Bitmap.LockBits%2A> metody. Aby uruchomić ten przykład, wklej go do formularza i obsługiwać formularza <xref:System.Windows.Forms.Control.Paint> zdarzenia przez wywołanie metody `LockUnlockBitsExample` jest metoda `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> Nie jest określona wartość bitów na piksel.  - lub - nieprawidłowym <see cref="T:System.Drawing.Imaging.PixelFormat" /> jest przekazywana do mapy bitowej.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format, class System.Drawing.Imaging.BitmapData bitmapData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format, System::Drawing::Imaging::BitmapData ^ bitmapData);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat * System.Drawing.Imaging.BitmapData -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format, bitmapData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="bitmapData" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="rect">Struktura prostokąt, który określa część <see cref="T:System.Drawing.Bitmap" /> do blokady.</param>
        <param name="flags">Jeden z <see cref="T:System.Drawing.Imaging.ImageLockMode" /> wartości, które określają poziom dostępu (odczyt/zapis) dla <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Jeden z <see cref="T:System.Drawing.Imaging.PixelFormat" /> wartości, które określa format danych <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="bitmapData">A <see cref="T:System.Drawing.Imaging.BitmapData" /> zawierający informacje dotyczące operacji blokowania.</param>
        <summary>Blokuje <see cref="T:System.Drawing.Bitmap" /> do pamięci systemu</summary>
        <returns>A <see cref="T:System.Drawing.Imaging.BitmapData" /> zawierający informacje dotyczące operacji blokowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Drawing.Bitmap.LockBits%2A> metody do blokowania istniejącej mapy bitowej w pamięci systemowej, tak aby można ją zmienić programowo. Można zmienić kolor obrazu <xref:System.Drawing.Bitmap.SetPixel%2A> metody, mimo że <xref:System.Drawing.Bitmap.LockBits%2A> metoda oferuje lepszą wydajność w przypadku zmiany na dużą skalę.  
  
 Podczas wywoływania tej metody, należy użyć członka <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> wyliczenie zawierający wartość określonej usługi bits na piksel (BPP). Przy użyciu <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> wartości, takich jak <xref:System.Drawing.Imaging.PixelFormat.Indexed> i <xref:System.Drawing.Imaging.PixelFormat.Gdi>, zgłosi <xref:System.ArgumentException?displayProperty=nameWithType>. Ponadto zgłosi przekazywanie pikseli niepoprawny format mapy bitowej <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
 Ta wersja <xref:System.Drawing.Bitmap.LockBits%2A> metoda jest przeznaczona do użycia z `flags` wartość <xref:System.Drawing.Imaging.ImageLockMode.UserInputBuffer?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> wartość nie jest określona wartość bitów na piksel.  - lub - nieprawidłowym <see cref="T:System.Drawing.Imaging.PixelFormat" /> jest przekazywana do mapy bitowej.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeTransparent">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Powoduje, że domyślna przezroczysty kolor przezroczysty dla tego <see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent();" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : unit -&gt; unit" Usage="bitmap.MakeTransparent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że domyślna przezroczysty kolor przezroczysty dla tego <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paleta systemu definiuje kolor jako kolor przezroczysty lub alfa, domyślny. Ta metoda sprawia, że domyślna przezroczysty kolor przezroczysty dla tego <xref:System.Drawing.Bitmap>. Jeśli nie przezroczysty kolor jest określany przez system, <xref:System.Drawing.Color.LightGray%2A> jest kolor przezroczysty.  
  
 Podczas wywoływania <xref:System.Drawing.Bitmap.MakeTransparent%2A>, mapy bitowej zostaną przekonwertowane na <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> formatu, ponieważ ten format obsługuje kanał alfa.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod sprawia, że domyślny kolor przezroczysty jest niewidoczny dla `myBitmap`, a następnie rysuje <xref:System.Drawing.Bitmap> do ekranu.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Format obrazu <see cref="T:System.Drawing.Bitmap" /> to format ikony.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent (System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent(valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent (transparentColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent(System::Drawing::Color transparentColor);" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : System.Drawing.Color -&gt; unit" Usage="bitmap.MakeTransparent transparentColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="transparentColor">
          <see cref="T:System.Drawing.Color" /> Strukturę, która reprezentuje kolor przezroczysty.</param>
        <summary>Sprawia, że określony kolor przezroczysty dla tego <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania <xref:System.Drawing.Bitmap.MakeTransparent%2A>, mapy bitowej zostaną przekonwertowane na <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> formatu, ponieważ ten format obsługuje kanał alfa.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Pobiera kolor piksel w <xref:System.Drawing.Bitmap>.  
  
-   Powoduje, że ten kolor przezroczysty mapy bitowej.  
  
-   Rysuje <xref:System.Drawing.Bitmap> do ekranu.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Format obrazu <see cref="T:System.Drawing.Bitmap" /> to format ikony.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPixel(int x, int y, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetPixel : int * int * System.Drawing.Color -&gt; unit" Usage="bitmap.SetPixel (x, y, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna x pikseli, aby ustawić.</param>
        <param name="y">Współrzędna y pikseli, aby ustawić.</param>
        <param name="color">A <see cref="T:System.Drawing.Color" /> strukturę, która reprezentuje kolor do przypisania do określonej pikseli.</param>
        <summary>Ustawia kolor piksela określony w tym <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Drawing.Bitmap.SetPixel%2A> metodę, aby ustawić kolor poszczególnych pikseli obrazu programowo. Możesz również zmienić obraz programowo przy użyciu <xref:System.Drawing.Bitmap.LockBits%2A> metody. Zwykle w przypadku dużych zmian <xref:System.Drawing.Bitmap.LockBits%2A> metoda oferuje lepszą wydajność.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Bitmap>.  
  
-   Ustawia kolor każdego piksela w pliku mapy bitowej na kolor czarny.  
  
-   Rysuje mapy bitowej.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResolution">
      <MemberSignature Language="C#" Value="public void SetResolution (float xDpi, float yDpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResolution(float32 xDpi, float32 yDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResolution (xDpi As Single, yDpi As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResolution(float xDpi, float yDpi);" />
      <MemberSignature Language="F#" Value="member this.SetResolution : single * single -&gt; unit" Usage="bitmap.SetResolution (xDpi, yDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xDpi" Type="System.Single" />
        <Parameter Name="yDpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xDpi">Rozdzielczość w poziomie w punktach na cal, z <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="yDpi">Rozdzielczość w pionie w punktach na cal, z <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Ustawia dla tego rozwiązania <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody można ustawić odpowiednie rozwiązanie dla nowo utworzonego mapy bitowej. Zmiana rozdzielczości obrazu nie zmienia jego rozmiar fizyczny.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Drawing.Bitmap.SetResolution%2A> metody.  
  
 [!code-csharp[System.Drawing.Misc3#SetResolution](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#setresolution)]
 [!code-vb[System.Drawing.Misc3#SetResolution](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#setresolution)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockBits">
      <MemberSignature Language="C#" Value="public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockBits(class System.Drawing.Imaging.BitmapData bitmapdata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockBits(System::Drawing::Imaging::BitmapData ^ bitmapdata);" />
      <MemberSignature Language="F#" Value="member this.UnlockBits : System.Drawing.Imaging.BitmapData -&gt; unit" Usage="bitmap.UnlockBits bitmapdata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapdata" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="bitmapdata">A <see cref="T:System.Drawing.Imaging.BitmapData" /> , który określa informacje o operacji blokowania.</param>
        <summary>Powoduje to odblokowanie <see cref="T:System.Drawing.Bitmap" /> z pamięci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.BitmapData> Określa atrybuty <xref:System.Drawing.Bitmap>, takich jak rozmiar, format pikseli, początkowy adres danych pikseli w pamięci, a długość każdej linii skanowania (krok).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, i <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> właściwości; <xref:System.Drawing.Bitmap.LockBits%2A> i <xref:System.Drawing.Bitmap.UnlockBits%2A> metod; i <xref:System.Drawing.Imaging.ImageLockMode> wyliczenia. W tym przykładzie zaprojektowano nie działać poprawnie przy wszystkich formatów pikseli, ale aby podać przykład sposobu użycia <xref:System.Drawing.Bitmap.LockBits%2A> metody. W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Aby uruchomić ten przykład, wklej go do formularza i obsługiwać formularza <xref:System.Windows.Forms.Control.Paint> zdarzenia przez wywołanie metody `LockUnlockBitsExample` jest metoda `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
  </Members>
</Type>