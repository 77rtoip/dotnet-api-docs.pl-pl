<Type Name="Bitmap" FullName="System.Drawing.Bitmap">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d583898d733b17a143faa30f02cdb2f3d9dde50f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69248427" /></Metadata><TypeSignature Language="C#" Value="public sealed class Bitmap : System.Drawing.Image" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Bitmap extends System.Drawing.Image" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Bitmap" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Bitmap&#xA;Inherits Image" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bitmap sealed : System::Drawing::Image" />
  <TypeSignature Language="F#" Value="type Bitmap = class&#xA;    inherit Image" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Image</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Hermetyzuje mapę bitową GDI+, która składa się z danych pikseli obrazu graficznego i jego atrybutów. A <see cref="T:System.Drawing.Bitmap" /> jest obiektem używanym do pracy z obrazami zdefiniowanymi przez dane pikseli.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mapa bitowa składa się z danych pikseli obrazu graficznego i jego atrybutów. Istnieje wiele formatów standardowych do zapisywania mapy bitowej do pliku. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]obsługuje następujące formaty plików: BMP, GIF, EXIF, JPG, PNG i TIFF. Aby uzyskać więcej informacji na temat obsługiwanych formatów, zobacz [typy map bitowych](~/docs/framework/winforms/advanced/types-of-bitmaps.md).  
  
 Można tworzyć obrazy z plików, strumieni i innych źródeł przy użyciu jednego z <xref:System.Drawing.Bitmap.%23ctor%2A> konstruktorów i zapisywać je w strumieniu lub w systemie plików <xref:System.Drawing.Image.Save%2A> przy użyciu metody. Obrazy są rysowane na ekranie lub do pamięci przy użyciu <xref:System.Drawing.Graphics.DrawImage%2A> metody <xref:System.Drawing.Graphics> obiektu. Aby uzyskać listę tematów dotyczących pracy z plikami obrazów, zobacz [Praca z obrazami, mapami bitowymi, ikonami i plikami](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md).  
  
> [!NOTE]
>  <xref:System.Drawing.Bitmap> Klasa nie jest dostępna w różnych domenach aplikacji. Jeśli na przykład utworzysz dynamiczny <xref:System.AppDomain> i utworzysz kilka pędzli, piór i map bitowych w tej domenie, Przekaż te obiekty z powrotem do domeny głównej aplikacji, możesz pomyślnie użyć piór i pędzli. Jeśli jednak wywołasz <xref:System.Drawing.Graphics.DrawImage%2A> metodę <xref:System.Drawing.Bitmap>, aby narysować zorganizowany, zostanie wyświetlony następujący wyjątek.  
>   
>  Komunikacja zdalna nie może znaleźć pola "obraz natywny" w typie "System. Drawing. Image".  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak utworzyć nowy <xref:System.Drawing.Bitmap> z pliku <xref:System.Drawing.Bitmap.GetPixel%2A> przy użyciu metod i <xref:System.Drawing.Bitmap.SetPixel%2A> , aby ponownie kolorować obraz. Używa <xref:System.Drawing.Image.PixelFormat%2A>również właściwości, <xref:System.Drawing.Image.Width%2A>i <xref:System.Drawing.Image.Height%2A> .  
  
 Ten przykład został zaprojektowany, aby można go było używać z Windows Forms, <xref:System.Windows.Forms.Label>które <xref:System.Windows.Forms.PictureBox>zawierają <xref:System.Windows.Forms.Button> odpowiednio, `Label1`i `PictureBox1`nazwane, `Button1`i. Wklej kod do formularza i skojarz `Button1_Click` metodę z <xref:System.Windows.Forms.Control.Click> zdarzeniem przycisku.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.PictureBox" />
    <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71">Obrazy, mapy bitowe i metapliki</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a626d701-bd99-4fd8-b92f-7b8f794e042b">Praca z obrazami, mapami bitowymi, ikonami i metaplikami</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Bitmap" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="original">, <see cref="T:System.Drawing.Image" /> Z którego ma zostać utworzony nowy <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy z określonego istniejącego obrazu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień danych używany do ładowania obrazu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy z określonego strumienia danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy zachować otwarty strumień przez okres istnienia <xref:System.Drawing.Bitmap>.  
  
 Ze względu na ograniczenie [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] dekodera <xref:System.ArgumentException?displayProperty=nameWithType> jest zgłaszana w przypadku konstruowania mapy bitowej z pliku obrazu PNG z pojedynczym wymiarem większym niż 65 535 pikseli.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób ładowania mapy bitowej ze strumienia.  
  
 Ten przykład jest przeznaczony do użycia z Windows Forms. Utwórz formularz, który zawiera <xref:System.Windows.Forms.PictureBox> nazwę. `PictureBox1` Wklej kod do formularza i Wywołaj `InitializeStreamBitmap` metodę z konstruktora lub <xref:System.Windows.Forms.Form.Load> metody obsługi zdarzeń.  
  
 [!code-cpp[System.Drawing.BitmapMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.BitmapMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#2)]
 [!code-vb[System.Drawing.BitmapMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stream" />nie zawiera danych obrazu lub jest <see langword="null" />.  
  
—lub— 
 <paramref name="stream" />zawiera plik obrazu PNG o pojedynczym wymiarze większym niż 65 535 pikseli.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Typy map bitowych</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nazwa i ścieżka pliku mapy bitowej.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy z określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa pliku i ścieżka może być względna dla aplikacji lub ścieżki bezwzględnej. Użyj tego konstruktora, aby otworzyć obrazy o następujących formatach plików: BMP, GIF, EXIF, JPG, PNG i TIFF. Aby uzyskać więcej informacji na temat obsługiwanych formatów, zobacz [typy map bitowych](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Plik pozostaje zablokowany do momentu <xref:System.Drawing.Bitmap> jego usunięcia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Nie znaleziono określonego pliku.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Typy map bitowych</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, valuetype System.Drawing.Size newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, newSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, System::Drawing::Size newSize);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * System.Drawing.Size -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, newSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="newSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="original">, <see cref="T:System.Drawing.Image" /> Z którego ma zostać utworzony nowy <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="newSize">Struktura, która reprezentuje rozmiar nowego <see cref="T:System.Drawing.Bitmap" />. <see cref="T:System.Drawing.Size" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy z określonego istniejącego obrazu, skalowane do określonego rozmiaru.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <param name="height">Wysokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy o określonym rozmiarze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Drawing.Bitmap> <xref:System.Drawing.Imaging.PixelFormat> z wartością <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (stream, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień danych używany do ładowania obrazu.</param>
        <param name="useIcm"><see langword="true" />w tym <see cref="T:System.Drawing.Bitmap" />celu należy użyć korekcji koloru; <see langword="false" />w przeciwnym razie.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy z określonego strumienia danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy zachować otwarty strumień przez okres istnienia <xref:System.Drawing.Bitmap>.  
  
 Ze względu na ograniczenie [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] dekodera <xref:System.ArgumentException?displayProperty=nameWithType> jest zgłaszana w przypadku konstruowania mapy bitowej z pliku obrazu PNG z pojedynczym wymiarem większym niż 65 535 pikseli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stream" />nie zawiera danych obrazu lub jest <see langword="null" />.  
  
—lub— 
 <paramref name="stream" />zawiera plik obrazu PNG o pojedynczym wymiarze większym niż 65 535 pikseli.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Typy map bitowych</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, useIcm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (filename, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Nazwa pliku mapy bitowej.</param>
        <param name="useIcm"><see langword="true" />w tym <see cref="T:System.Drawing.Bitmap" />celu należy użyć korekcji koloru; <see langword="false" />w przeciwnym razie.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy z określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby otworzyć obrazy o następujących formatach plików: BMP, GIF, EXIF, JPG, PNG i TIFF. Aby uzyskać więcej informacji na temat obsługiwanych formatów, zobacz [typy map bitowych](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Plik pozostaje zablokowany do momentu <xref:System.Drawing.Bitmap> jego usunięcia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób konstruowania nowej mapy bitowej z pliku. W przykładzie zastosowano <xref:System.Drawing.Bitmap.GetPixel%2A> metody <xref:System.Drawing.Bitmap.SetPixel%2A> i, aby ponownie kolorować obraz. Używa <xref:System.Drawing.Image.PixelFormat%2A> również właściwości.  
  
 Ten przykład został zaprojektowany do użycia z formularzem systemu Windows, który zawiera <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> i <xref:System.Windows.Forms.Button> nazwane `Label1`, `PictureBox1` i `Button1`, odpowiednio. Wklej kod do formularza i skojarz `Button1_Click` metodę z <xref:System.Windows.Forms.Control.Click> zdarzeniem przycisku.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wywoływania kodu niezarządzanego. Powiązane wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Typy map bitowych</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(Type ^ type, System::String ^ resource);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : Type * string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (type, resource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Klasa używana do wyodrębniania zasobu.</param>
        <param name="resource">Nazwa zasobu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy z określonego zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor łączy przestrzeń nazw danego typu z nazwą ciągu zasobu i szuka dopasowania w manifeście zestawu. Na przykład można przekazać <xref:System.Windows.Forms.Button> typ i `Button.bmp` do tego konstruktora i będzie szukać zasobu o nazwie `System.Windows.Forms.Button.bmp`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób konstruowania mapy bitowej z typu i sposobu używania <xref:System.Drawing.Image.Save%2A> metody. Aby uruchomić ten przykład, wklej kod do formularza systemu Windows. Obsługuj <xref:System.Windows.Forms.Control.Paint> zdarzenie formularza i `ConstructFromResourceSaveAsGif` Wywołaj metodę, przekazując `e` jako<xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Typy map bitowych</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">, <see cref="T:System.Drawing.Image" /> Z którego ma zostać utworzony nowy <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="width">Szerokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <param name="height">Wysokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy z określonego istniejącego obrazu, skalowane do określonego rozmiaru.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Graphics -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, g)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <param name="height">Wysokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <param name="g">Obiekt, który określa rozdzielczość nowej <see cref="T:System.Drawing.Bitmap" />. <see cref="T:System.Drawing.Graphics" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy o określonym rozmiarze i z rozdzielczością określonego <see cref="T:System.Drawing.Graphics" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowe <xref:System.Drawing.Bitmap> , które ta metoda tworzy `g`, ma swoją rozdzielczość poziomą i pionową <xref:System.Drawing.Graphics.DpiY%2A> odpowiednio do <xref:System.Drawing.Graphics.DpiX%2A> właściwości i.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, format As PixelFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, format)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <param name="height">Wysokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <param name="format">Format pikseli dla nowego <see cref="T:System.Drawing.Bitmap" />elementu. Należy określić wartość rozpoczynającą się od <c>formatu</c>.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy o określonym rozmiarze i formacie.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Określono <see cref="T:System.Drawing.Imaging.PixelFormat" /> wartość, której nazwa nie zaczyna się od *formatu*. Na przykład określenie <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> spowoduje <see cref="T:System.ArgumentException" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> że nie będzie.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, int32 stride, valuetype System.Drawing.Imaging.PixelFormat format, native int scan0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, stride As Integer, format As PixelFormat, scan0 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, int stride, System::Drawing::Imaging::PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * int * System.Drawing.Imaging.PixelFormat * nativeint -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, stride, format, scan0)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="scan0" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <param name="height">Wysokość nowej <see cref="T:System.Drawing.Bitmap" />wartości (w pikselach).</param>
        <param name="stride">Liczba całkowita, która określa przesunięcie bajtu między początkiem jednego wiersza skanowania i następnym. Zwykle jest to (ale niekoniecznie) liczba bajtów w formacie piksel (na przykład 2 dla 16 bitów na piksel) pomnożona przez szerokość mapy bitowej. Wartość przenoszona do tego parametru musi być wielokrotnością czterech.</param>
        <param name="format">Format pikseli dla nowego <see cref="T:System.Drawing.Bitmap" />elementu. Należy określić wartość rozpoczynającą się od <c>formatu</c>.</param>
        <param name="scan0">Wskaźnik na tablicę bajtów, która zawiera dane pikseli.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Bitmap" /> klasy z określonym rozmiarem, formatem pikseli i danymi pikseli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący jest odpowiedzialny za przydzielanie i zwalnianie bloku pamięci określonej przez `scan0` parametr. Jednak pamięć nie powinna być uwalniana do momentu wydania <xref:System.Drawing.Bitmap> powiązanego.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Drawing.Bitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Drawing.Imaging.PixelFormat%2CSystem.IntPtr%29> jak używać konstruktora. Ten przykład został zaprojektowany do użycia z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> parametru, który jest parametrem <xref:System.Windows.Forms.Control.Paint> zdarzenia.  
  
 [!code-csharp[System.Drawing.MiscExamples#Constructor](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#constructor)]
 [!code-vb[System.Drawing.MiscExamples#Constructor](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#constructor)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono <see cref="T:System.Drawing.Imaging.PixelFormat" /> wartość, której nazwa nie zaczyna się od *formatu*. Na przykład określenie <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> spowoduje <see cref="T:System.ArgumentException" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> że nie będzie.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wywoływania kodu niezarządzanego. Powiązane wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clone">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy kopię sekcji tego <see cref="T:System.Drawing.Bitmap" /> obiektu zdefiniowaną z określonym. <see cref="T:System.Drawing.Imaging.PixelFormat" /></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As Rectangle, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::Rectangle rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.Rectangle * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Definiuje część tego <see cref="T:System.Drawing.Bitmap" /> do skopiowania. Współrzędne są względne względem <see cref="T:System.Drawing.Bitmap" />tego.</param>
        <param name="format">Format pikseli dla nowego <see cref="T:System.Drawing.Bitmap" />elementu. Należy określić wartość rozpoczynającą się od <c>formatu</c>.</param>
        <summary>Tworzy kopię sekcji tej <see cref="T:System.Drawing.Bitmap" /> zdefiniowanej przez <see cref="T:System.Drawing.Rectangle" /> strukturę i z określonym <see cref="T:System.Drawing.Imaging.PixelFormat" /> wyliczeniem.</summary>
        <returns>Nowa <see cref="T:System.Drawing.Bitmap" /> , którą tworzy ta metoda.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Tworzy plik <xref:System.Drawing.Bitmap> z pliku.  
  
-   Klonuje część tego <xref:System.Drawing.Bitmap>elementu.  
  
-   Rysuje sklonowany fragment na ekranie.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><paramref name="rect" />znajduje się poza zakresem źródłowej mapy bitowej.</exception>
        <exception cref="T:System.ArgumentException">Wysokość lub szerokość <paramref name="rect" /> jest równa 0.  
  
—lub— 
Określono <see cref="T:System.Drawing.Imaging.PixelFormat" /> wartość, której nazwa nie zaczyna się od *formatu*. Na przykład określenie <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> spowoduje <see cref="T:System.ArgumentException" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> że nie będzie.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As RectangleF, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::RectangleF rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.RectangleF * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Definiuje część tego <see cref="T:System.Drawing.Bitmap" /> do skopiowania.</param>
        <param name="format">Określa Wyliczenie dla miejsca docelowego <see cref="T:System.Drawing.Bitmap" />. <see cref="T:System.Drawing.Imaging.PixelFormat" /></param>
        <summary>Tworzy kopię sekcji tego <see cref="T:System.Drawing.Bitmap" /> obiektu zdefiniowaną z określonym <see cref="T:System.Drawing.Imaging.PixelFormat" /> wyliczeniem.</summary>
        <returns><see cref="T:System.Drawing.Bitmap" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Tworzy plik <xref:System.Drawing.Bitmap> z pliku.  
  
-   Klonuje część tego <xref:System.Drawing.Bitmap>elementu.  
  
-   Rysuje sklonowany fragment na ekranie.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><paramref name="rect" />znajduje się poza zakresem źródłowej mapy bitowej.</exception>
        <exception cref="T:System.ArgumentException">Wysokość lub szerokość <paramref name="rect" /> jest równa 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromHicon">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHicon (IntPtr hicon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHicon(native int hicon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHicon (hicon As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHicon(IntPtr hicon);" />
      <MemberSignature Language="F#" Value="static member FromHicon : nativeint -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromHicon hicon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hicon" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hicon">Uchwyt do ikony.</param>
        <summary><see cref="T:System.Drawing.Bitmap" /> Tworzy z dojścia systemu Windows na ikonę.</summary>
        <returns><see cref="T:System.Drawing.Bitmap" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Pobiera uchwyt do istniejącego obrazu ikony.  
  
-   <xref:System.Drawing.Bitmap> Tworzy z uchwytu.  
  
-   Rysuje <xref:System.Drawing.Bitmap> na ekranie.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wywoływania kodu niezarządzanego. Powiązane wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromResource(native int hinstance, string bitmapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromResource (hinstance As IntPtr, bitmapName As String) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromResource(IntPtr hinstance, System::String ^ bitmapName);" />
      <MemberSignature Language="F#" Value="static member FromResource : nativeint * string -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromResource (hinstance, bitmapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hinstance" Type="System.IntPtr" />
        <Parameter Name="bitmapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hinstance">Dojście do wystąpienia pliku wykonywalnego, który zawiera zasób.</param>
        <param name="bitmapName">Ciąg, który zawiera nazwę mapy bitowej zasobu.</param>
        <summary><see cref="T:System.Drawing.Bitmap" /> Tworzy z określonego zasobu systemu Windows.</summary>
        <returns><see cref="T:System.Drawing.Bitmap" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.FromResource%2A>wymaga uprawnień zabezpieczeń do wywoływania kodu niezarządzanego. Aby zarządzać alternatywą dla tworzenia mapy bitowej z zasobów osadzonych, zobacz <xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>. <xref:System.Drawing.Bitmap.FromResource%2A>działa tylko z mapami bitowymi o nazwanych zasobach w bibliotece DLL.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wywoływania kodu niezarządzanego. Powiązane wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy obiekt mapy bitowej GDI z poziomu GDI+ <see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap();" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : unit -&gt; nativeint" Usage="bitmap.GetHbitmap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Drawing.Bitmap" />Tworzy obiekt [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] mapy bitowej z tego elementu.</summary>
        <returns>Dojście do [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] obiektu mapy bitowej, który tworzy ta metoda.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użytkownik jest odpowiedzialny za wywołanie [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` metody w celu zwolnienia pamięci używanej przez [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] obiekt mapy bitowej. Aby uzyskać więcej informacji na temat map bitowych GDI, zobacz [mapy bitowe](https://go.microsoft.com/fwlink/?LinkId=205685) w dokumentacji GDI systemu Windows.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Bitmap.GetHbitmap%2A> metody.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wysokość lub szerokość mapy bitowej jest większa niż <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wywoływania kodu niezarządzanego. Powiązane wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap (System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap(valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap (background As Color) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap(System::Drawing::Color background);" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : System.Drawing.Color -&gt; nativeint" Usage="bitmap.GetHbitmap background" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="background"><see cref="T:System.Drawing.Color" /> Struktura, która określa kolor tła. Ten parametr jest ignorowany, jeśli mapa bitowa jest całkowicie nieprzezroczysta.</param>
        <summary><see cref="T:System.Drawing.Bitmap" />Tworzy obiekt [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] mapy bitowej z tego elementu.</summary>
        <returns>Dojście do [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] obiektu mapy bitowej, który tworzy ta metoda.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użytkownik jest odpowiedzialny za wywołanie [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` metody w celu zwolnienia pamięci używanej przez [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] obiekt mapy bitowej. Aby uzyskać więcej informacji na temat map bitowych GDI, zobacz [mapy bitowe](https://go.microsoft.com/fwlink/?LinkId=205685) w dokumentacji GDI systemu Windows.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Bitmap.GetHbitmap%2A>metody.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wysokość lub szerokość mapy bitowej jest większa niż <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wywoływania kodu niezarządzanego. Powiązane wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHicon">
      <MemberSignature Language="C#" Value="public IntPtr GetHicon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHicon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHicon" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHicon () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHicon();" />
      <MemberSignature Language="F#" Value="member this.GetHicon : unit -&gt; nativeint" Usage="bitmap.GetHicon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca uchwyt do ikony.</summary>
        <returns>Dojście systemu Windows do ikony z tym samym obrazem co <see cref="T:System.Drawing.Bitmap" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowo ikona utworzona na podstawie uchwytu będzie mieć taki sam rozmiar jak oryginalna mapa bitowa.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   <xref:System.Drawing.Bitmap>Tworzy.  
  
-   Rysuje ten obiekt na ekranie.  
  
-   Pobiera uchwyt ikony dla elementu <xref:System.Drawing.Bitmap>.  
  
-   <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=nameWithType> Ustawia atrybut formularza na ikonę utworzoną na podstawie dojścia.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wywoływania kodu niezarządzanego. Powiązane wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPixel (x As Integer, y As Integer) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetPixel(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetPixel : int * int -&gt; System.Drawing.Color" Usage="bitmap.GetPixel (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna x pikseli do pobrania.</param>
        <param name="y">Współrzędna y pikseli do pobrania.</param>
        <summary>Pobiera kolor określonego piksela w tym <see cref="T:System.Drawing.Bitmap" />elemencie.</summary>
        <returns><see cref="T:System.Drawing.Color" /> Struktura reprezentująca kolor określonego piksela.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod pobiera kolor piksela w mapie bitowej, a następnie wypełnia prostokąt z tym kolorem.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="x" />jest mniejsza od 0 lub większa lub równa <see cref="P:System.Drawing.Image.Width" />.  
  
—lub— 
 <paramref name="y" />jest mniejsza od 0 lub większa lub równa <see cref="P:System.Drawing.Image.Height" />.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LockBits">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Powoduje <see cref="T:System.Drawing.Bitmap" /> zablokowanie do pamięci systemowej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function LockBits (rect As Rectangle, flags As ImageLockMode, format As PixelFormat) As BitmapData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Struktura, która określa część <see cref="T:System.Drawing.Bitmap" /> do zablokowania. <see cref="T:System.Drawing.Rectangle" /></param>
        <param name="flags">Wyliczenie, które określa poziom dostępu (odczyt/zapis) <see cref="T:System.Drawing.Bitmap" />dla. <see cref="T:System.Drawing.Imaging.ImageLockMode" /></param>
        <param name="format">Wyliczenie, które określa format <see cref="T:System.Drawing.Bitmap" />danych. <see cref="T:System.Drawing.Imaging.PixelFormat" /></param>
        <summary>Powoduje <see cref="T:System.Drawing.Bitmap" /> zablokowanie do pamięci systemowej.</summary>
        <returns><see cref="T:System.Drawing.Imaging.BitmapData" /> Zawierający informacje o tej operacji blokady.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.LockBits%2A> Użyj metody, aby zablokować istniejącą mapę bitową w pamięci systemowej, tak aby można ją było zmienić programowo. Kolor obrazu można zmienić za pomocą <xref:System.Drawing.Bitmap.SetPixel%2A> metody, <xref:System.Drawing.Bitmap.LockBits%2A> chociaż Metoda oferuje lepszą wydajność w przypadku zmian w dużej skali.  
  
 <xref:System.Drawing.Imaging.BitmapData> Określa atrybuty<xref:System.Drawing.Bitmap>, takie jak rozmiar, format pikseli, adres początkowy danych pikseli w pamięci i długość poszczególnych linii skanowania (krok).  
  
 Podczas wywoływania tej metody należy użyć elementu członkowskiego <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> wyliczenia zawierającego określoną wartość bitów na piksel (BPP). Użycie <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> wartości takich jak <xref:System.Drawing.Imaging.PixelFormat.Indexed> i <xref:System.Drawing.Imaging.PixelFormat.Gdi> spowoduje zgłoszenie <xref:System.ArgumentException?displayProperty=nameWithType>. Ponadto przekazanie nieprawidłowego formatu pikseli dla mapy bitowej spowoduje zgłoszenie <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Drawing.Image.PixelFormat%2A> <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> <xref:System.Drawing.Image.Height%2A> <xref:System.Drawing.Bitmap.UnlockBits%2A> <xref:System.Drawing.Imaging.ImageLockMode> , jak używać właściwości <xref:System.Drawing.Bitmap.LockBits%2A> ,, ,i,metod<xref:System.Drawing.Image.Width%2A>i oraz wyliczenia. Ten przykład jest przeznaczony do użycia z Windows Forms. Ten przykład nie jest przeznaczony do prawidłowego działania ze wszystkimi formatami pikseli, ale w celu zapewnienia przykładu sposobu używania <xref:System.Drawing.Bitmap.LockBits%2A> metody. Aby uruchomić ten przykład, należy wkleić go do <xref:System.Windows.Forms.Control.Paint> formularza i obsłużyć zdarzenie formularza, `LockUnlockBitsExample` wywołując metodę, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie <see cref="T:System.Drawing.Imaging.PixelFormat" /> jest to określona wartość bitów na piksel.  
  
—lub— 
Niepoprawna <see cref="T:System.Drawing.Imaging.PixelFormat" /> wartość jest przenoszona dla mapy bitowej.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format, class System.Drawing.Imaging.BitmapData bitmapData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format, System::Drawing::Imaging::BitmapData ^ bitmapData);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat * System.Drawing.Imaging.BitmapData -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format, bitmapData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="bitmapData" Type="System.Drawing.Imaging.BitmapData" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rect">Struktura prostokąta, która określa część <see cref="T:System.Drawing.Bitmap" /> do zablokowania.</param>
        <param name="flags">Jedna z <see cref="T:System.Drawing.Imaging.ImageLockMode" /> wartości, która określa poziom dostępu (odczyt/zapis) <see cref="T:System.Drawing.Bitmap" />dla.</param>
        <param name="format">Jedna z <see cref="T:System.Drawing.Imaging.PixelFormat" /> wartości, która określa format <see cref="T:System.Drawing.Bitmap" />danych.</param>
        <param name="bitmapData">A <see cref="T:System.Drawing.Imaging.BitmapData" /> , który zawiera informacje o operacji blokowania.</param>
        <summary><see cref="T:System.Drawing.Bitmap" /> Blokuje do pamięci systemowej</summary>
        <returns>A <see cref="T:System.Drawing.Imaging.BitmapData" /> , który zawiera informacje o operacji blokowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.LockBits%2A> Użyj metody, aby zablokować istniejącą mapę bitową w pamięci systemowej, tak aby można ją było zmienić programowo. Kolor obrazu można zmienić za pomocą <xref:System.Drawing.Bitmap.SetPixel%2A> metody, <xref:System.Drawing.Bitmap.LockBits%2A> chociaż Metoda oferuje lepszą wydajność w przypadku zmian w dużej skali.  
  
 Podczas wywoływania tej metody należy użyć elementu członkowskiego <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> wyliczenia zawierającego określoną wartość bitów na piksel (BPP). Użycie <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> wartości, takich jak <xref:System.Drawing.Imaging.PixelFormat.Indexed> <xref:System.Drawing.Imaging.PixelFormat.Gdi>i,spowoduje zgłoszenie. <xref:System.ArgumentException?displayProperty=nameWithType> Ponadto przekazanie nieprawidłowego formatu pikseli dla mapy bitowej spowoduje zgłoszenie <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
 Ta wersja <xref:System.Drawing.Bitmap.LockBits%2A> metody jest przeznaczona do użycia `flags` z wartością <xref:System.Drawing.Imaging.ImageLockMode.UserInputBuffer?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Drawing.Imaging.PixelFormat" />wartość nie jest określoną wartością bitów na piksel.  
  
—lub— 
Niepoprawna <see cref="T:System.Drawing.Imaging.PixelFormat" /> wartość jest przenoszona dla mapy bitowej.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeTransparent">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sprawia, że domyślny kolor przezroczysty jest <see cref="T:System.Drawing.Bitmap" />przezroczysty dla tego elementu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent();" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : unit -&gt; unit" Usage="bitmap.MakeTransparent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawia, że domyślny kolor przezroczysty jest <see cref="T:System.Drawing.Bitmap" />przezroczysty dla tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paleta systemowa definiuje jeden kolor jako domyślny przezroczysty, czyli alfa, kolor. Ta metoda sprawia, że domyślny przezroczysty kolor jest <xref:System.Drawing.Bitmap>przezroczysty dla tego elementu. Jeśli system nie określa przezroczystego koloru, <xref:System.Drawing.Color.LightGray%2A> jest to kolor przezroczysty.  
  
 Po wywołaniu <xref:System.Drawing.Bitmap.MakeTransparent%2A>, mapa bitowa zostanie przekonwertowana <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> na format, ponieważ ten format obsługuje kanał alfa.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod sprawia, że domyślny przezroczysty kolor systemu jest `myBitmap`przezroczysty dla, a <xref:System.Drawing.Bitmap> następnie rysuje na ekranie.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Format <see cref="T:System.Drawing.Bitmap" /> obrazu jest w formacie ikony.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent (System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent(valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent (transparentColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent(System::Drawing::Color transparentColor);" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : System.Drawing.Color -&gt; unit" Usage="bitmap.MakeTransparent transparentColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="transparentColor"><see cref="T:System.Drawing.Color" /> Struktura reprezentująca kolor, który ma być przezroczysty.</param>
        <summary>Sprawia, że określony kolor jest przezroczysty dla tego <see cref="T:System.Drawing.Bitmap" />elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Drawing.Bitmap.MakeTransparent%2A>, mapa bitowa zostanie przekonwertowana <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> na format, ponieważ ten format obsługuje kanał alfa.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Pobiera kolor piksela w <xref:System.Drawing.Bitmap>.  
  
-   Sprawia, że kolor jest przezroczysty dla mapy bitowej.  
  
-   Rysuje <xref:System.Drawing.Bitmap> na ekranie.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Format <see cref="T:System.Drawing.Bitmap" /> obrazu jest w formacie ikony.</exception>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPixel(int x, int y, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetPixel : int * int * System.Drawing.Color -&gt; unit" Usage="bitmap.SetPixel (x, y, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędna x pikseli do ustawienia.</param>
        <param name="y">Współrzędna y dla piksela do ustawienia.</param>
        <param name="color"><see cref="T:System.Drawing.Color" /> Struktura, która reprezentuje kolor, który ma zostać przypisany do określonego piksela.</param>
        <summary>Ustawia kolor określonego piksela w tym <see cref="T:System.Drawing.Bitmap" />elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Drawing.Bitmap.SetPixel%2A> metody, aby programowo ustawić kolor pojedynczego piksela w obrazie. Możesz również programowo zmienić obraz przy użyciu <xref:System.Drawing.Bitmap.LockBits%2A> metody. Zwykle w przypadku zmian <xref:System.Drawing.Bitmap.LockBits%2A> w dużej skali Metoda zapewnia lepszą wydajność.  
  
   
  
## Examples  
 Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który <xref:System.Windows.Forms.Control.Paint> jest parametrem programu obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   <xref:System.Drawing.Bitmap>Tworzy.  
  
-   Ustawia kolor każdego piksela w mapie bitowej na czerń.  
  
-   Rysuje mapę bitową.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResolution">
      <MemberSignature Language="C#" Value="public void SetResolution (float xDpi, float yDpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResolution(float32 xDpi, float32 yDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResolution (xDpi As Single, yDpi As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResolution(float xDpi, float yDpi);" />
      <MemberSignature Language="F#" Value="member this.SetResolution : single * single -&gt; unit" Usage="bitmap.SetResolution (xDpi, yDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xDpi" Type="System.Single" />
        <Parameter Name="yDpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xDpi">Rozdzielczość pozioma (w punktach na cal <see cref="T:System.Drawing.Bitmap" />).</param>
        <param name="yDpi">Rozdzielczość w pionie (w punktach na cal <see cref="T:System.Drawing.Bitmap" />).</param>
        <summary>Ustawia dla tego <see cref="T:System.Drawing.Bitmap" />rozwiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby ustawić odpowiednie rozwiązanie dla nowo utworzonej mapy bitowej. Zmiana rozdzielczości obrazu nie powoduje zmiany jego rozmiaru fizycznego.  
  
   
  
## Examples  
 Poniższy przykładowy kod pokazuje, <xref:System.Drawing.Bitmap.SetResolution%2A> jak używać metody.  
  
 [!code-csharp[System.Drawing.Misc3#SetResolution](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#setresolution)]
 [!code-vb[System.Drawing.Misc3#SetResolution](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#setresolution)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockBits">
      <MemberSignature Language="C#" Value="public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockBits(class System.Drawing.Imaging.BitmapData bitmapdata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockBits(System::Drawing::Imaging::BitmapData ^ bitmapdata);" />
      <MemberSignature Language="F#" Value="member this.UnlockBits : System.Drawing.Imaging.BitmapData -&gt; unit" Usage="bitmap.UnlockBits bitmapdata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapdata" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="bitmapdata">A <see cref="T:System.Drawing.Imaging.BitmapData" /> , która określa informacje o operacji blokady.</param>
        <summary>Odblokowuje to <see cref="T:System.Drawing.Bitmap" /> z pamięci systemowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.BitmapData> Określa atrybuty<xref:System.Drawing.Bitmap>, takie jak rozmiar, format pikseli, adres początkowy danych pikseli w pamięci i długość poszczególnych linii skanowania (krok).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Drawing.Image.PixelFormat%2A> <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> <xref:System.Drawing.Image.Height%2A> <xref:System.Drawing.Bitmap.UnlockBits%2A> <xref:System.Drawing.Imaging.ImageLockMode> , jak używać właściwości <xref:System.Drawing.Bitmap.LockBits%2A> ,, ,i,metod<xref:System.Drawing.Image.Width%2A>i oraz wyliczenia. Ten przykład nie jest przeznaczony do prawidłowego działania ze wszystkimi formatami pikseli, ale w celu zapewnienia przykładu sposobu używania <xref:System.Drawing.Bitmap.LockBits%2A> metody. Ten przykład jest przeznaczony do użycia z Windows Forms. Aby uruchomić ten przykład, należy wkleić go do <xref:System.Windows.Forms.Control.Paint> formularza i obsłużyć zdarzenie formularza, `LockUnlockBitsExample` wywołując metodę, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Operacja nie powiodła się.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
