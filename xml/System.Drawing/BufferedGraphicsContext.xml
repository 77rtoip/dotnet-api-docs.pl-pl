<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5041abc878b2b4ca20a713f8c850548295dc209" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69248362" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zapewnia metody tworzenia buforów grafiki, których można użyć do podwójnego buforowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.BufferedGraphicsContext> Klasa umożliwia implementowanie niestandardowego podwójnego buforowania grafiki. Grafiki używające podwójnego buforowania mogą zmniejszyć lub wyeliminować migotanie, które jest spowodowane przez ponowne narysowanie powierzchni ekranu.  
  
> [!NOTE]
>  Najprostszym sposobem użycia podwójnego buforowania jest ustawienie <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flagi stylu kontrolki w kontrolce <xref:System.Windows.Forms.Control.SetStyle%2A> przy użyciu metody. Ustawienie flagi style formantów dla kontrolki przekierowuje wszystkie malowanie dla kontrolki za pośrednictwem domyślnego bufora grafiki, bez konieczności dodatkowego kodu. <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> Ta flaga jest domyślnie ustawiona `true` na wartość.  
  
 <xref:System.Drawing.BufferedGraphicsContext> Klasa zawiera metody tworzenia i konfigurowania bufora grafiki. <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> Metoda<xref:System.Drawing.BufferedGraphics>tworzy, która jest otoką dla bufora grafiki, która udostępnia również metody, których można użyć do zapisu w buforze i renderowania jego zawartości na urządzeniu wyjściowym.  
  
 Możesz pobrać <xref:System.Drawing.BufferedGraphicsContext> dla bieżącej domeny aplikacji ze statycznej <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> właściwości. W przypadku aplikacji intensywnie wykorzystujących wiele operacji, takich jak animacje, <xref:System.Drawing.BufferedGraphicsContext> można utworzyć dedykowany za pomocą konstruktora, ale <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> w przypadku większości aplikacji właściwość będzie wystarczająca.  
  
 Aby uzyskać więcej informacji na temat rysowania buforowanej grafiki i niestandardowych implementacji buforowania, zobacz podwójnie [ [buforowana grafika](~/docs/framework/winforms/advanced/double-buffered-graphics.md) i instrukcje: Ręcznie Zarządzaj buforowaną](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)grafiką.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Drawing.BufferedGraphicsContext> jak uzyskać dla bieżącej domeny aplikacji. Ten kod jest częścią większego przykładu dostarczonego dla <xref:System.Drawing.BufferedGraphics> klasy.  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.BufferedGraphicsContext" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku aplikacji intensywnie korzystających z wielu operacji, takich jak animacje, można czasami zwiększyć <xref:System.Drawing.BufferedGraphicsContext> wydajność przy użyciu dedykowanego, a nie <xref:System.Drawing.BufferedGraphicsManager>wystąpienia domyślnego dostarczonego przez. Pozwala to na tworzenie pojedynczych buforów grafiki i zarządzanie nimi.  
  
> [!NOTE]
>  Zawsze należy wywołać <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> po zakończeniu korzystania z dedykowanego <xref:System.Drawing.BufferedGraphicsContext>.  
  
 Aby uzyskać więcej informacji na temat dedykowanych buforów grafiki, zobacz [How to: Ręcznie Zarządzaj buforowaną](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)grafiką.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md">Instrukcje: Ręczne zarządzanie buforowaną grafiką</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy bufor grafiki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics">W <see cref="T:System.Drawing.Graphics" /> celu dopasowania do formatu piksela dla nowego buforu.</param>
        <param name="targetRectangle"><see cref="T:System.Drawing.Rectangle" /> Wskazuje rozmiar buforu do utworzenia.</param>
        <summary>Tworzy bufor graficzny o określonym rozmiarze przy użyciu formatu pikseli określonego <see cref="T:System.Drawing.Graphics" />.</summary>
        <returns><see cref="T:System.Drawing.BufferedGraphics" /> , Który może być używany do rysowania w buforze określonych wymiarów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metody z prostokątem, którego rozmiar przekracza wartość <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> właściwości, zostanie utworzony tymczasowy <xref:System.Drawing.BufferedGraphicsContext> w celu przydzielenia buforu i udostępnienia tymczasowego kontekstu bufora. Nowy <xref:System.Drawing.BufferedGraphicsContext> jest różny <xref:System.Drawing.BufferedGraphicsContext> od dla domeny aplikacji i jest usuwany automatycznie, <xref:System.Drawing.BufferedGraphics> <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> gdy zwracany przez metodę zostanie usunięty.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Tworzenie bufora grafiki przy użyciu <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metody. Ten kod jest częścią większego przykładu dostarczonego dla <xref:System.Drawing.BufferedGraphics> klasy.  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC"><see cref="T:System.IntPtr" /> Do kontekstu urządzenia, aby dopasować format pikseli nowego buforu do.</param>
        <param name="targetRectangle"><see cref="T:System.Drawing.Rectangle" /> Wskazuje rozmiar buforu do utworzenia.</param>
        <summary>Tworzy bufor graficzny o określonym rozmiarze przy użyciu formatu pikseli określonego <see cref="T:System.Drawing.Graphics" />.</summary>
        <returns><see cref="T:System.Drawing.BufferedGraphics" /> , Który może być używany do rysowania w buforze określonych wymiarów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metody z prostokątem, którego rozmiar przekracza wartość <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> właściwości, zostanie utworzony tymczasowy <xref:System.Drawing.BufferedGraphicsContext> w celu przydzielenia buforu i udostępnienia tymczasowego kontekstu bufora. Nowy <xref:System.Drawing.BufferedGraphicsContext> jest różny <xref:System.Drawing.BufferedGraphicsContext> od dla domeny aplikacji i jest usuwany automatycznie, <xref:System.Drawing.BufferedGraphics> <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> gdy zwracany przez metodę zostanie usunięty.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Tworzenie bufora grafiki przy użyciu <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> metody. Ten kod jest częścią większego przykładu dostarczonego dla <xref:System.Drawing.BufferedGraphics> klasy.  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">w celu uzyskania dostępu do kodu niezarządzanego. Powiązane wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez <see cref="T:System.Drawing.BufferedGraphicsContext" />program.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> po zakończeniu korzystania z <xref:System.Drawing.BufferedGraphicsContext>. <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> Metoda<xref:System.Drawing.BufferedGraphicsContext> pozostawia w stanie niezdatnym do użytku. Po wywołaniu <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>należy wydać wszystkie odwołania <xref:System.Drawing.BufferedGraphicsContext> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Drawing.BufferedGraphicsContext> , którą zajmował. Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.Drawing.BufferedGraphicsContext>do. W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Object.Finalize%2A> metody przez <xref:System.Drawing.BufferedGraphicsContext>moduł zbierający elementy bezużyteczne.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia obiektowi podjęcie próby zwolnienia zasobów i wykonywanie innych operacji czyszczenia przed odinstalowaniem ich przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa bieżący bufor grafiki, jeśli bufor został przydzielony i nie został jeszcze usunięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli bufor grafiki jest używany, zostanie oznaczony do usunięcia, gdy tylko będzie to możliwe. w przeciwnym razie zostanie ona usunięta natychmiast.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalny rozmiar buforu do użycia.</summary>
        <value><see cref="T:System.Drawing.Size" /> Wskazanie maksymalnego rozmiaru wymiarów bufora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia pobieranie lub Ustawianie maksymalnych wymiarów buforu, który ma być przechowywany w pamięci. Można przydzielić bufor dowolnego rozmiaru, jednak każdy bufor o wymiarach większych niż <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> rozmiar będzie używany tymczasowo, a następnie odrzucony <xref:System.Drawing.BufferedGraphics> po wydaniu obiektu.  
  
   
  
## Examples  
 Poniższy przykład demonstruje ustawienie maksymalnego rozmiaru bufora dla <xref:System.Drawing.BufferedGraphicsContext>. Ten kod jest częścią większego przykładu dostarczonego dla <xref:System.Drawing.BufferedGraphics> klasy.  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wysokość lub szerokość rozmiaru jest mniejsza lub równa zero.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby umożliwić użytkownikom dostęp do wszystkich okien. Powiązane wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Podwójnie buforowana grafika</related>
      </Docs>
    </Member>
  </Members>
</Type>
