<Type Name="RectangleConverter" FullName="System.Drawing.RectangleConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4afe76964b1a808282a0ecbebbf500865f7d8e2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36488906" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RectangleConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RectangleConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.RectangleConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class RectangleConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class RectangleConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type RectangleConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0904d-101">Konwertuje prostokąty z jednego typu danych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0904d-101">Converts rectangles from one data type to another.</span>
      </span>
      <span data-ttu-id="0904d-102">Uzyskiwanie dostępu do tej klasy przy użyciu <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0904d-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RectangleConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.RectangleConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RectangleConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0904d-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.RectangleConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-103">Initializes a new instance of the <see cref="T:System.Drawing.RectangleConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.RectangleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="rectangleConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0904d-104">Kontekst elementu formatującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-104">A formatter context.</span>
          </span>
          <span data-ttu-id="0904d-105">Aby uzyskać dodatkowe informacje o środowisku, które ten konwerter jest wywoływana z tego obiektu w można.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-105">This object can be used to get additional information about the environment this converter is being called from.</span>
          </span>
          <span data-ttu-id="0904d-106">Może to być <see langword="null" />, dlatego należy zawsze sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-106">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="0904d-107">Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-107">Also, properties on the context object may also return <see langword="null" />.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="0904d-108">Typ, który ma zostać przekonwertowany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-108">The type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0904d-109">Określa, czy tego konwertera można przekonwertować obiektu dla typu źródłowego danego natywnego typu konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-109">Determines if this converter can convert an object in the given source type to the native type of the converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0904d-110">Ta metoda zwraca <see langword="true" /> Jeśli ten obiekt może dokonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-110">This method returns <see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.RectangleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="rectangleConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0904d-111">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Obiekt, który udostępnia kontekst formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-111">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context.</span>
          </span>
          <span data-ttu-id="0904d-112">Może to być <see langword="null" />, dlatego należy zawsze sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-112">This can be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="0904d-113">Ponadto można także wrócić właściwości obiektu context <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-113">Also, properties on the context object can also return <see langword="null" />.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="0904d-114">A <see cref="T:System.Type" /> obiekt, który reprezentuje typ, który ma zostać przekonwertowany na.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-114">A <see cref="T:System.Type" /> object that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0904d-115">Pobiera wartość wskazującą, czy ten konwerter można przekonwertować obiektu typu danego przeznaczenia, przy użyciu kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-115">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0904d-116">Ta metoda zwraca <see langword="true" /> Jeśli konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-116">This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0904d-117">`context` Parametru można uzyskać dodatkowe informacje o środowisku konwerter jest wywoływana z.</span><span class="sxs-lookup"><span data-stu-id="0904d-117">The `context` parameter can be used to get additional information about the environment this converter is being called from.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.RectangleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="rectangleConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0904d-118">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> można uzyskać dodatkowe informacje o środowisku konwerter jest wywoływana z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-118">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to get additional information about the environment this converter is being called from.</span>
          </span>
          <span data-ttu-id="0904d-119">Może to być <see langword="null" />, dlatego należy zawsze sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-119">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="0904d-120">Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-120">Also, properties on the context object may also return <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0904d-121">
            <see cref="T:System.Globalization.CultureInfo" /> Zawiera informacje dotyczące kultury, takie jak języka, kalendarza i konwencje kultury skojarzone z określoną kulturę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-121">An <see cref="T:System.Globalization.CultureInfo" /> that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture.</span>
          </span>
          <span data-ttu-id="0904d-122">Jest on oparty na standardowe 1766 RFC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-122">It is based on the RFC 1766 standard.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0904d-123">Obiekt do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-123">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0904d-124">Konwertuje dany obiekt do <see cref="T:System.Drawing.Rectangle" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-124">Converts the given object to a <see cref="T:System.Drawing.Rectangle" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0904d-125">Przekonwertowany obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-125">The converted object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0904d-126">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-126">The conversion cannot be completed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.RectangleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="rectangleConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0904d-127">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> można uzyskać dodatkowe informacje o środowisku konwerter jest wywoływana z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-127">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to get additional information about the environment this converter is being called from.</span>
          </span>
          <span data-ttu-id="0904d-128">Może to być <see langword="null" />, dlatego należy zawsze sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-128">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="0904d-129">Ponadto może również zwrócić właściwości obiektu context <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-129">Also, properties on the context object may also return <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0904d-130">
            <see cref="T:System.Globalization.CultureInfo" /> Zawiera informacje dotyczące kultury, takie jak języka, kalendarza i konwencje kultury skojarzone z określoną kulturę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-130">An <see cref="T:System.Globalization.CultureInfo" /> that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture.</span>
          </span>
          <span data-ttu-id="0904d-131">Jest on oparty na standardowe 1766 RFC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-131">It is based on the RFC 1766 standard.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0904d-132">Obiekt do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-132">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="0904d-133">Typ docelowy konwersji obiektu do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-133">The type to convert the object to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0904d-134">Konwertuje określony obiekt określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-134">Converts the specified object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0904d-135">Przekonwertowany obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-135">The converted object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0904d-136">Najbardziej typowych przekonwertować są do i z obiektem ciągu.</span><span class="sxs-lookup"><span data-stu-id="0904d-136">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="0904d-137">Domyślna implementacja wywołuje metodę obiektu <xref:System.Object.ToString%2A> metody Jeśli obiekt jest prawidłowy, a typ docelowy jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="0904d-137">The default implementation calls the object's <xref:System.Object.ToString%2A> method if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="0904d-138">Jeśli ta metoda nie można przekonwertować na typ docelowy, zgłasza <xref:System.NotSupportedException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="0904d-138">If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0904d-139">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-139">The conversion cannot be completed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="rectangleConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0904d-140">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> można podać za pośrednictwem których dodatkowy kontekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-140">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> through which additional context can be provided.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="0904d-141">Słownik nowej wartości właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-141">A dictionary of new property values.</span>
          </span>
          <span data-ttu-id="0904d-142">Słownik zawiera szereg pary nazwa wartość, po jednej dla każdej właściwości zwrócone w wyniku wywołania <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-142">The dictionary contains a series of name-value pairs, one for each property returned from a call to the <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0904d-143">Tworzy wystąpienie tego typu, mając do dyspozycji zestaw wartości właściwości dla obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-143">Creates an instance of this type given a set of property values for the object.</span>
          </span>
          <span data-ttu-id="0904d-144">Jest to przydatne dla obiektów, które są niezmienne, ale nadal chcesz zapewnić modyfikowalne właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-144">This is useful for objects that are immutable but still want to provide changeable properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0904d-145">Nowo utworzony obiekt lub <see langword="null" /> , jeśli nie można utworzyć obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-145">The newly created object, or <see langword="null" /> if the object could not be created.</span>
          </span>
          <span data-ttu-id="0904d-146">Domyślna implementacja zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-146">The default implementation returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.RectangleConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="rectangleConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0904d-147">Deskryptor typu za pomocą którego można podać dodatkowy kontekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-147">A type descriptor through which additional context can be provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0904d-148">Określa, czy zmiana wartości dla tego obiektu należy wymagać wywołanie <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> do utworzenia nowej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-148">Determines if changing a value on this object should require a call to <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0904d-149">Ta metoda zwraca <see langword="true" /> Jeśli <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> powinna być wywoływana w przypadku zmiany z co najmniej jednej właściwości tego obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-149">This method returns <see langword="true" /> if <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> should be called when a change is made to one or more properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="rectangleConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0904d-150">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> można podać za pośrednictwem których dodatkowy kontekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-150">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> through which additional context can be provided.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0904d-151">Wartość można uzyskać właściwości obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-151">The value of the object to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="0904d-152">Tablica <see cref="T:System.Attribute" /> obiektów, które opisują właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-152">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0904d-153">Pobiera zbiór właściwości dla tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-153">Retrieves the set of properties for this type.</span>
          </span>
          <span data-ttu-id="0904d-154">Domyślnie typu nie zwraca żadnych właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-154">By default, a type does not return any properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0904d-155">Zbiór właściwości, które powinny być widoczne dla tego typu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-155">The set of properties that should be exposed for this data type.</span>
          </span>
          <span data-ttu-id="0904d-156">Jeśli żadne właściwości powinny zostać ujawnione, to może zwrócić <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-156">If no properties should be exposed, this may return <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0904d-157">Domyślna implementacja zawsze zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-157">The default implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0904d-158">Proste implementacja tej metody można po prostu Wywołaj <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> metody dla typu danych.</span><span class="sxs-lookup"><span data-stu-id="0904d-158">A simple implementation of this method can just call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.RectangleConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="rectangleConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0904d-159">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> można podać za pośrednictwem których dodatkowy kontekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-159">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> through which additional context can be provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0904d-160">Określa, czy ten obiekt obsługuje właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-160">Determines if this object supports properties.</span>
          </span>
          <span data-ttu-id="0904d-161">Domyślnie jest to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-161">By default, this is <see langword="false" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0904d-162">Ta metoda zwraca <see langword="true" /> Jeśli <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> powinien być wywołany, aby znaleźć właściwości tego obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0904d-162">This method returns <see langword="true" /> if <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>