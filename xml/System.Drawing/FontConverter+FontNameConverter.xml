<Type Name="FontConverter+FontNameConverter" FullName="System.Drawing.FontConverter+FontNameConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bfa0bee54dbf3123f3ca16558c00bf4e5b69d0be" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FontConverter.FontNameConverter : System.ComponentModel.TypeConverter, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit FontConverter/FontNameConverter extends System.ComponentModel.TypeConverter implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.FontConverter.FontNameConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FontConverter.FontNameConverter&#xA;Inherits TypeConverter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class FontConverter::FontNameConverter sealed : System::ComponentModel::TypeConverter, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="30aa4-101">
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> jest konwerter typu, który służy do konwertowania nazwy czcionki do i z różnych innych oświadczenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="30aa4-101">
          <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> is a type converter that is used to convert a font name to and from various other representations.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNameConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNameConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30aa4-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-102">Initializes a new instance of the <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="30aa4-103">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-103">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="30aa4-104">Może to być <see langword="null" />, dlatego należy zawsze sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-104">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="30aa4-105">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-105">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="30aa4-106">Typ, który chcesz konwertować z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-106">The type you wish to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30aa4-107">Określa, czy tego konwertera można przekonwertować obiektu dla typu źródłowego danego natywnego typu konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-107">Determines if this converter can convert an object in the given source type to the native type of the converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30aa4-108">
            <see langword="true" /> Jeśli konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-108">
              <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="30aa4-109">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="30aa4-110">Może to być <see langword="null" />, dlatego należy zawsze sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-110">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="30aa4-111">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-111">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="30aa4-112">A <see cref="T:System.Globalization.CultureInfo" /> służące do wykonywania konwersji</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-112">A <see cref="T:System.Globalization.CultureInfo" /> to use to perform the conversion</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="30aa4-113">Obiekt do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-113">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30aa4-114">Konwertuje dany obiekt konwertera typu macierzystego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-114">Converts the given object to the converter's native type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30aa4-115">Przekonwertowany obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-115">The converted object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="30aa4-116">Nie można wykonać konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-116">The conversion cannot be completed.</span>
          </span>
        </exception>
        <forInternalUseOnly />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="30aa4-117">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-117">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="30aa4-118">Może to być <see langword="null" />, dlatego należy zawsze sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-118">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="30aa4-119">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-119">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30aa4-120">Pobiera kolekcję zawierającą zestaw standardowych wartości dla tego konwertera jest przeznaczona dla typu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-120">Retrieves a collection containing a set of standard values for the data type this converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30aa4-121">Kolekcja zawierająca standardowego zestawu prawidłowych wartości lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-121">A collection containing a standard set of valid values, or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="30aa4-122">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-122">The default is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="30aa4-123">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-123">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="30aa4-124">Może to być <see langword="null" />, dlatego należy zawsze sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-124">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="30aa4-125">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-125">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30aa4-126">Określa, jeśli lista wartości standardowych zwracane z <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> metoda jest wyłączną listę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-126">Determines if the list of standard values returned from the <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> method is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30aa4-127">
            <see langword="true" /> Jeśli kolekcja zwrócony z <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> jest wyłączną listę możliwych wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-127">
              <see langword="true" /> if the collection returned from <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> is an exclusive list of possible values; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="30aa4-128">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-128">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30aa4-129">Jeśli lista jest wyłączne, nie inne wartości są prawidłowe, takie jak typ danych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="30aa4-129">If the list is exclusive, no other values are valid, such as in an enumeration data type.</span></span> <span data-ttu-id="30aa4-130">Jeśli lista nie jest zarezerwowana, a następnie istnieją inne prawidłowe wartości oprócz listy wartości standardowe <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> udostępnia.</span><span class="sxs-lookup"><span data-stu-id="30aa4-130">If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> provides.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="30aa4-131">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-131">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="30aa4-132">Może to być <see langword="null" />, dlatego należy zawsze sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-132">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="30aa4-133">Ponadto może zwrócić właściwości obiektu context <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-133">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30aa4-134">Określa, czy ten obiekt obsługuje standardowy zestaw wartości, które mogą być pobierane z listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-134">Determines if this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30aa4-135">
            <see langword="true" /> Jeśli <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> powinien być wywołany, aby znaleźć wspólny zbiór wartości, które obsługuje obiektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-135">
              <see langword="true" /> if <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30aa4-136">Wykonuje zadania zdefiniowane przez aplikację skojarzone z uwalnianiem, zwalnianiem lub resetowaniem niezarządzanych zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30aa4-136">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>