<Type Name="Icon" FullName="System.Drawing.Icon">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f532b68a0c76bfabe50e75de922ee658daea4078" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36490674" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Icon : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Icon extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Icon" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Icon&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Icon sealed : MarshalByRefObject, ICloneable, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Icon = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.IconEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.IconConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje ikony systemu Windows, czyli małych bitmapy, który jest używany do reprezentowania obiektów. Ikony można traktować jako przezroczysty mapy bitowe, ale ich rozmiar jest określany przez system.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można utworzyć <xref:System.Drawing.Icon> obiektów z plików, strumienie lub zasoby osadzone. Aby uzyskać listę konstruktorów, zobacz <xref:System.Drawing.Icon.%23ctor%2A>. Można również przeprowadzić konwersję <xref:System.Drawing.Icon> do mapy bitowej przy użyciu <xref:System.Drawing.Icon.ToBitmap%2A> metody.  
  
 Ikona zasobów może zawierać wiele obrazów ikony. Jeden plik ikony mogą zawierać obrazy w kilku rozmiarów i liczby kolorów. Obraz, który jest używany w aplikacji, zależy od systemu operacyjnego i ustawień. Poniżej przedstawiono szczegóły typowy rozmiar ikony:  
  
-   16 pikseli x 16 pikseli  
  
-   32 piksele x 32 pikseli  
  
-   48 pikseli x 48 pikseli  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Icon.ToBitmap%2A> metody. W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Tworzenie formularza i wklej następujący kod do niego. Wywołanie `IconToBitmap` metody w postaci <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.MiscExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.MiscExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.MiscExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Icon (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Icon(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Icon : System.IO.Stream -&gt; System.Drawing.Icon" Usage="new System.Drawing.Icon stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień danych, z którego można załadować <see cref="T:System.Drawing.Icon" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> klasy ze strumienia określone dane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ikona zasobów może zawierać wiele obrazów ikony. Jeden plik ikony mogą zawierać obrazy w kilku rozmiarów i liczby kolorów. Obraz, który jest używany w aplikacji, zależy od systemu operacyjnego i ustawień. Poniżej przedstawiono szczegóły typowy rozmiar ikony:  
  
-   16 pikseli x 16 pikseli  
  
-   32 piksele x 32 pikseli  
  
-   48 pikseli x 48 pikseli  
  
 Ten konstruktor zwraca najmniejszą obrazu, który jest zawarty w określonego strumienia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Icon (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Icon(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Icon : string -&gt; System.Drawing.Icon" Usage="new System.Drawing.Icon fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Plik można załadować <see cref="T:System.Drawing.Icon" /> z.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> klasy z określonej nazwy pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ikona zasobów może zawierać wiele obrazów ikony. Jeden plik ikony mogą zawierać obrazy w kilku rozmiarów i liczby kolorów. Obraz, który jest używany w aplikacji, zależy od systemu operacyjnego i ustawień. Poniżej przedstawiono szczegóły typowy rozmiar ikony:  
  
-   16 pikseli x 16 pikseli  
  
-   32 piksele x 32 pikseli  
  
-   48 pikseli x 48 pikseli  
  
 Ten konstruktor zwraca najmniejszą obrazu, który znajduje się w określonym pliku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Icon (System.Drawing.Icon original, System.Drawing.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Icon original, valuetype System.Drawing.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Icon(System::Drawing::Icon ^ original, System::Drawing::Size size);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Icon : System.Drawing.Icon * System.Drawing.Size -&gt; System.Drawing.Icon" Usage="new System.Drawing.Icon (original, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Icon" />
        <Parameter Name="size" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Icon" /> z którego można załadować ikonę o nowym rozmiarze.</param>
        <param name="size">A <see cref="T:System.Drawing.Size" /> struktury, która określa wysokość i szerokość nowej <see cref="T:System.Drawing.Icon" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> klasy i próbuje odnaleźć wersji elementu ikonę, która odpowiada żądany rozmiar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie można odnaleźć wersji, który jest dokładnie zgodny rozmiar, najlepiej pasuje jest używany. Jeśli `original` parametr jest <xref:System.Drawing.Icon> zawierającego jeden rozmiar, ta metoda tworzy tylko ikonę duplikatu. Korzystanie z możliwości stretching <xref:System.Drawing.Graphics.DrawImage%2A> metody zmiany rozmiaru ikony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="original" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Icon (System.IO.Stream stream, System.Drawing.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.Drawing.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Icon(System::IO::Stream ^ stream, System::Drawing::Size size);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Icon : System.IO.Stream * System.Drawing.Size -&gt; System.Drawing.Icon" Usage="new System.Drawing.Icon (stream, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="size" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień, który zawiera dane ikony.</param>
        <param name="size">Wymagany rozmiar ikony.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> klasy o określonym rozmiarze z określonego strumienia.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> Jest <see langword="null" /> lub nie zawiera danych obrazu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Icon (string fileName, System.Drawing.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Drawing.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Icon(System::String ^ fileName, System::Drawing::Size size);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Icon : string * System.Drawing.Size -&gt; System.Drawing.Icon" Usage="new System.Drawing.Icon (fileName, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="size" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="fileName">Nazwa i ścieżka do pliku, który zawiera dane ikony.</param>
        <param name="size">Wymagany rozmiar ikony.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> klasy o określonym rozmiarze z określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony plik nie zawiera obrazu, który odpowiada wymagany rozmiar, zwracany jest ikonę, która ma najbliższy rozmiar.  
  
 `fileName` Powinna zawierać pełną ścieżkę, jeśli nie jest on w bieżącym katalogu aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="string" /> Jest <see langword="null" /> lub nie zawiera danych obrazu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Icon (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Icon(Type ^ type, System::String ^ resource);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Icon : Type * string -&gt; System.Drawing.Icon" Usage="new System.Drawing.Icon (type, resource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.Type" /> , który określa zestaw, w którym ma zostać wyszukane zasobu.</param>
        <param name="resource">Nazwa zasobu do załadowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> klasy z zasobów w określonym zestawie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Drawing.Icon> z zasobu z nazwą określoną przez `resource` zestawu zawierającego typ określony przez parametr `type` parametru.  
  
 Ten konstruktor łączy obszaru nazw danego typu oraz nazwę ciągu zasobu i wyszukuje dopasowania w manifeście zestawu. Na przykład można przekazać <xref:System.Windows.Forms.Control> typu i `Error.ico` do tego konstruktora który wyszukuje zasób o nazwie `System.Windows.Forms.Error.ico`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Icon.%23ctor%2A> konstruktora. Aby uruchomić ten przykład, Wklej kod w formularzu systemu Windows i obsługiwać formularza <xref:System.Windows.Forms.Control.Paint> zdarzeń. Wywołanie `ConstructAnIconFromAType` metody z <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.EventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#3)]
 [!code-vb[System.Drawing.Misc3#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ikona określony przez <paramref name="resource" /> nie można odnaleźć w zestawie, która zawiera określone <paramref name="type" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Icon (System.Drawing.Icon original, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Icon original, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Icon, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Icon(System::Drawing::Icon ^ original, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Icon : System.Drawing.Icon * int * int -&gt; System.Drawing.Icon" Usage="new System.Drawing.Icon (original, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Icon" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">Ikona inny rozmiar od obciążenia.</param>
        <param name="width">Szerokość ikonę Nowy.</param>
        <param name="height">Wysokość ikonę Nowy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> klasy i próbuje odnaleźć wersji elementu ikonę, która odpowiada żądany rozmiar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie można odnaleźć wersji, który jest dokładnie zgodny rozmiar, najlepiej pasuje jest używany. Jeśli `original` parametr jest <xref:System.Drawing.Icon> zawierającego jeden rozmiar, ta metoda tworzy tylko ikonę duplikatu. Korzystanie z możliwości stretching <xref:System.Drawing.Graphics.DrawImage%2A> metody zmiany rozmiaru ikony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Icon.ToBitmap%2A> metody. W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Tworzenie formularza i wklej następujący kod do niego. Wywołanie `IconToBitmap` metody w postaci <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.MiscExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.MiscExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.MiscExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="original" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Icon (System.IO.Stream stream, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Icon(System::IO::Stream ^ stream, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Icon : System.IO.Stream * int * int -&gt; System.Drawing.Icon" Usage="new System.Drawing.Icon (stream, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień danych, z którego można załadować ikony.</param>
        <param name="width">Szerokość w pikselach, ikony.</param>
        <param name="height">Wysokość w pikselach, ikony.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> klasy ze strumienia określone dane i o określonej szerokości i wysokości.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Icon (string fileName, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Icon(System::String ^ fileName, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Icon : string * int * int -&gt; System.Drawing.Icon" Usage="new System.Drawing.Icon (fileName, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileName">Nazwa i ścieżka do pliku, który zawiera <see cref="T:System.Drawing.Icon" /> danych.</param>
        <param name="width">Żądaną szerokość <see cref="T:System.Drawing.Icon" />.</param>
        <param name="height">Żądaną wysokość <see cref="T:System.Drawing.Icon" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Icon" /> z określona szerokość i wysokość z określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony plik nie zawiera obrazu, który jest zgodny z żądaną wysokość i szerokość, zwracany jest ikonę, która ma najbliższy rozmiar.  
  
 `fileName` Powinna zawierać pełną ścieżkę, jeśli nie jest on w bieżącym katalogu aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="string" /> Jest <see langword="null" /> lub nie zawiera danych obrazu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="icon.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Klony <see cref="T:System.Drawing.Icon" />, tworzenie duplikatów obrazu.</summary>
        <returns>Obiekt, który mogą być rzutowane na <see cref="T:System.Drawing.Icon" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="icon.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez to <see cref="T:System.Drawing.Icon" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie `Dispose` umożliwia zasoby, które są używane przez to <xref:System.Drawing.Icon> odbiorczego do innych celów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractAssociatedIcon">
      <MemberSignature Language="C#" Value="public static System.Drawing.Icon ExtractAssociatedIcon (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Icon ExtractAssociatedIcon(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.ExtractAssociatedIcon(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractAssociatedIcon (filePath As String) As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Icon ^ ExtractAssociatedIcon(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="static member ExtractAssociatedIcon : string -&gt; System.Drawing.Icon" Usage="System.Drawing.Icon.ExtractAssociatedIcon filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">Ścieżka do pliku zawierającego obraz.</param>
        <summary>Zwraca reprezentację ikona obrazu, który jest zawarty w określonym pliku.</summary>
        <returns>
          <see cref="T:System.Drawing.Icon" /> Reprezentację obrazu, który znajduje się w określonym pliku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżka względna jest rozpatrywane względem bieżącego katalogu roboczego.  
  
 Gdy <xref:System.Drawing.Icon.ExtractAssociatedIcon%2A> służy mapy bitowe, obraz miniatury mogą być zwrócone zamiast ikony, jeśli system, który działa aplikacja ma ustawienie rejestru, który powoduje, że pliki map bitowych jako obrazy miniatur.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Icon.ExtractAssociatedIcon%2A> metody. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `ExtractAssociatedIconEx` z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> obsługi zdarzeń.  
  
 [!code-csharp[System.Drawing.Misc3#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#2)]
 [!code-vb[System.Drawing.Misc3#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePath" /> Nie wskazuje prawidłowego pliku.  - lub - <paramref name="filePath" /> wskazuje ścieżkę Universal Naming Convention (UNC).</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Icon ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Icon ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="icon.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Drawing.Icon FromHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Icon FromHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As IntPtr) As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Icon ^ FromHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Drawing.Icon" Usage="System.Drawing.Icon.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Dojście systemu Windows do ikony.</param>
        <summary>Tworzy GDI + <see cref="T:System.Drawing.Icon" /> z określonego dojścia systemu Windows do ikony (<see langword="HICON" />).</summary>
        <returns>
          <see cref="T:System.Drawing.Icon" /> Ta metoda tworzy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przy użyciu tej metody, musi dysponować oryginalnego ikony przy użyciu `DestroyIcon` metoda w interfejsie API Win32, aby upewnić się, że zasoby są wydawane.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, który jest parametrem <xref:System.Windows.Forms.Control.Paint> obsługi zdarzeń. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Bitmap>.  
  
-   Rysuje tego obiektu na ekranie.  
  
-   Pobiera ikonę obsługę <xref:System.Drawing.Bitmap>.  
  
-   Ustawia <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=nameWithType> atrybutu formularza do ikony tworzone z dojścia.  
  
-   Wywołania funkcji Win32 API `DestroyIcon` aby zwolnić zasoby.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do kodu niezarządzanego. Związane z wyliczenia <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Icon.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Drawing.Icon.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera uchwytów okien tego <see cref="T:System.Drawing.Icon" />. To nie jest kopię dojście; zwolni go.</summary>
        <value>Obsługa systemu Windows dla ikony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można załadować mapy bitowej z <xref:System.Drawing.Icon> obsługi przy użyciu <xref:System.Drawing.GraphicsUnit> wyliczenie i sposobu użycia <xref:System.Drawing.Rectangle.Round%2A> metodę, by narysować prostokątne granice mapy bitowej.  
  
 W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Tworzenie formularza, który zawiera przycisk o nazwie `Button2`. Wklej kod do formularza i skojarzyć tę metodę przy użyciu przycisku <xref:System.Windows.Forms.Control.Click> zdarzeń.  
  
 [!code-cpp[System.Drawing.BitmapMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.BitmapMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BitmapMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Icon.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="System.Drawing.Icon.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wysokość tego <see cref="T:System.Drawing.Icon" />.</summary>
        <value>Wysokość tego <see cref="T:System.Drawing.Icon" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.Save(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (outputStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="icon.Save outputStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outputStream">
          <see cref="T:System.IO.Stream" /> Zapisać.</param>
        <summary>Powoduje to zapisanie <see cref="T:System.Drawing.Icon" /> na określonym produktem wyjściowym <see cref="T:System.IO.Stream" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Icon.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size" Usage="System.Drawing.Icon.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar to <see cref="T:System.Drawing.Icon" />.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> struktury, która określa szerokość i wysokość tego <see cref="T:System.Drawing.Icon" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełniania danych.</param>
        <param name="context">Miejsce docelowe (zobacz <see cref="T:System.Runtime.Serialization.StreamingContext" />) tej serializacji.</param>
        <summary>Wypełnia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> przy użyciu danych wymaganych do zserializowania obiektu docelowego.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do serializacji. Związane z wyliczenia <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ToBitmap">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap ToBitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap ToBitmap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.ToBitmap" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBitmap () As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ ToBitmap();" />
      <MemberSignature Language="F#" Value="member this.ToBitmap : unit -&gt; System.Drawing.Bitmap" Usage="icon.ToBitmap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Konwertuje to <see cref="T:System.Drawing.Icon" /> do interfejsu GDI + <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>A <see cref="T:System.Drawing.Bitmap" /> reprezentujący skonwertowany <see cref="T:System.Drawing.Icon" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przezroczystych obszarów ikony zostaną utracone, gdy zostanie przekonwertowane na mapę bitową i kolor przezroczysty wynikowy mapy bitowej jest równa `RGB(13,11,12)`. Zwrócony mapa bitowa ma taką samą wysokość i szerokość oryginalnego ikona.  
  
> [!NOTE]
>  Począwszy od wersji 4.6 framework — Obsługa została dodana do ramki PNG w plikach .ico. Aplikacje docelowe wcześniejszych wersji platformy, które są uruchomione na 4.6 usługi bits można jednak na nowe zachowanie, dodając następujący wiersz do `<runtime>` sekcji w pliku app.config:`<AppContextSwitchOverrides value="Switch.System.Drawing.DontSupportPngFramesInIcons=false" />`  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Drawing.Icon.ToBitmap%2A> metody. W tym przykładzie jest przeznaczony do użycia z formularzy systemu Windows. Tworzenie formularza i wklej następujący kod do niego. Wywołanie `IconToBitmap` metody w formularzu.<xref:System.Windows.Forms.Control.Paint> Program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs> .  
  
 [!code-cpp[System.Drawing.MiscExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.MiscExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.MiscExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Icon.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="icon.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg zrozumiałą dla użytkownika, który opisuje <see cref="T:System.Drawing.Icon" />.</summary>
        <returns>Ciąg opisujący <see cref="T:System.Drawing.Icon" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Icon.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="System.Drawing.Icon.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szerokość to <see cref="T:System.Drawing.Icon" />.</summary>
        <value>Szerokość to <see cref="T:System.Drawing.Icon" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>