<Type Name="Size" FullName="System.Drawing.Size">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ef2573bac51382559a4aa884a0848f16d102958" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68542936" /></Metadata><TypeSignature Language="C#" Value="public struct Size : IEquatable&lt;System.Drawing.Size&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Size extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Drawing.Size&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Size" />
  <TypeSignature Language="VB.NET" Value="Public Structure Size&#xA;Implements IEquatable(Of Size)" />
  <TypeSignature Language="C++ CLI" Value="public value class Size : IEquatable&lt;System::Drawing::Size&gt;" />
  <TypeSignature Language="F#" Value="type Size = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Drawing.Size&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.SizeConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Przechowuje uporządkowaną parę liczb całkowitych, które określają <see cref="P:System.Drawing.Size.Height" /> i. <see cref="P:System.Drawing.Size.Width" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.RectangleF> <xref:System.Drawing.Rectangle.Size%2A> <xref:System.Drawing.Rectangle> <xref:System.Drawing.Image> Klasasłuży<xref:System.Drawing.Icon> do określania wysokości i szerokości przez właściwość dla,, i innych klas graficznych. <xref:System.Drawing.Size> <xref:System.Drawing.Size> Operacje można wykonywać na podstawie przeciążonych operatorów, takich jak <xref:System.Drawing.Size.op_Addition%2A>, <xref:System.Drawing.Size.op_Subtraction%2A>, i <xref:System.Drawing.Size.op_Equality%2A>. Jednostka <xref:System.Drawing.Size.Height%2A> <xref:System.Drawing.Graphics.PageScale%2A> i <xref:System.Drawing.Size.Width%2A> strukturysą<xref:System.Drawing.Graphics.PageUnit%2A> zależne od ustawień i dla obiektu,któryjestużywanydorysowania.<xref:System.Drawing.Graphics> <xref:System.Drawing.Size>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Size" /> struktury z określonego <see cref="T:System.Drawing.Point" />elementu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Size (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.#ctor(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pt As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Size(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Size : System.Drawing.Point -&gt; System.Drawing.Size" Usage="new System.Drawing.Size pt" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Struktura, z której ma zostać zainicjowana ta <see cref="T:System.Drawing.Size" /> struktura. <see cref="T:System.Drawing.Point" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Size" /> struktury z określonej <see cref="T:System.Drawing.Point" /> struktury.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Size (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Size(int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Size : int * int -&gt; System.Drawing.Size" Usage="new System.Drawing.Size (width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">Składnik szerokości nowej <see cref="T:System.Drawing.Size" />.</param>
        <param name="height">Składnik wysokości nowej <see cref="T:System.Drawing.Size" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Size" /> struktury z określonych wymiarów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Drawing.Point.%23ctor%2A?displayProperty=nameWithType> konstruktorów i <xref:System.Drawing.Size.%23ctor%2A> i <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType> wyliczenia. Aby uruchomić ten przykład, wklej ten kod do formularza systemu Windows, który zawiera etykietę o `Label1` nazwie i `InitializeLabel1` Wywołaj metodę w Konstruktorze formularza.  
  
 [!code-cpp[System.Drawing.PointsAndSizes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.PointsAndSizes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.PointsAndSizes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size Add (System.Drawing.Size sz1, System.Drawing.Size sz2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size Add(valuetype System.Drawing.Size sz1, valuetype System.Drawing.Size sz2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (sz1 As Size, sz2 As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size Add(System::Drawing::Size sz1, System::Drawing::Size sz2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Drawing.Size * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Drawing.Size.Add (sz1, sz2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sz1" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="sz2" Type="System.Drawing.Size" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sz1">Pierwsza <see cref="T:System.Drawing.Size" /> struktura do dodania.</param>
        <param name="sz2">Druga <see cref="T:System.Drawing.Size" /> struktura do dodania.</param>
        <summary>Dodaje szerokość i wysokość jednej <see cref="T:System.Drawing.Size" /> struktury do szerokości i wysokości innej <see cref="T:System.Drawing.Size" /> struktury.</summary>
        <returns><see cref="T:System.Drawing.Size" /> Struktura, która jest wynikiem operacji dodawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Size.Add%2A> metody. Aby uruchomić ten przykład, wklej go do formularza systemu Windows. Obsługuj <xref:System.Windows.Forms.Control.Paint> zdarzenie formularza i `AddSizes` Wywołaj metodę z <xref:System.Windows.Forms.Control.Paint> metody obsługi zdarzeń, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#11)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size Ceiling (System.Drawing.SizeF value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size Ceiling(valuetype System.Drawing.SizeF value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.Ceiling(System.Drawing.SizeF)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (value As SizeF) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size Ceiling(System::Drawing::SizeF value);" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Drawing.SizeF -&gt; System.Drawing.Size" Usage="System.Drawing.Size.Ceiling value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Drawing.SizeF" /> Struktura do przekonwertowania.</param>
        <summary>Konwertuje określoną <see cref="T:System.Drawing.SizeF" /> strukturę <see cref="T:System.Drawing.Size" /> na strukturę przez zaokrąglenie wartości <see cref="T:System.Drawing.Size" /> struktury do następnych wartości liczb całkowitych.</summary>
        <returns>Struktura <see cref="T:System.Drawing.Size" /> , do której jest konwertowana ta metoda.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Drawing.Size Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Drawing.Size Empty" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Size.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As Size " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Drawing::Size Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Drawing.Size" Usage="System.Drawing.Size.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera strukturę, która <see cref="P:System.Drawing.Size.Height" /> ma wartość i <see cref="P:System.Drawing.Size.Width" /> równą 0. <see cref="T:System.Drawing.Size" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Drawing.Size other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Drawing.Size other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.Equals(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Size) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Drawing::Size other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Drawing.Size -&gt; bool" Usage="size.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="size.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><see cref="T:System.Object" /> Do przetestowania.</param>
        <summary>Testuje, czy określony obiekt jest <see cref="T:System.Drawing.Size" /> strukturą o takich samych wymiarach jak ta <see cref="T:System.Drawing.Size" /> struktura.</summary>
        <returns><see langword="true" />Jeśli <paramref name="obj" /> wartość <see cref="T:System.Drawing.Size" /> <see langword="false" />jest i ma taką samą szerokość i wysokość, w przeciwnym razie,. <see cref="T:System.Drawing.Size" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="size.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tej <see cref="T:System.Drawing.Size" /> struktury.</summary>
        <returns>Wartość całkowita określająca wartość skrótu dla tej <see cref="T:System.Drawing.Size" /> struktury.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Size.GetHashCode%2A> Należy unikać w zależności od wartości unikatowych, ponieważ dwa <xref:System.Drawing.Size> obiekty o takich samych wartościach <xref:System.Drawing.Size.Width%2A> i <xref:System.Drawing.Size.Height%2A> właściwości mogą zwracać ten sam kod skrótu. Takie zachowanie może ulec zmianie w przyszłych wydaniach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Size.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Drawing.Size.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia składnik pionowy tej <see cref="T:System.Drawing.Size" /> struktury.</summary>
        <value>Składnik pionowy tej <see cref="T:System.Drawing.Size" /> struktury, zwykle mierzony w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jednostka <xref:System.Drawing.Size.Height%2A> <xref:System.Drawing.Graphics.PageScale%2A> i <xref:System.Drawing.Size.Width%2A> strukturysą<xref:System.Drawing.Graphics.PageUnit%2A> zależne od ustawień i dla obiektu,któryjestużywanydorysowania.<xref:System.Drawing.Graphics> <xref:System.Drawing.Size>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Size.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Drawing.Size.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Testuje, <see cref="T:System.Drawing.Size" /> czy ta struktura ma szerokość i wysokość 0.</summary>
        <value>Ta właściwość zwraca <see langword="true" /> wartość, <see cref="T:System.Drawing.Size" /> <see langword="false" />Jeśli ta struktura ma szerokość i wysokość 0; w przeciwnym razie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size operator + (System.Drawing.Size sz1, System.Drawing.Size sz2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.Size op_Addition(valuetype System.Drawing.Size sz1, valuetype System.Drawing.Size sz2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (sz1 As Size, sz2 As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size operator +(System::Drawing::Size sz1, System::Drawing::Size sz2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Drawing.Size * System.Drawing.Size -&gt; System.Drawing.Size" Usage="sz1 + sz2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sz1" Type="System.Drawing.Size" />
        <Parameter Name="sz2" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="sz1">Pierwszy <see cref="T:System.Drawing.Size" /> do dodania.</param>
        <param name="sz2">Sekunda <see cref="T:System.Drawing.Size" /> do dodania.</param>
        <summary>Dodaje szerokość i wysokość jednej <see cref="T:System.Drawing.Size" /> struktury do szerokości i wysokości innej <see cref="T:System.Drawing.Size" /> struktury.</summary>
        <returns><see cref="T:System.Drawing.Size" /> Struktura, która jest wynikiem operacji dodawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Drawing.Size.op_Addition%2A> operatora. Przykład jest przeznaczony do użycia z Windows Forms. Aby uruchomić ten przykład, należy wkleić go do formularza zawierającego przycisk o nazwie `addButton` i `addButton_Click` skojarzyć <xref:System.Windows.Forms.Control.Click> metodę z zdarzeniem przycisku.  
  
 [!code-cpp[System.Drawing.PointsAndSizes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.PointsAndSizes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.PointsAndSizes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size operator / (System.Drawing.Size left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.Size op_Division(valuetype System.Drawing.Size left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Division(System.Drawing.Size,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As Size, right As Integer) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size operator /(System::Drawing::Size left, int right);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Drawing.Size * int -&gt; System.Drawing.Size" Usage="left / right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left">Dzielna.</param>
        <param name="right">Dzielnik.</param>
        <summary>Dzieli określony <see cref="T:System.Drawing.Size" /> przez określoną liczbę całkowitą.</summary>
        <returns>Nowy <see cref="T:System.Drawing.Size" />, który zawiera wynik <paramref name="left" />dzielenia odpowiednio na wysokość <paramref name="right" /> i <paramref name="left" />szerokość <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF operator / (System.Drawing.Size left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.SizeF op_Division(valuetype System.Drawing.Size left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Division(System.Drawing.Size,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As Size, right As Single) As SizeF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::SizeF operator /(System::Drawing::Size left, float right);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Drawing.Size * single -&gt; System.Drawing.SizeF" Usage="left / right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Single" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left">Dzielna.</param>
        <param name="right">Dzielnik.</param>
        <summary>Dzieli określony <see cref="T:System.Drawing.Size" /> przez określoną liczbę zmiennoprzecinkową o pojedynczej precyzji.</summary>
        <returns>Wynik dzielenia <paramref name="left" />szerokości i wysokości przez <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Drawing.Size sz1, System.Drawing.Size sz2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Drawing.Size sz1, valuetype System.Drawing.Size sz2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (sz1 As Size, sz2 As Size) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Drawing::Size sz1, System::Drawing::Size sz2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Drawing.Size * System.Drawing.Size -&gt; bool" Usage="sz1 = sz2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sz1" Type="System.Drawing.Size" />
        <Parameter Name="sz2" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="sz1"><see cref="T:System.Drawing.Size" /> Struktura po lewej stronie operatora równości.</param>
        <param name="sz2"><see cref="T:System.Drawing.Size" /> Struktura po prawej stronie operatora równości.</param>
        <summary>Testuje, <see cref="T:System.Drawing.Size" /> czy dwie struktury są równe.</summary>
        <returns><see langword="true" />Jeśli <paramref name="sz1" /> <see langword="false" />i <paramref name="sz2" /> mają równą szerokość i wysokość; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy punkty i rozmiary przy użyciu kilku operatorów przeciążonych zdefiniowanych dla tych typów. Pokazano również, <xref:System.Drawing.SystemPens> jak używać klasy.  
  
 Ten przykład jest przeznaczony do użycia z Windows Forms. Utwórz formularz, który zawiera <xref:System.Windows.Forms.Button> nazwę. `subtractButton` Wklej kod do `CreatePointsAndSizes` formularza i Wywołaj metodę z metody obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.PointsAndSizes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PointsAndSizes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PointsAndSizes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Drawing.Point (System.Drawing.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.Point op_Explicit(valuetype System.Drawing.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Explicit(System.Drawing.Size)~System.Drawing.Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Drawing::Point(System::Drawing::Size size);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Drawing.Size -&gt; System.Drawing.Point" Usage="System.Drawing.Size.op_Explicit size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="size"><see cref="T:System.Drawing.Size" /> Struktura do przekonwertowania.</param>
        <summary>Konwertuje określoną <see cref="T:System.Drawing.Size" /> strukturę <see cref="T:System.Drawing.Point" /> na strukturę.</summary>
        <returns><see cref="T:System.Drawing.Point" /> Struktura, do której ten operator jest konwertowany.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Drawing.SizeF (System.Drawing.Size p);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.SizeF op_Implicit(valuetype System.Drawing.Size p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Implicit(System.Drawing.Size)~System.Drawing.SizeF" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (p As Size) As SizeF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Drawing::SizeF(System::Drawing::Size p);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Drawing.Size -&gt; System.Drawing.SizeF" Usage="System.Drawing.Size.op_Implicit p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="p"><see cref="T:System.Drawing.Size" /> Struktura do przekonwertowania.</param>
        <summary>Konwertuje określoną <see cref="T:System.Drawing.Size" /> strukturę <see cref="T:System.Drawing.SizeF" /> na strukturę.</summary>
        <returns><see cref="T:System.Drawing.SizeF" /> Struktura, do której ten operator jest konwertowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Drawing.Color.G%2A>Poniższy przykład kodu demonstruje właściwości <xref:System.Drawing.Color.R%2A> <xref:System.Drawing.Color.B%2A> <xref:System.Drawing.Color.A%2A>,, , i i<xref:System.Drawing.Size.op_Implicit%2A>elementuczłonkowskiego. <xref:System.Drawing.Color>  
  
 Ten przykład został zaprojektowany do użycia z formularzem systemu Windows. Wklej kod do `ShowPropertiesOfSlateBlue` formularza i Wywołaj metodę z metody obsługi <xref:System.Windows.Forms.Control.Paint> zdarzeń formularza, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.PointsAndSizes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PointsAndSizes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PointsAndSizes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Drawing.Size sz1, System.Drawing.Size sz2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Drawing.Size sz1, valuetype System.Drawing.Size sz2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (sz1 As Size, sz2 As Size) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Drawing::Size sz1, System::Drawing::Size sz2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Drawing.Size * System.Drawing.Size -&gt; bool" Usage="System.Drawing.Size.op_Inequality (sz1, sz2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sz1" Type="System.Drawing.Size" />
        <Parameter Name="sz2" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="sz1"><see cref="T:System.Drawing.Size" /> Struktura po lewej stronie operatora nierówności.</param>
        <param name="sz2"><see cref="T:System.Drawing.Size" /> Struktura po prawej stronie operatora nierówności.</param>
        <summary>Testuje, <see cref="T:System.Drawing.Size" /> czy dwie struktury są różne.</summary>
        <returns><see langword="true" />Jeśli <paramref name="sz1" /> i<paramref name="sz2" /> różnią się szerokością lub wysokością; <see langword="false" /> if<paramref name="sz1" /> i są<paramref name="sz2" /> równe.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size operator * (System.Drawing.Size left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.Size op_Multiply(valuetype System.Drawing.Size left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Multiply(System.Drawing.Size,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Size, right As Integer) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size operator *(System::Drawing::Size left, int right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Drawing.Size * int -&gt; System.Drawing.Size" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left">Multiplicand.</param>
        <param name="right">Mnożnik.</param>
        <summary>Mnoży określony <see cref="T:System.Drawing.Size" /> przez określoną liczbę całkowitą.</summary>
        <returns>Wynik mnożenia <paramref name="left" />szerokości i wysokości przez <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF operator * (System.Drawing.Size left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.SizeF op_Multiply(valuetype System.Drawing.Size left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Multiply(System.Drawing.Size,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Size, right As Single) As SizeF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::SizeF operator *(System::Drawing::Size left, float right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Drawing.Size * single -&gt; System.Drawing.SizeF" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Single" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left">Multiplicand.</param>
        <param name="right">Mnożnik.</param>
        <summary>Mnoży określony <see cref="T:System.Drawing.Size" /> przez określoną liczbę zmiennoprzecinkową o pojedynczej precyzji.</summary>
        <returns>Wynik mnożenia <paramref name="left" />szerokości i wysokości przez <paramref name="right" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size operator * (int left, System.Drawing.Size right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.Size op_Multiply(int32 left, valuetype System.Drawing.Size right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Multiply(System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Integer, right As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size operator *(int left, System::Drawing::Size right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : int * System.Drawing.Size -&gt; System.Drawing.Size" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Drawing.Size" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left">Mnożnik.</param>
        <param name="right">Multiplicand.</param>
        <summary>Mnoży określoną liczbę całkowitą przez określoną <see cref="T:System.Drawing.Size" />wartość.</summary>
        <returns>Wynik mnożenia <paramref name="right" />szerokości i wysokości przez <paramref name="left" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF operator * (float left, System.Drawing.Size right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.SizeF op_Multiply(float32 left, valuetype System.Drawing.Size right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Multiply(System.Single,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Single, right As Size) As SizeF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::SizeF operator *(float left, System::Drawing::Size right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : single * System.Drawing.Size -&gt; System.Drawing.SizeF" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Drawing.Size" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left">Mnożnik.</param>
        <param name="right">Multiplicand.</param>
        <summary>Mnoży określoną liczbę zmiennoprzecinkową o pojedynczej precyzji przez określony <see cref="T:System.Drawing.Size" />.</summary>
        <returns>Wynik mnożenia <paramref name="right" />szerokości i wysokości przez <paramref name="left" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size operator - (System.Drawing.Size sz1, System.Drawing.Size sz2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Drawing.Size op_Subtraction(valuetype System.Drawing.Size sz1, valuetype System.Drawing.Size sz2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (sz1 As Size, sz2 As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size operator -(System::Drawing::Size sz1, System::Drawing::Size sz2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Drawing.Size * System.Drawing.Size -&gt; System.Drawing.Size" Usage="sz1 - sz2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sz1" Type="System.Drawing.Size" />
        <Parameter Name="sz2" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="sz1"><see cref="T:System.Drawing.Size" /> Struktura po lewej stronie operatora odejmowania.</param>
        <param name="sz2"><see cref="T:System.Drawing.Size" /> Struktura po prawej stronie operatora odejmowania.</param>
        <summary>Odejmuje szerokość i wysokość jednej <see cref="T:System.Drawing.Size" /> struktury od szerokości i wysokości innej <see cref="T:System.Drawing.Size" /> struktury.</summary>
        <returns><see cref="T:System.Drawing.Size" /> Struktura, która jest wynikiem operacji odejmowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Drawing.Size.op_Subtraction%2A> operatora. Przykład jest przeznaczony do użycia z Windows Forms. Aby uruchomić ten przykład, wklej go do formularza zawierającego przycisk o nazwie `subtractionButton` i `subtractButton_Click` Skojarz <xref:System.Windows.Forms.Control.Click> metodę z zdarzeniem przycisku.  
  
 [!code-cpp[System.Drawing.PointsAndSizes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.PointsAndSizes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.PointsAndSizes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size Round (System.Drawing.SizeF value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size Round(valuetype System.Drawing.SizeF value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.Round(System.Drawing.SizeF)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As SizeF) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size Round(System::Drawing::SizeF value);" />
      <MemberSignature Language="F#" Value="static member Round : System.Drawing.SizeF -&gt; System.Drawing.Size" Usage="System.Drawing.Size.Round value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Drawing.SizeF" /> Struktura do przekonwertowania.</param>
        <summary>Konwertuje określoną <see cref="T:System.Drawing.SizeF" /> strukturę <see cref="T:System.Drawing.Size" /> na strukturę przez zaokrąglenie wartości <see cref="T:System.Drawing.SizeF" /> struktury do najbliższych wartości całkowitych.</summary>
        <returns>Struktura <see cref="T:System.Drawing.Size" /> , do której jest konwertowana ta metoda.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ilustruje sposób używania metod <xref:System.Drawing.Size.Round%2A> statycznych i <xref:System.Drawing.Size.Truncate%2A> <xref:System.Drawing.Size>do konwersji <xref:System.Drawing.SizeF> do. Ten przykład jest przeznaczony do użycia z Windows Forms. Aby uruchomić ten przykład, wklej go w postaci zawierającej dwa <xref:System.Windows.Forms.Label> obiekty o nazwie `Label1` i `Label2`, a następnie Wywołaj tę metodę z konstruktora formularza.  
  
 [!code-cpp[System.Drawing.PointsAndSizes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.PointsAndSizes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.PointsAndSizes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size Subtract (System.Drawing.Size sz1, System.Drawing.Size sz2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size Subtract(valuetype System.Drawing.Size sz1, valuetype System.Drawing.Size sz2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (sz1 As Size, sz2 As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size Subtract(System::Drawing::Size sz1, System::Drawing::Size sz2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Drawing.Size * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Drawing.Size.Subtract (sz1, sz2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sz1" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="sz2" Type="System.Drawing.Size" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sz1"><see cref="T:System.Drawing.Size" /> Struktura po lewej stronie operatora odejmowania.</param>
        <param name="sz2"><see cref="T:System.Drawing.Size" /> Struktura po prawej stronie operatora odejmowania.</param>
        <summary>Odejmuje szerokość i wysokość jednej <see cref="T:System.Drawing.Size" /> struktury od szerokości i wysokości innej <see cref="T:System.Drawing.Size" /> struktury.</summary>
        <returns><see cref="T:System.Drawing.Size" /> Struktura, która jest wynikiem operacji odejmowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Size.Subtract%2A> metody. Aby uruchomić ten przykład, wklej go do formularza systemu Windows. Obsługuj <xref:System.Windows.Forms.Control.Paint> zdarzenie formularza i `SubtractSizes` Wywołaj metodę z <xref:System.Windows.Forms.Control.Paint> metody obsługi zdarzeń, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#12)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="size.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy ciąg czytelny dla człowieka, który reprezentuje <see cref="T:System.Drawing.Size" /> tę strukturę.</summary>
        <returns>Ciąg, który reprezentuje tę <see cref="T:System.Drawing.Size" />wartość.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size Truncate (System.Drawing.SizeF value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size Truncate(valuetype System.Drawing.SizeF value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Size.Truncate(System.Drawing.SizeF)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (value As SizeF) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size Truncate(System::Drawing::SizeF value);" />
      <MemberSignature Language="F#" Value="static member Truncate : System.Drawing.SizeF -&gt; System.Drawing.Size" Usage="System.Drawing.Size.Truncate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Drawing.SizeF" /> Struktura do przekonwertowania.</param>
        <summary>Konwertuje określoną <see cref="T:System.Drawing.SizeF" /> strukturę <see cref="T:System.Drawing.Size" /> na strukturę przez obcinanie wartości <see cref="T:System.Drawing.SizeF" /> struktury do następnych niższych wartości całkowitych.</summary>
        <returns>Struktura <see cref="T:System.Drawing.Size" /> , do której jest konwertowana ta metoda.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ilustruje sposób używania metod <xref:System.Drawing.Size.Round%2A> statycznych i <xref:System.Drawing.Size.Truncate%2A> <xref:System.Drawing.Size>do konwersji <xref:System.Drawing.SizeF> do. Ten przykład jest przeznaczony do użycia z Windows Forms. Aby uruchomić ten przykład, wklej go w postaci zawierającej dwa <xref:System.Windows.Forms.Label> obiekty o nazwie `Label1` i `Label2`, a następnie Wywołaj tę metodę z konstruktora formularza.  
  
 [!code-cpp[System.Drawing.PointsAndSizes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.PointsAndSizes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.PointsAndSizes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Size.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Drawing.Size.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia składnik poziomy tej <see cref="T:System.Drawing.Size" /> struktury.</summary>
        <value>Poziomy składnik tej <see cref="T:System.Drawing.Size" /> struktury, zwykle mierzony w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jednostka <xref:System.Drawing.Size.Height%2A> <xref:System.Drawing.Graphics.PageScale%2A> i <xref:System.Drawing.Size.Width%2A> strukturysą<xref:System.Drawing.Graphics.PageUnit%2A> zależne od ustawień i dla obiektuużywanegodorysowania.<xref:System.Drawing.Graphics> <xref:System.Drawing.Size>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>