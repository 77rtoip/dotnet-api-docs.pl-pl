<Type Name="EventHandlerService" FullName="System.Windows.Forms.Design.EventHandlerService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b98c7fee8054b90a311227e7d7a7161ae16985a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69202950" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventHandlerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.EventHandlerService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerService" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerService sealed" />
  <TypeSignature Language="F#" Value="type EventHandlerService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia systematyczne metody zarządzania obsłudze zdarzeń dla bieżącego dokumentu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deweloperzy mogą chcieć napisać kod w jednym miejscu, który obsługuje zdarzenia określonego typu.  
  
 Deweloperzy mogą również wymagać globalnego zmiany zachowania programów obsługi dla określonych zdarzeń lub typów zdarzeń, które mogą być dystrybuowane między składnikami projektanta.  
  
 Projektanci dla typowego projektu to wiele różnych obiektów, dzięki czemu może być przydatna lista i przechowywanie odwołań do tych zdarzeń ze wspólnego miejsca.  
  
 Ta usługa implementuje "stos zdarzeń", który zawiera bieżący zestaw programów obsługi zdarzeń. Stos może mieć różne typy obsługi na stosie.  
  
 Na przykład Projektant może wypchnąć lub dodać program obsługi klawiatury oraz procedurę obsługi myszy na stosie. Gdy projektant żąda procedury obsługi zdarzeń, usługa znajdzie na stosie procedurę obsługi najwyższego poziomu zgodną z żądaną klasą.  
  
 W ten sposób można rozszerzyć usługę do dowolnego schematu zdarzeń, a także zezwalać na zamienienie określonych typów programów obsługi zdarzeń. Można na przykład zastąpić programy obsługi zdarzeń myszy bez wpływu na programy obsługi zdarzeń menu lub programy obsługi zdarzeń klawiatury.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerService (System.Windows.Forms.Control focusWnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control focusWnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (focusWnd As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerService(System::Windows::Forms::Control ^ focusWnd);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.EventHandlerService : System.Windows.Forms.Control -&gt; System.Windows.Forms.Design.EventHandlerService" Usage="new System.Windows.Forms.Design.EventHandlerService focusWnd" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="focusWnd" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="focusWnd"><see cref="T:System.Windows.Forms.Control" /> Który jest zaprojektowany.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHandlerChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EventHandlerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EventHandlerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventHandlerChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ EventHandlerChanged;" />
      <MemberSignature Language="F#" Value="member this.EventHandlerChanged : EventHandler " Usage="member this.EventHandlerChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Forms.Design.IEventHandlerService.EventHandlerChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wyzwala zdarzenie OnEventHandlerChanged.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusWindow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control FocusWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control FocusWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusWindow As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ FocusWindow { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusWindow : System.Windows.Forms.Control" Usage="System.Windows.Forms.Design.EventHandlerService.FocusWindow" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.Design.IEventHandlerService.FocusWindow</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontrolkę, do której są dołączone programy obsługi zdarzeń.</summary>
        <value>, <see cref="T:System.Windows.Forms.Control" /> Który został dołączony przez Konstruktor.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public object GetHandler (Type handlerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetHandler(class System.Type handlerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHandler (handlerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetHandler(Type ^ handlerType);" />
      <MemberSignature Language="F#" Value="abstract member GetHandler : Type -&gt; obj&#xA;override this.GetHandler : Type -&gt; obj" Usage="eventHandlerService.GetHandler handlerType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Design.IEventHandlerService.GetHandler(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handlerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="handlerType">Typ procedury obsługi, która ma zostać pobrana.</param>
        <summary>Pobiera obecnie aktywną procedurę obsługi zdarzeń określonego typu.</summary>
        <returns>Wystąpienie procedury obsługi lub <see langword="null" /> Jeśli nie ma procedury obsługi żądanego typu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nigdy nie należy przechować tej wartości, ponieważ inne składniki są wolne, aby je zmienić. To wywołanie jest dość szybkie, ale szczególnie w przypadku, gdy zawsze jest proszony o ten sam typ procedury obsługi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopHandler">
      <MemberSignature Language="C#" Value="public void PopHandler (object handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PopHandler(object handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopHandler (handler As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PopHandler(System::Object ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member PopHandler : obj -&gt; unit&#xA;override this.PopHandler : obj -&gt; unit" Usage="eventHandlerService.PopHandler handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Design.IEventHandlerService.PopHandler(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handler">Program obsługi do usunięcia ze stosu.</param>
        <summary>Pop, że dany program obsługi znajduje się poza stosem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli program obsługi nie jest składnikiem najwyższego poziomu na stosie, spowoduje to wyświetlenie wszystkich programów obsługi do i włącznie z obsługą.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushHandler">
      <MemberSignature Language="C#" Value="public void PushHandler (object handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushHandler(object handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushHandler (handler As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PushHandler(System::Object ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member PushHandler : obj -&gt; unit&#xA;override this.PushHandler : obj -&gt; unit" Usage="eventHandlerService.PushHandler handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Design.IEventHandlerService.PushHandler(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handler">Procedura obsługi do dodania do stosu.</param>
        <summary>Wypchnięcie nowego programu obsługi zdarzeń na stosie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta procedura obsługi będzie używana przez wszystkie składniki żądające zgodnego typu procedury obsługi. Jeśli ta procedura obsługi nie obsługuje żądanego typu, zostanie użyta Następna procedura obsługi na stosie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
