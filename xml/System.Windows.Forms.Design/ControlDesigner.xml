<Type Name="ControlDesigner" FullName="System.Windows.Forms.Design.ControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1dec612ca66c97024e6b22bb564396b636e382b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36357436" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits ComponentDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::ComponentModel::Design::ComponentDesigner" />
  <TypeSignature Language="F#" Value="type ControlDesigner = class&#xA;    inherit ComponentDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.ComponentDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="aa34e-101">Rozszerza zachowanie tryb projektowania <see cref="T:System.Windows.Forms.Control" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa34e-101">Extends the design mode behavior of a <see cref="T:System.Windows.Forms.Control" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-102"><xref:System.Windows.Forms.Design.ControlDesigner> udostępnia klasę podstawową dla projektantów składników, które pochodzą z <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="aa34e-102"><xref:System.Windows.Forms.Design.ControlDesigner> provides a base class for designers of components that derive from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="aa34e-103">Oprócz tych metod i funkcji dziedziczone z <xref:System.ComponentModel.Design.ComponentDesigner> klasy <xref:System.Windows.Forms.Design.ControlDesigner> udostępnia dodatkowe metody do obsługi rozszerzenia i zmiany zachowania skojarzone <xref:System.Windows.Forms.Control> w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-103">In addition to the methods and functionality inherited from the <xref:System.ComponentModel.Design.ComponentDesigner> class, <xref:System.Windows.Forms.Design.ControlDesigner> provides additional methods to support extending and altering the behavior of an associated <xref:System.Windows.Forms.Control> at design time.</span></span>  
  
 <span data-ttu-id="aa34e-104">Projektant można skojarzyć z typem przy użyciu <xref:System.ComponentModel.DesignerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="aa34e-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="aa34e-105">Aby uzyskać przegląd metod dostosowywania zachowania w czasie projektowania, zobacz [rozszerzenie obsługi w czasie projektowania](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span><span class="sxs-lookup"><span data-stu-id="aa34e-105">For an overview of customizing design time behavior, see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa34e-106">Poniższy przykład <xref:System.Windows.Forms.Design.ControlDesigner> implementacji pokazuje Obsługa `MouseEnter` i `MouseLeave` zdarzenia, rysunek formantu z kodu projektanta i używając części <xref:System.ComponentModel.Design.IDesignerFilter> interfejsu, aby dodać właściwość formantu w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-106">The following example <xref:System.Windows.Forms.Design.ControlDesigner> implementation demonstrates handling `MouseEnter` and `MouseLeave` events, drawing on a control from designer code, and using part of the <xref:System.ComponentModel.Design.IDesignerFilter> interface to add a property for the control at design time.</span></span> <span data-ttu-id="aa34e-107">Następujący przykładowy kod zawiera projektanta i przykładowe kontrolki użytkownika skojarzonego z nim.</span><span class="sxs-lookup"><span data-stu-id="aa34e-107">The following sample code contains a designer and a sample user control associated with the designer.</span></span> <span data-ttu-id="aa34e-108">Do kompilowania tego przykładu, skompilować próbki w bibliotece klas Dodaj odwołanie do biblioteki do projektu formularzy systemu Windows, dodaj go do przybornika i dodać wystąpienia formantu do formularza.</span><span class="sxs-lookup"><span data-stu-id="aa34e-108">To build this sample, compile the sample into a class library, add a reference to the library to a Windows Forms project, add the control to the Toolbox, and add an instance of the control to your form.</span></span> <span data-ttu-id="aa34e-109">Po wskazaniu formantu, wewnętrzny konturu obwodowej formantu zostanie wyróżniona i odpowiada kolor używany do rysowania konturu `OutlineColor` wymienionych właściwości projektanta został dodany do właściwości formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-109">When you point to the control, the inner outline of the perimeter of the control is highlighted, and the color used to draw the outline corresponds to the `OutlineColor` property that the designer has added to the properties listed for the control.</span></span>  
  
 <span data-ttu-id="aa34e-110">Dodaj odwołanie do zestawu System.Design skompilować przykładów kodu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-110">Add a reference to the System.Design assembly to compile the code example.</span></span>  
  
 [!code-cpp[ControlDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#1)]
 [!code-csharp[ControlDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#1)]
 [!code-vb[ControlDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accessibilityObj">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.AccessibleObject accessibilityObj;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Windows.Forms.AccessibleObject accessibilityObj" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj" />
      <MemberSignature Language="VB.NET" Value="Protected accessibilityObj As AccessibleObject " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Windows::Forms::AccessibleObject ^ accessibilityObj;" />
      <MemberSignature Language="F#" Value="val mutable accessibilityObj : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Design.ControlDesigner.accessibilityObj" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-112">Określa obiekt ułatwień dostępu dla projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-112">Specifies the accessibility object for the designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-113">Wartość domyślna to `null`.</span><span class="sxs-lookup"><span data-stu-id="aa34e-113">The default value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Design.ControlDesigner.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-114">Pobiera <see cref="T:System.Windows.Forms.AccessibleObject" /> przypisany do kontrolki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-114">Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-115">
            <see cref="T:System.Windows.Forms.AccessibleObject" /> Przypisany do kontrolki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-115">The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-116">Aby uzyskać więcej informacji na temat dostępnych obiektów Zobacz sekcję Active Accessibility w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="aa34e-116">For more information about accessible objects, see the Active Accessibility section of the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedComponents : System.Collections.ICollection" Usage="System.Windows.Forms.Design.ControlDesigner.AssociatedComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-117">Pobiera kolekcję skojarzone z danym składnikiem zarządzane przez projektanta składników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-117">Gets the collection of components associated with the component managed by the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-118">Składniki, które są skojarzone z składników zarządzanych przez projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-118">The components that are associated with the component managed by the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-119">Ta właściwość wskazuje wszystkie składniki, aby skopiować lub przenieść wraz ze składników zarządzanych przez projektanta podczas kopiowania, przeciągnij lub operacji przenoszenia.</span><span class="sxs-lookup"><span data-stu-id="aa34e-119">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="aa34e-120">Jeśli ta kolekcja zawiera odwołania do innych składników w bieżącym dokumencie trybu projektowania, składniki te zostaną skopiowane wraz ze składników zarządzanych przez projektanta podczas operacji kopiowania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-120">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="aa34e-121">Po wybraniu składnika zarządzane przez projektanta tej kolekcji jest wypełniony wszystkich zagnieżdżonych formantów.</span><span class="sxs-lookup"><span data-stu-id="aa34e-121">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="aa34e-122">Ta kolekcja może również zawierać inne składniki, takie jak przyciski paska narzędzi.</span><span class="sxs-lookup"><span data-stu-id="aa34e-122">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeHandles">
      <MemberSignature Language="C#" Value="public bool AutoResizeHandles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoResizeHandles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoResizeHandles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoResizeHandles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoResizeHandles : bool with get, set" Usage="System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-123">Pobiera lub ustawia wartość wskazującą czy zmienić rozmiar alokacji dojścia zależy od wartości <see cref="P:System.Windows.Forms.Control.AutoSize" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-123">Gets or sets a value indicating whether resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-124">
            <see langword="true" /> Jeśli rozmiar alokacji dojścia zależy od wartości <see cref="P:System.Windows.Forms.Control.AutoSize" /> i <see langword="AutoSizeMode" /> właściwości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-124">
              <see langword="true" /> if resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> and <see langword="AutoSizeMode" /> properties; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa34e-125">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-125">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseWndProc">
      <MemberSignature Language="C#" Value="protected void BaseWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="member this.BaseWndProc :  -&gt; unit" Usage="controlDesigner.BaseWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="aa34e-126">
            <see cref="T:System.Windows.Forms.Message" /> Do procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-126">The <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-127">Przetwarza wiadomości systemu Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-127">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-128">Ta metoda powoduje, że komunikat, który ma być przetwarzane przez system Windows, pomijanie formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-128">This method causes the message to be processed by Windows, skipping the control.</span></span> <span data-ttu-id="aa34e-129">Jest to przydatne, jeśli chcesz zablokować wiadomości z przejściem do formantu, ale nie chcesz zablokować jego przejściem do systemu Windows, ponieważ może spowodować inne komunikaty do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-129">This is useful if you want to block the message from getting to the control, but you do not want to block it from getting to Windows itself because it can cause other messages to be generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BehaviorService">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property BehaviorService As BehaviorService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Design::Behavior::BehaviorService ^ BehaviorService { System::Windows::Forms::Design::Behavior::BehaviorService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BehaviorService : System.Windows.Forms.Design.Behavior.BehaviorService" Usage="System.Windows.Forms.Design.ControlDesigner.BehaviorService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.BehaviorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-130">Pobiera <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> ze środowiska projektowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-130">Gets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> from the design environment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-131">
            <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, Lub <see langword="null" /> Jeśli usługa jest niedostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-131">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, or <see langword="null" /> if the service is unavailable.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public virtual bool CanBeParentedTo (System.ComponentModel.Design.IDesigner parentDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBeParentedTo(class System.ComponentModel.Design.IDesigner parentDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBeParentedTo (parentDesigner As IDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanBeParentedTo(System::ComponentModel::Design::IDesigner ^ parentDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CanBeParentedTo : System.ComponentModel.Design.IDesigner -&gt; bool&#xA;override this.CanBeParentedTo : System.ComponentModel.Design.IDesigner -&gt; bool" Usage="controlDesigner.CanBeParentedTo parentDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentDesigner" Type="System.ComponentModel.Design.IDesigner" />
      </Parameters>
      <Docs>
        <param name="parentDesigner">
          <span data-ttu-id="aa34e-132">
            <see cref="T:System.ComponentModel.Design.IDesigner" /> Który zarządza formantu do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-132">The <see cref="T:System.ComponentModel.Design.IDesigner" /> that manages the control to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-133">Wskazuje, jeśli formant tego projektanta może być elementem nadrzędnym przez formant określony Projektant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-133">Indicates if this designer's control can be parented by the control of the specified designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa34e-134">
            <see langword="true" /> Jeśli formant jest zarządzana przez określony Projektant można nadrzędnych formantu zarządzanych przez tego projektanta; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-134">
              <see langword="true" /> if the control managed by the specified designer can parent the control managed by this designer; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-135">Ta metoda jest przydatna przy testowaniu, czy konkretny typ nadrzędny może być elementem nadrzędnym formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-135">This method is useful for testing whether a control can be parented by a particular type of parent.</span></span> <span data-ttu-id="aa34e-136">Na przykład <xref:System.Windows.Forms.TabPage> tylko może być elementem nadrzędnym formantów przez <xref:System.Windows.Forms.TabControl> kontrolki.</span><span class="sxs-lookup"><span data-stu-id="aa34e-136">For example, <xref:System.Windows.Forms.TabPage> controls can only be parented by <xref:System.Windows.Forms.TabControl> controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa34e-137">Ta metoda nie jest wywoływana, gdy element zostanie przeciągnięty z **przybornika** na powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-137">This method is not called when an item is dragged from the **Toolbox** onto the design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.Control" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Windows.Forms.Control" Usage="System.Windows.Forms.Design.ControlDesigner.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-138">Pobiera formant, który jest projektowania projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-138">Gets the control that the designer is designing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-139">Formant, który jest projektowania projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-139">The control that the designer is designing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="member this.DefWndProc :  -&gt; unit" Usage="controlDesigner.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="aa34e-140">
            <see cref="T:System.Windows.Forms.Message" /> Do procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-140">The <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-141">Udostępnia domyślną przetwarzania komunikatów systemu Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-141">Provides default processing for Windows messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-142">Ta metoda powoduje, że komunikat, który ma być przetwarzane przez formant, a nie przez projektanta.</span><span class="sxs-lookup"><span data-stu-id="aa34e-142">This method causes the message to be processed by the control, rather than by the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayError">
      <MemberSignature Language="C#" Value="protected void DisplayError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisplayError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisplayError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisplayError(Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.DisplayError : Exception -&gt; unit" Usage="controlDesigner.DisplayError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="aa34e-143">
            <see cref="T:System.Exception" /> Do wyświetlenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-143">The <see cref="T:System.Exception" /> to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-144">Wyświetla informacje o określonej wartości atrybutu wyjątku dla użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-144">Displays information about the specified exception to the user.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="controlDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="aa34e-145">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-145">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-146">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-146">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-147">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="aa34e-147">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="aa34e-148">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="aa34e-148">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="aa34e-149"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="aa34e-149"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="aa34e-150">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Windows.Forms.Design.ControlDesigner> odwołania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-150">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Design.ControlDesigner> references.</span></span> <span data-ttu-id="aa34e-151">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-151">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="aa34e-152">
            <para>
              <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty. W przypadku przesłaniania <see langword="Dispose(Boolean)" />, nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />. Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenia Resources](~/docs/standard/garbage-collection/unmanaged.md) niezarządzane i [zastąpienie metody Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-152">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="EnableDesignMode">
      <MemberSignature Language="C#" Value="protected bool EnableDesignMode (System.Windows.Forms.Control child, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool EnableDesignMode(class System.Windows.Forms.Control child, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EnableDesignMode (child As Control, name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool EnableDesignMode(System::Windows::Forms::Control ^ child, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.EnableDesignMode : System.Windows.Forms.Control * string -&gt; bool" Usage="controlDesigner.EnableDesignMode (child, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="aa34e-153">Obiekt podrzędny kontroli dla projektowania zostanie włączony tryb.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-153">The child control for which design mode will be enabled.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="aa34e-154">Nazwa <c>podrzędne</c> jak widoczne dla użytkownika końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-154">The name of <c>child</c> as exposed to the end user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-155">Umożliwia zaprojektowanie funkcjonalność czasu dla formantu podrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-155">Enables design time functionality for a child control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa34e-156">
            <see langword="true" /> Jeśli formant podrzędny może być włączone dla czasu projektowania; <see langword="false" /> Jeśli nie obsługuje hostingu infrastruktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-156">
              <see langword="true" /> if the child control could be enabled for design time; <see langword="false" /> if the hosting infrastructure does not support it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-157">Określony przez formant podrzędny `child` jest elementem podrzędnym tego projektanta formantów formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-157">The child control specified by `child` is a child of this control designer's control.</span></span> <span data-ttu-id="aa34e-158">Obiekt podrzędny nie uczestniczy bezpośrednio w trwałości, ale będzie, jeśli jest uwidaczniany jako właściwość formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-158">The child does not directly participate in persistence, but it will if it is exposed as a property of the main control.</span></span> <span data-ttu-id="aa34e-159">Należy wziąć pod uwagę kontroli, takich jak <xref:System.Windows.Forms.SplitContainer>: ma dwa panele `Panel1` i `Panel2`.</span><span class="sxs-lookup"><span data-stu-id="aa34e-159">Consider a control like the <xref:System.Windows.Forms.SplitContainer>: it has two panels, `Panel1` and `Panel2`.</span></span> <span data-ttu-id="aa34e-160">Panele te są udostępniane za pośrednictwem tylko do odczytu <xref:System.Windows.Forms.SplitContainer.Panel1%2A> i <xref:System.Windows.Forms.SplitContainer.Panel2%2A> właściwości <xref:System.Windows.Forms.SplitContainer> formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-160">These panels are exposed through read only <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> properties on the <xref:System.Windows.Forms.SplitContainer> control.</span></span> <span data-ttu-id="aa34e-161"><xref:System.Windows.Forms.SplitContainer> Wywołania projektanta formantu <xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A> dla każdego panelu, dzięki czemu inne składniki, które ma być przerwane na nich.</span><span class="sxs-lookup"><span data-stu-id="aa34e-161">The <xref:System.Windows.Forms.SplitContainer> control's designer calls <xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A> for each panel, which allows other components to be dropped on them.</span></span> <span data-ttu-id="aa34e-162">Jednak aby zawartość <xref:System.Windows.Forms.SplitContainer.Panel1%2A> i <xref:System.Windows.Forms.SplitContainer.Panel2%2A> można zapisać <xref:System.Windows.Forms.SplitContainer> kontrolki musi ujawniać panele jako właściwości publiczne.</span><span class="sxs-lookup"><span data-stu-id="aa34e-162">But, in order for the contents of <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> to be saved, the <xref:System.Windows.Forms.SplitContainer> control itself must expose the panels as public properties.</span></span>  
  
 <span data-ttu-id="aa34e-163">Nazwy formantów muszą być unikatowe w obrębie projektanta formantów, ale nie są one wymagane unikatowa względem dzieci innych projektantów formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-163">Control names must be unique within a control designer, but they are not required to be unique with respect to the children of other control designers.</span></span>  
  
 <span data-ttu-id="aa34e-164">Do obsługi tej funkcji, musi ujawniać hostingu infrastruktury <xref:System.ComponentModel.INestedContainer> klasy jako usługę za pomocą witryny.</span><span class="sxs-lookup"><span data-stu-id="aa34e-164">To support this feature, the hosting infrastructure must expose the <xref:System.ComponentModel.INestedContainer> class as a service through the site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa34e-165">
            <paramref name="child" /> lub <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-165">
              <paramref name="child" /> or <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableDragDrop">
      <MemberSignature Language="C#" Value="protected void EnableDragDrop (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnableDragDrop(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnableDragDrop (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnableDragDrop(bool value);" />
      <MemberSignature Language="F#" Value="member this.EnableDragDrop : bool -&gt; unit" Usage="controlDesigner.EnableDragDrop value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="aa34e-166">
            <see langword="true" /> Aby włączyć obsługę przeciągania i upuszczania formantu; <see langword="false" /> Jeśli formant nie ma obsługi przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-166">
              <see langword="true" /> to enable drag-and-drop support for the control; <see langword="false" /> if the control should not have drag-and-drop support.</span>
          </span>
          <span data-ttu-id="aa34e-167">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-167">The default is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-168">Włącza lub wyłącza obsługę przeciągania i upuszczania formantu projektowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-168">Enables or disables drag-and-drop support for the control being designed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-169">Wartość domyślna `false` Określa, że formant nie może mieć elementów podrzędnych przeciągnięto w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-169">The default value of `false` specifies that a control cannot have children dragged onto it at design time.</span></span> <span data-ttu-id="aa34e-170">Aby umożliwić formantu nadrzędnego innych formantów w czasie projektowania, skojarzyć ją z projektanta, która jest pochodną <xref:System.Windows.Forms.Design.ParentControlDesigner>.</span><span class="sxs-lookup"><span data-stu-id="aa34e-170">To allow a control to parent other controls at design time, associate it with a designer that derives from <xref:System.Windows.Forms.Design.ParentControlDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDragRect">
      <MemberSignature Language="C#" Value="protected virtual bool EnableDragRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDragRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnableDragRect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool EnableDragRect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableDragRect : bool" Usage="System.Windows.Forms.Design.ControlDesigner.EnableDragRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-171">Pobiera wartość wskazującą czy przeciągnij prostokąty mogą być wystawiane dla tego składnika projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-171">Gets a value indicating whether drag rectangles can be drawn on this designer component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-172">
            <see langword="true" /> Jeśli przeciągania mogą być wystawiane prostokąty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-172">
              <see langword="true" /> if drag rectangles can be drawn; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlGlyph">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetControlGlyph (selectionType As GlyphSelectionType) As ControlBodyGlyph" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Design::Behavior::ControlBodyGlyph ^ GetControlGlyph(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetControlGlyph : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.ControlBodyGlyph&#xA;override this.GetControlGlyph : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.ControlBodyGlyph" Usage="controlDesigner.GetControlGlyph selectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.ControlBodyGlyph</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType">
          <span data-ttu-id="aa34e-173">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> wartość, która określa stan zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-173">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-174">Zwraca <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> reprezentujący granicami tego formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-174">Returns a <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa34e-175">A <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> reprezentujący granicami tego formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-175">A <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlyphs (selectionType As GlyphSelectionType) As GlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::Behavior::GlyphCollection ^ GetGlyphs(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetGlyphs : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.GlyphCollection&#xA;override this.GetGlyphs : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.GlyphCollection" Usage="controlDesigner.GetGlyphs selectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.GlyphCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType">
          <span data-ttu-id="aa34e-176">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> wartość, która określa stan zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-176">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-177">Pobiera kolekcję <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> obiekty reprezentujące obramowanie wyboru i uchwytów dla formantu standardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-177">Gets a collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects representing the selection borders and grab handles for a standard control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa34e-178">Kolekcja <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-178">A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-179">Należy pamiętać, że na podstawie `selectionType`, <xref:System.Windows.Forms.Design.Behavior.Glyph> zwracanych obiektów reprezentuje jeden z tych stanów wyboru:</span><span class="sxs-lookup"><span data-stu-id="aa34e-179">Note that based on `selectionType`, the <xref:System.Windows.Forms.Design.Behavior.Glyph> objects returned will represent one of these selection states:</span></span>  
  
-   <span data-ttu-id="aa34e-180">Obramowanie wyboru pełni o zmiennym rozmiarze z uchwytów;</span><span class="sxs-lookup"><span data-stu-id="aa34e-180">A fully resizable selection border with grab handles;</span></span>  
  
-   <span data-ttu-id="aa34e-181">Obramowanie wyboru Zablokowane;</span><span class="sxs-lookup"><span data-stu-id="aa34e-181">A locked selection border;</span></span>  
  
-   <span data-ttu-id="aa34e-182">Pojedynczego wyboru "hidden" <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span><span class="sxs-lookup"><span data-stu-id="aa34e-182">A single 'hidden' selection <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHitTest">
      <MemberSignature Language="C#" Value="protected virtual bool GetHitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetHitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetHitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="abstract member GetHitTest : System.Drawing.Point -&gt; bool&#xA;override this.GetHitTest : System.Drawing.Point -&gt; bool" Usage="controlDesigner.GetHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="aa34e-183">A <see cref="T:System.Drawing.Point" /> wskazującą położenie, w którym został kliknięty przycisk myszy, we współrzędnych ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-183">A <see cref="T:System.Drawing.Point" /> indicating the position at which the mouse was clicked, in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-184">Wskazuje, czy kliknięcie myszki w określonym punkcie powinien zostać obsłużony przez formant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-184">Indicates whether a mouse click at the specified point should be handled by the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa34e-185">
            <see langword="true" /> Jeśli jest kliknięcie w określonym punkcie mają być obsługiwane przez formant; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-185">
              <see langword="true" /> if a click at the specified point is to be handled by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-186"><xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> Metoda określa, czy kliknięcie w określonym punkcie powinny zostać przekazane do formantu, gdy formant jest w trybie projektowania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-186">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method determines whether a click at the specified point should be passed to the control, while the control is in design mode.</span></span> <span data-ttu-id="aa34e-187">Można zastąpić i zaimplementuj tę metodę, aby włączyć formantu do odbierania kliknięć w środowisku projektowania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-187">You can override and implement this method to enable your control to receive clicks in the design-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa34e-188">Współrzędne ekranu do można przekazać punkcie <xref:System.Windows.Forms.Control.PointToClient%2A> metody <xref:System.Windows.Forms.Control> klasy uzyskać współrzędne punktu względem lewego górnego rogu formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-188">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 <span data-ttu-id="aa34e-189"><xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> Metoda jest wywoływana w odpowiedzi na komunikat WM_NCHITTEST, dlatego jest ona wywoływana w każdym myszą.</span><span class="sxs-lookup"><span data-stu-id="aa34e-189">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method is called in response to the WM_NCHITTEST message, so it is called on each mouse move.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookChildControls">
      <MemberSignature Language="C#" Value="protected void HookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberSignature Language="F#" Value="member this.HookChildControls : System.Windows.Forms.Control -&gt; unit" Usage="controlDesigner.HookChildControls firstChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild">
          <span data-ttu-id="aa34e-190">Pierwszy element podrzędny <see cref="T:System.Windows.Forms.Control" /> do procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-190">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span>
          </span>
          <span data-ttu-id="aa34e-191">Wywołanie tej metody może rekursywnie sam podrzędnych formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-191">This method may recursively call itself for children of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-192">Kieruje komunikaty z formantów podrzędnych formantu określony do projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-192">Routes messages from the child controls of the specified control to the designer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceAttribute : System.ComponentModel.InheritanceAttribute" Usage="System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-193">Pobiera <see cref="T:System.ComponentModel.InheritanceAttribute" /> projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-193">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-194">
            <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> Jeśli projektant jest projektanta głównego; w przeciwnym razie wartość projektanta nadrzędnej <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-194">
              <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> if the designer is a root designer; otherwise, the value of the parent designer's <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="controlDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="aa34e-195">
            <see cref="T:System.ComponentModel.IComponent" /> Do skojarzenia z projektanta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-195">The <see cref="T:System.ComponentModel.IComponent" /> to associate the designer with.</span>
          </span>
          <span data-ttu-id="aa34e-196">Ten składnik musi zawsze można instancji lub pochodzić od, <see cref="T:System.Windows.Forms.Control" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-196">This component must always be an instance of, or derive from, <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-197">Inicjuje Projektant z określonego składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-197">Initializes the designer with the specified component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-198">Ta metoda jest wywoływana przez projektanta hosta w celu zainicjowania projektanta.</span><span class="sxs-lookup"><span data-stu-id="aa34e-198">This method is called by the designer host to initialize the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public override void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="override this.InitializeExistingComponent : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.InitializeExistingComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="aa34e-199">Słownik nazw i wartości wartości domyślne, aby zastosować do właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-199">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="aa34e-200">Może być <see langword="null" /> , jeśli nie określono żadnych wartości domyślnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-200">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-201">Ponownie inicjuje istniejący składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-201">Re-initializes an existing component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-202"><xref:System.Windows.Forms.Design.ControlDesigner> Klasa zastępuje tę metodę, aby obsługiwać przypadki następującą upuszczania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-202">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method to handle after-drop cases.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public override void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="override this.InitializeNewComponent : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.InitializeNewComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="aa34e-203">Słownik nazw i wartości wartości domyślne, aby zastosować do właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-203">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="aa34e-204">Może być <see langword="null" /> , jeśli nie określono żadnych wartości domyślnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-204">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-205">Inicjuje nowo utworzony składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-205">Initializes a newly created component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-206"><xref:System.Windows.Forms.Design.ControlDesigner> Klasa zastępuje tę metodę.</span><span class="sxs-lookup"><span data-stu-id="aa34e-206">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method.</span></span> <span data-ttu-id="aa34e-207">Wygląda na domyślnej właściwości formantu i, jeśli jest typu `string`, wartość tej właściwości zostanie ustawiony na nazwę składnika.</span><span class="sxs-lookup"><span data-stu-id="aa34e-207">It will look at the default property for the control and, if it is of type `string`, it will set this property's value to the name of the component.</span></span> <span data-ttu-id="aa34e-208">Tylko robi to jeśli projektanta został skonfigurowany przy użyciu tej opcji w usłudze opcje.</span><span class="sxs-lookup"><span data-stu-id="aa34e-208">It only does this if the designer has been configured with this option in the options service.</span></span> <span data-ttu-id="aa34e-209">Ta metoda również łączy formantu do elementu nadrzędnego i umieszczenie go.</span><span class="sxs-lookup"><span data-stu-id="aa34e-209">This method also connects the control to its parent and positions it.</span></span> <span data-ttu-id="aa34e-210">Jeśli przesłonić tę metodę, należy zawsze wywołać podstawową.</span><span class="sxs-lookup"><span data-stu-id="aa34e-210">If you override this method, you should always call base.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InternalControlDesigner">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.ControlDesigner InternalControlDesigner (int internalControlIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.ControlDesigner InternalControlDesigner(int32 internalControlIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InternalControlDesigner (internalControlIndex As Integer) As ControlDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::ControlDesigner ^ InternalControlDesigner(int internalControlIndex);" />
      <MemberSignature Language="F#" Value="abstract member InternalControlDesigner : int -&gt; System.Windows.Forms.Design.ControlDesigner&#xA;override this.InternalControlDesigner : int -&gt; System.Windows.Forms.Design.ControlDesigner" Usage="controlDesigner.InternalControlDesigner internalControlIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.ControlDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalControlIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="internalControlIndex">
          <span data-ttu-id="aa34e-211">Określony indeks wybierz projektanta formantów wewnętrznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-211">A specified index to select the internal control designer.</span>
          </span>
          <span data-ttu-id="aa34e-212">Ten indeks jest liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-212">This index is zero-based.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-213">Zwraca projektanta formantów wewnętrzny z określonym indeksem <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-213">Returns the internal control designer with the specified index in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa34e-214">A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-214">A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-215">Wewnętrzny formant jest formant, który nie znajduje się w <xref:System.ComponentModel.IContainer.Components%2A> kolekcji <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa34e-215">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="aa34e-216"><xref:System.Windows.Forms.SplitterPanel> jest to przykład takiej kontroli.</span><span class="sxs-lookup"><span data-stu-id="aa34e-216"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPoint">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Point InvalidPoint;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Point InvalidPoint" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidPoint As Point " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Point InvalidPoint;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidPoint : System.Drawing.Point" Usage="System.Windows.Forms.Design.ControlDesigner.InvalidPoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-217">Definiuje lokalnym <see cref="T:System.Drawing.Point" /> reprezentujący wartości nieprawidłowy <see cref="T:System.Drawing.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-217">Defines a local <see cref="T:System.Drawing.Point" /> that represents the values of an invalid <see cref="T:System.Drawing.Point" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-218"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> ma <xref:System.Drawing.Point.X%2A> i <xref:System.Drawing.Point.Y%2A> właściwości ustawić minimalną wartość całkowitą typu danych.</span><span class="sxs-lookup"><span data-stu-id="aa34e-218"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> has an <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> property set to the minimum value for the integer data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfInternalControlDesigners">
      <MemberSignature Language="C#" Value="public virtual int NumberOfInternalControlDesigners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NumberOfInternalControlDesigners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NumberOfInternalControlDesigners () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int NumberOfInternalControlDesigners();" />
      <MemberSignature Language="F#" Value="abstract member NumberOfInternalControlDesigners : unit -&gt; int&#xA;override this.NumberOfInternalControlDesigners : unit -&gt; int" Usage="controlDesigner.NumberOfInternalControlDesigners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-219">Zwraca liczbę kontroli wewnętrznej projektantów w <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-219">Returns the number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa34e-220">Liczba kontroli wewnętrznej projektantów w <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-220">The number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-221">Wewnętrzny formant jest formant, który nie znajduje się w <xref:System.ComponentModel.IContainer.Components%2A> kolekcji <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa34e-221">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="aa34e-222"><xref:System.Windows.Forms.SplitterPanel> jest to przykład takiej kontroli.</span><span class="sxs-lookup"><span data-stu-id="aa34e-222"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenu">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenu (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenu(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenu (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenu(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenu : int * int -&gt; unit&#xA;override this.OnContextMenu : int * int -&gt; unit" Usage="controlDesigner.OnContextMenu (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aa34e-223">Współrzędna x, w którym należy wyświetlić menu kontekstowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-223">The x coordinate at which to display the context menu.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aa34e-224">Współrzędna y, w którym należy wyświetlić menu kontekstowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-224">The y coordinate at which to display the context menu.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-225">Menu kontekstowe zawiera oraz możliwość wykonywania dodatkowego przetwarzania podczas menu kontekstowe ma być wyświetlany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-225">Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateHandle();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateHandle : unit -&gt; unit&#xA;override this.OnCreateHandle : unit -&gt; unit" Usage="controlDesigner.OnCreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-226">Zapewnia możliwość wykonywania dodatkowego przetwarzania natychmiast po utworzeniu uchwyt formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-226">Provides an opportunity to perform additional processing immediately after the control handle has been created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnDragComplete (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragComplete(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragComplete (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragComplete(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragComplete : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragComplete : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragComplete de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="aa34e-227">A <see cref="T:System.Windows.Forms.DragEventArgs" /> udostępniające dane dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-227">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-228">Odbiera połączenie oczyszczania operacji przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-228">Receives a call to clean up a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragDrop de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="aa34e-229">A <see cref="T:System.Windows.Forms.DragEventArgs" /> udostępniające dane dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-229">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-230">Odbiera połączenie po upuszczeniu obiektu przeciągania i upuszczania na widok projektanta formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-230">Receives a call when a drag-and-drop object is dropped onto the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragEnter de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="aa34e-231">A <see cref="T:System.Windows.Forms.DragEventArgs" /> udostępniające dane dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-231">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-232">Odbiera połączenie, gdy widok projektanta kontroli wprowadza operację przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-232">Receives a call when a drag-and-drop operation enters the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : EventArgs -&gt; unit&#xA;override this.OnDragLeave : EventArgs -&gt; unit" Usage="controlDesigner.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="aa34e-233">
            <see cref="T:System.EventArgs" /> Udostępniające dane dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-233">An <see cref="T:System.EventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-234">Odbiera połączenie podczas operacji przeciągania i upuszczania odejdzie Widok projektanta formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-234">Receives a call when a drag-and-drop operation leaves the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragOver de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="aa34e-235">A <see cref="T:System.Windows.Forms.DragEventArgs" /> udostępniające dane dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-235">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-236">Odbiera połączenie, gdy obiekt przeciągania i upuszczania zostanie przeciągnięty nad Widok projektanta formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-236">Receives a call when a drag-and-drop object is dragged over the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="controlDesigner.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="aa34e-237">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> udostępniające dane dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-237">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-238">Odbiera połączenie podczas operacji przeciągania i upuszczania jest w toku, aby zapewnić wizualnych na podstawie lokalizacji kursora myszy w trakcie operacji przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-238">Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-239">Host projektanta wywołuje tę metodę, gdy wystąpi zdarzenie przeciągania OLE.</span><span class="sxs-lookup"><span data-stu-id="aa34e-239">The designer host calls this method when an OLE drag event occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragBegin (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragBegin(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragBegin (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragBegin(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragBegin : int * int -&gt; unit&#xA;override this.OnMouseDragBegin : int * int -&gt; unit" Usage="controlDesigner.OnMouseDragBegin (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aa34e-240">Położenie x kursora myszy we współrzędnych ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-240">The x position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aa34e-241">Położenie y myszy we współrzędnych ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-241">The y position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-242">Odbiera połączenie w odpowiedzi jest przycisk lewy przycisk myszy, a znajduje się nad składnikiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-242">Receives a call in response to the left mouse button being pressed and held while over the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-243">Ta metoda jest wywoływana w chwili rozpoczęcia operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-243">This method is called at the start of a drag-and-drop operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa34e-244">Współrzędne ekranu do można przekazać punkcie <xref:System.Windows.Forms.Control.PointToClient%2A> metody <xref:System.Windows.Forms.Control> klasy uzyskać współrzędne punktu względem lewego górnego rogu formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-244">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragEnd (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragEnd(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragEnd (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragEnd(bool cancel);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragEnd : bool -&gt; unit&#xA;override this.OnMouseDragEnd : bool -&gt; unit" Usage="controlDesigner.OnMouseDragEnd cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="aa34e-245">
            <see langword="true" /> Aby anulować przeciągania; <see langword="false" /> można przekazać go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-245">
              <see langword="true" /> to cancel the drag; <see langword="false" /> to commit it.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-246">Odbiera połączenie na koniec operacji przeciągania i upuszczania, aby ukończyć lub anulować operację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-246">Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragMove (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragMove(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragMove (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragMove(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragMove : int * int -&gt; unit&#xA;override this.OnMouseDragMove : int * int -&gt; unit" Usage="controlDesigner.OnMouseDragMove (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aa34e-247">Położenie x kursora myszy we współrzędnych ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-247">The x position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aa34e-248">Położenie y myszy we współrzędnych ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-248">The y position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-249">Odbiera połączenie dla każdego przepływu myszy podczas operacji przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-249">Receives a call for each movement of the mouse during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="aa34e-250">Współrzędne ekranu do można przekazać punkcie <xref:System.Windows.Forms.Control.PointToClient%2A> metody <xref:System.Windows.Forms.Control> klasy uzyskać współrzędne punktu względem lewego górnego rogu formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-250">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : unit -&gt; unit&#xA;override this.OnMouseEnter : unit -&gt; unit" Usage="controlDesigner.OnMouseEnter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-251">Odbiera połączenie, gdy mysz przejdzie najpierw formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-251">Receives a call when the mouse first enters the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : unit -&gt; unit&#xA;override this.OnMouseHover : unit -&gt; unit" Usage="controlDesigner.OnMouseHover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-252">Odbiera połączenie po wskaźnik myszy jest przesuwany nad formantem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-252">Receives a call after the mouse hovers over the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : unit -&gt; unit&#xA;override this.OnMouseLeave : unit -&gt; unit" Usage="controlDesigner.OnMouseLeave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-253">Odbiera połączenie, gdy mysz przejdzie najpierw formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-253">Receives a call when the mouse first enters the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintAdornments">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintAdornments (System.Windows.Forms.PaintEventArgs pe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintAdornments(class System.Windows.Forms.PaintEventArgs pe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaintAdornments (pe As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaintAdornments(System::Windows::Forms::PaintEventArgs ^ pe);" />
      <MemberSignature Language="F#" Value="abstract member OnPaintAdornments : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaintAdornments : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="controlDesigner.OnPaintAdornments pe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pe">
          <span data-ttu-id="aa34e-254">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> Projektant służy do rysowania w formancie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-254">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> the designer can use to draw on the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-255">Odbiera połączenie, gdy formant, który zarządza projektanta ma malowany jej na ataki, więc projektanta można malować wszelkie dodatkowe skojarzenia na górze kontrolki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-255">Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public override void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnSetComponentDefaults();" />
      <MemberSignature Language="F#" Value="override this.OnSetComponentDefaults : unit -&gt; unit" Usage="controlDesigner.OnSetComponentDefaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-256">Wywoływane, gdy projektant jest zainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-256">Called when the designer is intialized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnSetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetCursor();" />
      <MemberSignature Language="F#" Value="abstract member OnSetCursor : unit -&gt; unit&#xA;override this.OnSetCursor : unit -&gt; unit" Usage="controlDesigner.OnSetCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-257">Odbiera połączenie każdorazowo, gdy kursor musi być ustawiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-257">Receives a call each time the cursor needs to be set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-258">Ta metoda obsługuje przekierowania i obsługa zdarzeń kursora zestawu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-258">This method handles redirection and handling of the set cursor event.</span></span> <span data-ttu-id="aa34e-259">W przypadku usługi przybornika narzędzia zaznaczona, ta metoda będzie zezwalać na usługi przybornika można ustawić kursor.</span><span class="sxs-lookup"><span data-stu-id="aa34e-259">If the toolbox service has a tool selected, this method will allow the toolbox service to set the cursor.</span></span> <span data-ttu-id="aa34e-260">Jeśli zaznaczenie interfejsu użytkownika usługi ma zablokowane zaznaczenie lub jeśli nie ma właściwości lokalizacji w formancie, kursora strzałkę domyślnej zostanie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="aa34e-260">If the selection UI service has a locked selection, or if there is no location property on the control, the default arrow cursor will be set.</span></span> <span data-ttu-id="aa34e-261">Jeśli użytkownik przeciąga składnika, ustawi kursora krzyżyk.</span><span class="sxs-lookup"><span data-stu-id="aa34e-261">If a user is dragging a component, the crosshair cursor will be set.</span></span> <span data-ttu-id="aa34e-262">W przeciwnym razie kursora cztery strzałki kapusty zostanie ustawiona do wskazują, że składnik można kliknięty i przenieść.</span><span class="sxs-lookup"><span data-stu-id="aa34e-262">Otherwise, a four headed arrow cursor will be set to indicate that the component can be clicked and moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentComponent : System.ComponentModel.IComponent" Usage="System.Windows.Forms.Design.ControlDesigner.ParentComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-263">Pobiera składnika nadrzędnego dla <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-263">Gets the parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-264">Składnik nadrzędny dla <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; w przeciwnym razie <see langword="null" /> Jeśli brak składnika nadrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-264">The parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; otherwise, <see langword="null" /> if there is no parent component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-265">Domyślna implementacja po prostu sprawdza, czy składnik projektowania jest formantem, a jeśli tak jest, <xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A> zwraca jego elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="aa34e-265">The default implementation simply checks to see if the component being designed is a control and if it is, <xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A> returns its parent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipatesWithSnapLines">
      <MemberSignature Language="C#" Value="public virtual bool ParticipatesWithSnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParticipatesWithSnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParticipatesWithSnapLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ParticipatesWithSnapLines { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipatesWithSnapLines : bool" Usage="System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-266">Pobiera wartość wskazującą czy <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> umożliwi wyrównanie snapline — podczas operacji przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-266">Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-267">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> umożliwi wyrównanie snapline — podczas operacji przeciągania, gdy kontrolki przeciągania głównej znajduje się nad to projektanta; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-267">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="aa34e-268">
            <para>Domyślna implementacja zawsze zwraca <see langword="true" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-268">
              <para>The default implementation always returns <see langword="true" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="aa34e-269">
            <see cref="T:System.Collections.IDictionary" /> Zawierający właściwości dla klasy składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-269">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-270">Dopasowuje zestaw właściwości składnika przedstawia za pośrednictwem <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-270">Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-271">To <xref:System.ComponentModel.Design.IDesignerFilter> zastąpienie metody interfejsu dodaje zestaw właściwości do tego projektanta składników w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="aa34e-271">This <xref:System.ComponentModel.Design.IDesignerFilter> interface method override adds a set of properties to this designer's component at design time.</span></span> <span data-ttu-id="aa34e-272">Ta metoda dodaje następujące właściwości można przeglądać: `Visible`, `Enabled`, `ContextMenu`, `AllowDrop`, `Location`, `Name`, `Controls`, i `Locked`.</span><span class="sxs-lookup"><span data-stu-id="aa34e-272">This method adds the following browsable properties: `Visible`, `Enabled`, `ContextMenu`, `AllowDrop`, `Location`, `Name`, `Controls`, and `Locked`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="SelectionRules">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.SelectionRules SelectionRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Design.SelectionRules SelectionRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectionRules As SelectionRules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Design::SelectionRules SelectionRules { System::Windows::Forms::Design::SelectionRules get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionRules : System.Windows.Forms.Design.SelectionRules" Usage="System.Windows.Forms.Design.ControlDesigner.SelectionRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.SelectionRules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-273">Pobiera reguły wyboru wskazujące możliwości przenoszenia składnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-273">Gets the selection rules that indicate the movement capabilities of a component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-274">Bitowe połączenie <see cref="T:System.Windows.Forms.Design.SelectionRules" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-274">A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-275">Jeśli projektant nie udostępnia zasady dla składnika, składnik nie zapewni żadnych usług interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="aa34e-275">If no designer provides rules for a component, the component will not get any UI services.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.SelectionRules" />
      </Docs>
    </Member>
    <Member MemberName="SnapLines">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList SnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SnapLines As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IList ^ SnapLines { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SnapLines : System.Collections.IList" Usage="System.Windows.Forms.Design.ControlDesigner.SnapLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa34e-276">Pobiera listę <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> obiekty reprezentujące punkty wyrównania istotne dla tego formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-276">Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa34e-277">Lista <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> obiekty reprezentujące punkty wyrównania istotne dla tego formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-277">A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-278">Można użyć oferowany <xref:System.Windows.Forms.Design.Behavior.SnapLine> obiektów ułatwiających położenia kontrolki na powierzchnię projektu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-278">You can use the offered <xref:System.Windows.Forms.Design.Behavior.SnapLine> objects to assist in positioning the control on a design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhookChildControls">
      <MemberSignature Language="C#" Value="protected void UnhookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UnhookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UnhookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UnhookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberSignature Language="F#" Value="member this.UnhookChildControls : System.Windows.Forms.Control -&gt; unit" Usage="controlDesigner.UnhookChildControls firstChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild">
          <span data-ttu-id="aa34e-279">Pierwszy element podrzędny <see cref="T:System.Windows.Forms.Control" /> do procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-279">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span>
          </span>
          <span data-ttu-id="aa34e-280">Wywołanie tej metody może rekursywnie sam podrzędnych formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-280">This method may recursively call itself for children of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-281">Kieruje komunikaty do podrzędnych określonego formantu do każdego formantu, a nie do projektanta nadrzędnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-281">Routes messages for the children of the specified control to each control rather than to a parent designer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc :  -&gt; unit&#xA;override this.WndProc :  -&gt; unit" Usage="controlDesigner.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="aa34e-282">
            <see cref="T:System.Windows.Forms.Message" /> Do procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-282">The <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa34e-283">Przetwarza komunikatów systemu Windows i opcjonalnie kieruje je do formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa34e-283">Processes Windows messages and optionally routes them to the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa34e-284">Ta metoda jest wywoływana dla każdej wiadomości, które zwykle otrzyma formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-284">This method is called for each message the control would usually receive.</span></span> <span data-ttu-id="aa34e-285">Dzięki temu projektanta, aby wstępnie Przetwórz komunikatów przed ich opcjonalnie routingu do formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-285">This allows the designer to preprocess messages before optionally routing them to the control.</span></span>  
  
 <span data-ttu-id="aa34e-286">Aby wysłać komunikat do formantu <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> metody, wywołaj <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A> na projektanta formantów.</span><span class="sxs-lookup"><span data-stu-id="aa34e-286">To send the message to the control’s <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> method, call <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A> on the control's designer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa34e-287">Projektant filtruje wiadomości, więc niektóre komunikaty nie zostaną wysłane do formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-287">The designer filters messages, so some messages will not be sent to the control.</span></span> <span data-ttu-id="aa34e-288">Na przykład komunikatów myszy są przechwytywane przez projektanta.</span><span class="sxs-lookup"><span data-stu-id="aa34e-288">For example, mouse messages are intercepted by the designer.</span></span> <span data-ttu-id="aa34e-289">Jeśli nie jest to zachowanie chcesz wywołać <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="aa34e-289">If this is not the behavior you want, call <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A> instead.</span></span>  
  
 <span data-ttu-id="aa34e-290">Przekaż `m` jako parametr.</span><span class="sxs-lookup"><span data-stu-id="aa34e-290">Pass `m` as a parameter.</span></span> <span data-ttu-id="aa34e-291">Opcjonalnie można zmienić lub utworzyć nowy <xref:System.Windows.Forms.Message?displayProperty=nameWithType> do przekazania do metody formantu.</span><span class="sxs-lookup"><span data-stu-id="aa34e-291">Optionally, you can alter or create a new <xref:System.Windows.Forms.Message?displayProperty=nameWithType> to pass to the control's method.</span></span>  
  
 <span data-ttu-id="aa34e-292">W poniższej tabeli przedstawiono przepływ komunikatów.</span><span class="sxs-lookup"><span data-stu-id="aa34e-292">The following table shows the flow of messages.</span></span>  
  
|<span data-ttu-id="aa34e-293">Bez projektanta</span><span class="sxs-lookup"><span data-stu-id="aa34e-293">Without a designer</span></span>|<span data-ttu-id="aa34e-294">Za pomocą projektanta</span><span class="sxs-lookup"><span data-stu-id="aa34e-294">With a designer</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="aa34e-295">USER32</span><span class="sxs-lookup"><span data-stu-id="aa34e-295">USER32</span></span><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="aa34e-296">USER32</span><span class="sxs-lookup"><span data-stu-id="aa34e-296">USER32</span></span>|<span data-ttu-id="aa34e-297">USER32</span><span class="sxs-lookup"><span data-stu-id="aa34e-297">USER32</span></span><br /><br /> <span data-ttu-id="aa34e-298">`Control.Designer.`<xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span><span class="sxs-lookup"><span data-stu-id="aa34e-298">`Control.Designer.` <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span></span><br /><br /> <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="aa34e-299">USER32</span><span class="sxs-lookup"><span data-stu-id="aa34e-299">USER32</span></span>|  
  
 <span data-ttu-id="aa34e-300">Projektant przechwytuje wiadomości przez zastąpienie <xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType> właściwości w formancie.</span><span class="sxs-lookup"><span data-stu-id="aa34e-300">The designer intercepts messages by replacing the <xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType> property on the control.</span></span> <span data-ttu-id="aa34e-301">Zazwyczaj <xref:System.Windows.Forms.Control.WindowTarget%2A> wskazuje <xref:System.Windows.Forms.NativeWindow> zawarte w formancie.</span><span class="sxs-lookup"><span data-stu-id="aa34e-301">Usually, <xref:System.Windows.Forms.Control.WindowTarget%2A> points to the <xref:System.Windows.Forms.NativeWindow> contained within the control.</span></span> <span data-ttu-id="aa34e-302">W czasie projektowania projektanta zastępuje to własną docelowego okna i buforuje oryginalnej wartości.</span><span class="sxs-lookup"><span data-stu-id="aa34e-302">During design time, the designer replaces this with its own window target, and caches the original value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>