<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OleDbDataAdapter.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50194a2bd3b968b32577535fb7ef20df04c38b1d2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0194a2bd3b968b32577535fb7ef20df04c38b1d2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Represents a set of data commands and a database connection that are used to fill the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and update the data source.</source>
          <target state="translated">Reprezentuje zestaw poleceń danych i połączenie z bazą danych, które są używane do wypełnienia <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> i zaktualizować źródła danych.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> serves as a bridge between a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and data source for retrieving and saving data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> Służy jako mostka między <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> i źródła danych do pobierania i zapisywania danych.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> provides this bridge by using <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> to load data from the data source into the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, and using <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> to send changes made in the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> back to the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> Zapewnia to mostek przy użyciu <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> do ładowania danych z źródła danych do <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>i przy użyciu <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> Aby wysłać zmiany wprowadzone w <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> do źródła danych.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>When the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> fills a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, it will create the appropriate tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> wypełnia <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, jeśli jeszcze nie istnieje zostanie utworzony odpowiedni tabel i kolumn dla zwracanych danych.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>However, primary key information is not included in the implicitly created schema unless the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>.</source>
          <target state="translated">Jednak informacje o kluczu podstawowym nie wchodzi w schemacie niejawnie tworzonych chyba że <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>You may also have the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> create the schema of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, including primary key information, before filling it with data using <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>.</source>
          <target state="translated">Może być konieczne <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> utworzyć schemat <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, w tym informacje o kluczu podstawowym, przed wypełnianie danych przy użyciu <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>Dodawanie istniejących ograniczeń do zestawu danych<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</source>
          <target state="translated">Należy pamiętać, że niektóre dostawców OLE DB, w tym dostawcy MSDataShape nie zwrócą informacji o tabeli podstawowej lub informacje o kluczu podstawowym.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> cannot correctly set the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property on any created <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">W związku z tym <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> nie można poprawnie ustawić <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> właściwości na dowolnym utworzony <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>In these cases you should explicitly specify primary keys for tables in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">W takich sytuacjach należy jawnie określić kluczy podstawowych dla tabel w <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> also includes the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> properties to facilitate the loading and updating of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> Obejmuje również <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>, i <ph id="ph6">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> właściwości, aby ułatwić ładowanie i aktualizowania danych.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, properties are set to their initial values.</source>
          <target state="translated">Podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, właściwości są ustawione na wartości początkowe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> constructor.</source>
          <target state="translated">Aby uzyskać listę tych wartości, zobacz <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, to select records from an Access data source, and populate a <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with the selected rows.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> i <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, aby wybrać rekordy ze źródła danych programu Access i wypełnić <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> z zaznaczonych wierszy.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The filled <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is then returned.</source>
          <target state="translated">Wypełniony <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> jest następnie zwracany.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>To accomplish this, the method is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, and a query string that is an SQL SELECT statement.</source>
          <target state="translated">Aby to zrobić, metoda jest przekazywana zainicjowane <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, ciąg połączenia i ciągu zapytania, który jest instrukcję SQL SELECT.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">Podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, następujące właściwości odczytu/zapisu są ustawione na następujące wartości początkowej.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>Properties</source>
          <target state="translated">Właściwości</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>Initial value</source>
          <target state="translated">Wartość początkowa</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">Można zmienić wartości tych właściwości, za pomocą oddzielnego wywołania do właściwości.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> i ustawia niektóre jego właściwości.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> that is a SELECT statement or stored procedure, and is set as the <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> Jest wybierz instrukcji lub procedury składowanej, a jest ustawiana jako <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> właściwość <ph id="ph3">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> as the <ph id="ph3">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> klasy z określonym <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> jako <ph id="ph3">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property to the value specified in the <ph id="ph3">`selectCommand`</ph> parameter.</source>
          <target state="translated">Ta implementacja <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> ustawia konstruktora <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> właściwości do wartości określonej w <ph id="ph3">`selectCommand`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">Podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, następujące właściwości odczytu/zapisu są ustawione na następujące wartości początkowej.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>Properties</source>
          <target state="translated">Właściwości</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>Initial value</source>
          <target state="translated">Wartość początkowa</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">Można zmienić wartości tych właściwości, za pomocą oddzielnego wywołania do właściwości.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> i ustawia niektóre jego właściwości.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Ciąg znaków będący SQL SELECT instrukcji lub procedury składowanej, który będzie używany przez <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> właściwość <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph> that represents the connection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph> Reprezentujący połączenie.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> klasy z <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> opens and closes an <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> if it is not already open.</source>
          <target state="translated">Ta implementacja <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> otwiera i zamyka <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> Jeśli nie jest już otwarty.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>This can be useful in an application that must call the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method for two or more <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> objects.</source>
          <target state="translated">Może to być przydatne w aplikacji, który musi wywołać <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> metodę dla co najmniej dwa <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> is already open, you must explicitly call <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> to close it.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> jest już otwarty, użytkownik musi jawnie wywołać <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> lub <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> go zamknąć.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">Podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, następujące właściwości odczytu/zapisu są ustawione na następujące wartości początkowej.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Properties</source>
          <target state="translated">Właściwości</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Initial value</source>
          <target state="translated">Wartość początkowa</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>You can change the value of either of these properties through a separate call to the property.</source>
          <target state="translated">Można zmienić wartości tych właściwości, za pomocą oddzielnego wywołania do właściwości.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> i ustawia niektóre jego właściwości.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Ciąg znaków będący SQL SELECT instrukcji lub procedury składowanej, który będzie używany przez <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> właściwość <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>The connection string.</source>
          <target state="translated">Parametry połączenia.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> klasy z <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> constructor uses the <ph id="ph2">`selectConnectionString`</ph> parameter to set the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated">To przeciążenie metody <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> Konstruktor korzysta <ph id="ph2">`selectConnectionString`</ph> parametr, aby ustawić <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>However, it does not open the connection.</source>
          <target state="translated">Połączenie nie są jednak otworzyć.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>You still must explicitly open the connection.</source>
          <target state="translated">Nadal trzeba jawnie otwierania połączenia.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">Podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, następujące właściwości odczytu/zapisu są ustawione na następujące wartości początkowej.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>Properties</source>
          <target state="translated">Właściwości</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>Initial value</source>
          <target state="translated">Wartość początkowa</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">Można zmienić wartości tych właściwości, za pomocą oddzielnego wywołania do właściwości.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> i ustawia niektóre jego właściwości.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>Gets or sets an SQL statement or stored procedure for deleting records from the data set.</source>
          <target state="translated">Pobiera lub ustawia instrukcję SQL lub procedurę składowaną usuwania rekordów z zestawu danych.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the data source that correspond to deleted rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> Używane podczas <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> do usuwania rekordów w źródle danych, które odpowiadają usuniętych wierszy w <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">Podczas <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, jeśli ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> mogą być generowane automatycznie, jeśli ustawisz <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> właściwości i użyj <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">Następnie dowolne dodatkowe polecenia, które nie zostały ustawione są generowane przez <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>generowania poleceń CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> jest przypisany do wcześniej utworzonego <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> nie został sklonowany.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> Przechowuje odwołanie do utworzonego wcześniej <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> properties.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> i ustawia <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">Przyjęto założenie, że utworzono już <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in an ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph3">&lt;see langword="Record" /&gt;</ph> object.</source>
          <target state="translated">Dodaje lub odświeża wierszy w <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> do odpowiadają ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> lub <ph id="ph3">&lt;see langword="Record" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to fill with records and, if it is required, schema.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> umożliwia wypełnienie rekordów i, jeśli jest to wymagane, schematu.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>An ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph2">&lt;see langword="Record" /&gt;</ph> object.</source>
          <target state="translated">ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> lub <ph id="ph2">&lt;see langword="Record" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Adds or refreshes rows in a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to match those in an ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph3">&lt;see langword="Record" /&gt;</ph> object using the specified <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> and ADO objects.</source>
          <target state="translated">Dodaje lub odświeża wierszy w <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> do odpowiadają ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> lub <ph id="ph3">&lt;see langword="Record" /&gt;</ph> przy użyciu określonego <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> oraz obiektów ADO.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The number of rows successfully refreshed to the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Liczba wierszy pomyślnie odświeżane <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">Nie zawiera wierszy objętych instrukcji, które niezwracanie wierszy.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">Powiązanie obiektów ADO (ActiveX Data) i ADO.NET jest Operacja jednokierunkowa, w tym można skopiować danych z ADO do <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, ale wszelkie zmiany danych musi być obsługiwane przez ADO.NET.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method does not close the input <ph id="ph2">`Recordset`</ph> on completion of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation.</source>
          <target state="translated">To przeciążenie metody <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> — metoda nie zamyka danych wejściowych <ph id="ph2">`Recordset`</ph> po zakończeniu <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operacji.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>When handling batch SQL statements that return multiple results, this implementation of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</source>
          <target state="translated">Podczas przetwarzania wsadowego instrukcji SQL, które zwracają wiele wartości, ta implementacja <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> dla informacji o schemacie dla pierwszego wyniku pobiera OLE DB.NET Framework dostawcę danych.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation adds the rows to the specified destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object if it does not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> Operacji dodaje wiersze do określonej lokalizacji docelowej <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> obiektu w <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, tworzenie <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> obiektu, jeśli go jeszcze nie istnieje.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation ordinarily creates only column name metadata.</source>
          <target state="translated">Po utworzeniu <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> obiektu <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operacji zwykle tworzy tylko metadane nazwy kolumny.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">Jednak jeśli <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph2">`AddWithKey`</ph>, również są tworzone odpowiednie klucze podstawowe i ograniczeń.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> metody wiele razy w tym samym <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">Jeśli klucz podstawowy istnieje, przychodzących wierszy są scalane z pasujących wierszy, które już istnieją.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Jeśli klucz podstawowy istnieje, przychodzących wierszy są dołączane do <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Jeśli informacje o kluczu podstawowym jest obecny, wszystkie zduplikowane wiersze są uzgadniane i są wyświetlane tylko jeden raz w <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> odpowiadający <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">Informacje o kluczu podstawowym można konfigurować za pośrednictwem <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, określając <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> właściwość <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, albo ustawiając <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> właściwości <ph id="ph5">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> zwraca wyniki OUTER JOIN <ph id="ph2">`DataAdapter`</ph> nie ustawia <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> wartość powstałe w ten sposób <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">Zdefiniuj jawnie klucz podstawowy, aby upewnić się, że zduplikowane wiersze są rozpoznawane poprawnie.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>Definiowanie kluczy podstawowych<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <ph id="ph2">`IColumnsRowset`</ph>.</source>
          <target state="translated">Do poprawnego działania z .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> wymaga uzyskuje wymagane informacje o kluczu podstawowym przez ustawienie właściwości DBPROP_UNIQUEROWS macierzystych dostawców OLE DB i określa, które kolumny będą klucza podstawowego kolumny, sprawdzając DBCOLUMN_KEYCOLUMN w <ph id="ph2">`IColumnsRowset`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Alternatively the user may explicitly set the primary key constraints on each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Użytkownik może również jawnie ustawiona ograniczeń klucza podstawowego w każdym <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This makes sure that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">Dzięki temu, że przychodzące rekordów, które spełniają istniejące rekordy są aktualizowane zamiast dołączane.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> napotka zduplikowane kolumny podczas wypełniania <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, generuje nazwy dla kolejnych kolumn, używania wzorca "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" i tak dalej.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Empty column names are added to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</source>
          <target state="translated">Pusta kolumna nazw są dodawane do <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, przy użyciu pustego ciągu dla pierwszej kolumny, a następnie "1", "2", "3" i tak dalej dla kolejnych puste kolumny.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Wartości w ADO <ph id="ph1">`Recordset`</ph> lub <ph id="ph2">`Record`</ph> obiekty są konwertowane na wspólnej języka typów środowiska wykonawczego dla magazynu w <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method does not implicitly call <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">To przeciążenie metody <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> metoda niejawnie nie wywołuje <ph id="ph2">`Close`</ph> obiektu ADO po zakończeniu operacji fill.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Therefore, always call <ph id="ph1">`Close`</ph> when you are finished using ADO <ph id="ph2">`Recordset`</ph> or <ph id="ph3">`Record`</ph> objects.</source>
          <target state="translated">W związku z tym wywoływanie zawsze <ph id="ph1">`Close`</ph> po zakończeniu przy użyciu ADO <ph id="ph2">`Recordset`</ph> lub <ph id="ph3">`Record`</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</source>
          <target state="translated">Dzięki temu podstawowego połączenia ze źródłem danych jest opublikowane w odpowiednim czasie i uniemożliwia także programowi naruszenia zasad dostępu możliwe z powodu niezarządzane obiekty ADO zostanie odzyskana przez wyrzucanie elementów bezużytecznych, gdy nadal istnieją odwołania istniejących.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>When you call the <ph id="ph1">`TableMappings.Add`</ph> method on a <ph id="ph2">`DataAdapter`</ph> and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</source>
          <target state="translated">Podczas wywoływania <ph id="ph1">`TableMappings.Add`</ph> metoda <ph id="ph2">`DataAdapter`</ph> i jawnie mapować parametr tabeli źródłowej na pusty ciąg, zestaw danych jest pomyślnie za pomocą tabeli źródłowej, ale zestaw danych zostanie wypełniona nothing.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>For example, in the following example, <ph id="ph1">`rDataSet`</ph> will be populated with nothing.</source>
          <target state="translated">Na przykład w poniższym przykładzie <ph id="ph1">`rDataSet`</ph> zostanie wypełniona nothing.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This example shows how you can skip a result when dealing with multiple results.</source>
          <target state="translated">Ten przykład przedstawia, jak można pominąć wyniku podczas pracy nad wiele wyników.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> to fill a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> using an ADO <ph id="ph3">`Recordset`</ph>.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> do wypełnienia <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> przy użyciu ADO <ph id="ph3">`Recordset`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This example assumes that you have created an ADO <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">W tym przykładzie przyjęto założenie, że utworzono ADO <ph id="ph1">`Recordset`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if it is required, schema.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> umożliwia wypełnienie rekordów i, jeśli jest to wymagane, schematu.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>An ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph2">&lt;see langword="Record" /&gt;</ph> object.</source>
          <target state="translated">ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> lub <ph id="ph2">&lt;see langword="Record" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The source table used for the table mappings.</source>
          <target state="translated">Tabela źródłowa używany do mapowania tabeli.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in an ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph3">&lt;see langword="Record" /&gt;</ph> object using the specified <ph id="ph4">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, ADO object, and source table name.</source>
          <target state="translated">Dodaje lub odświeża wierszy w <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> do odpowiadają ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> lub <ph id="ph3">&lt;see langword="Record" /&gt;</ph> przy użyciu określonego <ph id="ph4">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, obiekt ADO i nazwy tabeli źródłowej.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Liczba wierszy pomyślnie dodane do lub odświeżenia w <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">Nie zawiera wierszy objętych instrukcji, które niezwracanie wierszy.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">Powiązanie obiektów ADO (ActiveX Data) i ADO.NET jest Operacja jednokierunkowa, w tym można skopiować danych z ADO do <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, ale wszelkie zmiany danych musi być obsługiwane przez ADO.NET.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method iterates through multiple results by calling the <ph id="ph2">`NextRecordset`</ph> method on the <ph id="ph3">`Recordset`</ph>, closing the input <ph id="ph4">`Recordset`</ph> on completion of the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> Metody iteruje wiele wyników przez wywołanie metody <ph id="ph2">`NextRecordset`</ph> metoda <ph id="ph3">`Recordset`</ph>, zamykanie danych wejściowych <ph id="ph4">`Recordset`</ph> po zakończeniu <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operacji.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation adds the rows to the specified destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object if it does not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> Operacji dodaje wiersze do określonej lokalizacji docelowej <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> obiektu w <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, tworzenie <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> obiektu, jeśli go jeszcze nie istnieje.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation ordinarily creates only column name metadata.</source>
          <target state="translated">Po utworzeniu <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> obiektu <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operacji zwykle tworzy tylko metadane nazwy kolumny.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">Jednak jeśli <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> właściwość jest ustawiona na <ph id="ph2">`AddWithKey`</ph>, również są tworzone odpowiednie klucze podstawowe i ograniczeń.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Jeśli informacje o kluczu podstawowym jest obecny, wszystkie zduplikowane wiersze są uzgadniane i są wyświetlane tylko jeden raz w <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> odpowiadający <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">Informacje o kluczu podstawowym można konfigurować za pośrednictwem <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, określając <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> właściwość <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, albo ustawiając <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> właściwości <ph id="ph5">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>.</source>
          <target state="translated">Do poprawnego działania z .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> wymaga macierzystych dostawców OLE DB uzyskać wymagane informacje o kluczu podstawowym przez ustawienie właściwości DBPROP_UNIQUEROWS, a następnie określ kolumny, które są klucza podstawowego kolumny, sprawdzając DBCOLUMN_KEYCOLUMN w <bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Alternatively the user may explicitly set the primary key constraints on each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Użytkownik może również jawnie ustawiona ograniczeń klucza podstawowego w każdym <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This ensures that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">Dzięki temu, że przychodzące rekordów, które spełniają istniejące rekordy są aktualizowane zamiast dołączane.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> zwraca wyniki OUTER JOIN <ph id="ph2">`DataAdapter`</ph> nie ustawia <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> wartość powstałe w ten sposób <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">Zdefiniuj jawnie klucz podstawowy, aby upewnić się, że zduplikowane wiersze są rozpoznawane poprawnie.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>Definiowanie kluczy podstawowych<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the <ph id="ph1">`Recordset`</ph> is closed before the starting of the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation, no error results.</source>
          <target state="translated">Jeśli <ph id="ph1">`Recordset`</ph> jest zamknięty przed rozpoczęciem <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operacja, nie zwróciło żadnych wyników błędu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This is required for handling of multiple results, because queries that do not return rows are indicated by a closed <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">Jest to wymagane do obsługi wielu wyników, ponieważ zapytań, które nie zwracają wierszy są wskazane przez zamkniętej <ph id="ph1">`Recordset`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> just calls <ph id="ph2">`NextRecordset`</ph> on the closed <ph id="ph3">`Recordset`</ph> and continues processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> Po prostu wywołuje <ph id="ph2">`NextRecordset`</ph> na zamkniętym <ph id="ph3">`Recordset`</ph> i kontynuować.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Jeśli wystąpi błąd podczas wypełniania zestawu danych, dodany przed wystąpieniem błędu wierszy pozostają w <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The rest of the operation is aborted.</source>
          <target state="translated">Pozostałe operacja została przerwana.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> obiektu wykryje zduplikowane kolumny podczas wypełniania <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, generuje nazwy dla kolejnych kolumn, używania wzorca "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1","<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", " <bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" i tak dalej.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Jeśli dane przychodzące zawiera kolumny bez nazwy, są umieszczane w <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> zgodnie ze wzorcem "Kolumna1", "Column2" i tak dalej.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">Jeśli wiele zestawów wyników są dodawane do <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> każdy zestaw wyników znajduje się w osobnej tabeli.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">Zestawy wyników dodatkowe są nazywane przez dołączenie wartości całkowitych na wartości do nazwy określonej tabeli (na przykład "Table", "Tabela1", "Tabela2" itd.).</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Aplikacje używające nazwy kolumn i tabel upewnij się, że nie występują konflikty z tych wzorców nazewnictwa.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Wartości w ADO <ph id="ph1">`Recordset`</ph> lub <ph id="ph2">`Record`</ph> obiekty są konwertowane na wspólnej języka typów środowiska wykonawczego dla magazynu w <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method implicitly calls <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">To przeciążenie metody <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> niejawnie wywołuje metodę <ph id="ph2">`Close`</ph> obiektu ADO po zakończeniu operacji fill.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> using an ADO <ph id="ph3">`Recordset`</ph> that is an ADO <ph id="ph4">`Record`</ph> object.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> do wypełnienia <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> przy użyciu ADO <ph id="ph3">`Recordset`</ph> czyli ADO <ph id="ph4">`Record`</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This example assumes that you have created an ADO <ph id="ph1">`RecordSet`</ph> and <ph id="ph2">`Record`</ph> object.</source>
          <target state="translated">W tym przykładzie przyjęto założenie, że utworzono ADO <ph id="ph1">`RecordSet`</ph> i <ph id="ph2">`Record`</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The source table is invalid.</source>
          <target state="translated">Tabela źródłowa jest nieprawidłowa.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</source>
          <target state="translated">Pobiera lub ustawia instrukcję SQL lub procedurę składowaną służy do wstawiania nowych rekordów do źródła danych.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records in the data source that correspond to new rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> Używane podczas <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> do wstawiania rekordów w źródle danych, które odpowiadają nowych wierszy w <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">Podczas <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, jeśli ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> mogą być generowane automatycznie, jeśli ustawisz <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> właściwości i użyj <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">Następnie dowolne dodatkowe polecenia, które nie zostały ustawione są generowane przez <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>generowania poleceń CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> jest przypisany do wcześniej utworzonego <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> nie został sklonowany.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> Przechowuje odwołanie do utworzonego wcześniej <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>If execution of this command returns rows, these rows may be added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated">Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze mogą być dodawane do <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> w zależności od tego, jak ustawić <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> właściwość <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> i ustawia <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">Przyjęto założenie, że utworzono już <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>Occurs during <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> after a command is executed against the data source.</source>
          <target state="translated">Występuje w ciągu <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> po wykonaniu polecenia względem źródła danych.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The attempt to update is made.</source>
          <target state="translated">Próba aktualizacji.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>Therefore, the event occurs.</source>
          <target state="translated">W związku z tym zdarzeniu.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, istnieją dwie zdarzeń zaktualizowany wiersz danych.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The order of execution is as follows:</source>
          <target state="translated">Kolejność wykonywania jest następujący:</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">Wartości w <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> zostaną przeniesione do wartości parametrów.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> Zdarzenia.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The command executes.</source>
          <target state="translated">Wykonuje polecenia.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Jeśli polecenie ma ustawioną wartość <ph id="ph1">`FirstReturnedRecord`</ph>, pierwszy zwrócony wynik jest umieszczany w <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">W przypadku parametrów wyjściowych są umieszczane w <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> Zdarzenia.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> events being used.</source>
          <target state="translated">W poniższym przykładzie przedstawiono <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> i <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> zdarzenia używane.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>Occurs during <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> before a command is executed against the data source.</source>
          <target state="translated">Występuje w ciągu <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> przed wykonaniem polecenia względem źródła danych.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The attempt to update is made.</source>
          <target state="translated">Próba aktualizacji.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>Therefore, the event occurs.</source>
          <target state="translated">W związku z tym zdarzeniu.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, istnieją dwie zdarzeń zaktualizowany wiersz danych.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The order of execution is as follows:</source>
          <target state="translated">Kolejność wykonywania jest następujący:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">Wartości w <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> zostaną przeniesione do wartości parametrów.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> Zdarzenia.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The command executes.</source>
          <target state="translated">Wykonuje polecenia.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Jeśli polecenie ma ustawioną wartość <ph id="ph1">`FirstReturnedRecord`</ph>, pierwszy zwrócony wynik jest umieszczany w <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">W przypadku parametrów wyjściowych są umieszczane w <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> Zdarzenia.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> events being used.</source>
          <target state="translated">W poniższym przykładzie przedstawiono <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> i <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> zdarzenia używane.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>Gets or sets an SQL statement or stored procedure used to select records in the data source.</source>
          <target state="translated">Pobiera lub ustawia instrukcję SQL lub procedurę składowaną, aby wybrać rekordy w źródle danych.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> to select records from data source for placement in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> Używany podczas <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> aby wybrać rekordy ze źródła danych do umieszczenia w <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> jest przypisany do wcześniej utworzonego <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> nie został sklonowany.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> Przechowuje odwołanie do utworzonego wcześniej <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> returns no rows, no tables are added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> zwraca żadnych wierszy żadnych tabel są dodawane do <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, i nie jest zgłaszany wyjątek nie.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> i ustawia <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">Przyjęto założenie, że utworzono już <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.DeleteCommand" /&gt;</ph>.</source>
          <target state="translated">Opis tego elementu członkowskiego, zobacz <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.DeleteCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during an update to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> Używane podczas aktualizacji, aby usunąć rekordy w źródle danych dla usuniętych wierszy w zestawie danych.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.InsertCommand" /&gt;</ph>.</source>
          <target state="translated">Opis tego elementu członkowskiego, zobacz <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.InsertCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during an update to insert records from a data source for placement in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> Używany podczas aktualizacji do wstawiania rekordów ze źródła danych do umieszczenia w zestawie danych.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated">Opis tego elementu członkowskiego, zobacz <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.SelectCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during an update to select records from a data source for placement in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> Używany podczas operacji update, aby wybrać rekordy ze źródła danych do umieszczenia w zestawie danych.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.UpdateCommand" /&gt;</ph>.</source>
          <target state="translated">Opis tego elementu członkowskiego, zobacz <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.UpdateCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during an update to update records in the data source for modified rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> Używane podczas aktualizacji update rekordy w źródle danych na potrzeby zmodyfikowanych wierszy w zestawie danych.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>.</source>
          <target state="translated">Opis tego elementu członkowskiego, zobacz <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is a copy of this instance.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> czyli kopię tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>Gets or sets an SQL statement or stored procedure used to update records in the data source.</source>
          <target state="translated">Pobiera lub ustawia instrukcję SQL lub procedurę składowaną używane do aktualizowania rekordów w źródle danych.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the data source that correspond to modified rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> Używane podczas <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> do aktualizowania rekordów w źródle danych, które odpowiadają zmodyfikowanych wierszy w <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">Podczas <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, jeśli ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> mogą być generowane automatycznie, jeśli ustawisz <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> właściwości i użyj <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">Następnie dowolne dodatkowe polecenia, które nie zostały ustawione są generowane przez <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>generowania poleceń CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> jest przypisany do wcześniej utworzonego <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> nie został sklonowany.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> Przechowuje odwołanie do utworzonego wcześniej <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>If execution of this command returns rows, these rows may be merged with the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated">Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze może być scalone z <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> w zależności od tego, jak ustawić <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> właściwość <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> properties.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> i ustawia <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">Przyjęto założenie, że utworzono już <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> obiektu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>