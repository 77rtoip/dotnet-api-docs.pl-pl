<Type Name="OleDbConnection" FullName="System.Data.OleDb.OleDbConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b802cc1a9b4877005b91b1d9770aa1885b696e12" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452281" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje otwartego połączenia ze źródłem danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection> Obiekt reprezentuje unikatowy połączenia ze źródłem danych. W systemie klienta i serwera bazy danych jest odpowiednikiem połączenie sieciowe z serwerem. W zależności od funkcji obsługiwanych przez macierzystych dostawców OLE DB, niektóre metody lub właściwości <xref:System.Data.OleDb.OleDbConnection> obiektu mogą nie być dostępne.  
  
 Podczas tworzenia wystąpienia <xref:System.Data.OleDb.OleDbConnection>, wszystkie właściwości są ustawione na wartości początkowe. Aby uzyskać listę tych wartości, zobacz <xref:System.Data.OleDb.OleDbConnection> konstruktora.  
  
 Możesz otworzyć więcej niż jeden element DataReader w ramach jednej <xref:System.Data.OleDb.OleDbConnection>. Dostawca OLE DB, którego używasz nie obsługuje więcej niż jeden element DataReader pojedynczego połączenia, dostawca niejawnie otwiera dodatkowego połączenia dla każdego.  
  
 Jeśli <xref:System.Data.OleDb.OleDbConnection> umieszczane poza zakres, nie jest zamknięty. W związku z tym należy jawnie zamknąć połączenie przez wywołanie metody <xref:System.Data.OleDb.OleDbConnection.Close%2A> lub **Dispose**, lub za pomocą <xref:System.Data.OleDb.OleDbConnection> obiektów w ramach `Using` instrukcji.  
  
> [!NOTE]
>  Aby wdrożyć aplikacje wysokiej wydajności, należy użyć puli połączeń. Korzystając z .NET Framework Data Provider for OLE DB, nie trzeba włączyć puli połączeń, ponieważ dostawca zarządza to automatycznie. Aby uzyskać więcej informacji o sposobie używania połączenia buforowanie z .NET Framework Data Provider for OLE DB, zobacz [OLE DB, ODBC i użycia puli połączeń Oracle](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).  
  
 Jeśli krytyczny <xref:System.Data.OleDb.OleDbException> (na przykład SQL Server ważność poziomu 20 lub większą) jest generowany przez wykonanie metody <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbConnection> może być zamknięte. Jednak użytkownik może ponownie otworzyć połączenie i kontynuować.  
  
 Aplikacja, która tworzy wystąpienie <xref:System.Data.OleDb.OleDbConnection> obiektu może wymagać wszystkich bezpośrednich i pośrednich wywołującym ma wystarczających uprawnień do kodu, ustawiając żądania kontroli zabezpieczeń deklaratywne lub konieczne. <xref:System.Data.OleDb.OleDbConnection> sprawia, że żądania kontroli zabezpieczeń przy użyciu <xref:System.Data.OleDb.OleDbPermission> obiektu. Użytkownicy można sprawdzić, czy ich kod jest wystarczające uprawnienia za pomocą <xref:System.Data.OleDb.OleDbPermissionAttribute> obiektu. Użytkownicy i Administratorzy mogą również używać [Caspol.exe (narzędzie zasad zabezpieczenia dostępu kodu)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) Aby zmodyfikować zasady zabezpieczeń na poziomie komputera, użytkownika i enterprise. Aby uzyskać więcej informacji, zobacz [zabezpieczenia dostępu kodu i ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Aby uzyskać więcej informacji na temat obsługi komunikaty ostrzegawcze i informacyjny z serwera danych, zobacz [zdarzeń połączenia](~/docs/framework/data/adonet/connection-events.md).  
  
> [!NOTE]
>  <xref:System.Data.OleDb.OleDbConnection> Obiekt nie obsługuje ustawiania lub pobierania właściwości dynamicznych, które są specyficzne dla dostawcy OLE DB. Obsługiwane są tylko właściwości, które mogą zostać przekazane w parametrach połączenia dla dostawcy OLE DB.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbCommand> i <xref:System.Data.OleDb.OleDbConnection>. <xref:System.Data.OleDb.OleDbConnection> Jest otwarte, a następnie ustaw jako <xref:System.Data.OleDb.OleDbCommand.Connection%2A> dla <xref:System.Data.OleDb.OleDbCommand>. Przykład wywołuje <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> i zamknięcie połączenia. Aby to osiągnąć, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> jest przekazywany z parametrów połączenia i ciągu zapytania, który jest instrukcji SQL INSERT.  
  
 [!code-csharp[Classic WebData OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OleDb.OleDbConnection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OleDb.OleDbConnection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nowe wystąpienie klasy <xref:System.Data.OleDb.OleDbConnection> utworzeniu odczytu/zapisu właściwości są ustawione na następujące wartości początkowej, o ile nie są specjalnie ustawiane przy użyciu ich skojarzone słów kluczowych w <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> właściwości.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|Pusty ciąg ("")|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|Pusty ciąg ("")|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|Pusty ciąg ("")|  
  
 Wartości tych właściwości można zmienić tylko za pomocą <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Połączenie używane do bazy danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OleDb.OleDbConnection" /> klasy z określonych parametrów połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nowe wystąpienie klasy <xref:System.Data.OleDb.OleDbConnection> utworzeniu odczytu/zapisu właściwości są ustawione na następujące wartości początkowej, o ile nie są specjalnie ustawiane przy użyciu ich skojarzone słów kluczowych w <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> właściwości.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|Pusty ciąg ("")|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|Pusty ciąg ("")|  
  
 Wartości tych właściwości można zmienić tylko za pomocą <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Uruchamia transakcji bazy danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia transakcji bazy danych z bieżącym <see cref="T:System.Data.IsolationLevel" /> wartość.</summary>
        <returns>Obiekt reprezentujący nowej transakcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy jawnie przekazać ani wycofać, przy użyciu transakcji <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> lub <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> metody. Aby poprawnie wykonuje dostawcy danych programu .NET Framework dla modelu zarządzania transakcji OLE DB, należy unikać innych modeli zarządzania transakcji, np. udostępnianych przez źródło danych.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection> i <xref:System.Data.OleDb.OleDbTransaction>. Ponadto przedstawiono sposób użycia <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, i <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Transakcje równoległe są nieobsługiwane.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">Poziom izolacji transakcji powinien uruchamiania.</param>
        <summary>Rozpoczyna się poziom izolacji określony od transakcji bazy danych.</summary>
        <returns>Obiekt reprezentujący nowej transakcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy jawnie przekazać ani wycofać, przy użyciu transakcji <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> lub <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> metody. Aby poprawnie wykonuje dostawcy danych programu .NET Framework dla modelu zarządzania transakcji OLE DB, należy unikać innych modeli zarządzania transakcji, np. udostępnianych przez źródło danych.  
  
> [!NOTE]
>  Jeśli nie określisz poziom izolacji, używany jest domyślny poziom izolacji dla źródłowego dostawcy. Określa poziom izolacji z <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> metody, użyj przeciążenia, które przyjmuje `isolationLevel` parametru.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection> i <xref:System.Data.OleDb.OleDbTransaction>. Ponadto przedstawiono sposób użycia <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, i <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Transakcje równoległe są nieobsługiwane.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nazwa bazy danych.</param>
        <summary>Zmiany bieżącej bazy danych dla otwartego <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość podana w `database` parametr musi być prawidłową nazwę bazy danych. `database` Parametr nie może zawierać wartości null, ciągiem pustym lub ciągiem o tylko pustych znaków.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#2)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nazwa bazy danych jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">Połączenie nie jest otwarty.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">Nie można zmienić bazy danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka połączenie ze źródłem danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.Close%2A> Metody wycofuje wszystkie transakcje oczekujące. Następnie go zwalnia połączenia z puli połączeń lub zamyka połączenie, jeśli buforowanie połączeń jest wyłączone. Jeśli <xref:System.Data.OleDb.OleDbConnection.Close%2A> jest wywoływana podczas obsługi <xref:System.Data.Common.DbConnection.StateChange> zdarzeń, Brak dodatkowych <xref:System.Data.Common.DbConnection.StateChange> uruchomienia zdarzeń.  
  
 Aplikacja może wywołać <xref:System.Data.OleDb.OleDbConnection.Close%2A> więcej niż jeden raz. Wyjątek nie zostanie wygenerowany.  
  
> [!CAUTION]
>  Nie wywołuj <xref:System.Data.OleDb.OleDbConnection.Close%2A> lub **Dispose** na <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbDataReader>, lub innego obiektu zarządzanego w `Finalize` metody klasy. W finalizator należy tylko Zwolnij niezarządzane zasoby, które bezpośrednio należą do klasy. Jeśli klasa nie ma żadnych niezarządzanych zasobów, nie dołączaj `Finalize` metody w definicji klasy. Aby uzyskać więcej informacji, zobacz [wyrzucanie elementów bezużytecznych](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany do otwierania bazy danych.</summary>
        <value>Parametry połączenia dostawcy OLE DB, zawierający nazwę źródła danych i inne parametry wymagane do ustanowienia połączenia początkowego. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> Służy do dopasowania formatu ciągu połączenia OLE DB możliwie najbardziej z następującymi wyjątkami:  
  
-   "Dostawca = `value` " klauzula jest wymagana. Nie można jednak użyć "dostawca = MSDASQL" ponieważ .NET Framework Data Provider for OLE DB nie obsługuje dostawcy OLE DB dla ODBC (MSDASQL). Aby uzyskać dostęp do źródła danych ODBC, należy użyć <xref:System.Data.Odbc.OdbcConnection> obiektu, który znajduje się w <xref:System.Data.Odbc> przestrzeni nazw.  
  
-   W odróżnieniu od ODBC lub ADO, ciąg połączenia, który jest zwracany jest taka sama jak ustawiono użytkownika <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, minus informacji o zabezpieczeniach Jeśli `Persist Security Info` ma ustawioną wartość `false` (ustawienie domyślne). .NET Framework Data Provider for OLE DB nie trwałe i mogą zwracać hasła w parametrach połączenia, chyba że zostanie ustawiony `Persist Security Info` słowa kluczowego `true` (niezalecane). Utrzymanie wysokiego poziomu zabezpieczeń, zdecydowanie zaleca się używanie `Integrated Security` — słowo kluczowe z `Persist Security Info` ustawioną `false`.  
  
 Można użyć <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> właściwość, aby połączyć się z różnych źródeł danych. Poniższy przykład przedstawia kilka parametrów połączenia możliwe.  
  
```  
"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes"  
  
"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\bin\LocalAccess40.mdb"  
  
"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI"  
```  
  
 Jeśli `Data Source` w parametrach połączenia nie jest określone słowo kluczowe, dostawca próbuje połączyć się z serwerem lokalnym, jeśli jest dostępny.  
  
 Aby uzyskać więcej informacji dotyczących parametrów połączenia, zobacz [przy użyciu słowa kluczowe parametrów połączenia z programu SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).  
  
 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> Właściwość można ustawić tylko wtedy, gdy połączenie jest zamknięte. Wiele wartości parametrów połączeń ma odpowiednie właściwości tylko do odczytu. Po ciągu połączenia jest ustawiona, te właściwości zostaną zaktualizowane, z wyjątkiem przypadków, gdy zostanie wykryty błąd. W takim przypadku żadnej właściwości zostały zaktualizowane. <xref:System.Data.OleDb.OleDbConnection> właściwości zwraca tylko te ustawienia, które są zawarte w <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.  
  
 Resetowanie <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> zamkniętego połączenia resetuje wszystkie wartości parametrów połączeń i powiązanych właściwości. Obejmuje to hasło. Na przykład jeśli ustawisz ciąg połączenia, który zawiera "Initial Catalog = AdventureWorks", a następnie zresetować parametry połączenia do "dostawcy = SQLOLEDB; źródło danych = Mójserwersql; wartości IntegratedSecurity = SSPI", <xref:System.Data.OleDb.OleDbConnection.Database%2A> nie ustawiono właściwości AdventureWorks. (Wartość katalog początkowy parametrów połączenia odpowiada `Database` właściwości.)  
  
 Wstępne sprawdzanie poprawności parametrów połączenia jest wykonywane, gdy właściwość jest ustawiona. Jeśli wartości `Provider`, `Connect Timeout`, `Persist Security Info`, lub `OLE DB Services` są uwzględniane w ciągu, wartości te są sprawdzane. Gdy aplikacja wywołuje <xref:System.Data.OleDb.OleDbConnection.Open%2A> metody, ciąg połączenia jest w pełni zweryfikowana pod. Jeśli parametry połączenia zawierają właściwości nieprawidłowy lub nieobsługiwany wyjątek czasu wykonywania, takie jak <xref:System.ArgumentException>, zostanie wygenerowany.  
  
> [!CAUTION]
>  Można podać informacje o połączeniu <xref:System.Data.OleDb.OleDbConnection> w plik Universal Data Link (UDL); jednak należy unikać w ten sposób. Pliki UDL nie są szyfrowane i ujawniać informacje o parametrach połączenia w postaci zwykłego tekstu. Ponieważ plik UDL zewnętrzny zasób opartych na plikach do aplikacji, nie może być chronione przy użyciu programu .NET Framework.  
  
 Podstawowe formaty parametry połączenia zawiera serię par — słowo kluczowe i wartości, oddziel je średnikami. Znak równości (=) łączy każde słowo kluczowe i jego wartość. Aby uwzględnić wartości, które zawiera średnik, znak pojedynczego cudzysłowu ani znaków podwójnego cudzysłowu, wartość musi być ujęta w znaki podwójnego cudzysłowu. Jeśli wartość zawiera średnik i znaku podwójnego cudzysłowu, wartość mogą być ujęte w apostrofy. Znak pojedynczego cudzysłowu jest również przydatne, jeśli wartość rozpoczyna się od znaku podwójnego cudzysłowu. Z drugiej strony podwójny cudzysłów służy Jeśli wartość rozpoczyna się od pojedynczego cudzysłowu. Jeśli wartość zawiera znak pojedynczego cudzysłowu jak podwójnego cudzysłowu, znak cudzysłowu ująć musi być podwójny za każdym razem, gdy ma miejsce w wartości.  
  
 Aby spacji ani na końcu w wartości ciągu, wartość musi być ujęta w znaki apostrofu lub podwójny cudzysłów. Spacji wiodących lub końcowych wokół liczba całkowita, wartość logiczna lub wartości wyliczenia są ignorowane, nawet jeśli ujęty w cudzysłów. Jednak spacje wewnątrz — słowo kluczowe literału ciągu lub wartość są zachowywane. Pojedynczy lub podwójny cudzysłów może być używana w ciągu połączenia bez użycia ogranicznik (na przykład `Data Source= my'Server` lub `Data Source= my"Server`), chyba że znak cudzysłowu — jest pierwszy i ostatni znak w wartości.  
  
 Aby dołączyć znakiem równości (=) — słowo kluczowe lub wartość, musi być poprzedzony przez innego znaku równości. Na przykład w parametrach połączenia hipotetyczny  
  
```  
"key==word=value"  
```  
  
 słowo kluczowe jest "klucz = wyraz" a wartość to "value".  
  
 Jeśli określone słowo kluczowe w słowach kluczowych = wartość pary występuje wiele razy w ciągu połączenia ostatniego wystąpienia na liście jest używany w zestawie wartości.  
  
 Słowa kluczowe nie jest uwzględniana wielkość liter.  
  
> [!CAUTION]
>  Należy zachować ostrożność podczas konstruowania parametry połączenia oparte na danych wejściowych użytkownika, na przykład podczas pobierania informacji o ID i hasło użytkownika z okno dialogowe i dołączenie go do ciągu połączenia. Aplikacji należy upewnić się, że użytkownik nie można osadzić Parametry dodatkowe parametry połączenia w tych wartości, na przykład wprowadzania hasła jako "validpassword; baza danych = somedb" w celu dołączenia do innej bazy danych. Jeśli używasz właściwości rozszerzone parametru ciągu połączenia dla połączenia OLE DB uniknąć przekazywanie identyfikatory i hasła, ponieważ należy unikać przechowywania identyfikatory i hasła w postaci zwykłego tekstu, jeśli to możliwe, a domyślne ustawienie `Persist Security Info= false` nie wpływ na `Extended Properties` parametru.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection> i ustawia niektóre jego właściwości w parametrach połączenia.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podano nieprawidłowe połączenie argument ciągu lub nie został podany argument ciągu połączenia wymagane.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czas oczekiwania podczas próby nawiązania połączenia przed zakończeniem próby i wygenerowaniem błędu.</summary>
        <value>Czas w sekundach oczekiwania na połączenie otworzyć. Wartość domyślna to 15 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość 0 oznacza brak limitu i należy unikać w <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> , ponieważ próba połączenia będzie czekać w nieskończoność.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection> i ustawia niektóre jego właściwości w parametrach połączenia.  
  
 [!code-csharp[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podana wartość jest mniejsza niż 0.</exception>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca <see cref="T:System.Data.OleDb.OleDbCommand" /> obiekt skojarzony z <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns>
          <see cref="T:System.Data.OleDb.OleDbCommand" /> Obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę bieżącej bazy danych lub baza danych ma być używany po otwarciu połączenia.</summary>
        <value>Nazwa bieżącej bazy danych lub nazwa bazy danych do użycia po otwarciu połączenia. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.Database%2A> Właściwość aktualizacje dynamiczne. Jeśli zmienisz bieżącej bazy danych za pomocą instrukcji SQL lub <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> , wysyłany jest komunikat informacyjny i właściwość jest aktualizowane automatycznie.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę serwera lub nazwa pliku źródła danych.</summary>
        <value>Nazwa serwera lub nazwa pliku źródła danych. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli połączenie z bazą danych jest zamknięty, `DataSource` właściwość zwraca niezależnie od znajduje się w `ConnectionString` słowa kluczowego źródła danych. Jeśli połączenie jest otwarte i `ConnectionString` rozpoczyna się od wartości kluczowym źródła danych "&#124;datadirectory&#124;", właściwość zwraca niezależnie od znajduje się w `ConnectionString` dla tylko kluczowego źródła danych. Jeśli połączenie z bazą danych jest otwarta, właściwość zwraca macierzystych dostawców zwraca dla `DBPROP_INIT_DATASOURCE,` i jeśli jest pusty, macierzystego dostawcę `DBPROP_DATASOURCENAME` jest zwracany.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Odwołanie do istniejącej <see cref="T:System.EnterpriseServices.ITransaction" /> w którym można zarejestrować.</param>
        <summary>Rejestruje w określonym transakcji jako transakcji rozproszonej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowy w ADO.NET 2.0 jest obsługa przy użyciu <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> metody można zarejestrować transakcji rozproszonej. Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction> wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions> transakcji, dzięki czemu preferowane rozproszonychprzestrzeninazwdozarządzania** EnlistDistributedTransaction** w tym celu. Aby uzyskać więcej informacji, zobacz [transakcji rozproszonych](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Możesz zarejestrować się w istniejących przy użyciu transakcji rozproszonej <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> metody po wyłączeniu automatycznej rejestracji. Rejestrowanie w istniejącej transakcji rozproszonej upewnia się, że, jeśli transakcja jest zatwierdzona lub wycofana, zmiany dokonane przez kod w źródle danych są również zatwierdzenia lub wycofania. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> Zwraca wyjątek, jeśli <xref:System.Data.OleDb.OleDbConnection> został już uruchomiony przy użyciu transakcji <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>. Jednak jeśli transakcja jest transakcji lokalnej rozpoczęty o godzinie źródło danych (na przykład, wykonując jawnie za pomocą instrukcji BEGIN TRANSACTION <xref:System.Data.OleDb.OleDbCommand> obiektu), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> wycofuje transakcji lokalnej i powoduje zarejestrowanie w istniejących transakcji rozproszonej jako żądanej. Nie będziesz otrzymywać powiadomienia, że lokalne transakcja została wycofana i odpowiedzialny za zarządzanie wszystkich transakcji lokalnej nie uruchomiono przy użyciu <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Odwołanie do istniejącej <see cref="T:System.Transactions.Transaction" /> w którym można zarejestrować.</param>
        <summary>Rejestruje w określonym transakcji jako transakcji rozproszonej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowy w ADO.NET 2.0 jest obsługa przy użyciu <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> metody można zarejestrować transakcji rozproszonej. Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction> wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions> transakcji, dzięki czemu preferowane rozproszonychprzestrzeninazwdozarządzania** EnlistDistributedTransaction**, który korzysta z <xref:System.EnterpriseServices.ITransaction> obiektu. Ma również semantyki nieco inne: po połączenie jawnie jest zarejestrowana w transakcji, nie może być unenlisted lub zarejestrowany w innej transakcji, dopóki nie zakończy Pierwsza transakcja. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOleDbSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetOleDbSchemaTable(valuetype System.Guid schema, object[] restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOleDbSchemaTable (schema As Guid, restrictions As Object()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetOleDbSchemaTable(Guid schema, cli::array &lt;System::Object ^&gt; ^ restrictions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Guid" />
        <Parameter Name="restrictions" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="schema">Jeden z <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> wartości, które określa tabeli schematów do zwrócenia.</param>
        <param name="restrictions">
          <see cref="T:System.Object" /> Tablicy ograniczenie wartości. Są one stosowane w kolejności kolumn ograniczeń. Oznacza to, że pierwsza wartość ograniczenie ma zastosowanie do pierwszej kolumny ograniczenia, druga wartość ograniczenie ma zastosowanie do drugiej kolumny ograniczeń i tak dalej.</param>
        <summary>Zwraca informacje o schemacie źródła danych wskazywanego przez identyfikator GUID i po zastosowaniu określonych ograniczeń.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> zawierający informacje o żądanej schematu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabela schematów jest zwracana jako <xref:System.Data.DataTable> który ma tego samego formatu co zestaw wierszy schematu OLE DB, które zostały określone przez `schema` parametru. Użyj `restrictions` parametr filtru wierszy, które mają być zwracane w <xref:System.Data.DataTable> (na przykład, określając opcję ograniczenia dotyczące nazwy tabeli, typ, właściciel lub schematu). Jeśli wartości w tablicy, zawierać pustych ciągów lub wartości null dla elementów tablicy, które nie zawierają wartości. W przypadku przekazania pustą tablicę do `restrictions`, wszystkie wiersze (po jednym dla każdej tabeli) są zwracane w domyślnej kolejności. Odpowiada wartości w tablicy kolejności kolumn w tabeli źródłowej i <xref:System.Data.DataTable>. Każdy element tablicy ograniczenia jest porównywany z zawartością odpowiadającej mu kolumny w zestawie wierszy schematu. Na przykład pierwszy element w tablicy ograniczenia jest porównywany z pierwszej kolumny w zestawie wierszy. Jeśli element ograniczenia nie jest zerowa, tylko te wiersze z zestawu wierszy schematu, które dokładnie odpowiada wartości ograniczenia są dodawane do powstałe w ten sposób <xref:System.Data.DataTable>.  
  
 <xref:System.Data.OleDb.OleDbConnection> Metoda wywołuje podstawowej OLE DB **IDBSchemaRowset::GetRowset** metodę przy użyciu standardowych wspólne zasady konwersji środowiska uruchomieniowego języka. Aby uzyskać więcej informacji, zobacz [typy danych dla modelu COM](http://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061).  
  
 Można pobrać informacji o literały za pomocą <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>. Zawiera następujące informacje, odpowiednik wzywania OLE DB **IDBInfo::GetLiteralInfo** interfejsu lub ADO **Connection.OpenSchema** metody z `adSchemaDBInfoLiterals` stałej.  
  
   
  
## Examples  
 Poniższy przykład zwraca listę tabel w bazie danych.  
  
 [!code-csharp[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OleDb.OleDbException">Określony zestaw ograniczeń jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.OleDb.OleDbConnection" /> Jest zamknięty.</exception>
        <exception cref="T:System.ArgumentException">Określony schemat zestawu wierszy nie jest obsługiwana przez dostawcę OLE DB.  - lub - <paramref name="schema" /> parametru zawiera wartość <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> i <paramref name="restrictions" /> parametr zawiera jeden lub więcej ograniczeń.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OleDb.OleDbConnection" /> przy użyciu określonego ciągu dla nazwy schematu.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `collectionName` jest określony jako wartość null, <xref:System.Data.DataTable> zawierają informacje na temat wszystkich metadanych, który jest dostępny, a także jej ograniczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <param name="restrictionValues">Określa zestaw ograniczeń wartości na żądany schemat.</param>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OleDb.OleDbConnection" /> przy użyciu określonego ciągu dla nazwy schematu i tablicy określony ciąg wartości ograniczeń.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `collectionName` jest określony jako wartość null, <xref:System.Data.DataTable> zawierają informacje na temat wszystkich metadanych, który jest dostępny, a także jej ograniczenia.  
  
 `restrictionValues` Można podać parametru *n* głębokość wartości, które są określone przez kolekcji ograniczeń dla określonej kolekcji. Aby ustawić wartości dla danego ograniczeń i nie ustawić wartości właściwości inne ograniczenia, należy ustawić poprzednich ograniczeń do wartości null, a następnie przekaż odpowiednią wartość w ograniczenia, które chcesz określić wartość.  
  
 Na przykład jest kolekcją "Tabele". Jeśli kolekcja "Tabele" ma trzy ograniczenia (bazy danych, właściciela i nazwy tabeli), a chcesz odzyskać tylko w tabelach, które są skojarzone z właścicielem "Carl", należy podać następujące wartości (co najmniej): null, "Carl". Jeśli wartość ograniczenia nie jest przekazany, wartości domyślne są używane dla tego ograniczenia. To tego samego mapowania jako przekazywanie wartość null, która różni się od przekazywanie w ciągu pustego wartość parametru. W takim przypadku ciąg pusty ("") jest traktowany jako wartość parametru określony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OleDbInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy dostawca wysyła ostrzeżenie lub komunikat informacyjny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klienci, w których chcesz przetworzyć ostrzeżenia i komunikaty informacyjne wysyłane przez serwer powinien utworzyć <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> delegata do nasłuchiwania do tego zdarzenia.  
  
 <xref:System.Data.OleDb.OleDbConnection.InfoMessage> Zdarzenie wystąpi, gdy zwracany jest komunikat o niskim znaczeniu ze źródła danych. Wiadomości o niskim znaczeniu są tymi, które nie powodują Wystąpił wyjątek. Microsoft SQL Server w tym komunikaty o błędach, które o wadze 10 lub mniej  
  
 Aby uzyskać więcej informacji i przykład zobacz [zdarzeń połączenia](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera połączenie z bazą danych przy użyciu ustawień właściwości określone przez <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection> Rysuje otwartego połączenia z puli połączeń, jeśli jest dostępny. W przeciwnym razie nawiązaniem nowego połączenia ze źródłem danych. Możesz otworzyć więcej niż jeden element DataReader w ramach jednej <xref:System.Data.OleDb.OleDbConnection>. Jeśli dostawcy OLEDB, którego używasz nie obsługuje więcej niż jeden element DataReader active dla pojedynczego połączenia, dostawcy OLEDB niejawnie otwiera dodatkowego połączenia dla każdego.  
  
> [!NOTE]
>  Jeśli <xref:System.Data.OleDb.OleDbConnection> umieszczane poza zakres, nie jest zamknięty. W związku z tym należy jawnie zamknąć połączenie przez wywołanie metody <xref:System.Data.OleDb.OleDbConnection.Close%2A> lub **Dispose**, lub za pomocą połączenia w `Using` instrukcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie jest już otwarte.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">Wystąpił błąd na poziomie połączenia podczas otwierania połączenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę określonego w dostawcy OLE DB "dostawca =" klauzuli parametrów połączenia.</summary>
        <value>Nazwa dostawcy, jak określono w "dostawca =" klauzuli parametrów połączenia. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oznacza to, że <see cref="T:System.Data.OleDb.OleDbConnection" /> puli obiektów będą dostępne po wydaniu ostatniego połączenia z podstawowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReleaseObjectPool` Aby zwolnić zasoby, które w przeciwnym razie może być zarezerwowana dla puli, można wywołać <xref:System.Data.OleDb.OleDbConnection> obiektów. Możesz wywołać tę metodę, jeśli na przykład obiekt połączenia nie będą używane ponownie ilości czasu usługi OLE DB zwykle zapewnia puli połączeń aktywne. Należy pamiętać, że wywołanie metody wyłącznie nie faktycznie wydane aktywnych połączeń, które istnieją w puli.  
  
 Następujące musi wystąpić przed puli na koniec zostanie usunięty:  
  
1.  Wywołanie <xref:System.Data.OleDb.OleDbConnection.Close%2A> do zwrócenia obiektu połączenia do puli.  
  
2.  Zezwala na limit czasu puli każdego obiektu połączenia.  
  
3.  Wywołanie <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.  
  
4.  Wywołaj wyrzucanie elementów bezużytecznych.  
  
 Z drugiej strony Jeśli wywołujesz <xref:System.Data.OleDb.OleDbConnection.Close%2A> na wszystkich aktywnych połączeń, wywołania wyrzucanie elementów bezużytecznych, ale nie należy wywoływać <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, zasoby zarezerwowane dla obiekt puli nadal będą dostępne.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection>, otwiera on Wyświetla niektóre jego właściwości, zamyka połączenie i zwalnia puli obiektów w celu zaoszczędzenia zasobów.  
  
 [!code-csharp[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizacje <see cref="P:System.Data.OleDb.OleDbConnection.State" /> właściwość <see cref="T:System.Data.OleDb.OleDbConnection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektórzy dostawcy OLE DB można sprawdzić bieżący stan połączenia. Na przykład, jeśli serwer bazy danych po odtworzeniu od został otwarty z <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbConnection.State%2A> właściwości będzie zwracać `Open`. Jeśli pracujesz z dostawcy OLE DB obsługujące sondowania dla tego informacje do połączenia na żywo, wywoływania <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> metody, a następnie zaznaczając <xref:System.Data.OleDb.OleDbConnection.State%2A> właściwości informujący, że połączenie nie jest już otwarty. <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> — Metoda korzysta z funkcji w dostawcy OLE DB można zweryfikować bieżący stan połączenia. W celu określenia, czy z dostawcy OLE DB obsługuje tę funkcję, sprawdź dokumentacji dostawcy DBPROP_CONNECTIONSTATUS.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który zawiera wersję serwera, z którym klient jest połączony.</summary>
        <value>Wersja podłączony serwer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> Mapy właściwości dla właściwości OLE DB DBPROP_DBMSVER. Jeśli <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> nie jest obsługiwana przez źródłowy dostawca OLE DB, zwracany jest pustym ciągiem.  
  
 Wersja jest w formie *##. ##. ###*, gdzie pierwsze dwie cyfry są wersji głównej obok dwie cyfry są wersja pomocnicza i wersji są cztery ostatnie cyfry. Dostawca musi renderowania wersję produktu w tym formularzu, ale także dołączyć wersji określonego produktu — na przykład "04.01.0000 Rdb 4.1". Ten ciąg ma postać *major.minor.build*, gdzie jest to główna i pomocnicza są dokładnie dwie cyfry i kompilacja jest dokładnie cztery cyfry.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OleDb.OleDbConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie jest zamknięte.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan połączenia.</summary>
        <value>Bitowe połączenie <see cref="T:System.Data.ConnectionState" /> wartości. Wartość domyślna jest zamknięty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopuszczalne są następujące zmiany stanu:  
  
-   Z `Closed` do `Open`za pomocą <xref:System.Data.OleDb.OleDbConnection.Open%2A> metody <xref:System.Data.OleDb.OleDbConnection> obiektu.  
  
-   Z `Open` do `Closed`, za pomocą <xref:System.Data.OleDb.OleDbConnection.Close%2A> metody lub **Dispose** metody <xref:System.Data.OleDb.OleDbConnection> obiektu.  
  
> [!NOTE]
>  W poprzedniej wersji programu .NET Framework wywoływania <xref:System.Data.OleDb.OleDbConnection.State%2A> właściwości zwiększyć obciążenie aplikacji, ponieważ każde wywołanie spowodował wywołanie do właściwości OLE DB DBPROP_CONNECTIONSTATUS dla otwartego połączenia. Wraz z wydaniem programu .NET Framework 2.0 to nie jest już problemu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Nowy <see cref="T:System.Object" /> czyli kopię tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Data.OleDb.OleDbConnection> wystąpienia jest rzutowane na <xref:System.ICloneable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>