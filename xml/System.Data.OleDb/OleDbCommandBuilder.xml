<Type Name="OleDbCommandBuilder" FullName="System.Data.OleDb.OleDbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c21309dc266120db7f68708e326fe05496ebcd9c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36685547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <TypeSignature Language="F#" Value="type OleDbCommandBuilder = class&#xA;    inherit DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Automatycznie generuje polecenia pojedynczej tabeli, które są używane do zmian do uzgodnienia <see cref="T:System.Data.DataSet" /> z skojarzonej bazie danych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataAdapter> Nie automatycznie wygenerować instrukcji SQL wymagane do uzgodnienia zmian <xref:System.Data.DataSet> z odpowiedniego źródła danych. Można jednak utworzyć <xref:System.Data.OleDb.OleDbCommandBuilder> obiekt, aby automatycznie wygenerować instrukcji SQL aktualizacje pojedynczej tabeli, jeśli ustawisz <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> właściwość <xref:System.Data.OleDb.OleDbDataAdapter>. Następnie żadnych dodatkowych instrukcji SQL, które nie zostały ustawione są generowane przez <xref:System.Data.OleDb.OleDbCommandBuilder>.  
  
 <xref:System.Data.OleDb.OleDbCommandBuilder> Rejestrowane jako odbiornika dla <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> zdarzenia przy każdym ustawieniu <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> właściwości. Można skojarzyć tylko jedną <xref:System.Data.OleDb.OleDbDataAdapter> lub <xref:System.Data.OleDb.OleDbCommandBuilder> obiektu ze sobą w tym samym czasie.  
  
 Aby wygenerować instrukcje INSERT, UPDATE lub DELETE, <xref:System.Data.OleDb.OleDbCommandBuilder> używa <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> właściwość, aby automatycznie pobrać wymagane zestawu metadanych. Jeśli zmienisz <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> po pobraniu metadane, takie jak po pierwszej aktualizacji, należy wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> metody w celu zaktualizowania metadanych.  
  
 <xref:System.Data.OleDb.OleDbCommandBuilder> Używa również <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>, i <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> właściwości odwołuje się <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>. Użytkownik powinien wywoływać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> czy co najmniej jeden z tych właściwości są modyfikowane, czy <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> sam zostanie zastąpiony. W przeciwnym razie <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, i <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> właściwości zachowują swoje poprzedniej wartości.  
  
 Jeśli należy wywołać <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.OleDb.OleDbCommandBuilder> są oddzielone od <xref:System.Data.OleDb.OleDbDataAdapter>, i generowane polecenia nie są już używane.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.OleDb.OleDbCommand>, wraz <xref:System.Data.OleDb.OleDbDataAdapter> i <xref:System.Data.OleDb.OleDbConnection>, aby wybrać wierszy ze źródła danych. Przykład jest przekazywany zainicjowane <xref:System.Data.DataSet>, ciąg połączenia, ciąg zapytania, który jest instrukcję SQL SELECT i ciąg, który jest nazwą tabeli źródła danych. Następnie tworzony <xref:System.Data.OleDb.OleDbCommandBuilder>.  
  
 [!code-csharp[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OleDbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder(System::Data::OleDb::OleDbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbCommandBuilder : System.Data.OleDb.OleDbDataAdapter -&gt; System.Data.OleDb.OleDbCommandBuilder" Usage="new System.Data.OleDb.OleDbCommandBuilder adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OleDb.OleDbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> klasa ze skojarzonym <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbCommandBuilder> Rejestrowane jako odbiornika dla <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> zdarzeń generowanych przez <xref:System.Data.OleDb.OleDbDataAdapter> określone w tej właściwości.  
  
 Po utworzeniu nowego wystąpienia <xref:System.Data.OleDb.OleDbCommandBuilder>, wszelkie istniejące <xref:System.Data.OleDb.OleDbCommandBuilder> skojarzony z tym <xref:System.Data.OleDb.OleDbDataAdapter> zostanie zwolniony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="override this.ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="oleDbCommandBuilder.ApplyParameterInfo (parameter, datarow, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OleDbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbDataAdapter ^ DataAdapter { System::Data::OleDb::OleDbDataAdapter ^ get(); void set(System::Data::OleDb::OleDbDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.OleDb.OleDbDataAdapter with get, set" Usage="System.Data.OleDb.OleDbCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> obiektu, dla których SQL instrukcje są generowane automatycznie.</summary>
        <value>
          <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> Obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbCommandBuilder> Rejestrowane jako odbiornika dla <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> zdarzeń generowanych przez <xref:System.Data.OleDb.OleDbDataAdapter> określone w tej właściwości.  
  
 Po utworzeniu nowego wystąpienia <xref:System.Data.OleDb.OleDbCommandBuilder>, wszelkie istniejące <xref:System.Data.OleDb.OleDbCommandBuilder> skojarzony z tym <xref:System.Data.OleDb.OleDbDataAdapter> zostanie zwolniony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OleDb.OleDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OleDb::OleDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="static member DeriveParameters : System.Data.OleDb.OleDbCommand -&gt; unit" Usage="System.Data.OleDb.OleDbCommandBuilder.DeriveParameters command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.OleDb.OleDbCommand" /> Odwołuje się do procedury składowanej, z którego ma pochodzić informacje o parametrach. Pochodne parametry są dodawane do <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> kolekcji <see cref="T:System.Data.OleDb.OleDbCommand" />.</param>
        <summary>Pobiera informacje o parametrach z procedury składowanej określone w <see cref="T:System.Data.OleDb.OleDbCommand" /> i wypełnia <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> kolekcji z określonym <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> zastępuje wszelkie istniejące informacje o parametrach dla <xref:System.Data.OleDb.OleDbCommand>.  
  
 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> wymaga dodatkowych wywołanie ze źródłem danych, aby uzyskać informacje. Jeśli informacje o parametrach jest znana wcześniej, jest bardziej wydajne, aby wypełnić kolekcji parametrów, jawnie ustawiając informacje.  
  
 Można używać tylko <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> z procedur składowanych. Nie można użyć <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> do wypełnienia <xref:System.Data.OleDb.OleDbParameterCollection> z dowolnego instrukcje języka Transact-SQL, na przykład sparametryzowanych instrukcji SELECT.  
  
 Aby uzyskać więcej informacji, zobacz [konfigurowania parametrów i typ danych parametru](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Źródłowy dostawca OLE DB nie obsługuje zwracania informacji o parametrach procedury składowanej, tekst polecenia nie jest nazwą prawidłową procedury składowanej lub <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> określony nie <see langword="StoredProcedure" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia usunięć w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.OleDb.OleDbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> i zmodyfikuj <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> lub <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia usunięć w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia usunięć.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.OleDb.OleDbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> i zmodyfikuj <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> lub <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : bool -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Jeśli <see langword="true" />, wygenerować nazwy parametru pasujące nazwy kolumny, jeśli jest to możliwe. Jeśli <see langword="false" />, generowanie @p1, @p2i tak dalej.</param>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia usunięć w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia usunięć.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.OleDb.OleDbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> i zmodyfikuj <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> lub <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.OleDb.OleDbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny. To się powiedzie, tylko wtedy, gdy są spełnione następujące warunki:  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Został określony, a jego długość jest równa lub większa niż nazwa parametru wygenerowany.  
  
-   Nazwa parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> wyrażenia regularnego.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> jest określona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca tekst <xref:System.Data.OleDb.OleDbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> i zmodyfikuj <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> lub <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca tekst <xref:System.Data.OleDb.OleDbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> i zmodyfikuj <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> lub <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : bool -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Jeśli <see langword="true" />, wygenerować nazwy parametru pasujące nazwy kolumny, jeśli jest to możliwe. Jeśli <see langword="false" />, generowanie @p1, @p2i tak dalej.</param>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca tekst <xref:System.Data.OleDb.OleDbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> i zmodyfikuj <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> lub <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.OleDb.OleDbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny. To się powiedzie, tylko wtedy, gdy są spełnione następujące warunki:  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Został określony, a jego długość jest równa lub większa niż nazwa parametru wygenerowany.  
  
-   Nazwa parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> wyrażenia regularnego.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> jest określona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : int -&gt; string" Usage="oleDbCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : string -&gt; string" Usage="oleDbCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterPlaceholder : int -&gt; string" Usage="oleDbCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.OleDb.OleDbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> i zmodyfikuj <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> lub <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.OleDb.OleDbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> i zmodyfikuj <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> lub <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : bool -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Jeśli <see langword="true" />, wygenerować nazwy parametru pasujące nazwy kolumny, jeśli jest to możliwe. Jeśli <see langword="false" />, generowanie @p1, @p2i tak dalej.</param>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji w źródle danych, opcjonalnie przy użyciu kolumn dla nazw parametrów.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.OleDb.OleDbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> i zmodyfikuj <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> wartość, a następnie jawnie ustawione który na <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL najpierw są generowane, gdy aplikacja wywołuje albo <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> lub <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.OleDb.OleDbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny. To się powiedzie, tylko wtedy, gdy są spełnione następujące warunki:  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Został określony, a jego długość jest równa lub większa niż nazwa parametru wygenerowany.  
  
-   Nazwa parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> wyrażenia regularnego.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> jest określona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Podany identyfikator bez cudzysłowów w przypadku katalogu poprawne zwraca wartość prawidłowego formularza tego identyfikatora w cudzysłowach. W tym poprawnie anulowanie wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string -&gt; string" Usage="oleDbCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Oryginalny identyfikator bez cudzysłowów.</param>
        <summary>Podany identyfikator bez cudzysłowów w przypadku katalogu poprawne zwraca wartość prawidłowego formularza tego identyfikatora w cudzysłowach. W tym poprawnie anulowanie wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
        <returns>Identyfikator wersja ujętego w cudzysłów. Osadzone cudzysłowy wewnątrz identyfikator poprawnie będą miały zmienione znaczenie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string * System.Data.OleDb.OleDbConnection -&gt; string" Usage="oleDbCommandBuilder.QuoteIdentifier (unquotedIdentifier, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Identyfikator bez cudzysłowów w formacie ujętego w cudzysłów.</param>
        <param name="connection">Po upływie połączenia powoduje, że zarządzany otok uzyskać znaku cudzysłowu z dostawcy OLE DB. Po upływie połączenia cytowaną przy użyciu wartości z ciągu <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> i <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</param>
        <summary>Podany identyfikator bez cudzysłowów w przypadku katalogu poprawne zwraca wartość prawidłowego formularza tego identyfikatora w cudzysłowach. W tym poprawnie anulowanie wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
        <returns>Identyfikator wersja ujętego w cudzysłów. Osadzone cudzysłowy wewnątrz identyfikator poprawnie będą miały zmienione znaczenie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="override this.SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="oleDbCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Podany identyfikatora ujętego w cudzysłów zwraca w postaci bez cudzysłowu poprawny identyfikator. Obejmuje to poprawnie bez ucieczki żadnego osadzonych cudzysłowów w identyfikatorze.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string -&gt; string" Usage="oleDbCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Identyfikator, który będzie miał jego osadzone cudzysłowy usunięte.</param>
        <summary>Podany identyfikatora ujętego w cudzysłów zwraca w postaci bez cudzysłowu poprawny identyfikator. Obejmuje to poprawnie bez ucieczki żadnego osadzonych cudzysłowów w identyfikatorze.</summary>
        <returns>Identyfikator bez cudzysłowów cudzysłowem osadzonym poprawnie niezmieniony.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string * System.Data.OleDb.OleDbConnection -&gt; string" Usage="oleDbCommandBuilder.UnquoteIdentifier (quotedIdentifier, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Identyfikator, który będzie miał jego osadzone cudzysłowy usunięte.</param>
        <param name="connection">
          <see cref="T:System.Data.OleDb.OleDbConnection" />.</param>
        <summary>Podany identyfikatora ujętego w cudzysłów zwraca w postaci bez cudzysłowu poprawny identyfikator. Obejmuje to poprawnie bez ucieczki żadnego osadzonych cudzysłowów w identyfikatorze.</summary>
        <returns>Identyfikator bez cudzysłowów cudzysłowem osadzonym poprawnie niezmieniony.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>