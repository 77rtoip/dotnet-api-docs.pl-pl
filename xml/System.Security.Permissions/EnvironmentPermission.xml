<Type Name="EnvironmentPermission" FullName="System.Security.Permissions.EnvironmentPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="55798ed48be95c946fe9d08d1173abc164280b77" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36425807" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EnvironmentPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EnvironmentPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.EnvironmentPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EnvironmentPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnvironmentPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type EnvironmentPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kontroluje dostęp do zmiennych środowiskowych systemu i użytkownika. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy zmiennych środowiskowych są wyznaczone przez co najmniej jedną listę bez uwzględniania wielkości liter nazwy oddzielone średnikami, przy użyciu osobnych list do odczytu i zapisu do nazwanego zmiennych. Dostęp do zapisu umożliwia tworzenie i usuwanie zmiennych środowiskowych, a także aby zmienić istniejące wartości.  
  
> [!NOTE]
>  W wersjach programu .NET Framework, przed [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], można użyć <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=nameWithType> metody, aby uniemożliwić przypadkowej dostęp do zasobów systemowych przez zaufanego kodu. <xref:System.Security.CodeAccessPermission.Deny%2A> teraz jest przestarzała, a dostęp do zasobów jest teraz ustaleniami wyłącznie uprawnienia nadanego dla zestawu. Aby ograniczyć dostęp do plików, należy uruchomić częściowo zaufanego kodu w bibliotece i przypisz mu uprawnienia tylko do zasobów, które może uzyskać dostępu do kodu. Aby uzyskać informacje o uruchamianiu aplikacji w bibliotece, zobacz [porady: uruchamianie częściowo zaufanego kodu w bibliotece](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.EnvironmentPermissionAttribute" />
    <altmember cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.EnvironmentPermission" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvironmentPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvironmentPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.EnvironmentPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.EnvironmentPermission" Usage="new System.Security.Permissions.EnvironmentPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jeden z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.EnvironmentPermission" /> klasy z ograniczonej lub nieograniczony uprawnienia określone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy albo pełni ograniczone (`None`) lub `Unrestricted` dostęp do wszystkich systemowych zmiennych środowiskowych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> Parametr nie jest prawidłową wartością <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvironmentPermission (System.Security.Permissions.EnvironmentPermissionAccess flag, string pathList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.EnvironmentPermissionAccess flag, string pathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flag As EnvironmentPermissionAccess, pathList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvironmentPermission(System::Security::Permissions::EnvironmentPermissionAccess flag, System::String ^ pathList);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.EnvironmentPermission : System.Security.Permissions.EnvironmentPermissionAccess * string -&gt; System.Security.Permissions.EnvironmentPermission" Usage="new System.Security.Permissions.EnvironmentPermission (flag, pathList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.EnvironmentPermissionAccess" />
        <Parameter Name="pathList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="flag">Jeden z <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> wartości.</param>
        <param name="pathList">Lista zmiennych środowiskowych (rozdzielone średnikiem) udzielić dostępu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.EnvironmentPermission" /> klasy określonej dostęp do zmiennych środowiskowych określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia tylko jeden z <xref:System.Security.Permissions.EnvironmentPermissionAccess> wartości należy określić. Dostęp ma zastosowanie do wszystkich systemowych zmiennych środowiskowych wymienionych. Użyj <xref:System.Security.Permissions.EnvironmentPermission.AddPathList%2A> do definiowania uprawnień złożonych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pathList" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="flag" /> Parametr nie jest prawidłową wartością <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPathList">
      <MemberSignature Language="C#" Value="public void AddPathList (System.Security.Permissions.EnvironmentPermissionAccess flag, string pathList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPathList(valuetype System.Security.Permissions.EnvironmentPermissionAccess flag, string pathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPathList (flag As EnvironmentPermissionAccess, pathList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPathList(System::Security::Permissions::EnvironmentPermissionAccess flag, System::String ^ pathList);" />
      <MemberSignature Language="F#" Value="member this.AddPathList : System.Security.Permissions.EnvironmentPermissionAccess * string -&gt; unit" Usage="environmentPermission.AddPathList (flag, pathList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.EnvironmentPermissionAccess" />
        <Parameter Name="pathList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="flag">Jeden z <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> wartości.</param>
        <param name="pathList">Lista zmiennych środowiskowych (rozdzielone średnikiem).</param>
        <summary>Dodaje dostępu do zmiennych środowiskowych określony stan istniejące uprawnienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody można zmodyfikować przez dodanie do stanu bieżącego uprawnienia dostępu do zmiennych środowiska.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Security.Permissions.EnvironmentPermission.AddPathList%2A> metody.  
  
 [!code-csharp[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/CS/environmentpermission.cs#7)]
 [!code-vb[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/VB/environmentpermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pathList" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="flag" /> Parametr nie jest prawidłową wartością <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="environmentPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca identyczne kopię bieżącego uprawnień.</summary>
        <returns>Kopię bieżącego uprawnień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopię uprawnienie reprezentuje takie same prawa dostępu do zasobów oryginalnego uprawnienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="environmentPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">Kodowanie XML na potrzeby rekonstrukcji uprawnienia.</param>
        <summary>Rekonstruuje uprawnienie o określonym stanie kodowania XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="esd" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="esd" /> Parametr nie jest elementem prawidłowego uprawnienia.  - lub - <paramref name="esd" /> parametru numer wersji jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPathList">
      <MemberSignature Language="C#" Value="public string GetPathList (System.Security.Permissions.EnvironmentPermissionAccess flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPathList(valuetype System.Security.Permissions.EnvironmentPermissionAccess flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPathList (flag As EnvironmentPermissionAccess) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPathList(System::Security::Permissions::EnvironmentPermissionAccess flag);" />
      <MemberSignature Language="F#" Value="member this.GetPathList : System.Security.Permissions.EnvironmentPermissionAccess -&gt; string" Usage="environmentPermission.GetPathList flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.EnvironmentPermissionAccess" />
      </Parameters>
      <Docs>
        <param name="flag">Jeden z <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> wartości, które reprezentuje jeden typ dostępu do zmiennych środowiska.</param>
        <summary>Pobiera wszystkie zmienne środowiskowe z określonym <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</summary>
        <returns>Lista zmiennych środowiskowych (rozdzielone średnikiem) wybraną flagę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody można pobrać uprawnienia bieżącego stanu. Uzyskanie zarówno `Read` i `Write` stanów dostępu wymaga dwóch wywołania tej metody.  
  
> [!NOTE]
>  `flag` Jest ograniczony do wartości parametru <xref:System.Security.Permissions.EnvironmentPermissionAccess>, które reprezentują pojedynczych typów dostępu do zmiennych środowiska. Te wartości są <xref:System.Security.Permissions.EnvironmentPermissionAccess.Read> i <xref:System.Security.Permissions.EnvironmentPermissionAccess.Write>. Dopuszczalne wartości `flag` nie dołączaj <xref:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess> i <xref:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess>, które nie reprezentują pojedynczych typów dostępu do zmiennych środowiska.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Security.Permissions.EnvironmentPermission.GetPathList%2A> metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.EnvironmentPermission> klasy.  
  
 [!code-csharp[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/CS/environmentpermission.cs#7)]
 [!code-vb[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/VB/environmentpermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="flag" /> nie jest prawidłową wartością <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.  - lub - <paramref name="flag" /> jest <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />, który reprezentuje więcej niż jeden typ dostępu do zmiennych środowiska, lub <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />, nie reprezentuje dowolnego typu zmienną dostęp do środowiska.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="environmentPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do intersect z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień.</param>
        <summary>Tworzy i zwraca uprawnienia, które jest przecięcia bieżące uprawnienia i określony.</summary>
        <returns>Nowe uprawnienie reprezentuje część wspólną bieżące uprawnienia i określony. Jest to nowe uprawnienie <see langword="null" /> Jeśli część wspólną jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Część wspólną dwóch uprawnień jest uprawnienia, które opisano stan, które opisują one zarówno wspólnych. Tylko zażąda przekazuje oba oryginalnego uprawnienia zostaną spełnione przecięcie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest taki sam typ jak bieżące uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="environmentPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienia, które ma być sprawdzane pod kątem relacji podzbioru. To uprawnienie musi być tego samego typu co bieżący uprawnień.</param>
        <summary>Określa, czy bieżące uprawnienia podzbiór określonego uprawnienia.</summary>
        <returns>
          <see langword="true" /> Jeśli bieżące uprawnienia są podzbiorem określonego uprawnienia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące uprawnienia jest podzbiorem określonego uprawnienia, jeśli uprawnienia bieżącego Określa stan, który jest całkowicie zawarty w określonego uprawnienia. Na przykład uprawnienia reprezentujące dostęp do C:\example.txt jest podzbiorem uprawnienie reprezentujące dostęp do folderu C:\\. Jeśli ta metoda zwraca `true`, bieżący uprawnienie reprezentuje nie uzyskać dostęp do chronionych zasobów niż określone uprawnienie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest taki sam typ jak bieżące uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="override this.IsUnrestricted : unit -&gt; bool" Usage="environmentPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy bieżący uprawnienie jest nieograniczony.</summary>
        <returns>
          <see langword="true" /> Jeśli bieżący uprawnienie jest nieograniczony; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nieograniczony uprawnienie reprezentuje Unii wszystkie możliwe stany uprawnienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPathList">
      <MemberSignature Language="C#" Value="public void SetPathList (System.Security.Permissions.EnvironmentPermissionAccess flag, string pathList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPathList(valuetype System.Security.Permissions.EnvironmentPermissionAccess flag, string pathList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPathList (flag As EnvironmentPermissionAccess, pathList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPathList(System::Security::Permissions::EnvironmentPermissionAccess flag, System::String ^ pathList);" />
      <MemberSignature Language="F#" Value="member this.SetPathList : System.Security.Permissions.EnvironmentPermissionAccess * string -&gt; unit" Usage="environmentPermission.SetPathList (flag, pathList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.EnvironmentPermissionAccess" />
        <Parameter Name="pathList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="flag">Jeden z <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> wartości.</param>
        <param name="pathList">Lista zmiennych środowiskowych (rozdzielone średnikiem).</param>
        <summary>Ustawia określony dostępu do zmiennych środowiskowych określony stan istniejące uprawnienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poprzedni stan bieżący uprawnienie zostanie zastąpiona.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Security.Permissions.EnvironmentPermission.SetPathList%2A> metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.EnvironmentPermission> klasy.  
  
 [!code-csharp[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/CS/environmentpermission.cs#7)]
 [!code-vb[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/VB/environmentpermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pathList" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="flag" /> Parametr nie jest prawidłową wartością <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="environmentPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kodowania XML uprawnienia i swojego bieżącego stanu.</summary>
        <returns>Kodowanie XML uprawnienia, łącznie z żadnych informacji o stanie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="environmentPermission.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">Uprawnienie do łączenia z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień.</param>
        <summary>Tworzy uprawnienia, które łączy bieżące uprawnienia i określony.</summary>
        <returns>Nowe uprawnienie reprezentuje złożenie bieżące uprawnienia i określony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wynik wywołania <xref:System.Security.Permissions.EnvironmentPermission.Union%2A> jest uprawnienia, które reprezentuje wszystkie stany reprezentowany przez bieżące uprawnienia i określonego uprawnienia. Wszelkie żądania, który przekazuje albo uprawnienie przekazuje ich union.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="other" /> Parametr nie jest <see langword="null" /> i nie jest taki sam typ jak bieżące uprawnienia.</exception>
      </Docs>
    </Member>
  </Members>
</Type>