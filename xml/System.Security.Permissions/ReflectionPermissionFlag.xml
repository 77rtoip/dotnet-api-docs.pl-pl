<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReflectionPermissionFlag.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59ea8a0435690e232ce077bff445bd216d32b3a29.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ea8a0435690e232ce077bff445bd216d32b3a29</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Specifies the permitted use of the <ph id="ph1">&lt;see cref="N:System.Reflection" /&gt;</ph> and <ph id="ph2">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph> namespaces.</source>
          <target state="translated">Określa użycie dozwolonych <ph id="ph1">&lt;see cref="N:System.Reflection" /&gt;</ph> i <ph id="ph2">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph> przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>This enumeration is used by the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt;</ph> classes.</source>
          <target state="translated">To wyliczenie jest używany przez <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> i <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>If no <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> is granted, reflection is allowed on all types and members, but invocation operations are allowed only on visible types and members.</source>
          <target state="translated">Jeśli nie <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> udzieleniu odbicia jest dozwolona dla wszystkich typów i członków, ale wywołanie operacji są dozwolone tylko w typach widocznych i elementów członkowskich.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>For more information, see <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>zagadnienia dotyczące zabezpieczeń dla odbicia<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Because <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> can provide access to private class members, we recommend that you grant <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> to Internet code only with the RestrictedMemberAccess flag, and not with any other flags.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> można zapewnić dostęp do elementów członkowskich klasy prywatne, zaleca się przyznanie <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> do kodu Internet tylko przy użyciu flagi RestrictedMemberAccess, a nie z innymi flagi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>The RestrictedMemberAccess flag is introduced in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">Flaga RestrictedMemberAccess została wprowadzona w systemie <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To use this flag, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">Aby użyć tej flagi, powinien prowadzić aplikacji <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> lub nowszym.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>AllFlags does not include the RestrictedMemberAccess flag.</source>
          <target state="translated">AllFlags nie ma flagi RestrictedMemberAccess.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To get a mask that includes all flags in this enumeration, you must use the combination of AllFlags with RestrictedMemberAccess.</source>
          <target state="translated">Aby uzyskać maski, która obejmuje wszystkie flagi w tym wyliczeniu, należy użyć kombinacji AllFlags z RestrictedMemberAccess.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>, the ReflectionEmit flag is no longer required to emit code, unless debug symbols are emitted.</source>
          <target state="translated">Począwszy od <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>, Flaga ReflectionEmit nie jest wymagana do emisji kodu, chyba że są emitowane symboli debugowania.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To use this feature, your application should target the <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> or later.</source>
          <target state="translated">Aby użyć tej funkcji, należy docelowy aplikacji <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> lub nowszym.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Starting with the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, the TypeInformation flag is no longer required to reflect on nonpublic types and members; the flag has been marked obsolete.</source>
          <target state="translated">Począwszy od <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, Flaga TypeInformation nie jest już wymagana w niepubliczne typy i składniki; flagi zostało oznaczone jako przestarzałe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> enumeration to initialize a new instance of the <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> class that represents the right to perform restricted member access.</source>
          <target state="translated">Poniższy przykład przedstawia użycie <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> wyliczeniu, aby zainicjować nowe wystąpienie klasy <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> klasa, która reprezentuje uprawnień do wykonania dostęp do elementu członkowskiego ograniczone.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags&gt;</ph> class.</source>
          <target state="translated">Ten przykład jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see <bpt id="p1">[</bpt>Walkthrough: Emitting Code in Partial Trust Scenarios<ept id="p1">](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md)</ept>.</source>
          <target state="translated">Na przykład, który przedstawia sposób użycia flagi RestrictedMemberAccess z Internetu kod, zobacz <bpt id="p1">[</bpt>wskazówki: emitowanie kodu w scenariuszach zaufania częściowego<ept id="p1">](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
          <source><ph id="ph1">&lt;see langword="TypeInformation" /&gt;</ph> , <ph id="ph2">&lt;see langword="MemberAccess" /&gt;</ph>, and <ph id="ph3">&lt;see langword="ReflectionEmit" /&gt;</ph> are set.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="TypeInformation" /&gt;</ph> , <ph id="ph2">&lt;see langword="MemberAccess" /&gt;</ph>, i <ph id="ph3">&lt;see langword="ReflectionEmit" /&gt;</ph> są ustawione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
          <source><ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /&gt;</ph> does not include <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /&gt;</ph> nie ma <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
          <source>Invocation operations on all members are allowed, regardless of grant set.</source>
          <target state="translated">Wywołania operacji na wszystkie elementy członkowskie są dozwolone, niezależnie od tego zestawu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
          <source>If this flag is not set, invocation operations are allowed only on visible members.</source>
          <target state="translated">Jeśli ta flaga nie jest ustawiona, wywołania operacji są dozwolone tylko w elementach członkowskich widoczne.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
          <source>Enumeration of types and members is allowed.</source>
          <target state="translated">Wyliczanie typów i członków jest dozwolone.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
          <source>Invocation operations are allowed on visible types and members.</source>
          <target state="translated">Wywołania operacji są dozwolone w typach widocznych i elementów członkowskich.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
          <source>Emitting debug symbols is allowed.</source>
          <target state="translated">Emitowanie symboli debugowania jest dozwolone.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this flag is no longer required to emit code.</source>
          <target state="translated">Począwszy od <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, ta flaga nie jest wymagana do emisji kodu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>Restricted member access is provided for partially trusted code.</source>
          <target state="translated">Dostęp do elementu członkowskiego ograniczone jest dostępna dla częściowo zaufanego kodu.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed.</source>
          <target state="translated">Częściowo zaufany kod mogą uzyskiwać dostęp do niepubliczne typy i składniki, ale tylko wtedy, gdy zestaw przyznanie częściowo zaufany kod zawiera wszystkie uprawnienia w zestawie grant zestawu, który zawiera niepubliczne typy i elementy członkowskie, do której uzyskuje dostęp.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>This flag is new in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">Ta flaga jest nowa w programie <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>This flag is obsolete.</source>
          <target state="translated">Ta flaga jest przestarzała.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>No flags are necessary to enumerate types and members and to examine their metadata.</source>
          <target state="translated">Żadnych flag są niezbędne, można wyliczyć typów i członków i sprawdzać ich metadanych.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>Use <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /&gt;</ph> instead.</source>
          <target state="translated">Zamiast nich należy używać słów kluczowych <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>