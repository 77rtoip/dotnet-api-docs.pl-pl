<Type Name="GacIdentityPermission" FullName="System.Security.Permissions.GacIdentityPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d3c0589762f6ffa4acbd7cb1959a47418122a36" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69081760" /></Metadata><TypeSignature Language="C#" Value="public sealed class GacIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit GacIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.GacIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GacIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class GacIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type GacIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje uprawnienia tożsamości dla plików pochodzących z globalnej pamięci podręcznej zestawów. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pliki znajdują się w globalnej pamięci podręcznej zestawów lub nie są. Brak zmian przyznanych uprawnień, więc wszystkie <xref:System.Security.Permissions.GacIdentityPermission> obiekty są równe.  
  
> [!IMPORTANT]
>  Począwszy od, uprawnienia tożsamości nie są używane. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  
>   
>  W .NET Framework wersje 1,0 i 1,1 Wymagania dotyczące uprawnień tożsamości są skuteczne nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to, że chociaż zestaw wywołujący ma pełne zaufanie, żądanie uprawnienia tożsamości kończy się niepowodzeniem, jeśli zestaw nie spełnia kryteriów zapotrzebowania. Począwszy od .NET Framework w wersji 2,0, wymagania dotyczące uprawnień tożsamości są nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkich uprawnień, eliminując jednocześnie traktowanie uprawnień tożsamości.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.GacIdentityPermission" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GacIdentityPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.GacIdentityPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GacIdentityPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.GacIdentityPermission" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Security.Permissions.GacIdentityPermission> <xref:System.Security.Permissions.PermissionState> z wartością <xref:System.Security.Permissions.PermissionState.None>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Security.Permissions.GacIdentityPermission.%23ctor> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.GacIdentityPermission#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.GacIdentityPermission/CPP/gacidentitypermission.cpp#9)]
 [!code-csharp[System.Security.Permissions.GacIdentityPermission#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.GacIdentityPermission/CS/gacidentitypermission.cs#9)]
 [!code-vb[System.Security.Permissions.GacIdentityPermission#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.GacIdentityPermission/VB/gacidentitypermission.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GacIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GacIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.GacIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.GacIdentityPermission" Usage="new System.Security.Permissions.GacIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jedna z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Permissions.GacIdentityPermission" /> klasy z pełnymi ograniczeniami <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  W .NET Framework wersje 1,0 i 1,1 uprawnienia do <xref:System.Security.Permissions.PermissionState.Unrestricted> tożsamości nie mogą mieć wartości stanu uprawnienia. Począwszy od .NET Framework w wersji 2,0 uprawnienia tożsamości mogą mieć dowolną wartość stanu uprawnienia. Oznacza to, że w 2,0 i nowszych wersjach uprawnienia do tożsamości mają takie samo zachowanie jak uprawnienia implementujące <xref:System.Security.Permissions.IUnrestrictedPermission> interfejs.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Security.Permissions.GacIdentityPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.GacIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.GacIdentityPermission/CPP/gacidentitypermission.cpp#7)]
 [!code-csharp[System.Security.Permissions.GacIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.GacIdentityPermission/CS/gacidentitypermission.cs#7)]
 [!code-vb[System.Security.Permissions.GacIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.GacIdentityPermission/VB/gacidentitypermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="state" />nie jest prawidłową <see cref="T:System.Security.Permissions.PermissionState" /> wartością.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.GacIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="gacIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca identyczną kopię bieżącego uprawnienia.</summary>
        <returns>Kopia bieżącego uprawnienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopia uprawnienia reprezentuje ten sam dostęp do zasobów co oryginalne uprawnienie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="gacIdentityPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> , który zawiera Kodowanie XML do użycia w celu utworzenia uprawnienia.</param>
        <summary>Tworzy uprawnienie z kodowania XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda tworzy na <xref:System.Security.Permissions.GacIdentityPermission> podstawie kodowania <xref:System.Security.SecurityElement> XML zdefiniowanego przez obiekt. <xref:System.Security.Permissions.GacIdentityPermission.FromXml%2A> Użyj metody do kodowania XML, łącznie z <xref:System.Security.Permissions.GacIdentityPermission>informacjami o stanie. <xref:System.Security.Permissions.GacIdentityPermission.ToXml%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="securityElement" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="securityElement" />nie jest prawidłowym elementem uprawnień.  
  
—lub— 
Numer <paramref name="securityElement" /> wersji jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="gacIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do przecięcia z bieżącym uprawnieniem. Musi być tego samego typu co bieżące uprawnienie.</param>
        <summary>Tworzy i zwraca uprawnienie, które jest częścią wspólną bieżącego uprawnienia i określonego uprawnienia.</summary>
        <returns>Nowe uprawnienie, które reprezentuje część wspólną bieżącego uprawnienia i określonego uprawnienia. Nowe uprawnienie jest <see langword="null" /> , jeśli część wspólna jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wspólną częścią dwóch uprawnień jest uprawnienie, które opisuje zestaw operacji, które oba często opisują. Tylko żądanie przekazujące pierwotne uprawnienia spowoduje przekazanie przedziału.  
  
 Obsługuje tylko operacje Set <xref:System.Security.Permissions.GacIdentityPermission.IsSubsetOf%2A>(, <xref:System.Security.Permissions.GacIdentityPermission.Intersect%2A>i <xref:System.Security.Permissions.GacIdentityPermission.Union%2A> ), gdy bieżące uprawnienie jest równe określonemu uprawnienia. <xref:System.Security.Permissions.GacIdentityPermission>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" />nie <see langword="null" /> jest i nie jest tego samego typu co bieżące uprawnienie.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="gacIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Obiekt uprawnień do testowania relacji podzbioru. Uprawnienie musi być tego samego typu co bieżące uprawnienie.</param>
        <summary>Wskazuje, czy bieżące uprawnienie jest podzbiorem określonego uprawnienia.</summary>
        <returns><see langword="true" />Jeśli bieżące uprawnienie jest podzbiorem określonego uprawnienia; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące uprawnienie jest podzbiorem określonego uprawnienia, jeśli bieżące uprawnienie reprezentuje zestaw operacji, które są w całości zawarte w określonym uprawnienia. Jeśli ta metoda zwróci `true`wartość, bieżące uprawnienie nie reprezentuje więcej dostępu do chronionego zasobu niż określone uprawnienie.  
  
 Obsługuje tylko operacje Set <xref:System.Security.Permissions.GacIdentityPermission.IsSubsetOf%2A>(, <xref:System.Security.Permissions.GacIdentityPermission.Intersect%2A>i <xref:System.Security.Permissions.GacIdentityPermission.Union%2A> ), gdy bieżące uprawnienie jest równe określonemu uprawnienia. <xref:System.Security.Permissions.GacIdentityPermission>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" />nie <see langword="null" /> jest i nie jest tego samego typu co bieżące uprawnienie.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.GacIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="gacIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy Kodowanie XML uprawnienia i jego bieżący stan.</summary>
        <returns><see cref="T:System.Security.SecurityElement" /> Reprezentuje Kodowanie XML uprawnienia, w tym informacje o stanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby <xref:System.Security.Permissions.GacIdentityPermission> utworzyć z <xref:System.Security.SecurityElement>. <xref:System.Security.Permissions.GacIdentityPermission.FromXml%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="gacIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do łączenia z bieżącym uprawnieniem. Musi być tego samego typu co bieżące uprawnienie.</param>
        <summary>Tworzy i zwraca uprawnienie, które jest złożeniem bieżącego uprawnienia i określonym uprawnieniem.</summary>
        <returns>Nowe uprawnienie, które reprezentuje związek z bieżącym uprawnieniem i określonym uprawnieniem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wynikiem wywołania <xref:System.Security.Permissions.GacIdentityPermission.Union%2A> metody jest uprawnienie, które obejmuje wszystkie operacje reprezentowane przez bieżące uprawnienie i określone uprawnienie. Każde żądanie, które przekazuje jedno uprawnienie, przekazuje ich Unię.  
  
 Obsługuje tylko operacje Set <xref:System.Security.Permissions.GacIdentityPermission.IsSubsetOf%2A>(, <xref:System.Security.Permissions.GacIdentityPermission.Intersect%2A>i <xref:System.Security.Permissions.GacIdentityPermission.Union%2A> ), gdy bieżące uprawnienie jest równe określonemu uprawnienia. <xref:System.Security.Permissions.GacIdentityPermission>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" />nie <see langword="null" /> jest i nie jest tego samego typu co bieżące uprawnienie.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
