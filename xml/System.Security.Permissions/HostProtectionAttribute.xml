<Type Name="HostProtectionAttribute" FullName="System.Security.Permissions.HostProtectionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3dc5f0dbbfe014cde4f115f48727c4364318db7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30570676" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HostProtectionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HostProtectionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.HostProtectionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostProtectionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostProtectionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia korzystanie z akcji zabezpieczenia deklaratywne ustalenie wymagań dotyczących ochrony hosta. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten atrybut ma wpływ tylko niezarządzanych aplikacji obsługujących wspólnego języka środowiska uruchomieniowego i wdrożenie hosta ochrony, takie jak SQL Server. Jeśli kod jest uruchamiana w aplikacji klienckiej lub na serwerze, który nie jest chroniony przez hosta, atrybut "evaporates"; nie jest wykrywane i w związku z tym nie zastosować. Po zastosowaniu, wyniki akcji zabezpieczeń podczas tworzenia żądania łącza na podstawie zasobów hosta ujawnia klasa lub metoda.  
  
> [!IMPORTANT]
>  Ten atrybut ma na celu wymuszenia specyficzne dla hosta wytycznych programowania modelu, nie działanie zabezpieczeń.  Mimo że żądanie łącza jest używany do sprawdzania zgodności do wymagania modelu programowania <xref:System.Security.Permissions.HostProtectionAttribute> nie jest uprawnienia zabezpieczeń.  
  
 Jeśli host nie ma wymagań modelu programowania, nie występują żądania łączy.  
  
 Ten atrybut określa następujące czynności:  
  
-   Metod lub klas, które nie pasują do hosta programowania modelu, ale są w przeciwnym razie niegroźne.  
  
-   Metod lub klas, które nie pasują do jej modelu programowania hosta i może prowadzić do destabilizing kod zarządzany serwer użytkownika.  
  
-   Metod lub klas, które nie pasują do hosta programowania modelu i może prowadzić do destabilizacji sam proces serwera.  
  
> [!NOTE]
>  W przypadku tworzenia biblioteki klas, który ma być wywoływany przez aplikacje, które mogą być wykonywane w środowisku hosta chronione elementy członkowskie, które udostępniają należy zastosować atrybut <xref:System.Security.Permissions.HostProtectionResource> kategorie zasobów. Elementy członkowskie biblioteki klas .NET Framework z tym atrybutem spowodować tylko bezpośredniego obiektu wywołującego ma być sprawdzany.  Biblioteka elementów członkowskich musi powodować kontrolę jego bezpośredniego obiektu wywołującego w taki sam sposób.  
  
> [!NOTE]
>  Nie używaj [Ngen.exe (Generator obrazu natywnego)](~/docs/framework/tools/ngen-exe-native-image-generator.md) do utworzenia obrazu macierzystego zestawów, które są chronione przez <xref:System.Security.Permissions.HostProtectionAttribute>. W pełni zaufanym środowisku, obraz jest zawsze został załadowany, bez względu na <xref:System.Security.Permissions.HostProtectionAttribute>i w środowisku częściowego zaufania obrazu nie jest załadowany.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutu z różnymi <xref:System.Security.Permissions.HostProtectionResource> wartości.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#1)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#1)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostProtectionAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.HostProtectionAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostProtectionAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> z domyślnymi wartościami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Security.Permissions.HostProtectionAttribute> z wszystkich właściwości Boolean ustawioną `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostProtectionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostProtectionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">Jeden z <see cref="T:System.Security.Permissions.SecurityAction" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> klasy z określonym <see cref="T:System.Security.Permissions.SecurityAction" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można użyć tego konstruktora. Jest on przeznaczony do użycia infrastruktury.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="action" /> nie jest <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca nowy host uprawnienia ochrony.</summary>
        <returns>
          <see cref="T:System.Security.IPermission" /> Odpowiadający bieżący atrybut.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę metodę należy wywoływać tylko przez system zabezpieczeń, nigdy nie przez kod aplikacji.  
  
 W czasie kompilacji atrybuty przekonwertować deklaracje zabezpieczeń do serializacji formularza w metadanych. Zabezpieczenia deklaracyjne danych w metadanych jest tworzona na podstawie uprawnień odpowiadający atrybut, który zwraca ta metoda.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalProcessMgmt">
      <MemberSignature Language="C#" Value="public bool ExternalProcessMgmt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExternalProcessMgmt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalProcessMgmt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExternalProcessMgmt { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Proces zewnętrzny zarządzania jest widoczna.</summary>
        <value>
          <see langword="true" /> Jeśli zarządzanie procesem zewnętrzne jest uwidaczniany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kod, który przedstawia proces zewnętrzny zarządzania może tworzenia lub usuwania innych procesów.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutem <xref:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt%2A> właściwości. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.HostProtectionAttribute> klasy.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#5)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#5)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt" />
      </Docs>
    </Member>
    <Member MemberName="ExternalThreading">
      <MemberSignature Language="C#" Value="public bool ExternalThreading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExternalThreading" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalThreading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExternalThreading { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wątkowość zewnętrzne jest widoczna.</summary>
        <value>
          <see langword="true" /> Jeśli jest uwidaczniany wątkowość zewnętrznych; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kod, który przedstawia zewnętrzne wątkowość tworzy lub manipuluje wątków innych niż własną, które mogą być szkodliwe dla hosta.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutem <xref:System.Security.Permissions.HostProtectionAttribute.ExternalThreading%2A> właściwości. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.HostProtectionAttribute> klasy.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#6)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#6)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.HostProtectionResource.ExternalThreading" />
      </Docs>
    </Member>
    <Member MemberName="MayLeakOnAbort">
      <MemberSignature Language="C#" Value="public bool MayLeakOnAbort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MayLeakOnAbort" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort" />
      <MemberSignature Language="VB.NET" Value="Public Property MayLeakOnAbort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MayLeakOnAbort { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zasoby mogą wycieku pamięci, jeśli operacja zostanie zakończony.</summary>
        <value>
          <see langword="true" /> Jeśli zasoby mogą wycieku pamięci po zakończeniu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kod może spowodować przecieków zasobów na rozwiązanie, jeśli nie są chronione przez bezpieczne dojście lub inne metody zapewniania zwolnienia zasobów.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort" />
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.HostProtectionResource Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.HostProtectionResource Resources" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As HostProtectionResource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::HostProtectionResource Resources { System::Security::Permissions::HostProtectionResource get(); void set(System::Security::Permissions::HostProtectionResource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.HostProtectionResource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagi określające, kategorie funkcji, które są potencjalnie szkodliwe do hosta.</summary>
        <value>Bitowe połączenie <see cref="T:System.Security.Permissions.HostProtectionResource" /> wartości. Wartość domyślna to <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.HostProtectionResource> Flagi określają zasoby dostępne po metodzie lub klasie potencjalnie szkodliwe do hosta.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutem <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> właściwości. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.HostProtectionAttribute> klasy.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#2)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#2)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Permissions.HostProtectionResource" />
      </Docs>
    </Member>
    <Member MemberName="SecurityInfrastructure">
      <MemberSignature Language="C#" Value="public bool SecurityInfrastructure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SecurityInfrastructure" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityInfrastructure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SecurityInfrastructure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy infrastruktura zabezpieczeń jest widoczna.</summary>
        <value>
          <see langword="true" /> Jeśli infrastruktura zabezpieczeń jest uwidaczniany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystanie z <xref:System.Security.Principal.WindowsIdentity> obiekt może personifikować użytkownika jest przykładem infrastruktury zabezpieczeń udostępnianie.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutem <xref:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure%2A> właściwości. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.HostProtectionAttribute> klasy.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#4)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#4)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure" />
      </Docs>
    </Member>
    <Member MemberName="SelfAffectingProcessMgmt">
      <MemberSignature Language="C#" Value="public bool SelfAffectingProcessMgmt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelfAffectingProcessMgmt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt" />
      <MemberSignature Language="VB.NET" Value="Public Property SelfAffectingProcessMgmt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelfAffectingProcessMgmt { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy własnym wpływu na zarządzanie procesem jest widoczna.</summary>
        <value>
          <see langword="true" /> Jeśli samodzielnie wpływu na zarządzanie procesem jest uwidaczniany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Własnym wpływu na kod zarządzania procesu może zakończyć proces bieżącego, przerywanie serwera.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutem <xref:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt%2A> właściwości. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.HostProtectionAttribute> klasy.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#2)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#2)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt" />
      </Docs>
    </Member>
    <Member MemberName="SelfAffectingThreading">
      <MemberSignature Language="C#" Value="public bool SelfAffectingThreading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelfAffectingThreading" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading" />
      <MemberSignature Language="VB.NET" Value="Public Property SelfAffectingThreading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelfAffectingThreading { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy własnym wpływających na wątków jest widoczna.</summary>
        <value>
          <see langword="true" /> Jeśli własnym obejmujące wątków jest uwidaczniany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Własnym wpływających na wątkowość manipuluje wątków w taki sposób, który dotyczy tylko kod użytkownika.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutem <xref:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading%2A> właściwości. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.HostProtectionAttribute> klasy.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#3)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#3)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading" />
      </Docs>
    </Member>
    <Member MemberName="SharedState">
      <MemberSignature Language="C#" Value="public bool SharedState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharedState" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.SharedState" />
      <MemberSignature Language="VB.NET" Value="Public Property SharedState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharedState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy stan współużytkowany jest widoczna.</summary>
        <value>
          <see langword="true" /> Jeśli stan współużytkowany jest uwidaczniany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Security.Permissions.HostProtectionAttribute.SharedState%2A> jest `true`, oznacza to, że stan jest narażony mogą być udostępniane między wątkami.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutem <xref:System.Security.Permissions.HostProtectionAttribute.SharedState%2A> właściwości. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.HostProtectionAttribute> klasy.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#3)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#3)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.HostProtectionResource.SharedState" />
      </Docs>
    </Member>
    <Member MemberName="Synchronization">
      <MemberSignature Language="C#" Value="public bool Synchronization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Synchronization" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.Synchronization" />
      <MemberSignature Language="VB.NET" Value="Public Property Synchronization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Synchronization { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy synchronizacja jest widoczna.</summary>
        <value>
          <see langword="true" /> Jeśli synchronizacja jest uwidaczniany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutem <xref:System.Security.Permissions.HostProtectionAttribute.Synchronization%2A> właściwości. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.HostProtectionAttribute> klasy.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#6)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#6)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.HostProtectionResource.Synchronization" />
      </Docs>
    </Member>
    <Member MemberName="UI">
      <MemberSignature Language="C#" Value="public bool UI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UI" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.HostProtectionAttribute.UI" />
      <MemberSignature Language="VB.NET" Value="Public Property UI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UI { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy interfejs użytkownika jest widoczna.</summary>
        <value>
          <see langword="true" /> Jeśli interfejs użytkownika jest uwidaczniany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.HostProtectionAttribute> atrybutem <xref:System.Security.Permissions.HostProtectionAttribute.UI%2A> właściwości. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Security.Permissions.HostProtectionAttribute> klasy.  
  
 [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#3)]
 [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#3)]
 [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.HostProtectionResource.UI" />
      </Docs>
    </Member>
  </Members>
</Type>