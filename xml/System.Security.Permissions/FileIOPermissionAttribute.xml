<Type Name="FileIOPermissionAttribute" FullName="System.Security.Permissions.FileIOPermissionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33f0bbc60b4dec52cbb82468feeb0cf6d50297f6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36425732" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileIOPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FileIOPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.FileIOPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileIOPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileIOPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type FileIOPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zezwala na akcje zabezpieczeń dla <see cref="T:System.Security.Permissions.FileIOPermission" /> ma zostać zastosowany do kodu przy użyciu zabezpieczeń deklaratywnych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżki bezwzględne zostały określone pliki i katalogi. Dostęp do plików, kontrola zabezpieczeń jest wykonywane podczas tworzenia lub otworzyć pliku. Sprawdzanie zabezpieczeń nie została wykonana ponownie, jeśli plik nie jest zamknięte i ponownie otworzyć. Sprawdzanie uprawnień podczas dostępu do pliku minimalizuje wpływ na wydajność aplikacji kontrola zabezpieczeń, ponieważ otwarcie pliku sytuacji tylko raz, podczas odczytywania i zapisywania może występować wiele razy.  
  
 Zależy od zakresu deklaracji, która jest dozwolona <xref:System.Security.Permissions.SecurityAction> używany.  
  
 Informacji o zabezpieczeniach deklaruje atrybutu zabezpieczeń są przechowywane w metadanych elementu docelowego atrybutu i jest dostępny przez system w czasie wykonywania. Atrybuty zabezpieczeń są używane tylko w przypadku zabezpieczenia deklaratywne. Zabezpieczenia imperatywne można użyć w klasie odpowiednie uprawnienia.  
  
> [!CAUTION]
>  `Unrestricted` <xref:System.Security.Permissions.FileIOPermission> udziela uprawnień dla wszystkich ścieżek w systemie plików, w tym wiele nazw ścieżek, które mogą być używane do dostępu pojedynczego pliku. Aby <xref:System.Security.CodeAccessPermission.Deny%2A> dostępu do pliku, należy najpierw `Deny` wszystkie możliwe ścieżki do pliku. Na przykład jeśli \\\server\share jest mapowany dysk sieciowy X, do `Deny` dostęp do \\\server\share\file, należy najpierw `Deny` \\\server\share\file, X:\file i dowolnej innej ścieżki, która służy do dostępu plik.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak żądania <xref:System.Security.Permissions.FileIOPermission> przy użyciu <xref:System.Security.Permissions.FileIOPermissionAttribute> klasy i wskazujący tylko uprawnień, który ma otrzymać kod.  
  
 [!code-cpp[Classic FileIOPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileIOPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic FileIOPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/VB/source.vb#1)]  
  
 Poniższy przykład przedstawia sposób wymaga, aby kod wywołujący nie ma nieograniczony <xref:System.Security.Permissions.FileIOPermission>. Zazwyczaj należy zapotrzebowanie zarządzanej biblioteki dll w celu ochrony metod lub klas przed potencjalnie szkodliwego kodu.  
  
 [!code-cpp[Classic FileIOPermissionAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic FileIOPermissionAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic FileIOPermissionAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.FileIOPermission" />
    <altmember cref="T:System.Security.Permissions.FileIOPermissionAccess" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileIOPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileIOPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.FileIOPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.FileIOPermissionAttribute" Usage="new System.Security.Permissions.FileIOPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">Jeden z <see cref="T:System.Security.Permissions.SecurityAction" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> klasy z określonym <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy kilka wystąpień <xref:System.Security.Permissions.FileIOPermissionAttribute> klasy można ustawić różne poziomy uprawnień we/wy pliku.  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#1)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#1)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="action" /> Parametru nie jest prawidłową <see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public string All { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string All" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.All" />
      <MemberSignature Language="VB.NET" Value="Public Property All As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ All { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.All : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("use newer properties")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pełny dostęp do pliku lub katalogu, który jest określony przez wartość ciągu.</summary>
        <value>Ścieżka bezwzględna do pliku lub katalogu do pełnego dostępu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa dostępu dla pojedynczego pliku lub katalogu. Aby określić dodatkowe pliki i katalogi, należy użyć dodatkowych atrybutów.  
  
   
  
## Examples  
 Poniższy kod przykładzie <xref:System.Security.Permissions.FileIOPermissionAttribute.All%2A> właściwości, aby udzielić pełnego dostępu do określonego katalogu.  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#6)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#6)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Metoda get nie jest obsługiwana dla tej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllFiles">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.FileIOPermissionAccess AllFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.FileIOPermissionAccess AllFiles" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllFiles As FileIOPermissionAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::FileIOPermissionAccess AllFiles { System::Security::Permissions::FileIOPermissionAccess get(); void set(System::Security::Permissions::FileIOPermissionAccess value); };" />
      <MemberSignature Language="F#" Value="member this.AllFiles : System.Security.Permissions.FileIOPermissionAccess with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.AllFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dozwolone dostęp do wszystkich plików.</summary>
        <value>Bitowe połączenie <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> wartości, które reprezentuje uprawnienia dla wszystkich plików. Wartość domyślna to <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość pobiera lub ustawia dozwolone dostęp do wszystkich plików na dyskach lokalnych komputera i sieci.  
  
 Osoba <xref:System.Security.Permissions.FileIOPermissionAccess> wartość można określić za pomocą bitowej `AND` operacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllLocalFiles">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.FileIOPermissionAccess AllLocalFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.FileIOPermissionAccess AllLocalFiles" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllLocalFiles As FileIOPermissionAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::FileIOPermissionAccess AllLocalFiles { System::Security::Permissions::FileIOPermissionAccess get(); void set(System::Security::Permissions::FileIOPermissionAccess value); };" />
      <MemberSignature Language="F#" Value="member this.AllLocalFiles : System.Security.Permissions.FileIOPermissionAccess with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dozwolone dostęp do wszystkich plików lokalnych.</summary>
        <value>Bitowe połączenie <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> wartości, które reprezentuje uprawnienia dla wszystkich plików lokalnych. Wartość domyślna to <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lokalne pliki są pliki znajdujące się na komputerze lokalnym. Wszystkie pliki, które nie są dostępne za pośrednictwem dysku sieciowego są pliki lokalne.  
  
 Osoba <xref:System.Security.Permissions.FileIOPermissionAccess> wartość można określić za pomocą bitowej `AND` operacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public string Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Append" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Append { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Append : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Dołącz dostępu do pliku lub katalogu, który jest określony przez wartość ciągu.</summary>
        <value>Ścieżka bezwzględna plik lub katalog dołączania dostępu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa dostępu dla pojedynczego pliku lub katalogu. Aby określić dodatkowe pliki i katalogi, należy użyć dodatkowych atrybutów.  
  
   
  
## Examples  
 Poniższy kod przykładzie <xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A> właściwości udzielenia <xref:System.Security.Permissions.FileIOPermissionAccess.Append> dostęp do plików w określonym katalogu.  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#4)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#4)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeAccessControl">
      <MemberSignature Language="C#" Value="public string ChangeAccessControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangeAccessControl" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeAccessControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChangeAccessControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChangeAccessControl : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia plik lub katalog, w którym można zmienić informacji dotyczących kontroli dostępu.</summary>
        <value>Ścieżka bezwzględna do pliku lub katalogu, w którym można zmienić informacje dotyczące sterowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość pobiera lub ustawia dostępu dla pojedynczego pliku lub katalogu. Użyj dodatkowych <xref:System.Security.Permissions.FileIOPermissionAttribute> atrybutów, aby określić dodatkowe pliki i katalogi.  
  
> [!IMPORTANT]
>  Listy kontroli dostępu (ACL) w tym artykule opisano osoby lub grupy, którzy lub nie ma praw do określonych akcji na danym pliku i jego właściwości.  Możliwość zmiany listy ACL jest ważne uprawnień i może być przyznany należy z rozwagą.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="fileIOPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca nowy <see cref="T:System.Security.Permissions.FileIOPermission" />.</summary>
        <returns>A <see cref="T:System.Security.Permissions.FileIOPermission" /> , który odpowiada temu atrybutowi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę metodę należy wywoływać tylko przez system zabezpieczeń, nigdy nie przez kod aplikacji.  
  
 W czasie kompilacji atrybuty przekonwertować deklaracje zabezpieczeń do serializacji formularza w metadanych. Zabezpieczenia deklaracyjne danych w metadanych jest tworzona na podstawie ta metoda zwraca odpowiadającego atrybutowi uprawnień.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Informacje o ścieżce do pliku lub katalogu, dla którego ma być zabezpieczone dostępu zawiera nieprawidłowe znaki lub specyfikatory symboli wieloznacznych.</exception>
      </Docs>
    </Member>
    <Member MemberName="PathDiscovery">
      <MemberSignature Language="C#" Value="public string PathDiscovery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathDiscovery" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery" />
      <MemberSignature Language="VB.NET" Value="Public Property PathDiscovery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathDiscovery { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathDiscovery : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia plik lub katalog, do którego należy przyznać odnajdywania ścieżki.</summary>
        <value>Ścieżka bezwzględna do pliku lub katalogu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżka odnajdywania kontrolujących dostęp do informacji w sama ścieżka. Pozwala to chronić poufne informacje w ścieżce, takie jak nazwy użytkowników, a także informacje o strukturze katalogów ujawniony w ścieżce. Ta wartość nie powoduje przyznania dostępu do plików lub folderów reprezentowany przez ścieżkę.  
  
> [!NOTE]
>  Ze względu na wydajność <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> powinny być przyznane tylko katalogi, a nie do plików. Na przykład <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> należy udzielić zezwolenia na ścieżki, takie jak C:\test i C:\test\\, a nie do plików, na przykład C:\test\example.txt.  
  
 Ta właściwość określa dostępu dla pojedynczego pliku lub katalogu. Aby określić dodatkowe pliki i katalogi, należy użyć dodatkowych atrybutów.  
  
   
  
## Examples  
 Poniższy kod przykładzie <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> właściwości udzielenia <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> dostęp do plików w określonym katalogu.  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#3)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#3)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public string Read { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Read" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.Read" />
      <MemberSignature Language="VB.NET" Value="Public Property Read As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Read { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Read : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.Read" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dostęp do odczytu dla pliku lub katalogu określonym przez wartość ciągu.</summary>
        <value>Ścieżka bezwzględna do pliku lub katalogu, aby uzyskać dostęp do odczytu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa dostępu dla pojedynczego pliku lub katalogu. Aby określić dodatkowe pliki i katalogi, należy użyć dodatkowych atrybutów.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A> właściwości udzielenia <xref:System.Security.Permissions.FileIOPermissionAccess.Read> dostęp do plików w określonym katalogu.  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#2)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#2)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewAccessControl">
      <MemberSignature Language="C#" Value="public string ViewAccessControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewAccessControl" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewAccessControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewAccessControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewAccessControl : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia plik lub katalog, w którym można wyświetlać informacje dotyczące kontroli dostępu.</summary>
        <value>Ścieżka bezwzględna do pliku lub katalogu, w którym można wyświetlać informacje dotyczące sterowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość pobiera lub ustawia dostępu dla pojedynczego pliku lub katalogu. Użyj dodatkowych <xref:System.Security.Permissions.FileIOPermissionAttribute> atrybutów, aby określić dodatkowe pliki i katalogi.  
  
> [!IMPORTANT]
>  Listy kontroli dostępu (ACL) w tym artykule opisano osoby lub grupy, którzy lub nie ma praw do określonych akcji na danym pliku i jego właściwości.  Możliwość wyświetlania listy ACL jest ważne uprawnień i może być przyznany należy z rozwagą.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewAndModify">
      <MemberSignature Language="C#" Value="public string ViewAndModify { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewAndModify" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewAndModify As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewAndModify { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewAndModify : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia plik lub katalog, w którym plik danych można wyświetlać i modyfikować.</summary>
        <value>Ścieżka bezwzględna do pliku lub katalogu, w którym plik danych można wyświetlać i modyfikować.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa <xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A>, <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A>, <xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A>, i <xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A> właściwości dla pojedynczego pliku lub katalogu. Użyj dodatkowych <xref:System.Security.Permissions.FileIOPermissionAttribute> atrybutów, aby określić dodatkowe pliki i katalogi. Prawa dostępu są tylko danych plików nie ma dostępu do właściwości formantu <xref:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl%2A> i <xref:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl%2A>.  
  
> [!NOTE]
>  `get` Akcesor zapewnia zgodność kompilatora C#. Kompilator języka C# wymaga właściwości atrybutów, aby zezwalać na odczyt i zapis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see langword="get" /> Jest wywoływana metoda dostępu. Metody dostępu jest dostępne tylko dla zgodności kompilatora C#.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public string Write { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Write" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.Write" />
      <MemberSignature Language="VB.NET" Value="Public Property Write As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Write { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Write : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.Write" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dostęp do zapisu dla pliku lub katalogu określonym przez wartość ciągu.</summary>
        <value>Ścieżka bezwzględna do pliku lub katalogu do zapisu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa dostępu dla pojedynczego pliku lub katalogu. Aby określić dodatkowe pliki i katalogi, należy użyć dodatkowych atrybutów.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A> właściwości udzielenia <xref:System.Security.Permissions.FileIOPermissionAccess.Write> dostęp do plików w określonym katalogu.  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#5)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#5)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>