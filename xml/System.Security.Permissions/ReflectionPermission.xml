<Type Name="ReflectionPermission" FullName="System.Security.Permissions.ReflectionPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acff70bef410c518b3076018f3f88125b050a292" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69057888" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReflectionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ReflectionPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReflectionPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReflectionPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type ReflectionPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7e57c-101">Kontroluje dostęp do typów niepublicznych i członków za pomocą <see cref="N:System.Reflection" /> interfejsów API.</span><span class="sxs-lookup"><span data-stu-id="7e57c-101">Controls access to non-public types and members through the <see cref="N:System.Reflection" /> APIs.</span></span> <span data-ttu-id="7e57c-102">Steruje niektórymi <see cref="N:System.Reflection.Emit" /> funkcjami interfejsów API.</span><span class="sxs-lookup"><span data-stu-id="7e57c-102">Controls some features of the <see cref="N:System.Reflection.Emit" /> APIs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e57c-103">Bez <xref:System.Security.Permissions.ReflectionPermission>, kod może używać odbicia, aby uzyskać dostęp tylko do publicznych elementów członkowskich obiektów.</span><span class="sxs-lookup"><span data-stu-id="7e57c-103">Without <xref:System.Security.Permissions.ReflectionPermission>, code can use reflection to access only the public members of objects.</span></span> <span data-ttu-id="7e57c-104">Kod z <xref:System.Security.Permissions.ReflectionPermission> i odpowiednimi <xref:System.Security.Permissions.ReflectionPermissionFlag> flagami mogą uzyskiwać dostęp `protected` do `private` elementów i.</span><span class="sxs-lookup"><span data-stu-id="7e57c-104">Code with <xref:System.Security.Permissions.ReflectionPermission> and the appropriate <xref:System.Security.Permissions.ReflectionPermissionFlag> flags can access the `protected` and `private` members of objects.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="7e57c-105">Ponieważ <xref:System.Security.Permissions.ReflectionPermission> program może zapewnić dostęp do typów niepublicznych i członków, zalecamy, aby nie przyznawać <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kodu internetowego, z wyjątkiem flagi.</span><span class="sxs-lookup"><span data-stu-id="7e57c-105">Because <xref:System.Security.Permissions.ReflectionPermission> can provide access to non-public types and members, we recommend that you do not grant <xref:System.Security.Permissions.ReflectionPermission> to Internet code, except with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7e57c-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess>zezwala na dostęp do niepublicznych składowych, z ograniczeniami, że zestaw uprawnień niepublicznych składowych musi być równy lub podzestawowi, który ma dostęp do niepublicznych składowych.</span><span class="sxs-lookup"><span data-stu-id="7e57c-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> allows access to non-public members, with the restriction that the grant set of the non-public members must be equal to, or a subset of, the grant set of the code that accesses the non-public members.</span></span>  
  
 <span data-ttu-id="7e57c-107">Niektóre funkcje emisji odbicia, takie jak emitowanie symboli debugowania, wymagają <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> od flagi.</span><span class="sxs-lookup"><span data-stu-id="7e57c-107">Certain features of reflection emit, such as emitting debug symbols, require <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="7e57c-108">Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.ReflectionPermissionFlag> Wyliczenie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-108">For more information, see the <xref:System.Security.Permissions.ReflectionPermissionFlag> enumeration.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionFlag" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
    <related type="Article" href="~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md"><span data-ttu-id="7e57c-109">Zagadnienia dotyczące zabezpieczeń dla odbicia</span><span class="sxs-lookup"><span data-stu-id="7e57c-109">Security Considerations for Reflection</span></span></related>
    <related type="Article" href="~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md"><span data-ttu-id="7e57c-110">Problemy związane z zabezpieczeniami w emisji odbicia</span><span class="sxs-lookup"><span data-stu-id="7e57c-110">Security Issues in Reflection Emit</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e57c-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.ReflectionPermission" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-111">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.ReflectionPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.ReflectionPermission" Usage="new System.Security.Permissions.ReflectionPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="7e57c-112">Jedna z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="7e57c-112">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="7e57c-113">Inicjuje nowe wystąpienie <see cref="T:System.Security.Permissions.ReflectionPermission" /> klasy za pomocą w pełni ograniczonego lub nieograniczonego uprawnienia określonego.</span><span class="sxs-lookup"><span data-stu-id="7e57c-113">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with either fully restricted or unrestricted permission as specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e57c-114">Tworzy w pełni ograniczone (`None`) lub `Unrestricted` dostęp do metadanych.</span><span class="sxs-lookup"><span data-stu-id="7e57c-114">Creates either fully restricted (`None`) or `Unrestricted` access to metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e57c-115">Poniższy przykład kodu pokazuje użycie <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="7e57c-115">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="7e57c-116">Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.ReflectionPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-116">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#7)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e57c-117">Parametr nie jest prawidłową <see cref="T:System.Security.Permissions.PermissionState" />wartością. <paramref name="state" /></span><span class="sxs-lookup"><span data-stu-id="7e57c-117">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.ReflectionPermissionFlag flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.ReflectionPermissionFlag flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flag As ReflectionPermissionFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::ReflectionPermissionFlag flag);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.ReflectionPermission : System.Security.Permissions.ReflectionPermissionFlag -&gt; System.Security.Permissions.ReflectionPermission" Usage="new System.Security.Permissions.ReflectionPermission flag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.ReflectionPermissionFlag" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="7e57c-118">Jedna z <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="7e57c-118">One of the <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> values.</span></span></param>
        <summary><span data-ttu-id="7e57c-119">Inicjuje nowe wystąpienie <see cref="T:System.Security.Permissions.ReflectionPermission" /> klasy z określonym dostępem.</span><span class="sxs-lookup"><span data-stu-id="7e57c-119">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with the specified access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7e57c-120">Poniższy przykład kodu pokazuje użycie <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="7e57c-120">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="7e57c-121">Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.ReflectionPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-121">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e57c-122">Parametr nie jest prawidłową <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />wartością. <paramref name="flag" /></span><span class="sxs-lookup"><span data-stu-id="7e57c-122">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="reflectionPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e57c-123">Tworzy i zwraca identyczną kopię bieżącego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-123">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="7e57c-124">Kopia bieżącego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-124">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e57c-125">Kopia uprawnienia reprezentuje ten sam dostęp do zasobów co oryginalne uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-125">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e57c-126">Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.ReflectionPermission.Copy%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e57c-126">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Copy%2A> method.</span></span> <span data-ttu-id="7e57c-127">Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.ReflectionPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-127">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e57c-128">Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-128">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="7e57c-129">Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.</span><span class="sxs-lookup"><span data-stu-id="7e57c-129">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#5)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.ReflectionPermissionFlag Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.ReflectionPermissionFlag Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ReflectionPermission.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As ReflectionPermissionFlag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::ReflectionPermissionFlag Flags { System::Security::Permissions::ReflectionPermissionFlag get(); void set(System::Security::Permissions::ReflectionPermissionFlag value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Permissions.ReflectionPermissionFlag with get, set" Usage="System.Security.Permissions.ReflectionPermission.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e57c-130">Pobiera lub ustawia typ odbicia dozwolony dla bieżącego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-130">Gets or sets the type of reflection allowed for the current permission.</span></span></summary>
        <value><span data-ttu-id="7e57c-131">Ustaw flagi dla bieżącego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-131">The set flags for the current permission.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7e57c-132">Poniższy przykład kodu pokazuje użycie <xref:System.Security.Permissions.ReflectionPermission.Flags%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e57c-132">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.Flags%2A> property.</span></span> <span data-ttu-id="7e57c-133">Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.ReflectionPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-133">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e57c-134">Podjęto próbę ustawienia nieprawidłowej wartości dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e57c-134">An attempt is made to set this property to an invalid value.</span></span> <span data-ttu-id="7e57c-135">Zobacz <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> , aby uzyskać prawidłowe wartości.</span><span class="sxs-lookup"><span data-stu-id="7e57c-135">See <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> for the valid values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="reflectionPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd"><span data-ttu-id="7e57c-136">Kodowanie XML do użycia w celu odtworzenia uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-136">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="7e57c-137">Rekonstruuje uprawnienia z określonym stanem z kodowania XML.</span><span class="sxs-lookup"><span data-stu-id="7e57c-137">Reconstructs a permission with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7e57c-138">Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.ReflectionPermission.FromXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e57c-138">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.FromXml%2A> method.</span></span> <span data-ttu-id="7e57c-139">Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.ReflectionPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-139">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e57c-140">Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-140">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="7e57c-141">Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.</span><span class="sxs-lookup"><span data-stu-id="7e57c-141">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e57c-142">Parametr ma wartość <see langword="null" />. <paramref name="esd" /></span><span class="sxs-lookup"><span data-stu-id="7e57c-142">The <paramref name="esd" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e57c-143"><paramref name="esd" /> Parametr nie jest prawidłowym elementem uprawnień.</span><span class="sxs-lookup"><span data-stu-id="7e57c-143">The <paramref name="esd" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="7e57c-144">—lub—</span><span class="sxs-lookup"><span data-stu-id="7e57c-144">-or-</span></span> 
<span data-ttu-id="7e57c-145">Numer <paramref name="esd" /> wersji parametru jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-145">The <paramref name="esd" /> parameter's version number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="reflectionPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="7e57c-146">Uprawnienie do przecięcia z bieżącym uprawnieniem.</span><span class="sxs-lookup"><span data-stu-id="7e57c-146">A permission to intersect with the current permission.</span></span> <span data-ttu-id="7e57c-147">Musi być tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-147">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="7e57c-148">Tworzy i zwraca uprawnienie, które jest częścią wspólną bieżącego uprawnienia i określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-148">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="7e57c-149">Nowe uprawnienie, które reprezentuje część wspólną bieżącego uprawnienia i określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-149">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="7e57c-150">To nowe uprawnienie jest <see langword="null" /> , jeśli część wspólna jest pusta.</span><span class="sxs-lookup"><span data-stu-id="7e57c-150">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e57c-151">Wspólną częścią dwóch uprawnień jest uprawnienie, które opisuje zestaw operacji, które oba często opisują.</span><span class="sxs-lookup"><span data-stu-id="7e57c-151">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="7e57c-152">Tylko żądanie przekazujące pierwotne uprawnienia spowoduje przekazanie przedziału.</span><span class="sxs-lookup"><span data-stu-id="7e57c-152">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e57c-153">Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.ReflectionPermission.Intersect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e57c-153">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Intersect%2A> method.</span></span> <span data-ttu-id="7e57c-154">Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.ReflectionPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-154">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e57c-155">Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-155">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="7e57c-156">Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.</span><span class="sxs-lookup"><span data-stu-id="7e57c-156">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#4)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e57c-157"><paramref name="target" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-157">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="reflectionPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="7e57c-158">Uprawnienie, które ma zostać przetestowane dla relacji podzbioru.</span><span class="sxs-lookup"><span data-stu-id="7e57c-158">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="7e57c-159">To uprawnienie musi być tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-159">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="7e57c-160">Określa, czy bieżące uprawnienie jest podzbiorem określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-160">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="7e57c-161"><see langword="true" />Jeśli bieżące uprawnienie jest podzbiorem określonego uprawnienia; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7e57c-161"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e57c-162">Bieżące uprawnienie jest podzbiorem określonego uprawnienia, jeśli bieżące uprawnienie określa zestaw operacji, które są w całości zawarte w określonym uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-162">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="7e57c-163">Na przykład uprawnienie, które reprezentuje dostęp do C:\example.txt, jest podzbiorem uprawnienia, które reprezentuje dostęp do C:\\.</span><span class="sxs-lookup"><span data-stu-id="7e57c-163">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="7e57c-164">Jeśli ta metoda zwróci `true`wartość, bieżące uprawnienie nie reprezentuje więcej dostępu do chronionego zasobu niż określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-164">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e57c-165">Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e57c-165">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="7e57c-166">Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.ReflectionPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-166">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e57c-167">Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-167">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="7e57c-168">Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.</span><span class="sxs-lookup"><span data-stu-id="7e57c-168">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e57c-169"><paramref name="target" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-169">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="override this.IsUnrestricted : unit -&gt; bool" Usage="reflectionPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e57c-170">Zwraca wartość wskazującą, czy bieżące uprawnienie jest nieograniczone.</span><span class="sxs-lookup"><span data-stu-id="7e57c-170">Returns a value indicating whether the current permission is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="7e57c-171"><see langword="true" />Jeśli bieżące uprawnienie nie jest ograniczone; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7e57c-171"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e57c-172">Nieograniczone uprawnienie reprezentuje dostęp do wszystkich zasobów chronionych przez uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-172">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="reflectionPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e57c-173">Tworzy Kodowanie XML uprawnienia i jego bieżący stan.</span><span class="sxs-lookup"><span data-stu-id="7e57c-173">Creates an XML encoding of the permission and its current state.</span></span></summary>
        <returns><span data-ttu-id="7e57c-174">Kodowanie XML uprawnienia, w tym informacje o stanie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-174">An XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7e57c-175">Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.ReflectionPermission.ToXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e57c-175">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.ToXml%2A> method.</span></span> <span data-ttu-id="7e57c-176">Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.ReflectionPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-176">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e57c-177">Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-177">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="7e57c-178">Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.</span><span class="sxs-lookup"><span data-stu-id="7e57c-178">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="reflectionPermission.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="7e57c-179">Uprawnienie do łączenia z bieżącym uprawnieniem.</span><span class="sxs-lookup"><span data-stu-id="7e57c-179">A permission to combine with the current permission.</span></span> <span data-ttu-id="7e57c-180">Musi być tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-180">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="7e57c-181">Tworzy uprawnienie, które jest złożeniem bieżącego uprawnienia i określonym uprawnieniem.</span><span class="sxs-lookup"><span data-stu-id="7e57c-181">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="7e57c-182">Nowe uprawnienie, które reprezentuje związek z bieżącym uprawnieniem i określonym uprawnieniem.</span><span class="sxs-lookup"><span data-stu-id="7e57c-182">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e57c-183">Wynikiem wywołania <xref:System.Security.Permissions.ReflectionPermission.Union%2A> jest uprawnienie, które reprezentuje wszystkie operacje reprezentowane przez bieżące uprawnienie i określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-183">The result of a call to <xref:System.Security.Permissions.ReflectionPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="7e57c-184">Każde żądanie, które przekazuje jedno uprawnienie, przekazuje ich Unię.</span><span class="sxs-lookup"><span data-stu-id="7e57c-184">Any demand that passes either permission passes their union.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e57c-185">Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.ReflectionPermission.Union%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e57c-185">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Union%2A> method.</span></span> <span data-ttu-id="7e57c-186">Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.ReflectionPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e57c-186">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e57c-187">Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia.</span><span class="sxs-lookup"><span data-stu-id="7e57c-187">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="7e57c-188">Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.</span><span class="sxs-lookup"><span data-stu-id="7e57c-188">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#3)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e57c-189"><paramref name="other" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="7e57c-189">The <paramref name="other" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
