<Type Name="UrlIdentityPermission" FullName="System.Security.Permissions.UrlIdentityPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89d7eeb7139050becbf2d40564334cbf273849ee" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36424986" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UrlIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.UrlIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UrlIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type UrlIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje uprawnienia tożsamości dla adresu URL, z którego pochodzi kod. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pełny adres URL jest uważany za, w tym protokołu (HTTP, HTTPS, FTP) i pliku. Na przykład http://www.fourthcoffee.com/process/grind.htm jest pełny adres URL.  
  
 Adresy URL można dopasować dokładnie lub symbolu wieloznacznego w miejscu ostatecznego, na przykład: http://www.fourthcoffee.com/process/*. Adresy URL mogą także zawierać symbol wieloznaczny ("\*") prefiksu w ogranicznik kropki. Na przykład ciąg nazwy URL http://www.fourthcoffee.com/process/grind.htm/ jest podzbiorem http://\*.fourthcoffee.com/process/grind.htm/ i http://\*.com/process/grind.htm/.  
  
> [!IMPORTANT]
>  Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], uprawnienia dotyczące tożsamości nie są używane.  
>   
>  W wersji systemu .NET Framework 1.0 i 1.1 wymagania dotyczące uprawnień tożsamości obowiązują nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to mimo że zestaw wywołujący ma pełne zaufanie, zażąda uprawnień tożsamości wynik negatywny, jeśli zestaw nie spełnia kryteriów żądane. W programie .NET Framework w wersji 2.0, zapotrzebowanie na uprawnienia dotyczące tożsamości jest nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Oznacza to, że żądanie tożsamości zawsze zakończy się powodzeniem, niezależnie od tego, tożsamość zestawu, jeśli zestaw ma przyznane pełne zaufanie. Zapewnia to spójność wszystkie uprawnienia, eliminując traktowanie uprawnienia dotyczące tożsamości w szczególnych przypadkach.  
  
 W wersji systemu .NET Framework 1.0 i 1.1 wymagania dotyczące uprawnień tożsamości obowiązują, nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to mimo że zestaw wywołujący ma pełne zaufanie, zażąda uprawnień tożsamości wynik negatywny, jeśli zestaw nie spełnia kryteriów żądane. W programie .NET Framework w wersji 2.0, zapotrzebowanie na uprawnienia dotyczące tożsamości jest nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkie uprawnienia, eliminując traktowanie uprawnienia dotyczące tożsamości w szczególnych przypadkach.  
  
> [!NOTE]
>  W wersjach programu .NET Framework, przed [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], można użyć <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=nameWithType> metody, aby uniemożliwić przypadkowej dostęp do zasobów systemowych przez zaufanego kodu. <xref:System.Security.CodeAccessPermission.Deny%2A> teraz jest przestarzała, a dostęp do zasobów jest teraz ustaleniami wyłącznie uprawnienia nadanego dla zestawu. Aby ograniczyć dostęp do plików, należy uruchomić częściowo zaufanego kodu w bibliotece i przypisz mu uprawnienia tylko do zasobów, które może uzyskać dostępu do kodu. Aby uzyskać informacje o uruchamianiu aplikacji w bibliotece, zobacz [porady: uruchamianie częściowo zaufanego kodu w bibliotece](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  
  
> [!NOTE]
>  Wersje programu .NET Framework 1.0 i 1.1, nie mogą mieć uprawnienia dotyczące tożsamości <xref:System.Security.Permissions.PermissionState.Unrestricted> wartość stanu uprawnień. W programie .NET Framework w wersji 2.0, uprawnienia dotyczące tożsamości mogą mieć dowolną wartość stanu uprawnień. To oznacza, że w wersji 2.0 lub nowszej, uprawnienia dotyczące tożsamości ma takie samo zachowanie jako uprawnień, które implementują <xref:System.Security.Permissions.IUnrestrictedPermission> interfejsu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" />
    <altmember cref="T:System.Security.Policy.Url" />
    <altmember cref="T:System.Security.Policy.UrlMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jeden z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> klasy z określonym <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy albo pełni ograniczeniami (`None`) lub `Unrestricted` uprawnienia.  
  
> [!NOTE]
>  Wersje programu .NET Framework 1.0 i 1.1, nie mogą mieć uprawnienia dotyczące tożsamości <xref:System.Security.Permissions.PermissionState.Unrestricted> wartość stanu uprawnień. W programie .NET Framework w wersji 2.0, uprawnienia dotyczące tożsamości mogą mieć dowolną wartość stanu uprawnień. To oznacza, że w wersji 2.0 lub nowszej, uprawnienia dotyczące tożsamości ma takie samo zachowanie jako uprawnień, które implementują <xref:System.Security.Permissions.IUnrestrictedPermission> interfejsu. Oznacza to, że żądanie tożsamości zawsze zakończy się powodzeniem, niezależnie od tego, tożsamość zestawu, jeśli zestaw ma przyznane pełne zaufanie.  
  
 W wersji systemu .NET Framework 1.0 i 1.1 wymagania dotyczące uprawnień tożsamości obowiązują, nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to mimo że zestaw wywołujący ma pełne zaufanie, zażąda uprawnień tożsamości wynik negatywny, jeśli zestaw nie spełnia kryteriów żądane. W programie .NET Framework w wersji 2.0, zapotrzebowanie na uprawnienia dotyczące tożsamości jest nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkie uprawnienia, eliminując traktowanie uprawnienia dotyczące tożsamości w szczególnych przypadkach.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#7)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> Parametr nie jest prawidłową wartością <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (string site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (site As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::String ^ site);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : string -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission site" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="site">Wyrażenie adres URL lub symbol wieloznaczny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> klasy do reprezentowania tożsamości tego adresu URL opisanego przez <paramref name="site" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pełny adres URL jest uważany za, łącznie z protokołem (HTTP i HTTPS, FTP) i plików, na przykład: http://www.fourthcoffee.com/process/grind.htm/.  
  
 Adresy URL można dopasować dokładnie lub symbolu wieloznacznego w miejscu ostatecznego, na przykład: http://www.fourthcoffee.com/process/*. Adresy URL mogą także zawierać symbol wieloznaczny ("\*") prefiksu w ogranicznik kropki. Na przykład ciąg nazwy URL http://www.fourthcoffee.com/process/grind.htm/ jest podzbiorem http://\*.fourthcoffee.com/process/grind.htm/ i http://\*.com/process/grind.htm/.  
  
> [!NOTE]
>  W programie .NET Framework w wersji 2.0, ze względu na wydajność, nieprawidłowy adres URL nie powoduje wyjątek argumentu w momencie utworzenia nowego wystąpienia klasy.  Wyjątek argumentu wystąpi podczas wykonywania jednej z operacji set (Union, Intersect lub IsSubsetOf).  Żądanie na przyczyny uprawnienia <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> ma zostać wywołana przez infrastrukturę zabezpieczeń. Żądanie zakończy się niepowodzeniem z powodu wyjątku argumentu, co powoduje <xref:System.Security.SecurityException> został zgłoszony. W tym przypadku oryginalnej <xref:System.ArgumentException> wyjątek nie będą widoczne.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.String%29?displayProperty=nameWithType> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#8)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="site" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Długość <paramref name="site" /> parametru wynosi zero.</exception>
        <exception cref="T:System.ArgumentException">Adres URL, katalogu lub część lokacji <paramref name="site" /> parametr jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca identyczne kopię bieżącego uprawnień.</summary>
        <returns>Kopię bieżącego uprawnień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopię uprawnienie reprezentuje takie same prawa dostępu do zasobów oryginalnego uprawnienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="urlIdentityPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">Kodowanie XML na potrzeby rekonstrukcji uprawnienia.</param>
        <summary>Rekonstruuje uprawnienie o określonym stanie kodowania XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="esd" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="esd" /> Parametr nie jest elementem prawidłowego uprawnienia.  - lub - <paramref name="esd" /> parametru numer wersji jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do intersect z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień.</param>
        <summary>Tworzy i zwraca uprawnienia, które jest przecięcia bieżące uprawnienia i określony.</summary>
        <returns>Nowe uprawnienie reprezentuje część wspólną bieżące uprawnienia i określony. Jest to nowe uprawnienie <see langword="null" /> Jeśli część wspólną jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Część wspólną dwóch uprawnień jest uprawnienia, które opisano dostępu do adresów URL, zarówno opisują wspólnych. Tylko zażąda przekazuje oba oryginalnego uprawnienia zostaną spełnione przecięcie. Na przykład przecięcie uprawnienia reprezentujące dostęp do http://www.fourthcoffee.com/process/grind.htm i uprawnienia, które reprezentuje dostęp do http://www.fourthcoffee.com/* uprawnień, który reprezentuje dostęp do http://www.fourthcoffee.com/process/grind.htm.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission> obsługuje operacje na zestawie (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, i <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) tylko podczas bieżącej uprawnienie jest taki sam jak obiekt określonego uprawnienia lub gdy używa jednego z uprawnień operatora symbolu wieloznacznego ("*").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest taki sam typ jak bieżące uprawnienia.  - lub - właściwość adres Url nie jest prawidłowym adresem URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="urlIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienia, które ma być sprawdzane pod kątem relacji podzbioru. To uprawnienie musi być tego samego typu co bieżący uprawnień.</param>
        <summary>Określa, czy bieżące uprawnienia podzbiór określonego uprawnienia.</summary>
        <returns>
          <see langword="true" /> Jeśli bieżące uprawnienia są podzbiorem określonego uprawnienia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące uprawnienia jest podzbiorem określonego uprawnienia, jeśli uprawnienia bieżącego identyfikuje dostępu do adresu URL, który jest całkowicie zawarty w określonego uprawnienia. Na przykład uprawnienia, które reprezentuje dostęp do http://www.fourthcoffee.com/process/grind.htm stanowią podzbiór zestawu uprawnień, który reprezentuje dostęp do http://www.fourthcoffee.com/*. Jeśli ta metoda zwraca `true`, bieżący uprawnienie reprezentuje nie uzyskać dostęp do chronionych zasobów niż określone uprawnienie.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission> obsługuje operacje na zestawie (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, i <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) tylko gdy bieżące uprawnienia są takie same określonego uprawnienia, lub gdy używa jednego z uprawnień operatora symbolu wieloznacznego ("*").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest taki sam typ jak bieżące uprawnienia.  - lub - właściwość adres Url nie jest prawidłowym adresem URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="urlIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kodowania XML uprawnienia i swojego bieżącego stanu.</summary>
        <returns>Kodowanie XML uprawnienia, łącznie z żadnych informacji o stanie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do łączenia z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień.</param>
        <summary>Tworzy uprawnienia, które łączy bieżące uprawnienia i określony.</summary>
        <returns>Nowe uprawnienie reprezentuje złożenie bieżące uprawnienia i określony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wynik wywołania <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> metoda jest uprawnienia, które reprezentuje dostępu do adresu URL reprezentowaną przez bieżące uprawnienia, a także dostęp do adresu URL reprezentowany przez określone uprawnienie.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission> Klasa obsługuje operacje na zestawie <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, i <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) tylko wtedy, gdy bieżący uprawnienie jest równe określonego uprawnienia lub jednego z uprawnień używa operatora symbol wieloznaczny ("*") i jest podzbiorem inne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest taki sam typ jak bieżące uprawnienia.  - lub - <see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> właściwość nie jest prawidłowym adresem URL.  - lub - dwa uprawnienia nie są takie same i nie jest jedną podzbiór innych.</exception>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL reprezentujący tożsamości internetowych kod.</summary>
        <value>Adres URL reprezentujący tożsamości internetowych kod.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pełny adres URL jest uważany za, łącznie z protokołem (HTTP i HTTPS, FTP) i plików, na przykład: http://www.fourthcoffee.com/process/grind.htm/.  
  
 Adresy URL można dopasować dokładnie lub symbolu wieloznacznego w miejscu ostatecznego, na przykład: http://www.fourthcoffee.com/process/*.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Nie można pobrać adresu URL, ponieważ ma ona niejednoznaczna tożsamości.</exception>
      </Docs>
    </Member>
  </Members>
</Type>