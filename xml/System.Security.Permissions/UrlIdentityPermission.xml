<Type Name="UrlIdentityPermission" FullName="System.Security.Permissions.UrlIdentityPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7854e5419ae2c75a2936c28e494931dcd3c5333f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69057425" /></Metadata><TypeSignature Language="C#" Value="public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UrlIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.UrlIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UrlIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type UrlIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje uprawnienia tożsamości dla adresu URL, z którego pochodzi kod. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pełny adres URL jest brany pod uwagę, w tym protokół (HTTP, HTTPS, FTP) i plik. Na przykład `http://www.fourthcoffee.com/process/grind.htm` jest kompletnym adresem URL.  
  
 Adresy URL można dopasować dokładnie lub przez symbol wieloznaczny w końcowej pozycji, na `http://www.fourthcoffee.com/process/*`przykład:. Adresy URL mogą również zawierać symbol wieloznaczny (\*"") w ograniczniku kropki. Na przykład ciąg `http://www.fourthcoffee.com/process/grind.htm/` nazwy adresu URL jest `http://*.fourthcoffee.com/process/grind.htm/` podzbiorem i `http://*.com/process/grind.htm/`.  
  
> [!IMPORTANT]
>  Począwszy od, uprawnienia tożsamości nie są używane. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  
>   
>  W .NET Framework wersje 1,0 i 1,1 Wymagania dotyczące uprawnień tożsamości są skuteczne nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to, że chociaż zestaw wywołujący ma pełne zaufanie, żądanie uprawnienia tożsamości kończy się niepowodzeniem, jeśli zestaw nie spełnia kryteriów zapotrzebowania. Począwszy od .NET Framework w wersji 2,0, wymagania dotyczące uprawnień tożsamości są nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Oznacza to, że żądanie tożsamości zawsze powiedzie się, niezależnie od tożsamości zestawu, jeśli zestaw ma przyznane pełne zaufanie. Zapewnia to spójność wszystkich uprawnień, eliminując jednocześnie traktowanie uprawnień tożsamości.  
  
> [!NOTE]
>  W wersjach .NET Framework przed [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], można <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=nameWithType> użyć metody, aby zapobiec nieumyślnemu dostępowi do zasobów systemowych przez zaufany kod. <xref:System.Security.CodeAccessPermission.Deny%2A>jest już przestarzałe, a dostęp do zasobów jest teraz ustalany wyłącznie przez przyznany zestaw uprawnień dla zestawu. Aby ograniczyć dostęp do plików, należy uruchomić częściowo zaufany kod w piaskownicy i przypisać mu uprawnienia tylko do zasobów, do których kod może uzyskać dostęp. Aby uzyskać informacje na temat uruchamiania aplikacji w piaskownicy, [zobacz How to: Uruchom częściowo zaufany kod w piaskownicy](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  
  
> [!NOTE]
>  W .NET Framework wersje 1,0 i 1,1 uprawnienia do <xref:System.Security.Permissions.PermissionState.Unrestricted> tożsamości nie mogą mieć wartości stanu uprawnienia. Począwszy od .NET Framework w wersji 2,0 uprawnienia tożsamości mogą mieć dowolną wartość stanu uprawnienia. Oznacza to, że w 2,0 i nowszych wersjach uprawnienia do tożsamości mają takie samo zachowanie jak uprawnienia implementujące <xref:System.Security.Permissions.IUnrestrictedPermission> interfejs.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" />
    <altmember cref="T:System.Security.Policy.Url" />
    <altmember cref="T:System.Security.Policy.UrlMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jedna z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> klasy z określonym <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy w pełni ograniczone (`None`) lub `Unrestricted` uprawnienie.  
  
> [!NOTE]
>  W .NET Framework wersje 1,0 i 1,1 uprawnienia do <xref:System.Security.Permissions.PermissionState.Unrestricted> tożsamości nie mogą mieć wartości stanu uprawnienia. Począwszy od .NET Framework w wersji 2,0 uprawnienia tożsamości mogą mieć dowolną wartość stanu uprawnienia. Oznacza to, że w 2,0 i nowszych wersjach uprawnienia do tożsamości mają takie samo zachowanie jak uprawnienia implementujące <xref:System.Security.Permissions.IUnrestrictedPermission> interfejs. Oznacza to, że żądanie tożsamości zawsze powiedzie się, niezależnie od tożsamości zestawu, jeśli zestaw ma przyznane pełne zaufanie.  
  
 W .NET Framework wersje 1,0 i 1,1 Wymagania dotyczące uprawnień tożsamości są skuteczne, nawet gdy zestaw wywołujący jest w pełni zaufany. Oznacza to, że chociaż zestaw wywołujący ma pełne zaufanie, żądanie uprawnienia tożsamości kończy się niepowodzeniem, jeśli zestaw nie spełnia kryteriów zapotrzebowania. Począwszy od .NET Framework w wersji 2,0, wymagania dotyczące uprawnień tożsamości są nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkich uprawnień, eliminując jednocześnie traktowanie uprawnień tożsamości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#7)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Parametr nie jest prawidłową <see cref="T:System.Security.Permissions.PermissionState" />wartością. <paramref name="state" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (string site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (site As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::String ^ site);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : string -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission site" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="site">Adres URL lub wyrażenie wieloznaczne.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> klasy, aby reprezentować tożsamość adresu URL opisywaną <paramref name="site" />przez.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pełny adres URL jest brany pod uwagę, w tym protokół (HTTP, HTTPS, FTP) i plik, na przykład `http://www.fourthcoffee.com/process/grind.htm/`:.  
  
 Adresy URL można dopasować dokładnie lub przez symbol wieloznaczny w końcowej pozycji, na `http://www.fourthcoffee.com/process/*`przykład:. Adresy URL mogą również zawierać symbol wieloznaczny (\*"") w ograniczniku kropki. Na przykład ciąg `http://www.fourthcoffee.com/process/grind.htm/` nazwy adresu URL jest `http://*.fourthcoffee.com/process/grind.htm/` podzbiorem i `http://*.com/process/grind.htm/`.  
  
> [!NOTE]
>  Począwszy od .NET Framework w wersji 2,0, ze względu na wydajność, nieprawidłowy adres URL nie powoduje wyjątku argumentu w momencie utworzenia nowego wystąpienia klasy.  Wyjątek argumentu wystąpi, gdy zostanie wykonana jedna z operacji set (Union, Intersect lub IsSubsetOf —).  Żądanie dotyczące uprawnień <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> do wywoływania przez infrastrukturę zabezpieczeń. Żądanie zakończy się niepowodzeniem z powodu wyjątku argumentu, który <xref:System.Security.SecurityException> zostanie wygenerowany. W takim przypadku oryginalny <xref:System.ArgumentException> wyjątek nie będzie widoczny.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.String%29?displayProperty=nameWithType> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#8)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="site" /></exception>
        <exception cref="T:System.FormatException">Długość <paramref name="site" /> parametru wynosi zero.</exception>
        <exception cref="T:System.ArgumentException">Nieprawidłowy adres URL, katalog lub część <paramref name="site" /> parametru.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca identyczną kopię bieżącego uprawnienia.</summary>
        <returns>Kopia bieżącego uprawnienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopia uprawnienia reprezentuje ten sam dostęp do zasobów co oryginalne uprawnienie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="urlIdentityPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">Kodowanie XML do użycia w celu odtworzenia uprawnienia.</param>
        <summary>Rekonstruuje uprawnienia z określonym stanem z kodowania XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="esd" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="esd" /> Parametr nie jest prawidłowym elementem uprawnień.  
  
—lub— 
Numer <paramref name="esd" /> wersji parametru jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do przecięcia z bieżącym uprawnieniem. Musi być tego samego typu co bieżące uprawnienie.</param>
        <summary>Tworzy i zwraca uprawnienie, które jest częścią wspólną bieżącego uprawnienia i określonego uprawnienia.</summary>
        <returns>Nowe uprawnienie, które reprezentuje część wspólną bieżącego uprawnienia i określonego uprawnienia. To nowe uprawnienie jest <see langword="null" /> , jeśli część wspólna jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wspólną częścią dwóch uprawnień jest uprawnienie, które opisuje dostęp do adresów URL, które są w nich opisane. Tylko żądanie przekazujące pierwotne uprawnienia spowoduje przekazanie przedziału. Na przykład część wspólna uprawnienia reprezentująca dostęp do `http://www.fourthcoffee.com/process/grind.htm` i uprawnienia, które reprezentują dostęp do `http://www.fourthcoffee.com/*` programu, to uprawnienie, które reprezentuje dostęp do `http://www.fourthcoffee.com/process/grind.htm`.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission>obsługuje operacje Set (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, i <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) tylko wtedy, gdy bieżące uprawnienie jest równe określonemu obiektowi uprawnień lub gdy jedno z uprawnień używa operatora wieloznacznego (\*"").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.  
  
—lub— 
Właściwość adresu URL nie jest prawidłowym adresem URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="urlIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie, które ma zostać przetestowane dla relacji podzbioru. To uprawnienie musi być tego samego typu co bieżące uprawnienie.</param>
        <summary>Określa, czy bieżące uprawnienie jest podzbiorem określonego uprawnienia.</summary>
        <returns><see langword="true" />Jeśli bieżące uprawnienie jest podzbiorem określonego uprawnienia; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące uprawnienie jest podzbiorem określonego uprawnienia, jeśli bieżące uprawnienie identyfikuje dostęp do adresu URL, który jest częściowo zawarty w określonym uprawnienia. Na przykład uprawnienie reprezentujące dostęp do `http://www.fourthcoffee.com/process/grind.htm` programu jest podzbiorem uprawnień reprezentujących dostęp do `http://www.fourthcoffee.com/*`programu. Jeśli ta metoda zwróci `true`wartość, bieżące uprawnienie nie reprezentuje więcej dostępu do chronionego zasobu niż określone uprawnienie.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission>obsługuje operacje Set (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>i <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) tylko wtedy, gdy bieżące uprawnienie jest równe określonemu uprawnienia lub gdy jedno z uprawnień używa operatora wieloznacznego ("\*").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.  
  
—lub— 
Właściwość adresu URL nie jest prawidłowym adresem URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="urlIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy Kodowanie XML uprawnienia i jego bieżący stan.</summary>
        <returns>Kodowanie XML uprawnienia, w tym informacje o stanie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do łączenia z bieżącym uprawnieniem. Musi być tego samego typu co bieżące uprawnienie.</param>
        <summary>Tworzy uprawnienie, które jest złożeniem bieżącego uprawnienia i określonym uprawnieniem.</summary>
        <returns>Nowe uprawnienie, które reprezentuje związek z bieżącym uprawnieniem i określonym uprawnieniem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wynikiem wywołania <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> metody jest uprawnienie, które reprezentuje dostęp do adresu URL reprezentowanego przez bieżące uprawnienie, a także dostęp do adresu URL reprezentowanego przez określone uprawnienie.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>\*Klasa obsługuje operacje <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>Set, i<xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) tylko wtedy, gdy bieżące uprawnienie jest równe określonemu uprawnienia lub gdy jedno z uprawnień używa operatora wieloznacznego (""), a drugi to <xref:System.Security.Permissions.UrlIdentityPermission> podzbiór innych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.  
  
—lub— 
<see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> Właściwość nie jest prawidłowym adresem URL.  
  
—lub— 
Dwa uprawnienia nie są równe i jeden z nich nie jest podzbiorem innych.</exception>
        <exception cref="T:System.NotSupportedException">Operacja jest niejednoznaczna, ponieważ uprawnienie reprezentuje wiele tożsamości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL reprezentujący tożsamość kodu internetowego.</summary>
        <value>Adres URL reprezentujący tożsamość kodu internetowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pełny adres URL jest brany pod uwagę, w tym protokół (HTTP, HTTPS, FTP) i plik, na przykład `http://www.fourthcoffee.com/process/grind.htm/`:.  
  
 Adresy URL można dopasować dokładnie lub przez symbol wieloznaczny w końcowej pozycji, na `http://www.fourthcoffee.com/process/*`przykład:.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Nie można pobrać adresu URL, ponieważ ma niejednoznaczną tożsamość.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
