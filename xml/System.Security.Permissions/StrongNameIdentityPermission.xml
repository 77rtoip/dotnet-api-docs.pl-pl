<Type Name="StrongNameIdentityPermission" FullName="System.Security.Permissions.StrongNameIdentityPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8792b93040bde5764cd31e3fcef9b20d1d4b39f2" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42958143" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit StrongNameIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.StrongNameIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StrongNameIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrongNameIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type StrongNameIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje uprawnienia tożsamości dla silnej nazwy. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], uprawnienia tożsamości nie są używane.  
>   
>  W .NET Framework w wersji 1.0 i 1.1, nie może mieć uprawnienia tożsamości <xref:System.Security.Permissions.PermissionState.Unrestricted> wartość stanu uprawnień. W .NET Framework w wersji 2.0 lub nowszej uprawnienia tożsamości może mieć dowolną wartość stanu uprawnień.  Oznacza to, że w wersji 2.0 i nowszych wersjach uprawnienia tożsamości ma takie samo zachowanie jako uprawnienia, które implementują <xref:System.Security.Permissions.IUnrestrictedPermission> interfejsu. Oznacza to, że żądanie tożsamości zawsze zakończy się powodzeniem, niezależnie od tego, tożsamość zestawu, jeśli zestaw ma udzielone pełne zaufanie.  
  
 Użyj <xref:System.Security.Permissions.StrongNameIdentityPermission> aby upewnić się, że kod wywołujący jest w zestawie określonym kodem o silnej nazwie. Pełne żądania przekazania <xref:System.Security.Permissions.StrongNameIdentityPermission> powiedzie się tylko wtedy, gdy wszystkie zestawy w stosie mają poprawne dowód spełniać zapotrzebowania. Zapotrzebowania na łącza używające <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> atrybut powiedzie się tylko wtedy, gdy dowody poprawne bezpośredniego obiektu wywołującego.  
  
 Tożsamość silnych nazw jest oparta na kryptograficznych klucza publicznego o nazwie duży obiekt binarny (BLOB), który opcjonalnie jest połączony z nazwy i wersji określonego zestawu. Klucz definiuje unikatową przestrzeń nazw i zapewnia silną weryfikację, czy nazwa jest oryginalne, ponieważ definicja nazwy musi znajdować się w zestawie, który jest podpisany przy użyciu odpowiedniego klucza prywatnego.  
  
 Należy pamiętać, że ważności klucz silnej nazwy nie jest zależny, na relację zaufania lub dowolny certyfikat musi być wystawiony dla klucza.  
  
 W .NET Framework w wersji 1.0 i 1.1 wymagania dotyczące uprawnień tożsamości obowiązują nawet wtedy, gdy zestawu wywołującego jest w pełni zaufany. Oznacza to nawet wtedy, gdy zestaw wywołujący ma pełne zaufanie, żądanie uprawnienia tożsamości kończy się niepowodzeniem, jeśli zestaw nie spełnia kryteriów żądane. W .NET Framework w wersji 2.0 lub nowszy, wymagania związane z tożsamością uprawnień są nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. To zapewnia spójność dla wszystkich uprawnień i eliminuje traktowania uprawnienia tożsamości w szczególnych przypadkach.  
  
 Aby uzyskać pełny opis silnych nazw, zobacz <xref:System.Security.Policy.StrongName> odwołania do stron. Aby uzyskać więcej informacji na temat zestawów o silnych nazwach, zobacz [zestawy Strong-Named](~/docs/framework/app-domains/strong-named-assemblies.md).  
  
 <xref:System.Security.Permissions.StrongNameIdentityPermission> Klasa jest używana do definiowania wymagań silnej nazwy do uzyskiwania dostępu do publiczne elementy członkowskie typu. <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> Atrybut może służyć do definiowania wymagań silnej nazwy na poziomie zestawu. W .NET Framework w wersji 2.0 lub nowszej, można również użyć <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutu, aby określić, że wszystkie typy niepublicznych w tym zestawie są widoczne do innego zestawu. Aby uzyskać więcej informacji, zobacz [przyjaznych zestawów](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.StrongNameIdentityPermission" />
    <altmember cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />
    <altmember cref="T:System.Security.Policy.StrongName" />
    <altmember cref="T:System.Security.Policy.StrongNameMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.StrongNameIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.StrongNameIdentityPermission" Usage="new System.Security.Permissions.StrongNameIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jedną z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> klasy z określonym <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy, albo w pełni ograniczone (`None`) lub `Unrestricted` uprawnień.  
  
> [!NOTE]
>  W .NET Framework w wersji 1.0 i 1.1, nie może mieć uprawnienia tożsamości <xref:System.Security.Permissions.PermissionState.Unrestricted> wartość stanu uprawnień. W .NET Framework w wersji 2.0 lub nowszej uprawnienia tożsamości może mieć dowolną wartość stanu uprawnień.  Oznacza to, że w wersji 2.0 i nowszych wersjach uprawnienia tożsamości ma takie samo zachowanie jako uprawnienia, które implementują <xref:System.Security.Permissions.IUnrestrictedPermission> interfejsu. Oznacza to, że żądanie tożsamości zawsze zakończy się powodzeniem, niezależnie od tego, tożsamość zestawu, jeśli zestaw ma udzielone pełne zaufanie.  
  
 W .NET Framework w wersji 1.0 i 1.1 wymagania dotyczące uprawnień tożsamości obowiązują, nawet wtedy, gdy zestawu wywołującego jest w pełni zaufany. Oznacza to mimo że wywołującego zestawu ma pełne zaufanie, żądanie uprawnienia tożsamości kończy się niepowodzeniem, jeśli zestaw nie spełnia kryteriów żądane. W .NET Framework w wersji 2.0 lub nowszy, wymagania związane z tożsamością uprawnień są nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Gwarantuje to spójność wszystkich uprawnień, eliminując traktowania uprawnienia tożsamości w szczególnych przypadkach.  
  
 Użyć tego konstruktora z wartością stanu uprawnień <xref:System.Security.Permissions.PermissionState.None> utworzyć uprawnienie tożsamości, które odpowiada nie silnej nazwy. Jeśli następnie ustawisz <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> i <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> właściwości tożsamości określonej silnej nazwy, może być reprezentowany przez uprawnienia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#7)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> Parametr nie jest prawidłową wartością <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::StrongNamePublicKeyBlob ^ blob, System::String ^ name, Version ^ version);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.StrongNameIdentityPermission : System.Security.Permissions.StrongNamePublicKeyBlob * string * Version -&gt; System.Security.Permissions.StrongNameIdentityPermission" Usage="new System.Security.Permissions.StrongNameIdentityPermission (blob, name, version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blob" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="blob">Definiowanie przestrzeni nazw tożsamości silnych nazw klucz publiczny.</param>
        <param name="name">Prosta nazwa część tożsamości silnej nazwy. Odpowiada to nazwa zestawu.</param>
        <param name="version">Numer wersji tożsamości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> klasy dla tożsamości określoną silną nazwą.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `name` i `version` parametry mogą być `null` tylko wtedy, gdy klucz publiczny służy do identyfikowania zestawu. Ciąg pusty ("") nie powinny być używane zamiast `null`. Jeśli `name` jest ciągiem pustym <xref:System.ArgumentException> zgłaszany.  
  
 Aby uzyskać więcej informacji na temat nazwy i numery wersji zestawów, zobacz [zestawy Strong-Named](~/docs/framework/app-domains/strong-named-assemblies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#8)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blob" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> Parametr jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca identyczną kopię bieżącego uprawnień.</summary>
        <returns>Kopię bieżącego uprawnień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopiuj uprawnienia reprezentuje taki sam dostęp do zasobów jako uprawnienie oryginalne.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.StrongNameIdentityPermission.Copy%2A> metody. W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszego wykorzystania w tym przykładzie jest kompilacji, wykonaj cały przykład i wyświetlić dane wyjściowe.  
  
> [!NOTE]
>  Przykładowy kod jest przeznaczony do wyświetlenia zachowanie metody, nie w celu zademonstrowania jej użycie. Ogólnie rzecz biorąc metody klasy uprawnień są używane przez infrastruktura zabezpieczeń; ich nie są zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#5)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#5)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="strongNameIdentityPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">Kodowanie XML na potrzeby rekonstrukcji uprawnienia.</param>
        <summary>Rekonstruuje uprawnień z określonym stanem z Kodowanie XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest używana przez kod aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.StrongNameIdentityPermission.FromXml%2A> metody. W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszego wykorzystania w tym przykładzie jest kompilacji, wykonaj cały przykład i wyświetlić dane wyjściowe.  
  
> [!NOTE]
>  Przykładowy kod jest przeznaczony do wyświetlenia zachowanie metody, nie w celu zademonstrowania jej użycie. Ogólnie rzecz biorąc metody klasy uprawnień są używane przez infrastruktura zabezpieczeń; ich nie są zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> Parametr nie jest elementem prawidłowego uprawnienia.  
  
—lub— 
<paramref name="e" /> Parametru numer wersji jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do przecięcia z uprawnieniami bieżącego. Należy się tego samego typu jak bieżące uprawnienia.</param>
        <summary>Tworzy i zwraca uprawnienia, które jest częścią bieżącego uprawnienie oraz uprawnienie określoną wspólną.</summary>
        <returns>Nowe uprawnienia, które reprezentuje przecięcia bieżące uprawnienia i określone uprawnienie lub <see langword="null" /> Jeśli część wspólną jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Część wspólną dwóch uprawnień jest uprawnień, który opisuje zestaw operacji, które opisują one zarówno we wspólnych. Żądanie, który przekazuje zarówno pierwotnych uprawnień zostaną spełnione część wspólną.  
  
 Część wspólną dwóch uprawnienia tożsamości identyczne silnej nazwy to samo uprawnienie. Część wspólną dwóch różnych (nie symboli wieloznacznych) wyrażenia jest pusty uprawnień. Przecięcie wyrażenia z symbolami wieloznacznymi i dopasowania silnej nazwy to silnej nazwy. Część wspólną dwóch wyrażeń symboli wieloznacznych, które odpowiadają jest dłuższa, bardziej szczegółowe z dwóch wyrażeń.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyniki użycia <xref:System.Security.Permissions.StrongNameIdentityPermission.Intersect%2A> metody nie jak użyć tej metody. W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszego wykorzystania w tym przykładzie jest kompilacji, wykonaj cały przykład i wyświetlić dane wyjściowe.  
  
> [!NOTE]
>  Przykładowy kod jest przeznaczony do wyświetlenia zachowanie metody, nie w celu zademonstrowania jej użycie. Ogólnie rzecz biorąc metody klasy uprawnień są używane przez infrastruktura zabezpieczeń; ich nie są zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#4)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#4)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest tego samego typu jak bieżące uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="strongNameIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienia, które ma zostać przetestowana dla relacji podzbioru. To uprawnienie musi być tego samego typu jak bieżące uprawnienia.</param>
        <summary>Określa, czy bieżące uprawnienia jest podzbiorem określone uprawnienie.</summary>
        <returns>
          <see langword="true" /> Jeśli bieżący uprawnienie jest podzbiorem określone uprawnienie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące uprawnienia są podzbiorem określone uprawnienie, jeśli bieżące uprawnienia określa zestaw operacji, który jest całkowicie zawarty w określone uprawnienie. Na przykład inne właściwości jest taka sama, tożsamość <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> właściwości zawierające wyrażenia z symbolami wieloznacznymi MyCompany.MyDepartment.* jest identyfikowany jako podzbiór tożsamość <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> właściwość MyCompany.MyDepartment.MyFile .  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyniki użycia <xref:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf%2A> metody nie jak użyć tej metody. W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszego wykorzystania w tym przykładzie jest kompilacji, wykonaj cały przykład i wyświetlić dane wyjściowe.  
  
> [!NOTE]
>  Przykładowy kod jest przeznaczony do wyświetlenia zachowanie metody, nie w celu zademonstrowania jej użycie. Ogólnie rzecz biorąc metody klasy uprawnień są używane przez infrastruktura zabezpieczeń; ich nie są zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#2)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#2)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest tego samego typu jak bieżące uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia prosty część nazwy tożsamości silnej nazwy.</summary>
        <value>Prosta nazwa tożsamości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> właściwość może być dokładną nazwą lub może być modyfikowana przez znak symbolu wieloznacznego w położeniu końcowym; na przykład MyCompany.MyDepartment.MyFile i MyCompany.MyDepartment.* są prawidłowymi nazwami. Jeśli spróbujesz ustawić <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> właściwości na ciąg pusty (""), <xref:System.ArgumentException> zgłaszany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość jest ciągiem pustym ("").</exception>
        <exception cref="T:System.NotSupportedException">Nie można pobrać wartości właściwości, ponieważ zawiera ona niejednoznaczna tożsamości.</exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.StrongNamePublicKeyBlob PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicKey As StrongNamePublicKeyBlob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::StrongNamePublicKeyBlob ^ PublicKey { System::Security::Permissions::StrongNamePublicKeyBlob ^ get(); void set(System::Security::Permissions::StrongNamePublicKeyBlob ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Permissions.StrongNamePublicKeyBlob with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.StrongNamePublicKeyBlob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia blob klucza publicznego, definiujący przestrzeń nazw tożsamości silnej nazwy.</summary>
        <value>A <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> zawierający klucz publiczny tożsamości, lub <see langword="null" /> Jeśli klucz nie istnieje.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Wartość właściwości jest równa <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Nie można pobrać wartości właściwości, ponieważ zawiera ona niejednoznaczna tożsamości.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="strongNameIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy, kodowanie XML uprawnienia i bieżącego stanu.</summary>
        <returns>Kodowanie XML uprawnień, w tym wszelkich informacji o stanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest zwykle używana przez kod aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.StrongNameIdentityPermission.ToXml%2A> metody.  
  
> [!NOTE]
>  Przykładowy kod jest przeznaczony do wyświetlenia zachowanie metody, nie w celu zademonstrowania jej użycie. Ogólnie rzecz biorąc metody klasy uprawnień są używane przez infrastruktura zabezpieczeń; ich nie są zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do łączenia z uprawnieniami bieżącego. Należy się tego samego typu jak bieżące uprawnienia.</param>
        <summary>Tworzy uprawnienia, które jest złożenie bieżące uprawnienia i określony.</summary>
        <returns>Nowe uprawnienie, który reprezentuje sumę bieżące uprawnienia i określony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wynik wywołania <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> uprawnienia, który reprezentuje wszystkie operacje, które są reprezentowane przez bieżące uprawnienia i określone uprawnienie. Wszelkie żądania spełniającą albo uprawnienie przekazuje ich Unii.  
  
 Złożenie uprawnienia i `null` uprawnienia, który nie jest `null`. Złożenie uprawnienia i podzbiór to uprawnienie jest uprawnień, który zawiera inne. Powoduje dowolną kombinację <xref:System.ArgumentException> zgłaszanego wyjątku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyniki użycia <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> metody nie jak użyć tej metody. W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszego wykorzystania w tym przykładzie jest kompilacji, wykonaj cały przykład i wyświetlić dane wyjściowe.  
  
> [!NOTE]
>  Przykładowy kod jest przeznaczony do wyświetlenia zachowanie metody, nie w celu zademonstrowania jej użycie. Ogólnie rzecz biorąc metody klasy uprawnień są używane przez infrastruktura zabezpieczeń; ich nie są zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#3)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#3)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest tego samego typu jak bieżące uprawnienia.  
  
—lub— 
Dwa uprawnienia nie są takie same, a jeden jest podzbiorem drugiej.</exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia numer wersji tożsamości.</summary>
        <value>Wersja tożsamości.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Nie można pobrać wartości właściwości, ponieważ zawiera ona niejednoznaczna tożsamości.</exception>
      </Docs>
    </Member>
  </Members>
</Type>