<Type Name="StrongNameIdentityPermission" FullName="System.Security.Permissions.StrongNameIdentityPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f76e27171568e6dd9d9f413781810130507e2699" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69081241" /></Metadata><TypeSignature Language="C#" Value="public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit StrongNameIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.StrongNameIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StrongNameIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrongNameIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type StrongNameIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje uprawnienia tożsamości dla silnych nazw. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Począwszy od, uprawnienia tożsamości nie są używane. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  
>   
>  W .NET Framework wersje 1,0 i 1,1 uprawnienia do <xref:System.Security.Permissions.PermissionState.Unrestricted> tożsamości nie mogą mieć wartości stanu uprawnienia. W .NET Framework w wersji 2,0 i nowszych uprawnienia do tożsamości mogą mieć dowolną wartość stanu uprawnienia.  Oznacza to, że w wersji 2,0 i nowszych wersje uprawnienia do tożsamości mają takie samo zachowanie jak uprawnienia implementujące <xref:System.Security.Permissions.IUnrestrictedPermission> interfejs. Oznacza to, że żądanie tożsamości zawsze powiedzie się, niezależnie od tożsamości zestawu, jeśli zestaw ma przyznane pełne zaufanie.  
  
 Użyj <xref:System.Security.Permissions.StrongNameIdentityPermission> , aby potwierdzić, że wywoływany kod znajduje się w konkretnym zestawie kodu o silnej nazwie. Pełne wymagania dotyczące <xref:System.Security.Permissions.StrongNameIdentityPermission> sukcesu tylko wtedy, gdy wszystkie zestawy w stosie mają odpowiednie dowody, aby spełnić zapotrzebowanie. Wymagania dotyczące linków, które <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> używają atrybutu, powiodło się tylko wtedy, gdy bezpośredni obiekt wywołujący ma prawidłowe dowody.  
  
 Tożsamość silnej nazwy jest oparta na kryptograficznym kluczu publicznym o nazwie Binary Large Object (BLOB), który jest opcjonalnie połączony z nazwą i wersją określonego zestawu. Klucz definiuje unikatową przestrzeń nazw i zapewnia silną weryfikację, że nazwa jest oryginalna, ponieważ definicja nazwy musi znajdować się w zestawie podpisanym przez odpowiedni klucz prywatny.  
  
 Należy zauważyć, że ważność klucza silnej nazwy nie zależy od relacji zaufania ani certyfikatu, który musi być wystawiony dla klucza.  
  
 W .NET Framework wersje 1,0 i 1,1 Wymagania dotyczące uprawnień tożsamości są skuteczne nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to, że nawet jeśli zestaw wywołujący ma pełne zaufanie, żądanie uprawnienia tożsamości kończy się niepowodzeniem, jeśli zestaw nie spełnia kryteriów zapotrzebowania. W .NET Framework w wersji 2,0 i nowszych wymagania dotyczące uprawnień tożsamości są nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkich uprawnień i eliminuje traktowanie uprawnień tożsamości w specjalnym przypadku.  
  
 Pełny opis silnych nazw znajduje <xref:System.Security.Policy.StrongName> się na stronie Dokumentacja. Aby uzyskać więcej informacji na temat zestawów o silnych nazwach, zobacz [zestawy o silnych nazwach](~/docs/framework/app-domains/strong-named-assemblies.md).  
  
 <xref:System.Security.Permissions.StrongNameIdentityPermission> Klasa jest używana do definiowania wymagań o silnej nazwie w celu uzyskania dostępu do publicznych elementów członkowskich typu. Ten <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> atrybut może służyć do definiowania wymagań dotyczących silnej nazwy na poziomie zestawu. W .NET Framework w wersji 2,0 i nowszych można również użyć <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atrybutu, aby określić, że wszystkie typy niepubliczne w tym zestawie są widoczne dla innego zestawu. Aby uzyskać więcej informacji, zobacz [zaprzyjaźnione zestawy](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.StrongNameIdentityPermission" />
    <altmember cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />
    <altmember cref="T:System.Security.Policy.StrongName" />
    <altmember cref="T:System.Security.Policy.StrongNameMembershipCondition" />
    <related type="Article" href="https://msdn.microsoft.com/library/d4a80263-f3e0-4d81-9b61-f0cbeae3797b">Zestawy o silnych nazwach</related>
    <related type="Article" href="https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd">Przyjazne zestawy</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.StrongNameIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.StrongNameIdentityPermission" Usage="new System.Security.Permissions.StrongNameIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jedna z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> klasy z określonym <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy w pełni ograniczone (`None`) lub `Unrestricted` uprawnienie.  
  
> [!NOTE]
>  W .NET Framework wersje 1,0 i 1,1 uprawnienia do <xref:System.Security.Permissions.PermissionState.Unrestricted> tożsamości nie mogą mieć wartości stanu uprawnienia. W .NET Framework w wersji 2,0 i nowszych uprawnienia do tożsamości mogą mieć dowolną wartość stanu uprawnienia.  Oznacza to, że w wersji 2,0 i nowszych wersje uprawnienia do tożsamości mają takie samo zachowanie jak uprawnienia implementujące <xref:System.Security.Permissions.IUnrestrictedPermission> interfejs. Oznacza to, że żądanie tożsamości zawsze powiedzie się, niezależnie od tożsamości zestawu, jeśli zestaw ma przyznane pełne zaufanie.  
  
 W .NET Framework wersje 1,0 i 1,1 Wymagania dotyczące uprawnień tożsamości są skuteczne, nawet gdy zestaw wywołujący jest w pełni zaufany. Oznacza to, że chociaż zestaw wywołujący ma pełne zaufanie, żądanie uprawnienia tożsamości kończy się niepowodzeniem, jeśli zestaw nie spełnia kryteriów zapotrzebowania. W .NET Framework w wersji 2,0 i nowszych wymagania dotyczące uprawnień tożsamości są nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkich uprawnień, eliminując jednocześnie traktowanie uprawnień tożsamości.  
  
 Użyj tego konstruktora z wartością stanu uprawnień programu <xref:System.Security.Permissions.PermissionState.None> , aby utworzyć uprawnienie tożsamości, które nie pasuje do silnych nazw. Jeśli następnie ustawisz <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> właściwości i <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> , określona tożsamość o silnej nazwie może być reprezentowana przez uprawnienie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#7)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Parametr nie jest prawidłową <see cref="T:System.Security.Permissions.PermissionState" />wartością. <paramref name="state" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::StrongNamePublicKeyBlob ^ blob, System::String ^ name, Version ^ version);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.StrongNameIdentityPermission : System.Security.Permissions.StrongNamePublicKeyBlob * string * Version -&gt; System.Security.Permissions.StrongNameIdentityPermission" Usage="new System.Security.Permissions.StrongNameIdentityPermission (blob, name, version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blob" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="blob">Klucz publiczny definiujący przestrzeń nazw tożsamości o silnej nazwie.</param>
        <param name="name">Prosta nazwa tożsamości silnej nazwy. Odnosi się to do nazwy zestawu.</param>
        <param name="version">Numer wersji tożsamości.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> klasy dla określonej tożsamości o silnej nazwie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry `name` i `version` mogą być`null` tylko wtedy, gdy klucz publiczny jest używany do identyfikowania zestawu. Nie należy używać `null`pustego ciągu ("") zamiast. Jeśli `name` jest pustym ciągiem <xref:System.ArgumentException> , jest zgłaszany.  
  
 Aby uzyskać więcej informacji o nazwach i numerach wersji zestawów, zobacz [zestawy o silnych nazwach](~/docs/framework/app-domains/strong-named-assemblies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> konstruktora.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#8)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="blob" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> Parametr jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca identyczną kopię bieżącego uprawnienia.</summary>
        <returns>Kopia bieżącego uprawnienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopia uprawnienia reprezentuje ten sam dostęp do zasobów co oryginalne uprawnienie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.StrongNameIdentityPermission.Copy%2A> metody. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszym rozwiązaniem w tym przykładzie jest skompilowanie i wykonanie całego przykładu, a następnie wyświetlenie danych wyjściowych.  
  
> [!NOTE]
>  Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia. Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#5)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#5)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="strongNameIdentityPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">Kodowanie XML do użycia w celu odtworzenia uprawnienia.</param>
        <summary>Rekonstruuje uprawnienia z określonym stanem z kodowania XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest używana przez kod aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.StrongNameIdentityPermission.FromXml%2A> metody. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszym rozwiązaniem w tym przykładzie jest skompilowanie i wykonanie całego przykładu, a następnie wyświetlenie danych wyjściowych.  
  
> [!NOTE]
>  Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia. Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="e" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> Parametr nie jest prawidłowym elementem uprawnień.  
  
—lub— 
Numer <paramref name="e" /> wersji parametru jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do przecięcia z bieżącym uprawnieniem. Musi być tego samego typu co bieżące uprawnienie.</param>
        <summary>Tworzy i zwraca uprawnienie, które jest częścią wspólną bieżącego uprawnienia i określonego uprawnienia.</summary>
        <returns>Nowe uprawnienie, które reprezentuje przecięcie bieżącego uprawnienia i określonego uprawnienia, lub <see langword="null" /> Jeśli przecięcie jest puste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wspólną częścią dwóch uprawnień jest uprawnienie, które opisuje zestaw operacji, które oba często opisują. Tylko żądanie przekazujące pierwotne uprawnienia spowoduje przekazanie przedziału.  
  
 Przecięcie dwóch identycznych tożsamości o silnej nazwie jest tym samym uprawnieniem. Przecięcie dwóch różnych wyrażeń (nie symboli wieloznacznych) jest pustym uprawnieniem. Przecięcie wyrażenia wieloznacznego i zgodnej silnej nazwy jest silną nazwą. Część wspólna dwóch wyrażeń wieloznacznych, które pasują jest większym, bardziej szczegółowym z dwóch wyrażeń.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyniki użycia <xref:System.Security.Permissions.StrongNameIdentityPermission.Intersect%2A> metody, a nie sposób używania metody. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszym rozwiązaniem w tym przykładzie jest skompilowanie i wykonanie całego przykładu, a następnie wyświetlenie danych wyjściowych.  
  
> [!NOTE]
>  Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia. Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#4)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#4)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="strongNameIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie, które ma zostać przetestowane dla relacji podzbioru. To uprawnienie musi być tego samego typu co bieżące uprawnienie.</param>
        <summary>Określa, czy bieżące uprawnienie jest podzbiorem określonego uprawnienia.</summary>
        <returns><see langword="true" />Jeśli bieżące uprawnienie jest podzbiorem określonego uprawnienia; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące uprawnienie jest podzbiorem określonego uprawnienia, jeśli bieżące uprawnienie określa zestaw operacji, które są w całości zawarte w określonym uprawnienia. Na przykład inne właściwości są równe, tożsamość z <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> właściwością zawierającą wyrażenie symbol wieloznaczny webcompany. * jest identyfikowany jako podzestaw tożsamości <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> z właściwością webcompany.... .  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyniki użycia <xref:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf%2A> metody, a nie sposób używania metody. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszym rozwiązaniem w tym przykładzie jest skompilowanie i wykonanie całego przykładu, a następnie wyświetlenie danych wyjściowych.  
  
> [!NOTE]
>  Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia. Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#2)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#2)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia część nazwy prostej tożsamości silnej nazwy.</summary>
        <value>Prosta nazwa tożsamości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> właściwości może być dokładną nazwą lub może być modyfikowana przez symbol wieloznaczny w końcowej pozycji; na przykład, obie właściwości:.... WebName i webcompany. * są prawidłowymi nazwami. Jeśli podjęto próbę ustawienia <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> właściwości na pusty ciąg ("") <xref:System.ArgumentException> , zostanie zgłoszony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość jest pustym ciągiem ("").</exception>
        <exception cref="T:System.NotSupportedException">Nie można pobrać wartości właściwości, ponieważ zawiera niejednoznaczną tożsamość.</exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.StrongNamePublicKeyBlob PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicKey As StrongNamePublicKeyBlob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::StrongNamePublicKeyBlob ^ PublicKey { System::Security::Permissions::StrongNamePublicKeyBlob ^ get(); void set(System::Security::Permissions::StrongNamePublicKeyBlob ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Permissions.StrongNamePublicKeyBlob with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.StrongNamePublicKeyBlob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt BLOB klucza publicznego, który definiuje przestrzeń nazw tożsamości o silnej nazwie.</summary>
        <value>A <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> , który zawiera klucz publiczny tożsamości lub <see langword="null" /> nie ma klucza.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Wartość właściwości jest ustawiona na <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Nie można pobrać wartości właściwości, ponieważ zawiera niejednoznaczną tożsamość.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="strongNameIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy Kodowanie XML uprawnienia i jego bieżący stan.</summary>
        <returns>Kodowanie XML uprawnienia, w tym informacje o stanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest zazwyczaj używana przez kod aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje zachowanie <xref:System.Security.Permissions.StrongNameIdentityPermission.ToXml%2A> metody.  
  
> [!NOTE]
>  Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia. Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do łączenia z bieżącym uprawnieniem. Musi być tego samego typu co bieżące uprawnienie.</param>
        <summary>Tworzy uprawnienie, które jest złożeniem bieżącego uprawnienia i określonym uprawnieniem.</summary>
        <returns>Nowe uprawnienie, które reprezentuje związek z bieżącym uprawnieniem i określonym uprawnieniem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wynikiem wywołania <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> jest uprawnienie, które reprezentuje wszystkie operacje reprezentowane przez bieżące uprawnienie i określone uprawnienie. Każde żądanie, które przekazuje jedno uprawnienie, przekazuje ich Unię.  
  
 Unia uprawnienia i `null` to uprawnienie, które nie `null`jest. Unia z uprawnieniami i podzbiorem tego uprawnienia jest uprawnienie, które zawiera inne. Wszystkie inne wyniki <xref:System.ArgumentException> są generowane przez wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyniki użycia <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> metody, a nie sposób używania metody. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Security.Permissions.StrongNameIdentityPermission> klasy. Najlepszym rozwiązaniem w tym przykładzie jest skompilowanie i wykonanie całego przykładu, a następnie wyświetlenie danych wyjściowych.  
  
> [!NOTE]
>  Przykład kodu jest przeznaczony do wyświetlania zachowania metody, a nie do zademonstrowania jej użycia. Ogólnie rzecz biorąc, metody uprawnień są używane przez infrastrukturę zabezpieczeń; nie są one zwykle używane w aplikacjach.  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#3)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#3)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.  
  
—lub— 
Dwa uprawnienia nie są równe i jeden z nich jest podzbiorem drugiego.</exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia numer wersji tożsamości.</summary>
        <value>Wersja tożsamości.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Nie można pobrać wartości właściwości, ponieważ zawiera niejednoznaczną tożsamość.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
