<Type Name="ZoneIdentityPermission" FullName="System.Security.Permissions.ZoneIdentityPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bac0e8f306739a9bfc95d93e0faaa004ab7ceb3b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30570553" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ZoneIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ZoneIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ZoneIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ZoneIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZoneIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje uprawnienia tożsamości dla strefy, z którego pochodzi kod. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To uprawnienie można określić, czy kod wywołujący jest z określonej strefy. Strefy są skonfigurowane zgodnie z opcjami Microsoft Internet Explorer i są mapowane z adresu URL przez program Internet Explorer IInternetSecurityManager i powiązanych interfejsów API. Tylko strefy dokładnego dopasowania są definiowane dla uprawnień; adres URL może należeć tylko do jednej strefie.  
  
-   Lokalnej strefy intranetowej: lokalnej strefy intranetowej służy do zawartości znajdującej się w intranecie firmy. Ponieważ serwery są w obrębie firmy zapory, zawartość w intranecie jest przypisana wyższego poziomu zaufania.  
  
-   Strefy Zaufane witryny: strefy Zaufane witryny jest używany dla zawartości znajdującej się na witryn, które są uważane za więcej zaufanych lub zaufanego niż innych witryn w Internecie. Użytkownicy mogą korzystać z tej strefy, aby przypisać wyższy poziom zaufania do określonych witryn internetowych. Adresy URL tych zaufanych witryn sieci Web muszą być mapowane do tej strefy przez użytkownika. Domyślnie Lokacje w strefie zaufanych witryn odbierają zaufania wyższe niż w strefie Internet. Użytkownik lub firma musi zmienić poziom zaufania przyznano do tej strefy, jeśli chcą, aby lokacje, że zawiera ona podawana wyższego poziomu zaufania.  
  
-   Strefy internetowej: strefy internetowej służy do witryn sieci Web w Internecie, które nie należą do innej strefy. Ustawienia domyślne umożliwiają kod pobrany z te witryny tylko minimalnego dostępu do zasobów na komputerze użytkownika. Witryny sieci Web, które nie są mapowane na inne strefy na automatycznie należą do tej strefy.  
  
-   Strefy witryn z ograniczeniami: strefa witryny z ograniczeniami jest używany dla witryn sieci Web, które mają zawartość, która może spowodować, że lub może to być wcześniej spowodowane, problemy podczas pobierania. Tej strefy, można zapobiec kodu pobrane z tych lokacji, z działającego na komputerze użytkownika. Adresy URL tych niezaufanych witryn sieci Web muszą być mapowane do tej strefy przez użytkownika.  
  
-   Strefa Komputer lokalny: strefa Komputer lokalny jest strefą domyślną używany dla zawartości, która istnieje na komputerze użytkownika. Zawartość znalezione na komputerze użytkownika, z wyjątkiem zawartości pamięci podręcznej programu Internet Explorer w systemie lokalnym jest traktowana z bardzo wysokim poziomie zaufania.  
  
> [!IMPORTANT]
>  Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], uprawnienia dotyczące tożsamości nie są używane.  
>   
>  W wersji systemu .NET Framework 1.0 i 1.1 wymagania dotyczące uprawnień tożsamości obowiązują, nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to mimo że zestaw wywołujący ma pełne zaufanie, zażąda uprawnień tożsamości wynik negatywny, jeśli zestaw nie spełnia kryteriów żądane. W programie .NET Framework w wersji 2.0, zapotrzebowanie na uprawnienia dotyczące tożsamości jest nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkie uprawnienia, eliminując traktowanie uprawnienia dotyczące tożsamości w szczególnych przypadkach.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" />
    <altmember cref="T:System.Security.Policy.Zone" />
    <altmember cref="T:System.Security.Policy.ZoneMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZoneIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZoneIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jeden z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> klasy z określonym <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy albo pełni ograniczeniami (`None`) lub `Unrestricted` uprawnienia.  
  
> [!NOTE]
>  Wersje programu .NET Framework 1.0 i 1.1, nie mogą mieć uprawnienia dotyczące tożsamości <xref:System.Security.Permissions.PermissionState.Unrestricted> wartość stanu uprawnień. W programie .NET Framework w wersji 2.0, uprawnienia dotyczące tożsamości mogą mieć dowolną wartość stanu uprawnień. To oznacza, że w wersji 2.0 lub nowszej, uprawnienia dotyczące tożsamości ma takie samo zachowanie jako uprawnień, które implementują <xref:System.Security.Permissions.IUnrestrictedPermission> interfejsu. Oznacza to, że żądanie tożsamości zawsze zakończy się powodzeniem, niezależnie od tego, tożsamość zestawu, jeśli zestaw ma przyznane pełne zaufanie.  
  
 W wersji systemu .NET Framework 1.0 i 1.1 wymagania dotyczące uprawnień tożsamości obowiązują, nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to mimo że zestaw wywołujący ma pełne zaufanie, zażąda uprawnień tożsamości wynik negatywny, jeśli zestaw nie spełnia kryteriów żądane. W programie .NET Framework w wersji 2.0, zapotrzebowanie na uprawnienia dotyczące tożsamości jest nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkie uprawnienia, eliminując traktowanie uprawnienia dotyczące tożsamości w szczególnych przypadkach.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.ZoneIdentityPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> konstruktora.  
  
 [!code-csharp[System.Security.Permissions.ZoneIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ZoneIdentityPermission/CS/zoneidentity.cs#7)]
 [!code-vb[System.Security.Permissions.ZoneIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ZoneIdentityPermission/VB/zoneidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> Parametr nie jest prawidłową wartością <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZoneIdentityPermission (System.Security.SecurityZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.SecurityZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (zone As SecurityZone)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZoneIdentityPermission(System::Security::SecurityZone zone);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="zone" Type="System.Security.SecurityZone" />
      </Parameters>
      <Docs>
        <param name="zone">Identyfikator strefy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> klasy do reprezentowania tożsamości określonej strefy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono użycie <xref:System.Security.Permissions.ZoneIdentityPermission.%23ctor%28System.Security.SecurityZone%29?displayProperty=nameWithType> konstruktora.  
  
 [!code-csharp[System.Security.Permissions.ZoneIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ZoneIdentityPermission/CS/zoneidentity.cs#8)]
 [!code-vb[System.Security.Permissions.ZoneIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ZoneIdentityPermission/VB/zoneidentity.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca identyczne kopię bieżącego uprawnień.</summary>
        <returns>Kopię bieżącego uprawnień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopię uprawnienie reprezentuje takie same prawa dostępu do zasobów oryginalnego uprawnienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">Kodowanie XML na potrzeby rekonstrukcji uprawnienia.</param>
        <summary>Rekonstruuje uprawnienie o określonym stanie kodowania XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="esd" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="esd" /> Parametr nie jest elementem prawidłowego uprawnienia.  
  
 —lub—  
  
 <paramref name="esd" /> Parametru numer wersji jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do intersect z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień.</param>
        <summary>Tworzy i zwraca uprawnienia, które jest przecięcia bieżące uprawnienia i określony.</summary>
        <returns>Nowe uprawnienie reprezentuje część wspólną bieżące uprawnienia i określony. Jest to nowe uprawnienie <see langword="null" /> Jeśli część wspólną jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Część wspólną dwóch uprawnień jest uprawnienia, które opisano zestaw działań, które opisują one zarówno wspólnych. Tylko zażąda przekazuje oba oryginalnego uprawnienia zostaną spełnione przecięcie.  
  
 Część wspólną dwóch identycznych <xref:System.Security.Permissions.ZoneIdentityPermission> obiektów jest to uprawnienie. Inne kombinacje powoduje uprawnienia, które jest `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest taki sam typ jak bieżące uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienia, które ma być sprawdzane pod kątem relacji podzbioru. To uprawnienie musi być tego samego typu co bieżący uprawnień.</param>
        <summary>Określa, czy bieżące uprawnienia podzbiór określonego uprawnienia.</summary>
        <returns>
          <see langword="true" /> Jeśli bieżące uprawnienia są podzbiorem określonego uprawnienia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące uprawnienia jest podzbiorem określonego uprawnienia, jeśli dwa uprawnienia są takie same lub jeśli bieżący uprawnienie reprezentuje <xref:System.Security.SecurityZone.NoZone> strefy zabezpieczeń.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" />, to uprawnienie reprezentuje <see cref="F:System.Security.SecurityZone.NoZone" /> strefy zabezpieczeń i określone uprawnienie nie jest równa bieżące uprawnienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityZone">
      <MemberSignature Language="C#" Value="public System.Security.SecurityZone SecurityZone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityZone SecurityZone" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityZone As SecurityZone" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecurityZone SecurityZone { System::Security::SecurityZone get(); void set(System::Security::SecurityZone value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia strefy reprezentowany przez bieżący <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />.</summary>
        <value>Jeden z <see cref="T:System.Security.SecurityZone" /> wartości.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Wartość parametru nie jest prawidłową wartością <see cref="T:System.Security.SecurityZone" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kodowania XML uprawnienia i swojego bieżącego stanu.</summary>
        <returns>Kodowanie XML uprawnienia, łącznie z żadnych informacji o stanie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uprawnienie do łączenia z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień.</param>
        <summary>Tworzy uprawnienia, które łączy bieżące uprawnienia i określony.</summary>
        <returns>Nowe uprawnienie reprezentuje złożenie bieżące uprawnienia i określony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wynik wywołania <xref:System.Security.Permissions.ZoneIdentityPermission.Union%2A> jest uprawnienia, które reprezentuje strefy zabezpieczeń reprezentowany przez bieżące uprawnienia i określonego uprawnienia. Wszelkie żądania, który przekazuje albo uprawnienie przekazuje ich union. Złożenie dwóch identycznych <xref:System.Security.Permissions.ZoneIdentityPermission> obiektów jest to uprawnienie. Unii o wartości null uprawnień i <xref:System.Security.Permissions.ZoneIdentityPermission> uprawnienie jest uprawnień, który nie jest zerowa.  
  
 Należy pamiętać, że <xref:System.Security.Permissions.ZoneIdentityPermission> reprezentujący obiekt <xref:System.Security.SecurityZone.NoZone> strefy zabezpieczeń jest traktowane jako wartości null uprawnień i obsługiwane w szczególnych przypadkach. Złożenie <xref:System.Security.Permissions.ZoneIdentityPermission> reprezentujący obiekt <xref:System.Security.SecurityZone.NoZone> strefy zabezpieczeń i uprawnienia null ma wartość null. Złożenie dwóch uprawnienia tożsamości innej strefie powoduje <xref:System.ArgumentException> wyjątek został zgłoszony, gdy żadna z dwóch uprawnienia reprezentuje <xref:System.Security.SecurityZone.NoZone> strefy zabezpieczeń.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest taki sam typ jak bieżące uprawnienia.  
  
 —lub—  
  
 Dwa uprawnienia nie są takie same i bieżące uprawnienia nie reprezentuje <see cref="F:System.Security.SecurityZone.NoZone" /> strefy zabezpieczeń.</exception>
      </Docs>
    </Member>
  </Members>
</Type>