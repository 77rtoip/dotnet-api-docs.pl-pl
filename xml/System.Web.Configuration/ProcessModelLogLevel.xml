<Type Name="ProcessModelLogLevel" FullName="System.Web.Configuration.ProcessModelLogLevel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76a865f5cbc76c865450638fdd991755a62b0cfc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30581071" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ProcessModelLogLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ProcessModelLogLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.ProcessModelLogLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum ProcessModelLogLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class ProcessModelLogLevel" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa typy zdarzeń, które mają być rejestrowane w dzienniku zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.ProcessModelLogLevel> Wyliczenie zawiera wartości do użycia podczas ustawiania <xref:System.Web.Configuration.ProcessModelSection.LogLevel%2A> właściwości.  
  
 Wartość domyślna to błędy.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób ustawiania <xref:System.Web.Configuration.ProcessModelSection.LogLevel%2A> właściwości.  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#23)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#23)]  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Web.Configuration.ProcessModelSection" />
  </Docs>
  <Members>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="All" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.ProcessModelLogLevel All = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.ProcessModelLogLevel.All" />
      <MemberSignature Language="VB.NET" Value="All" />
      <MemberSignature Language="C++ CLI" Value="All" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProcessModelLogLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Określa, że wszystkie przetwarzania zdarzeń są rejestrowane. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej opcji, jeśli chcesz eksplorować możliwych błędów, aplikacja może wydawać bez żadnego filtrowania. Ta opcja jest przydatna podczas kompilowanie i debugowanie fazy.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="Errors" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.ProcessModelLogLevel Errors = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.ProcessModelLogLevel.Errors" />
      <MemberSignature Language="VB.NET" Value="Errors" />
      <MemberSignature Language="C++ CLI" Value="Errors" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProcessModelLogLevel</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Określa, że zamknięć, zamknięcia limit pamięci i zamknięcia zakleszczenia są rejestrowane. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wartość domyślna.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.ProcessModelLogLevel None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.ProcessModelLogLevel.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProcessModelLogLevel</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Określa, że zdarzenia nie są rejestrowane. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć tej opcji dla przetestowane i wdrożone aplikacje.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>