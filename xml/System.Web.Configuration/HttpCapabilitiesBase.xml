<Type Name="HttpCapabilitiesBase" FullName="System.Web.Configuration.HttpCapabilitiesBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbdc988a845e79426d5bd3539076d71e70191be8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37607837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpCapabilitiesBase extends System.Object implements class System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpCapabilitiesBase" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpCapabilitiesBase&#xA;Implements IFilterResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCapabilitiesBase : System::Web::UI::IFilterResolutionService" />
  <TypeSignature Language="F#" Value="type HttpCapabilitiesBase = class&#xA;    interface IFilterResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IFilterResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="45754-101">Zapewnia dostęp do szczegółowych informacji na temat możliwości przeglądarki klienta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="45754-101">Provides access to detailed information about the capabilities of the client's browser.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> jest klasą bazową, z którego <xref:System.Web.HttpBrowserCapabilities> klasa pochodzi.</span><span class="sxs-lookup"><span data-stu-id="45754-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> is the base class from which the <xref:System.Web.HttpBrowserCapabilities> class is derived.</span></span> <span data-ttu-id="45754-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> oferuje dużą liczbę właściwości tylko do odczytu, które zapewniają bezpieczny dostęp do słownika możliwości przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offers a large number of read-only properties that provide type-safe access to a browser's capabilities dictionary.</span></span> <span data-ttu-id="45754-104">Możesz uzyskać dostęp <xref:System.Web.HttpBrowserCapabilities> klasy za pomocą <xref:System.Web.HttpRequest.Browser%2A> właściwość, która jest udostępniany przez platformę ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="45754-104">You can access the <xref:System.Web.HttpBrowserCapabilities> class through the <xref:System.Web.HttpRequest.Browser%2A> property that is exposed by the ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-105">Poniższy przykład pokazuje, jak uzyskać dostęp do informacji o przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="45754-105">The following example shows how to access information about the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase/VB/sample_vb.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCapabilitiesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCapabilitiesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45754-106">Tworzy nowe wystąpienie klasy <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-106">Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveXControls">
      <MemberSignature Language="C#" Value="public bool ActiveXControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveXControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveXControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveXControls { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveXControls : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-107">Pobiera wartość wskazującą, czy przeglądarka obsługuje formanty ActiveX.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-107">Gets a value indicating whether the browser supports ActiveX controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-108">
            <see langword="true" /> Jeśli przeglądarka obsługuje formantów ActiveX. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-108">
              <see langword="true" /> if the browser supports ActiveX controls; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-109">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-109">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-110">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje formanty ActiveX.</span><span class="sxs-lookup"><span data-stu-id="45754-110">The following code example shows how to determine whether the browser supports ActiveX controls.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Adapters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Adapters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adapters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Adapters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Adapters : System.Collections.IDictionary" Usage="System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-111">Zwraca kolekcję kart dostępne kontrolki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-111">Returns the collection of available control adapters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-112">Kolekcja zarejestrowanych kontroli kart.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-112">The collection of registered control adapters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBrowser">
      <MemberSignature Language="C#" Value="public void AddBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBrowser (browserName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.AddBrowser : string -&gt; unit" Usage="httpCapabilitiesBase.AddBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName">
          <span data-ttu-id="45754-113">Nazwa przeglądarki do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-113">The name of the browser to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45754-114">Używane wewnętrznie, aby dodać wpis do kolekcji wewnętrznej przeglądarki, w których funkcje są rozpoznawane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-114">Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AOL">
      <MemberSignature Language="C#" Value="public bool AOL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AOL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AOL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AOL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AOL : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-115">Pobiera wartość wskazującą, czy klient jest przeglądarka America Online (AOL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-115">Gets a value indicating whether the client is an America Online (AOL) browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-116">
            <see langword="true" /> Jeśli przeglądarka jest przeglądarka AOL; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-116">
              <see langword="true" /> if the browser is an AOL browser; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-117">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-117">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-118">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka jest przeglądarka AOL.</span><span class="sxs-lookup"><span data-stu-id="45754-118">The following code example shows how to determine whether the browser is an AOL browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.AOL#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.AOL#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundSounds">
      <MemberSignature Language="C#" Value="public bool BackgroundSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundSounds" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackgroundSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundSounds { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundSounds : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-119">Pobiera wartość wskazującą, czy przeglądarka obsługuje odtwarzanie dźwięków tła przy użyciu <see langword="&lt;bgsounds&gt;" /> elementu HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-119">Gets a value indicating whether the browser supports playing background sounds using the <see langword="&lt;bgsounds&gt;" /> HTML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-120">
            <see langword="true" /> Jeśli przeglądarka obsługuje odtwarzanie dźwięku w tle; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-120">
              <see langword="true" /> if the browser supports playing background sounds; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-121">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-121">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-122">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje odtwarzanie dźwięku w tle.</span><span class="sxs-lookup"><span data-stu-id="45754-122">The following code example shows how to determine whether the browser supports playing background sounds.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public bool Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Beta" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Beta As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Beta { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Beta : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-123">Pobiera wartość wskazującą, czy przeglądarka jest w wersji beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-123">Gets a value indicating whether the browser is a beta version.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-124">
            <see langword="true" /> Jeśli przeglądarka jest w wersji beta; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-124">
              <see langword="true" /> if the browser is a beta version; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-125">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-125">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-126">W wersji beta wersja przeglądarki może cechować się nieprzewidywalne zachowanie.</span><span class="sxs-lookup"><span data-stu-id="45754-126">Beta version browsers can exhibit unpredictable behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-127">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka jest w wersji beta.</span><span class="sxs-lookup"><span data-stu-id="45754-127">The following code example shows how to determine whether the browser is a beta version.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Beta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Beta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public string Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Browser { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browser : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-128">Pobiera przeglądarki ciąg (jeśli istnieje), które zostało wysłane przez przeglądarkę w <see langword="User-Agent" /> nagłówek żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-128">Gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-129">Zawartość <see langword="User-Agent" /> nagłówek żądania wysyłane przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-129">The contents of the <see langword="User-Agent" /> request header sent by the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-130">Poniższy przykład kodu pokazuje sposób określania `User-Agent` nagłówek żądania wysyłane przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="45754-130">The following code example shows how to determine the `User-Agent` request header sent by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserCapabilitiesProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BrowserCapabilitiesProvider As HttpCapabilitiesProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::HttpCapabilitiesProvider ^ BrowserCapabilitiesProvider { System::Web::Configuration::HttpCapabilitiesProvider ^ get(); void set(System::Web::Configuration::HttpCapabilitiesProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowserCapabilitiesProvider : System.Web.Configuration.HttpCapabilitiesProvider with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-131">Pobiera lub ustawia <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> obiektu dla bieżącej przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-131">Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-132">
            <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> Obiektu dla bieżącej przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-132">The <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Browsers">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Browsers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Browsers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browsers As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Browsers { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browsers : System.Collections.ArrayList" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-133">Pobiera <see cref="T:System.Collections.ArrayList" /> przeglądarek w <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-133">Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-134">
            <see cref="T:System.Collections.ArrayList" /> Przeglądarek w <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-134">An <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCombineFormsInDeck">
      <MemberSignature Language="C#" Value="public virtual bool CanCombineFormsInDeck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCombineFormsInDeck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCombineFormsInDeck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCombineFormsInDeck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCombineFormsInDeck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-135">Pobiera wartość wskazującą, czy przeglądarka obsługuje pokładami, zawierające wielu formach, takich jak oddzielne karty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-135">Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-136">
            <see langword="true" /> Jeśli przeglądarka obsługuje pokładami, które zawierają wiele formularzy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-136">
              <see langword="true" /> if the browser supports decks that contain multiple forms; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-137">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-137">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-138"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-138">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> property applies only to WML-compatible mobile devices.</span></span> <span data-ttu-id="45754-139">W przypadku opcji true karta może zapewniać dane wyjściowe wielu formularzy z tej samej stronie jako karty z jednej, jeśli jest to możliwe.</span><span class="sxs-lookup"><span data-stu-id="45754-139">If true, the adapter can output multiple forms from the same page as cards of a single deck, where possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-140">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje pokładami, zawierające wielu formach, takich jak oddzielne karty.</span><span class="sxs-lookup"><span data-stu-id="45754-140">The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInitiateVoiceCall">
      <MemberSignature Language="C#" Value="public virtual bool CanInitiateVoiceCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInitiateVoiceCall" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInitiateVoiceCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInitiateVoiceCall { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInitiateVoiceCall : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-141">Pobiera wartość wskazującą, czy urządzenie przeglądarki jest w stanie inicjowania połączenie głosowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-141">Gets a value indicating whether the browser device is capable of initiating a voice call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-142">
            <see langword="true" /> Jeśli urządzenie przeglądarki jest w stanie inicjowania połączenie głosowe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-142">
              <see langword="true" /> if the browser device is capable of initiating a voice call; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-143">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-143">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-144"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-144">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-145">Poniższy przykład kodu pokazuje, jak ustalić, czy urządzenie przeglądarki jest w stanie inicjowania połączenie głosowe.</span><span class="sxs-lookup"><span data-stu-id="45754-145">The following code example shows how to determine whether the browser device is capable of initiating a voice call.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAfterInputOrSelectElement">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderAfterInputOrSelectElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderAfterInputOrSelectElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderAfterInputOrSelectElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderAfterInputOrSelectElement : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-146">Pobiera wartość wskazującą, czy przeglądarka obsługuje strony zawartości po WML <see langword="&lt;select&gt;" /> lub <see langword="&lt;input&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-146">Gets a value indicating whether the browser supports page content following WML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-147">
            <see langword="true" /> Jeśli przeglądarka obsługuje zawartości następujących HTML strony <see langword="&lt;select&gt;" /> lub <see langword="&lt;input&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-147">
              <see langword="true" /> if the browser supports page content following HTML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-148">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-148">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-149"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-149">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-150">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje zawartości następujących HTML strony `<select>` lub `<input>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-150">The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderEmptySelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderEmptySelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderEmptySelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderEmptySelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderEmptySelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderEmptySelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-151">Pobiera wartość wskazującą, czy przeglądarka obsługuje pusty HTML <see langword="&lt;select&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-151">Gets a value indicating whether the browser supports empty HTML <see langword="&lt;select&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-152">
            <see langword="true" /> Jeśli przeglądarka obsługuje pusty HTML <see langword="&lt;select&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-152">
              <see langword="true" /> if the browser supports empty HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-153">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-153">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-154">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje pusty HTML `<select>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-154">The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderInputAndSelectElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderInputAndSelectElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderInputAndSelectElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderInputAndSelectElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderInputAndSelectElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-155">Pobiera wartość wskazującą, czy przeglądarka obsługuje WML <see langword="INPUT" /> i <see langword="SELECT" /> elementy razem na tej samej karcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-155">Gets a value indicating whether the browser supports WML <see langword="INPUT" /> and <see langword="SELECT" /> elements together on the same card.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-156">
            <see langword="true" /> Jeśli przeglądarka obsługuje WML <see langword="&lt;input&gt;" /> i <see langword="&lt;select&gt;" /> elementy ze sobą; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-156">
              <see langword="true" /> if the browser supports WML <see langword="&lt;input&gt;" /> and <see langword="&lt;select&gt;" /> elements together; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-157">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-157">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-158"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-158">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-159">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje HTML `<input>` i `<select>` elementy razem.</span><span class="sxs-lookup"><span data-stu-id="45754-159">The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderMixedSelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderMixedSelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderMixedSelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderMixedSelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderMixedSelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderMixedSelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-160">Pobiera wartość wskazującą, czy przeglądarka obsługuje WML <see langword="&lt;option&gt;" /> elementy, które określają zarówno <see langword="onpick" /> i <see langword="value" /> atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-160">Gets a value indicating whether the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-161">
            <see langword="true" /> Jeśli przeglądarka obsługuje WML <see langword="&lt;option&gt;" /> elementy, które określają zarówno <see langword="onpick" /> i <see langword="value" /> atrybuty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-161">
              <see langword="true" /> if the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-162">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-162">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-163"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-163">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="45754-164">Jeśli `false`, `onpick` wartości są wyświetlane jako hiperlinki i `value` atrybuty wymagają `<do>` element do zwrotu.</span><span class="sxs-lookup"><span data-stu-id="45754-164">If `false`, `onpick` values are displayed as hyperlinks and `value` attributes require a `<do>` element for postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-165">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje HTML `<option>` elementy, które określają zarówno `onpick` i `value` atrybutów.</span><span class="sxs-lookup"><span data-stu-id="45754-165">The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderOneventAndPrevElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderOneventAndPrevElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderOneventAndPrevElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderOneventAndPrevElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderOneventAndPrevElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-166">Pobiera wartość wskazującą, czy przeglądarka obsługuje WML <see langword="&lt;onevent&gt;" /> i <see langword="&lt;prev&gt;" /> elementy, które współistnieć w tej samej karcie WML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-166">Gets a value indicating whether the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-167">
            <see langword="true" /> Jeśli przeglądarka obsługuje WML <see langword="&lt;onevent&gt;" /> i <see langword="&lt;prev&gt;" /> elementy, które współistnieć w tej samej karcie WML; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-167">
              <see langword="true" /> if the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-168">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-168">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-169"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-169">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="45754-170">Jeśli `false`, WML `<onevent>` i `<prev>` elementy, które współistnieć w tej samej karcie WML nie będą prawidłowo renderowane.</span><span class="sxs-lookup"><span data-stu-id="45754-170">If `false`, WML `<onevent>` and `<prev>` elements that coexist within the same WML card will not be properly rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-171">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje WML `<onevent>` i `<prev>` elementy, które współistnieć w tej samej karcie WML.</span><span class="sxs-lookup"><span data-stu-id="45754-171">The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderPostBackCards">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderPostBackCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderPostBackCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderPostBackCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderPostBackCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderPostBackCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-172">Pobiera wartość wskazującą, czy przeglądarka obsługuje WML kart, aby uzyskać zwrotu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-172">Gets a value indicating whether the browser supports WML cards for postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-173">
            <see langword="true" /> Jeśli przeglądarka obsługuje WML kart dla zwrotu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-173">
              <see langword="true" /> if the browser supports WML cards for postback; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-174">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-174">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-175"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> Właściwość ma zastosowanie tylko do przeglądarek urządzeń przenośnych WML zgodne.</span><span class="sxs-lookup"><span data-stu-id="45754-175">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> property applies only to WML-compatible mobile-device browsers.</span></span>  
  
 <span data-ttu-id="45754-176">Jeśli `false`, zwrotu karty nie będą poprawnie renderowane przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="45754-176">If `false`, postback cards will not be properly rendered by the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-177">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje WML kart, aby uzyskać zwrotu.</span><span class="sxs-lookup"><span data-stu-id="45754-177">The following code example shows how to determine whether the browser supports WML cards for postback.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderSetvarZeroWithMultiSelectionList">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderSetvarZeroWithMultiSelectionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderSetvarZeroWithMultiSelectionList { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderSetvarZeroWithMultiSelectionList : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-178">Pobiera wartość wskazującą, czy przeglądarka obsługuje WML <see langword="&lt;setvar&gt;" /> elementów za pomocą <see langword="value" /> atrybut 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-178">Gets a value indicating whether the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-179">
            <see langword="true" /> Jeśli przeglądarka obsługuje WML <see langword="&lt;setvar&gt;" /> elementów za pomocą <see langword="value" /> atrybutu <see langword="0" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-179">
              <see langword="true" /> if the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of <see langword="0" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-180">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-180">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-181"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-181">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="45754-182">Jeśli `false`, HTML `<setvar>` elementów za pomocą `value` atrybut `0` nie będą wyświetlane prawidłowo.</span><span class="sxs-lookup"><span data-stu-id="45754-182">If `false`, HTML `<setvar>` elements with a `value` attribute of `0` will not display correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-183">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje WML `<setvar>` elementów za pomocą `value` atrybut 0.</span><span class="sxs-lookup"><span data-stu-id="45754-183">The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSendMail">
      <MemberSignature Language="C#" Value="public virtual bool CanSendMail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSendMail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSendMail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSendMail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSendMail : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-184">Pobiera wartość wskazującą, czy przeglądarka obsługuje wysyłanie wiadomości e-mail za pomocą kodu HTML <see langword="&lt;mailto&gt;" /> element do wyświetlania elektronicznych adresów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-184">Gets a value indicating whether the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-185">
            <see langword="true" /> Jeśli przeglądarka obsługuje wysyłanie wiadomości e-mail za pomocą kodu HTML <see langword="&lt;mailto&gt;" /> element do wyświetlania elektronicznych adresów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-185">
              <see langword="true" /> if the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-186">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-186">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-187">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje wysyłanie wiadomości e-mail za pomocą kodu HTML `<mailto>` element do wyświetlania elektronicznych adresów.</span><span class="sxs-lookup"><span data-stu-id="45754-187">The following code example shows how to determine whether the browser supports sending email by using the HTML `<mailto>` element for displaying electronic addresses.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Capabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capabilities As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Capabilities { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Capabilities : System.Collections.IDictionary with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-188">Używane wewnętrznie, uzyskanie określonych możliwości przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-188">Used internally to get the defined capabilities of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-189">Zdefiniowane możliwości przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-189">The defined capabilities of the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CDF">
      <MemberSignature Language="C#" Value="public bool CDF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDF" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CDF : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-190">Pobiera wartość wskazującą, czy przeglądarka obsługuje formatem definicji kanału (CDF) dla webcasting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-190">Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-191">
            <see langword="true" /> Jeśli przeglądarka obsługuje CDF; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-191">
              <see langword="true" /> if the browser supports CDF; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-192">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-192">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-193">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje CDF.</span><span class="sxs-lookup"><span data-stu-id="45754-193">The following code example shows how to determine whether the browser supports CDF.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CDF#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CDF#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public Version ClrVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ClrVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClrVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-194">Pobiera wersję .NET Framework, która jest zainstalowana na komputerze klienckim.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-194">Gets the version of the .NET Framework that is installed on the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-195">Środowisko uruchomieniowe języka wspólnego <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-195">The common language runtime <see cref="T:System.Version" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-196"><xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> Właściwość jest obsługiwana tylko wtedy, gdy przeglądarka Internet Explorer w wersji 5.0 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="45754-196">The <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property is supported only when the browser is Internet Explorer version 5.0 and later.</span></span>  
  
 <span data-ttu-id="45754-197">Jeśli nie zainstalowano programu .NET Framework na komputerze klienckim, zwracana wartość elementy wersji jest `0, 0,-1,-1`.</span><span class="sxs-lookup"><span data-stu-id="45754-197">If the .NET Framework is not installed on the client, the value of the version elements returned is `0, 0,-1,-1`.</span></span>  
  
 <span data-ttu-id="45754-198">Jeśli więcej niż jedna wersja programu .NET Framework jest zainstalowana na komputerze klienckim, <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> właściwość zwraca najnowszej wersji.</span><span class="sxs-lookup"><span data-stu-id="45754-198">If more than one version of the .NET Framework is installed on the client, the <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property returns the latest version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public bool Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cookies { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-199">Pobiera wartość wskazującą, czy przeglądarka obsługuje pliki cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-199">Gets a value indicating whether the browser supports cookies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-200">
            <see langword="true" /> Jeśli przeglądarka obsługuje pliki cookie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-200">
              <see langword="true" /> if the browser supports cookies; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-201">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-201">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-202"><xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> Właściwość wskazuje, czy aplikacja przeglądarka obsługuje pliki cookie.</span><span class="sxs-lookup"><span data-stu-id="45754-202">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property indicates whether the browser application supports cookies.</span></span> <span data-ttu-id="45754-203">Jeśli użytkownik wyłączył obsługę plików cookie w swojej aplikacji, <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> właściwość nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="45754-203">If the user has disabled cookies in their application, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property will not be affected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-204">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje pliki cookie.</span><span class="sxs-lookup"><span data-stu-id="45754-204">The following code example shows how to determine whether the browser supports cookies.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Crawler">
      <MemberSignature Language="C#" Value="public bool Crawler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Crawler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crawler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Crawler { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Crawler : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-205">Pobiera wartość wskazującą, czy przeglądarka jest przeszukiwarką Web aparatu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-205">Gets a value indicating whether the browser is a search engine Web crawler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-206">
            <see langword="true" /> Jeśli przeglądarka jest aparat wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-206">
              <see langword="true" /> if the browser is a search engine; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-207">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-207">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-208">Poniższy przykład kodu pokazuje, jak ustalić, czy klient jest przeszukiwarką Web aparatu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="45754-208">The following code example shows how to determine whether the client is a search engine Web crawler.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHtmlTextWriter (w As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="member this.CreateHtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="httpCapabilitiesBase.CreateHtmlTextWriter w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="45754-209">
            <see cref="T:System.IO.TextWriter" /> do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-209">
              <see cref="T:System.IO.TextWriter" /> to be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45754-210">Tworzy nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlTextWriter" /> ma być używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-210">Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45754-211">Nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlTextWriter" /> ma być używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-211">A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="45754-212">Metody nie można utworzyć wystąpienia <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-212">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSubmitButtonLimit">
      <MemberSignature Language="C#" Value="public virtual int DefaultSubmitButtonLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSubmitButtonLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultSubmitButtonLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultSubmitButtonLimit { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSubmitButtonLimit : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-213">Zwraca maksymalną liczbę przyciski przesyłania, które są dozwolone dla formularza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-213">Returns the maximum number of Submit buttons that are allowed for a form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-214">Maksymalna liczba przycisków przesyłania, które są dozwolone dla formularza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-214">The maximum number of Submit buttons that are allowed for a form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-215"><xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> Właściwość przede wszystkim reprezentuje liczbę nietrwałego klucze, które są dostępne na urządzeniu przenośnym WML zgodne.</span><span class="sxs-lookup"><span data-stu-id="45754-215">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> property primarily represents the number of soft keys that are available on a WML-compatible mobile device.</span></span>  
  
 <span data-ttu-id="45754-216">Strony formularzy sieci Web dla urządzeń przenośnych może zawierać <xref:System.Web.UI.MobileControls.SelectionList> obiektu i więcej niż jedną <xref:System.Web.UI.MobileControls.Command> kontroli.</span><span class="sxs-lookup"><span data-stu-id="45754-216">Web Forms pages for mobile devices can contain a <xref:System.Web.UI.MobileControls.SelectionList> object and more than one <xref:System.Web.UI.MobileControls.Command> control.</span></span> <span data-ttu-id="45754-217"><xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> Pozwala wybrać, które <xref:System.Web.UI.MobileControls.Command> kontrolki powinien zostać przypisany do nietrwałego klucza na urządzeniach, które mają wiele kluczy słabe.</span><span class="sxs-lookup"><span data-stu-id="45754-217">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> allows you to choose which of the <xref:System.Web.UI.MobileControls.Command> controls should be assigned to a soft key on devices that have multiple soft keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public void DisableOptimizedCacheKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableOptimizedCacheKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableOptimizedCacheKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableOptimizedCacheKey();" />
      <MemberSignature Language="F#" Value="member this.DisableOptimizedCacheKey : unit -&gt; unit" Usage="httpCapabilitiesBase.DisableOptimizedCacheKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45754-218">Używane wewnętrznie, aby wyłączyć użycie klucza zoptymalizowanych w pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-218">Used internally to disable use of an optimized cache key.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EcmaScriptVersion">
      <MemberSignature Language="C#" Value="public Version EcmaScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version EcmaScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EcmaScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ EcmaScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EcmaScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-219">Pobiera numer wersji ECMAScript, obsługującego w przeglądarce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-219">Gets the version number of ECMAScript that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-220">Numer wersji ECMAScript, obsługującego w przeglądarce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-220">The version number of ECMAScript that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-221">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje ECMAScript główny numer wersji większy niż 1.</span><span class="sxs-lookup"><span data-stu-id="45754-221">The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public bool Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Frames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Frames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-222">Pobiera wartość wskazującą, czy przeglądarka obsługuje ramek HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-222">Gets a value indicating whether the browser supports HTML frames.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-223">
            <see langword="true" /> Jeśli przeglądarka obsługuje ramki; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-223">
              <see langword="true" /> if the browser supports frames; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-224">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-224">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-225">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje ramek HTML.</span><span class="sxs-lookup"><span data-stu-id="45754-225">The following code example shows how to determine whether the browser supports HTML frames.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Frames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Frames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayMajorVersion">
      <MemberSignature Language="C#" Value="public virtual int GatewayMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GatewayMajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GatewayMajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-226">Pobiera główny numer wersji bramy sieci bezprzewodowej, używane do uzyskiwania dostępu do serwera, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-226">Gets the major version number of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-227">Główny numer wersji bramy sieci bezprzewodowej, używane do uzyskiwania dostępu do serwera, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-227">The major version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="45754-228">Wartość domyślna to <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-228">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="45754-229">Nie można przeanalizować główny numer wersji bramy sieci bezprzewodowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-229">The major version number of the wireless gateway cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMinorVersion">
      <MemberSignature Language="C#" Value="public virtual double GatewayMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GatewayMinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double GatewayMinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-230">Pobiera numer wersji pomocniczej bramy sieci bezprzewodowej, używane do uzyskiwania dostępu do serwera, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-230">Gets the minor version number of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-231">Pomocniczy numer wersji bramy sieci bezprzewodowej, używane do uzyskiwania dostępu do serwera, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-231">The minor version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="45754-232">Wartość domyślna to <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-232">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="45754-233">Nie można przeanalizować pomocniczy numer wersji bramy sieci bezprzewodowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-233">The minor version number of the wireless gateway cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayVersion">
      <MemberSignature Language="C#" Value="public virtual string GatewayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GatewayVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GatewayVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayVersion : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-234">Pobiera wersję bramy sieci bezprzewodowej, używane do uzyskiwania dostępu do serwera, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-234">Gets the version of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-235">Numer wersji bramy sieci bezprzewodowej, używane do uzyskiwania dostępu do serwera, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-235">The version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="45754-236">Wartość domyślna to <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-236">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-237">Poniższy przykład kodu pokazuje, jak ustalić, czy brama jest `UP` bramy.</span><span class="sxs-lookup"><span data-stu-id="45754-237">The following code example shows how to determine whether the gateway is an `UP` gateway.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrVersions">
      <MemberSignature Language="C#" Value="public Version[] GetClrVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Version[] GetClrVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrVersions () As Version()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Version ^&gt; ^ GetClrVersions();" />
      <MemberSignature Language="F#" Value="member this.GetClrVersions : unit -&gt; Version[]" Usage="httpCapabilitiesBase.GetClrVersions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45754-238">Zwraca wszystkie wersje .NET Framework środowisko uruchomieniowe języka wspólnego, które są zainstalowane na komputerze klienckim.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-238">Returns all versions of the .NET Framework common language runtime that are installed on the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45754-239">Tablica <see cref="T:System.Version" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-239">An array of <see cref="T:System.Version" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-240"><xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> Metoda jest obsługiwana tylko wtedy, gdy przeglądarka Internet Explorer w wersji 5.0 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="45754-240">The <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> method is supported only when the browser is Internet Explorer version 5.0 or later.</span></span> <span data-ttu-id="45754-241">Jeśli środowisko uruchomieniowe języka wspólnego nie jest zainstalowany na komputerze klienckim, właściwość ta zwraca tablicę zawierającą pojedynczy <xref:System.Version> obiektu przy użyciu wartości 0, 0, -1, -1.</span><span class="sxs-lookup"><span data-stu-id="45754-241">If the common language runtime is not installed on the client, the property returns an array containing a single <xref:System.Version> object with the values 0, 0,-1,-1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigCapabilities">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities(string configKey, class System.Web.HttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConfigCapabilities (configKey As String, request As HttpRequest) As HttpCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Configuration::HttpCapabilitiesBase ^ GetConfigCapabilities(System::String ^ configKey, System::Web::HttpRequest ^ request);" />
      <MemberSignature Language="F#" Value="static member GetConfigCapabilities : string * System.Web.HttpRequest -&gt; System.Web.Configuration.HttpCapabilitiesBase" Usage="System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities (configKey, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configKey" Type="System.String" />
        <Parameter Name="request" Type="System.Web.HttpRequest" />
      </Parameters>
      <Docs>
        <param name="configKey">
          <span data-ttu-id="45754-242">Nazwa sekcji konfiguracji, który konfiguruje możliwości przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-242">The name of the configuration section that configures browser capabilities.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45754-243">
            <see cref="T:System.Web.HttpRequest" /> Generowane przez przeglądarkę, dla której ma zostać zwrócone możliwości i co jest zazwyczaj bieżący <see cref="T:System.Web.HttpRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-243">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45754-244">Używana wewnętrznie w celu zwrócenia wystąpienia <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> reprezentujący przeglądarki, która wygenerowała określonego <see cref="T:System.Web.HttpRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-244">Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45754-245">Wystąpienie <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> reprezentujący przeglądarki, która wygenerowała określonego <see cref="T:System.Web.HttpRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-245">An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBackButton">
      <MemberSignature Language="C#" Value="public virtual bool HasBackButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBackButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasBackButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasBackButton { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasBackButton : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-246">Pobiera wartość wskazującą, czy przeglądarka dedykowany ** wstecz ** przycisku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-246">Gets a value indicating whether the browser has a dedicated **Back** button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-247">
            <see langword="true" /> Jeśli przeglądarka ma dedykowany ** wstecz ** przycisk. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-247">
              <see langword="true" /> if the browser has a dedicated **Back** button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-248">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-248">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-249">Jeśli `false`, formant łącza może być konieczne, gdy **ponownie** przycisk jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="45754-249">If `false`, a link control might be necessary when a **Back** button is not available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-250">Poniższy przykład kodu pokazuje, jak określić, czy przeglądarka ma dedykowany **ponownie** przycisku.</span><span class="sxs-lookup"><span data-stu-id="45754-250">The following code example shows how to determine whether the browser has a dedicated **Back** button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HidesRightAlignedMultiselectScrollbars">
      <MemberSignature Language="C#" Value="public virtual bool HidesRightAlignedMultiselectScrollbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HidesRightAlignedMultiselectScrollbars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HidesRightAlignedMultiselectScrollbars { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HidesRightAlignedMultiselectScrollbars : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-251">Pobiera wartość wskazującą czy pasek przewijania HTML <see langword="&lt;select multiple&gt;" /> element z <see langword="align" /> wartość atrybutu <see langword="right" /> jest zasłonięte podczas renderowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-251">Gets a value indicating whether the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-252">
            <see langword="true" /> Jeśli pasek przewijania HTML <see langword="&lt;select multiple&gt;" /> element z <see langword="align" /> wartość atrybutu <see langword="right" /> jest zasłonięte podczas renderowania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-252">
              <see langword="true" /> if the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-253">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-253">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-254">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka ukrycie paska przewijania wyrównany do prawej wielokrotnego wyboru elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-254">The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlTextWriter">
      <MemberSignature Language="C#" Value="public string HtmlTextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlTextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlTextWriter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HtmlTextWriter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlTextWriter : string with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-255">Pobiera lub ustawia nazwę klasy w pełni kwalifikowana <see cref="T:System.Web.UI.HtmlTextWriter" /> do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-255">Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-256">W pełni kwalifikowaną nazwę klasy z <see cref="T:System.Web.UI.HtmlTextWriter" /> do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-256">The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-257">Pobiera identyfikator wewnętrznej przeglądarki, jak określono w pliku definicji przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-257">Gets the internal identifier of the browser as specified in the browser definition file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-258">Wewnętrzny identyfikator przeglądarki, jak określono w plik definicji przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-258">Internal identifier of the browser as specified in the browser definition file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="protected virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.Init" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="httpCapabilitiesBase.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45754-259">Używana wewnętrznie w celu zainicjowania wewnętrznego zbiór wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-259">Used internally to initialize an internal set of values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual string InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InputType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-260">Zwraca typ danych wejściowych jest obsługiwana przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-260">Returns the type of input supported by browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-261">Typ danych wejściowych jest obsługiwana przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-261">The type of input supported by browser.</span>
          </span>
          <span data-ttu-id="45754-262">Wartość domyślna to <c>telephoneKeypad</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-262">The default is <c>telephoneKeypad</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-263">Możliwe wartości zwracane:</span><span class="sxs-lookup"><span data-stu-id="45754-263">Possible return values include:</span></span>  
  
-   `virtualKeyboard`  
  
-   `telephoneKeypad`  
  
-   `keyboard`  
  
   
  
## Examples  
 <span data-ttu-id="45754-264">W poniższym przykładzie kodu pokazano, jak można ustalić typu danych wejściowych pomocy technicznej.</span><span class="sxs-lookup"><span data-stu-id="45754-264">The following code example shows how to determine the type of input support.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.InputType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.InputType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public bool IsBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBrowser (browserName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.IsBrowser : string -&gt; bool" Usage="httpCapabilitiesBase.IsBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName">
          <span data-ttu-id="45754-265">Określony przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-265">The specified browser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45754-266">Pobiera wartość wskazującą, czy w przeglądarce klienta jest taka sama jak określona przeglądarka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-266">Gets a value indicating whether the client browser is the same as the specified browser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45754-267">
            <see langword="true" /> Jeśli przeglądarka klienta jest taka sama jak określona przeglądarka; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-267">
              <see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-268">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-268">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-269"><xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> Metoda zwraca też wartość `true` Jeśli definicja przeglądarki klienta dziedziczy z określonej przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-269">The <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> method also returns `true` if the client browser definition inherits from the specified browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColor">
      <MemberSignature Language="C#" Value="public virtual bool IsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-270">Pobiera wartość wskazującą, czy w przeglądarce wyświetlania kolorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-270">Gets a value indicating whether the browser has a color display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-271">
            <see langword="true" /> Jeśli przeglądarka ma wyświetlania kolorów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-271">
              <see langword="true" /> if the browser has a color display; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-272">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-272">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-273">Poniższy przykład kodu pokazuje, czy przeglądarki klienta obsługuje kolorów.</span><span class="sxs-lookup"><span data-stu-id="45754-273">The following code example shows whether the client's browser supports color.</span></span> <span data-ttu-id="45754-274">Zwracana wartość może służyć do określenia odpowiedni obraz do wysłania do przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-274">The returned value could be used to determine the appropriate image to send to the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMobileDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsMobileDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMobileDevice" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMobileDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMobileDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMobileDevice : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-275">Pobiera wartość wskazującą, czy przeglądarka jest rozpoznany urządzeń przenośnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-275">Gets a value indicating whether the browser is a recognized mobile device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-276">
            <see langword="true" /> Jeśli przeglądarka jest rozpoznany urządzeniu przenośnym w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-276">
              <see langword="true" /> if the browser is a recognized mobile device; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-277">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-277">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-278">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka jest urządzenia przenośnego.</span><span class="sxs-lookup"><span data-stu-id="45754-278">The following code example shows how to determine whether the browser is a mobile device.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="45754-279">Nazwa możliwości przeglądarki do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-279">The name of the browser capability to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45754-280">Pobiera wartość możliwości przeglądarki określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-280">Gets the value of the specified browser capability.</span>
          </span>
          <span data-ttu-id="45754-281">W języku C# ta właściwość jest indeksatora dla klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-281">In C#, this property is the indexer for the class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-282">Możliwości przeglądarki przy użyciu określonej nazwy kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-282">The browser capability with the specified key name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-283">W języku JScript można używać właściwości domyślnie indeksowanej definicją typu, ale nie można jawnie definiować własnych.</span><span class="sxs-lookup"><span data-stu-id="45754-283">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="45754-284">Można jednak określić `expando` atrybutu dla klasy, automatycznie zapewnia domyślnie indeksowanej właściwości z typem `Object` i typ indeksu `String`.</span><span class="sxs-lookup"><span data-stu-id="45754-284">However, specifying the `expando` attribute on a class automatically provides a default indexed property with a type of `Object` and an index type of `String`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaApplets">
      <MemberSignature Language="C#" Value="public bool JavaApplets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaApplets" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaApplets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaApplets { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaApplets : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-285">Pobiera wartość wskazującą, czy przeglądarka obsługuje Java.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-285">Gets a value indicating whether the browser supports Java.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-286">
            <see langword="true" /> Jeśli przeglądarka obsługuje Java; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-286">
              <see langword="true" /> if the browser supports Java; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-287">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-287">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-288">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje Java.</span><span class="sxs-lookup"><span data-stu-id="45754-288">The following code example shows how to determine whether the browser supports Java.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScript">
      <MemberSignature Language="C#" Value="public bool JavaScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is the EcmaScriptVersion property. A Major version value greater than or equal to 1 implies JavaScript support. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-289">Pobiera wartość wskazującą, czy przeglądarka obsługuje język JavaScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-289">Gets a value indicating whether the browser supports JavaScript.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-290">
            <see langword="true" /> Jeśli przeglądarka obsługuje język JavaScript; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-290">
              <see langword="true" /> if the browser supports JavaScript; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-291">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-291">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-292">Jeśli przeglądarka obsługuje język JavaScript, ale obsługa skryptów jest wyłączone za pomocą ustawienia zabezpieczeń <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> zwróci właściwość `true` , ale skryptu nie zostanie wykonany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="45754-292">If the browser supports JavaScript but scripting is disabled through a security setting, the <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> property will return `true` but script will not execute on the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-293">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje język JavaScript.</span><span class="sxs-lookup"><span data-stu-id="45754-293">The following code example shows how to determine whether the browser supports JavaScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JScriptVersion">
      <MemberSignature Language="C#" Value="public Version JScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version JScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ JScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-294">Pobiera wersję języka JScript, obsługujący w przeglądarce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-294">Gets the JScript version that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-295">
            <see cref="T:System.Version" /> Pliku JScript, obsługujący w przeglądarce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-295">The <see cref="T:System.Version" /> of JScript that the browser supports.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-296">Pobiera główny (liczba całkowita) numer wersji przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-296">Gets the major (integer) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-297">Główny numer wersji przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-297">The major version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-298">Poniższy przykład kodu dodaje głównych i pomocniczych (liczb całkowitych i dziesiętnych) wartości wersji przeglądarki numer i wysyła wyniki do przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-298">The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="45754-299">Wartość wersji głównej nie jest liczbą całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-299">The major version value is not an integer.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MaximumHrefLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumHrefLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumHrefLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumHrefLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumHrefLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumHrefLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-300">Pobiera maksymalną długość w znakach <see langword="href" /> atrybutu HTML <see langword="&lt;a&gt;" /> elementu (zakotwiczenia).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-300">Gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-301">Maksymalna długość w znakach <see langword="href" /> atrybutu HTML <see langword="&lt;a&gt;" /> elementu (zakotwiczenia).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-301">The maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRenderedPageSize">
      <MemberSignature Language="C#" Value="public virtual int MaximumRenderedPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRenderedPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumRenderedPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumRenderedPageSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRenderedPageSize : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-302">Pobiera maksymalną długość strony, w bajtach, w których mogą być wyświetlane w przeglądarce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-302">Gets the maximum length of the page, in bytes, which the browser can display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-303">Maksymalna długość w bajtach, w których mogą być wyświetlane w przeglądarce strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-303">The maximum length of the page, in bytes, which the browser can display.</span>
          </span>
          <span data-ttu-id="45754-304">Wartość domyślna to <c>2000</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-304">The default is <c>2000</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-305">Przetwarzanie przez bramy pośredniej można zmienić liczbę bajtów, docierających do przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-305">Processing by an intermediate gateway can change the number of bytes that reach the browser.</span></span> <span data-ttu-id="45754-306">Program ASP.NET nie wymusza ten limit na rozmiar strony.</span><span class="sxs-lookup"><span data-stu-id="45754-306">ASP.NET does not enforce this limit on page size.</span></span>  
  
 <span data-ttu-id="45754-307"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> jest szczególnie przydatne podczas pracy z przeglądarkami klientów mobilnych.</span><span class="sxs-lookup"><span data-stu-id="45754-307"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> is primarily useful when working with mobile-client browsers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSoftkeyLabelLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumSoftkeyLabelLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumSoftkeyLabelLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumSoftkeyLabelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumSoftkeyLabelLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSoftkeyLabelLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-308">Zwraca maksymalną długość tekstu, który można wyświetlić etykiety opcji soft-key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-308">Returns the maximum length of the text that a soft-key label can display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-309">Maksymalna długość tekstu, który można wyświetlić etykiety opcji soft-key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-309">The maximum length of the text that a soft-key label can display.</span>
          </span>
          <span data-ttu-id="45754-310">Wartość domyślna to <see langword="5" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-310">The default is <see langword="5" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-311"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-311">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-312">W poniższym przykładzie kodu pokazano, jak można określić maksymalną długość etykiety opcji soft-key dla przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-312">The following code example shows how to determine the maximum length of the soft-key label for the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public double MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-313">Pobiera pomocnicze (czyli dziesiętna) numer wersji przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-313">Gets the minor (that is, decimal) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-314">Pomocniczy numer wersji przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-314">The minor version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-315">Poniższy kod zwraca podrzędny numer wersji przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-315">The following code example returns the minor version of the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="45754-316">Pomocniczy numer wersji w nagłówku nie jest prawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-316">The minor version number in the header is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinorVersionString">
      <MemberSignature Language="C#" Value="public string MinorVersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinorVersionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinorVersionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersionString : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-317">Pobiera numer wersji pomocniczej (dziesiętna) przeglądarki jako ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-317">Gets the minor (decimal) version number of the browser as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-318">Pomocniczy numer wersji przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-318">The minor version number of the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceManufacturer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceManufacturer : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-319">Zwraca nazwę producenta urządzenia przenośnego, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-319">Returns the name of the manufacturer of a mobile device, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-320">Nazwa producenta urządzenia przenośnego, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-320">The name of the manufacturer of a mobile device, if known.</span>
          </span>
          <span data-ttu-id="45754-321">Wartość domyślna to <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-321">The default is <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceModel">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceModel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceModel { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceModel : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-322">Pobiera nazwę modelu urządzenia przenośnego, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-322">Gets the model name of a mobile device, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-323">Nazwa modelu urządzenia przenośnego, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-323">The model name of a mobile device, if known.</span>
          </span>
          <span data-ttu-id="45754-324">Wartość domyślna to <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-324">The default is <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MSDomVersion">
      <MemberSignature Language="C#" Value="public Version MSDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MSDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MSDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MSDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MSDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-325">Pobiera wersję programu Microsoft HTML (MSHTML) modelu DOM (Document Object) obsługującego w przeglądarce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-325">Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-326">Numer wersji MSHTML modelu DOM, która obsługuje przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-326">The number of the MSHTML DOM version that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-327">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje większą niż 1 MSHTML DOM w wersji głównej.</span><span class="sxs-lookup"><span data-stu-id="45754-327">The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSoftkeys">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSoftkeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSoftkeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfSoftkeys As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfSoftkeys { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfSoftkeys : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-328">Zwraca liczbę kluczy nietrwałego na urządzeniu przenośnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-328">Returns the number of soft keys on a mobile device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-329">Liczba kluczy nietrwałego obsługiwane na urządzeniu przenośnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-329">The number of soft keys supported on a mobile device.</span>
          </span>
          <span data-ttu-id="45754-330">Wartość domyślna to <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-330">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-331"><xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-331">The <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="45754-332">Elastyczne klucze są klawisze specjalne, aplikacja może zwykle mapowane na niestandardowych zadań.</span><span class="sxs-lookup"><span data-stu-id="45754-332">Soft keys are special keys that the application can usually map to custom tasks.</span></span> <span data-ttu-id="45754-333">Tekst opcji soft-key jest wyświetlany na ekranie w dolnym lewym i prawym dolnym rogu.</span><span class="sxs-lookup"><span data-stu-id="45754-333">Soft-key text is displayed on the screen in the lower-left and lower-right corners.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public string Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Platform" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Platform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Platform : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-334">Pobiera nazwę platformy, używanego przez klienta, jeśli jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-334">Gets the name of the platform that the client uses, if it is known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-335">System operacyjny używanego przez klienta, jeśli wiadomo, w przeciwnym razie wartość jest równa <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-335">The operating system that the client uses, if it is known, otherwise the value is set to <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-336">Niektóre z możliwych wartości dla <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> właściwości są następujące:</span><span class="sxs-lookup"><span data-stu-id="45754-336">Some of the possible values for the <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> property are as follows:</span></span>  
  
-   `Unknown`  
  
-   `Win95`  
  
-   `Win98`  
  
-   <span data-ttu-id="45754-337">`Windows NT 5.0` (Windows 2000)</span><span class="sxs-lookup"><span data-stu-id="45754-337">`Windows NT 5.0` (Windows 2000)</span></span>  
  
-   <span data-ttu-id="45754-338">`Windows NT 5.1` (Windows XP)</span><span class="sxs-lookup"><span data-stu-id="45754-338">`Windows NT 5.1` (Windows XP)</span></span>  
  
-   <span data-ttu-id="45754-339">`WinNT` (wszystkie inne wersje systemu Windows NT)</span><span class="sxs-lookup"><span data-stu-id="45754-339">`WinNT` (all other versions of Windows NT)</span></span>  
  
-   `Win16`  
  
-   `WinCE`  
  
-   `Mac68K`  
  
-   `MacPPC`  
  
-   `UNIX`  
  
-   `WebTV`  
  
   
  
## Examples  
 <span data-ttu-id="45754-340">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka działa na platformie Windows NT.</span><span class="sxs-lookup"><span data-stu-id="45754-340">The following code example shows how to determine whether the browser is running on the Windows NT platform.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Platform#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Platform#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImageMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredImageMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredImageMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredImageMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredImageMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredImageMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-341">Zwraca typ MIME tego typu zawartości obrazów, które zazwyczaj są preferowane przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-341">Returns the MIME type of the type of image content typically preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-342">Typ MIME tego typu zawartości obrazów, które zazwyczaj są preferowane przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-342">The MIME type of the type of image content typically preferred by the browser.</span>
          </span>
          <span data-ttu-id="45754-343">Wartość domyślna to <see langword="image/gif" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-343">The default is <see langword="image/gif" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-344">W poniższym przykładzie kodu pokazano, jak można ustalić typu obrazu, które zazwyczaj są preferowane przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="45754-344">The following code example shows how to determine the type of image typically preferred by a browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-345">Zwraca typ MIME Typ zawartości, które zazwyczaj są preferowane przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-345">Returns the MIME type of the type of content typically preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-346">Typ MIME Typ zawartości, które zazwyczaj są preferowane przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-346">The MIME type of the type of content typically preferred by the browser.</span>
          </span>
          <span data-ttu-id="45754-347">Wartość domyślna to <see langword="text/html" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-347">The default is <see langword="text/html" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-348">W poniższym przykładzie kodu pokazano, jak można ustalić typu MIME, zazwyczaj są preferowane przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="45754-348">The following code example shows how to determine the MIME type typically preferred by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingType">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-349">Pobiera nazwę ogólnego dla typu zawartości, preferuje przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-349">Gets the general name for the type of content that the browser prefers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-350">
            <see langword="html32" /> lub <see langword="chtml10" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-350">
              <see langword="html32" /> or <see langword="chtml10" />.</span>
          </span>
          <span data-ttu-id="45754-351">Wartość domyślna to <see langword="html32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-351">The default is <see langword="html32" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-352">W poniższym przykładzie kodu pokazano, jak można ustalić typu zawartości, która preferuje przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-352">The following code example shows how to determine the type of content that the browser prefers.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRequestEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredRequestEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRequestEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRequestEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRequestEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-353">Pobiera kodowanie żądania preferowane przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-353">Gets the request encoding preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-354">Żądanie kodowanie preferowane przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-354">The request encoding preferred by the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredResponseEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredResponseEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredResponseEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredResponseEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-355">Pobiera kodowanie odpowiedzi preferowane przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-355">Gets the response encoding preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-356">Odpowiedź kodowanie preferowane przez przeglądarkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-356">The response encoding preferred by the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreakBeforeWmlSelectAndInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreakBeforeWmlSelectAndInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreakBeforeWmlSelectAndInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreakBeforeWmlSelectAndInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-357">Pobiera wartość wskazującą, czy przeglądarka renderuje podział wiersza przed <see langword="&lt;select&gt;" /> lub <see langword="&lt;input&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-357">Gets a value indicating whether the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-358">
            <see langword="true" /> Jeśli przeglądarka renderuje podział wiersza przed <see langword="&lt;select&gt;" /> lub <see langword="&lt;input&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-358">
              <see langword="true" /> if the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-359">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-359">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-360"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-360">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="45754-361">Jeśli `true`, zawartości następujących `<select>` lub `<input>` elementy zostaną automatycznie umieszczone w nowym wierszu.</span><span class="sxs-lookup"><span data-stu-id="45754-361">If `true`, content following `<select>` or `<input>` elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-362">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje podział wiersza przed `<select>` lub `<input>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-362">The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterHtmlLists">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterHtmlLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterHtmlLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterHtmlLists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterHtmlLists : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-363">Pobiera wartość wskazującą, czy przeglądarka renderuje podział wiersza po liście elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-363">Gets a value indicating whether the browser renders a line break after list-item elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-364">
            <see langword="true" /> Jeśli przeglądarka renderuje podział wiersza po liście elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-364">
              <see langword="true" /> if the browser renders a line break after list-item elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-365">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-365">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-366">Jeśli `true`zawartości, po elementach elementu listy zostaną automatycznie umieszczone w nowym wierszu.</span><span class="sxs-lookup"><span data-stu-id="45754-366">If `true`, content following list-item elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-367">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje podział wiersza po liście elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-367">The following code example shows how to determine whether the browser renders a line break after list-item elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlAnchor">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlAnchor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlAnchor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-368">Pobiera wartość wskazującą, czy przeglądarka renderuje podział wiersza po autonomicznej HTML <see langword="&lt;a&gt;" /> elementu (zakotwiczenia).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-368">Gets a value indicating whether the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-369">
            <see langword="true" /> Jeśli przeglądarka renderuje podział wiersza po autonomicznej HTML <see langword="&lt;a&gt;" /> elementu (zakotwiczenia); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-369">
              <see langword="true" /> if the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-370">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-370">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-371"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-371">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="45754-372">Jeśli `true`zawartości, zgodnie z autonomicznego HTML `<a>` elementu (zakotwiczenia) zostaną automatycznie umieszczone w nowym wierszu.</span><span class="sxs-lookup"><span data-stu-id="45754-372">If `true`, content following a stand-alone HTML `<a>` (anchor) element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-373">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje podział wiersza po autonomicznej WML `<a>` elementu (zakotwiczenia).</span><span class="sxs-lookup"><span data-stu-id="45754-373">The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-374">Pobiera wartość wskazującą, czy przeglądarka renderuje podział wiersza po HTML <see langword="&lt;input&gt;" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-374">Gets a value indicating whether the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-375">
            <see langword="true" /> Jeśli przeglądarka renderuje podział wiersza po HTML <see langword="&lt;input&gt;" /> elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-375">
              <see langword="true" /> if the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-376">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-376">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-377"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-377">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="45754-378">Jeśli `true`zawartości, zgodnie z kodu HTML `<input>` element zostaną automatycznie umieszczone w nowym wierszu.</span><span class="sxs-lookup"><span data-stu-id="45754-378">If `true`, content following an HTML `<input>` element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-379">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje podział wiersza po HTML `<input>` elementu.</span><span class="sxs-lookup"><span data-stu-id="45754-379">The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlDoAcceptsInline">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlDoAcceptsInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlDoAcceptsInline" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlDoAcceptsInline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlDoAcceptsInline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlDoAcceptsInline : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-380">Pobiera wartość wskazującą, czy przeglądarki urządzenia przenośnego renderuje WML <see langword="do" />— na podstawie formularza zaakceptować konstrukcji jako przycisk wbudowane, a nie jako nietrwałe klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-380">Gets a value indicating whether the mobile-device browser renders a WML <see langword="do" />-based form accept construct as an inline button rather than as a soft key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-381">
            <see langword="true" /> Jeśli w przeglądarce urządzenia przenośnego renderuje WML <see langword="do" />— na podstawie formularza zaakceptować konstrukcji jako przycisk wbudowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-381">
              <see langword="true" /> if the mobile-device browser renders a WML <see langword="do" />-based form-accept construct as an inline button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-382">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-382">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-383"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-383">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-384">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje WML `do`— na podstawie formularza zaakceptować konstrukcji jako przycisk wbudowanego.</span><span class="sxs-lookup"><span data-stu-id="45754-384">The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlSelectsAsMenuCards">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlSelectsAsMenuCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlSelectsAsMenuCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlSelectsAsMenuCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlSelectsAsMenuCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-385">Pobiera wartość wskazującą, czy przeglądarka renderuje WML <see langword="&lt;select&gt;" /> elementów jako karty menu, a nie jako pola kombi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-385">Gets a value indicating whether the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards, rather than as a combo box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-386">
            <see langword="true" /> Jeśli przeglądarka renderuje WML <see langword="&lt;select&gt;" /> elementy jako karty menu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-386">
              <see langword="true" /> if the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-387">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-387">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-388"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="45754-388">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-389">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje WML `<select>` elementów jako karty menu.</span><span class="sxs-lookup"><span data-stu-id="45754-389">The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetaTagNameValue">
      <MemberSignature Language="C#" Value="public virtual string RequiredMetaTagNameValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredMetaTagNameValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetaTagNameValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredMetaTagNameValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredMetaTagNameValue : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-390">Używana wewnętrznie w celu wygenerowania metatag wymagane przez niektóre przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-390">Used internally to produce a meta-tag required by some browsers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-391">Metatag wymagane przez niektóre przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-391">A meta-tag required by some browsers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-392">Przeznaczona wyłącznie do użytku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="45754-392">Intended for internal use only.</span></span> <span data-ttu-id="45754-393">Niektóre przeglądarki wymagają tag meta podobny do następującego przeglądarki poprawnie renderowane.</span><span class="sxs-lookup"><span data-stu-id="45754-393">Some browsers require a meta-tag similar to the following for the browser to render properly.</span></span>  
  
```  
<META NAME="NAME" CONTENT="VALUE">  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresAttributeColonSubstitution">
      <MemberSignature Language="C#" Value="public virtual bool RequiresAttributeColonSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAttributeColonSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresAttributeColonSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresAttributeColonSubstitution { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresAttributeColonSubstitution : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-394">Pobiera wartość wskazującą, czy przeglądarki wymaga w dwukropki w wartości atrybutów elementu do zastąpienia innego znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-394">Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-395">
            <see langword="true" /> Jeśli przeglądarka wymaga w dwukropki w wartości atrybutów elementu do zastąpienia innego znaku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-395">
              <see langword="true" /> if the browser requires colons in element attribute values to be substituted with a different character; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-396">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-396">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-397">Niektóre przeglądarki nie rozpoznają dwukropki w wartości atrybutów elementu.</span><span class="sxs-lookup"><span data-stu-id="45754-397">Some browsers do not recognize colons in element attribute values.</span></span> <span data-ttu-id="45754-398">Jeśli `true`, inny znak zostanie zamieniony na temat renderowania i zwracany w danych zwrotu.</span><span class="sxs-lookup"><span data-stu-id="45754-398">If `true`, a different character will be substituted on rendering and returned in postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-399">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarce wymaga w dwukropki w wartości atrybutów elementu do zastąpienia inny znak.</span><span class="sxs-lookup"><span data-stu-id="45754-399">The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresContentTypeMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresContentTypeMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresContentTypeMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresContentTypeMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresContentTypeMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresContentTypeMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-400">Pobiera wartość wskazującą, czy przeglądarka wymaga kodu HTML <see langword="&lt;meta&gt;" /> elementu, dla którego <see langword="content-type" /> atrybut jest określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-400">Gets a value indicating whether the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-401">
            <see langword="true" /> Jeśli przeglądarka wymaga kodu HTML <see langword="&lt;meta&gt;" /> elementu, dla którego <see langword="content-type" /> atrybut jest określona; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-401">
              <see langword="true" /> if the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-402">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-402">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-403">Jeśli `true`, formant serwera karty Wstawianie następującego tagu HTML `<head>` elementu strony sieci Web:</span><span class="sxs-lookup"><span data-stu-id="45754-403">If `true`, server-control adapters insert the following tag into the HTML `<head>` element of a Web page:</span></span>  
  
```  
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT=""; CHARSET="">  
```  
  
 <span data-ttu-id="45754-404">W tym przykładzie `CONTENT` jest wartość zwrócona przez obiekt <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> właściwości i `charset` używane kodowanie znaków jest.</span><span class="sxs-lookup"><span data-stu-id="45754-404">In this example, `CONTENT` is the value returned by the <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> property, and `charset` is the character encoding used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-405">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga kodu HTML `<meta>` elementu, dla którego `content-type` atrybut jest określony.</span><span class="sxs-lookup"><span data-stu-id="45754-405">The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresControlStateInSession">
      <MemberSignature Language="C#" Value="public bool RequiresControlStateInSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresControlStateInSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresControlStateInSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresControlStateInSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresControlStateInSession : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-406">Pobiera wartość wskazującą, czy przeglądarka wymaga stan formantu w sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-406">Gets a value indicating whether the browser requires control state to be maintained in sessions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-407">
            <see langword="true" /> Jeśli przeglądarka wymaga stan formantu w sesji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-407">
              <see langword="true" /> if the browser requires control state to be maintained in sessions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-408">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-408">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-409">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga stan formantu w sesji.</span><span class="sxs-lookup"><span data-stu-id="45754-409">The following code example shows how to determine whether the browser requires control state to be maintained in sessions.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/CS/browsercaps.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/VB/browsercaps_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDBCSCharacter">
      <MemberSignature Language="C#" Value="public virtual bool RequiresDBCSCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDBCSCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresDBCSCharacter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresDBCSCharacter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDBCSCharacter : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-410">Pobiera wartość wskazującą, czy przeglądarka wymaga zestawu znaków dwubajtowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-410">Gets a value indicating whether the browser requires a double-byte character set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-411">
            <see langword="true" /> Jeśli przeglądarka wymaga zestawu znaków dwubajtowych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-411">
              <see langword="true" /> if the browser requires a double-byte character set; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-412">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-412">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-413">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga zestawu znaków dwubajtowych.</span><span class="sxs-lookup"><span data-stu-id="45754-413">The following code example shows how to determine whether the browser requires a double-byte character set.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresHtmlAdaptiveErrorReporting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresHtmlAdaptiveErrorReporting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresHtmlAdaptiveErrorReporting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresHtmlAdaptiveErrorReporting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-414">Pobiera wartość wskazującą, czy przeglądarka wymaga komunikaty o błędach niestandardowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-414">Gets a value indicating whether the browser requires nonstandard error messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-415">
            <see langword="true" /> Jeśli przeglądarka wymaga komunikaty o błędach niestandardowymi; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-415">
              <see langword="true" /> if the browser requires nonstandard error messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-416">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-416">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-417">Jeśli `true`, przeglądarka nie jest poprawnie renderowana komunikatów o błędach HTTP.</span><span class="sxs-lookup"><span data-stu-id="45754-417">If `true`, the browser does not properly render HTTP error messages.</span></span> <span data-ttu-id="45754-418">Aby rozwiązać ten problem, adapterów kontrolek serwera wygenerować niestandardowej strony błędu dla przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-418">To correct this, server control adapters generate a custom error page for the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-419">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga komunikaty o błędach niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="45754-419">The following code example shows how to determine whether the browser requires nonstandard error messages.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresLeadingPageBreak">
      <MemberSignature Language="C#" Value="public virtual bool RequiresLeadingPageBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresLeadingPageBreak" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresLeadingPageBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresLeadingPageBreak { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresLeadingPageBreak : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-420">Pobiera wartość wskazującą, czy przeglądarka wymaga pierwszego elementu w treści strony sieci Web jako kodu HTML <see langword="&lt;br&gt;" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-420">Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML <see langword="&lt;br&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-421">
            <see langword="true" /> Jeśli przeglądarka wymaga pierwszego elementu w treści strony sieci Web jako kodu HTML <see langword="BR" /> elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-421">
              <see langword="true" /> if the browser requires the first element in the body of a Web page to be an HTML <see langword="BR" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-422">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-422">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-423">Jeśli `true`, formant serwera karty Wstaw dodatkowego `<br>` bezpośrednio po elemencie `<body>` tagu na stronie sieci Web.</span><span class="sxs-lookup"><span data-stu-id="45754-423">If `true`, server-control adapters insert an additional `<br>` element immediately following the `<body>` tag in a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-424">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga pierwszego elementu w treści strony sieci Web jako kodu HTML `<br>` elementu.</span><span class="sxs-lookup"><span data-stu-id="45754-424">The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresNoBreakInFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresNoBreakInFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresNoBreakInFormatting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresNoBreakInFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresNoBreakInFormatting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresNoBreakInFormatting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-425">Pobiera wartość wskazującą, czy przeglądarka nie obsługuje HTML <see langword="&lt;br&gt;" /> elementy formatowania podziały wierszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-425">Gets a value indicating whether the browser does not support HTML <see langword="&lt;br&gt;" /> elements to format line breaks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-426">
            <see langword="true" /> Jeśli przeglądarka nie obsługuje HTML <see langword="&lt;br&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-426">
              <see langword="true" /> if the browser does not support HTML <see langword="&lt;br&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-427">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-427">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-428">Jeśli `true`, przeglądarka nie będą poprawnie renderowane strony zawierające kod HTML `<br>` elementu.</span><span class="sxs-lookup"><span data-stu-id="45754-428">If `true`, the browser will not correctly render pages containing the HTML `<br>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-429">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka nie obsługuje HTML `<br>` elementy formatowania podziały wierszy.</span><span class="sxs-lookup"><span data-stu-id="45754-429">The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresOutputOptimization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresOutputOptimization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOutputOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresOutputOptimization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresOutputOptimization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresOutputOptimization : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-430">Pobiera wartość wskazującą, czy przeglądarka wymaga stron, które mają zawierają zoptymalizowane pod kątem rozmiaru postaci tagów języka znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-430">Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-431">
            <see langword="true" /> Jeśli przeglądarka wymaga stron, które mają zawierać formularz zoptymalizowane pod kątem rozmiaru znaczników języka znaczników; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-431">
              <see langword="true" /> if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-432">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-432">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-433">Jeśli `true`, adapterów kontrolek serwera Generowanie minimalne dane wyjściowe, aby zmniejszyć rozmiar wynikowy strony.</span><span class="sxs-lookup"><span data-stu-id="45754-433">If `true`, server control adapters generate minimal output to reduce the size of the resulting page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45754-434"><xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> Właściwość zwraca `true` dla trybu — zgodnej i przeglądarek.</span><span class="sxs-lookup"><span data-stu-id="45754-434">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> property returns `true` for i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-435">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga stron, które mają zawierają zoptymalizowane pod kątem rozmiaru postaci tagów języka znaczników.</span><span class="sxs-lookup"><span data-stu-id="45754-435">The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPhoneNumbersAsPlainText">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPhoneNumbersAsPlainText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPhoneNumbersAsPlainText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPhoneNumbersAsPlainText { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresPhoneNumbersAsPlainText : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-436">Pobiera wartość wskazującą, czy przeglądarka obsługuje wybierania numeru na podstawie tekstu zwykłego lub tego, czy wymaga specjalnych znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-436">Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-437">
            <see langword="true" /> Jeśli przeglądarka obsługuje wybierania numeru na podstawie zwykłego tekstu. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-437">
              <see langword="true" /> if the browser supports phone dialing based on plain text only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-438">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-438">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-439"><xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> Właściwość ma zastosowanie tylko do przeglądarek dla którego <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="45754-439">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> property applies only to browsers for which the <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-440">Poniższy kod przedstawia przykład, w jaki sposób można określić, czy przeglądarka obsługuje wybierania numeru na podstawie zwykłego tekstu, czy wymaga specjalnych znaczników.</span><span class="sxs-lookup"><span data-stu-id="45754-440">The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSpecialViewStateEncoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSpecialViewStateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresSpecialViewStateEncoding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresSpecialViewStateEncoding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresSpecialViewStateEncoding : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-441">Pobiera wartość wskazującą, czy wymaga przeglądarki <see langword="VIEWSTATE" /> wartości do zakodowania specjalnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-441">Gets a value indicating whether the browser requires <see langword="VIEWSTATE" /> values to be specially encoded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-442">
            <see langword="true" /> Jeśli przeglądarka wymaga <see langword="VIEWSTATE" /> wartości specjalnie zakodowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-442">
              <see langword="true" /> if the browser requires <see langword="VIEWSTATE" /> values to be specially encoded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-443">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-443">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-444">Protokół HTTP jest protokołem bezstanowym i `VIEWSTATE` jest jeden mechanizm użytą do utrwalenia zmian klienta dla wielu żądań.</span><span class="sxs-lookup"><span data-stu-id="45754-444">HTTP is a stateless protocol, and `VIEWSTATE` is one mechanism used to persist client changes across multiple requests.</span></span> <span data-ttu-id="45754-445">Każdy formant na stronie sieci Web zawiera <xref:System.Web.UI.Control.ViewState%2A> właściwość, która reprezentuje akumulacja wszelkie zmiany wprowadzone przez klienta.</span><span class="sxs-lookup"><span data-stu-id="45754-445">Each control on a Web page contains a <xref:System.Web.UI.Control.ViewState%2A> property, which represents the accumulation of any changes made by the client.</span></span> <span data-ttu-id="45754-446">Na stronie sieci Web Forms, te zmiany są zakodowane w danych zwrotu jako `value` HTML `<input>` element z `type` atrybutu `hidden`.</span><span class="sxs-lookup"><span data-stu-id="45754-446">In a Web Forms page, these changes are encoded in postback data as the `value` of an HTML `<input>` element with a `type` attribute of `hidden`.</span></span> <span data-ttu-id="45754-447">Na przykład:</span><span class="sxs-lookup"><span data-stu-id="45754-447">For example:</span></span>  
  
```  
<input type="hidden" name="__VIEWSTATE" value="t0PH_u56?cDxleHQ7P=" />  
```  
  
 Jeśli `true`, inne niż alfanumeryczne znaki w `VIEWSTATE` wartości nie zostaną wysłane poprawnie przez przeglądarkę, ani przez bramy pośredniej. <span data-ttu-id="45754-449">Aby rozwiązać ten problem, formant serwera kart Zastąp znaki inne niż alfanumeryczne w `VIEWSTATE` wartość z tymi, które nie wymagają kodowania w żądaniach HTTP.</span><span class="sxs-lookup"><span data-stu-id="45754-449">To correct this, server-control adapters replace non-alphabetic characters in the `VIEWSTATE` value with ones that do not require encoding in HTTP requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-450">Poniższy przykład kodu pokazuje, jak ustalić, czy wymaga przeglądarki `VIEWSTATE` wartości do zakodowania specjalnie.</span><span class="sxs-lookup"><span data-stu-id="45754-450">The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueFilePathSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueFilePathSuffix { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueFilePathSuffix : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-451">Pobiera wartość wskazującą, czy przeglądarka wymaga akcji formularza unikatowe adresy URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-451">Gets a value indicating whether the browser requires unique form-action URLs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-452">
            <see langword="true" /> Jeśli przeglądarka wymaga akcji formularza unikatowe adresy URL; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-452">
              <see langword="true" /> if the browser requires unique form-action URLs; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-453">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-453">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-454">Samodzielnie odwołania HTML `<form>` jest element, na które `action` atrybut określa swój własny adres URL.</span><span class="sxs-lookup"><span data-stu-id="45754-454">A self-referring HTML `<form>` element is one for which the `action` attribute specifies its own URL.</span></span> <span data-ttu-id="45754-455">Jeśli `true`, formularze własnym odwołujący się nie zwracać poprawnych wyników.</span><span class="sxs-lookup"><span data-stu-id="45754-455">If `true`, self-referring forms do not return the correct results.</span></span> <span data-ttu-id="45754-456">Jest to spowodowane w pamięci podręcznej przez przeglądarki lub bramy pośredniej.</span><span class="sxs-lookup"><span data-stu-id="45754-456">This is due to caching by either the browser or an intermediate gateway.</span></span> <span data-ttu-id="45754-457">Aby rozwiązać ten problem, adapterów kontrolek serwera należy dołączyć domyślny ciąg zapytania (`__ufps=``uniquefilepathsuffix`) na wartości adresu URL akcji formularza własnym odwołań formularzy.</span><span class="sxs-lookup"><span data-stu-id="45754-457">To correct this, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto the form-action URL values of self-referring forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-458">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga akcji formularza unikatowe adresy URL.</span><span class="sxs-lookup"><span data-stu-id="45754-458">The following code example shows how to determine whether the browser requires unique form-action URLs.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlCheckboxNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlCheckboxNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlCheckboxNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlCheckboxNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlCheckboxNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-459">Pobiera wartość wskazującą, czy przeglądarka wymaga unikatowych <see langword="name" /> wartości HTML wiele atrybutów <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-459">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-460">
            <see langword="true" /> Jeśli przeglądarka wymaga unikatowych <see langword="name" /> wartości HTML wiele atrybutów <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-460">
              <see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-461">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-461">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-462">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga unikatowych `NAME` wartości HTML wiele atrybutów `<input type="checkbox">` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-462">The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type="checkbox">` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlInputNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlInputNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlInputNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlInputNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlInputNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-463">Pobiera wartość wskazującą, czy przeglądarka wymaga unikatowych <see langword="name" /> wartości HTML wiele atrybutów <see langword="&lt;input&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-463">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-464">
            <see langword="true" /> Jeśli przeglądarka wymaga unikatowych <see langword="name" /> wartości HTML wiele atrybutów <see langword="&lt;input&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-464">
              <see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-465">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-465">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-466">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga unikatowych `name` wartości HTML wiele atrybutów `<input>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-466">The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUrlEncodedPostfieldValues">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUrlEncodedPostfieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUrlEncodedPostfieldValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUrlEncodedPostfieldValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUrlEncodedPostfieldValues : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-467">Pobiera wartość wskazującą, czy będzie zwrotu dane wysyłane przez przeglądarkę <see langword="UrlEncoded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-467">Gets a value indicating whether postback data sent by the browser will be <see langword="UrlEncoded" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-468">
            <see langword="true" /> Jeśli będzie zwrotu dane wysyłane przez przeglądarkę <see langword="UrlEncoded" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-468">
              <see langword="true" /> if postback data sent by the browser will be <see langword="UrlEncoded" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-469">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-469">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-470">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka `UrlEncodes` ogłaszanie zwrotne danych.</span><span class="sxs-lookup"><span data-stu-id="45754-470">The following code example shows how to determine whether the browser `UrlEncodes` postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenBitDepth">
      <MemberSignature Language="C#" Value="public virtual int ScreenBitDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenBitDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenBitDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenBitDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenBitDepth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-471">Zwraca głębokość wyświetlacza, liczba bitów na piksel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-471">Returns the depth of the display, in bits per pixel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-472">Głębokość zostanie wyświetlony w bitów na piksel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-472">The depth of the display, in bits per pixel.</span>
          </span>
          <span data-ttu-id="45754-473">Wartość domyślna to <see langword="1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-473">The default is <see langword="1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-474">Zwraca przybliżony wysokość zostanie wyświetlony w wierszach znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-474">Returns the approximate height of the display, in character lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-475">Przybliżony wysokość zostanie wyświetlony w wierszach znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-475">The approximate height of the display, in character lines.</span>
          </span>
          <span data-ttu-id="45754-476">Wartość domyślna to <see langword="6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-476">The default is <see langword="6" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-477">Zwrócona wartość mogą pochodzić z zakładanego znak rozmiar i rozmiar w pikselach rzeczywistego ekranu.</span><span class="sxs-lookup"><span data-stu-id="45754-477">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="45754-478">Algorytm wyznaczania wysokości używa kombinacji domyślne rozmiary czcionek (z pliku .config), przeglądarka rozmiarów (ponownie z pliku .config) i jawne nagłówki wysyłane przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="45754-478">The algorithm for determining the height uses a combination of the default font sizes (from a .config file), browser-specific sizes (again, from a .config file), and explicit headers sent by the browser.</span></span> <span data-ttu-id="45754-479">Niektóre przeglądarki mogą polegać na wartości wewnętrznego ustawienia domyślnego, które tylko określenie w przybliżeniu rzeczywiste wysokość.</span><span class="sxs-lookup"><span data-stu-id="45754-479">Some browsers might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-480">Zwraca szerokość przybliżony zostanie wyświetlony w znakach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-480">Returns the approximate width of the display, in characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-481">Przybliżony szerokość zostanie wyświetlony w znakach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-481">The approximate width of the display, in characters.</span>
          </span>
          <span data-ttu-id="45754-482">Wartość domyślna to <see langword="12" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-482">The default is <see langword="12" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-483">Zwrócona wartość mogą pochodzić z zakładanego znak rozmiar i rozmiar w pikselach rzeczywistego ekranu.</span><span class="sxs-lookup"><span data-stu-id="45754-483">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="45754-484">Algorytm określania szerokości używa kombinacji domyślne rozmiary czcionek (z pliku .config), rozmiary specyficznych dla urządzenia (ponownie z pliku .config) i jawne nagłówki wysyłane przez urządzenia.</span><span class="sxs-lookup"><span data-stu-id="45754-484">The algorithm for determining the width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="45754-485">Te wartości nie są zawsze dokładnie (szczególnie w przypadku zmiennej szerokości czcionki, te wartości są przybliżone).</span><span class="sxs-lookup"><span data-stu-id="45754-485">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="45754-486">Niektóre urządzenia mogą polegać na wartości wewnętrznego ustawienia domyślnego, które tylko określenie w przybliżeniu rzeczywista szerokość.</span><span class="sxs-lookup"><span data-stu-id="45754-486">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-487">Zwraca wysokość przybliżony ekranu, w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-487">Returns the approximate height of the display, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-488">Przybliżony wysokość ekranu, w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-488">The approximate height of the display, in pixels.</span>
          </span>
          <span data-ttu-id="45754-489">Wartość domyślna to <see langword="72" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-489">The default is <see langword="72" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-490">Zwrócona wartość mogą pochodzić z zakładanego znak rozmiar i wielkość czcionki.</span><span class="sxs-lookup"><span data-stu-id="45754-490">The returned value can be derived from the assumed character size and character height.</span></span> <span data-ttu-id="45754-491">Algorytm wyznaczania pikseli wysokości używa kombinacji domyślne rozmiary czcionek (z pliku .config), rozmiary specyficznych dla urządzenia (ponownie z pliku .config) i jawne nagłówki wysyłane przez urządzenia.</span><span class="sxs-lookup"><span data-stu-id="45754-491">The algorithm for determining the pixel height uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="45754-492">Te wartości nie są zawsze dokładnie.</span><span class="sxs-lookup"><span data-stu-id="45754-492">These values are not necessarily exact.</span></span> <span data-ttu-id="45754-493">Niektóre urządzenia mogą polegać na wartości wewnętrznego ustawienia domyślnego, które tylko określenie w przybliżeniu rzeczywiste wysokość.</span><span class="sxs-lookup"><span data-stu-id="45754-493">Some devices might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-494">Zwraca szerokość przybliżony wyświetlania, w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-494">Returns the approximate width of the display, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-495">Przybliżony szerokość ekranu, w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-495">The approximate width of the display, in pixels.</span>
          </span>
          <span data-ttu-id="45754-496">Wartość domyślna to <see langword="96" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-496">The default is <see langword="96" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-497">Zwrócona wartość mogą pochodzić z zakładanego znak rozmiar i szerokości znaków.</span><span class="sxs-lookup"><span data-stu-id="45754-497">The returned value can be derived from the assumed character size and character width.</span></span> <span data-ttu-id="45754-498">Algorytm określania szerokość piksela jest kombinacją domyślne rozmiary czcionek (z pliku .config), rozmiary specyficznych dla urządzenia (ponownie z pliku .config) i jawne nagłówki wysyłane przez urządzenia.</span><span class="sxs-lookup"><span data-stu-id="45754-498">The algorithm for determining the pixel width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="45754-499">Te wartości nie są zawsze dokładnie (szczególnie w przypadku zmiennej szerokości czcionki, te wartości są przybliżone).</span><span class="sxs-lookup"><span data-stu-id="45754-499">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="45754-500">Niektóre urządzenia mogą polegać na wartości wewnętrznego ustawienia domyślnego, które tylko określenie w przybliżeniu rzeczywista szerokość.</span><span class="sxs-lookup"><span data-stu-id="45754-500">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAccesskeyAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAccesskeyAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAccesskeyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAccesskeyAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAccesskeyAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAccesskeyAttribute : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-501">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="ACCESSKEY" /> atrybutu HTML <see langword="&lt;a&gt;" /> (zakotwiczenia) i <see langword="&lt;input&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-501">Gets a value indicating whether the browser supports the <see langword="ACCESSKEY" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-502">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="accesskey" /> atrybutu HTML <see langword="&lt;a&gt;" /> (zakotwiczenia) i <see langword="&lt;input&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-502">
              <see langword="true" /> if the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-503">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-503">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-504">`accesskey` Atrybut rozszerza formant formularzy i łącza na stronie sieci Web dla platform mobilnych i jest dostępny, przypisując nietrwałego klucz lub inny kontroler na urządzeniu, aby wchodzić w interakcje z kodem HTML `<a>` (zakotwiczenia) i `<input>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-504">The `accesskey` attribute extends control of forms and links on a Web page to mobile and accessible platforms by assigning a soft key or other controller on the device to interact with HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-505">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `accesskey` atrybutu HTML `<a>` (zakotwiczenia) i `<input>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-505">The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBodyColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBodyColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBodyColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBodyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBodyColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBodyColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-506">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="bgcolor" /> atrybutu HTML <see langword="&lt;body&gt;" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-506">Gets a value indicating whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-507">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="bgcolor" /> atrybutu HTML <see langword="&lt;body&gt;" /> elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-507">
              <see langword="true" /> if the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-508">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-508">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-509">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `bgcolor` atrybutu HTML `<body>` elementu.</span><span class="sxs-lookup"><span data-stu-id="45754-509">The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-510">Pobiera wartość wskazującą, czy przeglądarka obsługuje HTML <see langword="&lt;b&gt;" /> elementy do formatowania tekstu pogrubienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-510">Gets a value indicating whether the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-511">
            <see langword="true" /> Jeśli przeglądarka obsługuje HTML <see langword="&lt;b&gt;" /> elementy do formatowania tekstu pogrubienie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-511">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-512">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-512">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-513">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje HTML `<b>` elementy do formatowania tekstu pogrubienie.</span><span class="sxs-lookup"><span data-stu-id="45754-513">The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCacheControlMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCacheControlMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCacheControlMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCacheControlMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCacheControlMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCacheControlMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-514">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="cache-control" /> wartość <see langword="http-equiv" /> atrybutu HTML <see langword="&lt;meta&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-514">Gets a value indicating whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-515">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="cache-control" /> wartość <see langword="http-equiv" /> atrybutu HTML <see langword="&lt;meta&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-515">
              <see langword="true" /> if the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-516">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-516">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-517">`cache-control` Wartość `http-equiv` atrybutu HTML `<meta>` elementy zapewnia kontrolę nad klienta buforowania pobranej zawartości, która zawiera strony sieci Web.</span><span class="sxs-lookup"><span data-stu-id="45754-517">The `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements allows control over client caching of downloaded content, which includes Web pages.</span></span> <span data-ttu-id="45754-518">Poniższy fragment kodu HTML przedstawiono przykład:</span><span class="sxs-lookup"><span data-stu-id="45754-518">The following HTML fragment shows an example:</span></span>  
  
```  
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"/>  
```  
  
 <span data-ttu-id="45754-519">Jeśli `true`, włączenie tego tagu w `<head>` elementu strony sieci Web ma wymusić przeglądarkę, aby ponownie załadować zawartość z serwera.</span><span class="sxs-lookup"><span data-stu-id="45754-519">If `true`, the inclusion of this tag in the `<head>` element of a Web page should force the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="45754-520">Jeśli `false`, adapterów kontrolek serwera Dołącz ciąg zapytania domyślne (`__ufps=``uniquefilepathsuffix`) na wartości adresu URL łącza, które jeszcze nie ma.</span><span class="sxs-lookup"><span data-stu-id="45754-520">If `false`, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto link URL values that do not already have one.</span></span> <span data-ttu-id="45754-521">Wymusza przeglądarkę, aby ponownie załadować zawartość z serwera.</span><span class="sxs-lookup"><span data-stu-id="45754-521">This forces the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="45754-522"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> Właściwość ma zastosowanie także do formularza nagłówka HTTP:</span><span class="sxs-lookup"><span data-stu-id="45754-522">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> property also applies to the equivalent HTTP header form:</span></span>  
  
```  
CACHE-CONTROL: NO-CACHE  
```  
  
   
  
## Examples  
 <span data-ttu-id="45754-523">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `cache-control` wartość `http-equiv` atrybutu HTML `<meta>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-523">The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCallback">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCallback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCallback : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-524">Pobiera wartość wskazującą, czy przeglądarka obsługuje skrypty wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-524">Gets a value indicating whether the browser supports callback scripts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-525">
            <see langword="true" /> Jeśli przeglądarka obsługuje skrypty wywołania zwrotnego w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-525">
              <see langword="true" /> if the browser supports callback scripts; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-526">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-526">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-527">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje skrypty wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="45754-527">The following code example shows how to determine whether the browser supports callback scripts.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCss">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCss" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCss As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCss { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCss : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-528">Pobiera wartość wskazującą, czy przeglądarka obsługuje kaskadowych arkuszy stylów (CSS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-528">Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-529">
            <see langword="true" /> Jeśli przeglądarka obsługuje CSS; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-529">
              <see langword="true" /> if the browser supports CSS; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-530">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-530">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-531">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje CSS.</span><span class="sxs-lookup"><span data-stu-id="45754-531">The following code example shows how to determine whether the browser supports CSS.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivAlign">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivAlign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivAlign { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivAlign : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-532">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="align" /> atrybutu HTML <see langword="&lt;div&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-532">Gets a value indicating whether the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-533">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="align" /> atrybutu HTML <see langword="&lt;div&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-533">
              <see langword="true" /> if the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-534">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-534">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-535">HTML `<div>` elementy są używane do grupowania wielu elementów kodu HTML, tak aby style CSS, można zastosować do nich jako całości.</span><span class="sxs-lookup"><span data-stu-id="45754-535">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="45754-536">`align` Atrybut Ustawia wyrównanie w poziomie `<div>` grupy na stronie sieci Web.</span><span class="sxs-lookup"><span data-stu-id="45754-536">The `align` attribute sets the horizontal alignment of a `<div>` group on a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-537">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `align` atrybutu HTML `<div>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-537">The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivNoWrap">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivNoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivNoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivNoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivNoWrap { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivNoWrap : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-538">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="nowrap" /> atrybutu HTML <see langword="&lt;div&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-538">Gets a value indicating whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-539">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="nowrap" /> atrybutu HTML <see langword="&lt;div&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-539">
              <see langword="true" /> if the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-540">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-540">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-541">HTML `<div>` elementy są używane do grupowania wielu elementów kodu HTML, tak aby style CSS, można zastosować do nich jako całości.</span><span class="sxs-lookup"><span data-stu-id="45754-541">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="45754-542">`nowrap` Atrybut określa, czy elementy zawarte w `<div>` grupy powinna pozostać sąsiadujących ze sobą bez zawijania do nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="45754-542">The `nowrap` attribute specifies that the elements contained in the `<div>` group should remain adjacent to each other without wrapping to a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-543">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `nowrap` atrybutu HTML `<div>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-543">The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEmptyStringInCookieValue">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEmptyStringInCookieValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEmptyStringInCookieValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEmptyStringInCookieValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEmptyStringInCookieValue : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-544">Pobiera wartość wskazującą, czy przeglądarka obsługuje pusta (<see langword="null" />) ciągów znaków w wartości pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-544">Gets a value indicating whether the browser supports empty (<see langword="null" />) strings in cookie values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-545">
            <see langword="true" /> Jeśli przeglądarka obsługuje pusta (<see langword="null" />) ciągów znaków w wartości pliku cookie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-545">
              <see langword="true" /> if the browser supports empty (<see langword="null" />) strings in cookie values; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-546">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-546">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-547">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje pusty (`null`) ciągów znaków w wartości pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="45754-547">The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-548">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="color" /> atrybutu HTML <see langword="&lt;font&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-548">Gets a value indicating whether the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-549">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="color" /> atrybutu HTML <see langword="&lt;font&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-549">
              <see langword="true" /> if the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-550">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-550">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-551">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `color` atrybutu HTML `<font>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-551">The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontName">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontName : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-552">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="name" /> atrybutu HTML <see langword="&lt;font&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-552">Gets a value indicating whether the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-553">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="name" /> atrybutu HTML <see langword="&lt;font&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-553">
              <see langword="true" /> if the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-554">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-554">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-555">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `name` atrybutu HTML `<font>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-555">The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontSize">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontSize : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-556">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="size" /> atrybutu HTML <see langword="&lt;font&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-556">Gets a value indicating whether the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-557">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="size" /> atrybutu HTML <see langword="&lt;font&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-557">
              <see langword="true" /> if the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-558">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-558">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-559">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `size` atrybutu HTML `<font>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-559">The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsImageSubmit">
      <MemberSignature Language="C#" Value="public virtual bool SupportsImageSubmit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsImageSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsImageSubmit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsImageSubmit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsImageSubmit : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-560">Pobiera wartość wskazującą, czy przeglądarka obsługuje przy użyciu niestandardowego obrazu zamiast standardowego formularza przycisk Prześlij.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-560">Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-561">
            <see langword="true" /> Jeśli przeglądarka obsługuje przy użyciu niestandardowego obrazu zamiast przycisku przesyłania formularza standardowego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-561">
              <see langword="true" /> if the browser supports using a custom image in place of a standard form Submit button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-562">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-562">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-563">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje przy użyciu niestandardowego obrazu zamiast standardowego formularza przycisk Prześlij.</span><span class="sxs-lookup"><span data-stu-id="45754-563">The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsIModeSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsIModeSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIModeSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsIModeSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsIModeSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIModeSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-564">Pobiera wartość wskazującą, czy przeglądarka obsługuje tryb i symbole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-564">Gets a value indicating whether the browser supports i-mode symbols.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-565">
            <see langword="true" /> Jeśli przeglądarka obsługuje tryb i symbole; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-565">
              <see langword="true" /> if the browser supports i-mode symbols; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-566">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-566">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-567"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> Właściwość ma zastosowanie tylko do i tryb — urządzeń zgodnych z.</span><span class="sxs-lookup"><span data-stu-id="45754-567">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="45754-568">Ustawić obraz i telefonu — specyficzne dla symboli dla przeglądarek, tryb — zgodnej i za pomocą <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="45754-568">Set i-Phone–specific picture symbols for i-mode–compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-569">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje tryb i symbole.</span><span class="sxs-lookup"><span data-stu-id="45754-569">The following code example shows how to determine whether the browser supports i-mode symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputIStyle">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputIStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputIStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputIStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputIStyle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputIStyle : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-570">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="istyle" /> atrybutu HTML <see langword="&lt;input&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-570">Gets a value indicating whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-571">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="istyle" /> atrybutu HTML <see langword="&lt;input&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-571">
              <see langword="true" /> if the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-572">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-572">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-573"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> Właściwość ma zastosowanie tylko do i tryb — urządzeń zgodnych z.</span><span class="sxs-lookup"><span data-stu-id="45754-573">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="45754-574">`istyle` Atrybutu jest używana do ustawiania wejściowych styl pole wprowadzania tekstu w trybie — zgodnej i przeglądarek.</span><span class="sxs-lookup"><span data-stu-id="45754-574">The `istyle` attribute is used for setting the input style of a text-input field on i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-575">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `istyle` atrybutu HTML `<input>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-575">The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputMode : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-576">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="mode" /> atrybutu HTML <see langword="&lt;input&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-576">Gets a value indicating whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-577">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="mode" /> atrybutu HTML <see langword="&lt;input&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-577">
              <see langword="true" /> if the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-578">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-578">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-579"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> Właściwość ma zastosowanie tylko do i tryb — urządzeń zgodnych z.</span><span class="sxs-lookup"><span data-stu-id="45754-579">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="45754-580">`MODE` Atrybut jest używany do ustawiania tryb wprowadzania danych wejściowych pola tekstowego w trybie — zgodnej i przeglądarek.</span><span class="sxs-lookup"><span data-stu-id="45754-580">The `MODE` attribute is used for setting the input mode of a text input field on i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-581">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `mode` atrybutu HTML `<input>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-581">The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public virtual bool SupportsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsItalic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-582">Pobiera wartość wskazującą, czy przeglądarka obsługuje HTML <see langword="&lt;i&gt;" /> elementy, aby sformatować tekst kursywą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-582">Gets a value indicating whether the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-583">
            <see langword="true" /> Jeśli przeglądarka obsługuje HTML <see langword="&lt;i&gt;" /> elementy do formatowania tekstu italic; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-583">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-584">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-584">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-585">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje HTML `<i>` elementy, aby sformatować tekst kursywą.</span><span class="sxs-lookup"><span data-stu-id="45754-585">The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneMultiMediaAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneMultiMediaAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneMultiMediaAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneMultiMediaAttributes : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-586">Pobiera wartość wskazującą, czy przeglądarka obsługuje multimedialnych atrybuty "j" przez telefon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-586">Gets a value indicating whether the browser supports J-Phone multimedia attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-587">
            <see langword="true" /> Jeśli przeglądarka obsługuje atrybuty multimedialnych telefonu "j"; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-587">
              <see langword="true" /> if the browser supports J-Phone multimedia attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-588">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-588">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-589"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych "j"-Phone zgodnych z platformą.</span><span class="sxs-lookup"><span data-stu-id="45754-589">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> property applies only to J-Phone–compatible mobile devices.</span></span>  
  
 <span data-ttu-id="45754-590">"J" przez telefon jest specyfikacji języka znaczników, oparte na języku HTML, dla przeglądarek telefonu — zgodnego "j".</span><span class="sxs-lookup"><span data-stu-id="45754-590">J-Phone is a markup language specification, based on HTML, for J-Phone–compatible browsers.</span></span> <span data-ttu-id="45754-591">Jeśli `true`, przeglądarka obsługuje dodatkowe atrybuty HTML `<a>` (zakotwiczenia) i `<select>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-591">If `true`, the browser supports additional attributes for HTML `<a>` (anchor) and `<select>` elements.</span></span> <span data-ttu-id="45754-592">Dodatkowe atrybuty obsługiwane są następujące:</span><span class="sxs-lookup"><span data-stu-id="45754-592">The additional attributes supported are as follows:</span></span>  
  
-   `src`  
  
-   `soundstart`  
  
-   `loop`  
  
-   `volume`  
  
-   `vibration`  
  
-   `viblength`  
  
   
  
## Examples  
 <span data-ttu-id="45754-593">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje multimedialnych atrybuty "j" przez telefon.</span><span class="sxs-lookup"><span data-stu-id="45754-593">The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-594">Pobiera wartość wskazującą, czy przeglądarka obsługuje symbole obraz telefonu — specyficznych "j".</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-594">Gets a value indicating whether the browser supports J-Phone–specific picture symbols.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-595">
            <see langword="true" /> Jeśli przeglądarka obsługuje symbole obraz telefonu — specyficznych "j"; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-595">
              <see langword="true" /> if the browser supports J-Phone–specific picture symbols; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-596">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-596">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-597"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych "j"-Phone zgodnych z platformą.</span><span class="sxs-lookup"><span data-stu-id="45754-597">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> property applies only to J-Phone–compatible mobile devices.</span></span>  
  
 <span data-ttu-id="45754-598">Ustawić "j" Phone — specyficzne dla obrazu symbole dla przeglądarek telefonu — zgodnego "j" przy użyciu <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="45754-598">Set J-Phone–specific picture symbols for J-Phone–compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-599">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje symbole obraz telefonu — specyficznych "j".</span><span class="sxs-lookup"><span data-stu-id="45754-599">The following code example shows how to determine whether the browser supports J-Phone–specific picture symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsQueryStringInFormAction">
      <MemberSignature Language="C#" Value="public virtual bool SupportsQueryStringInFormAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQueryStringInFormAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsQueryStringInFormAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsQueryStringInFormAction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsQueryStringInFormAction : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-600">Pobiera wartość wskazującą, czy przeglądarka obsługuje ciągu zapytania w <see langword="action" /> wartość HTML atrybutu <see langword="&lt;form&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-600">Gets a value indicating whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-601">
            <see langword="true" /> Jeśli przeglądarka obsługuje ciągu zapytania w <see langword="action" /> wartość HTML atrybutu <see langword="&lt;form&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-601">
              <see langword="true" /> if the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-602">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-602">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-603">Jeśli `false`, parametry ciągu zapytania wysyłanych danych zwrotu, jako kod HTML `<input>` elementów za pomocą `type` Ustaw atrybuty `hidden`.</span><span class="sxs-lookup"><span data-stu-id="45754-603">If `false`, query string parameters are sent, in postback data, as HTML `<input>` elements with the `type` attributes set to `hidden`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-604">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje ciąg zapytania wartości `action` atrybutu HTML `<form>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-604">The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectWithCookie">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectWithCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectWithCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectWithCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectWithCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectWithCookie : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-605">Pobiera wartość wskazującą, czy przeglądarka obsługuje pliki cookie na przekierowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-605">Gets a value indicating whether the browser supports cookies on redirection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-606">
            <see langword="true" /> Jeśli przeglądarka obsługuje pliki cookie na przekierowywanie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-606">
              <see langword="true" /> if the browser supports cookies on redirection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-607">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-607">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-608">Z góry. Przeglądarka 4.1 lub w górę. Przeglądarka 3.2, <xref:System.Web.HttpResponse.Redirect%2A> metody zachowuje się tak, jakby wartość <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> właściwość <xref:System.Web.HttpBrowserCapabilities> obiekt jest `false`, chyba że <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> właściwości w <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> sekcja pliku Web.config została jawnie ustawiona `true`.</span><span class="sxs-lookup"><span data-stu-id="45754-608">With UP.Browser 4.1 or UP.Browser 3.2, the <xref:System.Web.HttpResponse.Redirect%2A> method behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.</span></span>  
  
 <span data-ttu-id="45754-609">W ASP.NET 1.1 były opcji dla tego ustawienia `true` lub `false`, ale za pomocą programu ASP.NET 2.0, opcje są rozwinięte, i <xref:System.Web.HttpCookieMode.AutoDetect> teraz jest ustawieniem domyślnym.</span><span class="sxs-lookup"><span data-stu-id="45754-609">In ASP.NET 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting.</span></span> <span data-ttu-id="45754-610">Jeśli aplikacja sieci Web ma `cookieless` atrybutu `<sessionState>` sekcji w pliku Web.config, ustawiona na wartość logiczną <xref:System.Web.HttpResponse.Redirect%2A> powinien działać zgodnie z oczekiwaniami w przypadku tych przeglądarek.</span><span class="sxs-lookup"><span data-stu-id="45754-610">If your Web application has the `cookieless` attribute of the `<sessionState>` section in the Web.config file set to a Boolean value, <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-611">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje pliki cookie na przekierowanie.</span><span class="sxs-lookup"><span data-stu-id="45754-611">The following code example shows how to determine whether the browser supports cookies on redirection.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectMultiple">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSelectMultiple : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-612">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="multiple" /> atrybutu HTML <see langword="&lt;select&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-612">Gets a value indicating whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-613">
            <see langword="true" /> Jeśli przeglądarka obsługuje <see langword="multiple" /> atrybutu HTML <see langword="&lt;select&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-613">
              <see langword="true" /> if the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-614">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-614">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-615">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje `multiple` atrybutu HTML `<select>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-615">The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsUncheck">
      <MemberSignature Language="C#" Value="public virtual bool SupportsUncheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUncheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsUncheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsUncheck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsUncheck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-616">Pobiera wartość wskazującą czy rozliczanie zaznaczone HTML <see langword="&lt;input type=checkbox&gt;" /> element jest widoczny w danych zwrotu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-616">Gets a value indicating whether the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-617">
            <see langword="true" /> Jeśli rozliczanie zaznaczone HTML <see langword="&lt;input type=checkbox&gt;" /> element jest uwzględniane w danych zwrotu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-617">
              <see langword="true" /> if the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-618">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-618">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-619">Jeśli `false`, wartość `checked` atrybutu HTML `<input type=checkbox>` elementów zostanie pominięta zwrotu danych.</span><span class="sxs-lookup"><span data-stu-id="45754-619">If `false`, the value of the `checked` attribute of HTML `<input type=checkbox>` elements is omitted from postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-620">Poniższy przykład kodu pokazuje, jak ustalić, czy rozliczanie zaznaczone HTML `<input type=checkbox>` element jest widoczny w danych zwrotu.</span><span class="sxs-lookup"><span data-stu-id="45754-620">The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsXmlHttp">
      <MemberSignature Language="C#" Value="public virtual bool SupportsXmlHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsXmlHttp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsXmlHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsXmlHttp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsXmlHttp : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-621">Pobiera wartość wskazującą, czy przeglądarka obsługuje odbieranie XML przy użyciu protokołu HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-621">Gets a value indicating whether the browser supports receiving XML over HTTP.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-622">
            <see langword="true" /> Jeśli przeglądarka obsługuje odbieranie XML przy użyciu protokołu HTTP; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-622">
              <see langword="true" /> if the browser supports receiving XML over HTTP; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-623">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-623">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-624">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje odbieranie XML przy użyciu protokołu HTTP.</span><span class="sxs-lookup"><span data-stu-id="45754-624">The following code example shows how to determine whether the browser supports receiving XML over HTTP.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.CompareFilters">
      <MemberSignature Language="C#" Value="int IFilterResolutionService.CompareFilters (string filter1, string filter2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CompareFilters (filter1 As String, filter2 As String) As Integer Implements IFilterResolutionService.CompareFilters" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Web.UI.IFilterResolutionService.CompareFilters(System::String ^ filter1, System::String ^ filter2) = System::Web::UI::IFilterResolutionService::CompareFilters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.String" />
        <Parameter Name="filter2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter1">
          <span data-ttu-id="45754-625">Pierwszy filtr w celu porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-625">The first filter to compare.</span>
          </span>
        </param>
        <param name="filter2">
          <span data-ttu-id="45754-626">Drugi filtr do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-626">The second filter to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45754-627">Używana wewnętrznie w celu porównania filtrów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-627">Used internally to compare filters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45754-628">1, jeśli <paramref name="filter1" /> jest ścieżką nadrzędną obiektu <paramref name="filter2" />;-1 Jeśli <paramref name="filter2" /> jest ścieżką nadrzędną obiektu <paramref name="filter1" />; 0 w przypadku nie relacji nadrzędny podrzędny między <paramref name="filter1" /> i <paramref name="filter2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-628">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.EvaluateFilter">
      <MemberSignature Language="C#" Value="bool IFilterResolutionService.EvaluateFilter (string filterName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function EvaluateFilter (filterName As String) As Boolean Implements IFilterResolutionService.EvaluateFilter" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IFilterResolutionService.EvaluateFilter(System::String ^ filterName) = System::Web::UI::IFilterResolutionService::EvaluateFilter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterName">
          <span data-ttu-id="45754-629">Filtr do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-629">The filter to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45754-630">Używana wewnętrznie w celu oceny filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-630">Used internally to evaluate a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45754-631">
            <see langword="true" /> Jeśli filtr został oceniony jako pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-631">
              <see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public bool Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tables { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-632">Pobiera wartość wskazującą, czy przeglądarka obsługuje HTML <see langword="&lt;table&gt;" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-632">Gets a value indicating whether the browser supports HTML <see langword="&lt;table&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-633">
            <see langword="true" /> Jeśli przeglądarka obsługuje HTML <see langword="&lt;table&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-633">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;table&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-634">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-634">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-635">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje HTML `<table>` elementów.</span><span class="sxs-lookup"><span data-stu-id="45754-635">The following code example shows how to determine whether the browser supports HTML `<table>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Tables#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Tables#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagWriter">
      <MemberSignature Language="C#" Value="public Type TagWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TagWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagWriter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TagWriter { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagWriter : Type" Usage="System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-636">Używana wewnętrznie w celu uzyskania typu obiektu, który jest używany do zapisywania tagów dla przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-636">Used internally to get the type of the object that is used to write tags for the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-637">
            <see cref="T:System.Type" /> Obiektu, który jest używany do zapisywania tagów dla przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-637">The <see cref="T:System.Type" /> of the object that is used to write tags for the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="45754-638">Występuje błąd analizy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-638">There is a parse error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-639">Pobiera nazwę i główna (liczba całkowita) numer wersji przeglądarki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-639">Gets the name and major (integer) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-640">Nazwa i numer wersji głównej w przeglądarce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-640">The name and major version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-641">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka Internet Explorer w wersji 6.</span><span class="sxs-lookup"><span data-stu-id="45754-641">The following code example shows how to determine whether the browser is Internet Explorer version 6.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Type#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Type#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public bool UseOptimizedCacheKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOptimizedCacheKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseOptimizedCacheKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOptimizedCacheKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseOptimizedCacheKey : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-642">Używane wewnętrznie, można pobrać wartość wskazującą, czy użycie klucza zoptymalizowanych w pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-642">Used internally to get a value indicating whether to use an optimized cache key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-643">
            <see langword="true" /> Aby użyć klucza zoptymalizowaną pamięć podręczną; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-643">
              <see langword="true" /> to use an optimized cache key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-644">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-644">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBScript">
      <MemberSignature Language="C#" Value="public bool VBScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.VBScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-645">Pobiera wartość wskazującą, czy przeglądarka obsługuje Visual Basic Scripting edition (VBScript).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-645">Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-646">
            <see langword="true" /> Jeśli przeglądarka obsługuje VBScript; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-646">
              <see langword="true" /> if the browser supports VBScript; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-647">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-647">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-648">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje VBScript.</span><span class="sxs-lookup"><span data-stu-id="45754-648">The following code example shows how to determine whether the browser supports VBScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-649">Pobiera pełny numer wersji (liczb całkowitych i dziesiętnych) przeglądarki jako ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-649">Gets the full version number (integer and decimal) of the browser as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-650">Pełny numer wersji przeglądarki jako ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-650">The full version number of the browser as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45754-651"><xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> Właściwość zwraca ciąg.</span><span class="sxs-lookup"><span data-stu-id="45754-651">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property returns a string.</span></span> <span data-ttu-id="45754-652">W niektórych scenariuszach <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> właściwość może zawierać litery znaków, jak w przypadku przeglądarki lub klienta urządzenia jest w wersji beta, takie jak "7.0b."</span><span class="sxs-lookup"><span data-stu-id="45754-652">In some scenarios, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property might contain letter characters, as in the case of a browser or client device that is a beta version such as "7.0b."</span></span> <span data-ttu-id="45754-653">Aby prawidłowo pobrać wersję jako typ danych, które mogą być używane w porównanie numeryczne, łączenie <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> i <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="45754-653">To correctly get the version as a data type that can be used in a numeric comparison, concatenate the <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45754-654">Poniższy przykład kodu pokazuje sposób określania <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="45754-654">The following code example shows how to determine the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> of the browser.</span></span> <span data-ttu-id="45754-655"><xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> Właściwości i <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> właściwości są łączone, a wynik jest używana do określenia, czy wersja przeglądarki jest większy niż 5.01.</span><span class="sxs-lookup"><span data-stu-id="45754-655">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Version#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Version#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="W3CDomVersion">
      <MemberSignature Language="C#" Value="public Version W3CDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version W3CDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property W3CDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ W3CDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.W3CDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-656">Pobiera wersję z sieci World Wide Web Consortium (W3C) XML modelu DOM (Document Object) obsługującego w przeglądarce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-656">Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-657">Liczba numer wersji W3C XML w modelu DOM, który przeglądarka obsługuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-657">The number of the W3C XML DOM version number that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-658">Poniższy przykład kodu pokazuje, jak ustalić, czy wersja modelu DOM języka XML W3C przeglądarki jest większa niż 1.</span><span class="sxs-lookup"><span data-stu-id="45754-658">The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win16">
      <MemberSignature Language="C#" Value="public bool Win16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win16" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win16 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win16 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-659">Pobiera wartość wskazującą, czy klient jest komputer z systemem Win16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-659">Gets a value indicating whether the client is a Win16-based computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-660">
            <see langword="true" /> Jeśli przeglądarka jest uruchomiona na komputerze z systemem Win16; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-660">
              <see langword="true" /> if the browser is running on a Win16-based computer; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-661">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-661">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-662">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka jest uruchomiony na komputerze z systemem Win16.</span><span class="sxs-lookup"><span data-stu-id="45754-662">The following code example shows how to determine whether the browser is running on a Win16-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32">
      <MemberSignature Language="C#" Value="public bool Win32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win32" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win32 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win32 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win32 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45754-663">Pobiera wartość wskazującą, czy klient jest komputerem oparte na Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-663">Gets a value indicating whether the client is a Win32-based computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45754-664">
            <see langword="true" /> Jeśli klient znajduje się komputer oparty na Win32; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-664">
              <see langword="true" /> if the client is a Win32-based computer; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45754-665">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45754-665">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45754-666">Poniższy przykład kodu pokazuje, jak ustalić, czy klient jest komputerem oparte na Win32.</span><span class="sxs-lookup"><span data-stu-id="45754-666">The following code example shows how to determine whether the client is a Win32-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win32#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win32#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>