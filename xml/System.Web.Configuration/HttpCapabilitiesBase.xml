<Type Name="HttpCapabilitiesBase" FullName="System.Web.Configuration.HttpCapabilitiesBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10427296305c8307c90df0ce4b32108b68b37f7e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69141494" /></Metadata><TypeSignature Language="C#" Value="public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpCapabilitiesBase extends System.Object implements class System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpCapabilitiesBase" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpCapabilitiesBase&#xA;Implements IFilterResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCapabilitiesBase : System::Web::UI::IFilterResolutionService" />
  <TypeSignature Language="F#" Value="type HttpCapabilitiesBase = class&#xA;    interface IFilterResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IFilterResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="590dd-101">Zapewnia dostęp do szczegółowych informacji o możliwościach przeglądarki klienta.</span><span class="sxs-lookup"><span data-stu-id="590dd-101">Provides access to detailed information about the capabilities of the client's browser.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-102"><xref:System.Web.Configuration.HttpCapabilitiesBase>jest klasą bazową, z <xref:System.Web.HttpBrowserCapabilities> której Klasa jest pochodną.</span><span class="sxs-lookup"><span data-stu-id="590dd-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> is the base class from which the <xref:System.Web.HttpBrowserCapabilities> class is derived.</span></span> <span data-ttu-id="590dd-103"><xref:System.Web.Configuration.HttpCapabilitiesBase>oferuje dużą liczbę właściwości tylko do odczytu, które zapewniają bezpieczny dostęp do słownika możliwości przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offers a large number of read-only properties that provide type-safe access to a browser's capabilities dictionary.</span></span> <span data-ttu-id="590dd-104">Dostęp do <xref:System.Web.HttpBrowserCapabilities> klasy można uzyskać <xref:System.Web.HttpRequest.Browser%2A> za pomocą właściwości, która jest udostępniana przez <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> właściwość ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="590dd-104">You can access the <xref:System.Web.HttpBrowserCapabilities> class through the <xref:System.Web.HttpRequest.Browser%2A> property that is exposed by the ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-105">Poniższy przykład pokazuje, jak uzyskać dostęp do informacji o przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="590dd-105">The following example shows how to access information about the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase/VB/sample_vb.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCapabilitiesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCapabilitiesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="590dd-106">Tworzy nowe wystąpienie <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="590dd-106">Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveXControls">
      <MemberSignature Language="C#" Value="public bool ActiveXControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveXControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveXControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveXControls { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveXControls : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-107">Pobiera wartość wskazującą, czy przeglądarka obsługuje kontrolki ActiveX.</span><span class="sxs-lookup"><span data-stu-id="590dd-107">Gets a value indicating whether the browser supports ActiveX controls.</span></span></summary>
        <value><span data-ttu-id="590dd-108"><see langword="true" />Jeśli przeglądarka obsługuje kontrolki ActiveX; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-108"><see langword="true" /> if the browser supports ActiveX controls; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-109">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-109">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-110">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje kontrolki ActiveX.</span><span class="sxs-lookup"><span data-stu-id="590dd-110">The following code example shows how to determine whether the browser supports ActiveX controls.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Adapters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Adapters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adapters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Adapters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Adapters : System.Collections.IDictionary" Usage="System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-111">Zwraca kolekcję dostępnych kart sterujących.</span><span class="sxs-lookup"><span data-stu-id="590dd-111">Returns the collection of available control adapters.</span></span></summary>
        <value><span data-ttu-id="590dd-112">Kolekcja zarejestrowanych kart sterujących.</span><span class="sxs-lookup"><span data-stu-id="590dd-112">The collection of registered control adapters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBrowser">
      <MemberSignature Language="C#" Value="public void AddBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBrowser (browserName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.AddBrowser : string -&gt; unit" Usage="httpCapabilitiesBase.AddBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="590dd-113">Nazwa przeglądarki do dodania.</span><span class="sxs-lookup"><span data-stu-id="590dd-113">The name of the browser to add.</span></span></param>
        <summary><span data-ttu-id="590dd-114">Używane wewnętrznie do dodawania wpisu do wewnętrznej kolekcji przeglądarek, dla których są rozpoznawane funkcje.</span><span class="sxs-lookup"><span data-stu-id="590dd-114">Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AOL">
      <MemberSignature Language="C#" Value="public bool AOL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AOL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AOL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AOL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AOL : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-115">Pobiera wartość wskazującą, czy klient jest przeglądarką usługi America Online (AOL).</span><span class="sxs-lookup"><span data-stu-id="590dd-115">Gets a value indicating whether the client is an America Online (AOL) browser.</span></span></summary>
        <value><span data-ttu-id="590dd-116"><see langword="true" />Jeśli przeglądarka jest przeglądarką AOL; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-116"><see langword="true" /> if the browser is an AOL browser; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-117">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-117">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-118">Poniższy przykład kodu pokazuje, jak określić, czy przeglądarka jest przeglądarką AOL.</span><span class="sxs-lookup"><span data-stu-id="590dd-118">The following code example shows how to determine whether the browser is an AOL browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.AOL#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.AOL#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundSounds">
      <MemberSignature Language="C#" Value="public bool BackgroundSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundSounds" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackgroundSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundSounds { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundSounds : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-119">Pobiera wartość wskazującą, czy przeglądarka obsługuje odtwarzanie dźwięków w tle za pomocą <see langword="&lt;bgsounds&gt;" /> elementu HTML.</span><span class="sxs-lookup"><span data-stu-id="590dd-119">Gets a value indicating whether the browser supports playing background sounds using the <see langword="&lt;bgsounds&gt;" /> HTML element.</span></span></summary>
        <value><span data-ttu-id="590dd-120"><see langword="true" />Jeśli przeglądarka obsługuje odtwarzanie dźwięków w tle; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-120"><see langword="true" /> if the browser supports playing background sounds; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-121">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-121">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-122">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje odtwarzanie dźwięków w tle.</span><span class="sxs-lookup"><span data-stu-id="590dd-122">The following code example shows how to determine whether the browser supports playing background sounds.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public bool Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Beta" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Beta As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Beta { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Beta : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-123">Pobiera wartość wskazującą, czy przeglądarka jest wersją beta.</span><span class="sxs-lookup"><span data-stu-id="590dd-123">Gets a value indicating whether the browser is a beta version.</span></span></summary>
        <value><span data-ttu-id="590dd-124"><see langword="true" />Jeśli przeglądarka jest wersją beta; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-124"><see langword="true" /> if the browser is a beta version; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-125">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-125">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-126">Przeglądarki wersji beta mogą wykazywać nieprzewidywalne zachowanie.</span><span class="sxs-lookup"><span data-stu-id="590dd-126">Beta version browsers can exhibit unpredictable behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-127">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka jest wersją beta.</span><span class="sxs-lookup"><span data-stu-id="590dd-127">The following code example shows how to determine whether the browser is a beta version.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Beta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Beta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public string Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Browser { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browser : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-128">Pobiera ciąg przeglądarki (jeśli istnieje), który został wysłany przez przeglądarkę w <see langword="User-Agent" /> nagłówku żądania.</span><span class="sxs-lookup"><span data-stu-id="590dd-128">Gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span></span></summary>
        <value><span data-ttu-id="590dd-129">Zawartość <see langword="User-Agent" /> nagłówka żądania wysyłanego przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-129">The contents of the <see langword="User-Agent" /> request header sent by the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-130">Poniższy przykład kodu pokazuje, `User-Agent` jak określić nagłówek żądania wysyłanego przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-130">The following code example shows how to determine the `User-Agent` request header sent by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserCapabilitiesProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BrowserCapabilitiesProvider As HttpCapabilitiesProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::HttpCapabilitiesProvider ^ BrowserCapabilitiesProvider { System::Web::Configuration::HttpCapabilitiesProvider ^ get(); void set(System::Web::Configuration::HttpCapabilitiesProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowserCapabilitiesProvider : System.Web.Configuration.HttpCapabilitiesProvider with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-131">Pobiera lub ustawia <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> obiekt dla bieżącej przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-131">Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span></span></summary>
        <value><span data-ttu-id="590dd-132"><see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> Obiekt dla bieżącej przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-132">The <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Browsers">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Browsers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Browsers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browsers As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Browsers { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browsers : System.Collections.ArrayList" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-133"><see cref="T:System.Collections.ArrayList" /> Pobiera przeglądarki<see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> z słownika.</span><span class="sxs-lookup"><span data-stu-id="590dd-133">Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="590dd-134"><see cref="T:System.Collections.ArrayList" /> Przeglądarka<see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> w słowniku.</span><span class="sxs-lookup"><span data-stu-id="590dd-134">An <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCombineFormsInDeck">
      <MemberSignature Language="C#" Value="public virtual bool CanCombineFormsInDeck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCombineFormsInDeck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCombineFormsInDeck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCombineFormsInDeck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCombineFormsInDeck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-135">Pobiera wartość wskazującą, czy przeglądarka obsługuje talie zawierające wiele formularzy, takich jak osobne karty.</span><span class="sxs-lookup"><span data-stu-id="590dd-135">Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</span></span></summary>
        <value><span data-ttu-id="590dd-136"><see langword="true" />Jeśli przeglądarka obsługuje talie zawierające wiele formularzy; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-136"><see langword="true" /> if the browser supports decks that contain multiple forms; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-137">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-137">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-138"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-138">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> property applies only to WML-compatible mobile devices.</span></span> <span data-ttu-id="590dd-139">W przypadku wartości true Adapter może wyprowadzać wiele formularzy z tej samej strony co karty jednego talii, gdzie to możliwe.</span><span class="sxs-lookup"><span data-stu-id="590dd-139">If true, the adapter can output multiple forms from the same page as cards of a single deck, where possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-140">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje talie zawierające wiele formularzy, takich jak osobne karty.</span><span class="sxs-lookup"><span data-stu-id="590dd-140">The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInitiateVoiceCall">
      <MemberSignature Language="C#" Value="public virtual bool CanInitiateVoiceCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInitiateVoiceCall" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInitiateVoiceCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInitiateVoiceCall { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInitiateVoiceCall : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-141">Pobiera wartość wskazującą, czy urządzenie przeglądarki może zainicjować połączenie głosowe.</span><span class="sxs-lookup"><span data-stu-id="590dd-141">Gets a value indicating whether the browser device is capable of initiating a voice call.</span></span></summary>
        <value><span data-ttu-id="590dd-142"><see langword="true" />Jeśli urządzenie przeglądarki jest w stanie zainicjować połączenia głosowe; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-142"><see langword="true" /> if the browser device is capable of initiating a voice call; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-143">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-144"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-144">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-145">Poniższy przykład kodu pokazuje, jak ustalić, czy urządzenie przeglądarki może zainicjować połączenie głosowe.</span><span class="sxs-lookup"><span data-stu-id="590dd-145">The following code example shows how to determine whether the browser device is capable of initiating a voice call.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAfterInputOrSelectElement">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderAfterInputOrSelectElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderAfterInputOrSelectElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderAfterInputOrSelectElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderAfterInputOrSelectElement : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-146">Pobiera wartość wskazującą, czy przeglądarka obsługuje zawartość strony po WML <see langword="&lt;select&gt;" /> lub <see langword="&lt;input&gt;" /> elementach.</span><span class="sxs-lookup"><span data-stu-id="590dd-146">Gets a value indicating whether the browser supports page content following WML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-147"><see langword="true" />Jeśli przeglądarka obsługuje zawartość strony po kodzie HTML <see langword="&lt;select&gt;" /> lub <see langword="&lt;input&gt;" /> elementach, <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-147"><see langword="true" /> if the browser supports page content following HTML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-148">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-148">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-149"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-149">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-150">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje zawartość strony po kodzie HTML `<select>` lub `<input>` elementach.</span><span class="sxs-lookup"><span data-stu-id="590dd-150">The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderEmptySelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderEmptySelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderEmptySelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderEmptySelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderEmptySelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderEmptySelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-151">Pobiera wartość wskazującą, czy przeglądarka obsługuje puste elementy HTML <see langword="&lt;select&gt;" /> .</span><span class="sxs-lookup"><span data-stu-id="590dd-151">Gets a value indicating whether the browser supports empty HTML <see langword="&lt;select&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-152"><see langword="true" />Jeśli przeglądarka obsługuje puste elementy HTML <see langword="&lt;select&gt;" /> ; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-152"><see langword="true" /> if the browser supports empty HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-153">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-153">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-154">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje puste elementy HTML `<select>` .</span><span class="sxs-lookup"><span data-stu-id="590dd-154">The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderInputAndSelectElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderInputAndSelectElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderInputAndSelectElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderInputAndSelectElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderInputAndSelectElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-155">Pobiera wartość wskazującą, czy przeglądarka obsługuje WML <see langword="INPUT" /> i <see langword="SELECT" /> elementy razem na tej samej karcie.</span><span class="sxs-lookup"><span data-stu-id="590dd-155">Gets a value indicating whether the browser supports WML <see langword="INPUT" /> and <see langword="SELECT" /> elements together on the same card.</span></span></summary>
        <value><span data-ttu-id="590dd-156"><see langword="true" />Jeśli przeglądarka obsługuje WML <see langword="&lt;input&gt;" /> i <see langword="&lt;select&gt;" /> <see langword="false" />elementy razem; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-156"><see langword="true" /> if the browser supports WML <see langword="&lt;input&gt;" /> and <see langword="&lt;select&gt;" /> elements together; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-157">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-157">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-158"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-158">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-159">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje kod HTML `<input>` i `<select>` elementy.</span><span class="sxs-lookup"><span data-stu-id="590dd-159">The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderMixedSelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderMixedSelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderMixedSelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderMixedSelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderMixedSelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderMixedSelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-160">Pobiera wartość wskazującą, czy przeglądarka obsługuje elementy WML <see langword="&lt;option&gt;" /> określające zarówno <see langword="onpick" /> atrybuty, <see langword="value" /> jak i.</span><span class="sxs-lookup"><span data-stu-id="590dd-160">Gets a value indicating whether the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span></span></summary>
        <value><span data-ttu-id="590dd-161"><see langword="true" />Jeśli przeglądarka obsługuje elementy WML <see langword="&lt;option&gt;" /> , które określają zarówno <see langword="onpick" /> atrybut <see langword="value" /> , <see langword="false" />jak i atrybuty; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-161"><see langword="true" /> if the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-162">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-162">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-163"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-163">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="590dd-164">Jeśli `false`wartości są wyświetlane jako `value` hiperlinkiiatrybutywymagająelementudoogłaszaniazwrotnego.`<do>` `onpick`</span><span class="sxs-lookup"><span data-stu-id="590dd-164">If `false`, `onpick` values are displayed as hyperlinks and `value` attributes require a `<do>` element for postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-165">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje elementy HTML `<option>` określające zarówno `onpick` , jak `value` i atrybuty.</span><span class="sxs-lookup"><span data-stu-id="590dd-165">The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderOneventAndPrevElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderOneventAndPrevElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderOneventAndPrevElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderOneventAndPrevElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderOneventAndPrevElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-166">Pobiera wartość wskazującą, czy przeglądarka obsługuje WML <see langword="&lt;onevent&gt;" /> i <see langword="&lt;prev&gt;" /> elementy, które współdzielą się w tej samej karcie WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-166">Gets a value indicating whether the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card.</span></span></summary>
        <value><span data-ttu-id="590dd-167"><see langword="true" />Jeśli przeglądarka obsługuje WML <see langword="&lt;onevent&gt;" /> i <see langword="&lt;prev&gt;" /> elementy, które współistnieją w tej samej karcie <see langword="false" />WML; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-167"><see langword="true" /> if the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-168">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-168">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-169"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-169">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="590dd-170">Jeśli `false`WML `<onevent>` i`<prev>` elementy, które należą do tej samej karty WML, nie będą prawidłowo renderowane.</span><span class="sxs-lookup"><span data-stu-id="590dd-170">If `false`, WML `<onevent>` and `<prev>` elements that coexist within the same WML card will not be properly rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-171">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje WML `<onevent>` i `<prev>` elementy, które należą do tej samej karty WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-171">The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderPostBackCards">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderPostBackCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderPostBackCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderPostBackCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderPostBackCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderPostBackCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-172">Pobiera wartość wskazującą, czy przeglądarka obsługuje WML kart do ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-172">Gets a value indicating whether the browser supports WML cards for postback.</span></span></summary>
        <value><span data-ttu-id="590dd-173"><see langword="true" />Jeśli przeglądarka obsługuje WML kart do ogłaszania zwrotnego; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-173"><see langword="true" /> if the browser supports WML cards for postback; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-174">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-174">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-175"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> Właściwość ma zastosowanie tylko do przeglądarek urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-175">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> property applies only to WML-compatible mobile-device browsers.</span></span>  
  
 <span data-ttu-id="590dd-176">Jeśli `false`karta ogłaszania zwrotnego nie zostanie prawidłowo renderowana przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-176">If `false`, postback cards will not be properly rendered by the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-177">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje WML kart do ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-177">The following code example shows how to determine whether the browser supports WML cards for postback.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderSetvarZeroWithMultiSelectionList">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderSetvarZeroWithMultiSelectionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderSetvarZeroWithMultiSelectionList { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderSetvarZeroWithMultiSelectionList : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-178">Pobiera wartość wskazującą, czy przeglądarka obsługuje elementy WML <see langword="&lt;setvar&gt;" /> <see langword="value" /> z atrybutem 0.</span><span class="sxs-lookup"><span data-stu-id="590dd-178">Gets a value indicating whether the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of 0.</span></span></summary>
        <value><span data-ttu-id="590dd-179"><see langword="true" />Jeśli przeglądarka obsługuje elementy WML <see langword="&lt;setvar&gt;" /> <see langword="value" /> z atrybutem <see langword="0" />; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-179"><see langword="true" /> if the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of <see langword="0" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-180">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-180">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-181"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-181">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="590dd-182">Jeśli `false` `<setvar>` elementyHTML`value` z atrybutem nie będąwyświetlanepoprawnie.`0`</span><span class="sxs-lookup"><span data-stu-id="590dd-182">If `false`, HTML `<setvar>` elements with a `value` attribute of `0` will not display correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-183">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje elementy WML `<setvar>` `value` z atrybutem 0.</span><span class="sxs-lookup"><span data-stu-id="590dd-183">The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSendMail">
      <MemberSignature Language="C#" Value="public virtual bool CanSendMail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSendMail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSendMail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSendMail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSendMail : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-184">Pobiera wartość wskazującą, czy przeglądarka obsługuje wysyłanie wiadomości e-mail przy użyciu elementu HTML <see langword="&lt;mailto&gt;" /> do wyświetlania adresów elektronicznych.</span><span class="sxs-lookup"><span data-stu-id="590dd-184">Gets a value indicating whether the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses.</span></span></summary>
        <value><span data-ttu-id="590dd-185"><see langword="true" />Jeśli przeglądarka obsługuje wysyłanie wiadomości e-mail przy użyciu elementu HTML <see langword="&lt;mailto&gt;" /> do wyświetlania adresów elektronicznych; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-185"><see langword="true" /> if the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-186">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-186">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-187">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje wysyłanie wiadomości e-mail przy użyciu elementu HTML `<mailto>` do wyświetlania adresów elektronicznych.</span><span class="sxs-lookup"><span data-stu-id="590dd-187">The following code example shows how to determine whether the browser supports sending email by using the HTML `<mailto>` element for displaying electronic addresses.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Capabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capabilities As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Capabilities { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Capabilities : System.Collections.IDictionary with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-188">Używane wewnętrznie do uzyskiwania określonych możliwości przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-188">Used internally to get the defined capabilities of the browser.</span></span></summary>
        <value><span data-ttu-id="590dd-189">Zdefiniowane możliwości przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-189">The defined capabilities of the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CDF">
      <MemberSignature Language="C#" Value="public bool CDF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDF" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CDF : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-190">Pobiera wartość wskazującą, czy przeglądarka obsługuje format definicji kanału (CDF) dla usługi webcast.</span><span class="sxs-lookup"><span data-stu-id="590dd-190">Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</span></span></summary>
        <value><span data-ttu-id="590dd-191"><see langword="true" />Jeśli przeglądarka obsługuje CDF; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-191"><see langword="true" /> if the browser supports CDF; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-192">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-192">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-193">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje CDF.</span><span class="sxs-lookup"><span data-stu-id="590dd-193">The following code example shows how to determine whether the browser supports CDF.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CDF#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CDF#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public Version ClrVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ClrVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClrVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-194">Pobiera wersję .NET Framework, która jest zainstalowana na kliencie.</span><span class="sxs-lookup"><span data-stu-id="590dd-194">Gets the version of the .NET Framework that is installed on the client.</span></span></summary>
        <value><span data-ttu-id="590dd-195">Środowisko uruchomieniowe <see cref="T:System.Version" />języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-195">The common language runtime <see cref="T:System.Version" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-196"><xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> Właściwość jest obsługiwana tylko wtedy, gdy przeglądarka jest przeglądarką Internet Explorer w wersji 5,0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="590dd-196">The <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property is supported only when the browser is Internet Explorer version 5.0 and later.</span></span>  
  
 <span data-ttu-id="590dd-197">Jeśli .NET Framework nie jest zainstalowana na kliencie, wartość zwracanych elementów wersji to `0, 0,-1,-1`.</span><span class="sxs-lookup"><span data-stu-id="590dd-197">If the .NET Framework is not installed on the client, the value of the version elements returned is `0, 0,-1,-1`.</span></span>  
  
 <span data-ttu-id="590dd-198">Jeśli na kliencie jest zainstalowana więcej niż jedna wersja .NET Framework, <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> właściwość zwróci najnowszą wersję.</span><span class="sxs-lookup"><span data-stu-id="590dd-198">If more than one version of the .NET Framework is installed on the client, the <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property returns the latest version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public bool Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cookies { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-199">Pobiera wartość wskazującą, czy przeglądarka obsługuje pliki cookie.</span><span class="sxs-lookup"><span data-stu-id="590dd-199">Gets a value indicating whether the browser supports cookies.</span></span></summary>
        <value><span data-ttu-id="590dd-200"><see langword="true" />Jeśli przeglądarka obsługuje pliki cookie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-200"><see langword="true" /> if the browser supports cookies; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-201">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-202">Właściwość <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> wskazuje, czy aplikacja przeglądarki obsługuje pliki cookie.</span><span class="sxs-lookup"><span data-stu-id="590dd-202">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property indicates whether the browser application supports cookies.</span></span> <span data-ttu-id="590dd-203">Jeśli użytkownik wyłączył pliki cookie w aplikacji, nie <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> wpłynie to na tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="590dd-203">If the user has disabled cookies in their application, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property will not be affected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-204">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje pliki cookie.</span><span class="sxs-lookup"><span data-stu-id="590dd-204">The following code example shows how to determine whether the browser supports cookies.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Crawler">
      <MemberSignature Language="C#" Value="public bool Crawler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Crawler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crawler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Crawler { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Crawler : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-205">Pobiera wartość wskazującą, czy przeglądarka jest przeszukiwarką sieci Web wyszukiwarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-205">Gets a value indicating whether the browser is a search engine Web crawler.</span></span></summary>
        <value><span data-ttu-id="590dd-206"><see langword="true" />Jeśli przeglądarka jest aparatem wyszukiwania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-206"><see langword="true" /> if the browser is a search engine; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-207">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-207">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-208">Poniższy przykład kodu pokazuje, jak ustalić, czy klient jest przeszukiwarką sieci Web wyszukiwarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-208">The following code example shows how to determine whether the client is a search engine Web crawler.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHtmlTextWriter (w As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="member this.CreateHtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="httpCapabilitiesBase.CreateHtmlTextWriter w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="590dd-209"><see cref="T:System.IO.TextWriter" />do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="590dd-209"><see cref="T:System.IO.TextWriter" /> to be created.</span></span></param>
        <summary><span data-ttu-id="590dd-210">Tworzy nowe wystąpienie <see cref="T:System.Web.UI.HtmlTextWriter" /> do użycia.</span><span class="sxs-lookup"><span data-stu-id="590dd-210">Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span></span></summary>
        <returns><span data-ttu-id="590dd-211">Nowe wystąpienie <see cref="T:System.Web.UI.HtmlTextWriter" /> do użycia.</span><span class="sxs-lookup"><span data-stu-id="590dd-211">A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="590dd-212">Nie można utworzyć wystąpienia <see cref="T:System.Web.UI.HtmlTextWriter" />metody.</span><span class="sxs-lookup"><span data-stu-id="590dd-212">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSubmitButtonLimit">
      <MemberSignature Language="C#" Value="public virtual int DefaultSubmitButtonLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSubmitButtonLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultSubmitButtonLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultSubmitButtonLimit { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSubmitButtonLimit : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-213">Zwraca maksymalną liczbę przycisków przesyłania, które są dozwolone dla formularza.</span><span class="sxs-lookup"><span data-stu-id="590dd-213">Returns the maximum number of Submit buttons that are allowed for a form.</span></span></summary>
        <value><span data-ttu-id="590dd-214">Maksymalna liczba przycisków przesyłania, które są dozwolone dla formularza.</span><span class="sxs-lookup"><span data-stu-id="590dd-214">The maximum number of Submit buttons that are allowed for a form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-215"><xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> Właściwość przede wszystkim reprezentuje liczbę kluczy nieelastycznych, które są dostępne na urządzeniu przenośnym zgodnym z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-215">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> property primarily represents the number of soft keys that are available on a WML-compatible mobile device.</span></span>  
  
 <span data-ttu-id="590dd-216">Strony formularzy sieci Web dla urządzeń przenośnych mogą zawierać <xref:System.Web.UI.MobileControls.SelectionList> obiekt i więcej niż jedną <xref:System.Web.UI.MobileControls.Command> kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-216">Web Forms pages for mobile devices can contain a <xref:System.Web.UI.MobileControls.SelectionList> object and more than one <xref:System.Web.UI.MobileControls.Command> control.</span></span> <span data-ttu-id="590dd-217">Umożliwia wybranie, które <xref:System.Web.UI.MobileControls.Command> z formantów mają być przypisane do klucza miękkiego na urządzeniach z wieloma kluczami nieelastycznymi. <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A></span><span class="sxs-lookup"><span data-stu-id="590dd-217">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> allows you to choose which of the <xref:System.Web.UI.MobileControls.Command> controls should be assigned to a soft key on devices that have multiple soft keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public void DisableOptimizedCacheKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableOptimizedCacheKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableOptimizedCacheKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableOptimizedCacheKey();" />
      <MemberSignature Language="F#" Value="member this.DisableOptimizedCacheKey : unit -&gt; unit" Usage="httpCapabilitiesBase.DisableOptimizedCacheKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="590dd-218">Używany wewnętrznie do wyłączania użycia zoptymalizowanego klucza pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="590dd-218">Used internally to disable use of an optimized cache key.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EcmaScriptVersion">
      <MemberSignature Language="C#" Value="public Version EcmaScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version EcmaScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EcmaScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ EcmaScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EcmaScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-219">Pobiera numer wersji ECMAScript obsługiwanej przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-219">Gets the version number of ECMAScript that the browser supports.</span></span></summary>
        <value><span data-ttu-id="590dd-220">Numer wersji języka ECMAScript obsługiwanego przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-220">The version number of ECMAScript that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-221">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje główny numer wersji języka ECMAScript większy niż 1.</span><span class="sxs-lookup"><span data-stu-id="590dd-221">The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=42245"><span data-ttu-id="590dd-222">Oficjalna witryna sieci Web ECMA</span><span class="sxs-lookup"><span data-stu-id="590dd-222">ECMA official Web site</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public bool Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Frames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Frames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-223">Pobiera wartość wskazującą, czy przeglądarka obsługuje ramki HTML.</span><span class="sxs-lookup"><span data-stu-id="590dd-223">Gets a value indicating whether the browser supports HTML frames.</span></span></summary>
        <value><span data-ttu-id="590dd-224"><see langword="true" />Jeśli przeglądarka obsługuje ramki; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-224"><see langword="true" /> if the browser supports frames; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-225">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-225">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-226">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje ramki HTML.</span><span class="sxs-lookup"><span data-stu-id="590dd-226">The following code example shows how to determine whether the browser supports HTML frames.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Frames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Frames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayMajorVersion">
      <MemberSignature Language="C#" Value="public virtual int GatewayMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GatewayMajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GatewayMajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-227">Pobiera numer wersji głównej bramy bezprzewodowej używanej do uzyskiwania dostępu do serwera, jeśli jest znany.</span><span class="sxs-lookup"><span data-stu-id="590dd-227">Gets the major version number of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="590dd-228">Numer wersji głównej bramy sieci bezprzewodowej używanej do uzyskiwania dostępu do serwera, jeśli jest znany.</span><span class="sxs-lookup"><span data-stu-id="590dd-228">The major version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="590dd-229">Wartość domyślna to <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-229">The default is <see langword="0" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="590dd-230">Nie można przeanalizować głównego numeru wersji bramy sieci bezprzewodowej.</span><span class="sxs-lookup"><span data-stu-id="590dd-230">The major version number of the wireless gateway cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMinorVersion">
      <MemberSignature Language="C#" Value="public virtual double GatewayMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GatewayMinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double GatewayMinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-231">Pobiera numer wersji pomocniczej bramy bezprzewodowej używanej do uzyskiwania dostępu do serwera, jeśli jest znany.</span><span class="sxs-lookup"><span data-stu-id="590dd-231">Gets the minor version number of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="590dd-232">Numer wersji pomocniczej bramy bezprzewodowej używanej do uzyskiwania dostępu do serwera, jeśli jest znany.</span><span class="sxs-lookup"><span data-stu-id="590dd-232">The minor version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="590dd-233">Wartość domyślna to <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-233">The default is <see langword="0" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="590dd-234">Nie można przeanalizować pomocniczego numeru wersji bramy sieci bezprzewodowej.</span><span class="sxs-lookup"><span data-stu-id="590dd-234">The minor version number of the wireless gateway cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayVersion">
      <MemberSignature Language="C#" Value="public virtual string GatewayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GatewayVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GatewayVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayVersion : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-235">Pobiera wersję bramy sieci bezprzewodowej używanej do uzyskiwania dostępu do serwera, jeśli jest znana.</span><span class="sxs-lookup"><span data-stu-id="590dd-235">Gets the version of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="590dd-236">Numer wersji bramy bezprzewodowej używanej do uzyskiwania dostępu do serwera, jeśli jest znany.</span><span class="sxs-lookup"><span data-stu-id="590dd-236">The version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="590dd-237">Wartość domyślna to <see langword="None" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-237">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-238">Poniższy przykład kodu pokazuje, jak ustalić, czy brama jest `UP` bramą.</span><span class="sxs-lookup"><span data-stu-id="590dd-238">The following code example shows how to determine whether the gateway is an `UP` gateway.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrVersions">
      <MemberSignature Language="C#" Value="public Version[] GetClrVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Version[] GetClrVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrVersions () As Version()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Version ^&gt; ^ GetClrVersions();" />
      <MemberSignature Language="F#" Value="member this.GetClrVersions : unit -&gt; Version[]" Usage="httpCapabilitiesBase.GetClrVersions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="590dd-239">Zwraca wszystkie wersje .NET Framework środowiska uruchomieniowego języka wspólnego, które są zainstalowane na kliencie.</span><span class="sxs-lookup"><span data-stu-id="590dd-239">Returns all versions of the .NET Framework common language runtime that are installed on the client.</span></span></summary>
        <returns><span data-ttu-id="590dd-240">Tablica <see cref="T:System.Version" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="590dd-240">An array of <see cref="T:System.Version" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-241"><xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> Metoda jest obsługiwana tylko wtedy, gdy przeglądarka jest przeglądarką Internet Explorer w wersji 5,0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="590dd-241">The <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> method is supported only when the browser is Internet Explorer version 5.0 or later.</span></span> <span data-ttu-id="590dd-242">Jeśli środowisko uruchomieniowe języka wspólnego nie jest zainstalowane na kliencie, właściwość zwraca tablicę zawierającą pojedynczy <xref:System.Version> obiekt z wartościami 0, 0,-1,-1.</span><span class="sxs-lookup"><span data-stu-id="590dd-242">If the common language runtime is not installed on the client, the property returns an array containing a single <xref:System.Version> object with the values 0, 0,-1,-1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigCapabilities">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities(string configKey, class System.Web.HttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConfigCapabilities (configKey As String, request As HttpRequest) As HttpCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Configuration::HttpCapabilitiesBase ^ GetConfigCapabilities(System::String ^ configKey, System::Web::HttpRequest ^ request);" />
      <MemberSignature Language="F#" Value="static member GetConfigCapabilities : string * System.Web.HttpRequest -&gt; System.Web.Configuration.HttpCapabilitiesBase" Usage="System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities (configKey, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configKey" Type="System.String" />
        <Parameter Name="request" Type="System.Web.HttpRequest" />
      </Parameters>
      <Docs>
        <param name="configKey"><span data-ttu-id="590dd-243">Nazwa sekcji konfiguracji, która konfiguruje możliwości przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-243">The name of the configuration section that configures browser capabilities.</span></span></param>
        <param name="request"><span data-ttu-id="590dd-244">Wygenerowane przez przeglądarkę, dla którego można zwrócić możliwości i który jest zwykle bieżącym <see cref="T:System.Web.HttpRequest" />. <see cref="T:System.Web.HttpRequest" /></span><span class="sxs-lookup"><span data-stu-id="590dd-244">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</span></span></param>
        <summary><span data-ttu-id="590dd-245">Używane wewnętrznie do zwrócenia wystąpienia <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> reprezentującego przeglądarkę, która wygenerowała określony. <see cref="T:System.Web.HttpRequest" /></span><span class="sxs-lookup"><span data-stu-id="590dd-245">Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span></span></summary>
        <returns><span data-ttu-id="590dd-246">Wystąpienie <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> reprezentujące przeglądarkę, która wygenerowała określony <see cref="T:System.Web.HttpRequest" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-246">An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBackButton">
      <MemberSignature Language="C#" Value="public virtual bool HasBackButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBackButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasBackButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasBackButton { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasBackButton : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-247">Pobiera wartość wskazującą, czy przeglądarka ma dedykowany przycisk **Wstecz** .</span><span class="sxs-lookup"><span data-stu-id="590dd-247">Gets a value indicating whether the browser has a dedicated **Back** button.</span></span></summary>
        <value><span data-ttu-id="590dd-248"><see langword="true" />Jeśli przeglądarka ma dedykowany przycisk **Wstecz** ; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-248"><see langword="true" /> if the browser has a dedicated **Back** button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-249">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-249">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-250">Jeśli `false`przycisk **Wstecz** nie jest dostępny, formant łącza może być niezbędny.</span><span class="sxs-lookup"><span data-stu-id="590dd-250">If `false`, a link control might be necessary when a **Back** button is not available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-251">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka ma dedykowany przycisk **Wstecz** .</span><span class="sxs-lookup"><span data-stu-id="590dd-251">The following code example shows how to determine whether the browser has a dedicated **Back** button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HidesRightAlignedMultiselectScrollbars">
      <MemberSignature Language="C#" Value="public virtual bool HidesRightAlignedMultiselectScrollbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HidesRightAlignedMultiselectScrollbars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HidesRightAlignedMultiselectScrollbars { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HidesRightAlignedMultiselectScrollbars : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-252">Pobiera wartość wskazującą, czy pasek przewijania elementu HTML <see langword="&lt;select multiple&gt;" /> <see langword="align" /> z wartością <see langword="right" /> atrybutu jest ukrywany podczas renderowania.</span><span class="sxs-lookup"><span data-stu-id="590dd-252">Gets a value indicating whether the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span></span></summary>
        <value><span data-ttu-id="590dd-253"><see langword="true" />Jeśli <see langword="&lt;select multiple&gt;" /> pasek przewijania elementu HTML <see langword="align" /> z wartością <see langword="right" /> atrybutu jest słonięty podczas renderowania; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-253"><see langword="true" /> if the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-254">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-254">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-255">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka zasłania pasek przewijania dla elementów, które są wyrównane do prawej strony.</span><span class="sxs-lookup"><span data-stu-id="590dd-255">The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlTextWriter">
      <MemberSignature Language="C#" Value="public string HtmlTextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlTextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlTextWriter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HtmlTextWriter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlTextWriter : string with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-256">Pobiera lub ustawia w pełni kwalifikowaną nazwę <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy do użycia.</span><span class="sxs-lookup"><span data-stu-id="590dd-256">Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span></span></summary>
        <value><span data-ttu-id="590dd-257">W pełni kwalifikowana nazwa <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy do użycia.</span><span class="sxs-lookup"><span data-stu-id="590dd-257">The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-258">Pobiera wewnętrzny identyfikator przeglądarki określony w pliku definicji przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-258">Gets the internal identifier of the browser as specified in the browser definition file.</span></span></summary>
        <value><span data-ttu-id="590dd-259">Wewnętrzny identyfikator przeglądarki określony w pliku definicji przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-259">Internal identifier of the browser as specified in the browser definition file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="protected virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.Init" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="httpCapabilitiesBase.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="590dd-260">Używane wewnętrznie do inicjowania wewnętrznego zestawu wartości.</span><span class="sxs-lookup"><span data-stu-id="590dd-260">Used internally to initialize an internal set of values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual string InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InputType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-261">Zwraca typ danych wejściowych obsługiwanych przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-261">Returns the type of input supported by browser.</span></span></summary>
        <value><span data-ttu-id="590dd-262">Typ danych wejściowych obsługiwanych przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-262">The type of input supported by browser.</span></span> <span data-ttu-id="590dd-263">Wartość domyślna to <c>telephoneKeypad</c>.</span><span class="sxs-lookup"><span data-stu-id="590dd-263">The default is <c>telephoneKeypad</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-264">Możliwe wartości zwracane to:</span><span class="sxs-lookup"><span data-stu-id="590dd-264">Possible return values include:</span></span>  
  
-   `virtualKeyboard`  
  
-   `telephoneKeypad`  
  
-   `keyboard`  
  
   
  
## Examples  
 <span data-ttu-id="590dd-265">Poniższy przykład kodu pokazuje, jak określić typ obsługi danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="590dd-265">The following code example shows how to determine the type of input support.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.InputType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.InputType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public bool IsBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBrowser (browserName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.IsBrowser : string -&gt; bool" Usage="httpCapabilitiesBase.IsBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="590dd-266">Określona przeglądarka.</span><span class="sxs-lookup"><span data-stu-id="590dd-266">The specified browser.</span></span></param>
        <summary><span data-ttu-id="590dd-267">Pobiera wartość wskazującą, czy przeglądarka klienta jest taka sama jak określona przeglądarka.</span><span class="sxs-lookup"><span data-stu-id="590dd-267">Gets a value indicating whether the client browser is the same as the specified browser.</span></span></summary>
        <returns><span data-ttu-id="590dd-268"><see langword="true" />Jeśli przeglądarka klienta jest taka sama jak określona przeglądarka; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-268"><see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-269">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-269">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-270">Metoda zwraca również wartość `true` , jeśli definicja przeglądarki klienta dziedziczy z określonej przeglądarki. <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A></span><span class="sxs-lookup"><span data-stu-id="590dd-270">The <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> method also returns `true` if the client browser definition inherits from the specified browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColor">
      <MemberSignature Language="C#" Value="public virtual bool IsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-271">Pobiera wartość wskazującą, czy przeglądarka ma kolor wyświetlania.</span><span class="sxs-lookup"><span data-stu-id="590dd-271">Gets a value indicating whether the browser has a color display.</span></span></summary>
        <value><span data-ttu-id="590dd-272"><see langword="true" />Jeśli przeglądarka ma kolor wyświetlania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-272"><see langword="true" /> if the browser has a color display; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-273">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-273">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-274">Poniższy przykład kodu pokazuje, czy przeglądarka klienta obsługuje kolor.</span><span class="sxs-lookup"><span data-stu-id="590dd-274">The following code example shows whether the client's browser supports color.</span></span> <span data-ttu-id="590dd-275">Zwracana wartość może zostać użyta w celu określenia odpowiedniego obrazu do wysłania do przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-275">The returned value could be used to determine the appropriate image to send to the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMobileDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsMobileDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMobileDevice" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMobileDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMobileDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMobileDevice : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-276">Pobiera wartość wskazującą, czy przeglądarka jest rozpoznawanym urządzeniem przenośnym.</span><span class="sxs-lookup"><span data-stu-id="590dd-276">Gets a value indicating whether the browser is a recognized mobile device.</span></span></summary>
        <value><span data-ttu-id="590dd-277"><see langword="true" />Jeśli przeglądarka jest rozpoznawanym urządzeniem przenośnym; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-277"><see langword="true" /> if the browser is a recognized mobile device; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-278">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-278">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-279">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka jest urządzeniem przenośnym.</span><span class="sxs-lookup"><span data-stu-id="590dd-279">The following code example shows how to determine whether the browser is a mobile device.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="590dd-280">Nazwa możliwości przeglądarki do pobrania.</span><span class="sxs-lookup"><span data-stu-id="590dd-280">The name of the browser capability to retrieve.</span></span></param>
        <summary><span data-ttu-id="590dd-281">Pobiera wartość określonej możliwości przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-281">Gets the value of the specified browser capability.</span></span> <span data-ttu-id="590dd-282">W C#programie ta właściwość jest indeksatorem klasy.</span><span class="sxs-lookup"><span data-stu-id="590dd-282">In C#, this property is the indexer for the class.</span></span></summary>
        <value><span data-ttu-id="590dd-283">Możliwość przeglądarki z określoną nazwą klucza.</span><span class="sxs-lookup"><span data-stu-id="590dd-283">The browser capability with the specified key name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-284">W języku JScript można używać domyślnych właściwości indeksowanych zdefiniowanych przez typ, ale nie można jawnie definiować własnych.</span><span class="sxs-lookup"><span data-stu-id="590dd-284">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="590dd-285">Jednak określenie `expando` atrybutu w klasie automatycznie zapewnia domyślną właściwość indeksowaną z `Object` typem `String`i typem indeksu.</span><span class="sxs-lookup"><span data-stu-id="590dd-285">However, specifying the `expando` attribute on a class automatically provides a default indexed property with a type of `Object` and an index type of `String`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaApplets">
      <MemberSignature Language="C#" Value="public bool JavaApplets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaApplets" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaApplets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaApplets { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaApplets : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-286">Pobiera wartość wskazującą, czy przeglądarka obsługuje język Java.</span><span class="sxs-lookup"><span data-stu-id="590dd-286">Gets a value indicating whether the browser supports Java.</span></span></summary>
        <value><span data-ttu-id="590dd-287"><see langword="true" />Jeśli przeglądarka obsługuje język Java; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-287"><see langword="true" /> if the browser supports Java; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-288">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-288">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-289">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje język Java.</span><span class="sxs-lookup"><span data-stu-id="590dd-289">The following code example shows how to determine whether the browser supports Java.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScript">
      <MemberSignature Language="C#" Value="public bool JavaScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is the EcmaScriptVersion property. A Major version value greater than or equal to 1 implies JavaScript support. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-290">Pobiera wartość wskazującą, czy przeglądarka obsługuje język JavaScript.</span><span class="sxs-lookup"><span data-stu-id="590dd-290">Gets a value indicating whether the browser supports JavaScript.</span></span></summary>
        <value><span data-ttu-id="590dd-291"><see langword="true" />Jeśli przeglądarka obsługuje język JavaScript; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-291"><see langword="true" /> if the browser supports JavaScript; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-292">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-292">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-293">Jeśli przeglądarka obsługuje język JavaScript, ale skrypt jest wyłączony za pomocą ustawienia zabezpieczeń, <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> Właściwość `true` zwróci wartość, ale skrypt nie zostanie uruchomiony w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="590dd-293">If the browser supports JavaScript but scripting is disabled through a security setting, the <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> property will return `true` but script will not execute on the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-294">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje język JavaScript.</span><span class="sxs-lookup"><span data-stu-id="590dd-294">The following code example shows how to determine whether the browser supports JavaScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JScriptVersion">
      <MemberSignature Language="C#" Value="public Version JScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version JScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ JScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-295">Pobiera wersję języka JScript obsługiwaną przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-295">Gets the JScript version that the browser supports.</span></span></summary>
        <value><span data-ttu-id="590dd-296"><see cref="T:System.Version" /> Język JScript obsługiwany przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-296">The <see cref="T:System.Version" /> of JScript that the browser supports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-297">Pobiera numer wersji głównej (całkowitej) przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-297">Gets the major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="590dd-298">Numer wersji głównej przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-298">The major version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-299">Poniższy przykład kodu dodaje wartości główne i pomocnicze (liczby całkowite i dziesiętne) numeru wersji przeglądarki i wysyła wynik do przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-299">The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="590dd-300">Wartość wersji głównej nie jest liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="590dd-300">The major version value is not an integer.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MaximumHrefLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumHrefLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumHrefLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumHrefLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumHrefLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumHrefLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-301">Pobiera maksymalną długość w znakach dla <see langword="href" /> atrybutu elementu HTML <see langword="&lt;a&gt;" /> (kotwicy).</span><span class="sxs-lookup"><span data-stu-id="590dd-301">Gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></summary>
        <value><span data-ttu-id="590dd-302">Maksymalna długość <see langword="href" /> atrybutu elementu HTML <see langword="&lt;a&gt;" /> (kotwicy) w znakach.</span><span class="sxs-lookup"><span data-stu-id="590dd-302">The maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRenderedPageSize">
      <MemberSignature Language="C#" Value="public virtual int MaximumRenderedPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRenderedPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumRenderedPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumRenderedPageSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRenderedPageSize : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-303">Pobiera maksymalną długość strony (w bajtach), która może być wyświetlana w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="590dd-303">Gets the maximum length of the page, in bytes, which the browser can display.</span></span></summary>
        <value><span data-ttu-id="590dd-304">Maksymalna długość strony (w bajtach), która może być wyświetlana w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="590dd-304">The maximum length of the page, in bytes, which the browser can display.</span></span> <span data-ttu-id="590dd-305">Wartość domyślna to <c>2000</c>.</span><span class="sxs-lookup"><span data-stu-id="590dd-305">The default is <c>2000</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-306">Przetwarzanie przez bramę pośrednią może zmienić liczbę bajtów, które docierają do przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-306">Processing by an intermediate gateway can change the number of bytes that reach the browser.</span></span> <span data-ttu-id="590dd-307">ASP.NET nie wymusza tego limitu rozmiaru strony.</span><span class="sxs-lookup"><span data-stu-id="590dd-307">ASP.NET does not enforce this limit on page size.</span></span>  
  
 <span data-ttu-id="590dd-308"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A>Program jest szczególnie przydatny podczas pracy z przeglądarkami klienta mobilnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-308"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> is primarily useful when working with mobile-client browsers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSoftkeyLabelLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumSoftkeyLabelLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumSoftkeyLabelLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumSoftkeyLabelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumSoftkeyLabelLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSoftkeyLabelLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-309">Zwraca maksymalną długość tekstu, który może być wyświetlany w etykiecie klucza miękkiego.</span><span class="sxs-lookup"><span data-stu-id="590dd-309">Returns the maximum length of the text that a soft-key label can display.</span></span></summary>
        <value><span data-ttu-id="590dd-310">Maksymalna długość tekstu, który może być wyświetlany w etykiecie klucza miękkiego.</span><span class="sxs-lookup"><span data-stu-id="590dd-310">The maximum length of the text that a soft-key label can display.</span></span> <span data-ttu-id="590dd-311">Wartość domyślna to <see langword="5" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-311">The default is <see langword="5" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-312"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-312">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-313">Poniższy przykład kodu pokazuje, jak określić maksymalną długość etykiety klucza miękkiego dla przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-313">The following code example shows how to determine the maximum length of the soft-key label for the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public double MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-314">Pobiera pomocniczy (czyli dziesiętny) numer wersji przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-314">Gets the minor (that is, decimal) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="590dd-315">Pomocniczy numer wersji przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-315">The minor version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-316">Poniższy przykład kodu zwraca wersję pomocniczą przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-316">The following code example returns the minor version of the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="590dd-317">Pomocniczy numer wersji w nagłówku jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="590dd-317">The minor version number in the header is not valid.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinorVersionString">
      <MemberSignature Language="C#" Value="public string MinorVersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinorVersionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinorVersionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersionString : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-318">Pobiera pomocniczy (dziesiętny) numer wersji przeglądarki jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="590dd-318">Gets the minor (decimal) version number of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="590dd-319">Pomocniczy numer wersji przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-319">The minor version number of the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceManufacturer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceManufacturer : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-320">Zwraca nazwę producenta urządzenia przenośnego, jeśli jest znana.</span><span class="sxs-lookup"><span data-stu-id="590dd-320">Returns the name of the manufacturer of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="590dd-321">Nazwa producenta urządzenia przenośnego, jeśli jest znana.</span><span class="sxs-lookup"><span data-stu-id="590dd-321">The name of the manufacturer of a mobile device, if known.</span></span> <span data-ttu-id="590dd-322">Wartość domyślna to <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-322">The default is <see langword="Unknown" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceModel">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceModel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceModel { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceModel : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-323">Pobiera nazwę modelu urządzenia przenośnego, jeśli jest znana.</span><span class="sxs-lookup"><span data-stu-id="590dd-323">Gets the model name of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="590dd-324">Nazwa modelu urządzenia przenośnego, jeśli jest znana.</span><span class="sxs-lookup"><span data-stu-id="590dd-324">The model name of a mobile device, if known.</span></span> <span data-ttu-id="590dd-325">Wartość domyślna to <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-325">The default is <see langword="Unknown" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MSDomVersion">
      <MemberSignature Language="C#" Value="public Version MSDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MSDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MSDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MSDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MSDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-326">Pobiera wersję Microsoft HTML (MSHTML) Document Object Model (DOM) obsługiwaną przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-326">Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="590dd-327">Liczba wersji modelu MSHTML, które obsługuje przeglądarka.</span><span class="sxs-lookup"><span data-stu-id="590dd-327">The number of the MSHTML DOM version that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-328">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje wersję główną modelu MSHTML, większą niż 1.</span><span class="sxs-lookup"><span data-stu-id="590dd-328">The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSoftkeys">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSoftkeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSoftkeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfSoftkeys As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfSoftkeys { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfSoftkeys : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-329">Zwraca liczbę kluczy nietrwałych na urządzeniu przenośnym.</span><span class="sxs-lookup"><span data-stu-id="590dd-329">Returns the number of soft keys on a mobile device.</span></span></summary>
        <value><span data-ttu-id="590dd-330">Liczba nieobsługiwanych kluczy na urządzeniu przenośnym.</span><span class="sxs-lookup"><span data-stu-id="590dd-330">The number of soft keys supported on a mobile device.</span></span> <span data-ttu-id="590dd-331">Wartość domyślna to <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-331">The default is <see langword="0" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-332"><xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-332">The <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="590dd-333">Klucze miękkie to specjalne klucze, które aplikacja zwykle może mapować na zadania niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="590dd-333">Soft keys are special keys that the application can usually map to custom tasks.</span></span> <span data-ttu-id="590dd-334">Niezależny tekst jest wyświetlany na ekranie w lewym dolnym rogu i prawym dolnym narożniku.</span><span class="sxs-lookup"><span data-stu-id="590dd-334">Soft-key text is displayed on the screen in the lower-left and lower-right corners.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public string Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Platform" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Platform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Platform : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-335">Pobiera nazwę platformy używanej przez klienta, jeśli jest znana.</span><span class="sxs-lookup"><span data-stu-id="590dd-335">Gets the name of the platform that the client uses, if it is known.</span></span></summary>
        <value><span data-ttu-id="590dd-336">System operacyjny wykorzystywany przez klienta (jeśli jest znany), w przeciwnym razie wartość jest ustawiona na <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-336">The operating system that the client uses, if it is known, otherwise the value is set to <see langword="Unknown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-337">Niektóre z możliwych wartości <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> właściwości są następujące:</span><span class="sxs-lookup"><span data-stu-id="590dd-337">Some of the possible values for the <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> property are as follows:</span></span>  
  
-   `Unknown`  
  
-   `Win95`  
  
-   `Win98`  
  
-   <span data-ttu-id="590dd-338">`Windows NT 5.0` (Windows 2000)</span><span class="sxs-lookup"><span data-stu-id="590dd-338">`Windows NT 5.0` (Windows 2000)</span></span>  
  
-   <span data-ttu-id="590dd-339">`Windows NT 5.1`(System Windows XP)</span><span class="sxs-lookup"><span data-stu-id="590dd-339">`Windows NT 5.1` (Windows XP)</span></span>  
  
-   <span data-ttu-id="590dd-340">`WinNT`(wszystkie pozostałe wersje systemu Windows NT)</span><span class="sxs-lookup"><span data-stu-id="590dd-340">`WinNT` (all other versions of Windows NT)</span></span>  
  
-   `Win16`  
  
-   `WinCE`  
  
-   `Mac68K`  
  
-   `MacPPC`  
  
-   `UNIX`  
  
-   `WebTV`  
  
   
  
## Examples  
 <span data-ttu-id="590dd-341">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka jest uruchomiona na platformie systemu Windows NT.</span><span class="sxs-lookup"><span data-stu-id="590dd-341">The following code example shows how to determine whether the browser is running on the Windows NT platform.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Platform#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Platform#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImageMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredImageMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredImageMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredImageMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredImageMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredImageMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-342">Zwraca typ MIME typu zawartości obrazu, który zwykle jest preferowany przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-342">Returns the MIME type of the type of image content typically preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="590dd-343">Typ MIME typu zawartości obrazu, który zwykle jest preferowany przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-343">The MIME type of the type of image content typically preferred by the browser.</span></span> <span data-ttu-id="590dd-344">Wartość domyślna to <see langword="image/gif" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-344">The default is <see langword="image/gif" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-345">Poniższy przykład kodu pokazuje, jak określić typ obrazu, który zwykle jest preferowany przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-345">The following code example shows how to determine the type of image typically preferred by a browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-346">Zwraca typ MIME typu zawartości zwykle preferowany przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-346">Returns the MIME type of the type of content typically preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="590dd-347">Typ MIME typu zawartości zwykle preferowany przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-347">The MIME type of the type of content typically preferred by the browser.</span></span> <span data-ttu-id="590dd-348">Wartość domyślna to <see langword="text/html" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-348">The default is <see langword="text/html" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-349">Poniższy przykład kodu pokazuje, jak określić typ MIME zwykle preferowany przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-349">The following code example shows how to determine the MIME type typically preferred by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingType">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-350">Pobiera nazwę ogólną dla typu zawartości preferowanej przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-350">Gets the general name for the type of content that the browser prefers.</span></span></summary>
        <value><span data-ttu-id="590dd-351"><see langword="html32" />lub <see langword="chtml10" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-351"><see langword="html32" /> or <see langword="chtml10" />.</span></span> <span data-ttu-id="590dd-352">Wartość domyślna to <see langword="html32" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-352">The default is <see langword="html32" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-353">Poniższy przykład kodu pokazuje, jak określić typ zawartości preferowanej przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-353">The following code example shows how to determine the type of content that the browser prefers.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRequestEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredRequestEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRequestEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRequestEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRequestEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-354">Pobiera kodowanie żądania preferowane przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-354">Gets the request encoding preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="590dd-355">Kodowanie żądania preferowane przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-355">The request encoding preferred by the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredResponseEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredResponseEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredResponseEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredResponseEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-356">Pobiera kodowanie odpowiedzi preferowane przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-356">Gets the response encoding preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="590dd-357">Kodowanie odpowiedzi preferowane przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-357">The response encoding preferred by the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreakBeforeWmlSelectAndInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreakBeforeWmlSelectAndInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreakBeforeWmlSelectAndInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreakBeforeWmlSelectAndInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-358">Pobiera wartość wskazującą, czy przeglądarka renderuje podział wiersza przed elementem <see langword="&lt;select&gt;" /> lub <see langword="&lt;input&gt;" /> .</span><span class="sxs-lookup"><span data-stu-id="590dd-358">Gets a value indicating whether the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-359"><see langword="true" />Jeśli przeglądarka renderuje podział wiersza przed <see langword="&lt;select&gt;" /> lub <see langword="&lt;input&gt;" /> elementów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-359"><see langword="true" /> if the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-360">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-361"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-361">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="590dd-362">Jeśli `true`, zawartość następująca `<select>` lub `<input>` elementy zostaną automatycznie umieszczone w nowym wierszu.</span><span class="sxs-lookup"><span data-stu-id="590dd-362">If `true`, content following `<select>` or `<input>` elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-363">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje podział wiersza przed elementem `<select>` lub `<input>` .</span><span class="sxs-lookup"><span data-stu-id="590dd-363">The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterHtmlLists">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterHtmlLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterHtmlLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterHtmlLists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterHtmlLists : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-364">Pobiera wartość wskazującą, czy przeglądarka renderuje podział wiersza po elementach listy elementów.</span><span class="sxs-lookup"><span data-stu-id="590dd-364">Gets a value indicating whether the browser renders a line break after list-item elements.</span></span></summary>
        <value><span data-ttu-id="590dd-365"><see langword="true" />Jeśli przeglądarka renderuje podział wiersza po elementach listy elementów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-365"><see langword="true" /> if the browser renders a line break after list-item elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-366">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-366">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-367">Jeśli `true`zawartość następujących elementów listy zostanie automatycznie umieszczona w nowym wierszu.</span><span class="sxs-lookup"><span data-stu-id="590dd-367">If `true`, content following list-item elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-368">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje podział wiersza po elementach listy elementów.</span><span class="sxs-lookup"><span data-stu-id="590dd-368">The following code example shows how to determine whether the browser renders a line break after list-item elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlAnchor">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlAnchor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlAnchor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-369">Pobiera wartość wskazującą, czy przeglądarka renderuje podział wiersza po autonomicznym elemencie HTML <see langword="&lt;a&gt;" /> (zakotwiczenie).</span><span class="sxs-lookup"><span data-stu-id="590dd-369">Gets a value indicating whether the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></summary>
        <value><span data-ttu-id="590dd-370"><see langword="true" />Jeśli przeglądarka renderuje podział wiersza po autonomicznym elemencie HTML <see langword="&lt;a&gt;" /> (zakotwiczenie); <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-370"><see langword="true" /> if the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-371">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-371">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-372"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-372">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="590dd-373">Jeśli `true`zawartość po autonomicznym elemencie HTML `<a>` (kotwicy) zostanie automatycznie umieszczona w nowym wierszu.</span><span class="sxs-lookup"><span data-stu-id="590dd-373">If `true`, content following a stand-alone HTML `<a>` (anchor) element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-374">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje podział wiersza po autonomicznym WML `<a>` (zakotwiczenie).</span><span class="sxs-lookup"><span data-stu-id="590dd-374">The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-375">Pobiera wartość wskazującą, czy przeglądarka renderuje podział wiersza po elemencie HTML <see langword="&lt;input&gt;" /> .</span><span class="sxs-lookup"><span data-stu-id="590dd-375">Gets a value indicating whether the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="590dd-376"><see langword="true" />Jeśli przeglądarka renderuje podział wiersza po elemencie HTML <see langword="&lt;input&gt;" /> ; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-376"><see langword="true" /> if the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-377">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-377">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-378"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-378">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="590dd-379">Jeśli `true`zawartość po elemencie HTML `<input>` zostanie automatycznie umieszczona w nowym wierszu.</span><span class="sxs-lookup"><span data-stu-id="590dd-379">If `true`, content following an HTML `<input>` element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-380">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje podział wiersza po elemencie HTML `<input>` .</span><span class="sxs-lookup"><span data-stu-id="590dd-380">The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlDoAcceptsInline">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlDoAcceptsInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlDoAcceptsInline" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlDoAcceptsInline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlDoAcceptsInline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlDoAcceptsInline : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-381">Pobiera wartość wskazującą, czy przeglądarka urządzenia przenośnego renderuje konstrukcję WML <see langword="do" />jako przycisk wbudowany, a nie jako klucz nieelastyczny.</span><span class="sxs-lookup"><span data-stu-id="590dd-381">Gets a value indicating whether the mobile-device browser renders a WML <see langword="do" />-based form accept construct as an inline button rather than as a soft key.</span></span></summary>
        <value><span data-ttu-id="590dd-382"><see langword="true" />Jeśli przeglądarka urządzenia przenośnego renderuje konstrukcję WML <see langword="do" />z wykorzystaniem formularza jako przycisk wbudowany; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-382"><see langword="true" /> if the mobile-device browser renders a WML <see langword="do" />-based form-accept construct as an inline button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-383">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-383">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-384"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-384">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-385">Poniższy przykład kodu pokazuje, w jaki sposób można określić, czy przeglądarka renderuje konstrukcję WML `do`z wykorzystaniem formularza jako przycisk wbudowany.</span><span class="sxs-lookup"><span data-stu-id="590dd-385">The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlSelectsAsMenuCards">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlSelectsAsMenuCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlSelectsAsMenuCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlSelectsAsMenuCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlSelectsAsMenuCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-386">Pobiera wartość wskazującą, czy przeglądarka renderuje elementy <see langword="&lt;select&gt;" /> WML jako karty menu, a nie jako pole kombi.</span><span class="sxs-lookup"><span data-stu-id="590dd-386">Gets a value indicating whether the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards, rather than as a combo box.</span></span></summary>
        <value><span data-ttu-id="590dd-387"><see langword="true" />Jeśli przeglądarka renderuje elementy <see langword="&lt;select&gt;" /> WML jako karty menu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-387"><see langword="true" /> if the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-388">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-388">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-389"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych z WML.</span><span class="sxs-lookup"><span data-stu-id="590dd-389">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-390">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka renderuje elementy `<select>` WML jako karty menu.</span><span class="sxs-lookup"><span data-stu-id="590dd-390">The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetaTagNameValue">
      <MemberSignature Language="C#" Value="public virtual string RequiredMetaTagNameValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredMetaTagNameValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetaTagNameValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredMetaTagNameValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredMetaTagNameValue : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-391">Używane wewnętrznie do tworzenia tagów Meta wymaganych przez niektóre przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-391">Used internally to produce a meta-tag required by some browsers.</span></span></summary>
        <value><span data-ttu-id="590dd-392">Meta-tag wymagany przez niektóre przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-392">A meta-tag required by some browsers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-393">Przeznaczone wyłącznie do użytku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="590dd-393">Intended for internal use only.</span></span> <span data-ttu-id="590dd-394">Aby przeglądarka była poprawnie renderowana, niektóre przeglądarki wymagają tagu Meta podobnego do poniższego.</span><span class="sxs-lookup"><span data-stu-id="590dd-394">Some browsers require a meta-tag similar to the following for the browser to render properly.</span></span>  
  
```  
<META NAME="NAME" CONTENT="VALUE">  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresAttributeColonSubstitution">
      <MemberSignature Language="C#" Value="public virtual bool RequiresAttributeColonSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAttributeColonSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresAttributeColonSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresAttributeColonSubstitution { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresAttributeColonSubstitution : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-395">Pobiera wartość wskazującą, czy przeglądarka wymaga, aby wartości atrybutów elementu były zastępowane innym znakiem.</span><span class="sxs-lookup"><span data-stu-id="590dd-395">Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</span></span></summary>
        <value><span data-ttu-id="590dd-396"><see langword="true" />Jeśli przeglądarka wymaga, aby znaki dwubajtowe w wartości atrybutów elementu były zastępowane innym znakiem; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-396"><see langword="true" /> if the browser requires colons in element attribute values to be substituted with a different character; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-397">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-397">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-398">Niektóre przeglądarki nie rozpoznają dwukropka w wartości atrybutów elementu.</span><span class="sxs-lookup"><span data-stu-id="590dd-398">Some browsers do not recognize colons in element attribute values.</span></span> <span data-ttu-id="590dd-399">Jeśli `true`, inny znak zostanie zastąpiony podczas renderowania i zwracany w danych ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-399">If `true`, a different character will be substituted on rendering and returned in postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-400">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga, aby znaki dwukropka w wartości atrybutów elementu były zastępowane innym znakiem.</span><span class="sxs-lookup"><span data-stu-id="590dd-400">The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresContentTypeMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresContentTypeMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresContentTypeMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresContentTypeMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresContentTypeMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresContentTypeMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-401">Pobiera wartość wskazującą, czy przeglądarka wymaga elementu HTML <see langword="&lt;meta&gt;" /> <see langword="content-type" /> , dla którego określono atrybut.</span><span class="sxs-lookup"><span data-stu-id="590dd-401">Gets a value indicating whether the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified.</span></span></summary>
        <value><span data-ttu-id="590dd-402"><see langword="true" />Jeśli przeglądarka wymaga elementu HTML <see langword="&lt;meta&gt;" /> , dla <see langword="content-type" /> którego atrybut jest określony; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-402"><see langword="true" /> if the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-403">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-403">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-404">W `true`przypadku, gdy karty sterujące serwera wstawą następujący tag do elementu `<head>` HTML strony sieci Web:</span><span class="sxs-lookup"><span data-stu-id="590dd-404">If `true`, server-control adapters insert the following tag into the HTML `<head>` element of a Web page:</span></span>  
  
```  
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT=""; CHARSET="">  
```  
  
 <span data-ttu-id="590dd-405">W tym przykładzie `CONTENT` jest wartością zwracaną <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> przez właściwość i `charset` jest używanym kodowaniem znaków.</span><span class="sxs-lookup"><span data-stu-id="590dd-405">In this example, `CONTENT` is the value returned by the <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> property, and `charset` is the character encoding used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-406">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga elementu HTML `<meta>` , dla `content-type` którego określono atrybut.</span><span class="sxs-lookup"><span data-stu-id="590dd-406">The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresControlStateInSession">
      <MemberSignature Language="C#" Value="public bool RequiresControlStateInSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresControlStateInSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresControlStateInSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresControlStateInSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresControlStateInSession : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-407">Pobiera wartość wskazującą, czy przeglądarka wymaga, aby stan kontroli był utrzymywany w sesjach.</span><span class="sxs-lookup"><span data-stu-id="590dd-407">Gets a value indicating whether the browser requires control state to be maintained in sessions.</span></span></summary>
        <value><span data-ttu-id="590dd-408"><see langword="true" />Jeśli przeglądarka wymaga, aby stan kontroli był utrzymywany w sesjach. w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-408"><see langword="true" /> if the browser requires control state to be maintained in sessions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-409">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-409">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-410">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga, aby stan kontroli był utrzymywany w sesjach.</span><span class="sxs-lookup"><span data-stu-id="590dd-410">The following code example shows how to determine whether the browser requires control state to be maintained in sessions.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/CS/browsercaps.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/VB/browsercaps_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDBCSCharacter">
      <MemberSignature Language="C#" Value="public virtual bool RequiresDBCSCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDBCSCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresDBCSCharacter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresDBCSCharacter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDBCSCharacter : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-411">Pobiera wartość wskazującą, czy przeglądarka wymaga dwubajtowego zestawu znaków.</span><span class="sxs-lookup"><span data-stu-id="590dd-411">Gets a value indicating whether the browser requires a double-byte character set.</span></span></summary>
        <value><span data-ttu-id="590dd-412"><see langword="true" />Jeśli w przeglądarce jest wymagany zestaw znaków dwubajtowych; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-412"><see langword="true" /> if the browser requires a double-byte character set; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-413">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-413">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-414">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga zestawu znaków dwubajtowych.</span><span class="sxs-lookup"><span data-stu-id="590dd-414">The following code example shows how to determine whether the browser requires a double-byte character set.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresHtmlAdaptiveErrorReporting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresHtmlAdaptiveErrorReporting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresHtmlAdaptiveErrorReporting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresHtmlAdaptiveErrorReporting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-415">Pobiera wartość wskazującą, czy przeglądarka wymaga niestandardowych komunikatów o błędach.</span><span class="sxs-lookup"><span data-stu-id="590dd-415">Gets a value indicating whether the browser requires nonstandard error messages.</span></span></summary>
        <value><span data-ttu-id="590dd-416"><see langword="true" />Jeśli przeglądarka wymaga niestandardowych komunikatów o błędach; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-416"><see langword="true" /> if the browser requires nonstandard error messages; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-417">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-417">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-418">Jeśli `true`przeglądarka nie jest prawidłowo renderowana komunikatów o błędach http.</span><span class="sxs-lookup"><span data-stu-id="590dd-418">If `true`, the browser does not properly render HTTP error messages.</span></span> <span data-ttu-id="590dd-419">Aby rozwiązać ten problem, karty sterowania serwera generują niestandardową stronę błędu dla przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-419">To correct this, server control adapters generate a custom error page for the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-420">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga niestandardowych komunikatów o błędach.</span><span class="sxs-lookup"><span data-stu-id="590dd-420">The following code example shows how to determine whether the browser requires nonstandard error messages.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresLeadingPageBreak">
      <MemberSignature Language="C#" Value="public virtual bool RequiresLeadingPageBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresLeadingPageBreak" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresLeadingPageBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresLeadingPageBreak { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresLeadingPageBreak : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-421">Pobiera wartość wskazującą, czy przeglądarka wymaga pierwszego elementu w treści strony sieci Web jako elementu HTML <see langword="&lt;br&gt;" /> .</span><span class="sxs-lookup"><span data-stu-id="590dd-421">Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML <see langword="&lt;br&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="590dd-422"><see langword="true" />Jeśli przeglądarka wymaga pierwszego elementu w treści strony sieci Web jako elementu HTML <see langword="BR" /> ; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-422"><see langword="true" /> if the browser requires the first element in the body of a Web page to be an HTML <see langword="BR" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-423">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-423">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-424">W `true`takim przypadku karty sterujące serwera wstawiają dodatkowy `<br>` element bezpośrednio po `<body>` tagu na stronie sieci Web.</span><span class="sxs-lookup"><span data-stu-id="590dd-424">If `true`, server-control adapters insert an additional `<br>` element immediately following the `<body>` tag in a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-425">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga pierwszego elementu w treści strony sieci Web jako elementu HTML `<br>` .</span><span class="sxs-lookup"><span data-stu-id="590dd-425">The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresNoBreakInFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresNoBreakInFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresNoBreakInFormatting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresNoBreakInFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresNoBreakInFormatting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresNoBreakInFormatting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-426">Pobiera wartość wskazującą, czy przeglądarka nie obsługuje elementów HTML <see langword="&lt;br&gt;" /> do formatowania podziałów wierszy.</span><span class="sxs-lookup"><span data-stu-id="590dd-426">Gets a value indicating whether the browser does not support HTML <see langword="&lt;br&gt;" /> elements to format line breaks.</span></span></summary>
        <value><span data-ttu-id="590dd-427"><see langword="true" />Jeśli przeglądarka nie obsługuje elementów HTML <see langword="&lt;br&gt;" /> ; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-427"><see langword="true" /> if the browser does not support HTML <see langword="&lt;br&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-428">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-428">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-429">Jeśli `true`przeglądarka nie będzie poprawnie renderować stron zawierających element HTML `<br>` .</span><span class="sxs-lookup"><span data-stu-id="590dd-429">If `true`, the browser will not correctly render pages containing the HTML `<br>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-430">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka nie obsługuje elementów HTML `<br>` do formatowania podziałów wierszy.</span><span class="sxs-lookup"><span data-stu-id="590dd-430">The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresOutputOptimization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresOutputOptimization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOutputOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresOutputOptimization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresOutputOptimization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresOutputOptimization : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-431">Pobiera wartość wskazującą, czy przeglądarka wymaga stron zawierających zoptymalizowaną pod kątem rozmiaru postać znaczników języka znaczników.</span><span class="sxs-lookup"><span data-stu-id="590dd-431">Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span></summary>
        <value><span data-ttu-id="590dd-432"><see langword="true" />Jeśli przeglądarka wymaga, aby strony zawierały postać zoptymalizowaną pod kątem rozmiaru znaczników języka Markup Language; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-432"><see langword="true" /> if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-433">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-433">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-434">Jeśli `true`karty sterowania serwera generują minimalne dane wyjściowe, aby zmniejszyć rozmiar wynikowej strony.</span><span class="sxs-lookup"><span data-stu-id="590dd-434">If `true`, server control adapters generate minimal output to reduce the size of the resulting page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="590dd-435"><xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> Właściwość zwraca`true` dla przeglądarek zgodnych z trybem i.</span><span class="sxs-lookup"><span data-stu-id="590dd-435">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> property returns `true` for i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-436">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga, aby strony zawierały postać zoptymalizowaną pod kątem rozmiaru znaczników języka.</span><span class="sxs-lookup"><span data-stu-id="590dd-436">The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPhoneNumbersAsPlainText">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPhoneNumbersAsPlainText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPhoneNumbersAsPlainText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPhoneNumbersAsPlainText { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresPhoneNumbersAsPlainText : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-437">Pobiera wartość wskazującą, czy przeglądarka obsługuje wybieranie numerów telefonów na podstawie zwykłego tekstu, czy wymaga zastosowania znaczników specjalnych.</span><span class="sxs-lookup"><span data-stu-id="590dd-437">Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span></summary>
        <value><span data-ttu-id="590dd-438"><see langword="true" />Jeśli przeglądarka obsługuje Telefonowanie na podstawie tylko zwykłego tekstu, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-438"><see langword="true" /> if the browser supports phone dialing based on plain text only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-439">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-439">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-440">Właściwość ma zastosowanie tylko do przeglądarek, dla <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> których właściwość jest `true`. <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A></span><span class="sxs-lookup"><span data-stu-id="590dd-440">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> property applies only to browsers for which the <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-441">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje wybieranie numerów telefonów na podstawie zwykłego tekstu, czy wymaga znaczników specjalnych.</span><span class="sxs-lookup"><span data-stu-id="590dd-441">The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSpecialViewStateEncoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSpecialViewStateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresSpecialViewStateEncoding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresSpecialViewStateEncoding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresSpecialViewStateEncoding : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-442">Pobiera wartość wskazującą, czy przeglądarka wymaga <see langword="VIEWSTATE" /> , aby wartości były specjalnie zakodowane.</span><span class="sxs-lookup"><span data-stu-id="590dd-442">Gets a value indicating whether the browser requires <see langword="VIEWSTATE" /> values to be specially encoded.</span></span></summary>
        <value><span data-ttu-id="590dd-443"><see langword="true" />Jeśli przeglądarka wymaga <see langword="VIEWSTATE" /> , aby wartości były specjalnie kodowane; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-443"><see langword="true" /> if the browser requires <see langword="VIEWSTATE" /> values to be specially encoded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-444">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-444">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-445">HTTP jest protokołem bezstanowym `VIEWSTATE` i jest jednym mechanizmem służącym do utrwalania zmian klienta w wielu żądaniach.</span><span class="sxs-lookup"><span data-stu-id="590dd-445">HTTP is a stateless protocol, and `VIEWSTATE` is one mechanism used to persist client changes across multiple requests.</span></span> <span data-ttu-id="590dd-446">Każda kontrolka na stronie sieci Web zawiera <xref:System.Web.UI.Control.ViewState%2A> właściwość, która reprezentuje nagromadzenie wszelkich zmian wprowadzonych przez klienta.</span><span class="sxs-lookup"><span data-stu-id="590dd-446">Each control on a Web page contains a <xref:System.Web.UI.Control.ViewState%2A> property, which represents the accumulation of any changes made by the client.</span></span> <span data-ttu-id="590dd-447">Na stronie formularzy sieci Web te zmiany są kodowane w danych ogłaszania zwrotnego `value` jako `hidden`element HTML `<input>` z `type` atrybutem.</span><span class="sxs-lookup"><span data-stu-id="590dd-447">In a Web Forms page, these changes are encoded in postback data as the `value` of an HTML `<input>` element with a `type` attribute of `hidden`.</span></span> <span data-ttu-id="590dd-448">Na przykład:</span><span class="sxs-lookup"><span data-stu-id="590dd-448">For example:</span></span>  
  
```  
<input type="hidden" name="__VIEWSTATE" value="t0PH_u56?cDxleHQ7P=" />  
```  
  
 Jeśli `true`znaki inne niż alfabetyczne `VIEWSTATE` w wartości nie będą wysyłane prawidłowo przez przeglądarkę ani przez bramę pośrednią. <span data-ttu-id="590dd-450">Aby rozwiązać ten krok, karty sterowania serwera zastępują znaki inne niż alfabetyczne `VIEWSTATE` w wartości, które nie wymagają kodowania w żądaniach HTTP.</span><span class="sxs-lookup"><span data-stu-id="590dd-450">To correct this, server-control adapters replace non-alphabetic characters in the `VIEWSTATE` value with ones that do not require encoding in HTTP requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-451">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga `VIEWSTATE` , aby wartości były specjalnie zakodowane.</span><span class="sxs-lookup"><span data-stu-id="590dd-451">The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueFilePathSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueFilePathSuffix { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueFilePathSuffix : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-452">Pobiera wartość wskazującą, czy przeglądarka wymaga unikatowych adresów URL akcji formularza.</span><span class="sxs-lookup"><span data-stu-id="590dd-452">Gets a value indicating whether the browser requires unique form-action URLs.</span></span></summary>
        <value><span data-ttu-id="590dd-453"><see langword="true" />Jeśli przeglądarka wymaga unikatowych adresów URL akcji formularza; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-453"><see langword="true" /> if the browser requires unique form-action URLs; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-454">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-454">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-455">Samodzielnie odwołujący się `<form>` element HTML, dla `action` którego atrybut określa własny adres URL.</span><span class="sxs-lookup"><span data-stu-id="590dd-455">A self-referring HTML `<form>` element is one for which the `action` attribute specifies its own URL.</span></span> <span data-ttu-id="590dd-456">Jeśli `true`formularze z odwołaniami do siebie nie zwracają prawidłowych wyników.</span><span class="sxs-lookup"><span data-stu-id="590dd-456">If `true`, self-referring forms do not return the correct results.</span></span> <span data-ttu-id="590dd-457">Jest to spowodowane buforowaniem przez przeglądarkę lub bramę pośrednią.</span><span class="sxs-lookup"><span data-stu-id="590dd-457">This is due to caching by either the browser or an intermediate gateway.</span></span> <span data-ttu-id="590dd-458">Aby rozwiązać ten krok, karty sterowania serwera dołączają domyślny ciąg`__ufps=``uniquefilepathsuffix`zapytania () do wartości adresu URL akcji formularza z odwołaniami do własnych formularzy.</span><span class="sxs-lookup"><span data-stu-id="590dd-458">To correct this, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto the form-action URL values of self-referring forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-459">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga unikatowych adresów URL akcji formularza.</span><span class="sxs-lookup"><span data-stu-id="590dd-459">The following code example shows how to determine whether the browser requires unique form-action URLs.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlCheckboxNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlCheckboxNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlCheckboxNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlCheckboxNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlCheckboxNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-460">Pobiera wartość wskazującą, czy przeglądarka wymaga unikatowych <see langword="name" /> wartości atrybutów wielu elementów HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> .</span><span class="sxs-lookup"><span data-stu-id="590dd-460">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-461"><see langword="true" />Jeśli przeglądarka wymaga unikatowych <see langword="name" /> wartości atrybutów wielu elementów HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> ; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="590dd-461"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-462">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-462">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-463">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga unikatowych `NAME` wartości atrybutów wielu elementów HTML `<input type="checkbox">` .</span><span class="sxs-lookup"><span data-stu-id="590dd-463">The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type="checkbox">` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlInputNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlInputNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlInputNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlInputNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlInputNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-464">Pobiera wartość wskazującą, czy przeglądarka wymaga unikatowych <see langword="name" /> wartości atrybutów wielu elementów HTML <see langword="&lt;input&gt;" /> .</span><span class="sxs-lookup"><span data-stu-id="590dd-464">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-465"><see langword="true" />Jeśli przeglądarka wymaga unikatowych <see langword="name" /> wartości atrybutów wielu elementów HTML <see langword="&lt;input&gt;" /> ; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="590dd-465"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-466">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-466">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-467">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka wymaga unikatowych `name` wartości atrybutów wielu elementów HTML `<input>` .</span><span class="sxs-lookup"><span data-stu-id="590dd-467">The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUrlEncodedPostfieldValues">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUrlEncodedPostfieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUrlEncodedPostfieldValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUrlEncodedPostfieldValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUrlEncodedPostfieldValues : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-468">Pobiera wartość wskazującą, czy dane zwrotne wysyłane przez przeglądarkę będą się <see langword="UrlEncoded" />znajdować.</span><span class="sxs-lookup"><span data-stu-id="590dd-468">Gets a value indicating whether postback data sent by the browser will be <see langword="UrlEncoded" />.</span></span></summary>
        <value><span data-ttu-id="590dd-469"><see langword="true" />Jeśli dane ogłaszania zwrotnego są wysyłane przez <see langword="UrlEncoded" />przeglądarkę; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-469"><see langword="true" /> if postback data sent by the browser will be <see langword="UrlEncoded" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-470">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-470">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-471">Poniższy przykład kodu pokazuje, jak ustalić, czy dane dotyczące `UrlEncodes` programu ogłaszania w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="590dd-471">The following code example shows how to determine whether the browser `UrlEncodes` postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenBitDepth">
      <MemberSignature Language="C#" Value="public virtual int ScreenBitDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenBitDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenBitDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenBitDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenBitDepth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-472">Zwraca głębokość wyświetlania (w bitach na piksel).</span><span class="sxs-lookup"><span data-stu-id="590dd-472">Returns the depth of the display, in bits per pixel.</span></span></summary>
        <value><span data-ttu-id="590dd-473">Głębokość wyświetlania w bitach na piksel.</span><span class="sxs-lookup"><span data-stu-id="590dd-473">The depth of the display, in bits per pixel.</span></span> <span data-ttu-id="590dd-474">Wartość domyślna to <see langword="1" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-474">The default is <see langword="1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-475">Zwraca przybliżoną wysokość wyświetlaną w wierszach znaku.</span><span class="sxs-lookup"><span data-stu-id="590dd-475">Returns the approximate height of the display, in character lines.</span></span></summary>
        <value><span data-ttu-id="590dd-476">Przybliżona wysokość wyświetlania w wierszach znaku.</span><span class="sxs-lookup"><span data-stu-id="590dd-476">The approximate height of the display, in character lines.</span></span> <span data-ttu-id="590dd-477">Wartość domyślna to <see langword="6" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-477">The default is <see langword="6" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-478">Zwracana wartość może pochodzić z zajmowanego rozmiaru znaku i rzeczywistego rozmiaru pikseli ekranu.</span><span class="sxs-lookup"><span data-stu-id="590dd-478">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="590dd-479">Algorytm służący do określania wysokości używa kombinacji domyślnych rozmiarów czcionek (z pliku. config), rozmiarów specyficznych dla przeglądarki (ponownie z pliku. config) i jawnych nagłówków wysyłanych przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-479">The algorithm for determining the height uses a combination of the default font sizes (from a .config file), browser-specific sizes (again, from a .config file), and explicit headers sent by the browser.</span></span> <span data-ttu-id="590dd-480">Niektóre przeglądarki mogą polegać na wewnętrznych wartościach domyślnych, które mają jedynie przybliżoną rzeczywistą wysokość.</span><span class="sxs-lookup"><span data-stu-id="590dd-480">Some browsers might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-481">Zwraca przybliżoną szerokość wyświetlaną w znakach.</span><span class="sxs-lookup"><span data-stu-id="590dd-481">Returns the approximate width of the display, in characters.</span></span></summary>
        <value><span data-ttu-id="590dd-482">Przybliżona szerokość wyświetlania w znakach.</span><span class="sxs-lookup"><span data-stu-id="590dd-482">The approximate width of the display, in characters.</span></span> <span data-ttu-id="590dd-483">Wartość domyślna to <see langword="12" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-483">The default is <see langword="12" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-484">Zwracana wartość może pochodzić z zajmowanego rozmiaru znaku i rzeczywistego rozmiaru pikseli ekranu.</span><span class="sxs-lookup"><span data-stu-id="590dd-484">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="590dd-485">Algorytm służący do określania szerokości używa kombinacji domyślnych rozmiarów czcionek (z pliku. config), rozmiarów specyficznych dla urządzeń (ponownie z pliku. config) i jawnych nagłówków wysyłanych przez urządzenia.</span><span class="sxs-lookup"><span data-stu-id="590dd-485">The algorithm for determining the width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="590dd-486">Te wartości nie zawsze są dokładne (zwłaszcza w przypadku czcionek o zmiennej szerokości, te wartości są przybliżone).</span><span class="sxs-lookup"><span data-stu-id="590dd-486">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="590dd-487">Niektóre urządzenia mogą opierać się na wewnętrznych wartościach domyślnych, które mają jedynie przybliżoną rzeczywistą szerokość.</span><span class="sxs-lookup"><span data-stu-id="590dd-487">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-488">Zwraca przybliżoną wysokość wyświetlaną (w pikselach).</span><span class="sxs-lookup"><span data-stu-id="590dd-488">Returns the approximate height of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="590dd-489">Przybliżona wysokość wyświetlania (w pikselach).</span><span class="sxs-lookup"><span data-stu-id="590dd-489">The approximate height of the display, in pixels.</span></span> <span data-ttu-id="590dd-490">Wartość domyślna to <see langword="72" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-490">The default is <see langword="72" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-491">Zwracana wartość może pochodzić z zajmowanego rozmiaru znaku i wysokości znaków.</span><span class="sxs-lookup"><span data-stu-id="590dd-491">The returned value can be derived from the assumed character size and character height.</span></span> <span data-ttu-id="590dd-492">Algorytm służący do określania wysokości pikseli używa kombinacji domyślnych rozmiarów czcionek (z pliku. config), rozmiarów specyficznych dla urządzeń (ponownie z pliku. config) i jawnych nagłówków wysyłanych przez urządzenia.</span><span class="sxs-lookup"><span data-stu-id="590dd-492">The algorithm for determining the pixel height uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="590dd-493">Te wartości nie zawsze są dokładne.</span><span class="sxs-lookup"><span data-stu-id="590dd-493">These values are not necessarily exact.</span></span> <span data-ttu-id="590dd-494">Niektóre urządzenia mogą polegać na wewnętrznych wartościach domyślnych, które mają jedynie przybliżoną rzeczywistą wysokość.</span><span class="sxs-lookup"><span data-stu-id="590dd-494">Some devices might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-495">Zwraca przybliżoną szerokość ekranu (w pikselach).</span><span class="sxs-lookup"><span data-stu-id="590dd-495">Returns the approximate width of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="590dd-496">Przybliżona szerokość ekranu (w pikselach).</span><span class="sxs-lookup"><span data-stu-id="590dd-496">The approximate width of the display, in pixels.</span></span> <span data-ttu-id="590dd-497">Wartość domyślna to <see langword="96" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-497">The default is <see langword="96" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-498">Zwracana wartość może pochodzić z zajmowanego rozmiaru znaku i szerokości znaków.</span><span class="sxs-lookup"><span data-stu-id="590dd-498">The returned value can be derived from the assumed character size and character width.</span></span> <span data-ttu-id="590dd-499">Algorytm służący do określania szerokości pikseli używa kombinacji domyślnych rozmiarów czcionek (z pliku. config), rozmiarów specyficznych dla urządzeń (ponownie z pliku. config) i jawnych nagłówków wysyłanych przez urządzenia.</span><span class="sxs-lookup"><span data-stu-id="590dd-499">The algorithm for determining the pixel width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="590dd-500">Te wartości nie zawsze są dokładne (zwłaszcza w przypadku czcionek o zmiennej szerokości, te wartości są przybliżone).</span><span class="sxs-lookup"><span data-stu-id="590dd-500">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="590dd-501">Niektóre urządzenia mogą opierać się na wewnętrznych wartościach domyślnych, które mają jedynie przybliżoną rzeczywistą szerokość.</span><span class="sxs-lookup"><span data-stu-id="590dd-501">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAccesskeyAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAccesskeyAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAccesskeyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAccesskeyAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAccesskeyAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAccesskeyAttribute : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-502">Pobiera wartość wskazującą, <see langword="ACCESSKEY" /> czy przeglądarka obsługuje atrybut HTML <see langword="&lt;a&gt;" /> (zakotwiczenie) i <see langword="&lt;input&gt;" /> elementy.</span><span class="sxs-lookup"><span data-stu-id="590dd-502">Gets a value indicating whether the browser supports the <see langword="ACCESSKEY" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-503"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="accesskey" /> atrybut HTML <see langword="&lt;a&gt;" /> (zakotwiczenie) i <see langword="&lt;input&gt;" /> elementów; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-503"><see langword="true" /> if the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-504">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-504">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-505">Ten `accesskey` atrybut rozszerza kontrolki formularzy i linków na stronie sieci Web na platformy mobilne i dostępne przez przypisanie klucza nietrwałego lub innego kontrolera na urządzeniu w celu korzystania z `<a>` kodu HTML (kotwicy `<input>` ) i elementów.</span><span class="sxs-lookup"><span data-stu-id="590dd-505">The `accesskey` attribute extends control of forms and links on a Web page to mobile and accessible platforms by assigning a soft key or other controller on the device to interact with HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-506">Poniższy przykład kodu pokazuje, `accesskey` jak ustalić, czy przeglądarka obsługuje atrybut HTML `<a>` (zakotwiczenie) i `<input>` elementy.</span><span class="sxs-lookup"><span data-stu-id="590dd-506">The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBodyColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBodyColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBodyColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBodyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBodyColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBodyColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-507">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="bgcolor" /> atrybut elementu HTML. <see langword="&lt;body&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-507">Gets a value indicating whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="590dd-508"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="bgcolor" /> atrybut elementu HTML <see langword="&lt;body&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-508"><see langword="true" /> if the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-509">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-509">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-510">Poniższy przykład kodu pokazuje, `bgcolor` jak ustalić, czy przeglądarka obsługuje atrybut elementu HTML. `<body>`</span><span class="sxs-lookup"><span data-stu-id="590dd-510">The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-511">Pobiera wartość wskazującą, czy przeglądarka obsługuje elementy HTML <see langword="&lt;b&gt;" /> do formatowania pogrubionego tekstu.</span><span class="sxs-lookup"><span data-stu-id="590dd-511">Gets a value indicating whether the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text.</span></span></summary>
        <value><span data-ttu-id="590dd-512"><see langword="true" />Jeśli przeglądarka obsługuje elementy HTML <see langword="&lt;b&gt;" /> do formatowania pogrubionego tekstu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-512"><see langword="true" /> if the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-513">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-513">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-514">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje elementy HTML `<b>` do formatowania pogrubionego tekstu.</span><span class="sxs-lookup"><span data-stu-id="590dd-514">The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCacheControlMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCacheControlMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCacheControlMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCacheControlMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCacheControlMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCacheControlMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-515">Pobiera wartość wskazującą, czy przeglądarka obsługuje <see langword="cache-control" /> wartość <see langword="http-equiv" /> atrybutu elementów HTML <see langword="&lt;meta&gt;" /> .</span><span class="sxs-lookup"><span data-stu-id="590dd-515">Gets a value indicating whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-516"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="cache-control" /> wartość <see langword="http-equiv" /> atrybutu <see langword="&lt;meta&gt;" /> elementów<see langword="false" />HTML; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-516"><see langword="true" /> if the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-517">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-517">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-518">Wartość atrybutu elementów HTML`<meta>` umożliwia kontrolę nad buforowaniem klienta pobranej zawartości, która obejmuje strony sieci Web. `http-equiv` `cache-control`</span><span class="sxs-lookup"><span data-stu-id="590dd-518">The `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements allows control over client caching of downloaded content, which includes Web pages.</span></span> <span data-ttu-id="590dd-519">Poniższy fragment kodu HTML przedstawia przykład:</span><span class="sxs-lookup"><span data-stu-id="590dd-519">The following HTML fragment shows an example:</span></span>  
  
```  
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"/>  
```  
  
 <span data-ttu-id="590dd-520">Jeśli `true`, dołączenie tego tagu `<head>` do elementu strony sieci Web powinno wymusić ponowne załadowanie przez przeglądarkę zawartości z serwera.</span><span class="sxs-lookup"><span data-stu-id="590dd-520">If `true`, the inclusion of this tag in the `<head>` element of a Web page should force the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="590dd-521">W `false`przypadku, gdy karty sterowania serwera dołączają domyślny`__ufps=``uniquefilepathsuffix`ciąg zapytania () do wartości adresu URL łącza, które jeszcze nie mają.</span><span class="sxs-lookup"><span data-stu-id="590dd-521">If `false`, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto link URL values that do not already have one.</span></span> <span data-ttu-id="590dd-522">Spowoduje to wymuszenie ponownego załadowania zawartości z serwera przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-522">This forces the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="590dd-523"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> Właściwość dotyczy również równoważnego formularza nagłówka http:</span><span class="sxs-lookup"><span data-stu-id="590dd-523">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> property also applies to the equivalent HTTP header form:</span></span>  
  
```  
CACHE-CONTROL: NO-CACHE  
```  
  
   
  
## Examples  
 <span data-ttu-id="590dd-524">Poniższy przykład kodu pokazuje, `cache-control` jak ustalić, czy przeglądarka obsługuje wartość `http-equiv` atrybutu elementów HTML `<meta>` .</span><span class="sxs-lookup"><span data-stu-id="590dd-524">The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCallback">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCallback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCallback : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-525">Pobiera wartość wskazującą, czy przeglądarka obsługuje skrypty wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-525">Gets a value indicating whether the browser supports callback scripts.</span></span></summary>
        <value><span data-ttu-id="590dd-526"><see langword="true" />Jeśli przeglądarka obsługuje skrypty wywołania zwrotnego; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-526"><see langword="true" /> if the browser supports callback scripts; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-527">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-527">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-528">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje skrypty wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-528">The following code example shows how to determine whether the browser supports callback scripts.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCss">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCss" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCss As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCss { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCss : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-529">Pobiera wartość wskazującą, czy przeglądarka obsługuje kaskadowe arkusze stylów (CSS).</span><span class="sxs-lookup"><span data-stu-id="590dd-529">Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</span></span></summary>
        <value><span data-ttu-id="590dd-530"><see langword="true" />Jeśli przeglądarka obsługuje CSS; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-530"><see langword="true" /> if the browser supports CSS; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-531">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-531">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-532">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje CSS.</span><span class="sxs-lookup"><span data-stu-id="590dd-532">The following code example shows how to determine whether the browser supports CSS.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivAlign">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivAlign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivAlign { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivAlign : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-533">Pobiera wartość wskazującą, <see langword="align" /> czy przeglądarka obsługuje atrybut elementów HTML. <see langword="&lt;div&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-533">Gets a value indicating whether the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-534"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="align" /> atrybut elementów HTML <see langword="&lt;div&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-534"><see langword="true" /> if the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-535">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-535">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-536">Elementy `<div>` HTML służą do grupowania wielu elementów HTML, aby można było zastosować do nich Style CSS jako całość.</span><span class="sxs-lookup"><span data-stu-id="590dd-536">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="590dd-537">Atrybut Ustawia wyrównanie `<div>` w poziomie grupy na stronie sieci Web. `align`</span><span class="sxs-lookup"><span data-stu-id="590dd-537">The `align` attribute sets the horizontal alignment of a `<div>` group on a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-538">Poniższy przykład kodu pokazuje, `align` jak ustalić, czy przeglądarka obsługuje atrybut elementów HTML. `<div>`</span><span class="sxs-lookup"><span data-stu-id="590dd-538">The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivNoWrap">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivNoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivNoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivNoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivNoWrap { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivNoWrap : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-539">Pobiera wartość wskazującą, <see langword="nowrap" /> czy przeglądarka obsługuje atrybut elementów HTML. <see langword="&lt;div&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-539">Gets a value indicating whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-540"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="nowrap" /> atrybut elementów HTML <see langword="&lt;div&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-540"><see langword="true" /> if the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-541">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-541">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-542">Elementy `<div>` HTML służą do grupowania wielu elementów HTML, aby można było zastosować do nich Style CSS jako całość.</span><span class="sxs-lookup"><span data-stu-id="590dd-542">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="590dd-543">Ten `nowrap` atrybut określa, że elementy zawarte `<div>` w grupie powinny pozostać obok siebie bez zawijania do nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="590dd-543">The `nowrap` attribute specifies that the elements contained in the `<div>` group should remain adjacent to each other without wrapping to a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-544">Poniższy przykład kodu pokazuje, `nowrap` jak ustalić, czy przeglądarka obsługuje atrybut elementów HTML. `<div>`</span><span class="sxs-lookup"><span data-stu-id="590dd-544">The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEmptyStringInCookieValue">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEmptyStringInCookieValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEmptyStringInCookieValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEmptyStringInCookieValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEmptyStringInCookieValue : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-545">Pobiera wartość wskazującą, czy przeglądarka obsługuje ciągi puste (<see langword="null" />) w wartościach plików cookie.</span><span class="sxs-lookup"><span data-stu-id="590dd-545">Gets a value indicating whether the browser supports empty (<see langword="null" />) strings in cookie values.</span></span></summary>
        <value><span data-ttu-id="590dd-546"><see langword="true" />Jeśli przeglądarka obsługuje ciągi puste (<see langword="null" />) w wartościach plików cookie; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-546"><see langword="true" /> if the browser supports empty (<see langword="null" />) strings in cookie values; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-547">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-547">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-548">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje ciągi puste (`null`) w wartościach plików cookie.</span><span class="sxs-lookup"><span data-stu-id="590dd-548">The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-549">Pobiera wartość wskazującą, <see langword="color" /> czy przeglądarka obsługuje atrybut elementów HTML. <see langword="&lt;font&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-549">Gets a value indicating whether the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-550"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="color" /> atrybut elementów HTML <see langword="&lt;font&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-550"><see langword="true" /> if the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-551">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-551">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-552">Poniższy przykład kodu pokazuje, `color` jak ustalić, czy przeglądarka obsługuje atrybut elementów HTML. `<font>`</span><span class="sxs-lookup"><span data-stu-id="590dd-552">The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontName">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontName : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-553">Pobiera wartość wskazującą, <see langword="name" /> czy przeglądarka obsługuje atrybut elementów HTML. <see langword="&lt;font&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-553">Gets a value indicating whether the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-554"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="name" /> atrybut elementów HTML <see langword="&lt;font&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-554"><see langword="true" /> if the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-555">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-555">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-556">Poniższy przykład kodu pokazuje, `name` jak ustalić, czy przeglądarka obsługuje atrybut elementów HTML. `<font>`</span><span class="sxs-lookup"><span data-stu-id="590dd-556">The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontSize">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontSize : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-557">Pobiera wartość wskazującą, <see langword="size" /> czy przeglądarka obsługuje atrybut elementów HTML. <see langword="&lt;font&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-557">Gets a value indicating whether the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-558"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="size" /> atrybut elementów HTML <see langword="&lt;font&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-558"><see langword="true" /> if the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-559">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-559">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-560">Poniższy przykład kodu pokazuje, `size` jak ustalić, czy przeglądarka obsługuje atrybut elementów HTML. `<font>`</span><span class="sxs-lookup"><span data-stu-id="590dd-560">The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsImageSubmit">
      <MemberSignature Language="C#" Value="public virtual bool SupportsImageSubmit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsImageSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsImageSubmit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsImageSubmit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsImageSubmit : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-561">Pobiera wartość wskazującą, czy przeglądarka obsługuje użycie obrazu niestandardowego zamiast standardowego przycisku przesyłania formularza.</span><span class="sxs-lookup"><span data-stu-id="590dd-561">Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</span></span></summary>
        <value><span data-ttu-id="590dd-562"><see langword="true" />Jeśli przeglądarka obsługuje użycie obrazu niestandardowego zamiast standardowego przycisku przesyłania formularza; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-562"><see langword="true" /> if the browser supports using a custom image in place of a standard form Submit button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-563">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-563">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-564">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje używanie obrazu niestandardowego zamiast standardowego przycisku przesyłania formularza.</span><span class="sxs-lookup"><span data-stu-id="590dd-564">The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsIModeSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsIModeSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIModeSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsIModeSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsIModeSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIModeSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-565">Pobiera wartość wskazującą, czy przeglądarka obsługuje symbole w trybie i.</span><span class="sxs-lookup"><span data-stu-id="590dd-565">Gets a value indicating whether the browser supports i-mode symbols.</span></span></summary>
        <value><span data-ttu-id="590dd-566"><see langword="true" />Jeśli przeglądarka obsługuje symbole w trybie i; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-566"><see langword="true" /> if the browser supports i-mode symbols; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-567">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-567">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-568"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> Właściwość ma zastosowanie tylko do urządzeń zgodnych z trybem i.</span><span class="sxs-lookup"><span data-stu-id="590dd-568">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="590dd-569">Ustawianie symboli obrazów specyficznych dla telefonu dla przeglądarek zgodnych z trybem i przy użyciu <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="590dd-569">Set i-Phone-specific picture symbols for i-mode-compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-570">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje symbole w trybie i.</span><span class="sxs-lookup"><span data-stu-id="590dd-570">The following code example shows how to determine whether the browser supports i-mode symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputIStyle">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputIStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputIStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputIStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputIStyle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputIStyle : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-571">Pobiera wartość wskazującą, <see langword="istyle" /> czy przeglądarka obsługuje atrybut elementów HTML. <see langword="&lt;input&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-571">Gets a value indicating whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-572"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="istyle" /> atrybut elementów HTML <see langword="&lt;input&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-572"><see langword="true" /> if the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-573">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-573">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-574"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> Właściwość ma zastosowanie tylko do urządzeń zgodnych z trybem i.</span><span class="sxs-lookup"><span data-stu-id="590dd-574">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="590dd-575">Ten `istyle` atrybut służy do ustawiania stylu wejściowego pola wprowadzania tekstu w przeglądarkach zgodnych z trybem i.</span><span class="sxs-lookup"><span data-stu-id="590dd-575">The `istyle` attribute is used for setting the input style of a text-input field on i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-576">Poniższy przykład kodu pokazuje, `istyle` jak ustalić, czy przeglądarka obsługuje atrybut elementów HTML. `<input>`</span><span class="sxs-lookup"><span data-stu-id="590dd-576">The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputMode : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-577">Pobiera wartość wskazującą, <see langword="mode" /> czy przeglądarka obsługuje atrybut elementów HTML. <see langword="&lt;input&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-577">Gets a value indicating whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-578"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="mode" /> atrybut elementów HTML <see langword="&lt;input&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-578"><see langword="true" /> if the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-579">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-579">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-580"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> Właściwość ma zastosowanie tylko do urządzeń zgodnych z trybem i.</span><span class="sxs-lookup"><span data-stu-id="590dd-580">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="590dd-581">Ten `MODE` atrybut służy do ustawiania trybu wprowadzania pola wejściowego tekstu w przeglądarkach zgodnych z trybem i.</span><span class="sxs-lookup"><span data-stu-id="590dd-581">The `MODE` attribute is used for setting the input mode of a text input field on i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-582">Poniższy przykład kodu pokazuje, `mode` jak ustalić, czy przeglądarka obsługuje atrybut elementów HTML. `<input>`</span><span class="sxs-lookup"><span data-stu-id="590dd-582">The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public virtual bool SupportsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsItalic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-583">Pobiera wartość wskazującą, czy przeglądarka obsługuje elementy HTML <see langword="&lt;i&gt;" /> , aby sformatować tekst pisany kursywą.</span><span class="sxs-lookup"><span data-stu-id="590dd-583">Gets a value indicating whether the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text.</span></span></summary>
        <value><span data-ttu-id="590dd-584"><see langword="true" />Jeśli przeglądarka obsługuje elementy HTML <see langword="&lt;i&gt;" /> do formatowania kursywy, <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-584"><see langword="true" /> if the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-585">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-585">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-586">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje elementy HTML `<i>` , aby sformatować tekst pisany kursywą.</span><span class="sxs-lookup"><span data-stu-id="590dd-586">The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneMultiMediaAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneMultiMediaAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneMultiMediaAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneMultiMediaAttributes : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-587">Pobiera wartość wskazującą, czy przeglądarka obsługuje atrybuty MMS-Phone.</span><span class="sxs-lookup"><span data-stu-id="590dd-587">Gets a value indicating whether the browser supports J-Phone multimedia attributes.</span></span></summary>
        <value><span data-ttu-id="590dd-588"><see langword="true" />Jeśli przeglądarka obsługuje atrybuty multimediów "J-Phone"; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-588"><see langword="true" /> if the browser supports J-Phone multimedia attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-589">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-589">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-590"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych ze standardem J-Phone.</span><span class="sxs-lookup"><span data-stu-id="590dd-590">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> property applies only to J-Phone-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="590dd-591">J-Phone to specyfikacja języka znaczników, oparta na języku HTML, w przypadku przeglądarek zgodnych z telefonem.</span><span class="sxs-lookup"><span data-stu-id="590dd-591">J-Phone is a markup language specification, based on HTML, for J-Phone-compatible browsers.</span></span> <span data-ttu-id="590dd-592">Jeśli `true`przeglądarka obsługuje dodatkowe atrybuty języka HTML `<a>` (kotwicy) i `<select>` elementów.</span><span class="sxs-lookup"><span data-stu-id="590dd-592">If `true`, the browser supports additional attributes for HTML `<a>` (anchor) and `<select>` elements.</span></span> <span data-ttu-id="590dd-593">Dodatkowe obsługiwane atrybuty są następujące:</span><span class="sxs-lookup"><span data-stu-id="590dd-593">The additional attributes supported are as follows:</span></span>  
  
-   `src`  
  
-   `soundstart`  
  
-   `loop`  
  
-   `volume`  
  
-   `vibration`  
  
-   `viblength`  
  
   
  
## Examples  
 <span data-ttu-id="590dd-594">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje atrybuty MMS-Phone.</span><span class="sxs-lookup"><span data-stu-id="590dd-594">The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-595">Pobiera wartość wskazującą, czy przeglądarka obsługuje symbole obrazkowe specyficzne dla telefonu.</span><span class="sxs-lookup"><span data-stu-id="590dd-595">Gets a value indicating whether the browser supports J-Phone-specific picture symbols.</span></span></summary>
        <value><span data-ttu-id="590dd-596"><see langword="true" />Jeśli przeglądarka obsługuje symbole obrazkowe specyficzne dla telefonu, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-596"><see langword="true" /> if the browser supports J-Phone-specific picture symbols; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-597">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-597">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-598"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> Właściwość ma zastosowanie tylko do urządzeń przenośnych zgodnych ze standardem J-Phone.</span><span class="sxs-lookup"><span data-stu-id="590dd-598">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> property applies only to J-Phone-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="590dd-599">Ustaw symbole obrazkowe dla telefonów i dla przeglądarek zgodnych z telefonem, używając <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="590dd-599">Set J-Phone-specific picture symbols for J-Phone-compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-600">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje symbole obrazkowe specyficzne dla telefonu.</span><span class="sxs-lookup"><span data-stu-id="590dd-600">The following code example shows how to determine whether the browser supports J-Phone-specific picture symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsQueryStringInFormAction">
      <MemberSignature Language="C#" Value="public virtual bool SupportsQueryStringInFormAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQueryStringInFormAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsQueryStringInFormAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsQueryStringInFormAction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsQueryStringInFormAction : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-601">Pobiera wartość wskazującą, czy przeglądarka obsługuje ciąg zapytania w <see langword="action" /> wartości atrybutu elementów HTML. <see langword="&lt;form&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-601">Gets a value indicating whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-602"><see langword="true" />Jeśli przeglądarka obsługuje ciąg zapytania w <see langword="action" /> wartości atrybutu elementów HTML <see langword="&lt;form&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-602"><see langword="true" /> if the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-603">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-603">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-604">Jeśli `false`parametry ciągu zapytania są wysyłane, w danych ogłaszania zwrotnego jako `<input>` elementy HTML z `type` atrybutami ustawionymi na `hidden`.</span><span class="sxs-lookup"><span data-stu-id="590dd-604">If `false`, query string parameters are sent, in postback data, as HTML `<input>` elements with the `type` attributes set to `hidden`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-605">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje ciąg zapytania w wartości `action` atrybutu elementów HTML. `<form>`</span><span class="sxs-lookup"><span data-stu-id="590dd-605">The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectWithCookie">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectWithCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectWithCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectWithCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectWithCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectWithCookie : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-606">Pobiera wartość wskazującą, czy przeglądarka obsługuje pliki cookie w przekierowaniu.</span><span class="sxs-lookup"><span data-stu-id="590dd-606">Gets a value indicating whether the browser supports cookies on redirection.</span></span></summary>
        <value><span data-ttu-id="590dd-607"><see langword="true" />Jeśli przeglądarka obsługuje pliki cookie w przekierowaniu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-607"><see langword="true" /> if the browser supports cookies on redirection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-608">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-608">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-609">Z góry. Przeglądarka 4,1 lub więcej. <xref:System.Web.HttpResponse.Redirect%2A> Przeglądarka 3,2, metoda zachowuje się tak, jakby wartość <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> właściwości <xref:System.Web.HttpBrowserCapabilities> <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> obiektu jest `false`, chyba że <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> właściwość w sekcji pliku Web. config została jawnie ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="590dd-609">With UP.Browser 4.1 or UP.Browser 3.2, the <xref:System.Web.HttpResponse.Redirect%2A> method behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.</span></span>  
  
 <span data-ttu-id="590dd-610">W programie ASP.NET 1,1 opcje tego ustawienia były `true` lub `false`, ale z ASP.NET 2,0, wybory są rozwinięte i <xref:System.Web.HttpCookieMode.AutoDetect> są teraz ustawieniem domyślnym.</span><span class="sxs-lookup"><span data-stu-id="590dd-610">In ASP.NET 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting.</span></span> <span data-ttu-id="590dd-611">Jeśli aplikacja sieci Web ma `cookieless` atrybut `<sessionState>` w sekcji w pliku Web. config ustawionym na wartość logiczną, <xref:System.Web.HttpResponse.Redirect%2A> powinien on funkcjonować zgodnie z oczekiwaniami dla tych przeglądarek.</span><span class="sxs-lookup"><span data-stu-id="590dd-611">If your Web application has the `cookieless` attribute of the `<sessionState>` section in the Web.config file set to a Boolean value, <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-612">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje pliki cookie po przekierowaniu.</span><span class="sxs-lookup"><span data-stu-id="590dd-612">The following code example shows how to determine whether the browser supports cookies on redirection.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectMultiple">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSelectMultiple : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-613">Pobiera wartość wskazującą, <see langword="multiple" /> czy przeglądarka obsługuje atrybut elementów HTML. <see langword="&lt;select&gt;" /></span><span class="sxs-lookup"><span data-stu-id="590dd-613">Gets a value indicating whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-614"><see langword="true" />Jeśli przeglądarka obsługuje <see langword="multiple" /> atrybut elementów HTML <see langword="&lt;select&gt;" /> ; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-614"><see langword="true" /> if the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-615">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-615">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-616">Poniższy przykład kodu pokazuje, `multiple` jak ustalić, czy przeglądarka obsługuje atrybut elementów HTML. `<select>`</span><span class="sxs-lookup"><span data-stu-id="590dd-616">The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsUncheck">
      <MemberSignature Language="C#" Value="public virtual bool SupportsUncheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUncheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsUncheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsUncheck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsUncheck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-617">Pobiera wartość wskazującą, czy czyszczenie zaewidencjonowanych elementu HTML <see langword="&lt;input type=checkbox&gt;" /> jest odzwierciedlone w danych ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-617">Gets a value indicating whether the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data.</span></span></summary>
        <value><span data-ttu-id="590dd-618"><see langword="true" />Jeśli czyszczenie zaznaczonego elementu HTML <see langword="&lt;input type=checkbox&gt;" /> jest odzwierciedlone w danych ogłaszania zwrotnego; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-618"><see langword="true" /> if the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-619">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-619">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-620">Jeśli `false` `<input type=checkbox>` wartość `checked` atrybutu elementów HTML została pominięta z danych ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-620">If `false`, the value of the `checked` attribute of HTML `<input type=checkbox>` elements is omitted from postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-621">Poniższy przykład kodu pokazuje, jak ustalić, czy czyszczenie zaznaczonego elementu HTML `<input type=checkbox>` jest odzwierciedlone w danych ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="590dd-621">The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsXmlHttp">
      <MemberSignature Language="C#" Value="public virtual bool SupportsXmlHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsXmlHttp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsXmlHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsXmlHttp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsXmlHttp : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-622">Pobiera wartość wskazującą, czy przeglądarka obsługuje pobieranie XML za pośrednictwem protokołu HTTP.</span><span class="sxs-lookup"><span data-stu-id="590dd-622">Gets a value indicating whether the browser supports receiving XML over HTTP.</span></span></summary>
        <value><span data-ttu-id="590dd-623"><see langword="true" />Jeśli przeglądarka obsługuje pobieranie kodu XML za pośrednictwem protokołu HTTP; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-623"><see langword="true" /> if the browser supports receiving XML over HTTP; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-624">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-624">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-625">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje pobieranie XML za pośrednictwem protokołu HTTP.</span><span class="sxs-lookup"><span data-stu-id="590dd-625">The following code example shows how to determine whether the browser supports receiving XML over HTTP.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.CompareFilters">
      <MemberSignature Language="C#" Value="int IFilterResolutionService.CompareFilters (string filter1, string filter2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CompareFilters (filter1 As String, filter2 As String) As Integer Implements IFilterResolutionService.CompareFilters" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Web.UI.IFilterResolutionService.CompareFilters(System::String ^ filter1, System::String ^ filter2) = System::Web::UI::IFilterResolutionService::CompareFilters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="filter2" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filter1"><span data-ttu-id="590dd-626">Pierwszy filtr do porównania.</span><span class="sxs-lookup"><span data-stu-id="590dd-626">The first filter to compare.</span></span></param>
        <param name="filter2"><span data-ttu-id="590dd-627">Drugi filtr do porównania.</span><span class="sxs-lookup"><span data-stu-id="590dd-627">The second filter to compare.</span></span></param>
        <summary><span data-ttu-id="590dd-628">Używane wewnętrznie do porównywania filtrów.</span><span class="sxs-lookup"><span data-stu-id="590dd-628">Used internally to compare filters.</span></span></summary>
        <returns><span data-ttu-id="590dd-629">1 Jeśli <paramref name="filter1" /> jest elementem <paramref name="filter2" />nadrzędnym;-1, <paramref name="filter2" /> <paramref name="filter1" />jeśli jest elementem nadrzędnym; 0, jeśli nie ma relacji nadrzędny-podrzędny <paramref name="filter1" /> między <paramref name="filter2" />i.</span><span class="sxs-lookup"><span data-stu-id="590dd-629">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.EvaluateFilter">
      <MemberSignature Language="C#" Value="bool IFilterResolutionService.EvaluateFilter (string filterName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function EvaluateFilter (filterName As String) As Boolean Implements IFilterResolutionService.EvaluateFilter" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IFilterResolutionService.EvaluateFilter(System::String ^ filterName) = System::Web::UI::IFilterResolutionService::EvaluateFilter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filterName"><span data-ttu-id="590dd-630">Filtr do obliczenia.</span><span class="sxs-lookup"><span data-stu-id="590dd-630">The filter to evaluate.</span></span></param>
        <summary><span data-ttu-id="590dd-631">Używane wewnętrznie do szacowania filtru.</span><span class="sxs-lookup"><span data-stu-id="590dd-631">Used internally to evaluate a filter.</span></span></summary>
        <returns><span data-ttu-id="590dd-632"><see langword="true" />Jeśli filtr został pomyślnie oceniony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-632"><see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public bool Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tables { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-633">Pobiera wartość wskazującą, czy przeglądarka obsługuje elementy HTML <see langword="&lt;table&gt;" /> .</span><span class="sxs-lookup"><span data-stu-id="590dd-633">Gets a value indicating whether the browser supports HTML <see langword="&lt;table&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="590dd-634"><see langword="true" />Jeśli przeglądarka obsługuje elementy HTML <see langword="&lt;table&gt;" /> ; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="590dd-634"><see langword="true" /> if the browser supports HTML <see langword="&lt;table&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-635">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-635">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-636">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje elementy HTML `<table>` .</span><span class="sxs-lookup"><span data-stu-id="590dd-636">The following code example shows how to determine whether the browser supports HTML `<table>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Tables#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Tables#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagWriter">
      <MemberSignature Language="C#" Value="public Type TagWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TagWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagWriter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TagWriter { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagWriter : Type" Usage="System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-637">Używane wewnętrznie do uzyskania typu obiektu, który jest używany do pisania tagów dla przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-637">Used internally to get the type of the object that is used to write tags for the browser.</span></span></summary>
        <value><span data-ttu-id="590dd-638"><see cref="T:System.Type" /> Obiekt, który jest używany do pisania tagów dla przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-638">The <see cref="T:System.Type" /> of the object that is used to write tags for the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="590dd-639">Wystąpił błąd analizy.</span><span class="sxs-lookup"><span data-stu-id="590dd-639">There is a parse error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-640">Pobiera nazwę i numer wersji głównej (całkowitej) przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-640">Gets the name and major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="590dd-641">Nazwa i numer wersji głównej przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="590dd-641">The name and major version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-642">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka jest przeglądarką Internet Explorer w wersji 6.</span><span class="sxs-lookup"><span data-stu-id="590dd-642">The following code example shows how to determine whether the browser is Internet Explorer version 6.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Type#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Type#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public bool UseOptimizedCacheKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOptimizedCacheKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseOptimizedCacheKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOptimizedCacheKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseOptimizedCacheKey : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-643">Używane wewnętrznie do uzyskania wartości wskazującej, czy ma być używany zoptymalizowany klucz pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="590dd-643">Used internally to get a value indicating whether to use an optimized cache key.</span></span></summary>
        <value><span data-ttu-id="590dd-644"><see langword="true" />Aby użyć zoptymalizowanego klucza pamięci podręcznej; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-644"><see langword="true" /> to use an optimized cache key; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-645">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-645">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBScript">
      <MemberSignature Language="C#" Value="public bool VBScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.VBScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-646">Pobiera wartość wskazującą, czy przeglądarka obsługuje Visual Basic Scripting Edition (VBScript).</span><span class="sxs-lookup"><span data-stu-id="590dd-646">Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</span></span></summary>
        <value><span data-ttu-id="590dd-647"><see langword="true" />Jeśli przeglądarka obsługuje język VBScript; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-647"><see langword="true" /> if the browser supports VBScript; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-648">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-648">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-649">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka obsługuje skrypt VBScript.</span><span class="sxs-lookup"><span data-stu-id="590dd-649">The following code example shows how to determine whether the browser supports VBScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-650">Pobiera pełny numer wersji (liczbę całkowitą i dziesiętną) przeglądarki jako ciąg znaków.</span><span class="sxs-lookup"><span data-stu-id="590dd-650">Gets the full version number (integer and decimal) of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="590dd-651">Pełny numer wersji przeglądarki w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="590dd-651">The full version number of the browser as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="590dd-652"><xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> Właściwość zwraca ciąg.</span><span class="sxs-lookup"><span data-stu-id="590dd-652">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property returns a string.</span></span> <span data-ttu-id="590dd-653">W niektórych scenariuszach <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> właściwość może zawierać znaki litery, tak jak w przypadku przeglądarki lub urządzenia klienckiego, które jest w wersji beta, takiej jak "7.0 b".</span><span class="sxs-lookup"><span data-stu-id="590dd-653">In some scenarios, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property might contain letter characters, as in the case of a browser or client device that is a beta version such as "7.0b."</span></span> <span data-ttu-id="590dd-654">Aby prawidłowo uzyskać wersję jako typ danych, którego można użyć w porównaniu liczbowej, Połącz <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> wartości właściwości i. <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A></span><span class="sxs-lookup"><span data-stu-id="590dd-654">To correctly get the version as a data type that can be used in a numeric comparison, concatenate the <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="590dd-655">Poniższy przykład kodu pokazuje, <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> jak określić przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-655">The following code example shows how to determine the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> of the browser.</span></span> <span data-ttu-id="590dd-656"><xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> Właściwość i<xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> właściwość są łączone, a wynik służy do określenia, czy wersja przeglądarki jest większa niż 5,01.</span><span class="sxs-lookup"><span data-stu-id="590dd-656">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Version#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Version#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="W3CDomVersion">
      <MemberSignature Language="C#" Value="public Version W3CDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version W3CDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property W3CDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ W3CDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.W3CDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-657">Pobiera wersję organizacja World Wide Web Consortium (W3C) Document Object Model XML (DOM) obsługiwaną przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-657">Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="590dd-658">Numer wersji W3C XML DOM obsługiwanej przez przeglądarkę.</span><span class="sxs-lookup"><span data-stu-id="590dd-658">The number of the W3C XML DOM version number that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-659">Poniższy przykład kodu pokazuje, jak ustalić, czy wersja pliku W3C XML przeglądarki jest większa niż 1.</span><span class="sxs-lookup"><span data-stu-id="590dd-659">The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win16">
      <MemberSignature Language="C#" Value="public bool Win16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win16" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win16 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win16 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-660">Pobiera wartość wskazującą, czy klient jest komputerem opartym na Win16.</span><span class="sxs-lookup"><span data-stu-id="590dd-660">Gets a value indicating whether the client is a Win16-based computer.</span></span></summary>
        <value><span data-ttu-id="590dd-661"><see langword="true" />Jeśli przeglądarka jest uruchomiona na komputerze z systemem Win16; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-661"><see langword="true" /> if the browser is running on a Win16-based computer; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-662">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-662">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-663">Poniższy przykład kodu pokazuje, jak ustalić, czy przeglądarka jest uruchomiona na komputerze z systemem Win16.</span><span class="sxs-lookup"><span data-stu-id="590dd-663">The following code example shows how to determine whether the browser is running on a Win16-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32">
      <MemberSignature Language="C#" Value="public bool Win32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win32" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win32 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win32 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win32 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="590dd-664">Pobiera wartość wskazującą, czy klient jest komputerem opartym na systemie Win32.</span><span class="sxs-lookup"><span data-stu-id="590dd-664">Gets a value indicating whether the client is a Win32-based computer.</span></span></summary>
        <value><span data-ttu-id="590dd-665"><see langword="true" />Jeśli klient jest komputerem opartym na Win32; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="590dd-665"><see langword="true" /> if the client is a Win32-based computer; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="590dd-666">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="590dd-666">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="590dd-667">Poniższy przykład kodu pokazuje, jak ustalić, czy klient jest komputerem opartym na systemie Win32.</span><span class="sxs-lookup"><span data-stu-id="590dd-667">The following code example shows how to determine whether the client is a Win32-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win32#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win32#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
