<Type Name="RoleManagerSection" FullName="System.Web.Configuration.RoleManagerSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6df6b6b9b0ca8c116bf034e813de48d207c06616" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69140818" /></Metadata><TypeSignature Language="C#" Value="public sealed class RoleManagerSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoleManagerSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.RoleManagerSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoleManagerSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleManagerSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type RoleManagerSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje ustawienia konfiguracji, które są używane do obsługi infrastruktury zarządzania rolami aplikacji sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa umożliwia programistyczny dostęp i modyfikowanie zawartości `roleManager` sekcji w pliku konfiguracji. <xref:System.Web.Configuration.RoleManagerSection>  
  
   
  
## Examples  
 Ta sekcja zawiera dwa przykłady kodu. Pierwszy pokazuje, jak deklaratywnie określić wartości dla kilku właściwości <xref:System.Web.Configuration.RoleManagerSection> klasy. Drugi pokazuje, jak używać <xref:System.Web.Configuration.RoleManagerSection> typu.  
  
 Poniższy przykład pliku konfiguracji pokazuje, jak deklaratywnie określić wartości dla kilku właściwości <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
```  
<system.web>  
  <roleManager   
    enabled="false"   
    cacheRolesInCookie="false"   
    cookieName=".ASPXROLES" cookieTimeout="30"  
    cookiePath="/" cookieRequireSSL="false"  
    cookieSlidingExpiration="true" createPersistentCookie="false"  
    cookieProtection="All"   
    defaultProvider="AspNetSqlRoleProvider"  
    maxCachedResults="25"  >  
    <providers>  
      <add   
        name="AspNetSqlRoleProvider"  
        connectionStringName="LocalSqlServer"   
        applicationName="/"  
        type="System.Web.Security.SqlRoleProvider, System.Web,  
          Version=2.0.3600.0, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a" />  
      <add   
        name="AspNetWindowsTokenRoleProvider"   
        applicationName="/"  
        type="System.Web.Security.WindowsTokenRoleProvider, System.Web,   
          Version=2.0.3600.0, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a" />  
    </providers>  
  </roleManager>  
</system.web>  
```  
  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection> jak używać typu.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#1)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Web.Security.RoleManagerModule" />
    <altmember cref="T:System.Web.Security.Roles" />
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleManagerSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.RoleManagerSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleManagerSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.Configuration.RoleManagerSection" /> klasy przy użyciu ustawień domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> Konstruktor nie jest przeznaczony do użycia bezpośrednio w kodzie. Jest on wywoływany przez system konfiguracji ASP.NET. Wystąpienie <xref:System.Web.Configuration.RoleManagerSection> klasy uzyskuje się za <xref:System.Configuration.Configuration.GetSection%2A> pomocą metody.  
  
 W poniższej tabeli przedstawiono domyślne ustawienia, które są używane dla <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> konstruktora.  
  
|Właściwość|Wartość domyślna|  
|--------------|-------------------|  
|<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|". ASPXROLES"|  
|<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|"/"|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>|`All`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>|`true`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|30, w ciągu kilku minut|  
|<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|"AspNetSqlRoleProvider"|  
|<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>|Pusty ciąg ("")|  
|<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheRolesInCookie">
      <MemberSignature Language="C#" Value="public bool CacheRolesInCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheRolesInCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheRolesInCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheRolesInCookie { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheRolesInCookie : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CacheRolesInCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cacheRolesInCookie", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy bieżące role użytkownika są buforowane w pliku cookie.</summary>
        <value><see langword="true" />Jeśli bieżące role użytkownika są buforowane w pliku cookie; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> Właściwość zwraca wartość logiczną wskazującą, czy Magazyn plików cookie dla nazw ról jest włączony.  
  
 Gdy właściwość jest ustawiona na `true` w pliku konfiguracji, informacje o rolach poszczególnych użytkowników są przechowywane w pliku cookie na kliencie. <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> Gdy zarządzanie rolami sprawdza, czy użytkownik znajduje się w określonej roli, plik cookie ról jest sprawdzany przed wywołaniem dostawcy roli w celu sprawdzenia listy ról w źródle danych. Plik cookie jest aktualizowany dynamicznie na kliencie w celu buforowania ostatnio zweryfikowanych nazw ról.  
  
 Aby zwiększyć niezawodność nazw ról, które są buforowane w pliku cookie, można określić <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> właściwość podczas `roleManager` konfigurowania sekcji w pliku konfiguracji. Właściwość domyślna <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> to `All`, która szyfruje nazwy ról w pliku cookie i sprawdza, czy zawartość pliku cookie nie została zmieniona.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#2)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C#" Value="public string CookieName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieName" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookieName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieName : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę pliku cookie, który jest używany do buforowania nazw ról.</summary>
        <value>Nazwa pliku cookie służącego do buforowania nazw ról. Wartość domyślna to ". ASPXROLES".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> Właściwość zwraca nazwę pliku cookie, który jest używany do buforowania nazw ról. Możesz określić nazwę pliku cookie, w którym role są buforowane dla aplikacji, ustawiając `cookieName` atrybut w pliku Web. config dla aplikacji ASP.NET. Jest to przydatne, gdy chcesz jednoznacznie identyfikować plik cookie dla aplikacji lub gdy plik cookie jest współużytkowany przez wiele aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#3)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookiePath", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę wirtualną pliku cookie, który jest używany do buforowania nazw ról.</summary>
        <value>Ścieżka pliku cookie służącego do przechowywania nazw ról. Wartość domyślna to "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz określić ścieżkę pliku cookie, w którym nazwy ról są buforowane dla aplikacji, ustawiając `cookiePath` atrybut w plik Web. config dla aplikacji ASP.NET. Właściwość zwraca wartość `cookiePath` atrybutu z pliku Web. config. <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> W ścieżce jest rozróżniana wielkość liter.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#4)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieProtection">
      <MemberSignature Language="C#" Value="public System.Web.Security.CookieProtection CookieProtection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.CookieProtection CookieProtection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieProtection" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieProtection As CookieProtection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::CookieProtection CookieProtection { System::Web::Security::CookieProtection get(); void set(System::Web::Security::CookieProtection value); };" />
      <MemberSignature Language="F#" Value="member this.CookieProtection : System.Web.Security.CookieProtection with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieProtection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieProtection", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.CookieProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ zabezpieczeń, który jest używany do ochrony plików cookie, które buforują nazwy ról.</summary>
        <value>Typ ochrony zabezpieczeń używanej w pliku cookie, w którym są buforowane nazwy ról. Wartość domyślna to <see langword="All" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> Właściwość opisuje sposób bezpiecznego przechowywania informacji w pliku cookie. Możesz określić typ zabezpieczeń plików cookie, w przypadku których role są buforowane dla aplikacji, ustawiając `cookieProtection` atrybut w pliku Web. config dla aplikacji ASP.NET. `cookieProtection` Atrybut przyjmujewartość`All` wyliczenia,`Encryption` ,`Validation`, lub. <xref:System.Web.Security.CookieProtection> `None` Wartość domyślna to `All`. Należy pamiętać, aby użyć wartości domyślnej dla <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> właściwości, jeśli chcesz, aby Ochrona plików cookie była poprawna i szyfrowana. Aby zwiększyć ochronę pliku cookie, można również ustawić <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> właściwość na. `true`  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#5)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.CookieProtection" />
      </Docs>
    </Member>
    <Member MemberName="CookieRequireSSL">
      <MemberSignature Language="C#" Value="public bool CookieRequireSSL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CookieRequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieRequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieRequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CookieRequireSSL { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CookieRequireSSL : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieRequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieRequireSSL", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy plik cookie, który jest używany do buforowania nazw ról, wymaga połączenia SSL (SSL), aby można było zwrócić do serwera.</summary>
        <value><see langword="true" />Jeśli konieczne jest połączenie SSL w celu powrotu do serwera, plik cookie, w którym są buforowane nazwy ról; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić, czy do zwrócenia plików cookie nazw ról na serwer jest wymagany protokół SSL przez ustawienie `cookieRequireSSL` atrybutu w pliku Web. config aplikacji ASP.NET.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#6)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Cookie.Secure" />
      </Docs>
    </Member>
    <Member MemberName="CookieSlidingExpiration">
      <MemberSignature Language="C#" Value="public bool CookieSlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CookieSlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieSlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CookieSlidingExpiration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CookieSlidingExpiration : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieSlidingExpiration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy plik cookie używany do buforowania nazw ról będzie okresowo resetowany.</summary>
        <value><see langword="true" />Jeśli nazwa roli, Data i godzina wygaśnięcia pliku cookie, będą okresowo resetowane; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz określić, czy plik cookie używany do buforowania nazw ról ma być okresowo resetowany, czy wygasł w ustalonym momencie przy użyciu `cookieSlidingExpiration` atrybutu w pliku Web. config dla aplikacji ASP.NET. Jeśli `true`czas wygaśnięcia pliku cookie jest początkowo ustawiony na bieżącą datę i godzinę <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> oraz właściwość, w minutach. Mimo że użytkownik nadal aktywnie korzysta z aplikacji ASP.NET, Data i godzina wygaśnięcia pliku cookie są automatycznie odświeżane, jeśli jest mniejsza niż połowa <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> pozostałej liczby. Wartość domyślna to `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#7)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CookieTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CookieTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CookieTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CookieTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę minut, po której wygasa plik cookie używany do buforowania nazw ról.</summary>
        <value>Jest to liczba minut, po którychplikcookieużywanydobuforowanianazwrólwygasa.<see cref="T:System.TimeSpan" /> Wartość domyślna to 30, w minutach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Właściwość ustawia wartość określającą liczbę minut, po której upływa plik cookie nazw ról. Wartość domyślna to 30 minut. Jeśli właściwość jest `false` ,<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> właściwość jest ignorowana. <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#8)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="CreatePersistentCookie">
      <MemberSignature Language="C#" Value="public bool CreatePersistentCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreatePersistentCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatePersistentCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreatePersistentCookie { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CreatePersistentCookie : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CreatePersistentCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("createPersistentCookie", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy plik cookie oparty na sesji lub trwały plik cookie jest używany do buforowania nazw ról.</summary>
        <value><see langword="true" />Aby nazwa roli była trwała w ramach sesji przeglądarki; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> Właściwość wskazuje, czy plik cookie używany do buforowania nazw ról powinien być plikiem cookie opartym na sesji, co oznacza, że plik cookie zostanie utracony po zamknięciu przeglądarki lub trwałego pliku cookie, co oznacza, że plik cookie jest dostępny w poprzek sesje przeglądarki. Wartość domyślna to `false`, co oznacza, że do buforowania nazw ról jest używany plik cookie oparty na sesji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#9)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProvider">
      <MemberSignature Language="C#" Value="public string DefaultProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.DefaultProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProvider : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.DefaultProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultProvider", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę domyślnego dostawcy, który jest używany do zarządzania rolami.</summary>
        <value>Nazwa dostawcy w <see cref="P:System.Web.Configuration.RoleManagerSection.Providers" />. Wartość domyślna to "AspNetSqlRoleProvider".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość musi być zgodna z nazwaną wartością `providers` w podsekcji `roleManager` sekcji pliku konfiguracji. <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> Pusty ciąg ("") nie jest prawidłową wartością <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#10)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.RoleManagerSection.Providers" />
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("domain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę domeny, która jest skojarzona z plikiem cookie używanym do buforowania nazw ról.</summary>
        <value><see cref="P:System.Web.HttpCookie.Domain" /> Plik cookie używany do buforowania nazw ról. Wartość domyślna to ciąg pusty (<see langword="&quot;&quot;" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest ustawiana w konfiguracji dla aplikacji ASP.NET przy `domain` użyciu atrybutu `roleManager` elementu konfiguracji. <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> Jeśli w konfiguracji `domain` atrybutu nie określono wartości <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> , właściwość zwróci wartość `null` i rolę nazwy domeny <xref:System.Web.HttpCookie.Domain%2A> plików cookie domyślnie do zachowania właściwości. Wartość domyślna to pusty ciąg.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy funkcja zarządzania rolami ASP.NET jest włączona.</summary>
        <value><see langword="true" />Jeśli jest włączona funkcja zarządzania rolami ASP.NET; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> Właściwość zwraca wartość logiczną wskazującą, czy do funkcji zarządzania rolami ASP.NET można uzyskać dostęp w czasie wykonywania.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#12)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedResults">
      <MemberSignature Language="C#" Value="public int MaxCachedResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedResults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.MaxCachedResults" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedResults As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedResults { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedResults : int with get, set" Usage="System.Web.Configuration.RoleManagerSection.MaxCachedResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxCachedResults", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę ról, które ASP.NET pamięci podręcznej w pliku cookie roli.</summary>
        <value>Wartość wskazująca maksymalną liczbę ASP.NET w pamięci podręcznej ról w pliku cookie roli. Wartość domyślna to 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.MaxCachedResults%2A> Właściwość zwraca liczbę całkowitą wskazującą maksymalną liczbę ról, które ASP.NET pamięci podręcznej w pliku cookie roli. Wartość domyślna to 25.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Security.Roles.CacheRolesInCookie" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.RoleManagerSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Configuration.ProviderSettingsCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProviderSettingsCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ProviderSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProviderSettingsCollection ^ Providers { System::Configuration::ProviderSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.ProviderSettingsCollection" Usage="System.Web.Configuration.RoleManagerSection.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("providers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ProviderSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Configuration.ProviderSettingsCollection" /> Pobiera<see cref="T:System.Configuration.ProviderSettings" /> obiekt elementów.</summary>
        <value>A <see cref="T:System.Configuration.ProviderSettingsCollection" /> , który zawiera ustawienia dostawców zdefiniowane <see langword="providers" /> w podsekcji <see langword="roleManager" /> sekcji pliku konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostawcy zarządzania rolami są składnikami, które zapewniają dostęp do typów ról dla lokacji. Możesz określić dostawców zarządzania rolami w `providers` podsekcji `roleManager` sekcji pliku konfiguracji.  
  
 <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> Właściwość określa dostawcę, który jest używany domyślnie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.Configuration.RoleManagerSection.Providers%2A> jak używać właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.Configuration.RoleManagerSection> klasy.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#13)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
