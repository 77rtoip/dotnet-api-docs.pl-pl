<Type Name="LowerCaseStringConverter" FullName="System.Web.Configuration.LowerCaseStringConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e11e8fe027317ff994a47672c4631ca137b90e89" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36603007" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LowerCaseStringConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LowerCaseStringConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.LowerCaseStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LowerCaseStringConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class LowerCaseStringConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type LowerCaseStringConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia obsługę, aby przekonwertować obiekt na ciąg małe litery. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.LowerCaseStringConverter> Klasa umożliwia obiekt ma zostać przekonwertowany na małe litery ciąg. Ta klasa udostępnia także pomocy technicznej, aby sprawdzić, czy typ obiektu może być konwertowana na ciąg małe litery przed dokonaniem konwersji.  
  
 Metody <xref:System.Web.Configuration.LowerCaseStringConverter> przyjmować jako parametr obiekt, który implementuje <xref:System.ComponentModel.ITypeDescriptorContext> interfejsu. Ten interfejs zapewnia informacje kontekstowe dotyczące składnika. Zazwyczaj ten interfejs jest używany w czasie projektowania, aby podać informacje o kontenerze czasu projektowania. <xref:System.ComponentModel.ITypeDescriptorContext> Jest często używana w konwersji typu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LowerCaseStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LowerCaseStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie klasy <see cref="T:System.Web.Configuration.LowerCaseStringConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.Configuration.LowerCaseStringConverter.%23ctor%2A> konstruktora.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#2)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="lowerCaseStringConverter.CanConvertFrom (ctx, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Obiekt, który implementuje <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interfejsu.</param>
        <param name="type">Typ obiektu do skonwertowania.</param>
        <summary>Określa, czy obiekt można przekonwertować na ciąg małe litery w zależności od określonych parametrów.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt, który można przekonwertować na obiekt ciągu małe; opisano parametry w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa obiektu implementującego <xref:System.ComponentModel.ITypeDescriptorContext> interfejsu jako `ctx` parametru. Ten interfejs zapewnia informacje kontekstowe dotyczące składnika. Zazwyczaj ten interfejs jest używany w czasie projektowania, aby podać informacje o kontenerze czasu projektowania. <xref:System.ComponentModel.ITypeDescriptorContext> Jest często używana w konwersji typu. Należy przesłonić tę metodę w klasie pochodnej, jeśli wymagane jest zachowanie niestandardowych.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak użyć tej metody.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#3)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="lowerCaseStringConverter.CanConvertTo (ctx, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Obiekt, który implementuje <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interfejsu.</param>
        <param name="type">Typ obiektu do skonwertowania.</param>
        <summary>Określa, czy obiekt można przekonwertować na ciąg małe litery w zależności od określonych parametrów.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt, który można przekonwertować na obiekt ciągu małe; opisano parametry w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa obiektu implementującego <xref:System.ComponentModel.ITypeDescriptorContext> interfejsu jako `ctx` parametru. Ten interfejs zapewnia informacje kontekstowe dotyczące składnika. Zazwyczaj ten interfejs jest używany w czasie projektowania, aby podać informacje o kontenerze czasu projektowania. <xref:System.ComponentModel.ITypeDescriptorContext> Jest często używana w konwersji typu. Należy przesłonić tę metodę w klasie pochodnej, jeśli wymagane jest zachowanie niestandardowych.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak użyć tej metody.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#4)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (ctx As ITypeDescriptorContext, ci As CultureInfo, data As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="lowerCaseStringConverter.ConvertFrom (ctx, ci, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctx">Obiekt, który implementuje <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interfejsu.</param>
        <param name="ci">Obiekt, który implementuje <see cref="T:System.Globalization.CultureInfo" /> klasy.</param>
        <param name="data">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje obiekt z oryginalnej wartości na ciąg małe litery w zależności od określonych parametrów.</summary>
        <returns>Obiekt ciągu małe litery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa obiektu implementującego <xref:System.ComponentModel.ITypeDescriptorContext> interfejsu jako `ctx` parametru. Ten interfejs zapewnia informacje kontekstowe dotyczące składnika. Zazwyczaj ten interfejs jest używany w czasie projektowania, aby podać informacje o kontenerze czasu projektowania. <xref:System.ComponentModel.ITypeDescriptorContext> Jest często używana w konwersji typu. `ci` Obiekt parametru zapewnia informacje związane z kulturą. `data` Obiektu parameter działa jako obiekt, aby przekonwertować i wynikowy obiekt, po wykonaniu metody. Należy przesłonić tę metodę w klasie pochodnej, jeśli wymagane jest zachowanie niestandardowych.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak użyć tej metody.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#5)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="lowerCaseStringConverter.ConvertTo (ctx, ci, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Obiekt, który implementuje <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interfejsu.</param>
        <param name="ci">Obiekt, który implementuje <see cref="T:System.Globalization.CultureInfo" /> klasy.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <param name="type">Typ obiektu do skonwertowania.</param>
        <summary>Konwertuje obiekt na ciąg małe litery w zależności od określonych parametrów.</summary>
        <returns>Obiekt ciągu małe litery.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa obiektu implementującego <xref:System.ComponentModel.ITypeDescriptorContext> interfejsu jako `ctx` parametru. Ten interfejs zapewnia informacje kontekstowe dotyczące składnika. Zazwyczaj ten interfejs jest używany w czasie projektowania, aby podać informacje o kontenerze czasu projektowania. <xref:System.ComponentModel.ITypeDescriptorContext> Jest często używana w konwersji typu. `ci` Obiekt parametru zapewnia informacje związane z kulturą. `value` Obiektu działa jako obiekt, aby przekonwertować i wynikowy obiekt, po wykonaniu metody. Należy przesłonić tę metodę w klasie pochodnej, jeśli wymagane jest zachowanie niestandardowych.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak użyć tej metody.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#6)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>