<Type Name="HttpHandlerAction" FullName="System.Web.Configuration.HttpHandlerAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb39bf0f89adb9cc8f60acddce7ce88ebc7eabef" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69141459" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpHandlerAction : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpHandlerAction extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpHandlerAction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpHandlerAction&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpHandlerAction sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type HttpHandlerAction = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konfiguruje <see cref="T:System.Web.Configuration.HttpHandlersSection" /> sekcję konfiguracyjną. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa umożliwia programistyczny dostęp i `add` Modyfikowanie elementu `httpHandlers` sekcji konfiguracji. <xref:System.Web.Configuration.HttpHandlerAction>  
  
 Ten typ jest częścią grupy, która zawiera <xref:System.Web.Configuration.HttpHandlerActionCollection> <xref:System.Web.Configuration.HttpHandlersSection> typy i.  
  
> [!NOTE]
>  Może odczytywać i zapisywać informacje z i do powiązanej sekcji pliku konfiguracji zgodnie z właściwością <xref:System.Configuration.SectionInformation.AllowDefinition%2A> sekcji, której wartość to <xref:System.Configuration.ConfigurationAllowDefinition.Everywhere>. <xref:System.Web.Configuration.HttpHandlerAction>  
  
 ASP.NET wyszukuje bibliotekę DLL zestawu obsługi w prywatnym katalogu \Bin aplikacji, a następnie przeszukuje w pamięci podręcznej zestawów systemu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Web.Configuration.HttpModuleAction> jak używać typu.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#2)]
 [!code-vb[System.Web.Configuration.HttpHandlers#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#2)]  
  
 Poniższy fragment konfiguracji pokazuje, jak określić wartości w sposób deklaratywny dla `httpHandlers` sekcji.  
  
```  
<httpHandlers>  
  <add path="Calculator.custom"  
    type="Samples.Aspnet.SystemWebConfiguration.Calculator, CalculatorHandler"  
    verb="GET" validate="false" />  
</httpHandlers>   
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.HttpHandlerActionCollection" />
    <altmember cref="T:System.Web.Configuration.HttpHandlersSection" />
    <related type="Article" href="https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b">Obsługa protokołu HTTP i moduły HTTP — Omówienie</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Configuration.HttpHandlerAction" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpHandlerAction (string path, string type, string verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string type, string verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpHandlerAction.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, type As String, verb As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpHandlerAction(System::String ^ path, System::String ^ type, System::String ^ verb);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.HttpHandlerAction : string * string * string -&gt; System.Web.Configuration.HttpHandlerAction" Usage="new System.Web.Configuration.HttpHandlerAction (path, type, verb)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="verb" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Ścieżka <see cref="T:System.Web.Configuration.HttpHandlerAction" /> adresu URL.</param>
        <param name="type">Rozdzielana przecinkami kombinacja klasy/zestawu składająca się z wersji, kultury i tokenów kluczy publicznych.</param>
        <param name="verb">Rozdzielana przecinkami lista czasowników HTTP (na przykład "GET, PUT, POST").</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.Configuration.HttpHandlerAction" /> klasy przy użyciu parametrów zakończonych niepowodzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpHandlerAction.%23ctor%2A> Konstruktor nie jest przeznaczony do użycia bezpośrednio w kodzie. Jest on wywoływany przez system konfiguracji ASP.NET. Wystąpienie <xref:System.Web.Configuration.HttpHandlerAction> klasy uzyskuje się za <xref:System.Web.Configuration.HttpHandlersSection.Handlers%2A> pomocą właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpHandlerAction (string path, string type, string verb, bool validate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string type, string verb, bool validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpHandlerAction.#ctor(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, type As String, verb As String, validate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpHandlerAction(System::String ^ path, System::String ^ type, System::String ^ verb, bool validate);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.HttpHandlerAction : string * string * string * bool -&gt; System.Web.Configuration.HttpHandlerAction" Usage="new System.Web.Configuration.HttpHandlerAction (path, type, verb, validate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="verb" Type="System.String" />
        <Parameter Name="validate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">Ścieżka <see cref="T:System.Web.Configuration.HttpHandlerAction" /> adresu URL.</param>
        <param name="type">Rozdzielana przecinkami kombinacja klasy/zestawu składająca się z wersji, kultury i tokenów kluczy publicznych.</param>
        <param name="verb">Rozdzielana przecinkami lista czasowników HTTP (na przykład "GET, PUT, POST").</param>
        <param name="validate"><see langword="true" />Aby umożliwić weryfikację; w przeciwnym razie. <see langword="false" /> Jeśli <see langword="false" />ASP.NET nie podejmie próby załadowania klasy do momentu, gdy zostanie wysłane rzeczywiste żądanie zgodne, może to opóźnić błąd, ale poprawić czas uruchamiania.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.Configuration.HttpHandlerAction" /> klasy przy użyciu parametrów zakończonych niepowodzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpHandlerAction.%23ctor%2A> Konstruktor nie jest przeznaczony do użycia bezpośrednio w kodzie. Jest on wywoływany przez system konfiguracji ASP.NET. Wystąpienie <xref:System.Web.Configuration.HttpHandlerAction> klasy uzyskuje się za <xref:System.Web.Configuration.HttpHandlersSection.Handlers%2A> pomocą właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć <xref:System.Web.Configuration.HttpHandlerAction> obiekt.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#3)]
 [!code-vb[System.Web.Configuration.HttpHandlers#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.Configuration.HttpHandlerAction.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("path", IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.Configuration.HttpHandlerAction" /> ścieżkę.</summary>
        <value>Ścieżka <see cref="T:System.Web.Configuration.HttpHandlerAction" /> adresu URL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpHandlerAction.Path%2A> Właściwość może zawierać pojedynczy adres URL lub ciąg wieloznaczny.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Web.Configuration.HttpHandlerAction.Path%2A> jak uzyskać dostęp do właściwości.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#5)]
 [!code-vb[System.Web.Configuration.HttpHandlers#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.HttpHandlerAction.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Web.Configuration.HttpHandlerAction.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("type", IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.Configuration.HttpHandlerAction" /> typ.</summary>
        <value><see cref="T:System.Web.Configuration.HttpHandlerAction" /> Typ.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpHandlerAction.Type%2A> Właściwość jest rozdzieloną przecinkami klasą i zestawem, składającym się z wersji, kultury i tokenów kluczy publicznych.  
  
> [!NOTE]
>  ASP.NET wyszukuje bibliotekę DLL zestawu obsługi w prywatnym katalogu \Bin aplikacji, a następnie przeszukuje w pamięci podręcznej zestawów systemu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Web.Configuration.HttpHandlerAction.Type%2A> jak uzyskać dostęp do właściwości.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#6)]
 [!code-vb[System.Web.Configuration.HttpHandlers#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public bool Validate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Validate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Property Validate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Validate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Validate : bool with get, set" Usage="System.Web.Configuration.HttpHandlerAction.Validate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validate", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.Configuration.HttpHandlerAction" /> weryfikację.</summary>
        <value><see langword="true" />Jeśli sprawdzanie poprawności jest dozwolone; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość ma `false`wartość, ASP.NET nie będzie podejmować próby załadowania klasy do momentu, gdy zostanie wysłane rzeczywiste żądanie zgodne, może to spowodować opóźnienie błędu, ale przez zwiększenie czasu uruchamiania. <xref:System.Web.Configuration.HttpHandlerAction.Validate%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Web.Configuration.HttpHandlerAction.Validate%2A> jak uzyskać dostęp do właściwości.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#8)]
 [!code-vb[System.Web.Configuration.HttpHandlers#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public string Verb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verb" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Verb" />
      <MemberSignature Language="VB.NET" Value="Public Property Verb As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verb { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Verb : string with get, set" Usage="System.Web.Configuration.HttpHandlerAction.Verb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("verb", IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czasownik dozwolony przez <see cref="T:System.Web.Configuration.HttpHandlerAction" /> obiekt.</summary>
        <value>Czasownik dozwolony przez obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta <xref:System.Web.Configuration.HttpHandlerAction.Verb%2A> właściwość może być rozdzielaną przecinkami listą czasowników HTTP (na przykład "Get, PUT, post").  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Web.Configuration.HttpHandlerAction.Verb%2A> jak uzyskać dostęp do właściwości.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#7)]
 [!code-vb[System.Web.Configuration.HttpHandlers#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
