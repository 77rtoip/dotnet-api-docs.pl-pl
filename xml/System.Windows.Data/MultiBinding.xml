<Type Name="MultiBinding" FullName="System.Windows.Data.MultiBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b90c32f6c0093ace7eec77b55316fe5211dcf10" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69210477" /></Metadata><TypeSignature Language="C#" Value="public class MultiBinding : System.Windows.Data.BindingBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultiBinding extends System.Windows.Data.BindingBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.MultiBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class MultiBinding&#xA;Inherits BindingBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiBinding : System::Windows::Data::BindingBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiBinding = class&#xA;    inherit BindingBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Bindings")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Opisuje kolekcję <see cref="T:System.Windows.Data.Binding" /> obiektów dołączonych do pojedynczej właściwości docelowej powiązania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Windows.Data.MultiBinding> obiekcie można określić wiele powiązań. Gdy używasz <xref:System.Windows.Data.MultiBinding> obiektu z konwerterem, tworzy ostateczną wartość dla celu powiązania na podstawie wartości tych powiązań. Na przykład kolor może być obliczany na podstawie wartości czerwony, niebieski i zielony, które mogą być wartościami z tego samego lub różnych obiektów źródłowych powiązań. Gdy wartość jest przenoszona z elementu docelowego do źródeł, wartość właściwości docelowej jest tłumaczona na zbiór wartości, które są przekazywane z powrotem do powiązań.  
  
 Wartości <xref:System.Windows.Data.MultiBinding.Mode%2A> i <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> właściwości określająfunkcjeisąużywanejakowartościdomyślnedlawszystkichpowiązańwkolekcji,chybażeposzczególnepowiązaniazastępujątewłaściwości.<xref:System.Windows.Data.MultiBinding> Na <xref:System.Windows.Data.MultiBinding.Mode%2A> przykład jeśli <xref:System.Windows.Data.MultiBinding.Mode%2A> Właściwość <xref:System.Windows.Data.MultiBinding> obiektu jest ustawiona na <xref:System.Windows.Data.BindingMode.TwoWay>, wszystkie powiązania w kolekcji są brane pod uwagę <xref:System.Windows.Data.BindingMode.TwoWay> , chyba że ustawisz inną wartość dla jednego ze powiązań jawnie. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=nameWithType> właściwości <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=nameWithType> i.  
  
 <xref:System.Windows.Data.MultiBinding>obecnie obsługuje tylko obiekty typu <xref:System.Windows.Data.Binding> , a nie <xref:System.Windows.Data.MultiBinding> lub. <xref:System.Windows.Data.PriorityBinding>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Data.MultiBinding" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt; Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingBase&gt; Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As Collection(Of BindingBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingBase ^&gt; ^ Bindings { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bindings : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt;" Usage="System.Windows.Data.MultiBinding.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Data.Binding" /> obiektów w tym <see cref="T:System.Windows.Data.MultiBinding" /> wystąpieniu.</summary>
        <value>Kolekcja <see cref="T:System.Windows.Data.Binding" /> obiektów. <see cref="T:System.Windows.Data.MultiBinding" />obecnie obsługuje tylko obiekty typu <see cref="T:System.Windows.Data.Binding" /> , a nie <see cref="T:System.Windows.Data.MultiBinding" /> lub. <see cref="T:System.Windows.Data.PriorityBinding" /> Dodanie elementu podrzędnego <see cref="T:System.Windows.Data.MultiBinding" /> do obiektu niejawnie <see cref="T:System.Windows.Data.BindingBase" /> dodaje element podrzędny <see cref="T:System.Windows.Data.MultiBinding" /> do kolekcji dla obiektu. <see cref="T:System.Windows.Data.Binding" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Tę właściwość można ustawić [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] tylko przy użyciu składni, która jest wyświetlana, lub uzyskując dostęp do obiektu kolekcji i korzystając z różnych metod, takich jak. `Add` Właściwość używana do uzyskiwania dostępu do obiektu kolekcja jest tylko do odczytu, podczas gdy sama kolekcja jest odczytywana/zapisu.  
  
<a name="xamlPropertyElementUsage_Bindings"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  oneOrMoreBindings  
</object>  
  
```  
  
<a name="xamlValues_Bindings"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oneOrMoreBindings*  
 Co najmniej jeden obiekt. <xref:System.Windows.Data.Binding>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IMultiValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IMultiValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IMultiValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IMultiValueConverter ^ Converter { System::Windows::Data::IMultiValueConverter ^ get(); void set(System::Windows::Data::IMultiValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IMultiValueConverter with get, set" Usage="System.Windows.Data.MultiBinding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IMultiValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia konwerter, który ma zostać użyty do konwersji wartości źródłowych na lub z wartości docelowej.</summary>
        <value>Wartość typu <see cref="T:System.Windows.Data.IMultiValueConverter" /> , która wskazuje konwerter do użycia. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poszczególne powiązania w kolekcji mogą mieć własne wartości <xref:System.Windows.Data.Binding.Converter%2A>. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.IValueConverter>.  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *myConverter*  
 Odwołanie do zasobu klasy, która implementuje <xref:System.Windows.Data.IMultiValueConverter> interfejs, który obejmuje implementacje <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> metod i <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> . Aby odwołać się do konwertera wartości, użyj [rozszerzeń znaczników i języka XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Data.MultiBinding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.CultureInfo" /> obiekt, który odnosi się do dowolnego konwertera przypisanego do <see cref="T:System.Windows.Data.MultiBinding" /> powiązań opakowanych <see cref="T:System.Windows.Data.MultiBinding" /> lub dla samego siebie.</summary>
        <value>Prawidłowy <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ConverterCulture"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object ConverterCulture="ietfLanguageTag"/>  
```  
  
<a name="xamlValues_ConverterCulture"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *ietfLanguageTag*  
 Ciąg służący do ustawiania <xref:System.Globalization.CultureInfo>. Ten ciąg jest używany do wywołania wewnętrznie. <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A>. Aby uzyskać szczegółowe informacje na temat formatu ciągu <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=nameWithType>, zobacz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.Data.MultiBinding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opcjonalny parametr do przekazania do konwertera jako dodatkowe informacje.</summary>
        <value>Parametr do przekazania do konwertera. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_ConverterParameter"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.ConverterParameter>  
    converterParameter  
  </object.ConverterParameter>  
</object>  
```  
  
<a name="xamlAttributeUsage_ConverterParameter"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="converterParameter" />  
```  
  
<a name="xamlValues_ConverterParameter"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *converterParameter*  
 Wartość typu oczekiwanego przez konwerter, który może być obiektem lub ciągiem w zależności od definicji i możliwości języka XAML obu używanych typów właściwości i implementacji konwertera. Konwerter przyjmuje ten typ przez `parameter` parametr określony przez jego <xref:System.Windows.Data.IValueConverter.Convert%2A> implementacje i <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.BindingMode with get, set" Usage="System.Windows.Data.MultiBinding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą kierunek przepływu danych tego powiązania.</summary>
        <value>Jedna z <see cref="T:System.Windows.Data.BindingMode" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Data.BindingMode.Default" />, która zwraca domyślną wartość trybu powiązania dla docelowej właściwości zależności. Jednak wartość domyślna jest różna dla każdej właściwości zależności. Ogólnie rzecz biorąc, edytowalne właściwości kontrolki, takie <see cref="P:System.Windows.Controls.TextBox.Text" />jak domyślnie, do powiązań dwukierunkowych, a większość innych właściwości domyślnie to powiązania jednokierunkowe.  
  
Programistyczny sposób, aby określić, czy właściwość zależności jest domyślnie wiążąca lub dwukierunkowo, polega na pobieraniu metadanych właściwości przy użyciu <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> , a następnie sprawdzaniu wartości <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> logicznej właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości <xref:System.Windows.Data.MultiBinding.Mode%2A> i <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> właściwości określająfunkcjeisąużywanejakowartościdomyślnedlawszystkichpowiązańwkolekcji,chybażeposzczególnepowiązaniazastępujątewłaściwości.<xref:System.Windows.Data.MultiBinding> Na <xref:System.Windows.Data.MultiBinding.Mode%2A> przykład jeśli <xref:System.Windows.Data.MultiBinding.Mode%2A> Właściwość <xref:System.Windows.Data.MultiBinding> obiektu jest ustawiona na <xref:System.Windows.Data.BindingMode.TwoWay>, wszystkie powiązania w kolekcji są brane pod uwagę <xref:System.Windows.Data.BindingMode.TwoWay> , chyba że ustawisz inną wartość dla jednego ze powiązań jawnie. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=nameWithType> właściwości <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=nameWithType> i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnSourceUpdated : bool with get, set" Usage="System.Windows.Data.MultiBinding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> zdarzenie ma zostać zgłoszone po przeniesieniu wartości z celu powiązania do źródła powiązania.</summary>
        <value><see langword="true" />Jeśli zdarzenie zostanie zgłoszone w przypadku zaktualizowania wartości źródła powiązania; <see langword="false" />w przeciwnym razie. <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnTargetUpdated : bool with get, set" Usage="System.Windows.Data.MultiBinding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> zdarzenie ma zostać zgłoszone po przeniesieniu wartości ze źródła powiązania do celu powiązania.</summary>
        <value><see langword="true" />Jeśli zdarzenie zostanie zgłoszone, <see langword="false" />gdy wartość docelowa powiązania zostanie zaktualizowana; w przeciwnym razie. <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.MultiBinding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zdarzenie <see cref="E:System.Windows.Controls.Validation.Error" /> dołączone ma zostać zgłoszone w elemencie związanym.</summary>
        <value><see langword="true" />Jeśli dołączone zdarzenie zostanie zgłoszone w elemencie związanym, gdy wystąpi błąd walidacji podczas aktualizacji źródła; <see langword="false" />w przeciwnym razie. <see cref="E:System.Windows.Controls.Validation.Error" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnValidationError" />
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeBindings : unit -&gt; bool" Usage="multiBinding.ShouldSerializeBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Data.MultiBinding.Bindings" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta `ShouldSerialize` Metoda jest dostępna, <xref:System.Windows.Data.MultiBinding.Bindings%2A> ponieważ właściwość nie ma prostej wartości domyślnej. Ta metoda wskazuje, czy właściwość została zmieniona z wartości domyślnej. Ta metoda jest zazwyczaj wywoływana, jeśli tworzysz projektanta dla <xref:System.Windows.Data.MultiBinding> lub opracowujesz własny formant, w którym znajduje <xref:System.Windows.Data.MultiBinding>się.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeValidationRules : unit -&gt; bool" Usage="multiBinding.ShouldSerializeValidationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, <see cref="P:System.Windows.Data.MultiBinding.ValidationRules" /> czy właściwość powinna być utrwalona.</summary>
        <returns><see langword="true" />Jeśli wartość właściwości została zmieniona z domyślną; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta `ShouldSerialize` Metoda jest dostępna, <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> ponieważ właściwość nie ma prostej wartości domyślnej. Ta metoda wskazuje, czy właściwość została zmieniona z wartości domyślnej. Ta metoda jest zazwyczaj wywoływana, jeśli tworzysz projektanta dla <xref:System.Windows.Data.MultiBinding> lub opracowujesz własny formant, w którym znajduje <xref:System.Windows.Data.MultiBinding>się.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt podrzędny do dodania.</param>
        <summary>Dodaje obiekt podrzędny.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma zostać dodany do obiektu.</param>
        <summary>Dodaje zawartość tekstową węzła do obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceExceptionFilter : System.Windows.Data.UpdateSourceExceptionFilterCallback with get, set" Usage="System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia procedurę obsługi, której można użyć, aby zapewnić niestandardową logikę obsługi wyjątków, które napotyka aparat powiązań podczas aktualizacji wartości źródłowej powiązania. Ma to zastosowanie tylko wtedy, <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> gdy masz skojarzone <see cref="T:System.Windows.Data.MultiBinding" /> z obiektem.</summary>
        <value>Metoda, która udostępnia logikę niestandardową do obsługi wyjątków, które aparat powiązania napotyka podczas aktualizacji wartości źródłowej powiązania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ExceptionValidationRule> Klasa reprezentuje wbudowaną regułę walidacji, która sprawdza wyjątki, które są zgłaszane podczas aktualizacji właściwości źródła powiązania. Jeśli <xref:System.Windows.Controls.ExceptionValidationRule> obiekt jest skojarzony <xref:System.Windows.Data.MultiBinding> z obiektem, można użyć tej właściwości do ustawienia programu obsługi, aby zapewnić niestandardową logikę obsługi tych wyjątków.  
  
 Aby zapoznać się z przykładem, zobacz <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=nameWithType>.  
  
 Aby uzyskać więcej informacji na temat procesu <xref:System.Windows.Data.MultiBinding> walidacji obiektów, <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> Zobacz właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceTrigger : System.Windows.Data.UpdateSourceTrigger with get, set" Usage="System.Windows.Data.MultiBinding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą chronometraż aktualizacji źródła powiązań.</summary>
        <value>Jedna z <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, która zwraca wartość domyślną <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> właściwości zależności docelowej. Jednak wartość domyślna dla większości właściwości zależności to <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, <see cref="P:System.Windows.Controls.TextBox.Text" /> natomiast Właściwość <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />ma wartość domyślną.  
  
Programistyczny sposób ustalania wartości domyślnej <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> właściwości zależności to pobieranie metadanych właściwości przy użyciu <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> , a następnie <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> sprawdzanie wartości właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości <xref:System.Windows.Data.MultiBinding.Mode%2A> i <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> właściwości określająfunkcjeisąużywanejakowartościdomyślnedlawszystkichpowiązańwkolekcji,chybażeposzczególnepowiązaniazastępujątewłaściwości.<xref:System.Windows.Data.MultiBinding> Na <xref:System.Windows.Data.MultiBinding.Mode%2A> przykład jeśli <xref:System.Windows.Data.MultiBinding.Mode%2A> Właściwość <xref:System.Windows.Data.MultiBinding> obiektu jest ustawiona na <xref:System.Windows.Data.BindingMode.TwoWay>, wszystkie powiązania w kolekcji są brane pod uwagę <xref:System.Windows.Data.BindingMode.TwoWay> , chyba że ustawisz inną wartość dla jednego ze powiązań jawnie. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=nameWithType> właściwości <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=nameWithType> i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnDataErrors : bool with get, set" Usage="System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ma zostać uwzględniony <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</summary>
        <value><see langword="true" />Aby uwzględnić <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; w przeciwnym razie <see langword="false" />,.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości stanowi alternatywę dla użycia <xref:System.Windows.Controls.DataErrorValidationRule> elementu jawnie. To wbudowana reguła walidacji, która sprawdza, czy występują błędy wywoływane <xref:System.ComponentModel.IDataErrorInfo> przez implementację obiektu źródłowego. <xref:System.Windows.Controls.DataErrorValidationRule> Jeśli wystąpi błąd, aparat powiązań tworzy <xref:System.Windows.Controls.ValidationError> z błędem i dodaje go <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> do kolekcji powiązanego elementu. Brak błędu czyści tę opinię weryfikacyjną, chyba że inna reguła zgłasza problem z walidacją.  
  
 Aby uzyskać więcej informacji na temat procesu <xref:System.Windows.Data.MultiBinding> walidacji obiektów, <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> Zobacz właściwość.  
  
 <xref:System.Windows.Data.MultiBinding.ValidatesOnDataErrors%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnExceptions : bool with get, set" Usage="System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ma zostać uwzględniony <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
        <value><see langword="true" />Aby uwzględnić <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; w przeciwnym razie <see langword="false" />,.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości stanowi alternatywę dla użycia <xref:System.Windows.Controls.ExceptionValidationRule> elementu jawnie. <xref:System.Windows.Controls.ExceptionValidationRule> Jest wbudowaną regułą walidacji, która sprawdza wyjątki, które są zgłaszane podczas aktualizacji właściwości source. Jeśli wyjątek jest zgłaszany, aparat powiązań tworzy <xref:System.Windows.Controls.ValidationError> wyjątek i dodaje go <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> do kolekcji powiązanego elementu. Brak błędu czyści tę opinię weryfikacyjną, chyba że inna reguła zgłasza problem z walidacją.  
  
 Aby uzyskać więcej informacji na temat procesu <xref:System.Windows.Data.MultiBinding> walidacji obiektów, <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> Zobacz właściwość.  
  
 <xref:System.Windows.Data.MultiBinding.ValidatesOnExceptions%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataErrors : bool with get, set" Usage="System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ma zostać uwzględniony <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</summary>
        <value><see langword="true" />Aby uwzględnić <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; w przeciwnym razie <see langword="false" />,. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors%2A> tak `true`jest, powiązanie sprawdza i raportuje błędy, które są zgłaszane przez źródło danych implementujące <xref:System.ComponentModel.INotifyDataErrorInfo>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.MultiBinding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Controls.ValidationRule" /> obiektów dla tego <see cref="T:System.Windows.Data.MultiBinding" />wystąpienia.</summary>
        <value>Kolekcja <see cref="T:System.Windows.Controls.ValidationRule" /> obiektów dla tego <see cref="T:System.Windows.Data.MultiBinding" />wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można ustawić reguły walidacji zarówno <xref:System.Windows.Data.MultiBinding> dla obiektu, jak i poszczególnych <xref:System.Windows.Data.Binding> obiektów w <xref:System.Windows.Data.MultiBinding> obiekcie. Aparat powiązań szacuje <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> obiekt na obiekcie, <xref:System.Windows.Data.MultiBinding> gdy wartość jest przenoszona z właściwości cel <xref:System.Windows.Data.IMultiValueConverter> powiązania do obiektu. Po wykonaniu tej wartości, gdy wartość zostanie przeniesiona z konwertera do właściwości źródło powiązania pojedynczego powiązania, aparat powiązań oblicza <xref:System.Windows.Data.Binding.ValidationRules%2A> na tym <xref:System.Windows.Data.Binding> obiekcie.  
  
 Aby uzyskać więcej informacji na temat procesu sprawdzania poprawności i sposobu dostarczania informacji zwrotnych, zobacz "Sprawdzanie poprawności danych" w temacie [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).  
  
> [!NOTE]
>  Tę właściwość można ustawić [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] tylko przy użyciu podanej składni lub przez uzyskanie dostępu do obiektu kolekcji i użycie jego różnych metod, takich jak. `Add` Właściwość służąca do uzyskiwania dostępu do obiektu kolekcja jest tylko do odczytu, podczas gdy sama kolekcja jest do odczytu i zapisu.  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oneOrMoreValidationRules*  
 Co najmniej jeden obiekt. <xref:System.Windows.Controls.ValidationRule> Możesz użyć <xref:System.Windows.Controls.ExceptionValidationRule> klasy lub utworzyć reguły niestandardowe przez podklasy <xref:System.Windows.Controls.ValidationRule> klasy.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159972">Przykład walidacji powiązania</related>
      </Docs>
    </Member>
  </Members>
</Type>
