<Type Name="BindingExpressionBase" FullName="System.Windows.Data.BindingExpressionBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a52c6ef3222d98bae66cf2a5677dfaf5d4330482" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69211076" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingExpressionBase : System.Windows.Expression, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingExpressionBase extends System.Windows.Expression implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpressionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingExpressionBase&#xA;Inherits Expression&#xA;Implements IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingExpressionBase abstract : System::Windows::Expression, System::Windows::IWeakEventListener" />
  <TypeSignature Language="F#" Value="type BindingExpressionBase = class&#xA;    inherit Expression&#xA;    interface IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Expression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje klasę bazową dla <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.PriorityBindingExpression" />i <see cref="T:System.Windows.Data.MultiBindingExpression" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać informacje na temat powiązań i wyrażeń powiązań, zobacz "Binding and BindingExpression" (powiązanie i tworzenie powiązań [danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md)).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup BindingGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup BindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ BindingGroup { System::Windows::Data::BindingGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroup : System.Windows.Data.BindingGroup" Usage="System.Windows.Data.BindingExpressionBase.BindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> Pobiera, do którego należy to wyrażenie powiązania.</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> To wyrażenie powiązania należy do. Ta właściwość zwraca <see langword="null" /> wartość, <see cref="T:System.Windows.Data.BindingExpressionBase" /> Jeśli nie jest częścią <see cref="T:System.Windows.Data.BindingGroup" />elementu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasError">
      <MemberSignature Language="C#" Value="public virtual bool HasError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.HasError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasError : bool" Usage="System.Windows.Data.BindingExpressionBase.HasError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy powiązanie nadrzędne ma regułę walidacji zakończonej niepowodzeniem.</summary>
        <value><see langword="true" />Jeśli powiązanie nadrzędne ma regułę walidacji zakończonej niepowodzeniem; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest taka sama jak <xref:System.Windows.Data.BindingExpressionBase.HasValidationError%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Validation.HasError" />
        <altmember cref="P:System.Windows.Data.MultiBindingExpression.HasError" />
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public virtual bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingExpressionBase.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy powiązanie nadrzędne ma regułę walidacji zakończonej niepowodzeniem.</summary>
        <value><see langword="true" />Jeśli powiązanie nadrzędne ma regułę walidacji zakończonej niepowodzeniem; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest taka sama jak <xref:System.Windows.Data.BindingExpressionBase.HasValidationError%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingExpressionBase.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy obiekt docelowy powiązania ma wartość, która nie została zapisywana w źródle.</summary>
        <value><see langword="true" />Jeśli obiekt docelowy ma wartość, która nie została zapisywana w źródle; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko <xref:System.Windows.Data.Binding.Mode%2A> wtedy, gdy właściwość <xref:System.Windows.Data.Binding> nadrzędna jest <xref:System.Windows.Data.BindingMode.TwoWay> ustawiona <xref:System.Windows.Data.BindingMode.OneWayToSource>na lub.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBindingBase">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ParentBindingBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ParentBindingBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentBindingBase As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ParentBindingBase { System::Windows::Data::BindingBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentBindingBase : System.Windows.Data.BindingBase" Usage="System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt <see cref="T:System.Windows.Data.BindingBase" /> , z którego jest <see cref="T:System.Windows.Data.BindingExpressionBase" /> tworzony ten obiekt.</summary>
        <value>Obiekt, z którego jest <see cref="T:System.Windows.Data.BindingExpressionBase" /> tworzony ten obiekt. <see cref="T:System.Windows.Data.BindingBase" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As BindingStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingStatus Status { System::Windows::Data::BindingStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Windows.Data.BindingStatus" Usage="System.Windows.Data.BindingExpressionBase.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan wyrażenia powiązania.</summary>
        <value><see cref="T:System.Windows.Data.BindingStatus" /> Wartość opisująca stan wyrażenia powiązania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">Typ <see cref="T:System.Windows.WeakEventManager" /> wywołania tej metody. To rozpoznaje tylko obiekty kierownika typu <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
        <param name="sender">Obiekt, który pochodzi ze zdarzenia.</param>
        <param name="e">Dane zdarzenia.</param>
        <summary>Ten element członkowski obsługuje [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczony do użycia bezpośrednio w kodzie.</summary>
        <returns><see langword="true" />Jeśli odbiornik obsłużył zdarzenie; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.Target" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Target As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Target { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingExpressionBase.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element, który jest obiektem docelowym powiązania tego wyrażenia powiązania.</summary>
        <value>Element, który jest obiektem docelowym powiązania tego wyrażenia powiązania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ TargetProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Data.BindingExpressionBase.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwość target obiektu Binding tego wyrażenia powiązania.</summary>
        <value>Właściwość Target powiązania tego wyrażenia powiązania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public virtual void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.UpdateSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateSource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateSource();" />
      <MemberSignature Language="F#" Value="abstract member UpdateSource : unit -&gt; unit&#xA;override this.UpdateSource : unit -&gt; unit" Usage="bindingExpressionBase.UpdateSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wysyła bieżącą wartość docelową powiązania do źródła powiązania w <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> programie <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> lub.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie istnieje domyślna implementacja klasy bazowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public virtual void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.UpdateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateTarget ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateTarget();" />
      <MemberSignature Language="F#" Value="abstract member UpdateTarget : unit -&gt; unit&#xA;override this.UpdateTarget : unit -&gt; unit" Usage="bindingExpressionBase.UpdateTarget " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wymusza transfer danych ze źródła powiązania do celu powiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie istnieje domyślna implementacja klasy bazowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingExpressionBase.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia wszystkie <see cref="T:System.Windows.Controls.ValidationRule" /> obiekty skojarzone <see cref="T:System.Windows.Data.Binding" /> <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> z właściwością ustawioną na lub <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />. <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> Ta metoda nie aktualizuje źródła.</summary>
        <returns><see langword="true" />Jeśli reguły walidacji zakończyły się powodzeniem; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate%2A> Metoda umożliwia uruchamianie reguł walidacji dla powiązania bez aktualizowania źródła powiązania. Jest to przydatne, gdy chcesz sprawdzić poprawność danych wejściowych użytkownika i zaktualizować źródło w różnym czasie w aplikacji.  
  
 Załóżmy na przykład, że masz formularz, aby zaktualizować źródło danych, które zawiera przycisk Prześlij. Chcesz przekazać użytkownikowi opinię o wprowadzeniu nieprawidłowej wartości przed próbą przesłania formularza przez użytkownika. <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> Możesz sprawdzić poprawność pola, ustawiając właściwość powiązania na <xref:System.Windows.Data.UpdateSourceTrigger.Explicit> i wywołując <xref:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate%2A> po <xref:System.Windows.Controls.TextBox> utracie fokusu.  
  
   
  
## Examples  
 Poniższy przykład ilustruje scenariusz, który został omówiony w sekcji uwagi. W tym przykładzie użytkownik może wprowadzić dane dla elementu biblioteki i przesłać dane. Powiązanie <xref:System.Windows.Controls.TextBox> z nazwą `callNum` jest <xref:System.Windows.Controls.ValidationRule> skojarzone z nim. Gdy utraci fokus, przykład wywołuje <xref:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate%2A>. <xref:System.Windows.Controls.TextBox> Gdy użytkownik kliknie przycisk Prześlij, przykład wywołuje <xref:System.Windows.Data.BindingExpressionBase.UpdateSource%2A> , aby zatwierdzić zmiany. Poniższy kod XAML tworzy interfejs użytkownika dla aplikacji.  
  
 [!code-xaml[BindingExpressionBaseValidateWithoutUpdating#WindowXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/csharp/window1.xaml#windowxaml)]  
  
 Poniższy przykład przedstawia logikę interfejsu użytkownika.  
  
 [!code-csharp[BindingExpressionBaseValidateWithoutUpdating#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/csharp/window1.xaml.cs#windowlogic)]
 [!code-vb[BindingExpressionBaseValidateWithoutUpdating#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/visualbasic/window1.xaml.vb#windowlogic)]  
  
 Poniższy przykład pokazuje obiekt danych i <xref:System.Windows.Controls.ValidationRule> dla aplikacji.  
  
 [!code-csharp[BindingExpressionBaseValidateWithoutUpdating#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/csharp/data.cs#data)]
 [!code-vb[BindingExpressionBaseValidateWithoutUpdating#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/visualbasic/data.vb#data)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationError">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationError ValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationError ValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.ValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ValidationError As ValidationError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Controls::ValidationError ^ ValidationError { System::Windows::Controls::ValidationError ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationError : System.Windows.Controls.ValidationError" Usage="System.Windows.Data.BindingExpressionBase.ValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, który spowodował nieprawidłowe <see cref="T:System.Windows.Data.BindingExpressionBase" /> wystąpienie tego wystąpienia. <see cref="T:System.Windows.Controls.ValidationError" /></summary>
        <value>, Który spowodował nieprawidłowe <see cref="T:System.Windows.Data.BindingExpressionBase" /> wystąpienie tego wystąpienia. <see cref="T:System.Windows.Controls.ValidationError" /></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.Validation.Errors" />
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingExpressionBase.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Controls.ValidationError" /> obiektów, która spowodowała nieprawidłowe <see cref="T:System.Windows.Data.BindingExpressionBase" /> wystąpienie tego wystąpienia.</summary>
        <value>Kolekcja <see cref="T:System.Windows.Controls.ValidationError" /> obiektów, która spowodowała nieprawidłowe <see cref="T:System.Windows.Data.BindingExpressionBase" /> wystąpienie tego wystąpienia.  Wartość jest <see langword="null" /> w przypadku braku błędów.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
