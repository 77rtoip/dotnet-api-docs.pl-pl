<Type Name="FilterEventArgs" FullName="System.Windows.Data.FilterEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fdadb4ab63c9fa7da789fe9f598c2e897995cfdb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30699041" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FilterEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.FilterEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje i zdarzeń danych, z którym skojarzony jest <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić programu obsługi zdarzeń dla <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> zdarzeń. W tym przykładzie `listingDataView` jest wystąpieniem <xref:System.Windows.Data.CollectionViewSource>.  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 Poniższy przykład przedstawia implementację przykładu `ShowOnlyBargainsFilter` filtru programu obsługi zdarzeń. Ten program obsługi zdarzeń używa <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> właściwość, aby odfiltrować `AuctionItem` obiektów, które mają `CurrentPrice` 25,00 lub nowszej.  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 Aby uzyskać pełny przykład, zobacz [pokaz powiązania danych](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Data.CollectionViewSource.Filter" />
  </Docs>
  <Members>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public bool Accepted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Accepted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.FilterEventArgs.Accepted" />
      <MemberSignature Language="VB.NET" Value="Public Property Accepted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Accepted { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy element przekazuje filtru.</summary>
        <value>
          <see langword="true" /> Jeśli element przekazuje filtru; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić programu obsługi zdarzeń dla <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> zdarzeń. W tym przykładzie `listingDataView` jest wystąpieniem <xref:System.Windows.Data.CollectionViewSource>.  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 Poniższy przykład przedstawia implementację przykładu `ShowOnlyBargainsFilter` filtru programu obsługi zdarzeń. Ten program obsługi zdarzeń używa <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> właściwość, aby odfiltrować `AuctionItem` obiektów, które mają `CurrentPrice` 25,00 lub nowszej.  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 Aby uzyskać pełny przykład, zobacz [pokaz powiązania danych](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.CollectionViewSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.FilterEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który należy przetestować filtr.</summary>
        <value>Obiekt, który należy przetestować filtr. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić programu obsługi zdarzeń dla <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> zdarzeń. W tym przykładzie `listingDataView` jest wystąpieniem <xref:System.Windows.Data.CollectionViewSource>.  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 Poniższy przykład przedstawia implementację przykładu `ShowOnlyBargainsFilter` filtru programu obsługi zdarzeń. Ten program obsługi zdarzeń używa <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> właściwość, aby odfiltrować `AuctionItem` obiektów, które mają `CurrentPrice` 25,00 lub nowszej.  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 Aby uzyskać pełny przykład, zobacz [pokaz powiązania danych](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.CollectionViewSource.Filter" />
      </Docs>
    </Member>
  </Members>
</Type>