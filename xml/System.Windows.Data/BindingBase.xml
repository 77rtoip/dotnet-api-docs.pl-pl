<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16b2ad519a66da27fad56d6b69c93a0c477b1407" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48755348" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje typowe cechy <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" />, i <see cref="T:System.Windows.Data.MultiBinding" /> klasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> metody jest zapieczętowany, klasa niestandardowego powiązania, która jest pochodną <xref:System.Windows.Data.BindingBase> nie będą działać poprawnie jako [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] — rozszerzenie znaczników.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Windows.Data.BindingGroup" /> do którego należy to wiązanie.</summary>
        <value>Nazwa <see cref="T:System.Windows.Data.BindingGroup" /> do którego należy to wiązanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> nie jest ustawiona, powiązanie należy do <xref:System.Windows.Data.BindingGroup> tylko wtedy, gdy źródło wiążące i <xref:System.Windows.FrameworkElement.DataContext%2A> elementu nadrzędnego, który ma <xref:System.Windows.Data.BindingGroup> są tego samego obiektu.  
  
 Jeśli <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> jest ustawiona na wartość wiązania należy do <xref:System.Windows.Data.BindingGroup> jeśli są spełnione następujące warunki:  
  
-   <xref:System.Windows.Data.BindingGroup.Name%2A> z <xref:System.Windows.Data.BindingGroup> i <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> są takie same.  
  
-   <xref:System.Windows.Data.BindingGroup> Należy do elementu nadrzędnego elementu docelowego powiązania.  
  
 Jeśli <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> ustawiono `null`, powiązanie nigdy nie jest częścią <xref:System.Windows.Data.BindingGroup>.  
  
 Może zawierać powiązań, które mają źródła, która różni się od <xref:System.Windows.FrameworkElement.DataContext%2A> elementu nadrzędnego, który ma <xref:System.Windows.Data.BindingGroup> , ustawiając <xref:System.Windows.Data.BindingGroup.Name%2A> z <xref:System.Windows.Data.BindingGroup> i <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> właściwość powiązanie z taką samą wartość.  Można wykluczyć powiązań, które mają tego samego źródła jako <xref:System.Windows.FrameworkElement.DataContext%2A> elementu nadrzędnego, który ma <xref:System.Windows.Data.BindingGroup> , ustawiając <xref:System.Windows.Data.BindingGroup.Name%2A> z <xref:System.Windows.Data.BindingGroup> i <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> właściwości powiązania różne wartości.  
  
   
  
## Examples  
 Poniższe przykłady są częścią aplikacji, która sprawdza, czy użytkownik ma ustawioną właściwości dwóch obiektów na równą wartości. Pierwszy przykład umożliwia utworzenie dwóch <xref:System.Windows.Controls.TextBox> formantów, z których każdy jest powiązany z innego źródła danych: wiązanie pierwszy <xref:System.Windows.Controls.TextBox> jest częścią <xref:System.Windows.Data.BindingGroup> ponieważ <xref:System.Windows.Controls.TextBox> dziedziczy <xref:System.Windows.FrameworkElement.DataContext%2A> i <xref:System.Windows.Data.BindingGroup> z jego nadrzędny <xref:System.Windows.Controls.StackPanel>  
  
 Powiązanie w drugiej <xref:System.Windows.Controls.TextBox> jest częścią <xref:System.Windows.Data.BindingGroup> ponieważ <xref:System.Windows.Data.BindingGroup.Name%2A> z <xref:System.Windows.Data.BindingGroup> i <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> z <xref:System.Windows.Data.Binding> są ustawione na `bindingGroup`.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Controls.ValidationRule> używającej w poprzednim przykładzie.  W <xref:System.Windows.Controls.ValidationRule.Validate%2A> metody przykład pobiera każdy obiekt źródłowy z <xref:System.Windows.Data.BindingGroup> i sprawdza, czy właściwości obiektów są takie same.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ilość czasu (w milisekundach) oczekiwania przed zaktualizowaniem źródło wiążące po wartości na zmiany docelowego.</summary>
        <value>Ilość czasu (w milisekundach) oczekiwania przed zaktualizowaniem źródło wiążące.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli używasz powiązania Aby zaktualizować źródło powiązania, zmianie wartości właściwości w elemencie docelowym można skonfigurować ustawienie <xref:System.Windows.Data.Binding.Mode%2A> właściwości <xref:System.Windows.Data.BindingMode.TwoWay> i <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> do <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  W takiej sytuacji można użyć <xref:System.Windows.Data.BindingBase.Delay%2A> właściwości w celu określenia, czy powinien być opóźnienie między po zmianie obiektu docelowego i po zaktualizowaniu źródłowej.  Jest to przydatne, gdy chcesz umożliwić użytkownikom zmianę właściwości w obiekcie źródła, ale nie chcesz, aby każda zmiana, aby od razu zatwierdzane do źródła.  Na przykład załóżmy, że masz pole tekstowe, która jest powiązana z danymi dwukierunkowego właściwości obiektu danych.  Gdy użytkownik zmieni wartość w polu tekstowym, źródłowej jest aktualizowany.  Aby umożliwić wykonanie tego scenariusza, należy ustawić <xref:System.Windows.Data.Binding.Mode%2A> właściwość <xref:System.Windows.Data.Binding> do <xref:System.Windows.Data.BindingMode.TwoWay> i <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> do <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  Aby zapobiec aktualizowanie obiektu źródłowego przy każdym naciśnięciu klawisza, ustaw <xref:System.Windows.Data.BindingBase.Delay%2A> właściwość rozsądną wartość, aby spowodować, że powiązanie, które można zaktualizować tylko wtedy, gdy upłynął tego przedziału czasu, ponieważ użytkownik zatrzymał, wpisując.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość do użycia podczas wiązania nie może zwracać wartości.</summary>
        <value>Wartość domyślna to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiązanie pomyślnie zwraca wartość, jeśli:  
  
1.  Ścieżka do źródła powiązania rozwiązuje się pomyślnie.  
  
2.  Konwerter wartości, jest w stanie można przekonwertować wartości wynikowej.  
  
3.  Wartość wynikowa jest prawidłowa dla właściwości docelowej (docelowy) powiązania.  
  
 Jeśli zwróci 1 i 2 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, właściwość docelowa jest ustawiona na wartość <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, jeśli jest dostępny. Jeśli ma nie <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, używana jest wartość domyślna właściwości docelowej.  
  
 Wartość <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> nie jest uważany za pomyślne wartości zwracanej.  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 **— lub —**  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *fallbackValue*  
 Wartość atrybutu lub obiektu element tego samego typu jak właściwość docelowa. Zobacz dokumentację tego typu informacje o użyciu XAML. Tego typu może mogą nie obsługiwać składni atrybutów dla jej wartości lub może być lub może nie obsługiwać składnia elementu obiektu (co wymaga domyślnego konstruktora dla tego typu). Typ właściwości docelowej w związku z tym będzie miał wpływ na składni, których używasz dla wartości <xref:System.Windows.Data.BindingBase.FallbackValue%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Obiekt, który może zapewnić usługi rozszerzenia znaczników. Może być <see langword="null" />;</param>
        <summary>Zwraca obiekt, który powinien być ustawiony na właściwość gdzie tego powiązania i rozszerzenia są stosowane.</summary>
        <returns>Wartość do ustawienia właściwości docelowej powiązania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja zapewnia obsługę podstawowa składnia dla powiązania za pomocą [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] dla wszystkich, pod warunkiem praktyczne klas pochodnych (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, i <xref:System.Windows.Data.MultiBinding>).  
  
 <xref:System.Windows.Data.BindingBase> Powinien zwrócić obiekt wyrażenia, który jest wynikiem powiązanie klasy implementacja tej metody. Powiązanie z właściwością polega na przeznaczonych dla danej <xref:System.Windows.DependencyProperty> na danej <xref:System.Windows.DependencyObject>. Te dwa rodzaje informacji są przekazywane przy użyciu zapytań dotyczących <xref:System.Windows.Markup.IProvideValueTarget> implementacji na `serviceProvider`, który [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] czytnika sprawia, że dostępne podczas analizowania powiązania. Ta implementacja klasy bazowej jest odpowiedzialna za sprawdzanie prawidłowego <xref:System.Windows.DependencyProperty> i <xref:System.Windows.DependencyObject>. Jeśli te zostaną znalezione, rzeczywistą implementację przekazujących wyrażenia wiązania znajduje się do różnych klas pochodnych, zaimplementowany przez wywołanie klasy bazowej wewnętrznego metodę abstrakcyjną. W przeciwnym razie rozszerzenie zwraca samego obiektu powiązania. Zwracanie powiązania, sama powoduje błąd niezgodności typu, ale nie powinno to nastąpić w normalnych warunkach.  
  
> [!IMPORTANT]
>  Ponieważ składnia wiązania za pośrednictwem [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] zaimplementowanego w tej metody polega na przesłonięcie wewnętrznej implementacji i dlatego <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> sam jest zapieczętowany, klasa niestandardowego powiązania, która jest pochodną <xref:System.Windows.Data.BindingBase> nie będą działać poprawnie jako [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] — rozszerzenie znaczników.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy procesy serializacji należy serializować wartość <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> właściwości wystąpienia tej klasy.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> wartość właściwości powinna być Zserializowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> powinien zostać Zserializowany właściwości.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> właściwość powinna być Zserializowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg, który określa sposób formatowania wiązanie, jeśli wyświetlana jest powiązana wartość jako ciąg.</summary>
        <value>Ciąg, który określa sposób formatowania wiązanie, jeśli wyświetlana jest powiązana wartość jako ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingBase.StringFormat%2A> można wstępnie zdefiniowanych, złożonych lub niestandardowy ciąg formatu. Aby uzyskać więcej informacji na temat ciągów formatów, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Jeśli ustawisz <xref:System.Windows.Data.Binding.Converter%2A> i <xref:System.Windows.Data.BindingBase.StringFormat%2A> właściwości, konwerter jest stosowana do wartości danych, a następnie <xref:System.Windows.Data.BindingBase.StringFormat%2A> jest stosowany.  
  
 Po ustawieniu <xref:System.Windows.Data.BindingBase.StringFormat%2A> na <xref:System.Windows.Data.Binding> do formatu ciągu złożonego, można określić tylko jeden parametr.  
  
 Kiedy używasz <xref:System.Windows.Data.MultiBinding>, <xref:System.Windows.Data.BindingBase.StringFormat%2A> właściwość ma zastosowanie tylko wtedy, gdy jest ustawiona na <xref:System.Windows.Data.MultiBinding>.  Wartość <xref:System.Windows.Data.BindingBase.StringFormat%2A> na wszystkich podrzędnych ustawiono <xref:System.Windows.Data.Binding> obiektów jest ignorowana.  Liczba parametrów w formacie ciągu złożonego nie może przekraczać liczbę podrzędnych <xref:System.Windows.Data.Binding> obiekty w <xref:System.Windows.Data.MultiBinding>.  
  
 Kiedy używasz <xref:System.Windows.Data.PriorityBinding>, można ustawić <xref:System.Windows.Data.BindingBase.StringFormat%2A> na <xref:System.Windows.Data.PriorityBinding>na obiekty wiązanie dziecka i / lub.  Jeśli <xref:System.Windows.Data.BindingBase.StringFormat%2A> zestawu w elemencie podrzędnym, oznacza to powiązanie stosuje się, że wartość jest używana.  Jeśli <xref:System.Windows.Data.BindingBase.StringFormat%2A> nie jest ustawiona na powiązanie podrzędne, która jest stosowana <xref:System.Windows.Data.BindingBase.StringFormat%2A> z <xref:System.Windows.Data.PriorityBinding> jest stosowana, jeśli jest ustawiona.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Windows.Data.BindingBase.StringFormat%2A> właściwości, aby przekonwertować `Price`, czyli <xref:System.Double>, ciąg, który reprezentuje walutę.  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 W poniższym przykładzie użyto <xref:System.Windows.Data.BindingBase.StringFormat%2A> właściwość <xref:System.Windows.Data.MultiBinding> do skonstruowania ciągu, który zawiera `Description` i `Price` dla każdego elementu w <xref:System.Windows.Controls.ListBox>.  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która jest używana w elemencie docelowym, gdy jest to wartość źródła <see langword="null" />.</summary>
        <value>Wartość, która jest używana w elemencie docelowym w przypadku wartość źródła <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 **— lub —**  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *nullValue*  
 Wartość atrybutu lub obiektu element tego samego typu jak właściwość docelowa. Zobacz dokumentację tego typu informacje o użyciu XAML. Tego typu może mogą nie obsługiwać składni atrybutów dla jej wartości lub może być lub może nie obsługiwać składnia elementu obiektu (co wymaga domyślnego konstruktora dla tego typu).  
  
   
  
## Examples  
 Poniższy przykład tworzy powiązanie <xref:System.Windows.Controls.TextBox> do właściwości obiektu.  Jeśli właściwość jest `null`, <xref:System.Windows.Controls.TextBox> Wyświetla "Wprowadź ciąg."  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>