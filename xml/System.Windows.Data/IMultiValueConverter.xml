<Type Name="IMultiValueConverter" FullName="System.Windows.Data.IMultiValueConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f70447b0ff4c17465e2dfa012481a247deb73c9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30699275" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiValueConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Umożliwia stosowanie niestandardowej logiki w <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby skojarzyć konwertera z <xref:System.Windows.Data.MultiBinding>, Utwórz klasę, która implementuje <xref:System.Windows.Data.IMultiValueConverter> interfejs, a następnie wdrożyć <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> i <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> metody.  
  
 Poszczególne powiązania w kolekcji może mieć własne konwertery wartości. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.IValueConverter>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values">Tablica wartości powiązania źródła w <see cref="T:System.Windows.Data.MultiBinding" /> tworzy. Wartość <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> wskazuje, czy powiązanie źródło nie ma wartości do zapewnienia konwersji.</param>
        <param name="targetType">Typ powiązania właściwości target.</param>
        <param name="parameter">Parametr konwertera do użycia.</param>
        <param name="culture">Kultura używana w konwerterze.</param>
        <summary>Konwertuje wartości źródła wartość cel wiązania. Aparat wiązania danych wywołuje tę metodę, gdy propaguje on wartości powiązania źródła cel wiązania.</summary>
        <returns>Wartość przekonwertowana.  
  
 Jeśli metoda zwraca <see langword="null" />, poprawne <see langword="null" /> wartość jest używana.  
  
 Zwracana wartość <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> Wskazuje, czy konwerter nie dostarczył wartość i użyje powiązania <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> Jeśli jest dostępna, albo innego użyje wartości domyślnej.  
  
 Zwracana wartość <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> Wskazuje, że powiązanie nie transfer wartości lub użyć <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> lub wartość domyślną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aparat wiązania danych nie przechwytuje wyjątków, które są generowane przez konwerter dostarczone przez użytkownika. Wyjątku zgłoszonego przez <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> metody lub nieprzechwyconych wyjątków, które są generowane przez metody który <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> wywołania metody są traktowane jako błędy środowiska wykonawczego. Obsługi przewidywanego problemów przez zwrócenie <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Wartość, która tworzy cel wiązania.</param>
        <param name="targetTypes">Tablica typów, aby przekonwertować. Długość tablicy wskazuje liczbę i typy wartości, które sugerowane metody do zwrócenia.</param>
        <param name="parameter">Parametr konwertera do użycia.</param>
        <param name="culture">Kultura używana w konwerterze.</param>
        <summary>Konwertuje wartość docelowa powiązania wartości powiązania źródła.</summary>
        <returns>Tablica wartości, które zostały przekonwertowane do wartości źródła z wartością docelową.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli istnieją wartości zwracanych więcej niż powiązania <xref:System.Windows.Data.MultiBinding>, nadmiarowe wartości zwracane są ignorowane. W przypadku więcej powiązania źródła niż liczba wartości zwracanych pozostałych powiązania źródła nie masz żadnych wartości na nich. Typy zwracane wartości nie są weryfikowane względem `targetTypes`; wartości są ustawiane na powiązania źródła bezpośrednio.  
  
 Zwraca <xref:System.Windows.Data.Binding.DoNothing> na pozycji `i` do wskazywania wartości należy ustawić dla powiązania źródła w indeksie `i`.  
  
 Zwraca <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue> na pozycji `i` do wskazywania konwerter nie można podać wartość dla powiązania źródła w indeksie `i`, a nie wartość jest należy ustawić na nim.  
  
 Zwraca `null` aby wskazać, że konwerter nie może dokonać konwersji, lub że nie obsługuje konwersji w tym kierunku.  
  
 Aparat wiązania danych nie przechwytuje wyjątków, które są generowane przez konwerter dostarczone przez użytkownika. Wyjątku zgłoszonego przez <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> metody lub dowolnej nieprzechwyconych wyjątków, które są generowane przez metody który <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> wywołania metody są traktowane jako błędy środowiska wykonawczego. Obsługi przewidywanego problemów przez zwrócenie `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
  </Members>
</Type>