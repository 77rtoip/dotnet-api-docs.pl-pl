<Type Name="IMultiValueConverter" FullName="System.Windows.Data.IMultiValueConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfe54d48669bdaa8b22abe86873e8ed50e1237c1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69210518" /></Metadata><TypeSignature Language="C#" Value="public interface IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiValueConverter" />
  <TypeSignature Language="F#" Value="type IMultiValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zapewnia sposób zastosowania logiki niestandardowej w <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby <xref:System.Windows.Data.MultiBinding>skojarzyć konwerter z, Utwórz klasę, która <xref:System.Windows.Data.IMultiValueConverter> implementuje interfejs <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> , a następnie Zaimplementuj metody i <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> .  
  
 Poszczególne powiązania w kolekcji mogą mieć własne konwertery wartości. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.IValueConverter>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iMultiValueConverter.Convert (values, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values">Tablica wartości zwracanych przez powiązania <see cref="T:System.Windows.Data.MultiBinding" /> źródłowe. Wartość <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> wskazuje, że powiązanie źródłowe nie ma wartości do zapewnienia konwersji.</param>
        <param name="targetType">Typ właściwości docelowej powiązania.</param>
        <param name="parameter">Parametr konwertera do użycia.</param>
        <param name="culture">Kultura, która ma być używana w konwerterze.</param>
        <summary>Konwertuje wartości źródłowe na wartość elementu docelowego powiązania. Aparat powiązań danych wywołuje tę metodę, gdy propaguje wartości ze powiązań źródłowych do docelowego powiązania.</summary>
        <returns>Przekonwertowana wartość.  
  
Jeśli metoda zwróci <see langword="null" />metodę, używana jest <see langword="null" /> prawidłowa wartość.  
  
Wartość zwracana przez <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> wskazuje, że konwerter nie wygenerował wartości i że powiązanie będzie używać <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> elementu, jeśli jest dostępny, lub w przeciwnym razie użyje wartości domyślnej.  
  
Wartość zwracana przez <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> wskazuje, że powiązanie nie przetransferuje wartości lub Użyj <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> lub wartości domyślnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aparat powiązań danych nie przechwytuje wyjątków zgłaszanych przez konwerter dostarczony przez użytkownika. Każdy wyjątek, który jest generowany przez <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> metodę lub wszelkie nieprzechwycone wyjątki, które są zgłaszane przez metody <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> wywołania metody, są traktowane jako błędy czasu wykonywania. Obsługa przewidywanych problemów przez zwrócenie <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]" Usage="iMultiValueConverter.ConvertBack (value, targetTypes, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Wartość dostarczana przez obiekt docelowy powiązania.</param>
        <param name="targetTypes">Tablica typów do przekonwertowania na. Długość tablicy wskazuje liczbę i typy wartości, które są sugerowane dla metody do zwrócenia.</param>
        <param name="parameter">Parametr konwertera do użycia.</param>
        <param name="culture">Kultura, która ma być używana w konwerterze.</param>
        <summary>Konwertuje wartość docelową powiązania na źródłowe wartości powiązania.</summary>
        <returns>Tablica wartości przekonwertowanych z wartości docelowej z powrotem do wartości źródłowych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli istnieje więcej wartości zwracanych <xref:System.Windows.Data.MultiBinding>, niż istnieją powiązania w, nadmiarowe wartości zwracane są ignorowane. Jeśli istnieje więcej powiązań źródłowych niż wartości zwracane, pozostałe powiązania źródłowe nie mają ustawionych wartości. Typy wartości zwracanych nie są weryfikowane `targetTypes`względem; wartości są ustawiane bezpośrednio dla powiązań źródłowych.  
  
 Wróć <xref:System.Windows.Data.Binding.DoNothing> z pozycji `i` , aby wskazać, że nie ma być ustawiona wartość w powiązaniu źródłowym w `i`indeksie.  
  
 Return <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue> na pozycji `i` wskaż, że konwerter nie jest w stanie dostarczyć wartości dla powiązania źródłowego w indeksie `i`i że żadna wartość nie ma być ustawiona.  
  
 Wróć `null` , aby wskazać, że konwerter nie może wykonać konwersji lub że nie obsługuje konwersji w tym kierunku.  
  
 Aparat powiązań danych nie przechwytuje wyjątków zgłaszanych przez konwerter dostarczony przez użytkownika. Każdy wyjątek, który jest generowany przez <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> metodę lub wszystkie nieprzechwycone wyjątki, które są zgłaszane przez metody <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> , które wywołuje metoda, są traktowane jako błędy czasu wykonywania. Obsługa przewidywanych problemów przez zwrócenie `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
  </Members>
</Type>
