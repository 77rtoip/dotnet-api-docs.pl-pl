<Type Name="ListCollectionView" FullName="System.Windows.Data.ListCollectionView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4fd8367d4e3ebba997e2e064e66c037f4c40a76" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69210484" /></Metadata><TypeSignature Language="C#" Value="public class ListCollectionView : System.Windows.Data.CollectionView, System.Collections.IComparer, System.ComponentModel.ICollectionViewLiveShaping, System.ComponentModel.IEditableCollectionViewAddNewItem, System.ComponentModel.IItemProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListCollectionView extends System.Windows.Data.CollectionView implements class System.Collections.IComparer, class System.ComponentModel.ICollectionViewLiveShaping, class System.ComponentModel.IEditableCollectionView, class System.ComponentModel.IEditableCollectionViewAddNewItem, class System.ComponentModel.IItemProperties" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.ListCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListCollectionView&#xA;Inherits CollectionView&#xA;Implements ICollectionViewLiveShaping, IComparer, IEditableCollectionViewAddNewItem, IItemProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListCollectionView : System::Windows::Data::CollectionView, System::Collections::IComparer, System::ComponentModel::ICollectionViewLiveShaping, System::ComponentModel::IEditableCollectionViewAddNewItem, System::ComponentModel::IItemProperties" />
  <TypeSignature Language="F#" Value="type ListCollectionView = class&#xA;    inherit CollectionView&#xA;    interface IComparer&#xA;    interface IEditableCollectionViewAddNewItem&#xA;    interface IEditableCollectionView&#xA;    interface ICollectionViewLiveShaping&#xA;    interface IItemProperties" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.CollectionView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICollectionViewLiveShaping</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionViewAddNewItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IItemProperties</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="638a3-101">Reprezentuje widok kolekcji dla kolekcji, które implementują <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-101">Represents the collection view for collections that implement <see cref="T:System.Collections.IList" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-102">Po utworzeniu powiązania z kolekcją danych można sortować, filtrować lub grupować dane.</span><span class="sxs-lookup"><span data-stu-id="638a3-102">When you bind to a data collection, you may want to sort, filter, or group the data.</span></span> <span data-ttu-id="638a3-103">W tym celu należy użyć widoków kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-103">To do that, you use collection views.</span></span> <span data-ttu-id="638a3-104">Można traktować <xref:System.Windows.Data.CollectionView> jako warstwę na górze kolekcji źródeł powiązań, która pozwala na nawigowanie i wyświetlanie kolekcji źródłowej na podstawie zapytań sortowania, filtrowania i grup, bez konieczności manipulowania podstawową kolekcją źródłową.</span><span class="sxs-lookup"><span data-stu-id="638a3-104">You can think of a <xref:System.Windows.Data.CollectionView> as the layer on top of the binding source collection that allows you to navigate and display the source collection based on sort, filter, and group queries, all without having to manipulate the underlying source collection itself.</span></span> <span data-ttu-id="638a3-105">Jeśli kolekcja źródłowa implementuje <xref:System.Collections.Specialized.INotifyCollectionChanged> interfejs, zmiany zgłoszone <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> przez zdarzenie są propagowane do widoków.</span><span class="sxs-lookup"><span data-stu-id="638a3-105">If the source collection implements the <xref:System.Collections.Specialized.INotifyCollectionChanged> interface, the changes raised by the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event are propagated to the views.</span></span>  
  
 <span data-ttu-id="638a3-106">Wszystkie kolekcje mają wartość domyślną <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="638a3-106">All collections have a default <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="638a3-107">Dla wszystkich kolekcji implementujących <xref:System.Collections.IList> <xref:System.Windows.Data.ListCollectionView> obiekt jest domyślnym obiektem widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-107">For all collections implementing <xref:System.Collections.IList>, the <xref:System.Windows.Data.ListCollectionView> object is the default view object.</span></span> <span data-ttu-id="638a3-108">Jest klasą widoku kolekcji używaną dla kolekcji, które implementują <xref:System.ComponentModel.IBindingList>. <xref:System.Windows.Data.BindingListCollectionView></span><span class="sxs-lookup"><span data-stu-id="638a3-108">The <xref:System.Windows.Data.BindingListCollectionView> is the collection view class used for collections that implement <xref:System.ComponentModel.IBindingList>.</span></span> <span data-ttu-id="638a3-109">Aby uzyskać widok domyślny, należy użyć <xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="638a3-109">To get the default view, you use the <xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A> method.</span></span> <span data-ttu-id="638a3-110">Aby zapoznać się z przykładem, zobacz [How to: Pobierz domyślny widok kolekcji](~/docs/framework/wpf/data/how-to-get-the-default-view-of-a-data-collection.md)danych.</span><span class="sxs-lookup"><span data-stu-id="638a3-110">For an example, see [How to: Get the Default View of a Data Collection](~/docs/framework/wpf/data/how-to-get-the-default-view-of-a-data-collection.md).</span></span>  
  
 <span data-ttu-id="638a3-111">Aby uzyskać więcej informacji o widokach kolekcji, zobacz temat [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="638a3-111">For more information about collection views, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListCollectionView (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListCollectionView(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.ListCollectionView : System.Collections.IList -&gt; System.Windows.Data.ListCollectionView" Usage="new System.Windows.Data.ListCollectionView list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="638a3-112">Kolekcja źródłowa, która musi być <see cref="T:System.Collections.IList" />zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="638a3-112">The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="638a3-113">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Data.ListCollectionView" /> klasy przy użyciu dostarczonej kolekcji implementującej <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-113">Initializes a new instance of the <see cref="T:System.Windows.Data.ListCollectionView" /> class, using a supplied collection that implements <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer ActiveComparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ActiveComparer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ActiveComparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property ActiveComparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ ActiveComparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveComparer : System.Collections.IComparer with get, set" Usage="System.Windows.Data.ListCollectionView.ActiveComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-114">Pobiera lub ustawia bieżącą aktywną funkcję porównującą używaną podczas sortowania.</span><span class="sxs-lookup"><span data-stu-id="638a3-114">Gets or sets the current active comparer that is used in sorting.</span></span></summary>
        <value><span data-ttu-id="638a3-115"><see cref="T:System.Collections.IComparer" /> Obiekt, który jest aktywnym modułem porównującym.</span><span class="sxs-lookup"><span data-stu-id="638a3-115">An <see cref="T:System.Collections.IComparer" /> object that is the active comparer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveFilter">
      <MemberSignature Language="C#" Value="protected Predicate&lt;object&gt; ActiveFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; ActiveFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ActiveFilter" />
      <MemberSignature Language="VB.NET" Value="Protected Property ActiveFilter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Predicate&lt;System::Object ^&gt; ^ ActiveFilter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveFilter : Predicate&lt;obj&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.ActiveFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-116">Pobiera lub ustawia bieżące aktywne <see cref="P:System.Windows.Data.CollectionView.Filter" /> wywołanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="638a3-116">Gets or sets the current active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</span></span></summary>
        <value><span data-ttu-id="638a3-117">Aktywne <see cref="P:System.Windows.Data.CollectionView.Filter" /> wywołanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="638a3-117">The active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj&#xA;override this.AddNew : unit -&gt; obj" Usage="listCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.AddNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="638a3-118">Uruchamia Dodaj transakcję i zwraca oczekujący nowy element.</span><span class="sxs-lookup"><span data-stu-id="638a3-118">Starts an add transaction and returns the pending new item.</span></span></summary>
        <returns><span data-ttu-id="638a3-119">Oczekujący nowy element.</span><span class="sxs-lookup"><span data-stu-id="638a3-119">The pending new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-120">Wywołanie <xref:System.Windows.Data.ListCollectionView.AddNew%2A> uruchamia proces dodawania transakcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-120">Calling <xref:System.Windows.Data.ListCollectionView.AddNew%2A> starts an add transaction.</span></span> <span data-ttu-id="638a3-121">Należy wywołać <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> lub <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> zakończyć dodawanie transakcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-121">You should call <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="638a3-122">Nowy element jest zawsze wyświetlany w widoku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-122">A new item always appears in the collection view.</span></span> <span data-ttu-id="638a3-123">Wszelkie filtrowanie, sortowanie lub grupowanie stosowane do widoku jest stosowane do nowego elementu, gdy <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="638a3-123">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public object AddNewItem (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNewItem(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNewItem (newItem As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNewItem(System::Object ^ newItem);" />
      <MemberSignature Language="F#" Value="abstract member AddNewItem : obj -&gt; obj&#xA;override this.AddNewItem : obj -&gt; obj" Usage="listCollectionView.AddNewItem newItem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="newItem"><span data-ttu-id="638a3-124">Obiekt, który ma zostać dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-124">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="638a3-125">Dodaje określony obiekt do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-125">Adds the specified object to the collection.</span></span></summary>
        <returns><span data-ttu-id="638a3-126">Obiekt, który został dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-126">The object that was added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-127"><xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> Wywołanie metody powoduje rozpoczęcie dodawania transakcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-127">Calling the <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> method starts an add transaction.</span></span> <span data-ttu-id="638a3-128">Należy wywołać metody lub <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> , aby zakończyć dodawanie transakcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-128">You should call the <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> methods to end the add transaction.</span></span> <span data-ttu-id="638a3-129">Nowy element jest zawsze wyświetlany w widoku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-129">A new item always appears in the collection view.</span></span> <span data-ttu-id="638a3-130">Wszelkie filtrowanie, sortowanie lub grupowanie stosowane do widoku jest stosowane do nowego elementu, gdy <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="638a3-130">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="638a3-131">Nie można dodać obiektu do <see cref="T:System.Windows.Data.ListCollectionView" /> elementu przy <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="638a3-131">An object cannot be added to the <see cref="T:System.Windows.Data.ListCollectionView" /> by using the <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> method.</span></span></exception>
        <altmember cref="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.Windows.Data.ListCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CanAddNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-132">Pobiera wartość wskazującą, czy do kolekcji można dodać nowy element.</span><span class="sxs-lookup"><span data-stu-id="638a3-132">Gets a value that indicates whether a new item can be added to the collection.</span></span></summary>
        <value><span data-ttu-id="638a3-133"><see langword="true" />Jeśli do kolekcji można dodać nowy element, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-133"><see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-134">Można utworzyć nowy element dla kolekcji, jeśli nie ma żadnej transakcji edycji, jeśli kolekcja nie ma ustalonego rozmiaru i <xref:System.Windows.Data.ListCollectionView> jeśli może utworzyć obiekt poprawnego typu. <xref:System.Windows.Data.ListCollectionView></span><span class="sxs-lookup"><span data-stu-id="638a3-134">The <xref:System.Windows.Data.ListCollectionView> can create a new item for the collection if there is no edit transaction occurring, if the collection is not a fixed size, and if the <xref:System.Windows.Data.ListCollectionView> can create an object of the correct type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      </Docs>
    </Member>
    <Member MemberName="CanAddNewItem">
      <MemberSignature Language="C#" Value="public bool CanAddNewItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNewItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanAddNewItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNewItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNewItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNewItem : bool" Usage="System.Windows.Data.ListCollectionView.CanAddNewItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-135">Pobiera wartość wskazującą, czy do kolekcji można dodać określony obiekt.</span><span class="sxs-lookup"><span data-stu-id="638a3-135">Gets a value that indicates whether a specified object can be added to the collection.</span></span></summary>
        <value><span data-ttu-id="638a3-136"><see langword="true" />Jeśli określony obiekt można dodać do kolekcji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-136"><see langword="true" /> if a specified object can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-137">Jeśli właściwość jest `true`, można określić obiekt do dodania do kolekcji, wywołując <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> metodę. <xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A></span><span class="sxs-lookup"><span data-stu-id="638a3-137">If the <xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> property is `true`, you can specify an object to add to the collection by calling the <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> method.</span></span> <span data-ttu-id="638a3-138"><xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A>`false` czy nie można dodać elementów do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-138"><xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> is `false` if items cannot be added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem" />
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.Windows.Data.ListCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CanCancelEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-139">Pobiera wartość wskazującą, czy widok kolekcji może odrzucać oczekujące zmiany i przywracać oryginalne wartości edytowanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="638a3-139">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span></span></summary>
        <value><span data-ttu-id="638a3-140"><see langword="true" />Jeśli widok kolekcji może odrzucić oczekujące zmiany i przywrócić oryginalne wartości edytowanego obiektu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-140"><see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-141"><xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A>czy edytowany element <xref:System.ComponentModel.IEditableObject?displayProperty=nameWithType> implementuje interfejs. `true`</span><span class="sxs-lookup"><span data-stu-id="638a3-141"><xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `true` if the edited item implements the <xref:System.ComponentModel.IEditableObject?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="638a3-142">Jeśli <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> jest `false`, wywołaj, aby spowodować zamknięcie stanu edycji i dostarczenie logiki, aby przywrócić zmiany w edytowanym obiekcie.</span><span class="sxs-lookup"><span data-stu-id="638a3-142">If <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `false`, call <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit&#xA;override this.CancelEdit : unit -&gt; unit" Usage="listCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.CancelEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="638a3-143">Zamyka edytowanie transakcji, a jeśli to możliwe, przywraca oryginalną wartość do elementu.</span><span class="sxs-lookup"><span data-stu-id="638a3-143">Ends the edit transaction, and if possible, restores the original value to the item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-144"><xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>ustawia <xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A> na`null` i powoduje, że widok kolekcji zakończy edytowanie stanu.</span><span class="sxs-lookup"><span data-stu-id="638a3-144"><xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> sets <xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span> <span data-ttu-id="638a3-145">Jeśli <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> jest `true` ,<xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> przywraca również oryginalne wartości edytowanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="638a3-145">If <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `true`, <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit&#xA;override this.CancelNew : unit -&gt; unit" Usage="listCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.CancelNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="638a3-146">Zamyka Dodawanie transakcji i odrzuca oczekujące nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="638a3-146">Ends the add transaction and discards the pending new item.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveFiltering">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveFiltering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveFiltering : bool" Usage="System.Windows.Data.ListCollectionView.CanChangeLiveFiltering" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-147">Pobiera wartość wskazującą, czy widok kolekcji obsługuje Włączanie i wyłączanie filtrowania danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-147">Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</span></span></summary>
        <value><span data-ttu-id="638a3-148"><see langword="true" />we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="638a3-148"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveGrouping">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveGrouping { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveGrouping : bool" Usage="System.Windows.Data.ListCollectionView.CanChangeLiveGrouping" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-149">Pobiera wartość wskazującą, czy widok kolekcji obsługuje Włączanie i wyłączanie grupowania danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-149">Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</span></span></summary>
        <value><span data-ttu-id="638a3-150"><see langword="true" />we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="638a3-150"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveSorting">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveSorting : bool" Usage="System.Windows.Data.ListCollectionView.CanChangeLiveSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-151">Pobiera wartość wskazującą, czy widok kolekcji obsługuje Włączanie i wyłączanie sortowania danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-151">Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</span></span></summary>
        <value><span data-ttu-id="638a3-152"><see langword="true" />we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="638a3-152"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFilter">
      <MemberSignature Language="C#" Value="public override bool CanFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanFilter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFilter : bool" Usage="System.Windows.Data.ListCollectionView.CanFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-153">Pobiera wartość wskazującą, czy widok obsługuje filtrowanie na podstawie wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="638a3-153">Gets a value that indicates whether the view supports callback-based filtering.</span></span></summary>
        <value><span data-ttu-id="638a3-154">Dla domyślnego wystąpienia programu <see cref="T:System.Windows.Data.ListCollectionView" />ta właściwość zawsze zwraca wartość. <see langword="true" /></span><span class="sxs-lookup"><span data-stu-id="638a3-154">For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-155">Użyj tej właściwości, aby sprawdzić, czy bieżąca implementacja obsługuje filtrowanie przed przypisaniem wywołania zwrotnego do dziedziczonej <xref:System.Windows.Data.CollectionView.Filter%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="638a3-155">Use this property to test whether the current implementation supports filtering before assigning a callback to the inherited <xref:System.Windows.Data.CollectionView.Filter%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGroup">
      <MemberSignature Language="C#" Value="public override bool CanGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanGroup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanGroup { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGroup : bool" Usage="System.Windows.Data.ListCollectionView.CanGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-156">Pobiera wartość wskazującą, czy widok kolekcji obsługuje grupowanie.</span><span class="sxs-lookup"><span data-stu-id="638a3-156">Gets a value that indicates whether the collection view supports grouping.</span></span></summary>
        <value><span data-ttu-id="638a3-157"><see langword="true" />Jeśli widok kolekcji obsługuje grupowanie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-157"><see langword="true" /> if the collection view supports grouping; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.Windows.Data.ListCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CanRemove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-158">Pobiera wartość wskazującą, czy element można usunąć z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-158">Gets a value that indicates whether an item can be removed from the collection.</span></span></summary>
        <value><span data-ttu-id="638a3-159"><see langword="true" />Jeśli element można usunąć z kolekcji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-159"><see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-160"><xref:System.Windows.Data.ListCollectionView.CanRemove%2A>`true` czy kolekcja nie jest stałym rozmiarem, a w przypadku niewystąpienia transakcji Dodaj lub Edytuj.</span><span class="sxs-lookup"><span data-stu-id="638a3-160"><xref:System.Windows.Data.ListCollectionView.CanRemove%2A> is `true` if the collection is not a fixed size and if an add or edit transaction is not occurring.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Windows.Data.ListCollectionView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-161">Pobiera wartość wskazującą, czy widok kolekcji obsługuje sortowanie.</span><span class="sxs-lookup"><span data-stu-id="638a3-161">Gets a value that indicates whether the collection view supports sorting.</span></span></summary>
        <value><span data-ttu-id="638a3-162">Dla domyślnego wystąpienia programu <see cref="T:System.Windows.Data.ListCollectionView" />ta właściwość zawsze zwraca wartość. <see langword="true" /></span><span class="sxs-lookup"><span data-stu-id="638a3-162">For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit&#xA;override this.CommitEdit : unit -&gt; unit" Usage="listCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.CommitEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="638a3-163">Zamyka edytowanie transakcji i zapisuje oczekujące zmiany.</span><span class="sxs-lookup"><span data-stu-id="638a3-163">Ends the edit transaction and saves the pending changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit&#xA;override this.CommitNew : unit -&gt; unit" Usage="listCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.CommitNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="638a3-164">Zamyka Dodawanie transakcji i zapisuje oczekujący nowy element.</span><span class="sxs-lookup"><span data-stu-id="638a3-164">Ends the add transaction and saves the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-165">Wszelkie filtrowanie, sortowanie lub grupowanie, które są stosowane do <xref:System.Windows.Data.ListCollectionView> elementu, jest stosowane do nowej pozycji, gdy <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="638a3-165">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.ListCollectionView> is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected virtual int Compare (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Compare(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Compare (o1 As Object, o2 As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Compare(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="listCollectionView.Compare (o1, o2)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="638a3-166">Pierwszy obiekt, który ma zostać porównany.</span><span class="sxs-lookup"><span data-stu-id="638a3-166">The first object to compare.</span></span></param>
        <param name="o2"><span data-ttu-id="638a3-167">Drugi obiekt, który będzie porównywany.</span><span class="sxs-lookup"><span data-stu-id="638a3-167">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="638a3-168">Porównuje dwa obiekty i zwraca wartość wskazującą, czy jedna z nich jest mniejsza, równa lub większa od drugiej.</span><span class="sxs-lookup"><span data-stu-id="638a3-168">Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="638a3-169">Wartość mniejsza niż zero <paramref name="o1" /> , jeśli jest <paramref name="o2" />mniejsza niż, <paramref name="o1" /> zero <paramref name="o2" /> , jeśli jest równa lub większa od <paramref name="o1" /> zera, jeśli <paramref name="o2" />jest większa niż.</span><span class="sxs-lookup"><span data-stu-id="638a3-169">Less than zero if <paramref name="o1" /> is less than <paramref name="o2" />, zero if <paramref name="o1" /> and <paramref name="o2" /> are equal, or greater than zero if <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public override bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.Contains : obj -&gt; bool" Usage="listCollectionView.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="638a3-170">Obiekt do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="638a3-170">The object to check.</span></span></param>
        <summary><span data-ttu-id="638a3-171">Zwraca wartość wskazującą, czy dany element należy do widoku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-171">Returns a value that indicates whether a given item belongs to the collection view.</span></span></summary>
        <returns><span data-ttu-id="638a3-172"><see langword="true" />Jeśli element należy do widoku kolekcji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-172"><see langword="true" /> if the item belongs to the collection view; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-173">Ta metoda nie przyjmuje żadnych założeń dotyczących tego, czy element należy do źródłowej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-173">This method does not make any assumptions about whether the item belongs to the underlying collection.</span></span> <span data-ttu-id="638a3-174">Jeśli wiesz, że element należy do źródłowej kolekcji, bardziej wydajne jest wywołanie <xref:System.Windows.Data.ListCollectionView.PassesFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="638a3-174">If you know that the item belongs to the underlying collection, it is more efficient to call <xref:System.Windows.Data.ListCollectionView.PassesFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Data.ListCollectionView.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-175">Pobiera szacowaną liczbę rekordów.</span><span class="sxs-lookup"><span data-stu-id="638a3-175">Gets the estimated number of records.</span></span></summary>
        <value><span data-ttu-id="638a3-176">Jeden z poniższych:</span><span class="sxs-lookup"><span data-stu-id="638a3-176">One of the following:</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="638a3-177">Wartość</span><span class="sxs-lookup"><span data-stu-id="638a3-177">Value</span></span>  
  
 </term><description> <span data-ttu-id="638a3-178">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="638a3-178">Meaning</span></span>  
  
 </description></listheader><item><term> <span data-ttu-id="638a3-179">-1</span><span class="sxs-lookup"><span data-stu-id="638a3-179">-1</span></span>  
  
 </term><description> <span data-ttu-id="638a3-180">Nie można określić liczby kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-180">Could not determine the count of the collection.</span></span> <span data-ttu-id="638a3-181">Może to zostać zwrócone przez widok "Wirtualizacja", gdzie Widok celowo nie uwzględnia wszystkich elementów w kolekcji źródłowej, ponieważ widok próbuje zwiększyć wydajność i zminimalizować zależność od zawsze, gdy cała kolekcja jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="638a3-181">This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is trying to increase efficiency and minimize dependence on always having the whole collection available.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="638a3-182">dowolna inna liczba całkowita</span><span class="sxs-lookup"><span data-stu-id="638a3-182">any other integer</span></span>  
  
 </term><description> <span data-ttu-id="638a3-183">Liczba kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-183">The count of the collection.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-184">Należy zauważyć, że ta liczba reprezentuje liczbę przefiltrowanych.</span><span class="sxs-lookup"><span data-stu-id="638a3-184">Note that this count represents the filtered count.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.Windows.Data.ListCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CurrentAddItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-185">Pobiera element, który jest dodawany podczas bieżącego dodawania transakcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-185">Gets the item that is being added during the current add transaction.</span></span></summary>
        <value><span data-ttu-id="638a3-186">Element, który jest dodawany, jeśli <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> jest <see langword="true" />; w przeciwnym <see langword="null" />razie.</span><span class="sxs-lookup"><span data-stu-id="638a3-186">The item that is being added if <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.Windows.Data.ListCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CurrentEditItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-187">Pobiera element z edytowanej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-187">Gets the item in the collection that is being edited.</span></span></summary>
        <value><span data-ttu-id="638a3-188">Element w kolekcji, który jest edytowany, <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> <see langword="null" />jeśli jest <see langword="true" />; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="638a3-188">The item in the collection that is being edited if <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      </Docs>
    </Member>
    <Member MemberName="CustomSort">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer CustomSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer CustomSort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CustomSort" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomSort As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ CustomSort { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomSort : System.Collections.IComparer with get, set" Usage="System.Windows.Data.ListCollectionView.CustomSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-189">Pobiera lub ustawia obiekt niestandardowy implementujący <see cref="T:System.Collections.IComparer" /> sortowanie elementów w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-189">Gets or sets a custom object that implements <see cref="T:System.Collections.IComparer" /> to sort items in the view.</span></span></summary>
        <value><span data-ttu-id="638a3-190">Kryteria sortowania jako implementację programu <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-190">The sort criteria as an implementation of <see cref="T:System.Collections.IComparer" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-191">Ustawienie tej właściwości powoduje natychmiastowe odświeżenie, <xref:System.Windows.Data.CollectionView.DeferRefresh%2A> chyba że jest to obowiązujące.</span><span class="sxs-lookup"><span data-stu-id="638a3-191">Setting this property causes an immediate refresh unless a <xref:System.Windows.Data.CollectionView.DeferRefresh%2A> is in effect.</span></span>  
  
 <span data-ttu-id="638a3-192">Ustawienie tej właściwości czyści wcześniej ustawioną <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="638a3-192">Setting this property clears a previously set <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit&#xA;override this.EditItem : obj -&gt; unit" Usage="listCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="638a3-193">Element do edycji.</span><span class="sxs-lookup"><span data-stu-id="638a3-193">The item to edit.</span></span></param>
        <summary><span data-ttu-id="638a3-194">Rozpoczyna edytowanie transakcji określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="638a3-194">Begins an edit transaction of the specified item.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public override Predicate&lt;object&gt; Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Filter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Predicate&lt;System::Object ^&gt; ^ Filter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : Predicate&lt;obj&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-195">Pobiera lub ustawia metodę, która jest używana do określenia, czy element jest odpowiedni do uwzględnienia w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-195">Gets or sets a method that is used to determine whether an item is suitable for inclusion in the view.</span></span></summary>
        <value><span data-ttu-id="638a3-196">Delegat reprezentujący metodę, która jest używana do określenia, czy element jest odpowiedni do uwzględnienia w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-196">A delegate that represents the method that is used to determine whether an item is suitable for inclusion in the view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listCollectionView.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="638a3-197">Zwraca obiekt, którego można użyć do wyliczenia elementów w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-197">Returns an object that you can use to enumerate the items in the view.</span></span></summary>
        <returns><span data-ttu-id="638a3-198"><see cref="T:System.Collections.IEnumerator" /> Obiekt, którego można użyć do wyliczenia elementów w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-198">An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-199">Wystąpienia modułu wyliczającego są zwykle używane do przeprowadzania asynchronicznych operacji sprawdzania zawartości kolekcji lub w tym przypadku zawartości widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-199">Enumerator instances are typically used for making asynchronous checks of the contents of a collection, or in this case, the contents of the view.</span></span> <span data-ttu-id="638a3-200">Na przykład, jeśli zamierzasz uruchomić `foreach` iterację nad zawartością widoku, lepszym rozwiązaniem może być uzyskanie kopii asynchronicznej, aby upewnić się, że długość elementów widoku nie zmienia się nieoczekiwanie w Midway przez pętlę.</span><span class="sxs-lookup"><span data-stu-id="638a3-200">For example, if you are about to start a `foreach` iteration over the contents of the view, it may be better to obtain an asynchronous copy to ensure that the length of the view items does not change unexpectedly midway through the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public override object GetItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetItemAt (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetItemAt(int index);" />
      <MemberSignature Language="F#" Value="override this.GetItemAt : int -&gt; obj" Usage="listCollectionView.GetItemAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="638a3-201">Indeks (liczony od zera), w którym znajduje się element.</span><span class="sxs-lookup"><span data-stu-id="638a3-201">The zero-based index at which the item is located.</span></span></param>
        <summary><span data-ttu-id="638a3-202">Pobiera element w określonym położeniu w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-202">Retrieves the item at the specified position in the view.</span></span></summary>
        <returns><span data-ttu-id="638a3-203">Element w określonej pozycji w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-203">The item at the specified position in the view.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-204">Ta metoda oblicza <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>indeks przy użyciu właściwości, <xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A>, <xref:System.Windows.Data.CollectionView.Filter%2A>i <xref:System.Windows.Data.ListCollectionView.CustomSort%2A> , które są ustawione w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-204">This method evaluates the index with any <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>, <xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A>, <xref:System.Windows.Data.CollectionView.Filter%2A>, and <xref:System.Windows.Data.ListCollectionView.CustomSort%2A> properties that are set on the view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="638a3-205">Jeśli <paramref name="index" /> jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="638a3-205">If <paramref name="index" /> is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBySelector">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Data.GroupDescriptionSelectorCallback GroupBySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.GroupDescriptionSelectorCallback GroupBySelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupBySelector As GroupDescriptionSelectorCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Data::GroupDescriptionSelectorCallback ^ GroupBySelector { System::Windows::Data::GroupDescriptionSelectorCallback ^ get(); void set(System::Windows::Data::GroupDescriptionSelectorCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBySelector : System.Windows.Data.GroupDescriptionSelectorCallback with get, set" Usage="System.Windows.Data.ListCollectionView.GroupBySelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.GroupDescriptionSelectorCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-206">Pobiera lub ustawia delegata w celu wybrania <see cref="T:System.ComponentModel.GroupDescription" /> jako funkcji grupy nadrzędnej i jej poziomu.</span><span class="sxs-lookup"><span data-stu-id="638a3-206">Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</span></span></summary>
        <value><span data-ttu-id="638a3-207">Metoda, która udostępnia logikę wyboru <see cref="T:System.ComponentModel.GroupDescription" /> jako funkcji grupy nadrzędnej i jej poziomu.</span><span class="sxs-lookup"><span data-stu-id="638a3-207">A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</span></span> <span data-ttu-id="638a3-208">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-208">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="GroupDescriptions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt; GroupDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.ComponentModel.GroupDescription&gt; GroupDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GroupDescriptions As ObservableCollection(Of GroupDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ GroupDescriptions { System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupDescriptions : System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;" Usage="System.Windows.Data.ListCollectionView.GroupDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-209">Pobiera kolekcję <see cref="T:System.ComponentModel.GroupDescription" /> obiektów, które opisują, w jaki sposób elementy w kolekcji są pogrupowane w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-209">Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</span></span></summary>
        <value><span data-ttu-id="638a3-210">Kolekcja <see cref="T:System.ComponentModel.GroupDescription" /> obiektów, które opisują, w jaki sposób elementy w kolekcji są pogrupowane w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-210">A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="638a3-211">Tę właściwość można ustawić tylko przez uzyskanie dostępu do obiektu kolekcja i użycie jego różnych metod, takich `Add`jak.</span><span class="sxs-lookup"><span data-stu-id="638a3-211">This property can only be set by accessing the collection object and using its various methods such as `Add`.</span></span> <span data-ttu-id="638a3-212">Właściwość uzyskiwania dostępu do obiektu kolekcji jest tylko do odczytu; sama kolekcja to odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="638a3-212">The property to access the collection object itself is read-only; the collection itself is read/write.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="638a3-213">Poniższy przykład pokazuje, jak używać tej właściwości:</span><span class="sxs-lookup"><span data-stu-id="638a3-213">The following example shows how to use this property:</span></span>  
  
 [!code-csharp[DataBindingLab#6](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#6)]
 [!code-vb[DataBindingLab#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#6)]  
  
 <span data-ttu-id="638a3-214">Aby zapoznać się z pełnym przykładem, zobacz [Demonstracja powiązania danych](https://go.microsoft.com/fwlink/?LinkID=163703).</span><span class="sxs-lookup"><span data-stu-id="638a3-214">For the complete example, see [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;object&gt; Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;object&gt; Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Groups As ReadOnlyObservableCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ Groups { System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;obj&gt;" Usage="System.Windows.Data.ListCollectionView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-215">Pobiera grupy najwyższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="638a3-215">Gets the top-level groups.</span></span></summary>
        <value><span data-ttu-id="638a3-216">Kolekcja tylko do odczytu grup najwyższego poziomu lub <see langword="null" /> Jeśli nie ma żadnych grup.</span><span class="sxs-lookup"><span data-stu-id="638a3-216">A read-only collection of the top-level groups, or <see langword="null" /> if there are no groups.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-217">Elementy w kolekcji są typu <xref:System.Windows.Data.CollectionViewGroup>.</span><span class="sxs-lookup"><span data-stu-id="638a3-217">The items in the collection are of type <xref:System.Windows.Data.CollectionViewGroup>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public override int IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IndexOf (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int IndexOf(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : obj -&gt; int" Usage="listCollectionView.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="638a3-218">Obiekt do sprawdzenia w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-218">The object to check for in the collection.</span></span></param>
        <summary><span data-ttu-id="638a3-219">Zwraca indeks, w którym dany element danych należy do kolekcji lub-1, jeśli indeks tego elementu jest nieznany.</span><span class="sxs-lookup"><span data-stu-id="638a3-219">Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown.</span></span></summary>
        <returns><span data-ttu-id="638a3-220">Indeks elementu w kolekcji lub <c>-1</c> , jeśli element nie istnieje w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-220">The index of the item in the collection, or <c>-1</c> if the item does not exist in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalContains">
      <MemberSignature Language="C#" Value="protected bool InternalContains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool InternalContains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalContains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool InternalContains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.InternalContains : obj -&gt; bool" Usage="listCollectionView.InternalContains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="638a3-221">Element do zlokalizowania.</span><span class="sxs-lookup"><span data-stu-id="638a3-221">The item to locate.</span></span></param>
        <summary><span data-ttu-id="638a3-222">Zwraca wartość wskazującą, czy <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> zawiera ona element.</span><span class="sxs-lookup"><span data-stu-id="638a3-222">Return a value that indicates whether the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item.</span></span></summary>
        <returns><span data-ttu-id="638a3-223"><see langword="true" />Jeśli zawiera element; w przeciwnym razie <see langword="false" />. <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /></span><span class="sxs-lookup"><span data-stu-id="638a3-223"><see langword="true" /> if the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalCount">
      <MemberSignature Language="C#" Value="protected int InternalCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InternalCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.InternalCount" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InternalCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int InternalCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalCount : int" Usage="System.Windows.Data.ListCollectionView.InternalCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-224">Pobiera liczbę rekordów w <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-224">Gets the number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <value><span data-ttu-id="638a3-225">Liczba rekordów w <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-225">The number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetEnumerator">
      <MemberSignature Language="C#" Value="protected System.Collections.IEnumerator InternalGetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.IEnumerator InternalGetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalGetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::IEnumerator ^ InternalGetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.InternalGetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listCollectionView.InternalGetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="638a3-226">Zwraca moduł wyliczający dla <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />elementu.</span><span class="sxs-lookup"><span data-stu-id="638a3-226">Returns an enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <returns><span data-ttu-id="638a3-227">Moduł wyliczający dla <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-227">An enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalIndexOf">
      <MemberSignature Language="C#" Value="protected int InternalIndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 InternalIndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalIndexOf (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int InternalIndexOf(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.InternalIndexOf : obj -&gt; int" Usage="listCollectionView.InternalIndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="638a3-228">Element, dla którego ma zostać zwrócony indeks.</span><span class="sxs-lookup"><span data-stu-id="638a3-228">The item to return an index for.</span></span></param>
        <summary><span data-ttu-id="638a3-229">Zwraca indeks określonego elementu w <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-229">Returns the index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <returns><span data-ttu-id="638a3-230">Indeks określonego elementu w <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-230">The index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalItemAt">
      <MemberSignature Language="C#" Value="protected object InternalItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object InternalItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalItemAt (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ InternalItemAt(int index);" />
      <MemberSignature Language="F#" Value="member this.InternalItemAt : int -&gt; obj" Usage="listCollectionView.InternalItemAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="638a3-231">Indeks, w którym znajduje się element.</span><span class="sxs-lookup"><span data-stu-id="638a3-231">The index at which the item is located.</span></span></param>
        <summary><span data-ttu-id="638a3-232">Zwraca element o podanym indeksie w <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-232">Returns the item at the given index in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <returns><span data-ttu-id="638a3-233">Element na określonym zerowym indeksie w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-233">The item at the specified zero-based index in the view.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalList">
      <MemberSignature Language="C#" Value="protected System.Collections.IList InternalList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList InternalList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.InternalList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InternalList As IList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IList ^ InternalList { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalList : System.Collections.IList" Usage="System.Windows.Data.ListCollectionView.InternalList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-234">Pobiera przefiltrowaną i posortowaną listę elementów.</span><span class="sxs-lookup"><span data-stu-id="638a3-234">Gets the filtered and sorted list of items.</span></span></summary>
        <value><span data-ttu-id="638a3-235"><see cref="T:System.Collections.IList" /> Na którym zastosowano filtrowanie i sortowanie.</span><span class="sxs-lookup"><span data-stu-id="638a3-235">The <see cref="T:System.Collections.IList" /> on which filtering and sorting have been applied.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.Windows.Data.ListCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.IsAddingNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-236">Pobiera wartość wskazującą, czy Dodawanie transakcji jest w toku.</span><span class="sxs-lookup"><span data-stu-id="638a3-236">Gets a value that indicates whether an add transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="638a3-237"><see langword="true" />Jeśli trwa Dodawanie transakcji, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-237"><see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-238">Aby rozpocząć dodawanie transakcji, należy wywołać <xref:System.Windows.Data.ListCollectionView.AddNew%2A> metodę i zakończyć dodawanie transakcji przez wywołanie <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> lub <xref:System.Windows.Data.ListCollectionView.CancelNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="638a3-238">You begin an add transaction by calling the <xref:System.Windows.Data.ListCollectionView.AddNew%2A> method, and you end the add transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      </Docs>
    </Member>
    <Member MemberName="IsDataInGroupOrder">
      <MemberSignature Language="C#" Value="public bool IsDataInGroupOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataInGroupOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDataInGroupOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDataInGroupOrder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDataInGroupOrder : bool with get, set" Usage="System.Windows.Data.ListCollectionView.IsDataInGroupOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-239">Pobiera lub ustawia wartość wskazującą, czy lista elementów (po zastosowaniu sortowania i filtrów, jeśli istnieje) jest już w odpowiedniej kolejności do grupowania.</span><span class="sxs-lookup"><span data-stu-id="638a3-239">Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</span></span></summary>
        <value><span data-ttu-id="638a3-240"><see langword="true" />Jeśli lista elementów jest już w odpowiedniej kolejności do grupowania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-240"><see langword="true" /> if the list of items is already in the correct order for grouping; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-241">Ustawienie tej właściwości na `true` informuje widok, że lista elementów jest już w odpowiedniej kolejności do grupowania i umożliwia użycie bardziej wydajnego algorytmu do kompilowania grup.</span><span class="sxs-lookup"><span data-stu-id="638a3-241">Setting this property to `true` informs the view that the list of items is already in the correct order for grouping and allows the view to use a more efficient algorithm to build the groups.</span></span> <span data-ttu-id="638a3-242">Dane są prawidłowe w kolejności, jeśli:</span><span class="sxs-lookup"><span data-stu-id="638a3-242">The data is in the correct order if:</span></span>  
  
1.  <span data-ttu-id="638a3-243">Wszystkie elementy należące do danej grupy pojawiają się kolejno, a</span><span class="sxs-lookup"><span data-stu-id="638a3-243">All items belonging to a given group appear consecutively, and</span></span>  
  
2.  <span data-ttu-id="638a3-244">Jeśli kolekcja nie jest pusta, grupy w programie <xref:System.ComponentModel.GroupDescription.GroupNames%2A> są wyświetlane przed innymi grupami i w tej samej kolejności jak w <xref:System.ComponentModel.GroupDescription.GroupNames%2A>. <xref:System.ComponentModel.GroupDescription.GroupNames%2A></span><span class="sxs-lookup"><span data-stu-id="638a3-244">If the <xref:System.ComponentModel.GroupDescription.GroupNames%2A> collection is non-empty, the groups in <xref:System.ComponentModel.GroupDescription.GroupNames%2A> appear before any other groups, and in the same order as in <xref:System.ComponentModel.GroupDescription.GroupNames%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.Windows.Data.ListCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.IsEditingItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-245">Pobiera wartość wskazującą, czy edytowanie transakcji jest w toku.</span><span class="sxs-lookup"><span data-stu-id="638a3-245">Gets a value that indicates whether an edit transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="638a3-246"><see langword="true" />Jeśli edytowanie transakcji jest w toku; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-246"><see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-247">Aby rozpocząć edycję transakcji, należy wywołać <xref:System.Windows.Data.ListCollectionView.EditItem%2A> metodę i zakończyć transakcję, wywołując <xref:System.Windows.Data.ListCollectionView.CommitEdit%2A> lub <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="638a3-247">You begin an edit transaction by calling the <xref:System.Windows.Data.ListCollectionView.EditItem%2A> method, and you end the transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitEdit%2A> or <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public override bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Data.ListCollectionView.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-248">Zwraca wartość wskazującą, czy widok wynikowy (filtrowany) jest pusty.</span><span class="sxs-lookup"><span data-stu-id="638a3-248">Returns a value that indicates whether the resulting (filtered) view is empty.</span></span></summary>
        <value><span data-ttu-id="638a3-249"><see langword="true" />Jeśli widok wyników jest pusty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-249"><see langword="true" /> if the resulting view is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGrouping">
      <MemberSignature Language="C#" Value="protected bool IsGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsGrouping" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsGrouping { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGrouping : bool" Usage="System.Windows.Data.ListCollectionView.IsGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-250">Pobiera wartość wskazującą, czy w widoku znajdują się grupy.</span><span class="sxs-lookup"><span data-stu-id="638a3-250">Gets a value that indicates whether there are groups in the view.</span></span></summary>
        <value><span data-ttu-id="638a3-251"><see langword="true" />Jeśli w widoku znajdują się grupy; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-251"><see langword="true" /> if there are groups in the view; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveFiltering">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveFiltering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveFiltering As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveFiltering { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveFiltering : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.IsLiveFiltering" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-252">Pobiera lub ustawia wartość wskazującą, czy są włączone filtrowanie danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-252">Gets or sets a value that indicates whether filtering data in real time is enabled.</span></span></summary>
        <value><span data-ttu-id="638a3-253"><see langword="true" />w przypadku włączenia filtrowania danych w czasie rzeczywistym; <see langword="false" /> Jeśli filtrowanie na żywo nie jest włączone; <see langword="null" /> Jeśli nie można ustalić, czy widok kolekcji implementuje filtrowanie na żywo.</span><span class="sxs-lookup"><span data-stu-id="638a3-253"><see langword="true" /> if filtering data in real time is enabled; <see langword="false" /> if live filtering is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live filtering.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="638a3-254"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" />nie można ustawić na <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-254"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsLiveGrouping">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveGrouping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveGrouping As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveGrouping { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveGrouping : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.IsLiveGrouping" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-255">Pobiera lub ustawia wartość wskazującą, czy jest włączone grupowanie danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-255">Gets or sets a value that indicates whether grouping data in real time is enabled.</span></span></summary>
        <value><span data-ttu-id="638a3-256"><see langword="true" />Jeśli jest włączone grupowanie danych w czasie rzeczywistym; <see langword="false" /> jeśli grupowanie na żywo nie jest włączone; <see langword="null" /> Jeśli nie można ustalić, czy widok kolekcji implementuje grupowanie na żywo.</span><span class="sxs-lookup"><span data-stu-id="638a3-256"><see langword="true" /> if grouping data in real time is enabled; <see langword="false" /> if live grouping is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live grouping.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="638a3-257"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" />nie można ustawić na <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-257"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> cannot be set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsLiveSorting">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveSorting As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveSorting { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveSorting : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.IsLiveSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-258">Pobiera lub ustawia wartość wskazującą, czy jest włączone sortowanie w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-258">Gets or sets a value that indicates whether sorting in real time is enabled.</span></span></summary>
        <value><span data-ttu-id="638a3-259"><see langword="true" />w przypadku włączenia sortowania danych w czasie rzeczywistym; <see langword="false" /> Jeśli sortowanie na żywo nie jest włączone; <see langword="null" /> Jeśli nie można ustalić, czy widok kolekcji implementuje sortowanie na żywo.</span><span class="sxs-lookup"><span data-stu-id="638a3-259"><see langword="true" /> if sorting data in real time is enabled; <see langword="false" /> if live sorting is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live sorting.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="638a3-260"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" />nie można ustawić na <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-260"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ItemProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt; ItemProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ComponentModel.ItemPropertyInfo&gt; ItemProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemProperties As ReadOnlyCollection(Of ItemPropertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ ItemProperties { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemProperties : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt;" Usage="System.Windows.Data.ListCollectionView.ItemProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IItemProperties.ItemProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-261">Pobiera kolekcję obiektów opisującą właściwości elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-261">Gets a collection of objects that describes the properties of the items in the collection.</span></span></summary>
        <value><span data-ttu-id="638a3-262">Kolekcja obiektów opisująca właściwości elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-262">A collection of objects that describes the properties of the items in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveFilteringProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveFilteringProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveFilteringProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveFilteringProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveFilteringProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveFilteringProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Data.ListCollectionView.LiveFilteringProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-263">Pobiera kolekcję ciągów, które określają właściwości, które uczestniczą w filtrowaniu danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-263">Gets a collection of strings that specify the properties that participate in filtering data in real time.</span></span></summary>
        <value><span data-ttu-id="638a3-264">Kolekcja ciągów, które określają właściwości, które uczestniczą w filtrowaniu danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-264">A collection of strings that specify the properties that participate in filtering data in real time.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveGroupingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveGroupingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveGroupingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveGroupingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveGroupingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveGroupingProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Data.ListCollectionView.LiveGroupingProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-265">Pobiera kolekcję ciągów, które określają właściwości, które uczestniczą w grupowaniu danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-265">Gets a collection of strings that specify the properties that participate in grouping data in real time.</span></span></summary>
        <value><span data-ttu-id="638a3-266">Kolekcja ciągów, które określają właściwości, które uczestniczą w grupowaniu danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-266">A collection of strings that specify the properties that participate in grouping data in real time.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveSortingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveSortingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveSortingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveSortingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveSortingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveSortingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveSortingProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Data.ListCollectionView.LiveSortingProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-267">Pobiera kolekcję ciągów, które określają właściwości, które uczestniczą w sortowaniu danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-267">Gets a collection of strings that specify the properties that participate in sorting data in real time.</span></span></summary>
        <value><span data-ttu-id="638a3-268">Kolekcja ciągów, które określają właściwości, które uczestniczą w sortowaniu danych w czasie rzeczywistym.</span><span class="sxs-lookup"><span data-stu-id="638a3-268">A collection of strings that specify the properties that participate in sorting data in real time.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToPosition">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentToPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentToPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentToPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentToPosition(int position);" />
      <MemberSignature Language="F#" Value="override this.MoveCurrentToPosition : int -&gt; bool" Usage="listCollectionView.MoveCurrentToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="638a3-269">Indeks, dla którego <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> ma zostać ustawiona wartość.</span><span class="sxs-lookup"><span data-stu-id="638a3-269">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</span></span></param>
        <summary><span data-ttu-id="638a3-270">Ustawia element pod określonym indeksem, który ma być <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-270">Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</span></span></summary>
        <returns><span data-ttu-id="638a3-271"><see langword="true" />Jeśli wynikiem <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> jest element w widoku; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-271"><see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="638a3-272">Zgłaszany, jeśli indeks jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="638a3-272">Thrown if the index is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-273">Pobiera lub ustawia położenie symbolu zastępczego nowego elementu w <see cref="T:System.Windows.Data.ListCollectionView" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-273">Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</span></span></summary>
        <value><span data-ttu-id="638a3-274">Jedna z wartości wyliczenia, która określa położenie symbolu zastępczego nowego elementu w <see cref="T:System.Windows.Data.ListCollectionView" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-274">One of the enumeration values that specifies the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAllowsCrossThreadChangesChanged">
      <MemberSignature Language="C#" Value="protected override void OnAllowsCrossThreadChangesChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAllowsCrossThreadChangesChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAllowsCrossThreadChangesChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAllowsCrossThreadChangesChanged();" />
      <MemberSignature Language="F#" Value="override this.OnAllowsCrossThreadChangesChanged : unit -&gt; unit" Usage="listCollectionView.OnAllowsCrossThreadChangesChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="638a3-275">Występuje, gdy <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> właściwość zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="638a3-275">Occurs when the <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginChangeLogging">
      <MemberSignature Language="C#" Value="protected override void OnBeginChangeLogging (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginChangeLogging(class System.Collections.Specialized.NotifyCollectionChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginChangeLogging (args As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginChangeLogging(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="override this.OnBeginChangeLogging : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listCollectionView.OnBeginChangeLogging args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("Replaced by OnAllowsCrossThreadChangesChanged")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="638a3-276"><see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> Obiekt, który jest dodawany do dziennika zmian.</span><span class="sxs-lookup"><span data-stu-id="638a3-276">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object that is added to the change log.</span></span></param>
        <summary><span data-ttu-id="638a3-277">Wywoływane przez klasę bazową, aby powiadomić klasę pochodną <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> , że zdarzenie zostało ogłoszone w kolejce komunikatów.</span><span class="sxs-lookup"><span data-stu-id="638a3-277">Called by the base class to notify the derived class that a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event has been posted to the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-278">Celem tego powiadomienia jest umożliwienie widokom kolekcji tworzenia migawek informacji, co jest często stanem zbierania danych, który jest konieczny w chwili post.</span><span class="sxs-lookup"><span data-stu-id="638a3-278">The purpose of this notification is to allow collection views to take a snapshot of the information, which is often the state of the data collection, that is needed at the time of the post.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="638a3-279">Jeśli <paramref name="args" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-279">If <paramref name="args" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PassesFilter">
      <MemberSignature Language="C#" Value="public override bool PassesFilter (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool PassesFilter(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PassesFilter (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool PassesFilter(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PassesFilter : obj -&gt; bool" Usage="listCollectionView.PassesFilter item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="638a3-280">Element do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="638a3-280">The item to check.</span></span></param>
        <summary><span data-ttu-id="638a3-281">Zwraca wartość wskazującą, czy określony element w źródłowej kolekcji należy do widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-281">Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</span></span></summary>
        <returns><span data-ttu-id="638a3-282"><see langword="true" />Jeśli określony element należy do widoku lub w widoku kolekcji nie ma ustawionego filtru; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-282"><see langword="true" /> if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-283">W przeciwieństwie <xref:System.Windows.Data.ListCollectionView.Contains%2A> do metody, ta metoda zakłada, że określony element należy do źródłowej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-283">Unlike the <xref:System.Windows.Data.ListCollectionView.Contains%2A> method, this method assumes that the specified item belongs to the underlying collection.</span></span> <span data-ttu-id="638a3-284">Ta metoda przyjmuje filtry do konta.</span><span class="sxs-lookup"><span data-stu-id="638a3-284">This method takes filters into account.</span></span> <span data-ttu-id="638a3-285">Zazwyczaj ta metoda jest używana podczas powiadomień o zmianach w kolekcji, aby określić, czy dodany lub usunięty element wymaga przetworzenia.</span><span class="sxs-lookup"><span data-stu-id="638a3-285">Typically, you use this method during collection-changed notifications to determine whether the added or removed item requires processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void ProcessCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessCollectionChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessCollectionChanged (args As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ProcessCollectionChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="override this.ProcessCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listCollectionView.ProcessCollectionChanged args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="638a3-286"><see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> Obiekt do przetworzenia.</span><span class="sxs-lookup"><span data-stu-id="638a3-286">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to process.</span></span></param>
        <summary><span data-ttu-id="638a3-287">Obsługuje <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="638a3-287">Handles <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> events.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="638a3-288">Jeśli <paramref name="args" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="638a3-288">If <paramref name="args" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshOverride">
      <MemberSignature Language="C#" Value="protected override void RefreshOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.RefreshOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshOverride ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshOverride();" />
      <MemberSignature Language="F#" Value="override this.RefreshOverride : unit -&gt; unit" Usage="listCollectionView.RefreshOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="638a3-289">Ponownie tworzy widok.</span><span class="sxs-lookup"><span data-stu-id="638a3-289">Recreates the view.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="listCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="638a3-290">Element do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="638a3-290">The item to remove.</span></span></param>
        <summary><span data-ttu-id="638a3-291">Usuwa określony element z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-291">Removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-292">Jeśli `item` nie znajduje się w kolekcji, <xref:System.Windows.Data.ListCollectionView.Remove%2A> nic nie robi.</span><span class="sxs-lookup"><span data-stu-id="638a3-292">If `item` is not in the collection, <xref:System.Windows.Data.ListCollectionView.Remove%2A> does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="638a3-293">Liczony od zera indeks elementu, który ma zostać usunięty.</span><span class="sxs-lookup"><span data-stu-id="638a3-293">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="638a3-294">Usuwa element z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-294">Removes the item at the specified position from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="638a3-295">`index`jest względem widoku kolekcji, a nie kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-295">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="638a3-296">Na przykład jeśli kolekcja zawiera 10 elementów, a widok ma wartość <xref:System.ComponentModel.ICollectionView.Filter%2A> , tak aby liczba `index` elementów była wyświetlana, prawidłowe wartości to od 0 do 6.</span><span class="sxs-lookup"><span data-stu-id="638a3-296">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="638a3-297"><paramref name="index" />jest mniejsza niż 0 lub większa niż liczba elementów w widoku kolekcji.</span><span class="sxs-lookup"><span data-stu-id="638a3-297"><paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span></span></exception>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.SortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SortDescriptions As SortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::SortDescriptionCollection ^ SortDescriptions { System::ComponentModel::SortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.SortDescriptionCollection" Usage="System.Windows.Data.ListCollectionView.SortDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.SortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-298">Pobiera kolekcję <see cref="T:System.ComponentModel.SortDescription" /> obiektów, która opisuje, jak elementy w kolekcji są sortowane w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-298">Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</span></span></summary>
        <value><span data-ttu-id="638a3-299">Kolekcja <see cref="T:System.ComponentModel.SortDescription" /> obiektów, które opisują, w jaki sposób elementy w kolekcji są sortowane w widoku.</span><span class="sxs-lookup"><span data-stu-id="638a3-299">A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="638a3-300">Tę właściwość można ustawić tylko przez uzyskanie dostępu do obiektu kolekcja i użycie jego różnych metod, takich `Add`jak.</span><span class="sxs-lookup"><span data-stu-id="638a3-300">This property can only be set by accessing the collection object and using its various methods such as `Add`.</span></span> <span data-ttu-id="638a3-301">Właściwość uzyskiwania dostępu do obiektu kolekcji jest tylko do odczytu; sama kolekcja to odczyt/zapis.</span><span class="sxs-lookup"><span data-stu-id="638a3-301">The property to access the collection object itself is read-only; the collection itself is read/write.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (o1 As Object, o2 As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ o1, System::Object ^ o2) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="638a3-302">Pierwszy obiekt, który ma zostać porównany.</span><span class="sxs-lookup"><span data-stu-id="638a3-302">The first object to compare.</span></span></param>
        <param name="o2"><span data-ttu-id="638a3-303">Drugi obiekt, który będzie porównywany.</span><span class="sxs-lookup"><span data-stu-id="638a3-303">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="638a3-304">Ten element członkowski obsługuje [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="638a3-304">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="638a3-305">Wartość, która jest mniejsza niż zero oznacza <paramref name="o1" /> , że jest <paramref name="o2;" /> mniejsza niż wartość zerowa oznacza, że obiekty są równe, a wartość <paramref name="o1" /> , która jest większa od zera, jest <paramref name="o2" />wyższa niż.</span><span class="sxs-lookup"><span data-stu-id="638a3-305">A value that is less than zero means <paramref name="o1" /> is less than <paramref name="o2;" /> a value of zero means the objects are equal; and a value that is over zero means <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesLocalArray">
      <MemberSignature Language="C#" Value="protected bool UsesLocalArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesLocalArray" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.UsesLocalArray" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UsesLocalArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool UsesLocalArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesLocalArray : bool" Usage="System.Windows.Data.ListCollectionView.UsesLocalArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="638a3-306">Pobiera wartość wskazującą, czy prywatna kopia danych jest wymagana do sortowania i filtrowania.</span><span class="sxs-lookup"><span data-stu-id="638a3-306">Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.</span></span></summary>
        <value><span data-ttu-id="638a3-307"><see langword="true" />Jeśli prywatna kopia danych jest wymagana do sortowania i filtrowania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="638a3-307"><see langword="true" /> if a private copy of the data is needed for sorting and filtering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="638a3-308">Domyślna implementacja zwraca <see langword="true" /> , jeśli istnieje <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> lub <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />lub obie.</span><span class="sxs-lookup"><span data-stu-id="638a3-308">The default implementation returns <see langword="true" /> if there is an <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> or <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />, or both.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
