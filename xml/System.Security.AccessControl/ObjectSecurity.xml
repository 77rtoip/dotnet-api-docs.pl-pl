<Type Name="ObjectSecurity" FullName="System.Security.AccessControl.ObjectSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70ff25f953ae9e703f6fb8d31b60d6d853093569" /><Meta Name="ms.sourcegitcommit" Value="08fc3691deb7adaf0dfd751b9d9d0b23a3d3a7b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/09/2019" /><Meta Name="ms.locfileid" Value="68899245" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectSecurity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.ObjectSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectSecurity abstract" />
  <TypeSignature Language="F#" Value="type ObjectSecurity = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2967f-101">Zapewnia możliwość kontrolowania dostępu do obiektów bez bezpośredniego manipulowania listami Access Control (ACL).</span><span class="sxs-lookup"><span data-stu-id="2967f-101">Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs).</span></span> <span data-ttu-id="2967f-102">Ta klasa jest abstrakcyjną klasą bazową <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> dla <see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /> klas i.</span><span class="sxs-lookup"><span data-stu-id="2967f-102">This class is the abstract base class for the <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> and <see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /> classes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2967f-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2967f-103">Initializes a new instance of the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2967f-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2967f-104">Initializes a new instance of the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectSecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (securityDescriptor As CommonSecurityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectSecurity(System::Security::AccessControl::CommonSecurityDescriptor ^ securityDescriptor);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.ObjectSecurity : System.Security.AccessControl.CommonSecurityDescriptor -&gt; System.Security.AccessControl.ObjectSecurity" Usage="new System.Security.AccessControl.ObjectSecurity securityDescriptor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityDescriptor" Type="System.Security.AccessControl.CommonSecurityDescriptor" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="securityDescriptor"><span data-ttu-id="2967f-105"><see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> Nowe<see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="2967f-105">The <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> of the new <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> instance.</span></span></param>
        <summary><span data-ttu-id="2967f-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2967f-106">Initializes a new instance of the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectSecurity (bool isContainer, bool isDS);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer, bool isDS) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isContainer As Boolean, isDS As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectSecurity(bool isContainer, bool isDS);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.ObjectSecurity : bool * bool -&gt; System.Security.AccessControl.ObjectSecurity" Usage="new System.Security.AccessControl.ObjectSecurity (isContainer, isDS)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
        <Parameter Name="isDS" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isContainer"><span data-ttu-id="2967f-107"><see langword="true" />Jeśli nowy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt jest obiektem kontenera.</span><span class="sxs-lookup"><span data-stu-id="2967f-107"><see langword="true" /> if the new <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a container object.</span></span></param>
        <param name="isDS"><span data-ttu-id="2967f-108">Ma wartość true, <see cref="T:System.Security.AccessControl.ObjectSecurity" /> Jeśli nowy obiekt jest obiektem katalogu.</span><span class="sxs-lookup"><span data-stu-id="2967f-108">True if the new <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a directory object.</span></span></param>
        <summary><span data-ttu-id="2967f-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2967f-109">Initializes a new instance of the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public abstract Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.ObjectSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-110">Pobiera obiekt zabezpieczany skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="2967f-110">Gets the <see cref="T:System.Type" /> of the securable object associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></summary>
        <value><span data-ttu-id="2967f-111">Typ zabezpieczanego obiektu skojarzonego z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-111">The type of the securable object associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public abstract System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="abstract member AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="objectSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="2967f-112">Tożsamość, do której zostanie zastosowana reguła dostępu.</span><span class="sxs-lookup"><span data-stu-id="2967f-112">The identity to which the access rule applies.</span></span>  <span data-ttu-id="2967f-113">Musi być obiektem, który może być rzutowany jako <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="2967f-113">It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="accessMask"><span data-ttu-id="2967f-114">Maska dostępu tej reguły.</span><span class="sxs-lookup"><span data-stu-id="2967f-114">The access mask of this rule.</span></span> <span data-ttu-id="2967f-115">Maska dostępu to 32-bitowa kolekcja anonimowych bitów, której znaczenie jest zdefiniowane przez poszczególne Integratory.</span><span class="sxs-lookup"><span data-stu-id="2967f-115">The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</span></span></param>
        <param name="isInherited"><span data-ttu-id="2967f-116">true, jeśli ta reguła jest dziedziczona z kontenera nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="2967f-116">true if this rule is inherited from a parent container.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="2967f-117">Określa właściwości dziedziczenia reguły dostępu.</span><span class="sxs-lookup"><span data-stu-id="2967f-117">Specifies the inheritance properties of the access rule.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="2967f-118">Określa, czy dziedziczone reguły dostępu są automatycznie propagowane.</span><span class="sxs-lookup"><span data-stu-id="2967f-118">Specifies whether inherited access rules are automatically propagated.</span></span> <span data-ttu-id="2967f-119">Flagi propagacji są ignorowane, jeśli <paramref name="inheritanceFlags" /> jest ustawiona na <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span><span class="sxs-lookup"><span data-stu-id="2967f-119">The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="type"><span data-ttu-id="2967f-120">Określa prawidłowy typ kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="2967f-120">Specifies the valid access control type.</span></span></param>
        <summary><span data-ttu-id="2967f-121">Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.AccessRule" /> klasy z określonymi wartościami.</span><span class="sxs-lookup"><span data-stu-id="2967f-121">Initializes a new instance of the <see cref="T:System.Security.AccessControl.AccessRule" /> class with the specified values.</span></span></summary>
        <returns><span data-ttu-id="2967f-122"><see cref="T:System.Security.AccessControl.AccessRule" /> Obiekt tworzony przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="2967f-122">The <see cref="T:System.Security.AccessControl.AccessRule" /> object that this method creates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRulesModified">
      <MemberSignature Language="C#" Value="protected bool AccessRulesModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AccessRulesModified" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
      <MemberSignature Language="VB.NET" Value="Protected Property AccessRulesModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AccessRulesModified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AccessRulesModified : bool with get, set" Usage="System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-123">Pobiera lub ustawia wartość logiczną określającą, czy reguły dostępu skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem zostały zmodyfikowane.</span><span class="sxs-lookup"><span data-stu-id="2967f-123">Gets or sets a Boolean value that specifies whether the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object have been modified.</span></span></summary>
        <value><span data-ttu-id="2967f-124"><see langword="true" />Jeśli reguły dostępu skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem zostały zmodyfikowane; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-124"><see langword="true" /> if the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object have been modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public abstract Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.ObjectSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-125">Pobiera obiekt skojarzony z regułami dostępu tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="2967f-125">Gets the <see cref="T:System.Type" /> of the object associated with the access rules of this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span> <span data-ttu-id="2967f-126">Obiekt musi być obiektem, który może być rzutowany <see cref="T:System.Security.Principal.SecurityIdentifier" /> jako obiekt. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="2967f-126">The <see cref="T:System.Type" /> object must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></summary>
        <value><span data-ttu-id="2967f-127">Typ obiektu skojarzonego z regułami dostępu tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2967f-127">The type of the object associated with the access rules of this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAccessRulesCanonical">
      <MemberSignature Language="C#" Value="public bool AreAccessRulesCanonical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAccessRulesCanonical" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAccessRulesCanonical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAccessRulesCanonical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAccessRulesCanonical : bool" Usage="System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-128">Pobiera wartość logiczną określającą, czy reguły dostępu skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem są w kolejności kanonicznej.</span><span class="sxs-lookup"><span data-stu-id="2967f-128">Gets a Boolean value that specifies whether the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object are in canonical order.</span></span></summary>
        <value><span data-ttu-id="2967f-129"><see langword="true" />Jeśli reguły dostępu są w porządku kanonicznym; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-129"><see langword="true" /> if the access rules are in canonical order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAccessRulesProtected">
      <MemberSignature Language="C#" Value="public bool AreAccessRulesProtected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAccessRulesProtected" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAccessRulesProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAccessRulesProtected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAccessRulesProtected : bool" Usage="System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-130">Pobiera wartość logiczną określającą, czy poufna lista Access Control (DACL) skojarzona z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem jest chroniona.</span><span class="sxs-lookup"><span data-stu-id="2967f-130">Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is protected.</span></span></summary>
        <value><span data-ttu-id="2967f-131"><see langword="true" />Jeśli lista DACL jest chroniona; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-131"><see langword="true" /> if the DACL is protected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAuditRulesCanonical">
      <MemberSignature Language="C#" Value="public bool AreAuditRulesCanonical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAuditRulesCanonical" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAuditRulesCanonical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAuditRulesCanonical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAuditRulesCanonical : bool" Usage="System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-132">Pobiera wartość logiczną określającą, czy reguły inspekcji skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem są w kolejności kanonicznej.</span><span class="sxs-lookup"><span data-stu-id="2967f-132">Gets a Boolean value that specifies whether the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object are in canonical order.</span></span></summary>
        <value><span data-ttu-id="2967f-133"><see langword="true" />Jeśli reguły inspekcji znajdują się w porządku kanonicznym; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-133"><see langword="true" /> if the audit rules are in canonical order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAuditRulesProtected">
      <MemberSignature Language="C#" Value="public bool AreAuditRulesProtected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAuditRulesProtected" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAuditRulesProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAuditRulesProtected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAuditRulesProtected : bool" Usage="System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-134">Pobiera wartość logiczną określającą, czy lista Access Control systemu (SACL) skojarzona z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem jest chroniona.</span><span class="sxs-lookup"><span data-stu-id="2967f-134">Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is protected.</span></span></summary>
        <value><span data-ttu-id="2967f-135"><see langword="true" />Jeśli lista SACL jest chroniona; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-135"><see langword="true" /> if the SACL is protected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public abstract System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="abstract member AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="objectSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="2967f-136">Tożsamość, do której zostanie zastosowana reguła inspekcji.</span><span class="sxs-lookup"><span data-stu-id="2967f-136">The identity to which the audit rule applies.</span></span>  <span data-ttu-id="2967f-137">Musi być obiektem, który może być rzutowany jako <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="2967f-137">It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="accessMask"><span data-ttu-id="2967f-138">Maska dostępu tej reguły.</span><span class="sxs-lookup"><span data-stu-id="2967f-138">The access mask of this rule.</span></span> <span data-ttu-id="2967f-139">Maska dostępu to 32-bitowa kolekcja anonimowych bitów, której znaczenie jest zdefiniowane przez poszczególne Integratory.</span><span class="sxs-lookup"><span data-stu-id="2967f-139">The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</span></span></param>
        <param name="isInherited"><span data-ttu-id="2967f-140"><see langword="true" />Jeśli ta reguła jest dziedziczona z kontenera nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="2967f-140"><see langword="true" /> if this rule is inherited from a parent container.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="2967f-141">Określa właściwości dziedziczenia reguły inspekcji.</span><span class="sxs-lookup"><span data-stu-id="2967f-141">Specifies the inheritance properties of the audit rule.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="2967f-142">Określa, czy dziedziczone reguły inspekcji są automatycznie propagowane.</span><span class="sxs-lookup"><span data-stu-id="2967f-142">Specifies whether inherited audit rules are automatically propagated.</span></span> <span data-ttu-id="2967f-143">Flagi propagacji są ignorowane, jeśli <paramref name="inheritanceFlags" /> jest ustawiona na <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span><span class="sxs-lookup"><span data-stu-id="2967f-143">The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="flags"><span data-ttu-id="2967f-144">Określa warunki, dla których reguła jest poddawana inspekcji.</span><span class="sxs-lookup"><span data-stu-id="2967f-144">Specifies the conditions for which the rule is audited.</span></span></param>
        <summary><span data-ttu-id="2967f-145">Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.AuditRule" /> klasy z określonymi wartościami.</span><span class="sxs-lookup"><span data-stu-id="2967f-145">Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule" /> class with the specified values.</span></span></summary>
        <returns><span data-ttu-id="2967f-146"><see cref="T:System.Security.AccessControl.AuditRule" /> Obiekt tworzony przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="2967f-146">The <see cref="T:System.Security.AccessControl.AuditRule" /> object that this method creates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRulesModified">
      <MemberSignature Language="C#" Value="protected bool AuditRulesModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AuditRulesModified" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
      <MemberSignature Language="VB.NET" Value="Protected Property AuditRulesModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AuditRulesModified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AuditRulesModified : bool with get, set" Usage="System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-147">Pobiera lub ustawia wartość logiczną określającą, czy reguły inspekcji skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem zostały zmodyfikowane.</span><span class="sxs-lookup"><span data-stu-id="2967f-147">Gets or sets a Boolean value that specifies whether the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object have been modified.</span></span></summary>
        <value><span data-ttu-id="2967f-148"><see langword="true" />Jeśli reguły inspekcji skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem zostały zmodyfikowane; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-148"><see langword="true" /> if the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object have been modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public abstract Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.ObjectSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-149">Pobiera obiekt skojarzony z regułami inspekcji tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="2967f-149">Gets the <see cref="T:System.Type" /> object associated with the audit rules of this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span> <span data-ttu-id="2967f-150">Obiekt musi być obiektem, który może być rzutowany <see cref="T:System.Security.Principal.SecurityIdentifier" /> jako obiekt. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="2967f-150">The <see cref="T:System.Type" /> object must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></summary>
        <value><span data-ttu-id="2967f-151">Typ obiektu skojarzonego z regułami inspekcji tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2967f-151">The type of the object associated with the audit rules of this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGroup">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReference GetGroup (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Principal.IdentityReference GetGroup(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGroup (targetType As Type) As IdentityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Principal::IdentityReference ^ GetGroup(Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetGroup : Type -&gt; System.Security.Principal.IdentityReference" Usage="objectSecurity.GetGroup targetType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="2967f-152">Właściciel, dla którego ma zostać uzyskana Grupa podstawowa.</span><span class="sxs-lookup"><span data-stu-id="2967f-152">The owner for which to get the primary group.</span></span></param>
        <summary><span data-ttu-id="2967f-153">Pobiera grupę podstawową skojarzoną z określonym właścicielem.</span><span class="sxs-lookup"><span data-stu-id="2967f-153">Gets the primary group associated with the specified owner.</span></span></summary>
        <returns><span data-ttu-id="2967f-154">Grupa podstawowa skojarzona z określonym właścicielem.</span><span class="sxs-lookup"><span data-stu-id="2967f-154">The primary group associated with the specified owner.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOwner">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReference GetOwner (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Principal.IdentityReference GetOwner(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOwner (targetType As Type) As IdentityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Principal::IdentityReference ^ GetOwner(Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetOwner : Type -&gt; System.Security.Principal.IdentityReference" Usage="objectSecurity.GetOwner targetType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="2967f-155">Grupa podstawowa, dla której ma zostać pobrany właściciel.</span><span class="sxs-lookup"><span data-stu-id="2967f-155">The primary group for which to get the owner.</span></span></param>
        <summary><span data-ttu-id="2967f-156">Pobiera właściciela skojarzonego z określoną grupą podstawową.</span><span class="sxs-lookup"><span data-stu-id="2967f-156">Gets the owner associated with the specified primary group.</span></span></summary>
        <returns><span data-ttu-id="2967f-157">Właściciel skojarzony z określoną grupą.</span><span class="sxs-lookup"><span data-stu-id="2967f-157">The owner associated with the specified group.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2967f-158"><paramref name="targetType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2967f-158"><paramref name="targetType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2967f-159"><paramref name="targetType" />nie <see cref="T:System.Security.Principal.IdentityReference" /> jest typem.</span><span class="sxs-lookup"><span data-stu-id="2967f-159"><paramref name="targetType" /> is not an <see cref="T:System.Security.Principal.IdentityReference" /> type.</span></span></exception>
        <exception cref="T:System.Security.Principal.IdentityNotMappedException"><span data-ttu-id="2967f-160">Nie można przetłumaczyć niektórych lub wszystkich odwołań do tożsamości.</span><span class="sxs-lookup"><span data-stu-id="2967f-160">Some or all identity references could not be translated.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="2967f-161">Kod błędu Win32 został zwrócony.</span><span class="sxs-lookup"><span data-stu-id="2967f-161">A Win32 error code was returned.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityDescriptorBinaryForm">
      <MemberSignature Language="C#" Value="public byte[] GetSecurityDescriptorBinaryForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSecurityDescriptorBinaryForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSecurityDescriptorBinaryForm () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSecurityDescriptorBinaryForm();" />
      <MemberSignature Language="F#" Value="member this.GetSecurityDescriptorBinaryForm : unit -&gt; byte[]" Usage="objectSecurity.GetSecurityDescriptorBinaryForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2967f-162">Zwraca tablicę wartości bajtowych reprezentujących informacje deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2967f-162">Returns an array of byte values that represents the security descriptor information for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="2967f-163">Tablica wartości bajtowych reprezentująca deskryptor zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2967f-163">An array of byte values that represents the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span> <span data-ttu-id="2967f-164">Ta metoda zwraca <see langword="null" /> wartość, jeśli w tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekcie nie ma informacji o zabezpieczeniach.</span><span class="sxs-lookup"><span data-stu-id="2967f-164">This method returns <see langword="null" /> if there is no security information in this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-165">Ta metoda zwraca informacje deskryptora zabezpieczeń znajdujące się obecnie w pamięci.</span><span class="sxs-lookup"><span data-stu-id="2967f-165">This method returns the security descriptor information currently in memory.</span></span> <span data-ttu-id="2967f-166">Nie pobiera informacji zapisanych w magazynie trwałym.</span><span class="sxs-lookup"><span data-stu-id="2967f-166">It does not retrieve information saved in permanent storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityDescriptorSddlForm">
      <MemberSignature Language="C#" Value="public string GetSecurityDescriptorSddlForm (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSecurityDescriptorSddlForm(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSecurityDescriptorSddlForm (includeSections As AccessControlSections) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSecurityDescriptorSddlForm(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetSecurityDescriptorSddlForm : System.Security.AccessControl.AccessControlSections -&gt; string" Usage="objectSecurity.GetSecurityDescriptorSddlForm includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="2967f-167">Określa, które sekcje (reguły dostępu, reguły inspekcji, grupę podstawową, właściciela) deskryptora zabezpieczeń do pobrania.</span><span class="sxs-lookup"><span data-stu-id="2967f-167">Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.</span></span></param>
        <summary><span data-ttu-id="2967f-168">Zwraca reprezentację języka SDDL (Security Descriptor Definition Language) dla określonych sekcji deskryptora zabezpieczeń skojarzonego z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-168">Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="2967f-169">Reprezentacja SDDL określonych sekcji deskryptora zabezpieczeń skojarzonego z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-169">The SDDL representation of the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupModified">
      <MemberSignature Language="C#" Value="protected bool GroupModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GroupModified" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
      <MemberSignature Language="VB.NET" Value="Protected Property GroupModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool GroupModified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GroupModified : bool with get, set" Usage="System.Security.AccessControl.ObjectSecurity.GroupModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-170">Pobiera lub ustawia wartość logiczną określającą, czy grupa skojarzona z zabezpieczanym obiektem została zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="2967f-170">Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.</span></span></summary>
        <value><span data-ttu-id="2967f-171"><see langword="true" />Jeśli grupa skojarzona z obiektem zabezpieczanym została zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-171"><see langword="true" /> if the group associated with the securable object has been modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainer">
      <MemberSignature Language="C#" Value="protected bool IsContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContainer" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsContainer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContainer : bool" Usage="System.Security.AccessControl.ObjectSecurity.IsContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-172">Pobiera wartość logiczną określającą, czy ten <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt jest obiektem kontenera.</span><span class="sxs-lookup"><span data-stu-id="2967f-172">Gets a Boolean value that specifies whether this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a container object.</span></span></summary>
        <value><span data-ttu-id="2967f-173"><see langword="true" />Jeśli obiekt jest obiektem kontenera; w przeciwnym razie <see langword="false" />,. <see cref="T:System.Security.AccessControl.ObjectSecurity" /></span><span class="sxs-lookup"><span data-stu-id="2967f-173"><see langword="true" /> if the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a container object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDS">
      <MemberSignature Language="C#" Value="protected bool IsDS { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDS" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDS As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDS { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDS : bool" Usage="System.Security.AccessControl.ObjectSecurity.IsDS" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-174">Pobiera wartość logiczną określającą, czy ten <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt jest obiektem katalogu.</span><span class="sxs-lookup"><span data-stu-id="2967f-174">Gets a Boolean value that specifies whether this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a directory object.</span></span></summary>
        <value><span data-ttu-id="2967f-175"><see langword="true" />Jeśli obiekt jest obiektem katalogu; w przeciwnym razie <see langword="false" />,. <see cref="T:System.Security.AccessControl.ObjectSecurity" /></span><span class="sxs-lookup"><span data-stu-id="2967f-175"><see langword="true" /> if the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a directory object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSddlConversionSupported">
      <MemberSignature Language="C#" Value="public static bool IsSddlConversionSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSddlConversionSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSddlConversionSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSddlConversionSupported();" />
      <MemberSignature Language="F#" Value="static member IsSddlConversionSupported : unit -&gt; bool" Usage="System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2967f-176">Zwraca wartość logiczną określającą, czy deskryptor zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem można przekonwertować na format języka SDDL (Security Descriptor Definition Language).</span><span class="sxs-lookup"><span data-stu-id="2967f-176">Returns a Boolean value that specifies whether the security descriptor associated with this  <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object can be converted to the Security Descriptor Definition Language (SDDL) format.</span></span></summary>
        <returns><span data-ttu-id="2967f-177"><see langword="true" />Jeśli deskryptor zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem można przekonwertować na format języka SDDL (Security Descriptor Definition Language); w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-177"><see langword="true" /> if the security descriptor associated with this  <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccess">
      <MemberSignature Language="C#" Value="protected abstract bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ModifyAccess(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ModifyAccess (modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool ModifyAccess(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AccessRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="abstract member ModifyAccess : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule *  -&gt; bool" Usage="objectSecurity.ModifyAccess (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification"><span data-ttu-id="2967f-178">Modyfikacja, która ma zostać zastosowana do listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-178">The modification to apply to the DACL.</span></span></param>
        <param name="rule"><span data-ttu-id="2967f-179">Reguła dostępu do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="2967f-179">The access rule to modify.</span></span></param>
        <param name="modified"><span data-ttu-id="2967f-180"><see langword="true" />Jeśli lista DACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-180"><see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2967f-181">Stosuje określoną modyfikację do listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-181">Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="2967f-182"><see langword="true" />Jeśli lista DACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-182"><see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-183">Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-183">To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccessRule">
      <MemberSignature Language="C#" Value="public virtual bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ModifyAccessRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ModifyAccessRule (modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ModifyAccessRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AccessRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="abstract member ModifyAccessRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule *  -&gt; bool&#xA;override this.ModifyAccessRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule *  -&gt; bool" Usage="objectSecurity.ModifyAccessRule (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification"><span data-ttu-id="2967f-184">Modyfikacja, która ma zostać zastosowana do listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-184">The modification to apply to the DACL.</span></span></param>
        <param name="rule"><span data-ttu-id="2967f-185">Reguła dostępu do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="2967f-185">The access rule to modify.</span></span></param>
        <param name="modified"><span data-ttu-id="2967f-186"><see langword="true" />Jeśli lista DACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-186"><see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2967f-187">Stosuje określoną modyfikację do listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-187">Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="2967f-188"><see langword="true" />Jeśli lista DACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-188"><see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-189">Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-189">To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAudit">
      <MemberSignature Language="C#" Value="protected abstract bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ModifyAudit(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ModifyAudit (modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool ModifyAudit(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AuditRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="abstract member ModifyAudit : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule *  -&gt; bool" Usage="objectSecurity.ModifyAudit (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification"><span data-ttu-id="2967f-190">Modyfikacja do zastosowania do listy SACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-190">The modification to apply to the SACL.</span></span></param>
        <param name="rule"><span data-ttu-id="2967f-191">Reguła inspekcji do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="2967f-191">The audit rule to modify.</span></span></param>
        <param name="modified"><span data-ttu-id="2967f-192"><see langword="true" />Jeśli lista SACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-192"><see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2967f-193">Stosuje określoną modyfikację do listy Access Control systemowych (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-193">Applies the specified modification to the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="2967f-194"><see langword="true" />Jeśli lista SACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-194"><see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAuditRule">
      <MemberSignature Language="C#" Value="public virtual bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ModifyAuditRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ModifyAuditRule (modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ModifyAuditRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AuditRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="abstract member ModifyAuditRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule *  -&gt; bool&#xA;override this.ModifyAuditRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule *  -&gt; bool" Usage="objectSecurity.ModifyAuditRule (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification"><span data-ttu-id="2967f-195">Modyfikacja do zastosowania do listy SACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-195">The modification to apply to the SACL.</span></span></param>
        <param name="rule"><span data-ttu-id="2967f-196">Reguła inspekcji do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="2967f-196">The audit rule to modify.</span></span></param>
        <param name="modified"><span data-ttu-id="2967f-197"><see langword="true" />Jeśli lista SACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-197"><see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2967f-198">Stosuje określoną modyfikację do listy Access Control systemowych (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-198">Applies the specified modification to the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="2967f-199"><see langword="true" />Jeśli lista SACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-199"><see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerModified">
      <MemberSignature Language="C#" Value="protected bool OwnerModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerModified" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      <MemberSignature Language="VB.NET" Value="Protected Property OwnerModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool OwnerModified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerModified : bool with get, set" Usage="System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-200">Pobiera lub ustawia wartość logiczną określającą, czy właściciel obiektu zabezpieczanego został zmodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="2967f-200">Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.</span></span></summary>
        <value><span data-ttu-id="2967f-201"><see langword="true" />Jeśli właściciel obiektu zabezpieczanego został zmodyfikowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2967f-201"><see langword="true" /> if the owner of the securable object has been modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2967f-202">Chronione metody, które zapisują informacje deskryptora zabezpieczeń <see cref="T:System.Security.AccessControl.ObjectSecurity" /> w tym obiekcie do magazynu trwałego.</span><span class="sxs-lookup"><span data-stu-id="2967f-202">Protected methods that save the security descriptor information in this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object to permanent storage.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected virtual void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Persist(class System.Runtime.InteropServices.SafeHandle handle, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Persist (handle As SafeHandle, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Persist(System::Runtime::InteropServices::SafeHandle ^ handle, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="abstract member Persist : System.Runtime.InteropServices.SafeHandle * System.Security.AccessControl.AccessControlSections -&gt; unit&#xA;override this.Persist : System.Runtime.InteropServices.SafeHandle * System.Security.AccessControl.AccessControlSections -&gt; unit" Usage="objectSecurity.Persist (handle, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="2967f-203">Uchwyt używany do pobierania utrwalonych informacji.</span><span class="sxs-lookup"><span data-stu-id="2967f-203">The handle used to retrieve the persisted information.</span></span></param>
        <param name="includeSections"><span data-ttu-id="2967f-204">Jedna z <see cref="T:System.Security.AccessControl.AccessControlSections" /> wartości wyliczenia, która określa sekcje deskryptora zabezpieczeń (reguły dostępu, reguły inspekcji, właściciela, grupy podstawowej) zabezpieczanego obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2967f-204">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</span></span></param>
        <summary><span data-ttu-id="2967f-205">Zapisuje określone sekcje deskryptora zabezpieczeń powiązane z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem w magazynie trwałym.</span><span class="sxs-lookup"><span data-stu-id="2967f-205">Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object to permanent storage.</span></span> <span data-ttu-id="2967f-206">Zalecamy, aby wartości <paramref name="includeSections" /> parametrów przesłane do konstruktora i metod utrwalania były takie same.</span><span class="sxs-lookup"><span data-stu-id="2967f-206">We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-207">W przypadku utrwalania <xref:System.Security.AccessControl.ObjectSecurity> obiektu, jeśli wartość `includeSections` parametru przeniesiona do <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> metody nie `includeSections` jest taka sama jak wartość parametru przekazaną do konstruktora użytego do utworzenia tego <xref:System.Security.AccessControl.ObjectSecurity> obiektu, sekcje Obiekt utrwalony <xref:System.Security.AccessControl.ObjectSecurity> może zawierać nieprzewidywalne wartości.</span><span class="sxs-lookup"><span data-stu-id="2967f-207">When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values.</span></span> <span data-ttu-id="2967f-208">Na przykład, jeśli Konstruktor jest wywoływany z `includeSections` <xref:System.Security.AccessControl.AccessControlSections.Access>wartością, a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> później `includeSections` Metoda jest <xref:System.Security.AccessControl.AccessControlSections.All>wywoływana dla tego obiektu z wartością, powstający obiekt utrwalony <xref:System.Security.AccessControl.ObjectSecurity> będzie zawierać nieprzewidywalne wartości dla reguł inspekcji, grupy i właściciela.</span><span class="sxs-lookup"><span data-stu-id="2967f-208">For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected virtual void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Persist(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Persist (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Persist(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="abstract member Persist : string * System.Security.AccessControl.AccessControlSections -&gt; unit&#xA;override this.Persist : string * System.Security.AccessControl.AccessControlSections -&gt; unit" Usage="objectSecurity.Persist (name, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2967f-209">Nazwa używana do pobierania utrwalonych informacji.</span><span class="sxs-lookup"><span data-stu-id="2967f-209">The name used to retrieve the persisted information.</span></span></param>
        <param name="includeSections"><span data-ttu-id="2967f-210">Jedna z <see cref="T:System.Security.AccessControl.AccessControlSections" /> wartości wyliczenia, która określa sekcje deskryptora zabezpieczeń (reguły dostępu, reguły inspekcji, właściciela, grupy podstawowej) zabezpieczanego obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2967f-210">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</span></span></param>
        <summary><span data-ttu-id="2967f-211">Zapisuje określone sekcje deskryptora zabezpieczeń powiązane z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem w magazynie trwałym.</span><span class="sxs-lookup"><span data-stu-id="2967f-211">Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object to permanent storage.</span></span> <span data-ttu-id="2967f-212">Zalecamy, aby wartości <paramref name="includeSections" /> parametrów przesłane do konstruktora i metod utrwalania były takie same.</span><span class="sxs-lookup"><span data-stu-id="2967f-212">We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-213">W przypadku utrwalania <xref:System.Security.AccessControl.ObjectSecurity> obiektu, jeśli wartość `includeSections` parametru przeniesiona do <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> metody nie `includeSections` jest taka sama jak wartość parametru przekazaną do konstruktora użytego do utworzenia tego <xref:System.Security.AccessControl.ObjectSecurity> obiektu, sekcje Obiekt utrwalony <xref:System.Security.AccessControl.ObjectSecurity> może zawierać nieprzewidywalne wartości.</span><span class="sxs-lookup"><span data-stu-id="2967f-213">When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values.</span></span> <span data-ttu-id="2967f-214">Na przykład, jeśli Konstruktor jest wywoływany z `includeSections` <xref:System.Security.AccessControl.AccessControlSections.Access>wartością, a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> później `includeSections` Metoda jest <xref:System.Security.AccessControl.AccessControlSections.All>wywoływana dla tego obiektu z wartością, powstający obiekt utrwalony <xref:System.Security.AccessControl.ObjectSecurity> będzie zawierać nieprzewidywalne wartości dla reguł inspekcji, grupy i właściciela.</span><span class="sxs-lookup"><span data-stu-id="2967f-214">For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected virtual void Persist (bool enableOwnershipPrivilege, string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Persist(bool enableOwnershipPrivilege, string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Persist (enableOwnershipPrivilege As Boolean, name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Persist(bool enableOwnershipPrivilege, System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="abstract member Persist : bool * string * System.Security.AccessControl.AccessControlSections -&gt; unit&#xA;override this.Persist : bool * string * System.Security.AccessControl.AccessControlSections -&gt; unit" Usage="objectSecurity.Persist (enableOwnershipPrivilege, name, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableOwnershipPrivilege" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="enableOwnershipPrivilege"><span data-ttu-id="2967f-215"><see langword="true" />Aby włączyć uprawnienie, które umożliwia obiektowi wywołującemu przejęcie własności obiektu.</span><span class="sxs-lookup"><span data-stu-id="2967f-215"><see langword="true" /> to enable the privilege that allows the caller to take ownership of the object.</span></span></param>
        <param name="name"><span data-ttu-id="2967f-216">Nazwa używana do pobierania utrwalonych informacji.</span><span class="sxs-lookup"><span data-stu-id="2967f-216">The name used to retrieve the persisted information.</span></span></param>
        <param name="includeSections"><span data-ttu-id="2967f-217">Jedna z <see cref="T:System.Security.AccessControl.AccessControlSections" /> wartości wyliczenia, która określa sekcje deskryptora zabezpieczeń (reguły dostępu, reguły inspekcji, właściciela, grupy podstawowej) zabezpieczanego obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2967f-217">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</span></span></param>
        <summary><span data-ttu-id="2967f-218">Zapisuje określone sekcje deskryptora zabezpieczeń powiązane z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem w magazynie trwałym.</span><span class="sxs-lookup"><span data-stu-id="2967f-218">Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object to permanent storage.</span></span> <span data-ttu-id="2967f-219">Zalecamy, aby wartości <paramref name="includeSections" /> parametrów przesłane do konstruktora i metod utrwalania były takie same.</span><span class="sxs-lookup"><span data-stu-id="2967f-219">We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-220">W przypadku utrwalania <xref:System.Security.AccessControl.ObjectSecurity> obiektu, jeśli wartość `includeSections` parametru przeniesiona do <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> metody nie `includeSections` jest taka sama jak wartość parametru przekazaną do konstruktora użytego do utworzenia tego <xref:System.Security.AccessControl.ObjectSecurity> obiektu, sekcje Obiekt utrwalony <xref:System.Security.AccessControl.ObjectSecurity> może zawierać nieprzewidywalne wartości.</span><span class="sxs-lookup"><span data-stu-id="2967f-220">When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values.</span></span> <span data-ttu-id="2967f-221">Na przykład, jeśli Konstruktor jest wywoływany z `includeSections` <xref:System.Security.AccessControl.AccessControlSections.Access>wartością, a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> później `includeSections` Metoda jest <xref:System.Security.AccessControl.AccessControlSections.All>wywoływana dla tego obiektu z wartością, powstający obiekt utrwalony <xref:System.Security.AccessControl.ObjectSecurity> będzie zawierać nieprzewidywalne wartości dla reguł inspekcji, grupy i właściciela.</span><span class="sxs-lookup"><span data-stu-id="2967f-221">For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeAccessRules">
      <MemberSignature Language="C#" Value="public virtual void PurgeAccessRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeAccessRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PurgeAccessRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PurgeAccessRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member PurgeAccessRules : System.Security.Principal.IdentityReference -&gt; unit&#xA;override this.PurgeAccessRules : System.Security.Principal.IdentityReference -&gt; unit" Usage="objectSecurity.PurgeAccessRules identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="2967f-222">, <see cref="T:System.Security.Principal.IdentityReference" /> Dla którego mają zostać usunięte wszystkie reguły dostępu.</span><span class="sxs-lookup"><span data-stu-id="2967f-222">The <see cref="T:System.Security.Principal.IdentityReference" /> for which to remove all access rules.</span></span></param>
        <summary><span data-ttu-id="2967f-223">Usuwa wszystkie reguły dostępu skojarzone z określonym <see cref="T:System.Security.Principal.IdentityReference" />.</span><span class="sxs-lookup"><span data-stu-id="2967f-223">Removes all access rules associated with the specified <see cref="T:System.Security.Principal.IdentityReference" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2967f-224">Wszystkie reguły dostępu nie są w kolejności kanonicznej.</span><span class="sxs-lookup"><span data-stu-id="2967f-224">All access rules are not in canonical order.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeAuditRules">
      <MemberSignature Language="C#" Value="public virtual void PurgeAuditRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeAuditRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PurgeAuditRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PurgeAuditRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member PurgeAuditRules : System.Security.Principal.IdentityReference -&gt; unit&#xA;override this.PurgeAuditRules : System.Security.Principal.IdentityReference -&gt; unit" Usage="objectSecurity.PurgeAuditRules identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="2967f-225"><see cref="T:System.Security.Principal.IdentityReference" /> Dla którego mają zostać usunięte wszystkie reguły inspekcji.</span><span class="sxs-lookup"><span data-stu-id="2967f-225">The <see cref="T:System.Security.Principal.IdentityReference" /> for which to remove all audit rules.</span></span></param>
        <summary><span data-ttu-id="2967f-226">Usuwa wszystkie reguły inspekcji skojarzone z określonym <see cref="T:System.Security.Principal.IdentityReference" />.</span><span class="sxs-lookup"><span data-stu-id="2967f-226">Removes all audit rules associated with the specified <see cref="T:System.Security.Principal.IdentityReference" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2967f-227">Wszystkie reguły inspekcji nie są w kolejności kanonicznej.</span><span class="sxs-lookup"><span data-stu-id="2967f-227">All audit rules are not in canonical order.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLock">
      <MemberSignature Language="C#" Value="protected void ReadLock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadLock ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadLock();" />
      <MemberSignature Language="F#" Value="member this.ReadLock : unit -&gt; unit" Usage="objectSecurity.ReadLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2967f-228">Blokuje ten <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt na potrzeby dostępu do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2967f-228">Locks this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object for read access.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUnlock">
      <MemberSignature Language="C#" Value="protected void ReadUnlock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadUnlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadUnlock ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadUnlock();" />
      <MemberSignature Language="F#" Value="member this.ReadUnlock : unit -&gt; unit" Usage="objectSecurity.ReadUnlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2967f-229">Odblokowuje ten <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt pod kątem dostępu do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2967f-229">Unlocks this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object for read access.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityDescriptor">
      <MemberSignature Language="C#" Value="protected System.Security.AccessControl.CommonSecurityDescriptor SecurityDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CommonSecurityDescriptor SecurityDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.SecurityDescriptor" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SecurityDescriptor As CommonSecurityDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Security::AccessControl::CommonSecurityDescriptor ^ SecurityDescriptor { System::Security::AccessControl::CommonSecurityDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityDescriptor : System.Security.AccessControl.CommonSecurityDescriptor" Usage="System.Security.AccessControl.ObjectSecurity.SecurityDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CommonSecurityDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2967f-230">Pobiera deskryptor zabezpieczeń dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2967f-230">Gets the security descriptor for this instance.</span></span></summary>
        <value><span data-ttu-id="2967f-231">Deskryptor zabezpieczeń dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2967f-231">The security descriptor for this instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRuleProtection">
      <MemberSignature Language="C#" Value="public void SetAccessRuleProtection (bool isProtected, bool preserveInheritance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRuleProtection(bool isProtected, bool preserveInheritance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRuleProtection (isProtected As Boolean, preserveInheritance As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRuleProtection(bool isProtected, bool preserveInheritance);" />
      <MemberSignature Language="F#" Value="member this.SetAccessRuleProtection : bool * bool -&gt; unit" Usage="objectSecurity.SetAccessRuleProtection (isProtected, preserveInheritance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isProtected" Type="System.Boolean" />
        <Parameter Name="preserveInheritance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isProtected"><span data-ttu-id="2967f-232"><see langword="true" />Aby chronić reguły dostępu skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem z dziedziczenia; <see langword="false" /> aby umożliwić dziedziczenie.</span><span class="sxs-lookup"><span data-stu-id="2967f-232"><see langword="true" /> to protect the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from inheritance; <see langword="false" /> to allow inheritance.</span></span></param>
        <param name="preserveInheritance"><span data-ttu-id="2967f-233"><see langword="true" />Aby zachować dziedziczone reguły dostępu; <see langword="false" /> aby usunąć dziedziczone reguły dostępu.</span><span class="sxs-lookup"><span data-stu-id="2967f-233"><see langword="true" /> to preserve inherited access rules; <see langword="false" /> to remove inherited access rules.</span></span> <span data-ttu-id="2967f-234">Ten parametr jest ignorowany <paramref name="isProtected" /> , <see langword="false" />jeśli jest.</span><span class="sxs-lookup"><span data-stu-id="2967f-234">This parameter is ignored if <paramref name="isProtected" /> is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2967f-235">Ustawia lub usuwa ochronę reguł dostępu skojarzonych z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-235">Sets or removes protection of the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span> <span data-ttu-id="2967f-236">Reguły chronionego dostępu nie mogą być modyfikowane przez obiekty nadrzędne przez dziedziczenie.</span><span class="sxs-lookup"><span data-stu-id="2967f-236">Protected access rules cannot be modified by parent objects through inheritance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2967f-237">Ta metoda próbuje usunąć dziedziczone reguły z niekanonicznej listy arbitralnej Access Control (DACL).</span><span class="sxs-lookup"><span data-stu-id="2967f-237">This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRuleProtection">
      <MemberSignature Language="C#" Value="public void SetAuditRuleProtection (bool isProtected, bool preserveInheritance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRuleProtection(bool isProtected, bool preserveInheritance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRuleProtection (isProtected As Boolean, preserveInheritance As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRuleProtection(bool isProtected, bool preserveInheritance);" />
      <MemberSignature Language="F#" Value="member this.SetAuditRuleProtection : bool * bool -&gt; unit" Usage="objectSecurity.SetAuditRuleProtection (isProtected, preserveInheritance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isProtected" Type="System.Boolean" />
        <Parameter Name="preserveInheritance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isProtected"><span data-ttu-id="2967f-238"><see langword="true" />Aby chronić reguły inspekcji skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem z dziedziczenia; <see langword="false" /> aby umożliwić dziedziczenie.</span><span class="sxs-lookup"><span data-stu-id="2967f-238"><see langword="true" /> to protect the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from inheritance; <see langword="false" /> to allow inheritance.</span></span></param>
        <param name="preserveInheritance"><span data-ttu-id="2967f-239"><see langword="true" />Aby zachować dziedziczone reguły inspekcji; <see langword="false" /> aby usunąć dziedziczone reguły inspekcji.</span><span class="sxs-lookup"><span data-stu-id="2967f-239"><see langword="true" /> to preserve inherited audit rules; <see langword="false" /> to remove inherited audit rules.</span></span> <span data-ttu-id="2967f-240">Ten parametr jest ignorowany <paramref name="isProtected" /> , <see langword="false" />jeśli jest.</span><span class="sxs-lookup"><span data-stu-id="2967f-240">This parameter is ignored if <paramref name="isProtected" /> is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2967f-241">Ustawia lub usuwa ochronę reguł inspekcji skojarzonych z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-241">Sets or removes protection of the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span> <span data-ttu-id="2967f-242">Reguły chronionej inspekcji nie mogą być modyfikowane przez obiekty nadrzędne przez dziedziczenie.</span><span class="sxs-lookup"><span data-stu-id="2967f-242">Protected audit rules cannot be modified by parent objects through inheritance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2967f-243">Ta metoda próbuje usunąć dziedziczone reguły z niekanonicznej listy Access Control systemu (SACL).</span><span class="sxs-lookup"><span data-stu-id="2967f-243">This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetGroup">
      <MemberSignature Language="C#" Value="public void SetGroup (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGroup(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGroup (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGroup(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="member this.SetGroup : System.Security.Principal.IdentityReference -&gt; unit" Usage="objectSecurity.SetGroup identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="2967f-244">Grupa podstawowa do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="2967f-244">The primary group to set.</span></span></param>
        <summary><span data-ttu-id="2967f-245">Ustawia grupę podstawową dla deskryptora zabezpieczeń skojarzonego z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-245">Sets the primary group for the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOwner">
      <MemberSignature Language="C#" Value="public void SetOwner (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOwner(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOwner (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOwner(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="member this.SetOwner : System.Security.Principal.IdentityReference -&gt; unit" Usage="objectSecurity.SetOwner identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="2967f-246">Właściciel do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="2967f-246">The owner to set.</span></span></param>
        <summary><span data-ttu-id="2967f-247">Ustawia właściciela deskryptora zabezpieczeń skojarzonego z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="2967f-247">Sets the owner for the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSecurityDescriptorBinaryForm">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2967f-248">Ustawia deskryptor zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonych danych binarnych.</span><span class="sxs-lookup"><span data-stu-id="2967f-248">Sets the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified binary data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-249">Jeśli deskryptor zabezpieczeń reprezentowany przez dane binarne zawiera `null` dla poufnej listy kontroli dostępu (DACL), pojedynczy wpis kontroli dostępu (ACE), który umożliwia wszystkim pełen dostęp (AEFA) zostanie dodany do listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-249">If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</span></span> <span data-ttu-id="2967f-250">Jeśli aplikacja modyfikuje listę DACL deskryptora zabezpieczeń, do którego dodano wpis ACE AEFA, wpis ACE AEFA jest utrwalany z LISTą DACL, gdy ta lista DACL zostanie utrwalona.</span><span class="sxs-lookup"><span data-stu-id="2967f-250">If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</span></span>  
  
 <span data-ttu-id="2967f-251">Może to spowodować, że aplikacja przypadkowo zezwoli na dostęp do podmiotów głównych.</span><span class="sxs-lookup"><span data-stu-id="2967f-251">This can result in an application unintentionally allowing access to principals.</span></span> <span data-ttu-id="2967f-252">W związku z tym aplikacja powinna sprawdzić obecność wpisu ACE AEFA i usunąć go przed zmodyfikowaniem deskryptora zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-252">Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSecurityDescriptorBinaryForm">
      <MemberSignature Language="C#" Value="public void SetSecurityDescriptorBinaryForm (byte[] binaryForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSecurityDescriptorBinaryForm(unsigned int8[] binaryForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSecurityDescriptorBinaryForm (binaryForm As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSecurityDescriptorBinaryForm(cli::array &lt;System::Byte&gt; ^ binaryForm);" />
      <MemberSignature Language="F#" Value="member this.SetSecurityDescriptorBinaryForm : byte[] -&gt; unit" Usage="objectSecurity.SetSecurityDescriptorBinaryForm binaryForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="binaryForm"><span data-ttu-id="2967f-253">Tablica bajtów, z której ma zostać ustawiony deskryptor zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-253">The array of bytes from which to set the security descriptor.</span></span></param>
        <summary><span data-ttu-id="2967f-254">Ustawia deskryptor zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonej tablicy wartości bajtów.</span><span class="sxs-lookup"><span data-stu-id="2967f-254">Sets the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified array of byte values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-255">Jeśli deskryptor zabezpieczeń reprezentowany przez dane binarne zawiera `null` dla poufnej listy kontroli dostępu (DACL), pojedynczy wpis kontroli dostępu (ACE), który umożliwia wszystkim pełen dostęp (AEFA) zostanie dodany do listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-255">If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</span></span> <span data-ttu-id="2967f-256">Jeśli aplikacja modyfikuje listę DACL deskryptora zabezpieczeń, do którego dodano wpis ACE AEFA, wpis ACE AEFA jest utrwalany z LISTą DACL, gdy ta lista DACL zostanie utrwalona.</span><span class="sxs-lookup"><span data-stu-id="2967f-256">If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</span></span>  
  
 <span data-ttu-id="2967f-257">Może to spowodować, że aplikacja przypadkowo zezwoli na dostęp do podmiotów głównych.</span><span class="sxs-lookup"><span data-stu-id="2967f-257">This can result in an application unintentionally allowing access to principals.</span></span> <span data-ttu-id="2967f-258">W związku z tym aplikacja powinna sprawdzić obecność wpisu ACE AEFA i usunąć go przed zmodyfikowaniem deskryptora zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-258">Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecurityDescriptorBinaryForm">
      <MemberSignature Language="C#" Value="public void SetSecurityDescriptorBinaryForm (byte[] binaryForm, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSecurityDescriptorBinaryForm(unsigned int8[] binaryForm, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSecurityDescriptorBinaryForm (binaryForm As Byte(), includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSecurityDescriptorBinaryForm(cli::array &lt;System::Byte&gt; ^ binaryForm, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.SetSecurityDescriptorBinaryForm : byte[] * System.Security.AccessControl.AccessControlSections -&gt; unit" Usage="objectSecurity.SetSecurityDescriptorBinaryForm (binaryForm, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="binaryForm"><span data-ttu-id="2967f-259">Tablica bajtów, z której ma zostać ustawiony deskryptor zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-259">The array of bytes from which to set the security descriptor.</span></span></param>
        <param name="includeSections"><span data-ttu-id="2967f-260">Sekcje (reguły dostępu, reguły inspekcji, właściciel, Grupa podstawowa) deskryptora zabezpieczeń, które mają zostać ustawione.</span><span class="sxs-lookup"><span data-stu-id="2967f-260">The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</span></span></param>
        <summary><span data-ttu-id="2967f-261">Ustawia określone sekcje deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonej tablicy wartości bajtów.</span><span class="sxs-lookup"><span data-stu-id="2967f-261">Sets the specified sections of the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified array of byte values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-262">Jeśli deskryptor zabezpieczeń reprezentowany przez dane binarne zawiera `null` dla poufnej listy kontroli dostępu (DACL), pojedynczy wpis kontroli dostępu (ACE), który umożliwia wszystkim pełen dostęp (AEFA) zostanie dodany do listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-262">If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</span></span> <span data-ttu-id="2967f-263">Jeśli aplikacja modyfikuje listę DACL deskryptora zabezpieczeń, do którego dodano wpis ACE AEFA, wpis ACE AEFA jest utrwalany z LISTą DACL, gdy ta lista DACL zostanie utrwalona.</span><span class="sxs-lookup"><span data-stu-id="2967f-263">If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</span></span>  
  
 <span data-ttu-id="2967f-264">Może to spowodować, że aplikacja przypadkowo zezwoli na dostęp do podmiotów głównych.</span><span class="sxs-lookup"><span data-stu-id="2967f-264">This can result in an application unintentionally allowing access to principals.</span></span> <span data-ttu-id="2967f-265">W związku z tym aplikacja powinna sprawdzić obecność wpisu ACE AEFA i usunąć go przed zmodyfikowaniem deskryptora zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-265">Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSecurityDescriptorSddlForm">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2967f-266">Ustawia deskryptor zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonego ciągu SDDL (Security Descriptor Definition Language).</span><span class="sxs-lookup"><span data-stu-id="2967f-266">Sets the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified Security Descriptor Definition Language (SDDL) string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-267">Jeśli deskryptor zabezpieczeń reprezentowany przez ciąg SDDL zawiera `null` dla poufnej listy kontroli dostępu (DACL), pojedynczy wpis kontroli dostępu (ACE), który umożliwia wszystkim pełen dostęp (AEFA) zostanie dodany do listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-267">If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</span></span> <span data-ttu-id="2967f-268">Jeśli aplikacja modyfikuje listę DACL deskryptora zabezpieczeń, do którego dodano wpis ACE AEFA, wpis ACE AEFA jest utrwalany z LISTą DACL, gdy ta lista DACL zostanie utrwalona.</span><span class="sxs-lookup"><span data-stu-id="2967f-268">If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</span></span>  
  
 <span data-ttu-id="2967f-269">Może to spowodować, że aplikacja przypadkowo zezwoli na dostęp do podmiotów głównych.</span><span class="sxs-lookup"><span data-stu-id="2967f-269">This can result in an application unintentionally allowing access to principals.</span></span> <span data-ttu-id="2967f-270">W związku z tym aplikacja powinna sprawdzić obecność wpisu ACE AEFA i usunąć go przed zmodyfikowaniem deskryptora zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-270">Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSecurityDescriptorSddlForm">
      <MemberSignature Language="C#" Value="public void SetSecurityDescriptorSddlForm (string sddlForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSecurityDescriptorSddlForm(string sddlForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSecurityDescriptorSddlForm (sddlForm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSecurityDescriptorSddlForm(System::String ^ sddlForm);" />
      <MemberSignature Language="F#" Value="member this.SetSecurityDescriptorSddlForm : string -&gt; unit" Usage="objectSecurity.SetSecurityDescriptorSddlForm sddlForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sddlForm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sddlForm"><span data-ttu-id="2967f-271">Ciąg SDDL, z którego ma zostać ustawiony deskryptor zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-271">The SDDL string from which to set the security descriptor.</span></span></param>
        <summary><span data-ttu-id="2967f-272">Ustawia deskryptor zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonego ciągu SDDL (Security Descriptor Definition Language).</span><span class="sxs-lookup"><span data-stu-id="2967f-272">Sets the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified Security Descriptor Definition Language (SDDL) string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-273">Jeśli deskryptor zabezpieczeń reprezentowany przez ciąg SDDL zawiera `null` dla poufnej listy kontroli dostępu (DACL), pojedynczy wpis kontroli dostępu (ACE), który umożliwia wszystkim pełen dostęp (AEFA) zostanie dodany do listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-273">If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</span></span> <span data-ttu-id="2967f-274">Jeśli aplikacja modyfikuje listę DACL deskryptora zabezpieczeń, do którego dodano wpis ACE AEFA, wpis ACE AEFA jest utrwalany z LISTą DACL, gdy ta lista DACL zostanie utrwalona.</span><span class="sxs-lookup"><span data-stu-id="2967f-274">If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</span></span>  
  
 <span data-ttu-id="2967f-275">Może to spowodować, że aplikacja przypadkowo zezwoli na dostęp do podmiotów głównych.</span><span class="sxs-lookup"><span data-stu-id="2967f-275">This can result in an application unintentionally allowing access to principals.</span></span> <span data-ttu-id="2967f-276">W związku z tym aplikacja powinna sprawdzić obecność wpisu ACE AEFA i usunąć go przed zmodyfikowaniem deskryptora zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-276">Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecurityDescriptorSddlForm">
      <MemberSignature Language="C#" Value="public void SetSecurityDescriptorSddlForm (string sddlForm, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSecurityDescriptorSddlForm(string sddlForm, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSecurityDescriptorSddlForm (sddlForm As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSecurityDescriptorSddlForm(System::String ^ sddlForm, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.SetSecurityDescriptorSddlForm : string * System.Security.AccessControl.AccessControlSections -&gt; unit" Usage="objectSecurity.SetSecurityDescriptorSddlForm (sddlForm, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sddlForm" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="sddlForm"><span data-ttu-id="2967f-277">Ciąg SDDL, z którego ma zostać ustawiony deskryptor zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-277">The SDDL string from which to set the security descriptor.</span></span></param>
        <param name="includeSections"><span data-ttu-id="2967f-278">Sekcje (reguły dostępu, reguły inspekcji, właściciel, Grupa podstawowa) deskryptora zabezpieczeń, które mają zostać ustawione.</span><span class="sxs-lookup"><span data-stu-id="2967f-278">The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</span></span></param>
        <summary><span data-ttu-id="2967f-279">Ustawia określone sekcje deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonego ciągu SDDL (Security Descriptor Definition Language).</span><span class="sxs-lookup"><span data-stu-id="2967f-279">Sets the specified sections of the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified Security Descriptor Definition Language (SDDL) string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2967f-280">Jeśli deskryptor zabezpieczeń reprezentowany przez ciąg SDDL zawiera `null` dla poufnej listy kontroli dostępu (DACL), pojedynczy wpis kontroli dostępu (ACE), który umożliwia wszystkim pełen dostęp (AEFA) zostanie dodany do listy DACL.</span><span class="sxs-lookup"><span data-stu-id="2967f-280">If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</span></span> <span data-ttu-id="2967f-281">Jeśli aplikacja modyfikuje listę DACL deskryptora zabezpieczeń, do którego dodano wpis ACE AEFA, wpis ACE AEFA jest utrwalany z LISTą DACL, gdy ta lista DACL zostanie utrwalona.</span><span class="sxs-lookup"><span data-stu-id="2967f-281">If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</span></span>  
  
 <span data-ttu-id="2967f-282">Może to spowodować, że aplikacja przypadkowo zezwoli na dostęp do podmiotów głównych.</span><span class="sxs-lookup"><span data-stu-id="2967f-282">This can result in an application unintentionally allowing access to principals.</span></span> <span data-ttu-id="2967f-283">W związku z tym aplikacja powinna sprawdzić obecność wpisu ACE AEFA i usunąć go przed zmodyfikowaniem deskryptora zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2967f-283">Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLock">
      <MemberSignature Language="C#" Value="protected void WriteLock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteLock ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteLock();" />
      <MemberSignature Language="F#" Value="member this.WriteLock : unit -&gt; unit" Usage="objectSecurity.WriteLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2967f-284">Blokuje ten <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt pod kątem dostępu do zapisu.</span><span class="sxs-lookup"><span data-stu-id="2967f-284">Locks this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object for write access.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteUnlock">
      <MemberSignature Language="C#" Value="protected void WriteUnlock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUnlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUnlock ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUnlock();" />
      <MemberSignature Language="F#" Value="member this.WriteUnlock : unit -&gt; unit" Usage="objectSecurity.WriteUnlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2967f-285">Odblokowuje ten <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt pod kątem dostępu do zapisu.</span><span class="sxs-lookup"><span data-stu-id="2967f-285">Unlocks this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object for write access.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
