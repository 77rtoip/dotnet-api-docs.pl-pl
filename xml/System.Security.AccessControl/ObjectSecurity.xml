<Type Name="ObjectSecurity" FullName="System.Security.AccessControl.ObjectSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28cc68a06a77599b75fdfa8d46df2264d5bccda9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567715" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectSecurity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.ObjectSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectSecurity abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia możliwość kontrolowania dostępu do obiektów bez bezpośredniej z list kontroli dostępu (ACL). Ta klasa jest abstrakcyjna klasa podstawowa dla <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> i <see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /> klasy.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectSecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (securityDescriptor As CommonSecurityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectSecurity(System::Security::AccessControl::CommonSecurityDescriptor ^ securityDescriptor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityDescriptor" Type="System.Security.AccessControl.CommonSecurityDescriptor" />
      </Parameters>
      <Docs>
        <param name="securityDescriptor">
          <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> Nowej <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectSecurity (bool isContainer, bool isDS);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer, bool isDS) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isContainer As Boolean, isDS As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectSecurity(bool isContainer, bool isDS);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
        <Parameter Name="isDS" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isContainer">
          <see langword="true" /> Jeśli nowy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt jest obiektem kontenera.</param>
        <param name="isDS">Wartość true, jeśli nowa <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt jest obiektem katalogu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.ObjectSecurity" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public abstract Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Type" /> zabezpieczanego obiektu, które są skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</summary>
        <value>Typ obiektu zabezpieczanego skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public abstract System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">Tożsamość, do którego jest stosowana reguła dostępu.  Musi to być obiekt, który można rzutować jako <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="accessMask">Maska dostępu do tej reguły. Maska dostępu jest kolekcją 32-bitowych anonimowe bitów znaczenie jest definiowana za pomocą poszczególnych integratory.</param>
        <param name="isInherited">wartość true, jeśli ta reguła jest dziedziczona z kontenera nadrzędnego.</param>
        <param name="inheritanceFlags">Określa właściwości dziedziczenia reguły dostępu.</param>
        <param name="propagationFlags">Określa, czy dostęp dziedziczony reguły są automatycznie propagowane. Flagi propagacji są ignorowane, jeśli <c>inheritanceFlags</c> ma ustawioną wartość <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
        <param name="type">Określa typ kontroli dostępu prawidłowe.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.AccessRule" /> z określonymi wartościami.</summary>
        <returns>
          <see cref="T:System.Security.AccessControl.AccessRule" /> Obiekt, który tworzy tę metodę.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRulesModified">
      <MemberSignature Language="C#" Value="protected bool AccessRulesModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AccessRulesModified" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
      <MemberSignature Language="VB.NET" Value="Protected Property AccessRulesModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AccessRulesModified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość logiczna określająca, czy reguły dostępu skojarzonych z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu zostały zmodyfikowane.</summary>
        <value>
          <see langword="true" /> Jeśli zasady dostępu skojarzonych z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu zostały zmodyfikowane, a w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public abstract Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Type" /> skojarzone z zasadami dostępu do tego obiektu <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu. <see cref="T:System.Type" /> Obiekt musi być obiekt, który można rzutować jako <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiektu.</summary>
        <value>Typ obiektu skojarzone z zasadami dostępu <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAccessRulesCanonical">
      <MemberSignature Language="C#" Value="public bool AreAccessRulesCanonical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAccessRulesCanonical" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAccessRulesCanonical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAccessRulesCanonical { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczna określająca, czy reguły dostępu skojarzonych z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu znajdują się w Porządek kanoniczny.</summary>
        <value>
          <see langword="true" /> Jeśli porządek kanoniczny; reguły dostępu w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAccessRulesProtected">
      <MemberSignature Language="C#" Value="public bool AreAccessRulesProtected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAccessRulesProtected" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAccessRulesProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAccessRulesProtected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczna określająca, czy poufnej listy kontroli dostępu (DACL) skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekty są chronione.</summary>
        <value>
          <see langword="true" /> Jeśli lista DACL są chronione. w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAuditRulesCanonical">
      <MemberSignature Language="C#" Value="public bool AreAuditRulesCanonical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAuditRulesCanonical" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAuditRulesCanonical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAuditRulesCanonical { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczna określająca, czy zasady inspekcji są skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu znajdują się w Porządek kanoniczny.</summary>
        <value>
          <see langword="true" /> Jeśli zasady inspekcji są w Porządek kanoniczny; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAuditRulesProtected">
      <MemberSignature Language="C#" Value="public bool AreAuditRulesProtected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAuditRulesProtected" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAuditRulesProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAuditRulesProtected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczna określająca, czy listy kontroli dostępu do systemu (SACL) skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekty są chronione.</summary>
        <value>
          <see langword="true" /> Jeśli Lista SACL są chronione. w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public abstract System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">Tożsamość, której dotyczy reguła inspekcji.  Musi to być obiekt, który można rzutować jako <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="accessMask">Maska dostępu do tej reguły. Maska dostępu jest kolekcją 32-bitowych anonimowe bitów znaczenie jest definiowana za pomocą poszczególnych integratory.</param>
        <param name="isInherited">
          <see langword="true" /> Jeśli ta reguła jest dziedziczona z kontenera nadrzędnego.</param>
        <param name="inheritanceFlags">Określa właściwości dziedziczenia zasady inspekcji.</param>
        <param name="propagationFlags">Określa, czy zasady inspekcji dziedziczone zostaną automatycznie rozpropagowane. Flagi propagacji są ignorowane, jeśli <c>inheritanceFlags</c> ma ustawioną wartość <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
        <param name="flags">Określa warunki, dla których reguła podlega inspekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.AuditRule" /> z określonymi wartościami.</summary>
        <returns>
          <see cref="T:System.Security.AccessControl.AuditRule" /> Obiekt, który tworzy tę metodę.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRulesModified">
      <MemberSignature Language="C#" Value="protected bool AuditRulesModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AuditRulesModified" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
      <MemberSignature Language="VB.NET" Value="Protected Property AuditRulesModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AuditRulesModified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość logiczna określająca, czy zasady inspekcji są skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu zostały zmodyfikowane.</summary>
        <value>
          <see langword="true" /> Jeśli zasady inspekcji skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu zostały zmodyfikowane, a w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public abstract Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Type" /> obiekt skojarzony z zasadami inspekcji <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu. <see cref="T:System.Type" /> Obiekt musi być obiekt, który można rzutować jako <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiektu.</summary>
        <value>Typ obiektu skojarzone z zasadami inspekcji <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGroup">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReference GetGroup (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Principal.IdentityReference GetGroup(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGroup (targetType As Type) As IdentityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Principal::IdentityReference ^ GetGroup(Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType">Właściciel, dla którego można pobrać grupy podstawowej.</param>
        <summary>Pobiera skojarzone z określony właściciel grupy podstawowej.</summary>
        <returns>Podstawowy grupy skojarzone z określonego właściciela.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOwner">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReference GetOwner (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Principal.IdentityReference GetOwner(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOwner (targetType As Type) As IdentityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Principal::IdentityReference ^ GetOwner(Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType">Grupą podstawową, dla którego można pobrać właściciela.</param>
        <summary>Pobiera właściciela skojarzone z określonej grupy podstawowej.</summary>
        <returns>Właściciel skojarzone z określonej grupy.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetType" /> nie jest <see cref="T:System.Security.Principal.IdentityReference" /> typu.</exception>
        <exception cref="T:System.Security.Principal.IdentityNotMappedException">Nie można przetłumaczyć niektórych lub wszystkich odwołań do tożsamości.</exception>
        <exception cref="T:System.SystemException">Został zwrócony kod błędu Win32.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityDescriptorBinaryForm">
      <MemberSignature Language="C#" Value="public byte[] GetSecurityDescriptorBinaryForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSecurityDescriptorBinaryForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSecurityDescriptorBinaryForm () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSecurityDescriptorBinaryForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca tablicę wartości bajtów reprezentujący informacje deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</summary>
        <returns>Tablica wartości bajtów reprezentujący deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu. Ta metoda zwraca <see langword="null" /> , jeśli nie ma żadnych informacji zabezpieczeń w tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca informacje deskryptora zabezpieczeń aktualnie w pamięci. Nie pobiera informacje zapisane w magazynie trwałym.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityDescriptorSddlForm">
      <MemberSignature Language="C#" Value="public string GetSecurityDescriptorSddlForm (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSecurityDescriptorSddlForm(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSecurityDescriptorSddlForm (includeSections As AccessControlSections) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSecurityDescriptorSddlForm(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections">Określa, które sekcje (reguły dostępu, zasady inspekcji, grupą podstawową, właściciela) można uzyskać deskryptora zabezpieczeń.</param>
        <summary>Zwraca reprezentację definicji języka SDDL (Security Descriptor) z określonej sekcji deskryptora zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</summary>
        <returns>Reprezentacja SDDL sekcji określonego deskryptora zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupModified">
      <MemberSignature Language="C#" Value="protected bool GroupModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GroupModified" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
      <MemberSignature Language="VB.NET" Value="Protected Property GroupModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool GroupModified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość logiczna określająca, czy grupy skojarzone z zabezpieczanego obiektu został zmieniony.</summary>
        <value>
          <see langword="true" /> Jeśli zmodyfikowano grupę skojarzoną z zabezpieczanego obiektu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainer">
      <MemberSignature Language="C#" Value="protected bool IsContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContainer" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsContainer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczna określająca, czy to <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt jest obiektem kontenera.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt jest obiektem kontenera; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDS">
      <MemberSignature Language="C#" Value="protected bool IsDS { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDS" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDS As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDS { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczna określająca, czy to <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt jest obiektem katalogu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt jest obiektem katalogu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSddlConversionSupported">
      <MemberSignature Language="C#" Value="public static bool IsSddlConversionSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSddlConversionSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSddlConversionSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSddlConversionSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość logiczną określającą, czy deskryptora zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu może być konwertowana na format definicji języka SDDL (Security Descriptor).</summary>
        <returns>
          <see langword="true" /> Jeśli deskryptora zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiekt może być przekonwertowany do formatu definicji języka SDDL (Security Descriptor); w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccess">
      <MemberSignature Language="C#" Value="protected abstract bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ModifyAccess(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ModifyAccess (modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool ModifyAccess(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AccessRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Zmiana do zastosowania do listy DACL.</param>
        <param name="rule">Reguły dostępu do zmodyfikowania.</param>
        <param name="modified">
          <see langword="true" /> Jeśli lista DACL jest pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</param>
        <summary>Dotyczy określonej zmiany do poufnej dostępu formantu listy (DACL) skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli lista DACL jest pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń, aplikacji należy sprawdzić, czy istnienie Zezwalaj wszystkim pełna wpisu kontroli dostępu (AEFA) dostępu (ACE) i usuń go przed zmodyfikowaniem lista DACL dotycząca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccessRule">
      <MemberSignature Language="C#" Value="public virtual bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ModifyAccessRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ModifyAccessRule (modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ModifyAccessRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AccessRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Zmiana do zastosowania do listy DACL.</param>
        <param name="rule">Reguły dostępu do zmodyfikowania.</param>
        <param name="modified">
          <see langword="true" /> Jeśli lista DACL jest pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</param>
        <summary>Dotyczy określonej zmiany do poufnej dostępu formantu listy (DACL) skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli lista DACL jest pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń, aplikacji należy sprawdzić, czy istnienie Zezwalaj wszystkim pełna wpisu kontroli dostępu (AEFA) dostępu (ACE) i usuń go przed zmodyfikowaniem lista DACL dotycząca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAudit">
      <MemberSignature Language="C#" Value="protected abstract bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ModifyAudit(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ModifyAudit (modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool ModifyAudit(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AuditRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Zmiana do zastosowania do Lista SACL.</param>
        <param name="rule">Reguła inspekcji, aby zmodyfikować.</param>
        <param name="modified">
          <see langword="true" /> Jeśli Lista SACL jest pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</param>
        <summary>Dotyczy określonej zmiany do systemu dostępu formantu listy (SACL) skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli Lista SACL jest pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAuditRule">
      <MemberSignature Language="C#" Value="public virtual bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ModifyAuditRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ModifyAuditRule (modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ModifyAuditRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AuditRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Zmiana do zastosowania do Lista SACL.</param>
        <param name="rule">Reguła inspekcji, aby zmodyfikować.</param>
        <param name="modified">
          <see langword="true" /> Jeśli Lista SACL jest pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</param>
        <summary>Dotyczy określonej zmiany do systemu dostępu formantu listy (SACL) skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli Lista SACL jest pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerModified">
      <MemberSignature Language="C#" Value="protected bool OwnerModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerModified" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      <MemberSignature Language="VB.NET" Value="Protected Property OwnerModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool OwnerModified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość logiczna określająca, czy właściciela zabezpieczanego obiektu został zmieniony.</summary>
        <value>
          <see langword="true" /> Jeśli właściciel obiektu zabezpieczanego został zmodyfikowany; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Chronione metody, które zapisują informacje deskryptora zabezpieczeń w tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu w magazynie trwałym.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected virtual void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Persist(class System.Runtime.InteropServices.SafeHandle handle, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Persist (handle As SafeHandle, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Persist(System::Runtime::InteropServices::SafeHandle ^ handle, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="handle">Dojście do pobierania informacji utrwalonych.</param>
        <param name="includeSections">Jeden z <see cref="T:System.Security.AccessControl.AccessControlSections" /> wartości wyliczenia określających sekcji deskryptora zabezpieczeń (reguły dostępu, zasady inspekcji, właściciel, grupą podstawową) zabezpieczanego obiektu do zapisania.</param>
        <summary>Zapisuje określony sekcje deskryptora zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu w magazynie trwałym. Zalecamy, aby wartości <paramref name="includeSections" /> parametry przekazany do konstruktora i utrwalić metody być identyczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy utrwalanie <xref:System.Security.AccessControl.ObjectSecurity> obiektu, jeśli wartość `includeSections` parametr przekazany do <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> metoda nie jest taka sama jak wartość `includeSections` parametr przekazany do konstruktora użyty do utworzenia, które <xref:System.Security.AccessControl.ObjectSecurity> obiektu, w sekcji z utrwalonego <xref:System.Security.AccessControl.ObjectSecurity> obiekt może zawierać wartości nieprzewidywalne. Na przykład, jeśli w Konstruktorze jest wywoływana z `includeSections` wartość <xref:System.Security.AccessControl.AccessControlSections.Access>i później <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> metoda jest wywoływana z tym obiektem z `includeSections` wartość <xref:System.Security.AccessControl.AccessControlSections.All>, powstałe w ten sposób utrwalone <xref:System.Security.AccessControl.ObjectSecurity> obiektu będzie zawierać nieoczekiwane wartości zasady inspekcji, grupy i właściciela.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected virtual void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Persist(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Persist (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Persist(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa używana do pobrania informacji o utrwalonych.</param>
        <param name="includeSections">Jeden z <see cref="T:System.Security.AccessControl.AccessControlSections" /> wartości wyliczenia określających sekcji deskryptora zabezpieczeń (reguły dostępu, zasady inspekcji, właściciel, grupą podstawową) zabezpieczanego obiektu do zapisania.</param>
        <summary>Zapisuje określony sekcje deskryptora zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu w magazynie trwałym. Zalecamy, aby wartości <paramref name="includeSections" /> parametry przekazany do konstruktora i utrwalić metody być identyczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy utrwalanie <xref:System.Security.AccessControl.ObjectSecurity> obiektu, jeśli wartość `includeSections` parametr przekazany do <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> metoda nie jest taka sama jak wartość `includeSections` parametr przekazany do konstruktora użyty do utworzenia, które <xref:System.Security.AccessControl.ObjectSecurity> obiektu, w sekcji z utrwalonego <xref:System.Security.AccessControl.ObjectSecurity> obiekt może zawierać wartości nieprzewidywalne. Na przykład, jeśli w Konstruktorze jest wywoływana z `includeSections` wartość <xref:System.Security.AccessControl.AccessControlSections.Access>i później <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> metoda jest wywoływana z tym obiektem z `includeSections` wartość <xref:System.Security.AccessControl.AccessControlSections.All>, powstałe w ten sposób utrwalone <xref:System.Security.AccessControl.ObjectSecurity> obiektu będzie zawierać nieoczekiwane wartości zasady inspekcji, grupy i właściciela.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected virtual void Persist (bool enableOwnershipPrivilege, string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Persist(bool enableOwnershipPrivilege, string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Persist (enableOwnershipPrivilege As Boolean, name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Persist(bool enableOwnershipPrivilege, System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableOwnershipPrivilege" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="enableOwnershipPrivilege">
          <see langword="true" /> Aby włączyć uprawnień, który umożliwia obiekt wywołujący, aby przejąć prawo własności obiektu.</param>
        <param name="name">Nazwa używana do pobrania informacji o utrwalonych.</param>
        <param name="includeSections">Jeden z <see cref="T:System.Security.AccessControl.AccessControlSections" /> wartości wyliczenia określających sekcji deskryptora zabezpieczeń (reguły dostępu, zasady inspekcji, właściciel, grupą podstawową) zabezpieczanego obiektu do zapisania.</param>
        <summary>Zapisuje określony sekcje deskryptora zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu w magazynie trwałym. Zalecamy, aby wartości <paramref name="includeSections" /> parametry przekazany do konstruktora i utrwalić metody być identyczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy utrwalanie <xref:System.Security.AccessControl.ObjectSecurity> obiektu, jeśli wartość `includeSections` parametr przekazany do <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> metoda nie jest taka sama jak wartość `includeSections` parametr przekazany do konstruktora użyty do utworzenia, które <xref:System.Security.AccessControl.ObjectSecurity> obiektu, w sekcji z utrwalonego <xref:System.Security.AccessControl.ObjectSecurity> obiekt może zawierać wartości nieprzewidywalne. Na przykład, jeśli w Konstruktorze jest wywoływana z `includeSections` wartość <xref:System.Security.AccessControl.AccessControlSections.Access>i później <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> metoda jest wywoływana z tym obiektem z `includeSections` wartość <xref:System.Security.AccessControl.AccessControlSections.All>, powstałe w ten sposób utrwalone <xref:System.Security.AccessControl.ObjectSecurity> obiektu będzie zawierać nieoczekiwane wartości zasady inspekcji, grupy i właściciela.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeAccessRules">
      <MemberSignature Language="C#" Value="public virtual void PurgeAccessRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeAccessRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PurgeAccessRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PurgeAccessRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> Dla którego mają zostać usunięte wszystkie reguły dostępu.</param>
        <summary>Usuwa wszystkie reguły dostępu do skojarzonego z określonym <see cref="T:System.Security.Principal.IdentityReference" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Wszystkie reguły dostępu, nie są Porządek kanoniczny.</exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeAuditRules">
      <MemberSignature Language="C#" Value="public virtual void PurgeAuditRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeAuditRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PurgeAuditRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PurgeAuditRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> Dla którego mają zostać usunięte wszystkie zasady inspekcji.</param>
        <summary>Usuwa wszystkie inspekcji reguły skojarzone z określonym <see cref="T:System.Security.Principal.IdentityReference" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Wszystkie zasady inspekcji nie są w Porządek kanoniczny.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLock">
      <MemberSignature Language="C#" Value="protected void ReadLock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadLock ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadLock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje to zablokowanie <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu do odczytu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUnlock">
      <MemberSignature Language="C#" Value="protected void ReadUnlock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadUnlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadUnlock ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadUnlock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje to odblokowanie <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu do odczytu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRuleProtection">
      <MemberSignature Language="C#" Value="public void SetAccessRuleProtection (bool isProtected, bool preserveInheritance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRuleProtection(bool isProtected, bool preserveInheritance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRuleProtection (isProtected As Boolean, preserveInheritance As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRuleProtection(bool isProtected, bool preserveInheritance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isProtected" Type="System.Boolean" />
        <Parameter Name="preserveInheritance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isProtected">
          <see langword="true" /> Aby chronić zasad dostępu skojarzonych z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z dziedziczenia; <see langword="false" /> umożliwia dziedziczenia.</param>
        <param name="preserveInheritance">
          <see langword="true" /> Aby zachować dziedziczone reguły dostępu; <see langword="false" /> można usunąć reguły dostępu dziedziczone. Ten parametr jest ignorowana, jeśli <c>isProtected</c> jest <see langword="false" />.</param>
        <summary>Ustawia lub usuwa ochrony zasad dostępu skojarzonych z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu. Nie można zmodyfikować reguły dostępu do chronionych przez obiekty nadrzędne przez dziedziczenie.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Ta metoda próbuje usunąć reguły odziedziczone od-kanoniczna poufnej kontroli dostępu listy (DACL).</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRuleProtection">
      <MemberSignature Language="C#" Value="public void SetAuditRuleProtection (bool isProtected, bool preserveInheritance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRuleProtection(bool isProtected, bool preserveInheritance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRuleProtection (isProtected As Boolean, preserveInheritance As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRuleProtection(bool isProtected, bool preserveInheritance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isProtected" Type="System.Boolean" />
        <Parameter Name="preserveInheritance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isProtected">
          <see langword="true" /> Aby chronić zasady inspekcji skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z dziedziczenia; <see langword="false" /> umożliwia dziedziczenia.</param>
        <param name="preserveInheritance">
          <see langword="true" /> Aby zachować dziedziczone zasady inspekcji; <see langword="false" /> Aby usunąć zasady inspekcji dziedziczone. Ten parametr jest ignorowana, jeśli <c>isProtected</c> jest <see langword="false" />.</param>
        <summary>Ustawia lub usuwa ochrony zasady inspekcji skojarzone z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu. Nie można modyfikować zasady inspekcji chronionych przez obiekty nadrzędne przez dziedziczenie.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Ta metoda próbuje usunąć reguły odziedziczone z-canonical systemu dostępu formantu listy (SACL).</exception>
      </Docs>
    </Member>
    <Member MemberName="SetGroup">
      <MemberSignature Language="C#" Value="public void SetGroup (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGroup(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGroup (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGroup(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">Podstawowy grupy można ustawić.</param>
        <summary>Ustawia grupą podstawową dla deskryptora zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOwner">
      <MemberSignature Language="C#" Value="public void SetOwner (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOwner(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOwner (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOwner(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">Aby ustawić właściciela.</param>
        <summary>Ustawia właściciela dla deskryptora zabezpieczeń skojarzony z tym <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSecurityDescriptorBinaryForm">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonych danych binarnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli deskryptora zabezpieczeń reprezentowany przez danych binarnych zawiera `null` do jego poufnej listy kontroli dostępu (DACL), jednego wpisu kontroli dostępu (ACE) umożliwiający każdemu pełny dostęp (AEFA) jest dodawana do listy DACL. Jeśli aplikacja modyfikuje DACL deskryptora zabezpieczeń, do której dodano wpis ACE AEFA, AEFA ACE jest zachowywane z listy DACL w przypadku tej listy DACL jest trwały.  
  
 Może to spowodować przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń aplikacji. W związku z tym aplikacji należy do sprawdzania istnienia ACE AEFA i usuń go przed zmodyfikowaniem żadnych deskryptora zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSecurityDescriptorBinaryForm">
      <MemberSignature Language="C#" Value="public void SetSecurityDescriptorBinaryForm (byte[] binaryForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSecurityDescriptorBinaryForm(unsigned int8[] binaryForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSecurityDescriptorBinaryForm (binaryForm As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSecurityDescriptorBinaryForm(cli::array &lt;System::Byte&gt; ^ binaryForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="binaryForm">Tablica bajtów, z którego mają zostać ustawione deskryptora zabezpieczeń.</param>
        <summary>Ustawia deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonej tablicy wartości bajtów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli deskryptora zabezpieczeń reprezentowany przez danych binarnych zawiera `null` do jego poufnej listy kontroli dostępu (DACL), jednego wpisu kontroli dostępu (ACE) umożliwiający każdemu pełny dostęp (AEFA) jest dodawana do listy DACL. Jeśli aplikacja modyfikuje DACL deskryptora zabezpieczeń, do której dodano wpis ACE AEFA, AEFA ACE jest zachowywane z listy DACL w przypadku tej listy DACL jest trwały.  
  
 Może to spowodować przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń aplikacji. W związku z tym aplikacji należy do sprawdzania istnienia ACE AEFA i usuń go przed zmodyfikowaniem żadnych deskryptora zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecurityDescriptorBinaryForm">
      <MemberSignature Language="C#" Value="public void SetSecurityDescriptorBinaryForm (byte[] binaryForm, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSecurityDescriptorBinaryForm(unsigned int8[] binaryForm, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSecurityDescriptorBinaryForm (binaryForm As Byte(), includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSecurityDescriptorBinaryForm(cli::array &lt;System::Byte&gt; ^ binaryForm, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="binaryForm">Tablica bajtów, z którego mają zostać ustawione deskryptora zabezpieczeń.</param>
        <param name="includeSections">Sekcje (reguły dostępu, zasady inspekcji, właściciel, grupą podstawową) można ustawić deskryptora zabezpieczeń.</param>
        <summary>Ustawia sekcji określonego deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonej tablicy wartości bajtów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli deskryptora zabezpieczeń reprezentowany przez danych binarnych zawiera `null` do jego poufnej listy kontroli dostępu (DACL), jednego wpisu kontroli dostępu (ACE) umożliwiający każdemu pełny dostęp (AEFA) jest dodawana do listy DACL. Jeśli aplikacja modyfikuje DACL deskryptora zabezpieczeń, do której dodano wpis ACE AEFA, AEFA ACE jest zachowywane z listy DACL w przypadku tej listy DACL jest trwały.  
  
 Może to spowodować przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń aplikacji. W związku z tym aplikacji należy do sprawdzania istnienia ACE AEFA i usuń go przed zmodyfikowaniem żadnych deskryptora zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSecurityDescriptorSddlForm">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonego ciągu definicji języka SDDL (Security Descriptor).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli deskryptora zabezpieczeń reprezentowany przez ciąg SDDL zawiera `null` do jego poufnej listy kontroli dostępu (DACL), jednego wpisu kontroli dostępu (ACE) umożliwiający każdemu pełny dostęp (AEFA) jest dodawana do listy DACL. Jeśli aplikacja modyfikuje DACL deskryptora zabezpieczeń, do której dodano wpis ACE AEFA, AEFA ACE jest zachowywane z listy DACL w przypadku tej listy DACL jest trwały.  
  
 Może to spowodować przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń aplikacji. W związku z tym aplikacji należy do sprawdzania istnienia ACE AEFA i usuń go przed zmodyfikowaniem żadnych deskryptora zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSecurityDescriptorSddlForm">
      <MemberSignature Language="C#" Value="public void SetSecurityDescriptorSddlForm (string sddlForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSecurityDescriptorSddlForm(string sddlForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSecurityDescriptorSddlForm (sddlForm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSecurityDescriptorSddlForm(System::String ^ sddlForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sddlForm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sddlForm">Ciąg SDDL, z którego mają zostać ustawione deskryptora zabezpieczeń.</param>
        <summary>Ustawia deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonego ciągu definicji języka SDDL (Security Descriptor).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli deskryptora zabezpieczeń reprezentowany przez ciąg SDDL zawiera `null` do jego poufnej listy kontroli dostępu (DACL), jednego wpisu kontroli dostępu (ACE) umożliwiający każdemu pełny dostęp (AEFA) jest dodawana do listy DACL. Jeśli aplikacja modyfikuje DACL deskryptora zabezpieczeń, do której dodano wpis ACE AEFA, AEFA ACE jest zachowywane z listy DACL w przypadku tej listy DACL jest trwały.  
  
 Może to spowodować przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń aplikacji. W związku z tym aplikacji należy do sprawdzania istnienia ACE AEFA i usuń go przed zmodyfikowaniem żadnych deskryptora zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecurityDescriptorSddlForm">
      <MemberSignature Language="C#" Value="public void SetSecurityDescriptorSddlForm (string sddlForm, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSecurityDescriptorSddlForm(string sddlForm, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSecurityDescriptorSddlForm (sddlForm As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSecurityDescriptorSddlForm(System::String ^ sddlForm, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sddlForm" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="sddlForm">Ciąg SDDL, z którego mają zostać ustawione deskryptora zabezpieczeń.</param>
        <param name="includeSections">Sekcje (reguły dostępu, zasady inspekcji, właściciel, grupą podstawową) można ustawić deskryptora zabezpieczeń.</param>
        <summary>Ustawia sekcji określonego deskryptora zabezpieczeń dla tego <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu z określonego ciągu definicji języka SDDL (Security Descriptor).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli deskryptora zabezpieczeń reprezentowany przez ciąg SDDL zawiera `null` do jego poufnej listy kontroli dostępu (DACL), jednego wpisu kontroli dostępu (ACE) umożliwiający każdemu pełny dostęp (AEFA) jest dodawana do listy DACL. Jeśli aplikacja modyfikuje DACL deskryptora zabezpieczeń, do której dodano wpis ACE AEFA, AEFA ACE jest zachowywane z listy DACL w przypadku tej listy DACL jest trwały.  
  
 Może to spowodować przypadkowo zezwalania na dostęp do podmiotów zabezpieczeń aplikacji. W związku z tym aplikacji należy do sprawdzania istnienia ACE AEFA i usuń go przed zmodyfikowaniem żadnych deskryptora zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLock">
      <MemberSignature Language="C#" Value="protected void WriteLock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteLock ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteLock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje to zablokowanie <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu do zapisu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteUnlock">
      <MemberSignature Language="C#" Value="protected void WriteUnlock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUnlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUnlock ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUnlock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje to odblokowanie <see cref="T:System.Security.AccessControl.ObjectSecurity" /> obiektu do zapisu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>