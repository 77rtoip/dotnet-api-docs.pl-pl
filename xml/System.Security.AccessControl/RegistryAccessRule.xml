<Type Name="RegistryAccessRule" FullName="System.Security.AccessControl.RegistryAccessRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53807a30e81a5ee41228f200a61fc6dc40878e42" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37467051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type RegistryAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cb426-101">Reprezentuje zestaw praw dostępu, dozwolony lub blokowany dla użytkownika lub grupy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb426-101">Represents a set of access rights allowed or denied for a user or group.</span>
      </span>
      <span data-ttu-id="cb426-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb426-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb426-103"><xref:System.Security.AccessControl.RegistryAccessRule> Klasy jest jednym z zestawu klas, które program .NET Framework dostarcza do zarządzania Windows kontrolę dostępu dla kluczy rejestru.</span><span class="sxs-lookup"><span data-stu-id="cb426-103">The <xref:System.Security.AccessControl.RegistryAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="cb426-104">Omówienie tych klas i ich związek z podstawowej struktury kontroli dostępu Windows, zobacz <xref:System.Security.AccessControl.RegistrySecurity>.</span><span class="sxs-lookup"><span data-stu-id="cb426-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb426-105">Zabezpieczenia kontroli dostępu Windows będzie stosowany tylko do kluczy rejestru.</span><span class="sxs-lookup"><span data-stu-id="cb426-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="cb426-106">Nie można zastosować do poszczególnych klucz/wartość pary, przechowywane w kluczu.</span><span class="sxs-lookup"><span data-stu-id="cb426-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="cb426-107">Aby uzyskać listę reguł obecnie stosowane do klucza rejestru, użyj <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> metodę, aby uzyskać <xref:System.Security.AccessControl.RegistrySecurity> obiektu, a następnie użyć jej <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> metodę, aby uzyskać kolekcję <xref:System.Security.AccessControl.RegistryAccessRule> obiektów.</span><span class="sxs-lookup"><span data-stu-id="cb426-107">To get a list of the rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAccessRule> objects.</span></span>  
  
 <span data-ttu-id="cb426-108"><xref:System.Security.AccessControl.RegistryAccessRule> obiekty nie są mapowane jeden do jednego z wpisów kontroli dostępu na liście podstawowych arbitralnej kontroli dostępu (DACL).</span><span class="sxs-lookup"><span data-stu-id="cb426-108"><xref:System.Security.AccessControl.RegistryAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL).</span></span> <span data-ttu-id="cb426-109">Gdy otrzymasz zestaw wszystkie reguły dostępu do klucza rejestru zestaw zawiera minimalną liczbę reguł obecnie wymaganych do wyrażenia wszystkich wpisów kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="cb426-109">When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb426-110">Zmienić podstawowej wpisów kontroli dostępu Zastosuj i Usuń reguły.</span><span class="sxs-lookup"><span data-stu-id="cb426-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="cb426-111">Informacje w regułach są scalane, jeśli jest to możliwe, aby zachować najmniejszą liczbę wpisów kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="cb426-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="cb426-112">W związku z tym podczas odczytywania bieżącą listę reguł to może nie wyglądać dokładnie listę wszystkich reguł, które zostały dodane.</span><span class="sxs-lookup"><span data-stu-id="cb426-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="cb426-113">Użyj <xref:System.Security.AccessControl.RegistryAccessRule> obiektów, aby określić prawa dostępu, aby udzielić lub odmówić użytkownikowi lub grupie.</span><span class="sxs-lookup"><span data-stu-id="cb426-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="cb426-114">A <xref:System.Security.AccessControl.RegistryAccessRule> obiekt zawsze, reprezentuje zezwolenie na dostęp lub odmowa dostępu, nigdy nie oba.</span><span class="sxs-lookup"><span data-stu-id="cb426-114">A <xref:System.Security.AccessControl.RegistryAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="cb426-115">Aby zastosować regułę do klucza rejestru, użyj <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> metodę, aby uzyskać <xref:System.Security.AccessControl.RegistrySecurity> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cb426-115">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="cb426-116">Modyfikowanie <xref:System.Security.AccessControl.RegistrySecurity> obiektu za pomocą jej metod Dodaj regułę, a następnie użyć <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> metoda ponownie dołączyć obiektu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="cb426-116">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cb426-117">Zmiany wprowadzone do <xref:System.Security.AccessControl.RegistrySecurity> obiektu nie wpływają na poziomy dostępu do klucza rejestru do czasu wywołania <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> metodę, aby przypisać obiekt zmienionego zabezpieczeń do klucza rejestru.</span><span class="sxs-lookup"><span data-stu-id="cb426-117">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="cb426-118"><xref:System.Security.AccessControl.RegistryAccessRule> obiekty są niezmienne.</span><span class="sxs-lookup"><span data-stu-id="cb426-118"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="cb426-119">Zabezpieczenia dla klucza rejestru jest modyfikowana przy użyciu metody <xref:System.Security.AccessControl.RegistrySecurity> reguł klasy, aby dodać lub usunąć; jak to podstawowy wpisów kontroli dostępu są modyfikowane.</span><span class="sxs-lookup"><span data-stu-id="cb426-119">Security for a registry key is modified using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb426-120">Poniższy przykład kodu demonstruje reguły dostępu za pomocą dziedziczenia i propagacji.</span><span class="sxs-lookup"><span data-stu-id="cb426-120">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="cb426-121">W przykładzie jest tworzony <xref:System.Security.AccessControl.RegistrySecurity> obiektu, a następnie tworzy i dodaje dwie reguły, które mają <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flagi.</span><span class="sxs-lookup"><span data-stu-id="cb426-121">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="cb426-122">Pierwsza reguła ma nie flagi propagacji, natomiast druga <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> i <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="cb426-122">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="cb426-123">Ten program wyświetla reguł w <xref:System.Security.AccessControl.RegistrySecurity> obiektu, a następnie używa obiektu, aby utworzyć podklucz.</span><span class="sxs-lookup"><span data-stu-id="cb426-123">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the object to create a subkey.</span></span> <span data-ttu-id="cb426-124">Program tworzy element podrzędny podklucz i podwójnym podklucz, a następnie wyświetla zabezpieczeń dla każdego podklucza.</span><span class="sxs-lookup"><span data-stu-id="cb426-124">The program creates a child subkey and a grandchild subkey, and then displays the security for each subkey.</span></span> <span data-ttu-id="cb426-125">Na koniec usunie klucze testu.</span><span class="sxs-lookup"><span data-stu-id="cb426-125">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cb426-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="cb426-127">Użytkownicy lub grupy, których dotyczy reguła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-127">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="cb426-128">Musi być typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> lub typu, takie jak <see cref="T:System.Security.Principal.NTAccount" /> , można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="cb426-129">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości oznaczają prawa dozwolony lub blokowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cb426-130">Jedną z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartość wskazującą, czy uprawnienia są dozwolone lub odrzucane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb426-131">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy, określając użytkownika lub grupy, ta reguła ma zastosowanie do prawa dostępu i tego, czy prawa dostępu określonego zezwolono na dostęp lub odmowa dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb426-132">Ten konstruktor Określa domyślne propagacji i dziedziczenia.</span><span class="sxs-lookup"><span data-stu-id="cb426-132">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="cb426-133">Oznacza to, że <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> i <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cb426-133">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb426-134">
            <paramref name="registryRights" /> Określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-134">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="cb426-135">- lub - <paramref name="type" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-135">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb426-136">
            <paramref name="identity" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-136">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cb426-137">- lub - <paramref name="eventRights" /> wynosi zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-137">-or-  <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb426-138">
            <paramref name="identity" /> nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> ani nie ma typu, takie jak <see cref="T:System.Security.Principal.NTAccount" /> , można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-138">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="cb426-139">Nazwa użytkownika lub grupy dotyczy reguła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-139">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="cb426-140">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości oznaczają prawa dozwolony lub blokowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-140">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cb426-141">Jedną z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartość wskazującą, czy uprawnienia są dozwolone lub odrzucane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-141">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb426-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy, określając nazwę użytkownika lub grupy, ta reguła ma zastosowanie do prawa dostępu i tego, czy prawa dostępu określonego zezwolono na dostęp lub odmowa dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb426-143">Ten konstruktor Określa domyślne propagacji i dziedziczenia.</span><span class="sxs-lookup"><span data-stu-id="cb426-143">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="cb426-144">Oznacza to, że <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> i <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cb426-144">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cb426-145">Ten konstruktor jest odpowiednikiem tworzenie <xref:System.Security.Principal.NTAccount> obiektu, przekazując `identity` do <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> Konstruktor i przekazanie nowo utworzony <xref:System.Security.Principal.NTAccount> obiekt <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cb426-145">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb426-146">Poniższy przykład kodu tworzy reguły dostępu do rejestru i doda je do <xref:System.Security.AccessControl.RegistrySecurity> obiektu, przedstawiający sposób reguły zezwalania i odmowy uprawnień, które pozostaną oddzielne, podczas reguły zgodne z tego samego rodzaju są scalane.</span><span class="sxs-lookup"><span data-stu-id="cb426-146">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb426-147">
            <paramref name="registryRights" /> Określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-147">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="cb426-148">- lub - <paramref name="type" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-148">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb426-149">
            <paramref name="registryRights" /> wynosi zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-149">
              <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb426-150">
            <paramref name="identity" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-150">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cb426-151">- lub - <paramref name="identity" /> jest ciągiem o zerowej długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-151">-or-  <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="cb426-152">- lub - <paramref name="identity" /> ma więcej niż 512 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-152">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="cb426-153">Użytkownicy lub grupy, których dotyczy reguła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-153">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="cb426-154">Musi być typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> lub typu, takie jak <see cref="T:System.Security.Principal.NTAccount" /> , można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-154">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="cb426-155">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości określających prawa dozwolony lub blokowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-155">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="cb426-156">Bitowa kombinacja <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flagi określające, jak prawa dostępu są dziedziczone z innych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-156">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="cb426-157">Bitowa kombinacja <see cref="T:System.Security.AccessControl.PropagationFlags" /> flagi określające, jak prawa dostępu są propagowane do innych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-157">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cb426-158">Jedną z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości określających, czy uprawnienia są dozwolone lub odrzucane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-158">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb426-159">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy flagi propagacji określenie użytkownika lub grupy, ta reguła ma zastosowanie do prawa dostępu flag dziedziczenia i czy prawa dostępu określonego zezwolono na dostęp lub odmowa dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-159">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb426-160">Wszystkie klucze rejestru są kontenerami, dzięki czemu jest tylko flagę dziedziczenia, która ma znaczenie dla kluczy rejestru <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flagi.</span><span class="sxs-lookup"><span data-stu-id="cb426-160">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cb426-161">Jeśli ta flaga nie zostanie określony, flagi propagacji są ignorowane i dotyczy tylko bezpośredniego klucz.</span><span class="sxs-lookup"><span data-stu-id="cb426-161">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="cb426-162">Jeśli flaga jest obecny, reguły są propagowane, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cb426-162">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="cb426-163">Tabela zakłada, że istnieje podklucz S przy użyciu podrzędnych podklucz CS i podklucz podwójnym GS.</span><span class="sxs-lookup"><span data-stu-id="cb426-163">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="cb426-164">Oznacza to, że ścieżka podklucza podwójnym jest S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="cb426-164">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="cb426-165">Flagi propagacji</span><span class="sxs-lookup"><span data-stu-id="cb426-165">Propagation flags</span></span>|<span data-ttu-id="cb426-166">S</span><span class="sxs-lookup"><span data-stu-id="cb426-166">S</span></span>|<span data-ttu-id="cb426-167">CS</span><span class="sxs-lookup"><span data-stu-id="cb426-167">CS</span></span>|<span data-ttu-id="cb426-168">GS</span><span class="sxs-lookup"><span data-stu-id="cb426-168">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="cb426-169">X</span><span class="sxs-lookup"><span data-stu-id="cb426-169">X</span></span>|<span data-ttu-id="cb426-170">X</span><span class="sxs-lookup"><span data-stu-id="cb426-170">X</span></span>|<span data-ttu-id="cb426-171">X</span><span class="sxs-lookup"><span data-stu-id="cb426-171">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="cb426-172">X</span><span class="sxs-lookup"><span data-stu-id="cb426-172">X</span></span>|<span data-ttu-id="cb426-173">X</span><span class="sxs-lookup"><span data-stu-id="cb426-173">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="cb426-174">X</span><span class="sxs-lookup"><span data-stu-id="cb426-174">X</span></span>|<span data-ttu-id="cb426-175">X</span><span class="sxs-lookup"><span data-stu-id="cb426-175">X</span></span>|  
|<span data-ttu-id="cb426-176"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="cb426-176"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="cb426-177">X</span><span class="sxs-lookup"><span data-stu-id="cb426-177">X</span></span>||  
  
 <span data-ttu-id="cb426-178">Wzorzec podklucz podwójnym decyduje wszystkich jego podkluczy zawarty w podkluczu podwójnym.</span><span class="sxs-lookup"><span data-stu-id="cb426-178">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="cb426-179">Na przykład jeśli <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> określono flagę `inheritanceFlags` i <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> flagi propagacji jest określona dla `propagationFlags`, ta zasada nie ma zastosowania do natychmiastowego podklucza, ale dotyczą wszystkich jego podkluczy bezpośrednie podrzędne i wszystkich jego podkluczy zawierają one.</span><span class="sxs-lookup"><span data-stu-id="cb426-179">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb426-180">Chociaż można określić <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flaga `inheritanceFlags`, brak punktu, w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="cb426-180">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="cb426-181">Na potrzeby kontroli dostępu pary nazwa/wartość w podkluczu nie są oddzielne obiekty.</span><span class="sxs-lookup"><span data-stu-id="cb426-181">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="cb426-182">Prawa dostępu do par nazwa/wartość są kontrolowane przez prawa podklucza.</span><span class="sxs-lookup"><span data-stu-id="cb426-182">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="cb426-183">Ponadto ponieważ wszystkich jego podkluczy są kontenerami (czyli zawierają inne podklucze), nie są narażone na <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flagi.</span><span class="sxs-lookup"><span data-stu-id="cb426-183">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="cb426-184">Na koniec, określając <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flagi niepotrzebnie komplikuje konserwacji zasad, ponieważ zakłócać połączenie w przeciwnym razie niezgodne reguły.</span><span class="sxs-lookup"><span data-stu-id="cb426-184">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb426-185">
            <paramref name="registryRights" /> Określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-185">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="cb426-186">- lub - <paramref name="type" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-186">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="cb426-187">- lub - <paramref name="inheritanceFlags" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-187">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="cb426-188">- lub - <paramref name="propagationFlags" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-188">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb426-189">
            <paramref name="identity" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-189">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cb426-190">- lub - <paramref name="registryRights" /> wynosi zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-190">-or-  <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb426-191">
            <paramref name="identity" /> nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" />, ani nie ma typu, takie jak <see cref="T:System.Security.Principal.NTAccount" /> , można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-191">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="cb426-192">Nazwa użytkownika lub grupy dotyczy reguła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-192">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="cb426-193">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości oznaczają prawa dozwolony lub blokowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-193">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="cb426-194">Bitowa kombinacja <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flagi określające, jak prawa dostępu są dziedziczone z innych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-194">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="cb426-195">Bitowa kombinacja <see cref="T:System.Security.AccessControl.PropagationFlags" /> flagi określające, jak prawa dostępu są propagowane do innych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-195">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="cb426-196">Jedną z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości określających, czy uprawnienia są dozwolone lub odrzucane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-196">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb426-197">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy, określając nazwę użytkownika lub grupy, ta reguła ma zastosowanie do prawa dostępu flag dziedziczenia flagi propagacji i tego, czy udzielić lub odmówić prawa dostępu określonego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-197">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb426-198">Wszystkie klucze rejestru są kontenerami, dzięki czemu jest tylko flagę dziedziczenia, która ma znaczenie dla kluczy rejestru <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flagi.</span><span class="sxs-lookup"><span data-stu-id="cb426-198">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cb426-199">Jeśli ta flaga nie zostanie określony, flagi propagacji są ignorowane i dotyczy tylko bezpośredniego klucz.</span><span class="sxs-lookup"><span data-stu-id="cb426-199">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="cb426-200">Jeśli flaga jest obecny, reguły są propagowane, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="cb426-200">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="cb426-201">Tabela zakłada, że istnieje podklucz S przy użyciu podrzędnych podklucz CS i podklucz podwójnym GS.</span><span class="sxs-lookup"><span data-stu-id="cb426-201">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="cb426-202">Oznacza to, że ścieżka podklucza podwójnym jest S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="cb426-202">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="cb426-203">Flagi propagacji</span><span class="sxs-lookup"><span data-stu-id="cb426-203">Propagation flags</span></span>|<span data-ttu-id="cb426-204">S</span><span class="sxs-lookup"><span data-stu-id="cb426-204">S</span></span>|<span data-ttu-id="cb426-205">CS</span><span class="sxs-lookup"><span data-stu-id="cb426-205">CS</span></span>|<span data-ttu-id="cb426-206">GS</span><span class="sxs-lookup"><span data-stu-id="cb426-206">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="cb426-207">X</span><span class="sxs-lookup"><span data-stu-id="cb426-207">X</span></span>|<span data-ttu-id="cb426-208">X</span><span class="sxs-lookup"><span data-stu-id="cb426-208">X</span></span>|<span data-ttu-id="cb426-209">X</span><span class="sxs-lookup"><span data-stu-id="cb426-209">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="cb426-210">X</span><span class="sxs-lookup"><span data-stu-id="cb426-210">X</span></span>|<span data-ttu-id="cb426-211">X</span><span class="sxs-lookup"><span data-stu-id="cb426-211">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="cb426-212">X</span><span class="sxs-lookup"><span data-stu-id="cb426-212">X</span></span>|<span data-ttu-id="cb426-213">X</span><span class="sxs-lookup"><span data-stu-id="cb426-213">X</span></span>|  
|<span data-ttu-id="cb426-214"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="cb426-214"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="cb426-215">X</span><span class="sxs-lookup"><span data-stu-id="cb426-215">X</span></span>||  
  
 <span data-ttu-id="cb426-216">Wzorzec podklucz podwójnym decyduje wszystkich jego podkluczy zawarty w podkluczu podwójnym.</span><span class="sxs-lookup"><span data-stu-id="cb426-216">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="cb426-217">Na przykład jeśli <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> określono flagę `inheritanceFlags` i <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> flagi propagacji jest określona dla `propagationFlags`, ta zasada nie ma zastosowania do natychmiastowego podklucza, ale dotyczą wszystkich jego podkluczy bezpośrednie podrzędne i wszystkich jego podkluczy zawierają one.</span><span class="sxs-lookup"><span data-stu-id="cb426-217">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb426-218">Chociaż można określić <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flaga `inheritanceFlags`, brak punktu, w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="cb426-218">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="cb426-219">Na potrzeby kontroli dostępu pary nazwa/wartość w podkluczu nie są oddzielne obiekty.</span><span class="sxs-lookup"><span data-stu-id="cb426-219">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="cb426-220">Prawa dostępu do par nazwa/wartość są kontrolowane przez prawa podklucza.</span><span class="sxs-lookup"><span data-stu-id="cb426-220">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="cb426-221">Ponadto ponieważ wszystkich jego podkluczy są kontenerami (czyli zawierają inne podklucze), nie są narażone na <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flagi.</span><span class="sxs-lookup"><span data-stu-id="cb426-221">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="cb426-222">Na koniec, określając <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flagi niepotrzebnie komplikuje konserwacji zasad, ponieważ zakłócać połączenie w przeciwnym razie niezgodne reguły.</span><span class="sxs-lookup"><span data-stu-id="cb426-222">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 <span data-ttu-id="cb426-223">Ten konstruktor jest odpowiednikiem tworzenie <xref:System.Security.Principal.NTAccount> obiektu, przekazując `identity` do <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> Konstruktor i przekazanie nowo utworzony <xref:System.Security.Principal.NTAccount> obiekt <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cb426-223">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb426-224">Poniższy przykład kodu demonstruje reguły dostępu za pomocą dziedziczenia i propagacji.</span><span class="sxs-lookup"><span data-stu-id="cb426-224">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="cb426-225">W przykładzie jest tworzony <xref:System.Security.AccessControl.RegistrySecurity> obiektu, a następnie tworzy i dodaje dwie reguły, które mają <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flagi.</span><span class="sxs-lookup"><span data-stu-id="cb426-225">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, and then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="cb426-226">Pierwsza reguła ma nie flagi propagacji, natomiast druga <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> i <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="cb426-226">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="cb426-227">Ten program wyświetla reguł w <xref:System.Security.AccessControl.RegistrySecurity> obiektu, a następnie używa <xref:System.Security.AccessControl.RegistrySecurity> obiekt, aby utworzyć podklucz.</span><span class="sxs-lookup"><span data-stu-id="cb426-227">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="cb426-228">Program tworzy element podrzędny podklucz i podwójnym podklucz, a następnie wyświetla reguł dla każdego podklucza.</span><span class="sxs-lookup"><span data-stu-id="cb426-228">The program creates a child subkey and a grandchild subkey, and then displays the rules for each subkey.</span></span> <span data-ttu-id="cb426-229">Na koniec usunie klucze testu.</span><span class="sxs-lookup"><span data-stu-id="cb426-229">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb426-230">
            <paramref name="registryRights" /> Określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-230">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="cb426-231">- lub - <paramref name="type" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-231">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="cb426-232">- lub - <paramref name="inheritanceFlags" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-232">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="cb426-233">- lub - <paramref name="propagationFlags" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-233">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb426-234">
            <paramref name="eventRights" /> wynosi zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-234">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb426-235">
            <paramref name="identity" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-235">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cb426-236">- lub - <paramref name="identity" /> jest ciągiem o zerowej długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-236">-or-  <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="cb426-237">- lub - <paramref name="identity" /> ma więcej niż 512 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-237">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb426-238">Pobiera praw dozwolony lub odrzucany przez regułę dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-238">Gets the rights allowed or denied by the access rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb426-239">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości oznaczają prawa dozwolony lub odrzucany przez regułę dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb426-239">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied by the access rule.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb426-240"><xref:System.Security.AccessControl.RegistryAccessRule> obiekty są niezmienne.</span><span class="sxs-lookup"><span data-stu-id="cb426-240"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="cb426-241">Można utworzyć nową regułę dostępu, reprezentujący innego użytkownika, inne prawa lub innego <xref:System.Security.AccessControl.AccessControlType>, ale nie można zmodyfikować istniejącą regułę dostępu.</span><span class="sxs-lookup"><span data-stu-id="cb426-241">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>