<Type Name="RegistryAccessRule" FullName="System.Security.AccessControl.RegistryAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c14b64139b95a8eb6db3de16a64ace8d9f2529db" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69264489" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type RegistryAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e67f5-101">Reprezentuje zestaw praw dostępu dozwolonych lub zabronionych dla użytkownika lub grupy.</span><span class="sxs-lookup"><span data-stu-id="e67f5-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="e67f5-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="e67f5-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67f5-103"><xref:System.Security.AccessControl.RegistryAccessRule> Klasa jest jednym z zestawów klas, które .NET Framework zapewnia do zarządzania zabezpieczeniami kontroli dostępu systemu Windows w kluczach rejestru.</span><span class="sxs-lookup"><span data-stu-id="e67f5-103">The <xref:System.Security.AccessControl.RegistryAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="e67f5-104">Aby zapoznać się z omówieniem tych klas i ich relacji z podstawową strukturą kontroli dostępu systemu Windows, <xref:System.Security.AccessControl.RegistrySecurity>Zobacz.</span><span class="sxs-lookup"><span data-stu-id="e67f5-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e67f5-105">Zabezpieczenia kontroli dostępu do systemu Windows można stosować tylko do kluczy rejestru.</span><span class="sxs-lookup"><span data-stu-id="e67f5-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="e67f5-106">Nie można jej zastosować do poszczególnych par klucz/wartość przechowywanych w kluczu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="e67f5-107">Aby uzyskać listę reguł, które są aktualnie stosowane do <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> klucza rejestru, użyj metody w celu <xref:System.Security.AccessControl.RegistrySecurity> uzyskania obiektu, a następnie użyj jego <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> metody w celu uzyskania kolekcji <xref:System.Security.AccessControl.RegistryAccessRule> obiektów.</span><span class="sxs-lookup"><span data-stu-id="e67f5-107">To get a list of the rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAccessRule> objects.</span></span>  
  
 <span data-ttu-id="e67f5-108"><xref:System.Security.AccessControl.RegistryAccessRule>obiekty nie mapują jeden do jednego z wpisami kontroli dostępu na poufnej liście kontroli dostępu (DACL).</span><span class="sxs-lookup"><span data-stu-id="e67f5-108"><xref:System.Security.AccessControl.RegistryAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL).</span></span> <span data-ttu-id="e67f5-109">Po otrzymaniu zestawu wszystkich reguł dostępu dla klucza rejestru zestaw zawiera minimalną liczbę reguł, które są obecnie wymagane do wyznaczania wszystkich wpisów kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-109">When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e67f5-110">Powiązane wpisy kontroli dostępu zmieniają się w miarę stosowania i usuwania reguł.</span><span class="sxs-lookup"><span data-stu-id="e67f5-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="e67f5-111">Informacje w regułach są scalane, jeśli jest to możliwe, w celu utrzymania najmniejszej liczby wpisów kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="e67f5-112">W ten sposób, podczas odczytywania bieżącej listy reguł, może nie wyglądać dokładnie tak jak lista wszystkich dodanych reguł.</span><span class="sxs-lookup"><span data-stu-id="e67f5-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="e67f5-113">Użyj <xref:System.Security.AccessControl.RegistryAccessRule> obiektów, aby określić prawa dostępu do zezwalania lub odmowy użytkownikowi lub grupie.</span><span class="sxs-lookup"><span data-stu-id="e67f5-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="e67f5-114"><xref:System.Security.AccessControl.RegistryAccessRule> Obiekt zawsze reprezentuje dozwolony lub zabroniony dostęp, nigdy nie obu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-114">A <xref:System.Security.AccessControl.RegistryAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="e67f5-115">Aby zastosować regułę do klucza rejestru, użyj <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> metody w celu <xref:System.Security.AccessControl.RegistrySecurity> pobrania obiektu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-115">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="e67f5-116">Zmodyfikuj obiekt za pomocą jego metod, aby dodać regułę, a następnie <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> Użyj metody, aby ponownie dołączyć obiekt zabezpieczeń. <xref:System.Security.AccessControl.RegistrySecurity></span><span class="sxs-lookup"><span data-stu-id="e67f5-116">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e67f5-117">Zmiany wprowadzone w <xref:System.Security.AccessControl.RegistrySecurity> obiekcie nie wpływają na poziomy dostępu klucza rejestru do momentu <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> wywołania metody przypisania zmienionego obiektu zabezpieczeń do klucza rejestru.</span><span class="sxs-lookup"><span data-stu-id="e67f5-117">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="e67f5-118"><xref:System.Security.AccessControl.RegistryAccessRule>obiekty są niezmienne.</span><span class="sxs-lookup"><span data-stu-id="e67f5-118"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="e67f5-119">Zabezpieczenia klucza rejestru są modyfikowane przy użyciu metod <xref:System.Security.AccessControl.RegistrySecurity> klasy w celu dodawania lub usuwania reguł. w takim przypadku odpowiednie wpisy kontroli dostępu są modyfikowane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-119">Security for a registry key is modified using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e67f5-120">Poniższy przykład kodu demonstruje reguły dostępu z dziedziczeniem i propagacją.</span><span class="sxs-lookup"><span data-stu-id="e67f5-120">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="e67f5-121">Przykład tworzy <xref:System.Security.AccessControl.RegistrySecurity> obiekt, a następnie tworzy i dodaje dwie reguły, które <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> mają flagę.</span><span class="sxs-lookup"><span data-stu-id="e67f5-121">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="e67f5-122">Pierwsza reguła nie ma flag propagacji, a drugi ma <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> i. <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="e67f5-122">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="e67f5-123">Program wyświetla reguły w <xref:System.Security.AccessControl.RegistrySecurity> obiekcie, a następnie używa obiektu do utworzenia podklucza.</span><span class="sxs-lookup"><span data-stu-id="e67f5-123">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the object to create a subkey.</span></span> <span data-ttu-id="e67f5-124">Program tworzy podrzędny podklucz i podklucz grandchild, a następnie wyświetla zabezpieczenia dla każdego podklucza.</span><span class="sxs-lookup"><span data-stu-id="e67f5-124">The program creates a child subkey and a grandchild subkey, and then displays the security for each subkey.</span></span> <span data-ttu-id="e67f5-125">Na koniec program usuwa klucze testowe.</span><span class="sxs-lookup"><span data-stu-id="e67f5-125">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67f5-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e67f5-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="e67f5-127">Użytkownik lub Grupa, której dotyczy reguła.</span><span class="sxs-lookup"><span data-stu-id="e67f5-127">The user or group the rule applies to.</span></span> <span data-ttu-id="e67f5-128">Musi być typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> lub typu, takiego jak <see cref="T:System.Security.Principal.NTAccount" /> , który można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="e67f5-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="registryRights"><span data-ttu-id="e67f5-129">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości wskazujących prawa dozwolone lub odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="e67f5-130">Jedna z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości wskazujących, czy prawa są dozwolone czy odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="e67f5-131">Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy, określając użytkownika lub grupę, do której odnosi się reguła, uprawnienia dostępu oraz tego, czy określone prawa dostępu są dozwolone czy odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67f5-132">Ten konstruktor określa domyślną propagację i dziedziczenie.</span><span class="sxs-lookup"><span data-stu-id="e67f5-132">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="e67f5-133">Oznacza to, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> i <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e67f5-133">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67f5-134"><paramref name="registryRights" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-134"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="e67f5-135">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-135">-or-</span></span> 
 <span data-ttu-id="e67f5-136"><paramref name="type" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-136"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67f5-137"><paramref name="identity" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e67f5-137"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e67f5-138">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-138">-or-</span></span> 
 <span data-ttu-id="e67f5-139"><paramref name="eventRights" />ma wartość zero.</span><span class="sxs-lookup"><span data-stu-id="e67f5-139"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67f5-140"><paramref name="identity" />nie jest typem <see cref="T:System.Security.Principal.SecurityIdentifier" /> ani typu, takiego jak <see cref="T:System.Security.Principal.NTAccount" /> , który można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="e67f5-140"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="e67f5-141">Nazwa użytkownika lub grupy, do której odnosi się reguła.</span><span class="sxs-lookup"><span data-stu-id="e67f5-141">The name of the user or group the rule applies to.</span></span></param>
        <param name="registryRights"><span data-ttu-id="e67f5-142">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości wskazujących prawa dozwolone lub odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-142">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="e67f5-143">Jedna z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości wskazujących, czy prawa są dozwolone czy odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="e67f5-144">Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy, określając nazwę użytkownika lub grupy, do której odnosi się reguła, uprawnienia dostępu oraz tego, czy określone prawa dostępu są dozwolone czy odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67f5-145">Ten konstruktor określa domyślną propagację i dziedziczenie.</span><span class="sxs-lookup"><span data-stu-id="e67f5-145">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="e67f5-146">Oznacza to, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> i <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e67f5-146">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e67f5-147">Ten konstruktor jest równoznaczny z tworzeniem <xref:System.Security.Principal.NTAccount> obiektu, przekazaniem `identity` do <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> konstruktora <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> i przekazaniem nowo utworzonego <xref:System.Security.Principal.NTAccount> obiektu do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="e67f5-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e67f5-148">Poniższy przykład kodu tworzy reguły dostępu do rejestru i dodaje je do <xref:System.Security.AccessControl.RegistrySecurity> obiektu, pokazując, jak reguły zezwalające na prawa i Odmów pozostają oddzielone, chociaż scalane są zgodne reguły tego samego rodzaju.</span><span class="sxs-lookup"><span data-stu-id="e67f5-148">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67f5-149"><paramref name="registryRights" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-149"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="e67f5-150">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-150">-or-</span></span> 
 <span data-ttu-id="e67f5-151"><paramref name="type" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-151"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67f5-152"><paramref name="registryRights" />ma wartość zero.</span><span class="sxs-lookup"><span data-stu-id="e67f5-152"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67f5-153"><paramref name="identity" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e67f5-153"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e67f5-154">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-154">-or-</span></span> 
 <span data-ttu-id="e67f5-155"><paramref name="identity" />jest ciągiem o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="e67f5-155"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="e67f5-156">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-156">-or-</span></span> 
 <span data-ttu-id="e67f5-157"><paramref name="identity" />jest dłuższa niż 512 znaków.</span><span class="sxs-lookup"><span data-stu-id="e67f5-157"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="e67f5-158">Użytkownik lub Grupa, której dotyczy reguła.</span><span class="sxs-lookup"><span data-stu-id="e67f5-158">The user or group the rule applies to.</span></span> <span data-ttu-id="e67f5-159">Musi być typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> lub typu, takiego jak <see cref="T:System.Security.Principal.NTAccount" /> , który można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="e67f5-159">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="registryRights"><span data-ttu-id="e67f5-160">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości określających prawa dozwolone lub odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-160">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="e67f5-161">Bitowa kombinacja <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flag określająca, jak prawa dostępu są dziedziczone z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="e67f5-161">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="e67f5-162">Bitowa kombinacja <see cref="T:System.Security.AccessControl.PropagationFlags" /> flag określająca, jak prawa dostępu są propagowane do innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="e67f5-162">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span></span></param>
        <param name="type"><span data-ttu-id="e67f5-163">Jedna z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości określająca, czy prawa są dozwolone czy odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-163">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="e67f5-164">Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy, określając użytkownika lub grupę, do której odnosi się reguła, prawa dostępu, flagi dziedziczenia, flagi propagacji oraz określające, czy określone prawa dostępu są dozwolone czy odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-164">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67f5-165">Wszystkie klucze rejestru są kontenerami, więc <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flagą jest jedyną flagę dziedziczenia, która jest istotna dla kluczy rejestru.</span><span class="sxs-lookup"><span data-stu-id="e67f5-165">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e67f5-166">Jeśli ta flaga nie jest określona, flagi propagacji są ignorowane i dotyczy tylko klucza natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="e67f5-166">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="e67f5-167">Jeśli flaga jest obecna, reguła jest propagowana, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="e67f5-167">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="e67f5-168">W tabeli założono, że istnieje podklucz S z podkluczem podrzędnym CS i grandchild podklucza GS.</span><span class="sxs-lookup"><span data-stu-id="e67f5-168">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="e67f5-169">Oznacza to, że ścieżką dla podklucza grandchild jest S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="e67f5-169">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="e67f5-170">Flagi propagacji</span><span class="sxs-lookup"><span data-stu-id="e67f5-170">Propagation flags</span></span>|<span data-ttu-id="e67f5-171">S</span><span class="sxs-lookup"><span data-stu-id="e67f5-171">S</span></span>|<span data-ttu-id="e67f5-172">REJESTR</span><span class="sxs-lookup"><span data-stu-id="e67f5-172">CS</span></span>|<span data-ttu-id="e67f5-173">GS</span><span class="sxs-lookup"><span data-stu-id="e67f5-173">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="e67f5-174">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-174">X</span></span>|<span data-ttu-id="e67f5-175">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-175">X</span></span>|<span data-ttu-id="e67f5-176">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-176">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="e67f5-177">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-177">X</span></span>|<span data-ttu-id="e67f5-178">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-178">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="e67f5-179">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-179">X</span></span>|<span data-ttu-id="e67f5-180">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-180">X</span></span>|  
|<span data-ttu-id="e67f5-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="e67f5-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="e67f5-182">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-182">X</span></span>||  
  
 <span data-ttu-id="e67f5-183">Wzorzec podklucza grandchild zarządza wszystkimi podkluczami zawartymi w podkluczu grandchild.</span><span class="sxs-lookup"><span data-stu-id="e67f5-183">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="e67f5-184">Na przykład, <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> Jeśli flaga jest określona dla `inheritanceFlags` i <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> flaga Propagacja jest określona dla `propagationFlags`, ta reguła nie ma zastosowania do bezpośredniego podklucza, ale ma zastosowanie do wszystkich bezpośrednich podkluczy podrzędnych i wszystkich podkluczy zawierają one.</span><span class="sxs-lookup"><span data-stu-id="e67f5-184">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e67f5-185">Chociaż można określić <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flagę dla `inheritanceFlags`, nie ma żadnego punktu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-185">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="e67f5-186">Na potrzeby kontroli dostępu pary nazwa/wartość w podkluczu nie są oddzielnymi obiektami.</span><span class="sxs-lookup"><span data-stu-id="e67f5-186">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="e67f5-187">Prawa dostępu do par nazwa/wartość są kontrolowane przez prawa podklucza.</span><span class="sxs-lookup"><span data-stu-id="e67f5-187">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="e67f5-188">Ponadto, ponieważ wszystkie podklucze są kontenerami (to oznacza, że mogą zawierać inne podklucze), nie ma to <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> wpływ na flagę.</span><span class="sxs-lookup"><span data-stu-id="e67f5-188">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="e67f5-189">Na <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> koniec określenie flagi niepotrzebnie komplikuje konserwację reguł, ponieważ koliduje ona z kombinacją zgodnych reguł w inny sposób.</span><span class="sxs-lookup"><span data-stu-id="e67f5-189">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67f5-190"><paramref name="registryRights" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-190"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="e67f5-191">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-191">-or-</span></span> 
 <span data-ttu-id="e67f5-192"><paramref name="type" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-192"><paramref name="type" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="e67f5-193">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-193">-or-</span></span> 
 <span data-ttu-id="e67f5-194"><paramref name="inheritanceFlags" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-194"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="e67f5-195">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-195">-or-</span></span> 
 <span data-ttu-id="e67f5-196"><paramref name="propagationFlags" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-196"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67f5-197"><paramref name="identity" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e67f5-197"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e67f5-198">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-198">-or-</span></span> 
 <span data-ttu-id="e67f5-199"><paramref name="registryRights" />ma wartość zero.</span><span class="sxs-lookup"><span data-stu-id="e67f5-199"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67f5-200"><paramref name="identity" />nie jest typem <see cref="T:System.Security.Principal.SecurityIdentifier" />ani typu, takiego jak <see cref="T:System.Security.Principal.NTAccount" /> , który można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="e67f5-200"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="e67f5-201">Nazwa użytkownika lub grupy, do której odnosi się reguła.</span><span class="sxs-lookup"><span data-stu-id="e67f5-201">The name of the user or group the rule applies to.</span></span></param>
        <param name="registryRights"><span data-ttu-id="e67f5-202">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości wskazujących prawa dozwolone lub odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-202">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="e67f5-203">Bitowa kombinacja <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flag określająca, jak prawa dostępu są dziedziczone z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="e67f5-203">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="e67f5-204">Bitowa kombinacja <see cref="T:System.Security.AccessControl.PropagationFlags" /> flag określająca, jak prawa dostępu są propagowane do innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="e67f5-204">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span></span></param>
        <param name="type"><span data-ttu-id="e67f5-205">Jedna z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości określająca, czy prawa są dozwolone czy odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-205">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="e67f5-206">Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> klasy, określając nazwę użytkownika lub grupy, do której odnosi się reguła, prawa dostępu, flagi dziedziczenia, flagi propagacji oraz to, czy określone prawa dostępu są dozwolone czy odrzucane.</span><span class="sxs-lookup"><span data-stu-id="e67f5-206">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67f5-207">Wszystkie klucze rejestru są kontenerami, więc <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flagą jest jedyną flagę dziedziczenia, która jest istotna dla kluczy rejestru.</span><span class="sxs-lookup"><span data-stu-id="e67f5-207">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e67f5-208">Jeśli ta flaga nie jest określona, flagi propagacji są ignorowane i dotyczy tylko klucza natychmiastowego.</span><span class="sxs-lookup"><span data-stu-id="e67f5-208">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="e67f5-209">Jeśli flaga jest obecna, reguła jest propagowana, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="e67f5-209">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="e67f5-210">W tabeli założono, że istnieje podklucz S z podkluczem podrzędnym CS i grandchild podklucza GS.</span><span class="sxs-lookup"><span data-stu-id="e67f5-210">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="e67f5-211">Oznacza to, że ścieżką dla podklucza grandchild jest S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="e67f5-211">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="e67f5-212">Flagi propagacji</span><span class="sxs-lookup"><span data-stu-id="e67f5-212">Propagation flags</span></span>|<span data-ttu-id="e67f5-213">S</span><span class="sxs-lookup"><span data-stu-id="e67f5-213">S</span></span>|<span data-ttu-id="e67f5-214">REJESTR</span><span class="sxs-lookup"><span data-stu-id="e67f5-214">CS</span></span>|<span data-ttu-id="e67f5-215">GS</span><span class="sxs-lookup"><span data-stu-id="e67f5-215">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="e67f5-216">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-216">X</span></span>|<span data-ttu-id="e67f5-217">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-217">X</span></span>|<span data-ttu-id="e67f5-218">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-218">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="e67f5-219">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-219">X</span></span>|<span data-ttu-id="e67f5-220">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-220">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="e67f5-221">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-221">X</span></span>|<span data-ttu-id="e67f5-222">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-222">X</span></span>|  
|<span data-ttu-id="e67f5-223"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="e67f5-223"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="e67f5-224">X</span><span class="sxs-lookup"><span data-stu-id="e67f5-224">X</span></span>||  
  
 <span data-ttu-id="e67f5-225">Wzorzec podklucza grandchild zarządza wszystkimi podkluczami zawartymi w podkluczu grandchild.</span><span class="sxs-lookup"><span data-stu-id="e67f5-225">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="e67f5-226">Na przykład, <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> Jeśli flaga jest określona dla `inheritanceFlags` i <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> flaga Propagacja jest określona dla `propagationFlags`, ta reguła nie ma zastosowania do bezpośredniego podklucza, ale ma zastosowanie do wszystkich bezpośrednich podkluczy podrzędnych i wszystkich podkluczy zawierają one.</span><span class="sxs-lookup"><span data-stu-id="e67f5-226">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e67f5-227">Chociaż można określić <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flagę dla `inheritanceFlags`, nie ma żadnego punktu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-227">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="e67f5-228">Na potrzeby kontroli dostępu pary nazwa/wartość w podkluczu nie są oddzielnymi obiektami.</span><span class="sxs-lookup"><span data-stu-id="e67f5-228">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="e67f5-229">Prawa dostępu do par nazwa/wartość są kontrolowane przez prawa podklucza.</span><span class="sxs-lookup"><span data-stu-id="e67f5-229">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="e67f5-230">Ponadto, ponieważ wszystkie podklucze są kontenerami (to oznacza, że mogą zawierać inne podklucze), nie ma to <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> wpływ na flagę.</span><span class="sxs-lookup"><span data-stu-id="e67f5-230">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="e67f5-231">Na <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> koniec określenie flagi niepotrzebnie komplikuje konserwację reguł, ponieważ koliduje ona z kombinacją zgodnych reguł w inny sposób.</span><span class="sxs-lookup"><span data-stu-id="e67f5-231">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 <span data-ttu-id="e67f5-232">Ten konstruktor jest równoznaczny z tworzeniem <xref:System.Security.Principal.NTAccount> obiektu, przekazaniem `identity` do <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> konstruktora <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> i przekazaniem nowo utworzonego <xref:System.Security.Principal.NTAccount> obiektu do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="e67f5-232">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e67f5-233">Poniższy przykład kodu demonstruje reguły dostępu z dziedziczeniem i propagacją.</span><span class="sxs-lookup"><span data-stu-id="e67f5-233">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="e67f5-234">Przykład tworzy <xref:System.Security.AccessControl.RegistrySecurity> obiekt, a następnie tworzy i dodaje dwie reguły, które <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> mają flagę.</span><span class="sxs-lookup"><span data-stu-id="e67f5-234">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, and then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="e67f5-235">Pierwsza reguła nie ma flag propagacji, a drugi ma <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> i. <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="e67f5-235">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="e67f5-236">Program wyświetla reguły w <xref:System.Security.AccessControl.RegistrySecurity> obiekcie, a następnie <xref:System.Security.AccessControl.RegistrySecurity> używa obiektu do utworzenia podklucza.</span><span class="sxs-lookup"><span data-stu-id="e67f5-236">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="e67f5-237">Program tworzy podrzędny podklucz i podklucz grandchild, a następnie wyświetla reguły dla każdego podklucza.</span><span class="sxs-lookup"><span data-stu-id="e67f5-237">The program creates a child subkey and a grandchild subkey, and then displays the rules for each subkey.</span></span> <span data-ttu-id="e67f5-238">Na koniec program usuwa klucze testowe.</span><span class="sxs-lookup"><span data-stu-id="e67f5-238">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67f5-239"><paramref name="registryRights" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-239"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="e67f5-240">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-240">-or-</span></span> 
 <span data-ttu-id="e67f5-241"><paramref name="type" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-241"><paramref name="type" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="e67f5-242">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-242">-or-</span></span> 
 <span data-ttu-id="e67f5-243"><paramref name="inheritanceFlags" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-243"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="e67f5-244">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-244">-or-</span></span> 
 <span data-ttu-id="e67f5-245"><paramref name="propagationFlags" />określa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="e67f5-245"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67f5-246"><paramref name="eventRights" />ma wartość zero.</span><span class="sxs-lookup"><span data-stu-id="e67f5-246"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67f5-247"><paramref name="identity" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e67f5-247"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e67f5-248">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-248">-or-</span></span> 
 <span data-ttu-id="e67f5-249"><paramref name="identity" />jest ciągiem o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="e67f5-249"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="e67f5-250">—lub—</span><span class="sxs-lookup"><span data-stu-id="e67f5-250">-or-</span></span> 
 <span data-ttu-id="e67f5-251"><paramref name="identity" />jest dłuższa niż 512 znaków.</span><span class="sxs-lookup"><span data-stu-id="e67f5-251"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e67f5-252">Pobiera prawa dozwolone lub odrzucane przez regułę dostępu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-252">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="e67f5-253">Bitowa kombinacja <see cref="T:System.Security.AccessControl.RegistryRights" /> wartości wskazujących prawa dozwolone lub odrzucane przez regułę dostępu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-253">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67f5-254"><xref:System.Security.AccessControl.RegistryAccessRule>obiekty są niezmienne.</span><span class="sxs-lookup"><span data-stu-id="e67f5-254"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="e67f5-255">Można utworzyć nową regułę dostępu reprezentującą innego użytkownika, inne prawa lub inną <xref:System.Security.AccessControl.AccessControlType>, ale nie można modyfikować istniejącej reguły dostępu.</span><span class="sxs-lookup"><span data-stu-id="e67f5-255">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
