<Type Name="CommonAcl" FullName="System.Security.AccessControl.CommonAcl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fdc532164d2f3c6e1dc7a8fe38e8b3f3cb1c1fe" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69086449" /></Metadata><TypeSignature Language="C#" Value="public abstract class CommonAcl : System.Security.AccessControl.GenericAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonAcl extends System.Security.AccessControl.GenericAcl" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.CommonAcl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonAcl&#xA;Inherits GenericAcl" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonAcl abstract : System::Security::AccessControl::GenericAcl" />
  <TypeSignature Language="F#" Value="type CommonAcl = class&#xA;    inherit GenericAcl" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.GenericAcl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="67d12-101">Reprezentuje listę kontroli dostępu (ACL) i jest klasą bazową dla <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> klas i. <see cref="T:System.Security.AccessControl.SystemAcl" /></span><span class="sxs-lookup"><span data-stu-id="67d12-101">Represents an access control list (ACL) and is the base class for the <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> and <see cref="T:System.Security.AccessControl.SystemAcl" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="67d12-102">Niektóre kombinacje flag dziedziczenia i maski dostępu są bezużyteczne:</span><span class="sxs-lookup"><span data-stu-id="67d12-102">Certain combinations of inheritance and access mask flags are meaningless:</span></span>  
  
-   <span data-ttu-id="67d12-103">Wszystkie wpisy kontroli dostępu (ACE) z maską dostępu zero są usuwane.</span><span class="sxs-lookup"><span data-stu-id="67d12-103">Any access control entry (ACE) with a zero-access mask is removed.</span></span>  
  
-   <span data-ttu-id="67d12-104">Tylko dziedziczenie ACE wewnątrz list ACL obiektów jest usuwane.</span><span class="sxs-lookup"><span data-stu-id="67d12-104">Inherit-only ACEs inside object ACLs are removed.</span></span>  
  
-   <span data-ttu-id="67d12-105"><xref:System.Security.AccessControl.PropagationFlags.InheritOnly>, <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>, i<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flagi dla wszystkich ACE na listach ACL obiektów liścia są czyszczone.</span><span class="sxs-lookup"><span data-stu-id="67d12-105"><xref:System.Security.AccessControl.PropagationFlags.InheritOnly>, <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>, and <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flags on all ACEs in leaf object ACLs are cleared.</span></span>  
  
-   <span data-ttu-id="67d12-106">Asy, które mają <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> flagę w nieobecności <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flagi or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> , nie są bez znaczenia; są usuwane.</span><span class="sxs-lookup"><span data-stu-id="67d12-106">ACEs that have an <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag are meaningless; they are removed.</span></span>  
  
-   <span data-ttu-id="67d12-107">Flaga w nieobecności <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flagi or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> może zostać usunięta. <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit></span><span class="sxs-lookup"><span data-stu-id="67d12-107">The <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag can be removed.</span></span>  
  
-   <span data-ttu-id="67d12-108">Wpisy ACE, które <xref:System.Security.AccessControl.AuditFlags> mają <xref:System.Security.AccessControl.AuditFlags.Success> wartość lub <xref:System.Security.AccessControl.AuditFlags.Failure> na listach arbitralnej kontroli dostępu (DACL), są usuwane.</span><span class="sxs-lookup"><span data-stu-id="67d12-108">ACEs that have an <xref:System.Security.AccessControl.AuditFlags> value of <xref:System.Security.AccessControl.AuditFlags.Success> or <xref:System.Security.AccessControl.AuditFlags.Failure> in discretionary access control lists (DACLs) are removed.</span></span>  
  
-   <span data-ttu-id="67d12-109">Każdy wpis ACE inspekcji, który nie określa <xref:System.Security.AccessControl.AuditFlags.Success> lub <xref:System.Security.AccessControl.AuditFlags.Failure> zostaje usunięty.</span><span class="sxs-lookup"><span data-stu-id="67d12-109">Any audit ACE that does not specify either <xref:System.Security.AccessControl.AuditFlags.Success> or <xref:System.Security.AccessControl.AuditFlags.Failure> is removed.</span></span>  
  
-   <span data-ttu-id="67d12-110">W przypadku list DACL, SystemAudit i SystemAlarm ACE są usuwane.</span><span class="sxs-lookup"><span data-stu-id="67d12-110">On DACLs, SystemAudit and SystemAlarm ACEs are removed.</span></span>  
  
-   <span data-ttu-id="67d12-111">Na listach kontroli dostępu do systemu (SACL) AccessAllowed i AccessDenied są usuwane.</span><span class="sxs-lookup"><span data-stu-id="67d12-111">On system access control lists (SACLs), AccessAllowed and AccessDenied ACEs are removed.</span></span>  
  
 <span data-ttu-id="67d12-112">Porządek kanoniczny jest zachowywany zgodnie z następującym algorytmem:</span><span class="sxs-lookup"><span data-stu-id="67d12-112">Canonical order is maintained according to the following algorithm:</span></span>  
  
-   <span data-ttu-id="67d12-113">Jawne asy mają pierwszeństwo przed dziedziczonymi ACE; Ta reguła ma zastosowanie zarówno do list DACL, jak i SACL.</span><span class="sxs-lookup"><span data-stu-id="67d12-113">Explicit ACEs take precedence over inherited ACEs; this rule applies to both DACLs and SACLs.</span></span>  
  
-   <span data-ttu-id="67d12-114">Na listach DACL, wśród jawnych ACE, asy, które odmówią dostępu, mają pierwszeństwo przed asy zezwalające na dostęp.</span><span class="sxs-lookup"><span data-stu-id="67d12-114">In DACLs, among the explicit ACEs, ACEs that deny access take precedence over ACEs that allow access.</span></span> <span data-ttu-id="67d12-115">W przypadku list ACL obiektów katalogu, asy niezwiązane z obiektem są uzyskiwane przed asy obiektu.</span><span class="sxs-lookup"><span data-stu-id="67d12-115">For directory object ACLs, the nonobject ACEs come before object ACEs.</span></span>  
  
-   <span data-ttu-id="67d12-116">Wszystkie typowe asy mają pierwszeństwo przed nietypowymi wpisami ACE.</span><span class="sxs-lookup"><span data-stu-id="67d12-116">All common ACEs take precedence over noncommon ACEs.</span></span>  
  
-   <span data-ttu-id="67d12-117">Dziedziczone asy zachowują swoją względną kolejność po canonicity.</span><span class="sxs-lookup"><span data-stu-id="67d12-117">Inherited ACEs maintain their relative order after canonicity.</span></span>  
  
-   <span data-ttu-id="67d12-118">Nierozpoznane i niestandardowe asy są niedozwolone w listach DACL i SACL.</span><span class="sxs-lookup"><span data-stu-id="67d12-118">Unrecognized and custom ACEs are disallowed in both DACLs and SACLs.</span></span>  
  
-   <span data-ttu-id="67d12-119">W ramach zakresów ciągłych (jawny AccessDenied i AccessAllowed ACE dla list DACL, wszystkie jawne asy na SACL), asy są sortowane przy <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A> użyciu <xref:System.Security.Principal.SecurityIdentifier> metod obiektów skojarzonych z asy.</span><span class="sxs-lookup"><span data-stu-id="67d12-119">Within contiguous ranges (explicit AccessDenied and AccessAllowed ACEs on DACLs, all explicit ACEs on SACLs), the ACEs are sorted by using the <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A> methods of the <xref:System.Security.Principal.SecurityIdentifier> objects associated with the ACEs.</span></span>  
  
 <span data-ttu-id="67d12-120">Sąsiadujące asy są łączone, jeśli są odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="67d12-120">Adjacent ACEs are combined, if appropriate.</span></span>  <span data-ttu-id="67d12-121">Zmniejsza to rozmiar listy ACL bez wpływu na semantykę kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="67d12-121">This reduces the size of the ACL without affecting the access control semantics it grants.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BinaryLength">
      <MemberSignature Language="C#" Value="public override sealed int BinaryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BinaryLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.BinaryLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property BinaryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BinaryLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BinaryLength : int" Usage="System.Security.AccessControl.CommonAcl.BinaryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d12-122">Pobiera wyrażoną w bajtach długość binarnej reprezentacji bieżącego <see cref="T:System.Security.AccessControl.CommonAcl" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="67d12-122">Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span> <span data-ttu-id="67d12-123">Ta długość powinna być używana przed skierowaniem listy kontroli dostępu (ACL) do tablicy binarnej przy użyciu <see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="67d12-123">This length should be used before marshaling the access control list (ACL) into a binary array by using the <see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /> method.</span></span></summary>
        <value><span data-ttu-id="67d12-124">Długość (w bajtach) reprezentacji binarnej bieżącego <see cref="T:System.Security.AccessControl.CommonAcl" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="67d12-124">The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override sealed int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Security.AccessControl.CommonAcl.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d12-125">Pobiera liczbę wpisów kontroli dostępu (ACE) w bieżącym <see cref="T:System.Security.AccessControl.CommonAcl" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="67d12-125">Gets the number of access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></summary>
        <value><span data-ttu-id="67d12-126">Liczba ACE w bieżącym <see cref="T:System.Security.AccessControl.CommonAcl" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="67d12-126">The number of ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryForm">
      <MemberSignature Language="C#" Value="public override sealed void GetBinaryForm (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetBinaryForm(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub GetBinaryForm (binaryForm As Byte(), offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetBinaryForm(cli::array &lt;System::Byte&gt; ^ binaryForm, int offset);" />
      <MemberSignature Language="F#" Value="override this.GetBinaryForm : byte[] * int -&gt; unit" Usage="commonAcl.GetBinaryForm (binaryForm, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="binaryForm"><span data-ttu-id="67d12-127">Tablica bajtów, w której zawartość <see cref="T:System.Security.AccessControl.CommonAcl" /> jest organizowana.</span><span class="sxs-lookup"><span data-stu-id="67d12-127">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> is marshaled.</span></span></param>
        <param name="offset"><span data-ttu-id="67d12-128">Przesunięcie, od którego ma zostać rozpoczęte kierowanie.</span><span class="sxs-lookup"><span data-stu-id="67d12-128">The offset at which to start marshaling.</span></span></param>
        <summary><span data-ttu-id="67d12-129">Kierowanie zawartości <see cref="T:System.Security.AccessControl.CommonAcl" /> obiektu do określonej tablicy bajtów, rozpoczynając od określonego przesunięcia.</span><span class="sxs-lookup"><span data-stu-id="67d12-129">Marshals the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> object into the specified byte array beginning at the specified offset.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonical">
      <MemberSignature Language="C#" Value="public bool IsCanonical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanonical" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsCanonical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanonical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanonical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCanonical : bool" Usage="System.Security.AccessControl.CommonAcl.IsCanonical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d12-130">Pobiera wartość logiczną określającą, czy wpisy kontroli dostępu (ACE) w bieżącym <see cref="T:System.Security.AccessControl.CommonAcl" /> obiekcie są w kolejności kanonicznej.</span><span class="sxs-lookup"><span data-stu-id="67d12-130">Gets a Boolean value that specifies whether the access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order.</span></span></summary>
        <value><span data-ttu-id="67d12-131"><see langword="true" />Jeśli asy w bieżącym <see cref="T:System.Security.AccessControl.CommonAcl" /> obiekcie są w porządku kanonicznym; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="67d12-131"><see langword="true" /> if the ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainer">
      <MemberSignature Language="C#" Value="public bool IsContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContainer" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContainer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContainer : bool" Usage="System.Security.AccessControl.CommonAcl.IsContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d12-132">Określa, <see cref="T:System.Security.AccessControl.CommonAcl" /> czy obiekt jest kontenerem.</span><span class="sxs-lookup"><span data-stu-id="67d12-132">Sets whether the <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</span></span></summary>
        <value><span data-ttu-id="67d12-133"><see langword="true" />Jeśli bieżący <see cref="T:System.Security.AccessControl.CommonAcl" /> obiekt jest kontenerem.</span><span class="sxs-lookup"><span data-stu-id="67d12-133"><see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDS">
      <MemberSignature Language="C#" Value="public bool IsDS { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDS" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsDS" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDS As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDS { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDS : bool" Usage="System.Security.AccessControl.CommonAcl.IsDS" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d12-134">Określa, czy bieżący <see cref="T:System.Security.AccessControl.CommonAcl" /> obiekt jest listą kontroli dostępu (ACL) obiektu katalogu.</span><span class="sxs-lookup"><span data-stu-id="67d12-134">Sets whether the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object access control list (ACL).</span></span></summary>
        <value><span data-ttu-id="67d12-135"><see langword="true" />Jeśli bieżący <see cref="T:System.Security.AccessControl.CommonAcl" /> obiekt jest listą ACL obiektu katalogu.</span><span class="sxs-lookup"><span data-stu-id="67d12-135"><see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object ACL.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.GenericAce this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.GenericAce Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides NotOverridable Property Item(index As Integer) As GenericAce" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::GenericAce ^ default[int] { System::Security::AccessControl::GenericAce ^ get(int index); void set(int index, System::Security::AccessControl::GenericAce ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Security.AccessControl.GenericAce with get, set" Usage="System.Security.AccessControl.CommonAcl.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.GenericAce</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="67d12-136">Indeks (liczony od zera) <see cref="T:System.Security.AccessControl.CommonAce" /> do pobrania lub ustawienia.</span><span class="sxs-lookup"><span data-stu-id="67d12-136">The zero-based index of the <see cref="T:System.Security.AccessControl.CommonAce" /> to get or set.</span></span></param>
        <summary><span data-ttu-id="67d12-137">Pobiera lub ustawia wartość <see cref="T:System.Security.AccessControl.CommonAce" /> o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="67d12-137">Gets or sets the <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</span></span></summary>
        <value><span data-ttu-id="67d12-138"><see cref="T:System.Security.AccessControl.CommonAce" /> O określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="67d12-138">The <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public void Purge (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Purge(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Purge (sid As SecurityIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Purge(System::Security::Principal::SecurityIdentifier ^ sid);" />
      <MemberSignature Language="F#" Value="member this.Purge : System.Security.Principal.SecurityIdentifier -&gt; unit" Usage="commonAcl.Purge sid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sid"><span data-ttu-id="67d12-139">Obiekt <see cref="T:System.Security.Principal.SecurityIdentifier" /> , który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="67d12-139">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> object to check for.</span></span></param>
        <summary><span data-ttu-id="67d12-140">Usuwa wszystkie wpisy kontroli dostępu (ACE) zawarte w tym <see cref="T:System.Security.AccessControl.CommonAcl" /> obiekcie, które są skojarzone z określonym <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="67d12-140">Removes all access control entries (ACEs) contained by this <see cref="T:System.Security.AccessControl.CommonAcl" /> object that are associated with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInheritedAces">
      <MemberSignature Language="C#" Value="public void RemoveInheritedAces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveInheritedAces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveInheritedAces ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveInheritedAces();" />
      <MemberSignature Language="F#" Value="member this.RemoveInheritedAces : unit -&gt; unit" Usage="commonAcl.RemoveInheritedAces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67d12-141">Usuwa wszystkie Odziedziczone wpisy kontroli dostępu (ACE) z tego <see cref="T:System.Security.AccessControl.CommonAcl" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="67d12-141">Removes all inherited access control entries (ACEs) from this <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Revision">
      <MemberSignature Language="C#" Value="public override sealed byte Revision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Revision" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Revision" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Revision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Revision { System::Byte get(); };" />
      <MemberSignature Language="F#" Value="member this.Revision : byte" Usage="System.Security.AccessControl.CommonAcl.Revision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d12-142">Pobiera poziom <see cref="T:System.Security.AccessControl.CommonAcl" />poprawki.</span><span class="sxs-lookup"><span data-stu-id="67d12-142">Gets the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</span></span></summary>
        <value><span data-ttu-id="67d12-143">Wartość typu Byte, która określa poziom <see cref="T:System.Security.AccessControl.CommonAcl" />poprawki.</span><span class="sxs-lookup"><span data-stu-id="67d12-143">A byte value that specifies the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
