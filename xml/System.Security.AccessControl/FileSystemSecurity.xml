<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c89bd64598a594070a1f6eee4b8b6db98996a7e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69264803" /></Metadata><TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type FileSystemSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontrolę dostępu i zabezpieczenia inspekcji dla pliku lub katalogu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest klasą bazową <xref:System.Security.AccessControl.FileSecurity> dla klas i <xref:System.Security.AccessControl.DirectorySecurity>. <xref:System.Security.AccessControl.FileSystemSecurity>  Klasy te reprezentują wszystkie prawa dostępu do pliku lub katalogu systemowego i definiują sposób inspekcji prób dostępu.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa reprezentuje prawa dostępu i inspekcji jako zestaw reguł. Każda reguła dostępu jest reprezentowana przez <xref:System.Security.AccessControl.FileSystemAccessRule> obiekt, podczas gdy Każda reguła inspekcji jest reprezentowana <xref:System.Security.AccessControl.FileSystemAuditRule> przez obiekt.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa jest abstrakcją podstawowego systemu zabezpieczeń plików systemu Microsoft Windows. W tym systemie każdy plik lub katalog ma poufną listę kontroli dostępu (DACL), która kontroluje dostęp do pliku lub katalogu oraz systemową listę kontroli dostępu (SACL), która określa inspekcje kontroli dostępu.  Klasy <xref:System.Security.AccessControl.FileSystemAccessRule> i<xref:System.Security.AccessControl.FileSystemAuditRule> są abstrakcją wpisów kontroli dostępu (ACE), które składają się na listy DACL i SACL.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa ukrywa wiele szczegółów list DACL i SACL; nie trzeba martwić się o kolejność wpisów ACE ani na DACL o wartości null.  
  
 Aby zachować nowe lub zmienione informacje o liście kontroli dostępu (ACL) do pliku, użyj <xref:System.IO.File.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje ACL do katalogu, użyj <xref:System.IO.Directory.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  
  
 Aby pobrać informacje o liście ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> metody <xref:System.IO.FileInfo.GetAccessControl%2A> lub.  Aby pobrać informacje o liście ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> metody <xref:System.IO.DirectoryInfo.GetAccessControl%2A> lub.  
  
   
  
## Examples  
 Poniższy przykład kodu używa klasy, <xref:System.Security.AccessControl.FileSecurity> aby dodać, a następnie usunąć wpis listy kontroli dostępu (ACL) z pliku.  Aby uruchomić ten przykład, należy podać prawidłowe konto użytkownika lub grupy.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Wyliczenie używane przez <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> klasę do reprezentowania praw dostępu.</summary>
        <value><see cref="T:System.Type" /> Obiekt reprezentujący Wyliczenie. <see cref="T:System.Security.AccessControl.FileSystemRights" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą od <xref:System.Security.AccessControl.FileSystemSecurity> klasy <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> przesłaniają Właściwość i zwracają typ, którego używają do reprezentowania praw dostępu. Podczas pracy z tablicami lub kolekcjami, które zawierają wiele typów obiektów zabezpieczeń, Użyj tej właściwości, aby określić poprawny typ wyliczenia do użycia z każdym obiektem zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="fileSystemSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><see cref="T:System.Security.Principal.IdentityReference" /> Obiekt, który reprezentuje konto użytkownika.</param>
        <param name="accessMask">Liczba całkowita, która określa typ dostępu.</param>
        <param name="isInherited"><see langword="true" />Jeśli reguła dostępu jest dziedziczona; w przeciwnym razie. <see langword="false" /></param>
        <param name="inheritanceFlags">Jedna z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, która określa sposób propagowania masek dostępu do obiektów podrzędnych.</param>
        <param name="propagationFlags">Jedna z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, która określa sposób propagowania wpisów Access Control (ACE) do obiektów podrzędnych.</param>
        <param name="type">Jedna z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości, które określają, czy dostęp jest dozwolony, czy odrzucany.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> klasy, które reprezentuje nową regułę kontroli dostępu dla określonego użytkownika, z określonymi prawami dostępu, kontrolą dostępu i flagami.</summary>
        <returns>Nowy <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje nową regułę kontroli dostępu dla określonego użytkownika, z określonymi prawami dostępu, kontrolą dostępu i flagami.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zalecanym sposobem tworzenia reguł kontroli dostępu jest użycie konstruktorów <xref:System.Security.AccessControl.FileSystemAccessRule> klasy.  
  
 Zwracany typ <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> metody jest <xref:System.Security.AccessControl.AccessRule>klasą bazową, ale zwracana wartość może być bezpiecznie rzutowana na klasę pochodną.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametry <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />lub określająnieprawidłowąwartość.<paramref name="type" /></exception>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="identityReference" />  
  
—lub— 
<paramref name="accessMask" /> Parametr ma wartość zero.</exception>
        <exception cref="T:System.ArgumentException">Parametr nie jest typem <see cref="T:System.Security.Principal.SecurityIdentifier" />ani typu, takiego jak <see cref="T:System.Security.Principal.NTAccount" /> , który można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />. <paramref name="identityReference" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Wyliczenie używane przez <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> klasę do reprezentowania reguł dostępu.</summary>
        <value><see cref="T:System.Type" /> Obiekt reprezentujący klasę. <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą od <xref:System.Security.AccessControl.FileSystemSecurity> klasy <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> przesłaniają Właściwość i zwracają typ używany do reprezentowania reguł dostępu. Podczas pracy z tablicami lub kolekcjami, które zawierają wiele typów obiektów zabezpieczeń, Użyj tej właściwości, aby określić poprawny typ reguły dostępu do użycia z każdym obiektem zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> Obiekt reprezentujący uprawnienie do dodawania listy kontroli dostępu (ACL) do pliku lub katalogu.</param>
        <summary>Dodaje określone uprawnienie listy kontroli dostępu (ACL) do bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje nową regułę do listy reguł zawartych <xref:System.Security.AccessControl.FileSystemSecurity> w obiekcie. <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>  
  
 Jeśli lista kontroli dostępu (ACL) już istnieje dla określonej reguły, <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> metoda nadal doda regułę z jednym wyjątkiem <xref:System.Security.AccessControl.FileSystemAccessRule> : obiekt utworzony przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości wyliczenia zastępuje obiekt utworzony przy użyciu <xref:System.Security.AccessControl.AccessControlType.Allow> wartość wyliczenia.  
  
 Aby zachować nowe lub zmienione informacje ACL do pliku, użyj <xref:System.IO.File.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje ACL do katalogu, użyj <xref:System.IO.Directory.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  
  
 Aby pobrać informacje o liście ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> metody <xref:System.IO.FileInfo.GetAccessControl%2A> lub.  Aby pobrać informacje o liście ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> metody <xref:System.IO.DirectoryInfo.GetAccessControl%2A> lub.  
  
 Po dodaniu reguły dostępu bez ustawiania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flaga zostanie automatycznie dodana do reguły.  W przypadku usunięcia reguły później bez określenia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi flaga zostanie automatycznie usunięta.  
  
   
  
## Examples  
 Poniższy przykład kodu używa klasy, <xref:System.Security.AccessControl.FileSecurity> aby dodać, a następnie usunąć wpis listy kontroli dostępu (ACL) z pliku.  Aby uruchomić ten przykład, należy podać prawidłowe konto użytkownika lub grupy.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Obiekt, który reprezentuje regułę inspekcji do dodania do pliku lub katalogu.</param>
        <summary>Dodaje określoną regułę inspekcji do bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje nową regułę inspekcji do listy reguł zawartych <xref:System.Security.AccessControl.FileSystemSecurity> w obiekcie. <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A>  
  
 Jeśli reguła inspekcji już istnieje dla określonej reguły, <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metoda nadal będzie dodawać regułę.  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> aby dodać regułę inspekcji do pliku i <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> używa metody do usuwania reguły inspekcji z pliku.  Aby uruchomić ten przykład, należy podać prawidłowe konto użytkownika lub grupy.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="fileSystemSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><see cref="T:System.Security.Principal.IdentityReference" /> Obiekt, który reprezentuje konto użytkownika.</param>
        <param name="accessMask">Liczba całkowita, która określa typ dostępu.</param>
        <param name="isInherited"><see langword="true" />Jeśli reguła dostępu jest dziedziczona; w przeciwnym razie. <see langword="false" /></param>
        <param name="inheritanceFlags">Jedna z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, która określa sposób propagowania masek dostępu do obiektów podrzędnych.</param>
        <param name="propagationFlags">Jedna z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, która określa sposób propagowania wpisów Access Control (ACE) do obiektów podrzędnych.</param>
        <param name="flags">Jedna z <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości, która określa typ inspekcji do wykonania.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> klasy reprezentującej określoną regułę inspekcji dla określonego użytkownika.</summary>
        <returns>Nowy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt reprezentujący określoną regułę inspekcji dla określonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zalecanym sposobem tworzenia reguł inspekcji jest użycie konstruktorów <xref:System.Security.AccessControl.FileSystemAuditRule> klasy.  
  
 Zwracany typ <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> metody jest <xref:System.Security.AccessControl.AuditRule>klasą bazową, ale zwracana wartość może być bezpiecznie rzutowana na klasę pochodną.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwości <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />lub określająnieprawidłowąwartość.<paramref name="flags" /></exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identityReference" /> Właściwość jest<see langword="null" />.  
  
—lub— 
<paramref name="accessMask" /> Właściwość ma wartość zero.</exception>
        <exception cref="T:System.ArgumentException">Właściwość nie jest typu <see cref="T:System.Security.Principal.SecurityIdentifier" />, ani typu, takiego jak <see cref="T:System.Security.Principal.NTAccount" /> , który można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />. <paramref name="identityReference" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ, którego <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> Klasa używa do reprezentowania reguł inspekcji.</summary>
        <value><see cref="T:System.Type" /> Obiekt reprezentujący klasę. <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą od <xref:System.Security.AccessControl.FileSystemSecurity> klasy <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> przesłaniają Właściwość i zwracają typ używany do reprezentowania praw inspekcji. Podczas pracy z tablicami lub kolekcjami, które zawierają wiele typów obiektów zabezpieczeń, Użyj tej właściwości, aby określić poprawny typ reguły inspekcji do użycia z każdym obiektem zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; bool" Usage="fileSystemSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> Obiekt, który reprezentuje uprawnienie listy kontroli dostępu (ACL) do usunięcia z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie zgodne uprawnienia Zezwalaj lub Odmów listy kontroli dostępu (ACL) z bieżącego pliku lub katalogu.</summary>
        <returns><see langword="true" />w przypadku usunięcia reguły dostępu; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Deny> reguły dostępu lub wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Allow> reguły dostępu z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu. <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>  Można na przykład użyć tej metody, <xref:System.Security.AccessControl.AccessControlType.Deny> aby usunąć wszystkie reguły dostępu dla użytkownika przez <xref:System.Security.AccessControl.FileSystemAccessRule> przekazanie obiektu utworzonego <xref:System.Security.AccessControl.FileSystemRights.Read> przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, wartości i konta użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> Metoda usuwa wszystkie reguły Odmów, które <xref:System.Security.AccessControl.FileSystemRights.Read> określają wartość lub <xref:System.Security.AccessControl.FileSystemRights.Write> wartość.  
  
 Aby zachować nowe lub zmienione informacje o liście kontroli dostępu (ACL) do pliku, użyj <xref:System.IO.File.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje ACL do katalogu, użyj <xref:System.IO.Directory.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  
  
 Aby pobrać informacje o liście ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> metody <xref:System.IO.FileInfo.GetAccessControl%2A> lub.  Aby pobrać informacje o liście ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> metody <xref:System.IO.DirectoryInfo.GetAccessControl%2A> lub.  
  
 Po dodaniu reguły dostępu bez ustawiania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flaga zostanie automatycznie dodana do reguły.  W przypadku usunięcia reguły później bez określenia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi flaga zostanie automatycznie usunięta.  
  
   
  
## Examples  
 Poniższy przykład kodu używa klasy, <xref:System.Security.AccessControl.FileSecurity> aby dodać, a następnie usunąć wpis listy kontroli dostępu (ACL) z pliku.  Aby uruchomić ten przykład, należy podać prawidłowe konto użytkownika lub grupy.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> Obiekt, który określa użytkownika, którego uprawnienia listy kontroli dostępu (ACL) należy usunąć z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie uprawnienia listy kontroli dostępu (ACL) dla określonego użytkownika z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> Metoda usuwa wszystkie uprawnienia listy kontroli dostępu (ACL) dla określonego użytkownika.  Metoda ignoruje wszystkie wartości w <xref:System.Security.AccessControl.FileSystemAccessRule> obiekcie z wyjątkiem konta użytkownika.  
  
 Aby zachować nowe lub zmienione informacje ACL do pliku, użyj <xref:System.IO.File.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje ACL do katalogu, użyj <xref:System.IO.Directory.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  
  
 Aby pobrać informacje o liście ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> metody <xref:System.IO.FileInfo.GetAccessControl%2A> lub.  Aby pobrać informacje o liście ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> metody <xref:System.IO.DirectoryInfo.GetAccessControl%2A> lub.  
  
 Po dodaniu reguły dostępu bez ustawiania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flaga zostanie automatycznie dodana do reguły.  W przypadku usunięcia reguły później bez określenia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi flaga zostanie automatycznie usunięta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> Obiekt, który określa użytkownika, którego uprawnienia listy kontroli dostępu (ACL) należy usunąć z pliku lub katalogu.</param>
        <summary>Usuwa z bieżącego pliku lub katalogu uprawnienie do listy kontroli dostępu (ACL) lub Odmów na nie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa określoną <xref:System.Security.AccessControl.AccessControlType.Deny> regułę dostępu lub określoną zgodną <xref:System.Security.AccessControl.AccessControlType.Allow> regułę dostępu z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu. <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A>  Na przykład można użyć tej metody, <xref:System.Security.AccessControl.AccessControlType.Deny> aby usunąć określoną regułę dostępu dla użytkownika przez <xref:System.Security.AccessControl.FileSystemAccessRule> przekazanie obiektu utworzonego <xref:System.Security.AccessControl.FileSystemRights.Read> przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, wartości i konta użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> Metoda usunie tylko regułę Odmów, która <xref:System.Security.AccessControl.FileSystemRights.Read> określa wartość.  Nie usuwa żadnych reguł Odmów, które określają <xref:System.Security.AccessControl.FileSystemRights.Write> wartość.  
  
 Aby zachować nowe lub zmienione informacje o liście kontroli dostępu (ACL) do pliku, użyj <xref:System.IO.File.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje ACL do katalogu, użyj <xref:System.IO.Directory.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  
  
 Aby pobrać informacje o liście ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> metody <xref:System.IO.FileInfo.GetAccessControl%2A> lub.  Aby pobrać informacje o liście ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> metody <xref:System.IO.DirectoryInfo.GetAccessControl%2A> lub.  
  
 Po dodaniu reguły dostępu bez ustawiania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flaga zostanie automatycznie dodana do reguły.  W przypadku usunięcia reguły później bez określenia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi flaga zostanie automatycznie usunięta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; bool" Usage="fileSystemSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Obiekt, który reprezentuje regułę inspekcji do usunięcia z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie zgodne reguły inspekcji Zezwalaj lub Odmów z bieżącego pliku lub katalogu.</summary>
        <returns><see langword="true" />Jeśli reguła inspekcji została usunięta; przypadku<see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Deny> reguły inspekcji lub wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Allow> reguły inspekcji z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu. <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>  Na przykład można użyć tej metody, <xref:System.Security.AccessControl.AccessControlType.Deny> aby usunąć wszystkie reguły inspekcji dla użytkownika przez <xref:System.Security.AccessControl.FileSystemAuditRule> przekazanie obiektu utworzonego <xref:System.Security.AccessControl.AuditFlags.Failure> przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, wartości i konta użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> Metoda usuwa wszystkie reguły Odmów, które <xref:System.Security.AccessControl.AuditFlags.Failure> określają wartość lub <xref:System.Security.AccessControl.AuditFlags.Success> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> aby dodać regułę inspekcji do pliku i <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> używa metody do usuwania reguły inspekcji z pliku.  Aby uruchomić ten przykład, należy podać prawidłowe konto użytkownika lub grupy.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Obiekt, który określa użytkownika, którego reguły inspekcji należy usunąć z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie reguły inspekcji dla określonego użytkownika z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> Metoda usuwa wszystkie reguły inspekcji dla określonego użytkownika.  Ignoruje wszystkie wartości w <xref:System.Security.AccessControl.FileSystemAuditRule> obiekcie z wyjątkiem konta użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Obiekt, który reprezentuje regułę inspekcji do usunięcia z pliku lub katalogu.</param>
        <summary>Usuwa pojedynczą zgodną regułę inspekcji lub Odmów z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa określoną pasującą <xref:System.Security.AccessControl.AccessControlType.Deny> regułę inspekcji lub określoną zgodną <xref:System.Security.AccessControl.AccessControlType.Allow> regułę inspekcji z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu. <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A>  Na przykład można użyć tej metody, <xref:System.Security.AccessControl.AccessControlType.Deny> aby usunąć określoną regułę inspekcji dla użytkownika przez <xref:System.Security.AccessControl.FileSystemAuditRule> przekazanie obiektu utworzonego <xref:System.Security.AccessControl.AuditFlags.Failure> przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, wartości i konta użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> Metoda usunie tylko regułę Odmów, która <xref:System.Security.AccessControl.AuditFlags.Failure> określa wartość.  Nie usuwa żadnych reguł Odmów, które określają <xref:System.Security.AccessControl.AuditFlags.Success> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> Obiekt reprezentujący uprawnienie do dodawania listy kontroli dostępu (ACL) do pliku lub katalogu.</param>
        <summary>Dodaje określone uprawnienie listy kontroli dostępu (ACL) do bieżącego pliku lub katalogu i usuwa wszystkie zgodne uprawnienia listy ACL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje określoną regułę listy kontroli dostępu (ACL) lub zastępuje wszystkie identyczne reguły listy ACL, które pasują do `rule` parametru. <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A>  Na przykład, `rule` Jeśli parametr <xref:System.Security.AccessControl.FileSystemRights.Read> określa wartość, a <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> Metoda <xref:System.Security.AccessControl.FileSystemRights.Read> odnajdzie identyczną regułę listy ACL, która określa wartość, taka sama reguła zostanie nadpisana.  Jeśli metoda znajdzie identyczną regułę listy ACL, która <xref:System.Security.AccessControl.FileSystemRights.Write> określa wartość, identyczna reguła zostanie również nadpisywana. <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A>  
  
 Aby zachować nowe lub zmienione informacje ACL do pliku, użyj <xref:System.IO.File.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje ACL do katalogu, użyj <xref:System.IO.Directory.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  
  
 Aby pobrać informacje o liście ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> metody <xref:System.IO.FileInfo.GetAccessControl%2A> lub.  Aby pobrać informacje o liście ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> metody <xref:System.IO.DirectoryInfo.GetAccessControl%2A> lub.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> Obiekt, który reprezentuje uprawnienie listy kontroli dostępu (ACL) do ustawienia dla pliku lub katalogu.</param>
        <summary>Ustawia określone uprawnienie listy kontroli dostępu (ACL) dla bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje określoną regułę listy kontroli dostępu (ACL) lub zastępuje wszystkie identyczne reguły listy ACL, które pasują do <xref:System.Security.AccessControl.FileSystemRights> wartości `rule` parametru. <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A>  Na przykład, `rule` Jeśli parametr <xref:System.Security.AccessControl.FileSystemRights.Read> określa wartość, a <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> Metoda <xref:System.Security.AccessControl.FileSystemRights.Read> odnajdzie identyczną regułę listy ACL, która określa wartość, taka sama reguła zostanie nadpisana.  Jeśli metoda znajdzie identyczną regułę listy ACL, która <xref:System.Security.AccessControl.FileSystemRights.Write> określa wartość, identyczna reguła nie zostanie nadpisana. <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A>  
  
 Aby zachować nowe lub zmienione informacje ACL do pliku, użyj <xref:System.IO.File.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  Aby zachować nowe lub zmienione informacje ACL do katalogu, użyj <xref:System.IO.Directory.SetAccessControl%2A> metody lub. <xref:System.IO.FileInfo.SetAccessControl%2A>  
  
 Aby pobrać informacje o liście ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> metody <xref:System.IO.FileInfo.GetAccessControl%2A> lub.  Aby pobrać informacje o liście ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> metody <xref:System.IO.DirectoryInfo.GetAccessControl%2A> lub.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Obiekt, który reprezentuje regułę inspekcji do ustawienia dla pliku lub katalogu.</param>
        <summary>Ustawia określoną regułę inspekcji dla bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje określoną regułę inspekcji lub zastępuje wszystkie identyczne reguły inspekcji, które pasują do <xref:System.Security.AccessControl.FileSystemRights> wartości `rule` parametru. <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A>  Na przykład jeśli `rule` parametr <xref:System.Security.AccessControl.FileSystemRights.Read> określa wartość, a <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> Metoda <xref:System.Security.AccessControl.FileSystemRights.Read> odnajdzie identyczną regułę inspekcji, która określa wartość, identyczna reguła zostanie nadpisywana.  Jeśli metoda odnajdzie identyczną regułę inspekcji, która <xref:System.Security.AccessControl.FileSystemRights.Write> określa wartość, identyczna reguła nie zostanie zastępowana. <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="rule" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
