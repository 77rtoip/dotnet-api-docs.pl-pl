<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b9817902fd5597a9a14229e6d16ce6f632509b7" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39955318" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type FileSystemSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontroli dostępu i inspekcji zabezpieczeń dla pliku lub katalogu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa jest klasą bazową dla <xref:System.Security.AccessControl.FileSecurity> i <xref:System.Security.AccessControl.DirectorySecurity> klasy.  Te klasy reprezentujące wszystkie prawa dostępu do katalogu lub pliku systemowego i określić, jak są poddawane inspekcji prób dostępu.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa reprezentuje praw dostępu i inspekcji jako zestaw reguł. Każda reguła dostępu jest reprezentowany przez <xref:System.Security.AccessControl.FileSystemAccessRule> obiektu, gdy każda reguła inspekcji jest reprezentowany przez <xref:System.Security.AccessControl.FileSystemAuditRule> obiektu.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa jest klasą abstrakcyjną Microsoft Windows pliku system zabezpieczeń. W tym systemie każdego pliku lub katalogu ma listy kontroli dostępu (DACL), które kontrolują dostęp do pliku lub katalogu, a system listy kontroli dostępu (SACL), który określa próby kontroli dostępu, które są poddawane inspekcji.  <xref:System.Security.AccessControl.FileSystemAccessRule> i <xref:System.Security.AccessControl.FileSystemAuditRule> klasy są abstrakcje wpisów kontroli dostępu (ACE), wchodzące w skład listy DACL i SACL.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa ukrywa wiele szczegółów z listy DACL i SACL; nie trzeba się martwić o kolejność ACE lub DACL o wartości null.  
  
 Aby zachować informacje o listę kontroli dostępu (ACL) kontroli dostępu do nowych lub zmienionych w pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zostały zmienione informacje listy ACL do katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby pobrać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać informacje listy ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSecurity> klasy, aby dodać, a następnie usuń wpis listę kontroli dostępu (ACL) kontroli dostępu z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyliczenie, które <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> klasa używana do reprezentowania praw dostępu.</summary>
        <value>A <see cref="T:System.Type" /> obiekt reprezentujący <see cref="T:System.Security.AccessControl.FileSystemRights" /> wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które wynikają z <xref:System.Security.AccessControl.FileSystemSecurity> klasy zastąpienie <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> właściwość i zwracany typ używają do reprezentowania praw dostępu. Podczas pracy z tablicami lub kolekcje zawierające wiele typów obiektów zabezpieczeń, należy użyć tej właściwości można określić typu wyliczenia poprawne za pomocą każdego obiektu zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="fileSystemSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiekt, który reprezentuje konto użytkownika.</param>
        <param name="accessMask">Liczba całkowita, która określa typ dostępu.</param>
        <param name="isInherited">
          <see langword="true" /> Jeśli jest dziedziczone przez regułę dostępu; w przeciwnym razie <see langword="false" />.</param>
        <param name="inheritanceFlags">Jedną z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, które określa, jak Propagacja maski dostępu do obiektów podrzędnych.</param>
        <param name="propagationFlags">Jedną z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, które określa, jak wpisy kontroli dostępu (ACE) są propagowane do obiektów podrzędnych.</param>
        <param name="type">Jedną z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości, które określa, czy dostęp jest dozwolony lub zablokowany.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> klasę reprezentującą nowe reguły kontroli dostępu dla określonego użytkownika, za pomocą prawa dostępu określonego, access control i flagi.</summary>
        <returns>Nowy <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje nowe reguły kontroli dostępu dla określonego użytkownika, za pomocą prawa dostępu określonego, access control i flagi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zalecany sposób, aby utworzyć zasady kontroli dostępu jest użycie konstruktorów z <xref:System.Security.AccessControl.FileSystemAccessRule> klasy.  
  
 Zwracany typ <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> metody jest klasą bazową, <xref:System.Security.AccessControl.AccessRule>, ale zwracana wartość może być bezpiecznie umieszczona do klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, Lub <paramref name="type" /> parametry określono nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identityReference" /> Parametr <see langword="null" />.  - lub - <paramref name="accessMask" /> parametr ma wartość zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identityReference" /> Parametr nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" />, ani nie ma typu, takie jak <see cref="T:System.Security.Principal.NTAccount" /> , można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyliczenie, które <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> klasa używana do reprezentowania reguły dostępu.</summary>
        <value>A <see cref="T:System.Type" /> obiekt reprezentujący <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które wynikają z <xref:System.Security.AccessControl.FileSystemSecurity> klasy zastąpienie <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> właściwość i zwracany typ używają do reprezentowania reguły dostępu. Podczas pracy z tablicami lub kolekcje zawierające wiele typów obiektów zabezpieczeń, należy użyć tej właściwości można określić typu reguły prawidłowy dostęp do użycia z każdego obiektu zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu można dodać do pliku lub katalogu.</param>
        <summary>Dodaje uprawnienie listę kontroli dostępu (ACL) kontroli dostępu określony do bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> Metoda dodaje nową regułę listę reguł zawartych w <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  
  
 Jeśli dla określonej reguły listy kontroli dostępu (ACL) już istnieje <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> metoda będzie nadal dodawać reguły, z jednym wyjątkiem: <xref:System.Security.AccessControl.FileSystemAccessRule> obiekt utworzony za pomocą <xref:System.Security.AccessControl.AccessControlType.Deny> wartość wyliczenia zastępuje obiekt, który został utworzony przy użyciu <xref:System.Security.AccessControl.AccessControlType.Allow> wartość wyliczenia.  
  
 Aby zachować nowe lub zostały zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zostały zmienione informacje listy ACL do katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby pobrać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać informacje listy ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flaga zostanie on automatycznie dodany do reguły.  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi, Flaga zostaną automatycznie usunięte.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSecurity> klasy, aby dodać, a następnie usuń wpis listę kontroli dostępu (ACL) kontroli dostępu z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który reprezentuje regułę inspekcji, aby dodać do pliku lub katalogu.</param>
        <summary>Dodaje zasady inspekcji określony do bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> Metoda dodaje nową regułę inspekcji listę reguł zawartych w <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  
  
 Jeśli istnieje już reguła inspekcji dla określonej reguły <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metoda będzie nadal dodawać reguły.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metodę, aby dodać regułę inspekcji do pliku i używa <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metodę, aby usunąć regułę inspekcji z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="fileSystemSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiekt, który reprezentuje konto użytkownika.</param>
        <param name="accessMask">Liczba całkowita, która określa typ dostępu.</param>
        <param name="isInherited">
          <see langword="true" /> Jeśli jest dziedziczone przez regułę dostępu; w przeciwnym razie <see langword="false" />.</param>
        <param name="inheritanceFlags">Jedną z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, które określa, jak Propagacja maski dostępu do obiektów podrzędnych.</param>
        <param name="propagationFlags">Jedną z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, które określa, jak wpisy kontroli dostępu (ACE) są propagowane do obiektów podrzędnych.</param>
        <param name="flags">Jedną z <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości, które określa typ inspekcji w celu wykonania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Klasa reprezentująca reguła określonego inspekcji dla określonego użytkownika.</summary>
        <returns>Nowy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt reprezentujący reguła określonego inspekcji dla określonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zalecany sposób tworzenia zasad inspekcji jest użycie konstruktorów z <xref:System.Security.AccessControl.FileSystemAuditRule> klasy.  
  
 Zwracany typ <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> metody jest klasą bazową, <xref:System.Security.AccessControl.AuditRule>, ale zwracana wartość może być bezpiecznie umieszczona do klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, Lub <paramref name="flags" /> właściwości określono nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identityReference" /> Właściwość <see langword="null" />.  - lub - <paramref name="accessMask" /> właściwość ma wartość zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identityReference" /> Właściwość nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" />, ani nie ma typu, takie jak <see cref="T:System.Security.Principal.NTAccount" /> , można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> klasa używana do reprezentowania zasady inspekcji.</summary>
        <value>A <see cref="T:System.Type" /> obiekt reprezentujący <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które wynikają z <xref:System.Security.AccessControl.FileSystemSecurity> klasy zastąpienie <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> właściwość i zwracany typ używają do reprezentowania uprawnień inspekcji. Podczas pracy z tablicami lub kolekcje zawierające wiele typów obiektów zabezpieczeń, użyj tej właściwości, aby określić typ reguły poprawne inspekcji za pomocą każdego obiektu zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; bool" Usage="fileSystemSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu można usunąć z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie pasujące zezwolenie lub zablokowanie kontroli dostępu (uprawnienia listy ACL) z bieżącego pliku lub katalogu.</summary>
        <returns>
          <see langword="true" /> Jeśli usunięto regułę dostępu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> Metoda usuwa wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Deny> reguły dostępu lub wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Allow> reguły dostępu z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  Na przykład możesz ta metoda służy do usunięcia wszystkich <xref:System.Security.AccessControl.AccessControlType.Deny> regułami dostępu do użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAccessRule> obiekt utworzony za pomocą <xref:System.Security.AccessControl.AccessControlType.Deny> wartość <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i konto użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> metoda usuwa żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.FileSystemRights.Read> wartość lub <xref:System.Security.AccessControl.FileSystemRights.Write> wartość.  
  
 Aby zachować informacje o listę kontroli dostępu (ACL) kontroli dostępu do nowych lub zmienionych w pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zostały zmienione informacje listy ACL do katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby pobrać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać informacje listy ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flaga zostanie on automatycznie dodany do reguły.  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi, Flaga zostaną automatycznie usunięte.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSecurity> klasy, aby dodać, a następnie usuń wpis listę kontroli dostępu (ACL) kontroli dostępu z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który określa użytkownika, do których dostęp kontrolować uprawnień listę kontroli dostępu (ACL) powinny zostać usunięte z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie uprawnień listę kontroli dostępu (ACL) kontroli dostępu dla określonego użytkownika z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> Metoda spowoduje usunięcie wszystkich uprawnień listę kontroli dostępu (ACL) kontroli dostępu dla określonego użytkownika.  Metoda ignoruje wszystkie wartości w <xref:System.Security.AccessControl.FileSystemAccessRule> obiektu, z wyjątkiem konta użytkownika.  
  
 Aby zachować nowe lub zostały zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zostały zmienione informacje listy ACL do katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby pobrać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać informacje listy ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flaga zostanie on automatycznie dodany do reguły.  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi, Flaga zostaną automatycznie usunięte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który określa użytkownika, do których dostęp kontrolować uprawnień listę kontroli dostępu (ACL) powinny zostać usunięte z pliku lub katalogu.</param>
        <summary>Usuwa pojedynczy dopasowania udzielić lub odmówić uprawnienia listę kontroli dostępu (ACL) kontroli dostępu z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> Metoda usuwa określony <xref:System.Security.AccessControl.AccessControlType.Deny> dostępu zasady lub określonego dopasowania <xref:System.Security.AccessControl.AccessControlType.Allow> reguły dostępu z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  Na przykład możesz ta metoda służy do usunięcia określonego <xref:System.Security.AccessControl.AccessControlType.Deny> reguły dostępu dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAccessRule> obiekt utworzony za pomocą <xref:System.Security.AccessControl.AccessControlType.Deny> wartość <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i konto użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> metoda usuwa regułę Odmów, która określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość.  Nie powoduje usunięcia żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.FileSystemRights.Write> wartość.  
  
 Aby zachować informacje o listę kontroli dostępu (ACL) kontroli dostępu do nowych lub zmienionych w pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zostały zmienione informacje listy ACL do katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby pobrać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać informacje listy ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flaga zostanie on automatycznie dodany do reguły.  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi, Flaga zostaną automatycznie usunięte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; bool" Usage="fileSystemSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który reprezentuje regułę inspekcji, aby usunąć z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie pasujące blokują lub zezwalają zasady inspekcji z bieżącego pliku lub katalogu.</summary>
        <returns>
          <see langword="true" /> Jeśli zasada danych inspekcji została usunięta; w przeciwnym razie <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> Metoda usuwa wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Deny> zasady inspekcji lub wszystkie zgodne <xref:System.Security.AccessControl.AccessControlType.Allow> inspekcji reguły z bieżącej <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  Na przykład możesz ta metoda służy do usunięcia wszystkich <xref:System.Security.AccessControl.AccessControlType.Deny> inspekcji zasad dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAuditRule> obiekt utworzony za pomocą <xref:System.Security.AccessControl.AccessControlType.Deny> wartość <xref:System.Security.AccessControl.AuditFlags.Failure> wartość i konto użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metoda usuwa żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.AuditFlags.Failure> wartość lub <xref:System.Security.AccessControl.AuditFlags.Success> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metodę, aby dodać regułę inspekcji do pliku i używa <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metodę, aby usunąć regułę inspekcji z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który określa użytkownika, na których zasady inspekcji, powinny zostać usunięte z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie zasady inspekcji dla określonego użytkownika z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> Metoda usuwa wszystkie zasady inspekcji dla określonego użytkownika.  Ignoruje wszystkie wartości w <xref:System.Security.AccessControl.FileSystemAuditRule> obiektu, z wyjątkiem konta użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który reprezentuje regułę inspekcji, aby usunąć z pliku lub katalogu.</param>
        <summary>Usuwa pojedynczy dopasowania blokują lub zezwalają zasady inspekcji z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> Metoda usuwa określony dopasowywania <xref:System.Security.AccessControl.AccessControlType.Deny> inspekcja, reguły lub określonego dopasowania <xref:System.Security.AccessControl.AccessControlType.Allow> zasady inspekcji z bieżącej <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  Na przykład możesz ta metoda służy do usunięcia określonego <xref:System.Security.AccessControl.AccessControlType.Deny> zasady inspekcji dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAuditRule> obiekt utworzony za pomocą <xref:System.Security.AccessControl.AccessControlType.Deny> wartość <xref:System.Security.AccessControl.AuditFlags.Failure> wartość i konto użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> metoda usuwa tylko reguła odmowy, która określa <xref:System.Security.AccessControl.AuditFlags.Failure> wartość.  Nie powoduje usunięcia żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.AuditFlags.Success> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu można dodać do pliku lub katalogu.</param>
        <summary>Dodaje uprawnienie listę kontroli dostępu (ACL) kontroli dostępu określony do bieżącego pliku lub katalogu i usuwa wszystkie dopasowania uprawnienia listy ACL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> Metoda dodaje reguły listę kontroli dostępu (ACL) kontroli dostępu określony lub zastępuje wszelkie identyczne reguły listy ACL, które odpowiadają `rule` parametru.  Na przykład jeśli `rule` parametr określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> metoda znajdzie identyczne reguły listy ACL, która określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość identyczne reguły zostaną zastąpione.  Jeśli <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> metoda znajdzie identyczne reguły listy ACL, która określa <xref:System.Security.AccessControl.FileSystemRights.Write> wartość taka sama zasada również zostaną zastąpione.  
  
 Aby zachować nowe lub zostały zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zostały zmienione informacje listy ACL do katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby pobrać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać informacje listy ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu do ustawienia dla pliku lub katalogu.</param>
        <summary>Ustawia uprawnienia listę kontroli dostępu (ACL) kontroli dostępu określony dla bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> Metoda dodaje reguły listę kontroli dostępu (ACL) kontroli dostępu określony lub zastępuje wszelkie identyczne reguły listy ACL, które odpowiadają <xref:System.Security.AccessControl.FileSystemRights> wartość `rule` parametru.  Na przykład jeśli `rule` parametr określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> metoda znajdzie identyczne reguły listy ACL, która określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość identyczne reguły zostaną zastąpione.  Jeśli <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> metoda znajdzie identyczne reguły listy ACL, która określa <xref:System.Security.AccessControl.FileSystemRights.Write> wartości, identyczne reguła nie zostanie zastąpiona.  
  
 Aby zachować nowe lub zostały zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zostały zmienione informacje listy ACL do katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby pobrać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać informacje listy ACL z katalogu, użyj <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który reprezentuje regułę inspekcji, aby ustawić dla pliku lub katalogu.</param>
        <summary>Ustawia zasady inspekcji określona dla bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> Metoda Dodaje regułę określonego inspekcji lub zastępuje żadnych reguł identyczne inspekcji, które pasują <xref:System.Security.AccessControl.FileSystemRights> wartość `rule` parametru.  Na przykład jeśli `rule` parametr określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> metoda znajdzie regułę identyczne inspekcji, która określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość identyczne reguły zostaną zastąpione.  Jeśli <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> metoda znajdzie regułę identyczne inspekcji, która określa <xref:System.Security.AccessControl.FileSystemRights.Write> wartości, identyczne reguła nie zostanie zastąpiona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>