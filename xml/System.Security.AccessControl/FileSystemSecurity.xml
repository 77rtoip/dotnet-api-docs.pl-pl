<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="896ccb15aae37e8f7c7cc287e6ae10e32cbb4e30" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36532761" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type FileSystemSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kontroli dostępu i inspekcji zabezpieczeń dla pliku lub katalogu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa jest klasą bazową dla <xref:System.Security.AccessControl.FileSecurity> i <xref:System.Security.AccessControl.DirectorySecurity> klasy.  Te klasy reprezentujące wszystkie prawa dostępu do plików systemowych lub katalogu i zdefiniuj, jak są poddawane inspekcji prób dostępu.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa reprezentuje prawa dostępu i inspekcji jako zestaw reguł. Każda reguła dostępu jest reprezentowana przez <xref:System.Security.AccessControl.FileSystemAccessRule> obiektu, gdy każda reguła inspekcji jest reprezentowana przez <xref:System.Security.AccessControl.FileSystemAuditRule> obiektu.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasy to Abstrakcja źródłowy system Microsoft Windows plik zabezpieczeń. W tym systemie każdego pliku lub katalogu ma listy kontroli dostępu (DACL), która kontroluje dostęp do pliku lub katalogu, a system listę kontroli dostępu (SACL), który określa próby kontroli dostępu, które są poddawane inspekcji.  <xref:System.Security.AccessControl.FileSystemAccessRule> i <xref:System.Security.AccessControl.FileSystemAuditRule> abstrakcje wpisów kontroli dostępu (ACE), które obejmują listy DACL i SACL występują następujące klasy.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> Klasa ukrywa wiele elementów listy DACL i SACL; nie trzeba martwić ACE porządkowanie lub DACL wartości null.  
  
 Aby zachować informacje o listę kontroli dostępu (ACL) kontroli dostępu do nowych lub zmienionych w pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSecurity> klasę, aby dodać, a następnie usuń listę kontroli dostępu (ACL) wpisu kontroli dostępu z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyliczenie, który <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> klasa używana do reprezentowania praw dostępu.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.Security.AccessControl.FileSystemRights" /> wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą z <xref:System.Security.AccessControl.FileSystemSecurity> klasy zastąpienie <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> właściwości i zwracany typ przejdą do reprezentowania praw dostępu. Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu wyliczenia poprawne korzystać z każdego obiektu zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="fileSystemSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiekt, który reprezentuje konto użytkownika.</param>
        <param name="accessMask">Liczba całkowita, która określa typ dostępu.</param>
        <param name="isInherited">
          <see langword="true" /> Jeśli reguła dostępu jest dziedziczona; w przeciwnym razie <see langword="false" />.</param>
        <param name="inheritanceFlags">Jeden z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, które określa, jak Propagacja maski dostępu do obiektów podrzędnych.</param>
        <param name="propagationFlags">Jeden z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, które określa sposób wpisów kontroli dostępu (ACE) są propagowane do obiektów podrzędnych.</param>
        <param name="type">Jeden z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości, które określa, czy dostęp jest dozwolony lub zabroniony.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> klasę reprezentującą nowe reguły kontroli dostępu dla określonego użytkownika z określonego uprawnienia kontroli dostępu i flagi.</summary>
        <returns>Nowy <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje nową regułę kontroli dostępu dla określonego użytkownika z określonego uprawnienia kontroli dostępu i flagi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zalecanym sposobem tworzenia zasad kontroli dostępu jest użycie konstruktorów <xref:System.Security.AccessControl.FileSystemAccessRule> klasy.  
  
 Zwracany typ <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> metody jest klasą bazową <xref:System.Security.AccessControl.AccessRule>, ale zwracana wartość mogą być rzutowane bezpiecznie do klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, Lub <paramref name="type" /> parametry określają nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identityReference" /> Parametr jest <see langword="null" />.  - lub - <paramref name="accessMask" /> parametru wynosi zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identityReference" /> Parametru nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" />, ani typu, takich jak <see cref="T:System.Security.Principal.NTAccount" /> którego można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyliczenie, który <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> klasa używana do reprezentowania zasad dostępu.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą z <xref:System.Security.AccessControl.FileSystemSecurity> klasy zastąpienie <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> właściwości i zwracany typ przejdą do reprezentowania zasad dostępu. Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu reguły dostępu do użycia z każdego obiektu zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu można dodać do pliku lub katalogu.</param>
        <summary>Dodaje uprawnienie listę kontroli dostępu (ACL) kontroli dostępu określonego bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> Metody dodaje nową regułę do listy reguł zawartych w <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  
  
 Jeśli dla określonej reguły listy kontroli dostępu (ACL) już istnieje <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> metody nadal spowoduje dodanie reguły, z jednym wyjątkiem: <xref:System.Security.AccessControl.FileSystemAccessRule> utworzone za pomocą obiektu <xref:System.Security.AccessControl.AccessControlType.Deny> wartość wyliczenia zastępuje obiekt, który został utworzony przy użyciu <xref:System.Security.AccessControl.AccessControlType.Allow> wartości wyliczenia.  
  
 Aby zachować nowe lub zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagę <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi zostanie automatycznie dodany do reguły.  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagę flagi zostaną automatycznie usunięte.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSecurity> klasę, aby dodać, a następnie usuń listę kontroli dostępu (ACL) wpisu kontroli dostępu z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który reprezentuje zasady inspekcji można dodać do pliku lub katalogu.</param>
        <summary>Reguła inspekcji określonej dodaje do bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> Metoda dodaje nową regułę inspekcji listę reguł zawartych w <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  
  
 Jeśli istnieje już reguła inspekcji dla określonej reguły <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metody nadal spowoduje dodanie reguły.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metodę, aby dodać regułę inspekcji do pliku i używa <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metodę, aby usunąć regułę inspekcji z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="fileSystemSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiekt, który reprezentuje konto użytkownika.</param>
        <param name="accessMask">Liczba całkowita, która określa typ dostępu.</param>
        <param name="isInherited">
          <see langword="true" /> Jeśli reguła dostępu jest dziedziczona; w przeciwnym razie <see langword="false" />.</param>
        <param name="inheritanceFlags">Jeden z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, które określa, jak Propagacja maski dostępu do obiektów podrzędnych.</param>
        <param name="propagationFlags">Jeden z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, które określa sposób wpisów kontroli dostępu (ACE) są propagowane do obiektów podrzędnych.</param>
        <param name="flags">Jeden z <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości, które określa rodzaj inspekcji do wykonania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Klasa reprezentująca reguła określonego inspekcji dla określonego użytkownika.</summary>
        <returns>Nowy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt reprezentujący reguła określonego inspekcji dla określonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zalecanym sposobem tworzenia zasady inspekcji jest użycie konstruktorów <xref:System.Security.AccessControl.FileSystemAuditRule> klasy.  
  
 Zwracany typ <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> metody jest klasą bazową <xref:System.Security.AccessControl.AuditRule>, ale zwracana wartość mogą być rzutowane bezpiecznie do klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, Lub <paramref name="flags" /> właściwości określają nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identityReference" /> Jest właściwość <see langword="null" />.  - lub - <paramref name="accessMask" /> właściwości jest równa zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identityReference" /> Właściwość nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" />, ani typu, takich jak <see cref="T:System.Security.Principal.NTAccount" /> którego można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ, który <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> klasa używana do reprezentowania zasad inspekcji.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą z <xref:System.Security.AccessControl.FileSystemSecurity> klasy zastąpienie <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> właściwości i zwracany typ przejdą do reprezentowania prawa inspekcji. Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu reguły poprawne inspekcji do użycia z każdego obiektu zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; bool" Usage="fileSystemSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu do usuwania pliku lub katalogu.</param>
        <summary>Usuwa wszystkie pasujące akceptować lub odrzucać kontroli dostępu (uprawnienia listy ACL) z bieżącego pliku lub katalogu.</summary>
        <returns>
          <see langword="true" /> Jeśli usunięto regułę dostępu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> Metoda usuwa wszystkie dopasowania <xref:System.Security.AccessControl.AccessControlType.Deny> reguły dostępu lub wszystkich operacjach dopasowania <xref:System.Security.AccessControl.AccessControlType.Allow> reguły dostępu z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  Na przykład umożliwia tej metody usunięcie wszystkich <xref:System.Security.AccessControl.AccessControlType.Deny> reguły dla użytkownika dostępu przez przekazanie <xref:System.Security.AccessControl.FileSystemAccessRule> obiektów utworzonych przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartość <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i konto użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> metoda usuwa żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.FileSystemRights.Read> wartość lub <xref:System.Security.AccessControl.FileSystemRights.Write> wartość.  
  
 Aby zachować informacje o listę kontroli dostępu (ACL) kontroli dostępu do nowych lub zmienionych w pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagę <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi zostanie automatycznie dodany do reguły.  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagę flagi zostaną automatycznie usunięte.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSecurity> klasę, aby dodać, a następnie usuń listę kontroli dostępu (ACL) wpisu kontroli dostępu z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który określa użytkownika, do których dostęp kontrolować listę kontroli dostępu (ACL) uprawnień powinna zostać usunięta z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie uprawnienia listę kontroli dostępu (ACL) kontroli dostępu dla określonego użytkownika z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> Metoda usuwa wszystkie uprawnienia listę kontroli dostępu (ACL) kontroli dostępu dla określonego użytkownika.  Metoda ignoruje wszystkie wartości w <xref:System.Security.AccessControl.FileSystemAccessRule> obiektu, z wyjątkiem konta użytkownika.  
  
 Aby zachować nowe lub zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagę <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi zostanie automatycznie dodany do reguły.  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagę flagi zostaną automatycznie usunięte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który określa użytkownika, do których dostęp kontrolować listę kontroli dostępu (ACL) uprawnień powinna zostać usunięta z pliku lub katalogu.</param>
        <summary>Usuwa jeden pasujący Zezwalaj lub Odmów uprawnień listę kontroli dostępu (ACL) kontroli dostępu z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> Metoda usuwa określoną <xref:System.Security.AccessControl.AccessControlType.Deny> dostępu zasady lub określony dopasowywania <xref:System.Security.AccessControl.AccessControlType.Allow> reguły dostępu z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  Na przykład możesz ta metoda służy do usunięcia określonej <xref:System.Security.AccessControl.AccessControlType.Deny> reguły dostępu dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAccessRule> utworzone za pomocą obiektu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i konto użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> metoda usuwa reguła odmowy, która określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość.  Nie powoduje usunięcia żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.FileSystemRights.Write> wartość.  
  
 Aby zachować informacje o listę kontroli dostępu (ACL) kontroli dostępu do nowych lub zmienionych w pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 Po dodaniu reguły dostępu bez ustawienia <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagę <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagi zostanie automatycznie dodany do reguły.  Jeśli później usunąć regułę bez określania <xref:System.Security.AccessControl.FileSystemRights.Synchronize> flagę flagi zostaną automatycznie usunięte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; bool" Usage="fileSystemSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który reprezentuje reguła inspekcji, aby usunąć z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie pasujące akceptować lub odrzucać zasady inspekcji z bieżącego pliku lub katalogu.</summary>
        <returns>
          <see langword="true" /> Jeśli zasady inspekcji został usunięty; w przeciwnym razie wartość <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> Metoda usuwa wszystkie dopasowania <xref:System.Security.AccessControl.AccessControlType.Deny> zasady inspekcji lub wszystkich operacjach dopasowania <xref:System.Security.AccessControl.AccessControlType.Allow> inspekcji reguły z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  Na przykład umożliwia tej metody usunięcie wszystkich <xref:System.Security.AccessControl.AccessControlType.Deny> inspekcji zasady dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAuditRule> utworzone za pomocą obiektu <xref:System.Security.AccessControl.AccessControlType.Deny> wartości, <xref:System.Security.AccessControl.AuditFlags.Failure> wartość i konto użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metoda usuwa żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.AuditFlags.Failure> wartość lub <xref:System.Security.AccessControl.AuditFlags.Success> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> metodę, aby dodać regułę inspekcji do pliku i używa <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> metodę, aby usunąć regułę inspekcji z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który określa użytkownika, którego zasady inspekcji powinna zostać usunięta z pliku lub katalogu.</param>
        <summary>Usuwa wszystkie zasady inspekcji dla określonego użytkownika z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> Metoda usuwa wszystkie zasady inspekcji dla określonego użytkownika.  Ignoruje wszystkie wartości w <xref:System.Security.AccessControl.FileSystemAuditRule> obiektu, z wyjątkiem konta użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który reprezentuje reguła inspekcji, aby usunąć z pliku lub katalogu.</param>
        <summary>Usuwa jeden pasujący akceptować lub odrzucać reguła inspekcji z bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> Metoda usuwa określony dopasowywania <xref:System.Security.AccessControl.AccessControlType.Deny> inspekcji reguły lub określony dopasowywania <xref:System.Security.AccessControl.AccessControlType.Allow> zasady inspekcji z bieżącego <xref:System.Security.AccessControl.FileSystemSecurity> obiektu.  Na przykład możesz ta metoda służy do usunięcia określonej <xref:System.Security.AccessControl.AccessControlType.Deny> zasady inspekcji dla użytkownika, przekazując <xref:System.Security.AccessControl.FileSystemAuditRule> obiektów utworzonych przy użyciu <xref:System.Security.AccessControl.AccessControlType.Deny> wartość <xref:System.Security.AccessControl.AuditFlags.Failure> wartość i konto użytkownika.  Gdy to zrobisz, <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> metoda usuwa tylko reguła odmowy, która określa <xref:System.Security.AccessControl.AuditFlags.Failure> wartość.  Nie powoduje usunięcia żadnych reguł odmowy, które określają <xref:System.Security.AccessControl.AuditFlags.Success> wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje uprawnień listę kontroli dostępu (ACL) kontroli dostępu można dodać do pliku lub katalogu.</param>
        <summary>Dodaje uprawnienie listę kontroli dostępu (ACL) kontroli dostępu określonego bieżącego pliku lub katalogu i usuwa wszystkie uprawnienia ACL dopasowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> Metody dodaje reguły listę kontroli dostępu (ACL) kontroli dostępu określonego lub spowoduje zastąpienie wszelkich identyczne reguły list kontroli dostępu, zgodne `rule` parametru.  Na przykład jeśli `rule` określa parametr <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> metoda znajdzie identyczne reguły listy ACL, który określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość identyczne zasady zostaną zastąpione.  Jeśli <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> metoda znajdzie identyczne reguły listy ACL, który określa <xref:System.Security.AccessControl.FileSystemRights.Write> wartość reguły identyczne również zostaną zastąpione.  
  
 Aby zachować nowe lub zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> obiekt, który reprezentuje uprawnienia listę kontroli dostępu (ACL) kontroli dostępu, aby ustawić dla pliku lub katalogu.</param>
        <summary>Ustawia uprawnienia dostępu do określonego formantu listę kontroli dostępu (ACL) dla bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> Metody dodaje reguły listę kontroli dostępu (ACL) kontroli dostępu określonego lub spowoduje zastąpienie wszelkich identyczne reguły list kontroli dostępu, zgodne <xref:System.Security.AccessControl.FileSystemRights> wartość `rule` parametru.  Na przykład jeśli `rule` określa parametr <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> metoda znajdzie identyczne reguły listy ACL, który określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość identyczne zasady zostaną zastąpione.  Jeśli <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> metoda znajdzie identyczne reguły listy ACL, który określa <xref:System.Security.AccessControl.FileSystemRights.Write> wartość identyczne reguła nie zostanie zastąpiona.  
  
 Aby zachować nowe lub zmienione informacje listy kontroli dostępu do pliku, należy użyć <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby zachować nowe lub zmienione informacje listy ACL w katalogu, należy użyć <xref:System.IO.Directory.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  
  
 Aby uzyskać informacje listy ACL z pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  Aby pobrać listy ACL informacje z katalogu, należy użyć <xref:System.IO.Directory.GetAccessControl%2A> lub <xref:System.IO.DirectoryInfo.GetAccessControl%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiekt, który reprezentuje zasady inspekcji można ustawić dla pliku lub katalogu.</param>
        <summary>Ustawia zasady inspekcji określony dla bieżącego pliku lub katalogu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> Metody dodaje regułę określonego inspekcji lub zastępuje żadnych reguł identyczne inspekcji, które pasują <xref:System.Security.AccessControl.FileSystemRights> wartość `rule` parametru.  Na przykład jeśli `rule` określa parametr <xref:System.Security.AccessControl.FileSystemRights.Read> wartość i <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> metoda znajdzie identyczne inspekcji regułę, która określa <xref:System.Security.AccessControl.FileSystemRights.Read> wartość identyczne zasady zostaną zastąpione.  Jeśli <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> metoda znajdzie identyczne inspekcji regułę, która określa <xref:System.Security.AccessControl.FileSystemRights.Write> wartość identyczne reguła nie zostanie zastąpiona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>