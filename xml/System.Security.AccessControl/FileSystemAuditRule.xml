<Type Name="FileSystemAuditRule" FullName="System.Security.AccessControl.FileSystemAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6a47e19e39dd8b751954071780cfd06760fa0f9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567508" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSystemAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystemAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSystemAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje abstrakcję wpisu kontroli dostępu (ACE), który definiuje zasady inspekcji dla pliku lub katalogu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemAuditRule> Klasa reprezentuje abstrakcję podstawowej wpisu kontroli dostępu (ACE) określająca konto użytkownika, typu dostępu, aby zapewnić (odczytu, zapisu i tak dalej) oraz czy ma być przeprowadzane inspekcji.  Ta klasa można również określić, jak zasady inspekcji są dziedziczone z a propagowane do obiektów.  
  
 Aby zezwolić na plik i katalog inspekcji w systemie Windows NT lub nowszego, należy włączyć zasady inspekcji zabezpieczeń dostępu na komputerze.  Domyślnie ta zasada ma ustawioną Brak inspekcji.  
  
 Aby włączyć zasady inspekcji dostępu do zabezpieczeń, wykonaj następujące czynności:  
  
1.  Otwórz **ustawienia zabezpieczeń lokalnych** przystawki programu Microsoft Management Console (MMC), znajdujące się w folderze Narzędzia administracyjne.  
  
2.  Rozwiń folder zasady lokalne i lewym przyciskiem myszy folder zasad inspekcji.  
  
3.  Kliknij dwukrotnie **inspekcji dostępu do obiektów** wpis w prawym okienku przystawki programu MMC, lub kliknij prawym przyciskiem myszy i wybierz polecenie Właściwości, aby wyświetlić **inspekcji właściwości dostępu do obiektu** okno dialogowe.  
  
4.  Wybierz **Powodzenie** lub **błąd** pola wyboru, aby rejestrować sukcesy i niepowodzenia.  
  
 Należy pamiętać, że reguła inspekcji na koncie użytkownika wymaga odpowiednią regułę dostępu do tego samego konta użytkownika.  
  
 Użyj <xref:System.Security.AccessControl.FileSystemAuditRule> klasę, aby utworzyć nową regułę inspekcji.  Można ją utrwalić przy użyciu tej reguły <xref:System.Security.AccessControl.FileSecurity> lub <xref:System.Security.AccessControl.DirectorySecurity> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSystemAuditRule> klasę, aby dodać, a następnie usuń zasady inspekcji z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiekt hermetyzujący odwołanie do konta użytkownika.</param>
        <param name="fileSystemRights">Jeden z <see cref="T:System.Security.AccessControl.FileSystemRights" /> wartości, które określa rodzaj operacji skojarzonej z regułą inspekcji.</param>
        <param name="flags">Jeden z <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości, które określa podczas obliczania przeprowadzać inspekcję.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> przy użyciu odwołanie do konta użytkownika, wartość, która określa rodzaj operacji skojarzonej z regułą inspekcji i wartość, która określa przeprowadzania inspekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć zasady inspekcji, czy można ją utrwalić przy użyciu <xref:System.Security.AccessControl.FileSecurity> lub <xref:System.Security.AccessControl.DirectorySecurity> klasy.  Reguły inspekcji określają, kiedy i jak wykonać akcji dla obiektów systemowych, takich jak pliki i foldery, są rejestrowane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> Parametr nie jest <see cref="T:System.Security.Principal.IdentityReference" /> obiektu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Przekazano nieprawidłowe wyliczenie <paramref name="flags" /> parametru.  
  
 —lub—  
  
 <see cref="F:System.Security.AccessControl.AuditFlags.None" /> Wartość została przekazana do <paramref name="flags" /> parametru.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAuditRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Nazwa konta użytkownika.</param>
        <param name="fileSystemRights">Jeden z <see cref="T:System.Security.AccessControl.FileSystemRights" /> wartości, które określa rodzaj operacji skojarzonej z regułą inspekcji.</param>
        <param name="flags">Jeden z <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości, które określa podczas obliczania przeprowadzać inspekcję.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> przy użyciu nazwy konta użytkownika, wartość, która określa rodzaj operacji skojarzonej z regułą inspekcji i wartość, która określa przeprowadzania inspekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć zasady inspekcji, czy można ją utrwalić przy użyciu <xref:System.Security.AccessControl.FileSecurity> lub <xref:System.Security.AccessControl.DirectorySecurity> klasy.  Reguły inspekcji określają, kiedy i jak wykonać akcji dla obiektów systemowych, takich jak pliki i foldery, są rejestrowane.  
  
 `identity` Parametr należy określić prawidłowe konto na bieżącym komputerze lub w domenie.  Ten ciąg ma następującą postać, gdzie `DOMAIN` jest nazwą prawidłową nazwę domeny lub komputera i `account` jest nazwą prawidłowe konto użytkownika domeny lub komputera: `DOMAIN\account`.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSystemAuditRule> klasę, aby dodać, a następnie usuń zasady inspekcji z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Przekazano nieprawidłowe wyliczenie <paramref name="flags" /> parametru.  
  
 —lub—  
  
 <see cref="F:System.Security.AccessControl.AuditFlags.None" /> Wartość została przekazana do <paramref name="flags" /> parametru.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiekt hermetyzujący odwołanie do konta użytkownika.</param>
        <param name="fileSystemRights">Jeden z <see cref="T:System.Security.AccessControl.FileSystemRights" /> wartości, które określa rodzaj operacji skojarzonej z regułą inspekcji.</param>
        <param name="inheritanceFlags">Jeden z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, które określają sposób maski dostępu są propagowane do obiektów podrzędnych.</param>
        <param name="propagationFlags">Jeden z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, które określają sposób wpisów kontroli dostępu (ACE) są propagowane do obiektów podrzędnych.</param>
        <param name="flags">Jeden z <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości, które określa podczas obliczania przeprowadzać inspekcję.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> przy użyciu nazwy odwołanie do konta użytkownika, wartość, która określa rodzaj operacji skojarzonej z regułą inspekcji, wartość, która określa, jak są dziedziczone praw, wartość, która określa, jak są prawa propagowany i wartość, która określa przeprowadzania inspekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć zasady inspekcji, czy można ją utrwalić przy użyciu <xref:System.Security.AccessControl.FileSecurity> lub <xref:System.Security.AccessControl.DirectorySecurity> klasy.  Reguły inspekcji określają, kiedy i jak wykonać akcji dla obiektów systemowych, takich jak pliki i foldery, są rejestrowane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> Parametr nie jest <see cref="T:System.Security.Principal.IdentityReference" /> obiektu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Przekazano nieprawidłowe wyliczenie <paramref name="flags" /> parametru.  
  
 —lub—  
  
 <see cref="F:System.Security.AccessControl.AuditFlags.None" /> Wartość została przekazana do <paramref name="flags" /> parametru.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAuditRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Nazwa konta użytkownika.</param>
        <param name="fileSystemRights">Jeden z <see cref="T:System.Security.AccessControl.FileSystemRights" /> wartości, które określa rodzaj operacji skojarzonej z regułą inspekcji.</param>
        <param name="inheritanceFlags">Jeden z <see cref="T:System.Security.AccessControl.InheritanceFlags" /> wartości, które określają sposób maski dostępu są propagowane do obiektów podrzędnych.</param>
        <param name="propagationFlags">Jeden z <see cref="T:System.Security.AccessControl.PropagationFlags" /> wartości, które określają sposób wpisów kontroli dostępu (ACE) są propagowane do obiektów podrzędnych.</param>
        <param name="flags">Jeden z <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości, które określa podczas obliczania przeprowadzać inspekcję.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> przy użyciu nazwy konta użytkownika, wartość, która określa rodzaj operacji skojarzonej z zasady inspekcji, wartość, która określa, jak są dziedziczone praw, wartość, która określa, jak są propagowane prawa, i wartość, która określa przeprowadzania inspekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć zasady inspekcji, czy można ją utrwalić przy użyciu <xref:System.Security.AccessControl.FileSecurity> lub <xref:System.Security.AccessControl.DirectorySecurity> klasy.  Reguły inspekcji określają, kiedy i jak wykonać akcji dla obiektów systemowych, takich jak pliki i foldery, są rejestrowane.  
  
 `identity` Parametr należy określić prawidłowe konto na bieżącym komputerze lub w domenie.  Ten ciąg ma następującą postać, gdzie `DOMAIN` jest nazwą prawidłową nazwę domeny lub komputera i `account` jest nazwą prawidłowe konto użytkownika domeny lub komputera: `DOMAIN\account`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.ArgumentOutOfRangeException">Przekazano nieprawidłowe wyliczenie <paramref name="flags" /> parametru.  
  
 —lub—  
  
 <see cref="F:System.Security.AccessControl.AuditFlags.None" /> Wartość została przekazana do <paramref name="flags" /> parametru.</permission>
      </Docs>
    </Member>
    <Member MemberName="FileSystemRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.FileSystemRights FileSystemRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemAuditRule.FileSystemRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSystemRights As FileSystemRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::FileSystemRights FileSystemRights { System::Security::AccessControl::FileSystemRights get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSystemRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Security.AccessControl.FileSystemRights" /> flagi skojarzone z bieżącym <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiektu.</summary>
        <value>
          <see cref="T:System.Security.AccessControl.FileSystemRights" /> Flagi skojarzone z bieżącym <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>