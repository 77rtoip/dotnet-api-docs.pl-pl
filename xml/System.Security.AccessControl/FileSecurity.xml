<Type Name="FileSecurity" FullName="System.Security.AccessControl.FileSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7b5f2ecee6b8b90ecb7cd1bdd80bc8d66d8c9ce" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36298651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kontroli dostępu i inspekcji zabezpieczeń dla pliku. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSecurity> Klasa określa prawa dostępu do plików systemu i jak są poddawane inspekcji prób dostępu.  Ta klasa reprezentuje prawa dostępu i inspekcji jako zestaw reguł. Każda reguła dostępu jest reprezentowana przez <xref:System.Security.AccessControl.FileSystemAccessRule> obiektu, gdy każda reguła inspekcji jest reprezentowana przez <xref:System.Security.AccessControl.FileSystemAuditRule> obiektu.  
  
 <xref:System.Security.AccessControl.FileSecurity> Klasy to Abstrakcja źródłowy system Microsoft Windows plik zabezpieczeń. W tym systemie każdy plik ma listy kontroli dostępu (DACL), która kontroluje dostęp do pliku, a system listę kontroli dostępu (SACL), który określa próby kontroli dostępu, które są poddawane inspekcji.  <xref:System.Security.AccessControl.FileSystemAccessRule> i <xref:System.Security.AccessControl.FileSystemAuditRule> abstrakcje wpisów kontroli dostępu (ACE), które obejmują listy DACL i SACL występują następujące klasy.  
  
 <xref:System.Security.AccessControl.FileSecurity> Klasa ukrywa wiele informacji poufnych list kontroli dostępu i SACL; nie trzeba martwić ACE porządkowanie lub DACL wartości null.  
  
 Użyj <xref:System.Security.AccessControl.FileSecurity> klasę, aby pobrać, dodać lub zmienić reguł dostępu, które reprezentują DACL i SACL pliku.  
  
 Aby zachować dostęp do nowych lub zmienionych lub inspekcji reguł do pliku, użyj <xref:System.IO.FileInfo.SetAccessControl%2A> metody. Aby pobrać dostępu lub inspekcji reguły z istniejącego pliku, użyj <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.AccessControl.FileSecurity> klasę, aby dodać, a następnie usuń listę kontroli dostępu (ACL) wpisu kontroli dostępu z pliku.  Należy podać prawidłowe konto użytkownika lub grupy do uruchomienia tego przykładu.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSecurity" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSecurity" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, jeśli chcesz utworzyć pustą <xref:System.Security.AccessControl.FileSecurity> obiekt, który nie jest oparty na istniejący plik.  Można wypełnić obiektu o informacje dotyczące kontroli dostępu i zastosować je do pliku.  
  
 Można dodawać dostępu i inspekcji reguł <xref:System.Security.AccessControl.FileSecurity> przy użyciu <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> metody. Można usunąć dostępu lub przy użyciu zasad inspekcji <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> metody.  
  
 Aby zachować dostęp do nowych lub zmienionych lub inspekcji reguł do pliku, użyj <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby pobrać dostępu lub inspekcji reguły z istniejącego pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Bieżący system operacyjny nie jest Microsoft Windows 2000 lub nowszym.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity(System::String ^ fileName, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileName">Lokalizacja pliku w celu utworzenia <see cref="T:System.Security.AccessControl.FileSecurity" /> obiekt z.</param>
        <param name="includeSections">Jeden z <see cref="T:System.Security.AccessControl.AccessControlSections" /> wartości, które określają typ dostępu kontrolować listę kontroli dostępu (ACL) informacje do pobrania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSecurity" /> klasy z określonego pliku przy użyciu określonej wartości <see cref="T:System.Security.AccessControl.AccessControlSections" /> wyliczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor pobiera informacje dotyczące kontroli dostępu do określonego pliku, a następnie tworzy <xref:System.Security.AccessControl.FileSecurity> obiekt hermetyzujący informacje.  Następnie można sprawdzić, dodać lub usunąć informacje dotyczące kontroli dostępu do określonego pliku.  
  
 Można dodawać dostępu i inspekcji reguł <xref:System.Security.AccessControl.FileSecurity> przy użyciu <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> metody. Można usunąć dostępu lub przy użyciu zasad inspekcji <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> metody.  
  
 Aby zachować dostęp do nowych lub zmienionych lub inspekcji reguł do pliku, użyj <xref:System.IO.File.SetAccessControl%2A> lub <xref:System.IO.FileInfo.SetAccessControl%2A> metody.  Aby pobrać dostępu lub inspekcji reguły z istniejącego pliku, użyj <xref:System.IO.File.GetAccessControl%2A> lub <xref:System.IO.FileInfo.GetAccessControl%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> Parametr jest ciągiem o zerowej długości, zawiera tylko biały znak lub zawiera jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Określona ścieżka jest nieprawidłowa (na przykład znajduje się na niemapowanym dysku).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Plik określony w <paramref name="fileName" /> nie znaleziono parametru.</exception>
        <exception cref="T:System.IO.IOException">Podczas otwierania pliku wystąpił błąd We/Wy.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="path" /> jest w nieprawidłowym formacie.</exception>
        <exception cref="T:System.Runtime.InteropServices.SEHException">
          <paramref name="fileName" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Bieżący system operacyjny nie jest Microsoft Windows 2000 lub nowszym.</exception>
        <exception cref="T:System.IO.PathTooLongException">Podana ścieżka, nazwa pliku lub obie przekraczają maksymalną długość zdefiniowaną przez system.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">Bieżące konto system nie ma uprawnień administracyjnych.</exception>
        <exception cref="T:System.SystemException">Nie można odnaleźć pliku.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="fileName" /> Parametr określony plik jest tylko do odczytu.  - lub - tej operacji nie jest obsługiwane na bieżącej platformie.  - lub - <paramref name="fileName" /> katalog określony parametr.  - lub - obiekt wywołujący nie ma wymaganych uprawnień.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">uprawnienia dostępu do pliku określonego przez <paramref name="name" /> parametru. Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" /> akcji zabezpieczeń: żądanie</permission>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" /> Konstruktor wymaga bieżącego konta do uprawnień administracyjnych. Aby utworzyć nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.FileSecurity" /> klasy dla określonego pliku przy użyciu konta, które nie ma uprawnień administratora, użyj <see cref="M:System.IO.FileStream.GetAccessControl" /> metody.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>