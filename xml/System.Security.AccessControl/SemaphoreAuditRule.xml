<Type Name="SemaphoreAuditRule" FullName="System.Security.AccessControl.SemaphoreAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d45419518bddc19c525be6f6a3ad4520b845f8e8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567151" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SemaphoreAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SemaphoreAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.SemaphoreAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SemaphoreAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje zestaw praw dostępu, które są poddawane inspekcji dla użytkownika lub grupy. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> Klasa jest jeden zestaw klas, które umożliwiają zarządzanie Windows kontrolę dostępu na semaforów nazwanego systemu .NET Framework. Omówienie tych klas i ich związek z podstawowej struktury kontroli dostępu do systemu Windows, temacie <xref:System.Security.AccessControl.SemaphoreSecurity>.  
  
> [!NOTE]
>  Kontrolę dostępu systemu Windows jest znaczący tylko w przypadku systemu o nazwie semaforów. Jeśli <xref:System.Threading.Semaphore> obiekt reprezentuje semafora lokalnego, kontroli dostępu nie ma znaczenia.  
  
 Aby uzyskać listę reguł inspekcji zastosowanym do semafora o nazwie, użyj <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> metody, aby uzyskać <xref:System.Security.AccessControl.SemaphoreSecurity> obiekt, a następnie użyć jego <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> metodę, aby uzyskać kolekcję <xref:System.Security.AccessControl.SemaphoreAuditRule> obiektów.  
  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> obiekty nie mapowanie jeden do jednego z wpisów kontroli dostępu w podstawowej poufnej listy kontroli dostępu (DACL). Gdy Pobierz zestaw wszystkich inspekcji zasady semafora, zestaw zawiera minimalną liczbę reguł obecnie wymaganych do wyrażenia wszystkich wpisów kontroli dostępu.  
  
> [!NOTE]
>  Podstawowej wpisów kontroli dostępu zmieniać, jak dodać i usunąć reguły. Informacje w regułach są scalane, jeśli to możliwe, aby utrzymać najmniejszą liczbę wpisów kontroli dostępu. W związku z tym odczytu bieżącą listę reguł, może nie wygląda tak samo jak lista wszystkich reguł, które zostały dodane.  
  
 Użyj <xref:System.Security.AccessControl.SemaphoreAuditRule> obiektów do Określ prawa dostępu, które są poddawane inspekcji dla użytkownika lub grupy. Aby zastosować regułę do semafora systemu o nazwie, użyj <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> metodę, aby pobrać <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu. Modyfikowanie <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu za pomocą jej metod dodać regułę, a następnie użyć <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> metody ponownie dołączyć obiektu zabezpieczeń.  
  
> [!IMPORTANT]
>  Zmiany wprowadzane do <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu nie wpływają na poziomów dostępu o nazwie semafora czasu wywołania <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> metodę przypisania do semafora nazwanego obiektu zmieniony zabezpieczeń.  
  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> obiekty są niezmienne. Zabezpieczenia semafora jest zmodyfikowany za pomocą metody <xref:System.Security.AccessControl.SemaphoreSecurity> klasy można dodać ani usunąć reguły; zgodnie z tym podstawowej wpisów kontroli dostępu są modyfikowane.  
  
> [!NOTE]
>  Zabezpieczenia obiektów synchronizacji nie jest obsługiwane dla systemu Windows 98 lub Windows Millennium Edition.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.SemaphoreRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As SemaphoreRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::SemaphoreRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Użytkownik lub grupa, którego będzie stosowana ta reguła. Musi być typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> lub typu, takich jak <see cref="T:System.Security.Principal.NTAccount" /> którego można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">Bitowe połączenie <see cref="T:System.Security.AccessControl.SemaphoreRights" /> wartości określających rodzaje dostęp do inspekcji.</param>
        <param name="flags">Bitowe połączenie <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości określająca, czy inspekcji sukces i niepowodzenie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> klasy Określanie użytkownika lub grupę do inspekcji, praw do inspekcji oraz czy inspekcji sukces i niepowodzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć <xref:System.Security.Principal.NTAccount> obiekt ciągu reprezentujący nazwę użytkownika lub grupy, użyj <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> konstruktora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> Określa nieprawidłową wartość.  
  
 —lub—  
  
 <paramref name="flags" /> Określa nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="eventRights" /> wynosi zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> ani typu, takich jak <see cref="T:System.Security.Principal.NTAccount" /> którego można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SemaphoreRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreRights SemaphoreRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.SemaphoreRights SemaphoreRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemaphoreRights As SemaphoreRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::SemaphoreRights SemaphoreRights { System::Security::AccessControl::SemaphoreRights get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prawa dostępu dotyczy reguła inspekcji.</summary>
        <value>Bitowe połączenie <see cref="T:System.Security.AccessControl.SemaphoreRights" /> wartości, które wskazuje prawa dotyczy reguła inspekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> obiekty są niezmienne. Można utworzyć nową regułę inspekcji reprezentujący inny użytkownik, inne prawa lub innej kombinacji <xref:System.Security.AccessControl.AuditFlags> wartości, ale nie można zmodyfikować istniejącą regułę inspekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>