<Type Name="MutexAuditRule" FullName="System.Security.AccessControl.MutexAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a277a87f6541206f3a11fd12aad4d4389e35326e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39756473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MutexAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type MutexAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje zestaw praw dostępu dla użytkownika lub grupy powinien być poddany inspekcji. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAuditRule> Klasa jest jeden zestaw klas .NET Framework zawiera Windows kontrolę dostępu na muteksy nazwane systemu zarządzania. Omówienie tych klas i ich związek z podstawowej struktury kontroli dostępu Windows, zobacz <xref:System.Security.AccessControl.MutexSecurity>.  
  
> [!NOTE]
>  Zabezpieczenia kontroli dostępu Windows ma znaczenie tylko w przypadku systemu o nazwie muteksy. Jeśli <xref:System.Threading.Mutex> obiekt reprezentuje lokalnego obiektu mutex, kontroli dostępu jest bez znaczenia.  
  
 Aby uzyskać listę reguł inspekcji obecnie stosowaną do nazwanego obiektu mutex, użyj <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> metodę, aby uzyskać <xref:System.Security.AccessControl.MutexSecurity> obiektu, a następnie użyć jej <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> metodę, aby uzyskać kolekcję <xref:System.Security.AccessControl.MutexAuditRule> obiektów.  
  
 <xref:System.Security.AccessControl.MutexAuditRule> obiekty nie są mapowane jeden do jednego z wpisów kontroli dostępu w podstawowej poufnej listy kontroli dostępu (DACL). Po otrzymaniu zestaw wszystkich inspekcji reguły dla elementu mutex, zestaw zawiera minimalną liczbę reguł obecnie wymaganych do wyrażenia wszystkich wpisów kontroli dostępu.  
  
> [!NOTE]
>  Zmienić podstawowej wpisów kontroli dostępu Zastosuj i Usuń reguły. Informacje w regułach są scalane, jeśli jest to możliwe, aby zachować najmniejszą liczbę wpisów kontroli dostępu. W związku z tym podczas odczytywania bieżącą listę reguł to może nie wyglądać dokładnie listę wszystkich reguł, które zostały dodane.  
  
 Użyj <xref:System.Security.AccessControl.MutexAuditRule> obiektów, aby określić prawa dostępu dla użytkownika lub grupy powinien być poddany inspekcji. Aby zastosować regułę do elementu mutex systemu o nazwie, należy użyć <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> metodę, aby uzyskać <xref:System.Security.AccessControl.MutexSecurity> obiektu. Modyfikowanie <xref:System.Security.AccessControl.MutexSecurity> obiektu za pomocą jej metod Dodaj regułę, a następnie użyć <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> metoda ponownie dołączyć obiektu zabezpieczeń.  
  
> [!IMPORTANT]
>  Zmiany wprowadzone do <xref:System.Security.AccessControl.MutexSecurity> obiektu nie wpływają na poziomy dostępu do nazwanego obiektu mutex dopóki nie zostanie wywołana <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> metodę, aby przypisać obiekt zmienionego zabezpieczeń do nazwanego obiektu mutex.  
  
 <xref:System.Security.AccessControl.MutexAuditRule> obiekty są niezmienne. Zabezpieczenia dla elementu mutex jest modyfikowana przy użyciu metody <xref:System.Security.AccessControl.MutexSecurity> reguł klasy, aby dodać lub usunąć; jak to podstawowy wpisów kontroli dostępu są modyfikowane.  
  
> [!NOTE]
>  Zabezpieczenia dla obiektów synchronizacji nie są obsługiwane dla Windows 98 lub Windows Millennium Edition.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.MutexAuditRule" Usage="new System.Security.AccessControl.MutexAuditRule (identity, eventRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Użytkownicy lub grupy, których dotyczy reguła. Musi być typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> lub typu, takie jak <see cref="T:System.Security.Principal.NTAccount" /> , można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">Bitowa kombinacja <see cref="T:System.Security.AccessControl.MutexRights" /> wartości określenie rodzaju dostępu do inspekcji.</param>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości określających, czy do inspekcji, Powodzenie, Niepowodzenie lub obu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.MutexAuditRule" /> klasy, określając użytkownika lub grupy do inspekcji i praw do inspekcji i czy do inspekcji, Powodzenie, Niepowodzenie lub obu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć <xref:System.Security.Principal.NTAccount> obiekt z ciągu reprezentującego nazwa użytkownika lub grupy, użyj <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> konstruktora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> Określa nieprawidłową wartość.  
  
—lub— 
 <paramref name="flags" /> Określa nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> jest <see langword="null" />.  
  
—lub— 
 <paramref name="eventRights" /> wynosi zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> ani nie ma typu, takie jak <see cref="T:System.Security.Principal.NTAccount" /> mogą być tłumaczone na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prawa dostępu, objęte regułą inspekcji.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Security.AccessControl.MutexRights" /> wartości wskazujących praw objęte regułą inspekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAuditRule> obiekty są niezmienne. Można utworzyć nową regułę inspekcji reprezentującym innego użytkownika, inne prawa lub inną kombinację <xref:System.Security.AccessControl.AuditFlags> flagi, ale nie można zmodyfikować istniejącą regułę inspekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>