<Type Name="MutexAuditRule" FullName="System.Security.AccessControl.MutexAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="065f59e1c200962e5e18d90fa37b7067d5477389" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69264709" /></Metadata><TypeSignature Language="C#" Value="public sealed class MutexAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type MutexAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje zestaw praw dostępu, które mają być poddane inspekcji dla użytkownika lub grupy. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAuditRule> Klasa jest jednym z zestawów klas, które .NET Framework zapewnia do zarządzania zabezpieczeniami kontroli dostępu systemu Windows dla nazwanych muteksów systemu. Aby zapoznać się z omówieniem tych klas i ich relacji z podstawową strukturą kontroli dostępu systemu Windows <xref:System.Security.AccessControl.MutexSecurity>, zobacz.  
  
> [!NOTE]
>  Zabezpieczenia kontroli dostępu systemu Windows są zrozumiałe tylko dla nazwanych muteksów systemu. <xref:System.Threading.Mutex> Jeśli obiekt reprezentuje lokalny element mutex, kontrola dostępu nie jest istotna.  
  
 Aby uzyskać listę reguł inspekcji aktualnie zastosowanych do nazwanego <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> obiektu mutex, użyj metody w celu <xref:System.Security.AccessControl.MutexSecurity> uzyskania obiektu, a następnie użyj jego <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> metody w celu uzyskania kolekcji <xref:System.Security.AccessControl.MutexAuditRule> obiektów.  
  
 <xref:System.Security.AccessControl.MutexAuditRule>obiekty nie mapują jeden do jednego z wpisami kontroli dostępu na poufnej liście kontroli dostępu (DACL). Po otrzymaniu zestawu wszystkich reguł inspekcji dla elementu mutex zestaw zawiera minimalną liczbę reguł, które są obecnie wymagane do wyznaczania wszystkich wpisów kontroli dostępu.  
  
> [!NOTE]
>  Powiązane wpisy kontroli dostępu zmieniają się w miarę stosowania i usuwania reguł. Informacje w regułach są scalane, jeśli jest to możliwe, w celu utrzymania najmniejszej liczby wpisów kontroli dostępu. W ten sposób, podczas odczytywania bieżącej listy reguł, może nie wyglądać dokładnie tak jak lista wszystkich dodanych reguł.  
  
 Użyj <xref:System.Security.AccessControl.MutexAuditRule> obiektów, aby określić prawa dostępu do inspekcji dla użytkownika lub grupy. Aby zastosować regułę do nazwanego obiektu mutex systemu, użyj <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> metody do <xref:System.Security.AccessControl.MutexSecurity> pobrania obiektu. Zmodyfikuj obiekt za pomocą jego metod, aby dodać regułę, a następnie <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> Użyj metody, aby ponownie dołączyć obiekt zabezpieczeń. <xref:System.Security.AccessControl.MutexSecurity>  
  
> [!IMPORTANT]
>  Zmiany wprowadzone w <xref:System.Security.AccessControl.MutexSecurity> obiekcie nie wpływają na poziomy dostępu wywołanego obiektu mutex, dopóki nie zostanie <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> wywołana metoda przypisania zmieniony obiekt zabezpieczeń do nazwanego obiektu mutex.  
  
 <xref:System.Security.AccessControl.MutexAuditRule>obiekty są niezmienne. Zabezpieczenia dla muteksu są modyfikowane przy użyciu metod <xref:System.Security.AccessControl.MutexSecurity> klasy w celu dodawania lub usuwania reguł. w takim przypadku odpowiednie wpisy kontroli dostępu są modyfikowane.  
  
> [!NOTE]
>  Zabezpieczenia dotyczące obiektów synchronizacji nie są obsługiwane w systemie Windows 98 lub Windows Millennium Edition.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.MutexAuditRule" Usage="new System.Security.AccessControl.MutexAuditRule (identity, eventRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Użytkownik lub Grupa, której dotyczy reguła. Musi być typu <see cref="T:System.Security.Principal.SecurityIdentifier" /> lub typu, takiego jak <see cref="T:System.Security.Principal.NTAccount" /> , który można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">Bitowa kombinacja <see cref="T:System.Security.AccessControl.MutexRights" /> wartości określających rodzaje dostępu do inspekcji.</param>
        <param name="flags">Bitowa kombinacja <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości określająca, czy należy przeprowadzać inspekcję sukcesów, niepowodzeń, czy obu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.AccessControl.MutexAuditRule" /> klasy, określając użytkownika lub grupę do inspekcji, uprawnienia do inspekcji oraz czy inspekcja sukcesów, niepowodzeń czy obu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć <xref:System.Security.Principal.NTAccount> obiekt na podstawie ciągu reprezentującego nazwę użytkownika lub grupy, <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> Użyj konstruktora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="eventRights" />określa nieprawidłową wartość.  
  
—lub— 
 <paramref name="flags" />określa nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="eventRights" />ma wartość zero.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identity" />nie jest typem <see cref="T:System.Security.Principal.SecurityIdentifier" /> ani typu, takiego jak <see cref="T:System.Security.Principal.NTAccount" /> , który można przetłumaczyć na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prawa dostępu, na które ma wpływ reguła inspekcji.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Security.AccessControl.MutexRights" /> wartości wskazujących prawa, na które ma wpływ reguła inspekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAuditRule>obiekty są niezmienne. Można utworzyć nową regułę inspekcji reprezentującą innego użytkownika, inne prawa lub inną kombinację <xref:System.Security.AccessControl.AuditFlags> flag, ale nie można modyfikować istniejącej reguły inspekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
