<Type Name="SemaphoreSecurity" FullName="System.Security.AccessControl.SemaphoreSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84c547789bd5907b052331368ba36af03e2fe08f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567727" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SemaphoreSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SemaphoreSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.SemaphoreSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SemaphoreSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreSecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="78480-101">Reprezentuje kontrolę dostępu systemu Windows o nazwie semafora.</span>
      <span class="sxs-lookup">
        <span data-stu-id="78480-101">Represents the Windows access control security for a named semaphore.</span>
      </span>
      <span data-ttu-id="78480-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="78480-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-103">A <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu określa prawa dostępu do semafora nazwanego systemu oraz określa, jak są poddawane inspekcji prób dostępu.</span><span class="sxs-lookup"><span data-stu-id="78480-103">A <xref:System.Security.AccessControl.SemaphoreSecurity> object specifies access rights for a named system semaphore, and also specifies how access attempts are audited.</span></span> <span data-ttu-id="78480-104">Prawa dostępu do semafora są wyrażane jako reguł, z dostępu reprezentowany przez <xref:System.Security.AccessControl.SemaphoreAccessRule> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-104">Access rights to the semaphore are expressed as rules, with each access rule represented by a <xref:System.Security.AccessControl.SemaphoreAccessRule> object.</span></span> <span data-ttu-id="78480-105">Każda reguła inspekcji jest reprezentowana przez <xref:System.Security.AccessControl.SemaphoreAuditRule> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-105">Each auditing rule is represented by a <xref:System.Security.AccessControl.SemaphoreAuditRule> object.</span></span>  
  
 <span data-ttu-id="78480-106">Odzwierciedla to podstawowy system zabezpieczeń systemu Windows, w którym każdy zabezpieczanego obiektu ma co najwyżej jeden poufnej listy kontroli dostępu (DACL), że kontroluje dostęp do bezpiecznego obiektu i co najwyżej jeden system listy kontroli dostępu (SACL) określająca, do których dostęp prób są poddawane inspekcji.</span><span class="sxs-lookup"><span data-stu-id="78480-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="78480-107">Listy DACL i SACL są uporządkowane listy wpisów kontroli dostępu (ACE), które określają dostępu i inspekcji dla użytkowników i grup.</span><span class="sxs-lookup"><span data-stu-id="78480-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="78480-108">A <xref:System.Security.AccessControl.SemaphoreAccessRule> lub <xref:System.Security.AccessControl.SemaphoreAuditRule> object może reprezentować więcej niż jednego wpisu kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="78480-108">A <xref:System.Security.AccessControl.SemaphoreAccessRule> or <xref:System.Security.AccessControl.SemaphoreAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-109">A <xref:System.Threading.Semaphore> obiektu może reprezentować semafora lokalnego lub semafora systemu o nazwie.</span><span class="sxs-lookup"><span data-stu-id="78480-109">A <xref:System.Threading.Semaphore> object can represent a local semaphore or a named system semaphore.</span></span> <span data-ttu-id="78480-110">Kontrolę dostępu systemu Windows jest znaczący tylko w przypadku systemu o nazwie semaforów.</span><span class="sxs-lookup"><span data-stu-id="78480-110">Windows access control security is meaningful only for named system semaphores.</span></span>  
  
 <span data-ttu-id="78480-111"><xref:System.Security.AccessControl.SemaphoreSecurity>, <xref:System.Security.AccessControl.SemaphoreAccessRule>, I <xref:System.Security.AccessControl.SemaphoreAuditRule> klasy Ukryj szczegóły implementacji wpisów ACE i listy kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="78480-111">The <xref:System.Security.AccessControl.SemaphoreSecurity>, <xref:System.Security.AccessControl.SemaphoreAccessRule>, and <xref:System.Security.AccessControl.SemaphoreAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="78480-112">Umożliwiają one Ignoruj siedemnaście różne typy ACE i złożoność poprawnie obsługi dziedziczenia i propagacji praw dostępu.</span><span class="sxs-lookup"><span data-stu-id="78480-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="78480-113">Te obiekty są również zaprojektowana tak, aby zapobiec następujące typowe błędy kontroli dostępu:</span><span class="sxs-lookup"><span data-stu-id="78480-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="78480-114">Tworzenie deskryptora zabezpieczeń z listy DACL wartości null.</span><span class="sxs-lookup"><span data-stu-id="78480-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="78480-115">Odwołanie o wartości null do listy DACL umożliwia dowolnym użytkownikom dodawanie reguły dostępu do obiektu, potencjalnie tworzenie ataku typu "odmowa usługi".</span><span class="sxs-lookup"><span data-stu-id="78480-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="78480-116">Nowy <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu zawsze rozpoczyna się od pusty listy DACL, która nie zezwala na dostęp dla wszystkich użytkowników.</span><span class="sxs-lookup"><span data-stu-id="78480-116">A new <xref:System.Security.AccessControl.SemaphoreSecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="78480-117">Naruszenie canonical kolejność ACE.</span><span class="sxs-lookup"><span data-stu-id="78480-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="78480-118">Lista ACE w listy DACL nie jest przechowywany w Porządek kanoniczny, użytkownicy mogą przypadkowo uzyskać dostęp do zabezpieczonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="78480-119">Na przykład prawa dostępu odmowy zawsze musi występować przed dozwolone uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="78480-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="78480-120"><xref:System.Security.AccessControl.SemaphoreSecurity> obiekty wewnętrznie Obsługa właściwej kolejności.</span><span class="sxs-lookup"><span data-stu-id="78480-120"><xref:System.Security.AccessControl.SemaphoreSecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="78480-121">Manipulowanie flagi deskryptora zabezpieczeń, które powinny być pod kontrolą Menedżera zasobów tylko.</span><span class="sxs-lookup"><span data-stu-id="78480-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="78480-122">Tworzenie nieprawidłową kombinację flag ACE.</span><span class="sxs-lookup"><span data-stu-id="78480-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="78480-123">Manipulowanie ACE dziedziczone.</span><span class="sxs-lookup"><span data-stu-id="78480-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="78480-124">Dziedziczenie i propagacji są obsługiwane przez Menedżera zasobów w odpowiedzi na zmiany wprowadzone do reguł dostępu i inspekcji.</span><span class="sxs-lookup"><span data-stu-id="78480-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="78480-125">Wstawianie znaczenia wpisy kontroli dostępu do listy kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="78480-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="78480-126">Tylko funkcje nie są obsługiwane przez obiekty zabezpieczeń .NET są niebezpieczne działania, które należy unikać przez większość deweloperów aplikacji, takie jak następujące:</span><span class="sxs-lookup"><span data-stu-id="78480-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="78480-127">Zadania niskiego poziomu, które są wykonywane zwykle przez Menedżera zasobów.</span><span class="sxs-lookup"><span data-stu-id="78480-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="78480-128">Dodawanie lub usuwanie wpisów kontroli dostępu w sposób, w którym nie obsługują canonical porządkowania.</span><span class="sxs-lookup"><span data-stu-id="78480-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="78480-129">Aby zmodyfikować Windows kontrolę dostępu dla nazwanego semafora, użyj <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> metodę, aby pobrać <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-129">To modify Windows access control security for a named semaphore, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="78480-130">Zmodyfikuj obiekt zabezpieczeń przez dodawanie i usuwanie reguł, a następnie użyć <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> metodę, aby dołączyć go ponownie.</span><span class="sxs-lookup"><span data-stu-id="78480-130">Modify the security object by adding and removing rules, and then use the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="78480-131">Zmiany wprowadzane do <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu nie wpływają na poziomów dostępu o nazwie semafora czasu wywołania <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> metodę przypisania do semafora nazwanego obiektu zmieniony zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="78480-131">Changes you make to a <xref:System.Security.AccessControl.SemaphoreSecurity> object do not affect the access levels of the named semaphore until you call the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named semaphore.</span></span>  
  
 <span data-ttu-id="78480-132">Aby skopiować kontrolę dostępu z jednego semafora do innego, należy użyć <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> metodę, aby pobrać <xref:System.Security.AccessControl.SemaphoreSecurity> obiekt reprezentujący reguł dostępu i inspekcji dla pierwszego semafora, a następnie użyj <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> metody lub konstruktora akceptującego <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu można przypisać te reguły do semafora drugiego.</span><span class="sxs-lookup"><span data-stu-id="78480-132">To copy access control security from one semaphore to another, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.SemaphoreSecurity> object representing the access and audit rules for the first semaphore, then use the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method, or a constructor that accepts a <xref:System.Security.AccessControl.SemaphoreSecurity> object, to assign those rules to the second semaphore.</span></span>  
  
 <span data-ttu-id="78480-133">Użytkownicy z inwestycji w definicji deskryptora zabezpieczeń w języku (SDDL) można używać <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> metodę, aby ustawić zasady dostępu o nazwie semafora i <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> metodę, aby uzyskać ciąg reprezentujący format SDDL reguły dostępu.</span><span class="sxs-lookup"><span data-stu-id="78480-133">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a named semaphore, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="78480-134">Nie jest to zalecane w przypadku nowych wdrożeń.</span><span class="sxs-lookup"><span data-stu-id="78480-134">This is not recommended for new development.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-135">Zabezpieczenia obiektów synchronizacji nie jest obsługiwane dla systemu Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="78480-135">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78480-136">Poniższy przykład kodu pokazuje oddzielenie <xref:System.Security.AccessControl.AccessControlType.Allow> reguł i <xref:System.Security.AccessControl.AccessControlType.Deny> reguł i zawiera kombinację praw w niezgodne reguły.</span><span class="sxs-lookup"><span data-stu-id="78480-136">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="78480-137">W przykładzie jest tworzony <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu, dodaje reguły zezwalania i odmowy różne uprawnienia dla bieżącego użytkownika i wyświetla wynikowy pary reguł.</span><span class="sxs-lookup"><span data-stu-id="78480-137">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="78480-138">W przykładzie następnie umożliwia nowe prawa dla bieżącego użytkownika oraz wyświetla wynik, pokazujący, że nowe uprawnienia zostaną scalone z istniejącym <xref:System.Security.AccessControl.AccessControlType.Allow> reguły.</span><span class="sxs-lookup"><span data-stu-id="78480-138">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-139">W tym przykładzie nie dołączy do obiektu zabezpieczeń <xref:System.Threading.Semaphore> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-139">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="78480-140">Przykłady, które załączyć obiekty zabezpieczeń można znaleźć w <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> i <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="78480-140">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.SemaphoreAccessRule" />
    <altmember cref="T:System.Security.AccessControl.SemaphoreAuditRule" />
    <altmember cref="T:System.Security.AccessControl.SemaphoreRights" />
    <altmember cref="M:System.Threading.Semaphore.GetAccessControl" />
    <altmember cref="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="78480-141">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-141">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78480-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> z domyślnymi wartościami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-143">Nowy <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu zawsze rozpoczyna się od listy pusty dostępu (DACL), która nie zezwala na dostęp dla wszystkich użytkowników.</span><span class="sxs-lookup"><span data-stu-id="78480-143">A new <xref:System.Security.AccessControl.SemaphoreSecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="78480-144">Ta klasa nie jest obsługiwana w systemie Windows 98 lub Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-144">This class is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSecurity (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSecurity(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="78480-145">Nazwa semafora systemowego, której reguły zabezpieczeń kontroli dostępu mają zostać pobrane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-145">The name of the system semaphore whose access control security rules are to be retrieved.</span>
          </span>
        </param>
        <param name="includeSections">
          <span data-ttu-id="78480-146">Kombinację <see cref="T:System.Security.AccessControl.AccessControlSections" /> flagi określające sekcje do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-146">A combination of <see cref="T:System.Security.AccessControl.AccessControlSections" /> flags specifying the sections to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-147">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> klasy z określonej sekcji zasady zabezpieczeń kontroli dostępu z semafora systemowego o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-147">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with the specified sections of the access control security rules from the system semaphore with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-148">Ten konstruktor umożliwia uzyskiwanie kontrolę dostępu do semafora systemu o nazwie bez tworzenia <xref:System.Threading.Semaphore> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-148">This constructor allows you to obtain the access control security for a named system semaphore without first creating a <xref:System.Threading.Semaphore> object.</span></span>  
  
 <span data-ttu-id="78480-149">Uwaga muszą być wykonywane podczas pracy z obiektami systemu o nazwie.</span><span class="sxs-lookup"><span data-stu-id="78480-149">Caution must be exercised when working with named system objects.</span></span> <span data-ttu-id="78480-150">Jeśli jest obiektem systemu o nazwie `name` nie jest semafora, kontroli dostępu zabezpieczeń może pobrać.</span><span class="sxs-lookup"><span data-stu-id="78480-150">If there is a system object named `name` that is not a semaphore, its control access security might be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="78480-151">Ta klasa nie jest obsługiwana w systemie Windows 98 lub Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-151">This class is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78480-152">Pobiera wyliczenie, który <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> klasa używana do reprezentowania praw dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-152">Gets the enumeration that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rights.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78480-153">A <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.Security.AccessControl.SemaphoreRights" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-153">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreRights" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-154">Klasy, które pochodzą z <xref:System.Security.AccessControl.ObjectSecurity> klasy zastąpienie <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> właściwości i zwracany typ przejdą do reprezentowania praw dostępu.</span><span class="sxs-lookup"><span data-stu-id="78480-154">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="78480-155">Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu wyliczenia poprawne korzystać z każdego obiektu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="78480-155">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="78480-156">
            <see cref="T:System.Security.Principal.IdentityReference" /> , Które identyfikują użytkownik lub grupa reguła dotyczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-156">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="78480-157">Bitowe połączenie <see cref="T:System.Security.AccessControl.SemaphoreRights" /> wartości określających prawa dostępu do dozwolonych lub zablokowanych, rzutowania na liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-157">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to allow or deny, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="78480-158">Znaczenia dla semaforów nazwanego, ponieważ mają one nie hierarchii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-158">Meaningless for named semaphores, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="78480-159">Znaczenia dla semaforów nazwanego, ponieważ mają one nie hierarchii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-159">Meaningless for named semaphores, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="78480-160">Znaczenia dla semaforów nazwanego, ponieważ mają one nie hierarchii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-160">Meaningless for named semaphores, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="78480-161">Jeden z <see cref="T:System.Security.AccessControl.AccessControlType" /> wartości określający, czy prawa zezwolono na dostęp lub odmowa dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-161">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-162">Tworzy nową regułę kontroli dostępu dla określonego użytkownika z określonego uprawnienia kontroli dostępu i flagi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-162">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78480-163">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> obiekt reprezentujący określonego uprawnienia dla określonego użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-163">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> object representing the specified rights for the specified user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-164">Zalecanym sposobem tworzenia zasad kontroli dostępu jest użycie konstruktorów <xref:System.Security.AccessControl.SemaphoreAccessRule> klasy.</span><span class="sxs-lookup"><span data-stu-id="78480-164">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.SemaphoreAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-165">Mimo że flagi dziedziczenia i propagacji nie mają znaczenia dla nazwanego semaforów, jest nadal możliwe, określ je, który nie jest to zalecane, ponieważ niepotrzebnie utrudnia to konserwacji zasad, na przykład przez zakłócać kombinację reguły w przeciwnym razie wyniesie zgodne.</span><span class="sxs-lookup"><span data-stu-id="78480-165">Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="78480-166">
            <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, lub <paramref name="type" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-166">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-167">
            <paramref name="identityReference" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-167">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="78480-168">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-168">-or-</span>
          </span>
          <span data-ttu-id="78480-169">
            <paramref name="accessMask" /> wynosi zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-169">
              <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="78480-170">
            <paramref name="identityReference" /> nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" />, ani typu, takich jak <see cref="T:System.Security.Principal.NTAccount" /> którego można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-170">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78480-171">Pobiera typ, który <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> klasa używana do reprezentowania zasad dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-171">Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78480-172">A <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-172">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-173">Klasy, które pochodzą z <xref:System.Security.AccessControl.ObjectSecurity> klasy zastąpienie <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> właściwości i zwracany typ przejdą do reprezentowania zasad dostępu.</span><span class="sxs-lookup"><span data-stu-id="78480-173">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="78480-174">Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu reguły dostępu do użycia z każdego obiektu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="78480-174">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-175">Reguła kontroli dostępu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-175">The access control rule to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-176">Wyszukuje Reguła dopasowywania, z którego można by scalić nowej reguły.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-176">Searches for a matching rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="78480-177">Jeśli żaden nie zostaną znalezione, dodaje nową regułę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-177">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-178"><xref:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule%2A> Metoda szuka reguły z tego samego użytkownika lub grupy i tym samym <xref:System.Security.AccessControl.AccessControlType> jako `rule`.</span><span class="sxs-lookup"><span data-stu-id="78480-178">The <xref:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="78480-179">Jeśli żaden nie zostaną znalezione, `rule` został dodany.</span><span class="sxs-lookup"><span data-stu-id="78480-179">If none are found, `rule` is added.</span></span> <span data-ttu-id="78480-180">Jeśli reguła dopasowywania zostanie znaleziony, prawa w `rule` są łączone z istniejącą regułą.</span><span class="sxs-lookup"><span data-stu-id="78480-180">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78480-181">Poniższy przykład kodu pokazuje oddzielenie <xref:System.Security.AccessControl.AccessControlType.Allow> reguł i <xref:System.Security.AccessControl.AccessControlType.Deny> reguł i zawiera kombinację praw w niezgodne reguły.</span><span class="sxs-lookup"><span data-stu-id="78480-181">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="78480-182">W przykładzie jest tworzony <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu, dodaje reguły zezwalania i odmowy różne uprawnienia dla bieżącego użytkownika i wyświetla wynikowy pary reguł.</span><span class="sxs-lookup"><span data-stu-id="78480-182">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="78480-183">W przykładzie następnie umożliwia nowe prawa dla bieżącego użytkownika oraz wyświetla wynik, pokazujący, że nowe uprawnienia zostaną scalone z istniejącym <xref:System.Security.AccessControl.AccessControlType.Allow> reguły.</span><span class="sxs-lookup"><span data-stu-id="78480-183">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-184">W tym przykładzie nie dołączy do obiektu zabezpieczeń <xref:System.Threading.Semaphore> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-184">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="78480-185">Przykłady, które załączyć obiekty zabezpieczeń można znaleźć w <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> i <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="78480-185">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-186">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-186">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-187">Reguła inspekcji, aby dodać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-187">The audit rule to add.</span>
          </span>
          <span data-ttu-id="78480-188">Użytkownik określony przez tę regułę określa wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-188">The user specified by this rule determines the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-189">Wyszukuje reguła inspekcji, z którego można by scalić nowej reguły.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-189">Searches for an audit rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="78480-190">Jeśli żaden nie zostaną znalezione, dodaje nową regułę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-190">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-191"><xref:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule%2A> Metody wyszukuje reguły z tego samego użytkownika lub grupy jako `rule`.</span><span class="sxs-lookup"><span data-stu-id="78480-191">The <xref:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="78480-192">Jeśli żaden nie zostaną znalezione, `rule` został dodany.</span><span class="sxs-lookup"><span data-stu-id="78480-192">If none are found, `rule` is added.</span></span> <span data-ttu-id="78480-193">Jeśli reguła dopasowywania zostanie znaleziony, flagi w `rule` są scalane w istniejącą regułę.</span><span class="sxs-lookup"><span data-stu-id="78480-193">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="78480-194">
            <see cref="T:System.Security.Principal.IdentityReference" /> , Które identyfikują użytkownik lub grupa reguła dotyczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-194">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="78480-195">Bitowe połączenie <see cref="T:System.Security.AccessControl.SemaphoreRights" /> wartości określających prawa dostępu do inspekcji, rzutowania na liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-195">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to audit, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="78480-196">Znaczenia dla uchwyty oczekiwania nazwanego, ponieważ mają one nie hierarchii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-196">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="78480-197">Znaczenia dla uchwyty oczekiwania nazwanego, ponieważ mają one nie hierarchii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-197">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="78480-198">Znaczenia dla uchwyty oczekiwania nazwanego, ponieważ mają one nie hierarchii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-198">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="78480-199">Bitowe połączenie <see cref="T:System.Security.AccessControl.AuditFlags" /> wartości, które określają, czy inspekcji pomyślnego dostępu i dostępu nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-199">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values that specify whether to audit successful access, failed access, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-200">Tworzy nową regułę inspekcji, określając użytkownika, którego dotyczy reguła, prawa dostępu do inspekcji i wyników, które wyzwala reguła inspekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-200">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78480-201">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> obiekt reprezentujący reguła określonego inspekcji dla określonego użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-201">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> object representing the specified audit rule for the specified user.</span>
          </span>
          <span data-ttu-id="78480-202">Klasa podstawowa jest zwracany typ metody <see cref="T:System.Security.AccessControl.AuditRule" />, ale wartość zwracaną mogą bezpiecznie rzutowane do klasy pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-202">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-203">Zalecanym sposobem tworzenia zasady inspekcji jest użycie konstruktorów <xref:System.Security.AccessControl.SemaphoreAuditRule> klasy.</span><span class="sxs-lookup"><span data-stu-id="78480-203">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.SemaphoreAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-204">Chociaż flagi dziedziczenia i propagacji nie mają znaczenia dla nazwanego semaforów, jest nadal możliwe je określić.</span><span class="sxs-lookup"><span data-stu-id="78480-204">Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them.</span></span> <span data-ttu-id="78480-205">Nie jest to zalecane, ponieważ niepotrzebnie utrudnia to konserwacji zasad, na przykład przez zakłócać kombinację reguł, które w przeciwnym razie będą zgodne.</span><span class="sxs-lookup"><span data-stu-id="78480-205">This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="78480-206">
            <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, lub <paramref name="flags" /> określa nieprawidłową wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-206">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-207">
            <paramref name="identityReference" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-207">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="78480-208">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-208">-or-</span>
          </span>
          <span data-ttu-id="78480-209">
            <paramref name="accessMask" /> wynosi zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-209">
              <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="78480-210">
            <paramref name="identityReference" /> nie jest ani typu <see cref="T:System.Security.Principal.SecurityIdentifier" />, ani typu, takich jak <see cref="T:System.Security.Principal.NTAccount" /> którego można przekonwertować na typ <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-210">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78480-211">Pobiera typ, który <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> klasa używana do reprezentowania zasad inspekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-211">Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent audit rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78480-212">A <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-212">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-213">Klasy, które pochodzą z <xref:System.Security.AccessControl.ObjectSecurity> klasy zastąpienie <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> właściwości i zwracany typ przejdą do reprezentowania prawa inspekcji.</span><span class="sxs-lookup"><span data-stu-id="78480-213">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="78480-214">Podczas pracy z tablicą lub kolekcje zawierające wiele typów obiektów zabezpieczeń, używają tej właściwości można określić typu reguły poprawne inspekcji do użycia z każdego obiektu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="78480-214">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As SemaphoreAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-215">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> użytkownik, który określa i <see cref="T:System.Security.AccessControl.AccessControlType" /> do wyszukiwania i zestaw dziedziczenia i propagacji flag, które pasujący do reguły, jeśli znaleziono, musi być zgodny z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-215">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="78480-216">Określa, że uprawnienia do usunięcia z niezgodne reguły, jeśli znaleziono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-216">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-217">Wyszukuje reguły kontroli dostępu z tego samego użytkownika i <see cref="T:System.Security.AccessControl.AccessControlType" /> (zezwalania lub odmowy) jako określonej reguły oraz zgodne dziedziczenia i flagi propagacji; jeśli taka reguła zostanie znaleziony, prawa zawarte w tej regule określonego dostępu są usuwane z go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-217">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78480-218">
            <see langword="true" /> Jeśli zostanie znaleziony zgodne reguły; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-218">
              <see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-219">Bieżący <xref:System.Security.AccessControl.SemaphoreSecurity> jest wyszukiwany regułę, która ma ten sam użytkownik i tym samym <xref:System.Security.AccessControl.AccessControlType> wartość jako `rule`.</span><span class="sxs-lookup"><span data-stu-id="78480-219">The current <xref:System.Security.AccessControl.SemaphoreSecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="78480-220">Jeśli takie reguła nie zostanie znaleziony, nie podjęto żadnej akcji i metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="78480-220">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="78480-221">W przypadku znalezienia pasujących reguł ich flagi dziedziczenia i zgodności są sprawdzane pod kątem zgodności z flag określonych we `rule`.</span><span class="sxs-lookup"><span data-stu-id="78480-221">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="78480-222">Jeśli zostanie znaleziony nie niezgodne reguły, nie podjęto żadnej akcji, a metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="78480-222">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="78480-223">Jeśli znaleziono reguły z flagami zgodne, prawa określone w `rule` są usuwane z niezgodne reguły, a metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="78480-223">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="78480-224">Jeśli `rule` określa prawa nie zawiera niezgodne reguły, nie podjęto żadnej akcji w odniesieniu do tych praw.</span><span class="sxs-lookup"><span data-stu-id="78480-224">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="78480-225">Jeśli wszystkie prawa są usuwane z niezgodne reguły, cały reguła jest usuwana z bieżącego <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-225">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="78480-226">Mimo że można określić flagi dziedziczenia i propagacji dla reguły dostępu do semafora, tworząc je za pomocą <xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A> metody, nie jest to zalecane.</span><span class="sxs-lookup"><span data-stu-id="78480-226">Although you can specify inheritance and propagation flags for semaphore access rules, by creating them with the <xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="78480-227">Dziedziczenie i propagacji mają znaczenia dla nazwanego semaforów, a konserwacji reguł dostępu umożliwiają bardziej skomplikowane.</span><span class="sxs-lookup"><span data-stu-id="78480-227">Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of access rules more complicated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78480-228">Poniższy przykład kodu pokazuje użycie <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> metodę, aby usunąć prawa z <xref:System.Security.AccessControl.AccessControlType.Allow> reguły w <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-228">The following code example demonstrates the use of the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> method to remove rights from an <xref:System.Security.AccessControl.AccessControlType.Allow> rule in a <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="78480-229">Przedstawiono również że inne prawa w `rule` są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="78480-229">It also shows that other rights in `rule` are ignored.</span></span>  
  
 <span data-ttu-id="78480-230">W przykładzie jest tworzony <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu i dodaje reguły zezwalania i odmowy różne uprawnienia dla bieżącego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="78480-230">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="78480-231">Prawa mogą zawierać <xref:System.Security.AccessControl.SemaphoreRights.Modify>, <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions>, i <xref:System.Security.AccessControl.SemaphoreRights.Synchronize>.</span><span class="sxs-lookup"><span data-stu-id="78480-231">The rights allowed include <xref:System.Security.AccessControl.SemaphoreRights.Modify>, <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions>, and <xref:System.Security.AccessControl.SemaphoreRights.Synchronize>.</span></span> <span data-ttu-id="78480-232">Przykład utworzy nową regułę dla bieżącego użytkownika, w tym <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> i <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> praw i korzysta z tej reguły z <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> metodę, aby usunąć <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> z <xref:System.Security.AccessControl.AccessControlType.Allow> reguły w <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-232">The example then creates a new rule for the current user, including <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> and <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> rights, and uses that rule with the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> method to remove <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> from the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="78480-233">Nadmiarowe <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> prawym przyciskiem myszy w `rule` jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="78480-233">The extraneous <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> right in `rule` is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-234">W tym przykładzie nie dołączy do obiektu zabezpieczeń <xref:System.Threading.Semaphore> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-234">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="78480-235">Przykłady, które załączyć obiekty zabezpieczeń można znaleźć w <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> i <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="78480-235">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-236">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-236">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-237">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> użytkownik, który określa i <see cref="T:System.Security.AccessControl.AccessControlType" /> do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-237">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span>
          </span>
          <span data-ttu-id="78480-238">Wszelkie prawa określone przez tę regułę są ignorowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-238">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-239">Wyszukuje wszystkie reguły kontroli z tego samego użytkownika dostępu i <see cref="T:System.Security.AccessControl.AccessControlType" /> (zezwalania lub odmowy) jako określona reguła oraz, jeśli znaleziono usuwa je.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-239">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-240">Bieżący <xref:System.Security.AccessControl.SemaphoreSecurity> reguły, które mają ten sam użytkownik i tym samym przeszukiwany jest obiekt <xref:System.Security.AccessControl.AccessControlType> wartość jako `rule`.</span><span class="sxs-lookup"><span data-stu-id="78480-240">The current <xref:System.Security.AccessControl.SemaphoreSecurity> object is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="78480-241">Wszelkie prawa określone przez `rule` są ignorowane, podczas wykonywania tego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="78480-241">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="78480-242">Jeśli nie zostaną znalezione żadne reguły dopasowywania, nie podjęto żadnej akcji.</span><span class="sxs-lookup"><span data-stu-id="78480-242">If no matching rules are found, no action is taken.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78480-243">W poniższym przykładzie pokazano, że <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll%2A> metoda usuwa wszystkie reguły zgodnych użytkowników i <xref:System.Security.AccessControl.AccessControlType>, ignorowanie praw.</span><span class="sxs-lookup"><span data-stu-id="78480-243">The following code example shows that the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights.</span></span>  
  
 <span data-ttu-id="78480-244">W przykładzie jest tworzony <xref:System.Security.AccessControl.SemaphoreSecurity> , dodaje reguły zezwalania i odmowy różne uprawnienia dla bieżącego użytkownika, a następnie scala dodatkowych praw do <xref:System.Security.AccessControl.AccessControlType.Allow> reguły.</span><span class="sxs-lookup"><span data-stu-id="78480-244">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span> <span data-ttu-id="78480-245">Przykład utworzy nową regułę, która umożliwia użytkownikowi przejęcie na własność i używa tej reguły, aby usunąć <xref:System.Security.AccessControl.AccessControlType.Allow> reguły z <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-245">The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <xref:System.Security.AccessControl.AccessControlType.Allow> rule from the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-246">W tym przykładzie nie dołączy do obiektu zabezpieczeń <xref:System.Threading.Semaphore> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-246">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="78480-247">Przykłady, które załączyć obiekty zabezpieczeń można znaleźć w <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> i <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="78480-247">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-248">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-248">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-249">
            <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> Do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-249">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-250">Wyszukuje reguły kontroli dostępu, która dokładnie odpowiada określonym reguły oraz, jeśli znaleziono i usuwa go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-250">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-251">Reguła zostanie usunięta tylko wtedy, gdy dokładnie odpowiada `rule` wszystkie szczegóły, w tym flag.</span><span class="sxs-lookup"><span data-stu-id="78480-251">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="78480-252">Inne zasady z tego samego użytkownika i <xref:System.Security.AccessControl.AccessControlType> pozostają niezmienione.</span><span class="sxs-lookup"><span data-stu-id="78480-252">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="78480-253">Reguła reprezentuje jeden lub więcej podstawowych wpisów kontroli dostępu (ACE), a te wpisy są podzielić lub łączyć w razie potrzeby zmodyfikować zasady zabezpieczeń dostępu dla użytkownika.</span><span class="sxs-lookup"><span data-stu-id="78480-253">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="78480-254">W związku z tym reguły może już nie istnieje w określonej formy znajdował się, gdy ten element został dodany, w tym przypadku <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> metody nie można go usunąć.</span><span class="sxs-lookup"><span data-stu-id="78480-254">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78480-255">W poniższym przykładzie pokazano, że <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> metoda wymaga dokładnego dopasowania, aby można było usunąć regułę, a reguły zezwalania i odmowy uprawnień są od siebie niezależne.</span><span class="sxs-lookup"><span data-stu-id="78480-255">The following code example shows that the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</span></span>  
  
 <span data-ttu-id="78480-256">W przykładzie jest tworzony <xref:System.Security.AccessControl.SemaphoreSecurity> , dodaje reguły zezwalania i odmowy różne uprawnienia dla bieżącego użytkownika, a następnie scala dodatkowych praw do <xref:System.Security.AccessControl.AccessControlType.Allow> regułę dostępu.</span><span class="sxs-lookup"><span data-stu-id="78480-256">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> access rule.</span></span> <span data-ttu-id="78480-257">Przykład następnie przekazuje oryginalnej <xref:System.Security.AccessControl.AccessControlType.Allow> regułę dotyczącą <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> — metoda i wyświetla wyniki, wskazujące, że nic nie zostanie usunięta.</span><span class="sxs-lookup"><span data-stu-id="78480-257">The example then passes the original <xref:System.Security.AccessControl.AccessControlType.Allow> rule to the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method, and displays the results, showing that nothing is deleted.</span></span> <span data-ttu-id="78480-258">Przykład następnie tworzy regułę, która odpowiada <xref:System.Security.AccessControl.AccessControlType.Allow> reguły w <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu i pomyślnie używa <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> metodę, aby usunąć regułę.</span><span class="sxs-lookup"><span data-stu-id="78480-258">The example then constructs a rule that matches the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.SemaphoreSecurity> object, and successfully uses the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method to remove the rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-259">W tym przykładzie nie dołączy do obiektu zabezpieczeń <xref:System.Threading.Semaphore> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-259">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="78480-260">Przykłady, które załączyć obiekty zabezpieczeń można znaleźć w <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> i <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="78480-260">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-261">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-261">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As SemaphoreAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-262">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> , który określa użytkownika, aby wyszukać i zestaw flagi dziedziczenia i propagacji, które pasujący reguły, jeśli znaleziono, musi być zgodny z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-262">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="78480-263">Określa, że uprawnienia do usunięcia z niezgodne reguły, jeśli znaleziono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-263">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-264">Wyszukuje reguły inspekcji z tego samego użytkownika określoną regułą oraz zgodne dziedziczenia i flagi propagacji; Jeśli znaleziono niezgodne reguły, prawa zawarte w określonej reguły są usuwane z niej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-264">Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78480-265">
            <see langword="true" /> Jeśli zostanie znaleziony zgodne reguły; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-265">
              <see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-266">Bieżący <xref:System.Security.AccessControl.SemaphoreSecurity> jest wyszukiwany zasady inspekcji, który ma tego samego użytkownika `rule`.</span><span class="sxs-lookup"><span data-stu-id="78480-266">The current <xref:System.Security.AccessControl.SemaphoreSecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="78480-267">Jeśli takie reguła nie zostanie znaleziony, nie podjęto żadnej akcji i metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="78480-267">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="78480-268">W przypadku znalezienia pasujących reguł ich flagi dziedziczenia i zgodności są sprawdzane pod kątem zgodności z flag określonych we `rule`.</span><span class="sxs-lookup"><span data-stu-id="78480-268">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="78480-269">Jeśli zostanie znaleziony nie niezgodne reguły, nie podjęto żadnej akcji, a metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="78480-269">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="78480-270">Jeśli znaleziono reguły z flagami zgodne, prawa określone w `rule` są usuwane z niezgodne reguły, a metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="78480-270">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="78480-271">Jeśli `rule` określa prawa nie zawiera niezgodne reguły, nie podjęto żadnej akcji w odniesieniu do tych praw.</span><span class="sxs-lookup"><span data-stu-id="78480-271">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="78480-272">Jeśli wszystkie prawa są usuwane z niezgodne reguły, cały reguła jest usuwana z bieżącego <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-272">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="78480-273">Mimo że można określić flagi dziedziczenia i propagacji semafora zasady inspekcji, tworząc je za pomocą <xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A> metody, nie jest to zalecane.</span><span class="sxs-lookup"><span data-stu-id="78480-273">Although you can specify inheritance and propagation flags for semaphore audit rules, by creating them with the <xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="78480-274">Dziedziczenie i propagacji mają znaczenia dla nazwanego semaforów a konserwacji zasad inspekcji umożliwiają bardziej skomplikowane.</span><span class="sxs-lookup"><span data-stu-id="78480-274">Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of audit rules more complicated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-275">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-275">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-276">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> , który określa użytkownika do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-276">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for.</span>
          </span>
          <span data-ttu-id="78480-277">Wszelkie prawa określone przez tę regułę są ignorowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-277">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-278">Przeszukuje wszystkie inspekcji reguły z określoną regułą tego samego użytkownika i, jeśli znaleziono, usuwa je.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-278">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-279">Bieżący <xref:System.Security.AccessControl.SemaphoreSecurity> jest wyszukiwany zasady inspekcji, które mają tego samego użytkownika `rule`.</span><span class="sxs-lookup"><span data-stu-id="78480-279">The current <xref:System.Security.AccessControl.SemaphoreSecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="78480-280">Wszelkie prawa określone przez `rule` są ignorowane, podczas wykonywania tego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="78480-280">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="78480-281">Wszystkie reguły dopasowywania zostaną usunięte.</span><span class="sxs-lookup"><span data-stu-id="78480-281">All matching rules are removed.</span></span> <span data-ttu-id="78480-282">Jeśli nie zostaną znalezione żadne reguły dopasowywania, nie podjęto żadnej akcji.</span><span class="sxs-lookup"><span data-stu-id="78480-282">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-283">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-283">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-284">
            <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> Do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-284">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-285">Wyszukuje zasady inspekcji, która dokładnie odpowiada określonym reguły oraz, jeśli znaleziono i usuwa go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-285">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-286">Reguła zostanie usunięta tylko wtedy, gdy dokładnie odpowiada `rule` wszystkie szczegóły, w tym flag.</span><span class="sxs-lookup"><span data-stu-id="78480-286">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="78480-287">Nie wpływa na inne zasady inspekcji dla tego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="78480-287">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="78480-288">Reguła reprezentuje jeden lub więcej podstawowych wpisów kontroli dostępu (ACE), a te wpisy są podzielić lub łączyć w razie potrzeby zmodyfikować zasady zabezpieczeń inspekcji dla użytkownika.</span><span class="sxs-lookup"><span data-stu-id="78480-288">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="78480-289">W związku z tym reguły może już nie istnieje w określonej formy znajdował się, gdy ten element został dodany, w tym przypadku <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific%2A> metody nie można go usunąć.</span><span class="sxs-lookup"><span data-stu-id="78480-289">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-290">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-290">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-291">
            <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> Do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-291">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="78480-292">Użytkownik określony przez tę regułę określa reguły, aby usunąć przed dodaniem tej reguły.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-292">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-293">Usuwa wszystkie zasady kontroli dostępu z tego samego użytkownika określoną regułą, niezależnie od tego <see cref="T:System.Security.AccessControl.AccessControlType" />, a następnie dodaje określoną regułą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-293">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-294">Jeśli brak reguł dostępu do których użytkownik odpowiada określonej reguły `rule` został dodany.</span><span class="sxs-lookup"><span data-stu-id="78480-294">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78480-295">Poniższy kod przedstawia przykład sposobu <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> metoda zastępuje wszystkie reguły dla zgodnego użytkownika podana reguła dopasowania.</span><span class="sxs-lookup"><span data-stu-id="78480-295">The following code example shows how the <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="78480-296">W przykładzie jest tworzony <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu i dodaje reguły zezwalania i odmowy różne uprawnienia dla bieżącego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="78480-296">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="78480-297">Przykład utworzy nową regułę, która pozwala bieżąca Pełna kontrola użytkownika i używa <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> metodę, aby zastąpić zarówno istniejących reguł nowej reguły.</span><span class="sxs-lookup"><span data-stu-id="78480-297">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> method to replace both of the existing rules with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-298">W tym przykładzie nie dołączy do obiektu zabezpieczeń <xref:System.Threading.Semaphore> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-298">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="78480-299">Przykłady, które załączyć obiekty zabezpieczeń można znaleźć w <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> i <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="78480-299">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-300">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-300">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-301">
            <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> Do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-301">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="78480-302">Użytkownik i <see cref="T:System.Security.AccessControl.AccessControlType" /> tej zasady określają zasady można usunąć przed dodaniem tej reguły.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-302">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-303">Usuwa wszystkie zasady kontroli dostępu z tego samego użytkownika i <see cref="T:System.Security.AccessControl.AccessControlType" /> (zezwalania lub odmowy) jako określonej reguły, a następnie dodaje określoną regułą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-303">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-304">Jeśli dla określonej reguły <xref:System.Security.AccessControl.AccessControlType.Allow>, ta metoda powoduje usunięcie wszystkich <xref:System.Security.AccessControl.AccessControlType.Allow> reguły dla określonego użytkownika, zastępując je z określoną regułą.</span><span class="sxs-lookup"><span data-stu-id="78480-304">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="78480-305">Jeśli dla określonej reguły <xref:System.Security.AccessControl.AccessControlType.Deny>, wszystkie <xref:System.Security.AccessControl.AccessControlType.Deny> zastępuje reguły dla określonego użytkownika z określoną regułą.</span><span class="sxs-lookup"><span data-stu-id="78480-305">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="78480-306">Jeśli brak reguł której użytkownika i <xref:System.Security.AccessControl.AccessControlType> zgodne z określoną regułą `rule` został dodany.</span><span class="sxs-lookup"><span data-stu-id="78480-306">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78480-307">Poniższy kod przedstawia przykład sposobu <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> metoda usuwa wszystkie reguły, które odpowiadają zarówno wobec użytkownika i <xref:System.Security.AccessControl.AccessControlType> z `rule`, zastępując je za pomocą `rule`.</span><span class="sxs-lookup"><span data-stu-id="78480-307">The following code example shows how the <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, replacing them with `rule`.</span></span>  
  
 <span data-ttu-id="78480-308">W przykładzie jest tworzony <xref:System.Security.AccessControl.SemaphoreSecurity> obiektu i dodaje reguły zezwalania i odmowy różne uprawnienia dla bieżącego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="78480-308">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="78480-309">Przykład utworzy nową regułę, która pozwala bieżąca Pełna kontrola użytkownika i używa <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> metodę, aby zastąpić istniejącą regułę z nową regułę Zezwalaj.</span><span class="sxs-lookup"><span data-stu-id="78480-309">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> method to replace the existing Allow rule with the new rule.</span></span> <span data-ttu-id="78480-310">Nie dotyczy reguła, która nie zezwala na dostęp.</span><span class="sxs-lookup"><span data-stu-id="78480-310">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78480-311">W tym przykładzie nie dołączy do obiektu zabezpieczeń <xref:System.Threading.Semaphore> obiektu.</span><span class="sxs-lookup"><span data-stu-id="78480-311">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="78480-312">Przykłady, które załączyć obiekty zabezpieczeń można znaleźć w <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> i <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="78480-312">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-313">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-313">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="78480-314">
            <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> Do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-314">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to add.</span>
          </span>
          <span data-ttu-id="78480-315">Użytkownik określony przez tę regułę określa reguły, aby usunąć przed dodaniem tej reguły.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-315">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78480-316">Usuwa wszystkie reguły z tego samego użytkownika określoną regułą inspekcji, niezależnie od tego <see cref="T:System.Security.AccessControl.AuditFlags" /> wartość, a następnie dodaje określoną regułą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-316">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78480-317">Jeśli brak reguł inspekcji, w których użytkownik odpowiada określonej reguły `rule` został dodany.</span><span class="sxs-lookup"><span data-stu-id="78480-317">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="78480-318">
            <paramref name="rule" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78480-318">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>