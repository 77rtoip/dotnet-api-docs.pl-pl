<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GenericAce.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bf341882e41e147ec58db477d9d36d41dfb4f4ab.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf341882e41e147ec58db477d9d36d41dfb4f4ab</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.GenericAce">
          <source>Represents an Access Control Entry (ACE), and is the base class for all other ACE classes.</source>
          <target state="translated">Reprezentuje wpisu kontroli dostępu (ACE) i jest klasą podstawową innych klas ACE.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.GenericAce">
          <source>An ACE contains both an ACE header and a binary blob.</source>
          <target state="translated">Wpis ACE zawiera nagłówek ACE i binarne obiektu blob.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.GenericAce">
          <source>The header contains information about the type of the ACE, various flags, and the size of the binary blob.</source>
          <target state="translated">Nagłówek zawiera informacje o typie wpisu kontroli dostępu, różnych flagi i rozmiar obiektu blob binarnego.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.GenericAce.AceFlags">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AceFlags" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object.</source>
          <target state="translated">Pobiera lub ustawia <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AceFlags" /&gt;</ph> skojarzony z tym <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.GenericAce.AceFlags">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AceFlags" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AceFlags" /&gt;</ph> Skojarzony z tym <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.GenericAce.AceFlags">
          <source>An <ph id="ph1">&lt;xref:System.Security.AccessControl.AceFlags&gt;</ph> object contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for an Access Control Entry (ACE).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.AceFlags&gt;</ph> Obiektu zawiera flagi określające informacji na temat dziedziczenia propagacji dziedziczenia i inspekcji warunków dla wpisu kontroli dostępu (ACE).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.GenericAce.AceType">
          <source>Gets the type of this Access Control Entry (ACE).</source>
          <target state="translated">Pobiera typ z tego dostępu kontroli wpisu ACE.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.GenericAce.AceType">
          <source>The type of this ACE.</source>
          <target state="translated">Typ tego wpisu.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.GenericAce.AuditFlags">
          <source>Gets the audit information associated with this Access Control Entry (ACE).</source>
          <target state="translated">Pobiera informacje o inspekcji skojarzone z tym dostępu formantu wpis (ACE).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.GenericAce.AuditFlags">
          <source>The audit information associated with this Access Control Entry (ACE).</source>
          <target state="translated">Informacje o inspekcji skojarzone z tym dostępu formantu wpis (ACE).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.GenericAce.BinaryLength">
          <source>Gets the length, in bytes, of the binary representation of the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object.</source>
          <target state="translated">Pobiera długość w bajtach bieżący reprezentacja binarna <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.GenericAce.BinaryLength">
          <source>This length should be used before marshaling the ACL into a binary array with the <ph id="ph1">&lt;see cref="M:System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">To długość powinna być używana przed zorganizowaniem listy kontroli dostępu do tablicy binarnego z <ph id="ph1">&lt;see cref="M:System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.GenericAce.BinaryLength">
          <source>The length, in bytes, of the binary representation of the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object.</source>
          <target state="translated">Długość w bajtach binarna reprezentacja bieżącego <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.Copy">
          <source>Creates a deep copy of this Access Control Entry (ACE).</source>
          <target state="translated">Tworzy kopię głębokie z tego dostępu kontroli wpisu ACE.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.Copy">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object that this method creates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> Obiekt, który tworzy tę metodę.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)">
          <source>The binary data from which to create the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object.</source>
          <target state="translated">Dane binarne, z którym ma zostać utworzony nowy <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)">
          <source>The offset at which to begin unmarshaling.</source>
          <target state="translated">Przesunięcie, od którego należy zacząć unmarshaling.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object from the specified binary data.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu z określonych danych binarnych.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object this method creates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> Obiektu ta metoda tworzy.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object to compare to the current <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> Obiekt do porównania z bieżącą <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object is equal to the current <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object.</source>
          <target state="translated">Określa, czy określony <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiekt jest taki sam, jak bieżący <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object is equal to the current <ph id="ph3">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli określony <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiekt jest taki sam, jak bieżący <ph id="ph3">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)">
          <source>The byte array into which the contents of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> is marshaled.</source>
          <target state="translated">Tablica bajtów, do którego zawartość <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> jest przekazywane.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)">
          <source>The offset at which to start marshaling.</source>
          <target state="translated">Przesunięcie, przy którym należy uruchomić przekazywanie.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)">
          <source>Marshals the contents of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object into the specified byte array beginning at the specified offset.</source>
          <target state="translated">Marshals zawartość <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu do tablicy określonym bajcie począwszy od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is negative or too high to allow the entire <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAcl" /&gt;</ph> to be copied into <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> jest ujemny lub zbyt duże, aby umożliwić całą <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAcl" /&gt;</ph> do skopiowania do <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.GetHashCode">
          <source>Serves as a hash function for the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> class.</source>
          <target state="translated">Pełni rolę funkcji skrótu dla <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.GetHashCode">
          <source>The  <ph id="ph1">&lt;see cref="M:System.Security.AccessControl.GenericAce.GetHashCode" /&gt;</ph> method is suitable for use in hashing algorithms and data structures like a hash table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.AccessControl.GenericAce.GetHashCode" /&gt;</ph> Metoda jest przydatna do użycia w mieszania struktury algorytmów i danych, takich jak tablicy skrótów.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object.</source>
          <target state="translated">Wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.GenericAce.InheritanceFlags">
          <source>Gets flags that specify the inheritance properties of this Access Control Entry (ACE).</source>
          <target state="translated">Pobiera flagi określające właściwości dziedziczenia z tego dostępu kontroli wpisu ACE.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.GenericAce.InheritanceFlags">
          <source>Flags that specify the inheritance properties of this ACE.</source>
          <target state="translated">Flagi, które określają właściwości dziedziczenia tego wpisu.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.GenericAce.IsInherited">
          <source>Gets a Boolean value that specifies whether this Access Control Entry (ACE) is inherited or is set explicitly.</source>
          <target state="translated">Pobiera wartość logiczna, która określa, czy ten wpis kontroli dostępu (ACE) jest dziedziczona lub jest ustawiony w sposób jawny.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.GenericAce.IsInherited">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this ACE is inherited; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli tego wpisu jest dziedziczona; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object to compare.</source>
          <target state="translated">Pierwszy <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiekt do porównania.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> to compare.</source>
          <target state="translated">Drugi <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> do porównania.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> objects are considered equal.</source>
          <target state="translated">Określa, czy określony <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiekty są traktowane jako równe.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> objects are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dwa <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiekty są równe; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Security.AccessControl.GenericAce.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Security.AccessControl.GenericAce.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> object to compare.</source>
          <target state="translated">Pierwszy <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiekt do porównania.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> to compare.</source>
          <target state="translated">Drugi <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> do porównania.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> objects are considered unequal.</source>
          <target state="translated">Określa, czy określony <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiekty są traktowane jako nierówne.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> objects are unequal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dwa <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> obiekty są nierówne; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Security.AccessControl.GenericAce.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Security.AccessControl.GenericAce.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.GenericAce.PropagationFlags">
          <source>Gets flags that specify the inheritance propagation properties of this Access Control Entry (ACE).</source>
          <target state="translated">Pobiera flagi określające właściwości propagacji dziedziczenie z tego dostępu kontroli wpisu ACE.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.GenericAce.PropagationFlags">
          <source>Flags that specify the inheritance propagation properties of this ACE.</source>
          <target state="translated">Flagi określające właściwości propagacji dziedziczenia tego wpisu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>