<Type Name="CommonObjectSecurity" FullName="System.Security.AccessControl.CommonObjectSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67034c487a645d4a10fd09f8ed234f8643e97a80" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69265252" /></Metadata><TypeSignature Language="C#" Value="public abstract class CommonObjectSecurity : System.Security.AccessControl.ObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonObjectSecurity extends System.Security.AccessControl.ObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.CommonObjectSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonObjectSecurity&#xA;Inherits ObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonObjectSecurity abstract : System::Security::AccessControl::ObjectSecurity" />
  <TypeSignature Language="F#" Value="type CommonObjectSecurity = class&#xA;    inherit ObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.ObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Kontroluje dostęp do obiektów bez bezpośredniego manipulowania listami kontroli dostępu (ACL). Ta klasa jest abstrakcyjną klasą bazową <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> dla klasy.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CommonObjectSecurity (bool isContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isContainer As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CommonObjectSecurity(bool isContainer);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.CommonObjectSecurity : bool -&gt; System.Security.AccessControl.CommonObjectSecurity" Usage="new System.Security.AccessControl.CommonObjectSecurity isContainer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isContainer"><see langword="true" />Jeśli nowy obiekt jest obiektem kontenera.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="protected void AddAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddAccessRule (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddAccessRule(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAccessRule : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do dodania.</param>
        <summary>Dodaje określoną regułę dostępu do listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodanie reguły dostępu może spowodować, że istniejące reguły dostępu w DACL zostaną scalone.  
  
 Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="protected void AddAuditRule (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddAuditRule(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddAuditRule (rule As AuditRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddAuditRule(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAuditRule : System.Security.AccessControl.AuditRule -&gt; unit" Usage="commonObjectSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła inspekcji do dodania.</param>
        <summary>Dodaje określoną regułę inspekcji do listy Access Control systemu (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodanie reguły inspekcji może spowodować, że istniejące reguły dostępu na liście SACL zostaną scalone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessRules">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules(bool includeExplicit, bool includeInherited, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessRules (includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::AuthorizationRuleCollection ^ GetAccessRules(bool includeExplicit, bool includeInherited, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetAccessRules : bool * bool * Type -&gt; System.Security.AccessControl.AuthorizationRuleCollection" Usage="commonObjectSecurity.GetAccessRules (includeExplicit, includeInherited, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuthorizationRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeExplicit" Type="System.Boolean" />
        <Parameter Name="includeInherited" Type="System.Boolean" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="includeExplicit"><see langword="true" />Aby uwzględnić reguły dostępu jawnie ustawione dla obiektu.</param>
        <param name="includeInherited"><see langword="true" />Aby uwzględnić dziedziczone reguły dostępu.</param>
        <param name="targetType">Określa, czy identyfikator zabezpieczeń, dla którego mają zostać pobrane reguły dostępu, jest typu T:System.Security.Principal.SecurityIdentifier lub T:System.Security.Principal.NTAccount. Wartość tego parametru musi być typem, który można przetłumaczyć na <see cref="T:System.Security.Principal.SecurityIdentifier" /> typ.</param>
        <summary>Pobiera kolekcję reguł dostępu skojarzonych z określonym identyfikatorem zabezpieczeń.</summary>
        <returns>Kolekcja reguł dostępu skojarzonych z określonym <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiektem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuditRules">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules(bool includeExplicit, bool includeInherited, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAuditRules (includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::AuthorizationRuleCollection ^ GetAuditRules(bool includeExplicit, bool includeInherited, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetAuditRules : bool * bool * Type -&gt; System.Security.AccessControl.AuthorizationRuleCollection" Usage="commonObjectSecurity.GetAuditRules (includeExplicit, includeInherited, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuthorizationRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeExplicit" Type="System.Boolean" />
        <Parameter Name="includeInherited" Type="System.Boolean" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="includeExplicit"><see langword="true" />Aby uwzględnić reguły inspekcji jawnie ustawione dla obiektu.</param>
        <param name="includeInherited"><see langword="true" />Aby uwzględnić dziedziczone reguły inspekcji.</param>
        <param name="targetType">Identyfikator zabezpieczeń, dla którego mają zostać pobrane reguły inspekcji. Musi to być obiekt, który może być rzutowany jako <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiekt.</param>
        <summary>Pobiera kolekcję reguł inspekcji skojarzonych z określonym identyfikatorem zabezpieczeń.</summary>
        <returns>Kolekcja reguł inspekcji skojarzonych z określonym <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiektem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccess">
      <MemberSignature Language="C#" Value="protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ModifyAccess(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ModifyAccess (modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ModifyAccess(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AccessRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="override this.ModifyAccess : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule *  -&gt; bool" Usage="commonObjectSecurity.ModifyAccess (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Modyfikacja, która ma zostać zastosowana do listy DACL.</param>
        <param name="rule">Reguła dostępu do zmodyfikowania.</param>
        <param name="modified"><see langword="true" />Jeśli lista DACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></param>
        <summary>Stosuje określoną modyfikację do listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</summary>
        <returns><see langword="true" />Jeśli lista DACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAudit">
      <MemberSignature Language="C#" Value="protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ModifyAudit(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ModifyAudit (modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ModifyAudit(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AuditRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="override this.ModifyAudit : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule *  -&gt; bool" Usage="commonObjectSecurity.ModifyAudit (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Modyfikacja do zastosowania do listy SACL.</param>
        <param name="rule">Reguła inspekcji do zmodyfikowania.</param>
        <param name="modified"><see langword="true" />Jeśli lista SACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></param>
        <summary>Stosuje określoną modyfikację do listy Access Control systemowych (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</summary>
        <returns><see langword="true" />Jeśli lista SACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="protected bool RemoveAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RemoveAccessRule (rule As AccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool RemoveAccessRule(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRule : System.Security.AccessControl.AccessRule -&gt; bool" Usage="commonObjectSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do usunięcia.</param>
        <summary>Usuwa reguły dostępu zawierające ten sam identyfikator zabezpieczeń i maskę dostępu co określona reguła dostępu z listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</summary>
        <returns><see langword="true" />Jeśli zasada dostępu została pomyślnie usunięta; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwanie dostępu jest realizowane przy użyciu złożonego algorytmu, który może dodawać reguły kontroli dostępu oprócz usuwania.  
  
 Ta metoda nie może usunąć reguły dostępu i zwraca `false` , jeśli reguły dziedziczenia skojarzone z regułą dostępu są zbyt skomplikowane, aby algorytm usuwania zakończył się pomyślnie.  
  
 Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="protected void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveAccessRuleAll (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRuleAll : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do usunięcia.</param>
        <summary>Usuwa wszystkie reguły dostępu mające taki sam identyfikator zabezpieczeń jak określona reguła dostępu z listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="protected void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveAccessRuleSpecific (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRuleSpecific : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do usunięcia.</param>
        <summary>Usuwa wszystkie reguły dostępu, które dokładnie pasują do określonej reguły dostępu, z listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="protected bool RemoveAuditRule (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RemoveAuditRule (rule As AuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool RemoveAuditRule(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRule : System.Security.AccessControl.AuditRule -&gt; bool" Usage="commonObjectSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła inspekcji do usunięcia.</param>
        <summary>Usuwa reguły inspekcji zawierające ten sam identyfikator zabezpieczeń i maskę dostępu co określona reguła inspekcji z listy Access Control systemu (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</summary>
        <returns><see langword="true" />Jeśli reguła inspekcji została pomyślnie usunięta; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwanie inspekcji odbywa się przy użyciu złożonego algorytmu, który może dodawać reguły kontroli inspekcji oprócz usuwania.  
  
 Ta metoda nie może usunąć reguły inspekcji i zwraca `false` , jeśli reguły dziedziczenia skojarzone z regułą inspekcji są zbyt skomplikowane, aby algorytm usuwania zakończył się pomyślnie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="protected void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveAuditRuleAll (rule As AuditRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRuleAll : System.Security.AccessControl.AuditRule -&gt; unit" Usage="commonObjectSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła inspekcji do usunięcia.</param>
        <summary>Usuwa wszystkie reguły inspekcji mające taki sam identyfikator zabezpieczeń co określona reguła inspekcji z listy Access Control systemu (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="protected void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveAuditRuleSpecific (rule As AuditRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRuleSpecific : System.Security.AccessControl.AuditRule -&gt; unit" Usage="commonObjectSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła inspekcji do usunięcia.</param>
        <summary>Usuwa wszystkie reguły inspekcji, które dokładnie pasują do określonej reguły inspekcji z listy Access Control systemu (SACL) skojarzonej <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> z tym obiektem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="protected void ResetAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetAccessRule (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetAccessRule(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.ResetAccessRule : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do zresetowania.</param>
        <summary>Usuwa wszystkie reguły dostępu na liście arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem, a następnie dodaje określoną regułę dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="protected void SetAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAccessRule (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAccessRule(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAccessRule : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła dostępu do ustawienia.</param>
        <summary>Usuwa wszystkie reguły dostępu zawierające te same identyfikatory zabezpieczeń i kwalifikator jak określona reguła dostępu na liście arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem, a następnie dodaje określoną regułę dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="protected void SetAuditRule (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAuditRule(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAuditRule (rule As AuditRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAuditRule(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAuditRule : System.Security.AccessControl.AuditRule -&gt; unit" Usage="commonObjectSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Reguła inspekcji do ustawienia.</param>
        <summary>Usuwa wszystkie reguły inspekcji zawierające ten sam identyfikator zabezpieczeń i kwalifikator co określona reguła inspekcji na liście Access Control systemu (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem, a następnie dodaje określoną regułę inspekcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
