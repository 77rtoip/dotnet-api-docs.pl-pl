<Type Name="CommonObjectSecurity" FullName="System.Security.AccessControl.CommonObjectSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67034c487a645d4a10fd09f8ed234f8643e97a80" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69265252" /></Metadata><TypeSignature Language="C#" Value="public abstract class CommonObjectSecurity : System.Security.AccessControl.ObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonObjectSecurity extends System.Security.AccessControl.ObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.CommonObjectSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonObjectSecurity&#xA;Inherits ObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonObjectSecurity abstract : System::Security::AccessControl::ObjectSecurity" />
  <TypeSignature Language="F#" Value="type CommonObjectSecurity = class&#xA;    inherit ObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.ObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b09cf-101">Kontroluje dostęp do obiektów bez bezpośredniego manipulowania listami kontroli dostępu (ACL).</span><span class="sxs-lookup"><span data-stu-id="b09cf-101">Controls access to objects without direct manipulation of access control lists (ACLs).</span></span> <span data-ttu-id="b09cf-102">Ta klasa jest abstrakcyjną klasą bazową <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> dla klasy.</span><span class="sxs-lookup"><span data-stu-id="b09cf-102">This class is the abstract base class for the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> class.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CommonObjectSecurity (bool isContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isContainer As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CommonObjectSecurity(bool isContainer);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.CommonObjectSecurity : bool -&gt; System.Security.AccessControl.CommonObjectSecurity" Usage="new System.Security.AccessControl.CommonObjectSecurity isContainer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isContainer"><span data-ttu-id="b09cf-103"><see langword="true" />Jeśli nowy obiekt jest obiektem kontenera.</span><span class="sxs-lookup"><span data-stu-id="b09cf-103"><see langword="true" /> if the new object is a container object.</span></span></param>
        <summary><span data-ttu-id="b09cf-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="b09cf-104">Initializes a new instance of the <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="protected void AddAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddAccessRule (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddAccessRule(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAccessRule : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-105">Reguła dostępu do dodania.</span><span class="sxs-lookup"><span data-stu-id="b09cf-105">The access rule to add.</span></span></param>
        <summary><span data-ttu-id="b09cf-106">Dodaje określoną regułę dostępu do listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-106">Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09cf-107">Dodanie reguły dostępu może spowodować, że istniejące reguły dostępu w DACL zostaną scalone.</span><span class="sxs-lookup"><span data-stu-id="b09cf-107">Adding an access rule might cause existing access rules in the DACL to be merged.</span></span>  
  
 <span data-ttu-id="b09cf-108">Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.</span><span class="sxs-lookup"><span data-stu-id="b09cf-108">To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="protected void AddAuditRule (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddAuditRule(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddAuditRule (rule As AuditRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddAuditRule(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAuditRule : System.Security.AccessControl.AuditRule -&gt; unit" Usage="commonObjectSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-109">Reguła inspekcji do dodania.</span><span class="sxs-lookup"><span data-stu-id="b09cf-109">The audit rule to add.</span></span></param>
        <summary><span data-ttu-id="b09cf-110">Dodaje określoną regułę inspekcji do listy Access Control systemu (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-110">Adds the specified audit rule to the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09cf-111">Dodanie reguły inspekcji może spowodować, że istniejące reguły dostępu na liście SACL zostaną scalone.</span><span class="sxs-lookup"><span data-stu-id="b09cf-111">Adding an audit rule might cause existing access rules in the SACL to be merged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessRules">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules(bool includeExplicit, bool includeInherited, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessRules (includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::AuthorizationRuleCollection ^ GetAccessRules(bool includeExplicit, bool includeInherited, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetAccessRules : bool * bool * Type -&gt; System.Security.AccessControl.AuthorizationRuleCollection" Usage="commonObjectSecurity.GetAccessRules (includeExplicit, includeInherited, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuthorizationRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeExplicit" Type="System.Boolean" />
        <Parameter Name="includeInherited" Type="System.Boolean" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="includeExplicit"><span data-ttu-id="b09cf-112"><see langword="true" />Aby uwzględnić reguły dostępu jawnie ustawione dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="b09cf-112"><see langword="true" /> to include access rules explicitly set for the object.</span></span></param>
        <param name="includeInherited"><span data-ttu-id="b09cf-113"><see langword="true" />Aby uwzględnić dziedziczone reguły dostępu.</span><span class="sxs-lookup"><span data-stu-id="b09cf-113"><see langword="true" /> to include inherited access rules.</span></span></param>
        <param name="targetType"><span data-ttu-id="b09cf-114">Określa, czy identyfikator zabezpieczeń, dla którego mają zostać pobrane reguły dostępu, jest typu T:System.Security.Principal.SecurityIdentifier lub T:System.Security.Principal.NTAccount.</span><span class="sxs-lookup"><span data-stu-id="b09cf-114">Specifies whether the security identifier for which to retrieve access rules is of type T:System.Security.Principal.SecurityIdentifier or type T:System.Security.Principal.NTAccount.</span></span> <span data-ttu-id="b09cf-115">Wartość tego parametru musi być typem, który można przetłumaczyć na <see cref="T:System.Security.Principal.SecurityIdentifier" /> typ.</span><span class="sxs-lookup"><span data-stu-id="b09cf-115">The value of this parameter must be a type that can be translated to  the <see cref="T:System.Security.Principal.SecurityIdentifier" /> type.</span></span></param>
        <summary><span data-ttu-id="b09cf-116">Pobiera kolekcję reguł dostępu skojarzonych z określonym identyfikatorem zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="b09cf-116">Gets a collection of the access rules associated with the specified security identifier.</span></span></summary>
        <returns><span data-ttu-id="b09cf-117">Kolekcja reguł dostępu skojarzonych z określonym <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-117">The collection of access rules associated with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuditRules">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules(bool includeExplicit, bool includeInherited, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAuditRules (includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::AuthorizationRuleCollection ^ GetAuditRules(bool includeExplicit, bool includeInherited, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetAuditRules : bool * bool * Type -&gt; System.Security.AccessControl.AuthorizationRuleCollection" Usage="commonObjectSecurity.GetAuditRules (includeExplicit, includeInherited, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuthorizationRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeExplicit" Type="System.Boolean" />
        <Parameter Name="includeInherited" Type="System.Boolean" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="includeExplicit"><span data-ttu-id="b09cf-118"><see langword="true" />Aby uwzględnić reguły inspekcji jawnie ustawione dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="b09cf-118"><see langword="true" /> to include audit rules explicitly set for the object.</span></span></param>
        <param name="includeInherited"><span data-ttu-id="b09cf-119"><see langword="true" />Aby uwzględnić dziedziczone reguły inspekcji.</span><span class="sxs-lookup"><span data-stu-id="b09cf-119"><see langword="true" /> to include inherited audit rules.</span></span></param>
        <param name="targetType"><span data-ttu-id="b09cf-120">Identyfikator zabezpieczeń, dla którego mają zostać pobrane reguły inspekcji.</span><span class="sxs-lookup"><span data-stu-id="b09cf-120">The security identifier for which to retrieve audit rules.</span></span> <span data-ttu-id="b09cf-121">Musi to być obiekt, który może być rzutowany jako <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="b09cf-121">This must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></param>
        <summary><span data-ttu-id="b09cf-122">Pobiera kolekcję reguł inspekcji skojarzonych z określonym identyfikatorem zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="b09cf-122">Gets a collection of the audit rules associated with the specified security identifier.</span></span></summary>
        <returns><span data-ttu-id="b09cf-123">Kolekcja reguł inspekcji skojarzonych z określonym <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-123">The collection of audit rules associated with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccess">
      <MemberSignature Language="C#" Value="protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ModifyAccess(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ModifyAccess (modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ModifyAccess(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AccessRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="override this.ModifyAccess : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule *  -&gt; bool" Usage="commonObjectSecurity.ModifyAccess (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification"><span data-ttu-id="b09cf-124">Modyfikacja, która ma zostać zastosowana do listy DACL.</span><span class="sxs-lookup"><span data-stu-id="b09cf-124">The modification to apply to the DACL.</span></span></param>
        <param name="rule"><span data-ttu-id="b09cf-125">Reguła dostępu do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="b09cf-125">The access rule to modify.</span></span></param>
        <param name="modified"><span data-ttu-id="b09cf-126"><see langword="true" />Jeśli lista DACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b09cf-126"><see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b09cf-127">Stosuje określoną modyfikację do listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-127">Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="b09cf-128"><see langword="true" />Jeśli lista DACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b09cf-128"><see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09cf-129">Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.</span><span class="sxs-lookup"><span data-stu-id="b09cf-129">To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAudit">
      <MemberSignature Language="C#" Value="protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ModifyAudit(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ModifyAudit (modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ModifyAudit(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AuditRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="override this.ModifyAudit : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule *  -&gt; bool" Usage="commonObjectSecurity.ModifyAudit (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification"><span data-ttu-id="b09cf-130">Modyfikacja do zastosowania do listy SACL.</span><span class="sxs-lookup"><span data-stu-id="b09cf-130">The modification to apply to the SACL.</span></span></param>
        <param name="rule"><span data-ttu-id="b09cf-131">Reguła inspekcji do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="b09cf-131">The audit rule to modify.</span></span></param>
        <param name="modified"><span data-ttu-id="b09cf-132"><see langword="true" />Jeśli lista SACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b09cf-132"><see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b09cf-133">Stosuje określoną modyfikację do listy Access Control systemowych (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-133">Applies the specified modification to the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="b09cf-134"><see langword="true" />Jeśli lista SACL została pomyślnie zmodyfikowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b09cf-134"><see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="protected bool RemoveAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RemoveAccessRule (rule As AccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool RemoveAccessRule(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRule : System.Security.AccessControl.AccessRule -&gt; bool" Usage="commonObjectSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-135">Reguła dostępu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b09cf-135">The access rule to remove.</span></span></param>
        <summary><span data-ttu-id="b09cf-136">Usuwa reguły dostępu zawierające ten sam identyfikator zabezpieczeń i maskę dostępu co określona reguła dostępu z listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-136">Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="b09cf-137"><see langword="true" />Jeśli zasada dostępu została pomyślnie usunięta; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b09cf-137"><see langword="true" /> if the access rule was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09cf-138">Usuwanie dostępu jest realizowane przy użyciu złożonego algorytmu, który może dodawać reguły kontroli dostępu oprócz usuwania.</span><span class="sxs-lookup"><span data-stu-id="b09cf-138">Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.</span></span>  
  
 <span data-ttu-id="b09cf-139">Ta metoda nie może usunąć reguły dostępu i zwraca `false` , jeśli reguły dziedziczenia skojarzone z regułą dostępu są zbyt skomplikowane, aby algorytm usuwania zakończył się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b09cf-139">This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.</span></span>  
  
 <span data-ttu-id="b09cf-140">Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.</span><span class="sxs-lookup"><span data-stu-id="b09cf-140">To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="protected void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveAccessRuleAll (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRuleAll : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-141">Reguła dostępu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b09cf-141">The access rule to remove.</span></span></param>
        <summary><span data-ttu-id="b09cf-142">Usuwa wszystkie reguły dostępu mające taki sam identyfikator zabezpieczeń jak określona reguła dostępu z listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-142">Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09cf-143">Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.</span><span class="sxs-lookup"><span data-stu-id="b09cf-143">To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="protected void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveAccessRuleSpecific (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRuleSpecific : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-144">Reguła dostępu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b09cf-144">The access rule to remove.</span></span></param>
        <summary><span data-ttu-id="b09cf-145">Usuwa wszystkie reguły dostępu, które dokładnie pasują do określonej reguły dostępu, z listy arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-145">Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09cf-146">Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.</span><span class="sxs-lookup"><span data-stu-id="b09cf-146">To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="protected bool RemoveAuditRule (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RemoveAuditRule (rule As AuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool RemoveAuditRule(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRule : System.Security.AccessControl.AuditRule -&gt; bool" Usage="commonObjectSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-147">Reguła inspekcji do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b09cf-147">The audit rule to remove.</span></span></param>
        <summary><span data-ttu-id="b09cf-148">Usuwa reguły inspekcji zawierające ten sam identyfikator zabezpieczeń i maskę dostępu co określona reguła inspekcji z listy Access Control systemu (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-148">Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="b09cf-149"><see langword="true" />Jeśli reguła inspekcji została pomyślnie usunięta; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b09cf-149"><see langword="true" /> if the audit rule was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09cf-150">Usuwanie inspekcji odbywa się przy użyciu złożonego algorytmu, który może dodawać reguły kontroli inspekcji oprócz usuwania.</span><span class="sxs-lookup"><span data-stu-id="b09cf-150">Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.</span></span>  
  
 <span data-ttu-id="b09cf-151">Ta metoda nie może usunąć reguły inspekcji i zwraca `false` , jeśli reguły dziedziczenia skojarzone z regułą inspekcji są zbyt skomplikowane, aby algorytm usuwania zakończył się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="b09cf-151">This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="protected void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveAuditRuleAll (rule As AuditRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRuleAll : System.Security.AccessControl.AuditRule -&gt; unit" Usage="commonObjectSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-152">Reguła inspekcji do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b09cf-152">The audit rule to remove.</span></span></param>
        <summary><span data-ttu-id="b09cf-153">Usuwa wszystkie reguły inspekcji mające taki sam identyfikator zabezpieczeń co określona reguła inspekcji z listy Access Control systemu (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-153">Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="protected void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveAuditRuleSpecific (rule As AuditRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRuleSpecific : System.Security.AccessControl.AuditRule -&gt; unit" Usage="commonObjectSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-154">Reguła inspekcji do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b09cf-154">The audit rule to remove.</span></span></param>
        <summary><span data-ttu-id="b09cf-155">Usuwa wszystkie reguły inspekcji, które dokładnie pasują do określonej reguły inspekcji z listy Access Control systemu (SACL) skojarzonej <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> z tym obiektem.</span><span class="sxs-lookup"><span data-stu-id="b09cf-155">Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="protected void ResetAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetAccessRule (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetAccessRule(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.ResetAccessRule : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-156">Reguła dostępu do zresetowania.</span><span class="sxs-lookup"><span data-stu-id="b09cf-156">The access rule to reset.</span></span></param>
        <summary><span data-ttu-id="b09cf-157">Usuwa wszystkie reguły dostępu na liście arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem, a następnie dodaje określoną regułę dostępu.</span><span class="sxs-lookup"><span data-stu-id="b09cf-157">Removes all access rules in the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object and then adds the specified access rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09cf-158">Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.</span><span class="sxs-lookup"><span data-stu-id="b09cf-158">To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="protected void SetAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAccessRule (rule As AccessRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAccessRule(System::Security::AccessControl::AccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAccessRule : System.Security.AccessControl.AccessRule -&gt; unit" Usage="commonObjectSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-159">Reguła dostępu do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="b09cf-159">The access rule to set.</span></span></param>
        <summary><span data-ttu-id="b09cf-160">Usuwa wszystkie reguły dostępu zawierające te same identyfikatory zabezpieczeń i kwalifikator jak określona reguła dostępu na liście arbitralnej Access Control (DACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem, a następnie dodaje określoną regułę dostępu.</span><span class="sxs-lookup"><span data-stu-id="b09cf-160">Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object and then adds the specified access rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09cf-161">Aby uniknąć przypadkowego zezwolenia na dostęp do podmiotów zabezpieczeń, aplikacje powinny sprawdzić obecność wpisu kontroli dostępu (ACE) Wszyscy wszyscy (AEFA) i usunąć go przed zmodyfikowaniem listy DACL.</span><span class="sxs-lookup"><span data-stu-id="b09cf-161">To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="protected void SetAuditRule (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAuditRule(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAuditRule (rule As AuditRule)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAuditRule(System::Security::AccessControl::AuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAuditRule : System.Security.AccessControl.AuditRule -&gt; unit" Usage="commonObjectSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b09cf-162">Reguła inspekcji do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="b09cf-162">The audit rule to set.</span></span></param>
        <summary><span data-ttu-id="b09cf-163">Usuwa wszystkie reguły inspekcji zawierające ten sam identyfikator zabezpieczeń i kwalifikator co określona reguła inspekcji na liście Access Control systemu (SACL) skojarzonej z tym <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> obiektem, a następnie dodaje określoną regułę inspekcji.</span><span class="sxs-lookup"><span data-stu-id="b09cf-163">Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object and then adds the specified audit rule.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
