<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebServiceHost.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72935e6487c5f10f2176cd18ef5933e974be8d8e51.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">935e6487c5f10f2176cd18ef5933e974be8d8e51</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> derived class that compliments the Windows Communication Foundation (WCF) REST programming model.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> klasy, która compliments modelu programowania REST Windows Communication Foundation (WCF).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> znajdzie żadnych punktów końcowych w opisie usługi automatycznie tworzy domyślny punkt końcowy pod adresem podstawowej usługi dla protokołu HTTP i HTTPS podstawowa adresów.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address.</source>
          <target state="translated">Punkt końcowy nie tworzy automatycznie, jeśli użytkownik skonfigurował punkt końcowy jawnie na adres podstawowy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatycznie konfiguruje powiązanie punktu końcowego do pracy z skojarzone ustawienia zabezpieczeń Internet Information Services (IIS) w bezpiecznym katalogu wirtualnego.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>When creating a default HTTP endpoint, the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.</source>
          <target state="translated">Podczas tworzenia punktu końcowego HTTP domyślne <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> również wyłącza strona pomocy HTTP oraz funkcje GET Web Services Description Language (WSDL), aby punkt końcowy metadanych nie zakłóca domyślny punkt końcowy HTTP.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>In addition, the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> class adds the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> to all endpoints that do not already have the behavior and that have a <ph id="ph3">&lt;xref:System.ServiceModel.Configuration.WebMessageEncodingElement&gt;</ph>.</source>
          <target state="translated">Ponadto <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> klasa dodaje <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> do wszystkich punktów końcowych, które nie mają już zachowanie i mają <ph id="ph3">&lt;xref:System.ServiceModel.Configuration.WebMessageEncodingElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatically configures the appropriate content type mapper for the binding.</source>
          <target state="translated">Jeśli wszystkie operacje w usłudze albo pusta HTTP żądania organów lub biznesowych w radzeniu sobie z treści żądania HTTP jako strumienia, a następnie <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatycznie konfiguruje mapowania odpowiedni typ zawartości dla wiązania.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> class to host a service that makes use of the WCF REST programming model.</source>
          <target state="translated">Poniższy przykład przedstawia użycie <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> klasy do obsługi usługi, która sprawia, że korzystanie z modelu programowania REST usługi WCF.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>A service instance to be used as the singleton instance.</source>
          <target state="translated">Wystąpienie usługi ma być używany jako pojedyncze wystąpienie.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The base address of the service.</source>
          <target state="translated">Adres podstawowy usługi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> class with the specified singleton server instance and base address.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> klasy określonego pojedynczego wystąpienia wystąpienia i podstawowy adres serwera.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The <ph id="ph1">`baseAddresses`</ph> parameter can consist of one or more base addresses.</source>
          <target state="translated"><ph id="ph1">`baseAddresses`</ph> Parametru może składać się z co najmniej jeden adres podstawowy.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The following example shows how to call this constructor.</source>
          <target state="translated">Poniższy przykład przedstawia sposób wywołania tego konstruktora.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The service type.</source>
          <target state="translated">Typ usługi.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The base address of the service.</source>
          <target state="translated">Adres podstawowy usługi.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> class with the specified service type and base address.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> klasy z usługi określonego typu i podstawowy adres.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The <ph id="ph1">`baseAddresses`</ph> parameter can consist of one or more base addresses.</source>
          <target state="translated"><ph id="ph1">`baseAddresses`</ph> Parametru może składać się z co najmniej jeden adres podstawowy.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The following example shows how to call this constructor.</source>
          <target state="translated">Poniższy przykład przedstawia sposób wywołania tego konstruktora.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source>Called when the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> instance opens.</source>
          <target state="translated">Wywoływane, gdy <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> wystąpienie zostanie otwarta.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source>The following occurs when this method is called:</source>
          <target state="translated">Następujące występuje, gdy ta metoda jest wywoływana:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> finds no endpoints in the service description, it creates a default endpoint at the service's base address.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> znajdzie żadnych punktów końcowych w opisie usługi tworzy domyślny punkt końcowy na adres podstawowy usługi.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatycznie wyłącza strona pomocy protokołu HTTP i pobrać WSDL funkcji tak, aby punkt końcowy metadanych nie zakłóca domyślny punkt końcowy HTTP.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> checks all endpoints that use the <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> to see if they have the required <ph id="ph3">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> sprawdza wszystkie punkty końcowe, które używają <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> czy mają one wymaganych <ph id="ph3">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source>If not present, <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> adds the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> for the endpoint.</source>
          <target state="translated">Jeśli nie istnieje <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> dodaje <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> dla punktu końcowego.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> konfiguruje powiązanie punktu końcowego do pracy z skojarzone ustawienia zabezpieczeń internetowych usług informacyjnych w bezpiecznej katalogu wirtualnego.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>