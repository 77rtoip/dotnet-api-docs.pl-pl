<Type Name="WebServiceHost" FullName="System.ServiceModel.Web.WebServiceHost">
  <TypeSignature Language="C#" Value="public class WebServiceHost : System.ServiceModel.ServiceHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebServiceHost extends System.ServiceModel.ServiceHost" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Web.WebServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class WebServiceHost&#xA;Inherits ServiceHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebServiceHost : System::ServiceModel::ServiceHost" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="501c3-101">A <see cref="T:System.ServiceModel.ServiceHost" /> klasy, która compliments modelu programowania REST Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="501c3-101">A <see cref="T:System.ServiceModel.ServiceHost" /> derived class that compliments the Windows Communication Foundation (WCF) REST programming model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="501c3-102">Jeśli <xref:System.ServiceModel.Web.WebServiceHost> znajdzie żadnych punktów końcowych w opisie usługi automatycznie tworzy domyślny punkt końcowy pod adresem podstawowej usługi dla protokołu HTTP i HTTPS podstawowa adresów.</span><span class="sxs-lookup"><span data-stu-id="501c3-102">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses.</span></span> <span data-ttu-id="501c3-103">Punkt końcowy nie tworzy automatycznie, jeśli użytkownik skonfigurował punkt końcowy jawnie na adres podstawowy.</span><span class="sxs-lookup"><span data-stu-id="501c3-103">It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address.</span></span> <span data-ttu-id="501c3-104"><xref:System.ServiceModel.Web.WebServiceHost> automatycznie konfiguruje powiązanie punktu końcowego do pracy z skojarzone ustawienia zabezpieczeń Internet Information Services (IIS) w bezpiecznym katalogu wirtualnego.</span><span class="sxs-lookup"><span data-stu-id="501c3-104"><xref:System.ServiceModel.Web.WebServiceHost> automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.</span></span>  
  
 <span data-ttu-id="501c3-105">Podczas tworzenia punktu końcowego HTTP domyślne <xref:System.ServiceModel.Web.WebServiceHost> również wyłącza strona pomocy HTTP oraz funkcje GET Web Services Description Language (WSDL), aby punkt końcowy metadanych nie zakłóca domyślny punkt końcowy HTTP.</span><span class="sxs-lookup"><span data-stu-id="501c3-105">When creating a default HTTP endpoint, the <xref:System.ServiceModel.Web.WebServiceHost> also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
 <span data-ttu-id="501c3-106">Ponadto <xref:System.ServiceModel.Web.WebServiceHost> klasa dodaje <xref:System.ServiceModel.Description.WebHttpBehavior> do wszystkich punktów końcowych, które nie mają już zachowanie i mają <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</span><span class="sxs-lookup"><span data-stu-id="501c3-106">In addition, the <xref:System.ServiceModel.Web.WebServiceHost> class adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to all endpoints that do not already have the behavior and that have a <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</span></span> <span data-ttu-id="501c3-107">Jeśli wszystkie operacje w usłudze albo pusta HTTP żądania organów lub biznesowych w radzeniu sobie z treści żądania HTTP jako strumienia, a następnie <xref:System.ServiceModel.Web.WebServiceHost> automatycznie konfiguruje mapowania odpowiedni typ zawartości dla wiązania.</span><span class="sxs-lookup"><span data-stu-id="501c3-107">If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the <xref:System.ServiceModel.Web.WebServiceHost> automatically configures the appropriate content type mapper for the binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="501c3-108">Poniższy przykład przedstawia użycie <xref:System.ServiceModel.Web.WebServiceHost> klasy do obsługi usługi, która sprawia, że korzystanie z modelu programowania REST usługi WCF.</span><span class="sxs-lookup"><span data-stu-id="501c3-108">The following example shows how to use the <xref:System.ServiceModel.Web.WebServiceHost> class to host a service that makes use of the WCF REST programming model.</span></span>  
  
 [!code-csharp[WebServiceHost#0](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/program.cs#0)]
 [!code-vb[WebServiceHost#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="501c3-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Web.WebServiceHost" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="501c3-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="501c3-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Web.WebServiceHost" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="501c3-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance"><span data-ttu-id="501c3-111">Wystąpienie usługi ma być używany jako pojedyncze wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="501c3-111">A service instance to be used as the singleton instance.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="501c3-112">Adres podstawowy usługi.</span><span class="sxs-lookup"><span data-stu-id="501c3-112">The base address of the service.</span></span></param>
        <summary><span data-ttu-id="501c3-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Web.WebServiceHost" /> klasy określonego pojedynczego wystąpienia wystąpienia i podstawowy adres serwera.</span><span class="sxs-lookup"><span data-stu-id="501c3-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified singleton server instance and base address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="501c3-114">`baseAddresses` Parametru może składać się z co najmniej jeden adres podstawowy.</span><span class="sxs-lookup"><span data-stu-id="501c3-114">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="501c3-115">Poniższy przykład przedstawia sposób wywołania tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="501c3-115">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#1)]
 [!code-vb[WebServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="501c3-116">Typ usługi.</span><span class="sxs-lookup"><span data-stu-id="501c3-116">The service type.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="501c3-117">Adres podstawowy usługi.</span><span class="sxs-lookup"><span data-stu-id="501c3-117">The base address of the service.</span></span></param>
        <summary><span data-ttu-id="501c3-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Web.WebServiceHost" /> klasy z usługi określonego typu i podstawowy adres.</span><span class="sxs-lookup"><span data-stu-id="501c3-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified service type and base address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="501c3-119">`baseAddresses` Parametru może składać się z co najmniej jeden adres podstawowy.</span><span class="sxs-lookup"><span data-stu-id="501c3-119">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="501c3-120">Poniższy przykład przedstawia sposób wywołania tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="501c3-120">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#2](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#2)]
 [!code-vb[WebServiceHost#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="501c3-121">Wywoływane, gdy <see cref="T:System.ServiceModel.Web.WebServiceHost" /> wystąpienie zostanie otwarta.</span><span class="sxs-lookup"><span data-stu-id="501c3-121">Called when the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> instance opens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="501c3-122">Następujące występuje, gdy ta metoda jest wywoływana:</span><span class="sxs-lookup"><span data-stu-id="501c3-122">The following occurs when this method is called:</span></span>  
  
1.  <span data-ttu-id="501c3-123">Jeśli <xref:System.ServiceModel.Web.WebServiceHost> znajdzie żadnych punktów końcowych w opisie usługi tworzy domyślny punkt końcowy na adres podstawowy usługi.</span><span class="sxs-lookup"><span data-stu-id="501c3-123">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it creates a default endpoint at the service's base address.</span></span> <span data-ttu-id="501c3-124"><xref:System.ServiceModel.Web.WebServiceHost> automatycznie wyłącza strona pomocy protokołu HTTP i pobrać WSDL funkcji tak, aby punkt końcowy metadanych nie zakłóca domyślny punkt końcowy HTTP.</span><span class="sxs-lookup"><span data-stu-id="501c3-124"><xref:System.ServiceModel.Web.WebServiceHost> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
2.  <span data-ttu-id="501c3-125"><xref:System.ServiceModel.Web.WebServiceHost> sprawdza wszystkie punkty końcowe, które używają <xref:System.ServiceModel.WebHttpBinding> czy mają one wymaganych <xref:System.ServiceModel.Description.WebHttpBehavior>.</span><span class="sxs-lookup"><span data-stu-id="501c3-125"><xref:System.ServiceModel.Web.WebServiceHost> checks all endpoints that use the <xref:System.ServiceModel.WebHttpBinding> to see if they have the required <xref:System.ServiceModel.Description.WebHttpBehavior>.</span></span> <span data-ttu-id="501c3-126">Jeśli nie istnieje <xref:System.ServiceModel.Web.WebServiceHost> dodaje <xref:System.ServiceModel.Description.WebHttpBehavior> dla punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="501c3-126">If not present, <xref:System.ServiceModel.Web.WebServiceHost> adds the <xref:System.ServiceModel.Description.WebHttpBehavior> for the endpoint.</span></span>  
  
3.  <span data-ttu-id="501c3-127"><xref:System.ServiceModel.Web.WebServiceHost> konfiguruje powiązanie punktu końcowego do pracy z skojarzone ustawienia zabezpieczeń internetowych usług informacyjnych w bezpiecznej katalogu wirtualnego.</span><span class="sxs-lookup"><span data-stu-id="501c3-127"><xref:System.ServiceModel.Web.WebServiceHost> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>