<Type Name="CodeAccessPermission" FullName="System.Security.CodeAccessPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1381ae7784396c7037e78007904cf10bb8a3ac86" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56788797" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeAccessPermission : System.Security.IPermission, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CodeAccessPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.CodeAccessPermission" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeAccessPermission&#xA;Implements IPermission, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeAccessPermission abstract : System::Security::IPermission, System::Security::IStackWalk" />
  <TypeSignature Language="F#" Value="type CodeAccessPermission = class&#xA;    interface IPermission&#xA;    interface ISecurityEncodable&#xA;    interface IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ef30b-101">Definiuje wewnętrzna struktura wszystkie uprawnienia dostępu kodu.</span><span class="sxs-lookup"><span data-stu-id="ef30b-101">Defines the underlying structure of all code access permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-102">Uprawnienia dostępu kodu Użyj przeszukiwania stosu, aby upewnić się, że wszystkie obiekty wywołujące kodu przyznano uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-102">Code access permissions use a stack walk to ensure that all callers of the code have been granted a permission.</span></span> <span data-ttu-id="ef30b-103">Jeśli jest obiektem uprawień `null`, taka sama jak obiekt uprawnień ze stanem zapewniona jest obsługa <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-103">If a permission object is `null`, it is handled the same as a permission object with the state <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ef30b-104">Stos wywołań jest zazwyczaj reprezentowany jako rośnie, tak, aby metody wyżej w stosie wywołań mogą wywoływać metod niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="ef30b-104">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="ef30b-105">Obiektów dziedziczących z <xref:System.Security.CodeAccessPermission> klasy muszą otrzymać pełne zaufanie do poprawnego działania jako uprawnienia rozszerzanie infrastruktura zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="ef30b-105">Inheritors of the <xref:System.Security.CodeAccessPermission> class must be granted full trust to function correctly as permissions extending the security infrastructure.</span></span> <span data-ttu-id="ef30b-106">Aby określić, że obiektów dziedziczących są w pełni zaufane, <xref:System.Security.CodeAccessPermission> problemów <xref:System.Security.Permissions.SecurityAction.InheritanceDemand> dla <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence>  =  `true` i <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy>  =  `true`.</span><span class="sxs-lookup"><span data-stu-id="ef30b-106">To determine that the inheritors are fully trusted, <xref:System.Security.CodeAccessPermission> issues an <xref:System.Security.Permissions.SecurityAction.InheritanceDemand> for <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence> = `true` and <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy> = `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef30b-107">Poniższy przykład kodu pokazuje uprawnienia pochodną <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="ef30b-107">The following code example shows a permission derived from the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#1)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#1)]
 [!code-vb[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="ef30b-108">Aby uzyskać możliwość obiektów dziedziczących Podaj dowód i wyświetlanie i modyfikowanie zasad.</span><span class="sxs-lookup"><span data-stu-id="ef30b-108">for the ability of inheritors to provide evidence and view and modify policy.</span></span> <span data-ttu-id="ef30b-109">Powiązane wyliczenia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />, <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-109">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />, <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</span></span></permission>
    <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-110">Przy dziedziczeniu z <see cref="T:System.Security.CodeAccessPermission" />, należy także zaimplementować <see cref="T:System.Security.Permissions.IUnrestrictedPermission" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ef30b-110">When you inherit from <see cref="T:System.Security.CodeAccessPermission" />, you must also implement the <see cref="T:System.Security.Permissions.IUnrestrictedPermission" /> interface.</span></span>  
  
<span data-ttu-id="ef30b-111">Następujące <see cref="T:System.Security.CodeAccessPermission" /> musi zostać zastąpiona elementów członkowskich: <see cref="M:System.Security.CodeAccessPermission.Copy" />, <see cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.ToXml" />, <see cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />, i <see cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-111">The following <see cref="T:System.Security.CodeAccessPermission" /> members must be overridden: <see cref="M:System.Security.CodeAccessPermission.Copy" />, <see cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.ToXml" />, <see cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />, and <see cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />.</span></span>  
  
<span data-ttu-id="ef30b-112">Należy także zdefiniować Konstruktor, który pobiera <see cref="T:System.Security.Permissions.PermissionState" /> jako jedynym parametrem.</span><span class="sxs-lookup"><span data-stu-id="ef30b-112">You must also define a constructor that takes a <see cref="T:System.Security.Permissions.PermissionState" /> as its only parameter.</span></span>  
  
<span data-ttu-id="ef30b-113">Należy najpierw zastosować <see cref="T:System.SerializableAttribute" /> atrybutów do klasy, która dziedziczy po elemencie <see cref="T:System.Security.CodeAccessPermission" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-113">You must apply the <see cref="T:System.SerializableAttribute" /> attribute to a class that inherits from <see cref="T:System.Security.CodeAccessPermission" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeAccessPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeAccessPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.CodeAccessPermission" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ef30b-114">Initializes a new instance of the <see cref="T:System.Security.CodeAccessPermission" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-115">Ten konstruktor jest wywoływana, aby zainicjować stanu w typie, zawsze wtedy, gdy tworzone jest wystąpienie klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ef30b-115">This constructor is called to initialize state in the type whenever an instance of the derived class is created.</span></span> <span data-ttu-id="ef30b-116">Mimo że ten konstruktor może jawnie wywołać w deklaracji konstruktora w konstruktorze klasy pochodnej, nie jest to zazwyczaj konieczne; Większość kompilatorów automatycznie wygeneruje wywołanie dla Ciebie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-116">Although you can explicitly call this constructor in the constructor declaration of the derived class constructor, this is not usually necessary; most compilers will automatically generate the call for you.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit&#xA;override this.Assert : unit -&gt; unit" Usage="codeAccessPermission.Assert " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-117">Deklaruje, że kod wywołujący może uzyskać dostępu do zasobu, chronione przez żądanie uprawnień za pomocą kodu, który wywołuje tę metodę, nawet wtedy, gdy wyżej w stosie wywołań nie przyznano uprawnień dostępu do zasobu.</span><span class="sxs-lookup"><span data-stu-id="ef30b-117">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span></span> <span data-ttu-id="ef30b-118">Za pomocą <see cref="M:System.Security.CodeAccessPermission.Assert" /> może prowadzić do problemów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="ef30b-118">Using <see cref="M:System.Security.CodeAccessPermission.Assert" /> can create security issues.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-119">Stos wywołań jest zazwyczaj reprezentowany jako rośnie, tak, aby metody wyżej w stosie wywołań mogą wywoływać metod niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="ef30b-119">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="ef30b-120">Wywoływanie <xref:System.Security.CodeAccessPermission.Assert%2A> zapobiega stosów, pochodzących z niższych stos wywołań z przejściem na górę stosu wywołań poza kod, który wywołuje tę metodę.</span><span class="sxs-lookup"><span data-stu-id="ef30b-120">Calling <xref:System.Security.CodeAccessPermission.Assert%2A> prevents a stack walk originating lower in the call stack from proceeding up the call stack beyond the code that calls this method.</span></span> <span data-ttu-id="ef30b-121">W związku z tym nawet jeśli obiekty wywołujące wyżej na stosie wywołań, nie masz wymaganych uprawnień do uzyskania dostępu do zasobu, są nadal do niego dostęp za pośrednictwem kodu, który wywołuje tę metodę w niezbędnych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ef30b-121">Therefore, even if callers higher on the call stack do not have the requisite permissions to access a resource, they can still access it through the code that calls this method on the necessary permission.</span></span> <span data-ttu-id="ef30b-122">Potwierdzenie obowiązuje tylko wtedy, gdy kod wywołuje <xref:System.Security.CodeAccessPermission.Assert%2A> przekazuje sprawdzenia zabezpieczeń dla uprawnień, że jest ona potwierdzające.</span><span class="sxs-lookup"><span data-stu-id="ef30b-122">An assertion is effective only if the code that calls <xref:System.Security.CodeAccessPermission.Assert%2A> passes the security check for the permission that it is asserting.</span></span>  
  
 <span data-ttu-id="ef30b-123">Wywołanie <xref:System.Security.CodeAccessPermission.Assert%2A> jest efektywne, dopóki kod wywołujący powraca do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="ef30b-123">The call to <xref:System.Security.CodeAccessPermission.Assert%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="ef30b-124">Tylko jeden <xref:System.Security.CodeAccessPermission.Assert%2A> może być aktywne w ramce.</span><span class="sxs-lookup"><span data-stu-id="ef30b-124">Only one <xref:System.Security.CodeAccessPermission.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="ef30b-125">Próba wywołania <xref:System.Security.CodeAccessPermission.Assert%2A> podczas aktywnego <xref:System.Security.CodeAccessPermission.Assert%2A> istnieje w ramce skutkuje <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-125">An attempt to call <xref:System.Security.CodeAccessPermission.Assert%2A> when an active <xref:System.Security.CodeAccessPermission.Assert%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="ef30b-126">Wywołaj <xref:System.Security.CodeAccessPermission.RevertAssert%2A> lub <xref:System.Security.CodeAccessPermission.RevertAll%2A> można usunąć aktywnego <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-126">Call <xref:System.Security.CodeAccessPermission.RevertAssert%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span>  
  
 <span data-ttu-id="ef30b-127"><xref:System.Security.CodeAccessPermission.Assert%2A> jest ignorowany dla uprawnień nie udzielić, ponieważ żądanie dla tego uprawnienia nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="ef30b-127"><xref:System.Security.CodeAccessPermission.Assert%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="ef30b-128">Jednak jeśli niżej w stosie wywołań kod wywołuje <xref:System.Security.CodeAccessPermission.Demand%2A> dla tego uprawnienia <xref:System.Security.SecurityException> jest zgłaszany, gdy przeszukiwania stosu osiągnie kod, który próbowano wywołania <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-128">However, if code lower on the call stack calls <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="ef30b-129">Dzieje się tak, ponieważ kod, który wywołuje <xref:System.Security.CodeAccessPermission.Assert%2A> nie udzielono uprawnień, mimo że aplikacja próbowała <xref:System.Security.CodeAccessPermission.Assert%2A> go.</span><span class="sxs-lookup"><span data-stu-id="ef30b-129">This happens because the code that called <xref:System.Security.CodeAccessPermission.Assert%2A> has not been granted the permission, even though it tried to <xref:System.Security.CodeAccessPermission.Assert%2A> it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ef30b-130">Ponieważ wywołanie <xref:System.Security.CodeAccessPermission.Assert%2A> usuwa wymóg, że wszystkie możesz pisać kod w łańcuch wywołań muszą mieć uprawnienie dostępu do określonego zasobu, można otworzyć się problemy z zabezpieczeniami, jeśli niepoprawnie lub niewłaściwie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-130">Because calling <xref:System.Security.CodeAccessPermission.Assert%2A> removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security issues if used incorrectly or inappropriately.</span></span> <span data-ttu-id="ef30b-131">W związku z tym należy używać ostrożnie doskonałe.</span><span class="sxs-lookup"><span data-stu-id="ef30b-131">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ef30b-132">Kod wywołujący nie ma <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-132">The calling code does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span></span>  
  
<span data-ttu-id="ef30b-133">—lub—</span><span class="sxs-lookup"><span data-stu-id="ef30b-133">-or-</span></span> 
<span data-ttu-id="ef30b-134">Istnieje już aktywna <see cref="M:System.Security.CodeAccessPermission.Assert" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="ef30b-134">There is already an active <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ef30b-135">Aby uzyskać możliwość wywoływania <see cref="M:System.Security.CodeAccessPermission.Assert" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-135">for the ability to call <see cref="M:System.Security.CodeAccessPermission.Assert" />.</span></span> <span data-ttu-id="ef30b-136">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /></span><span class="sxs-lookup"><span data-stu-id="ef30b-136">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-137">Nie można przesłonić tę metodę.</span><span class="sxs-lookup"><span data-stu-id="ef30b-137">You cannot override this method.</span></span></para></block>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md"><span data-ttu-id="ef30b-138">Korzystanie z metody Assert</span><span class="sxs-lookup"><span data-stu-id="ef30b-138">Using the Assert Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public abstract System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission" Usage="codeAccessPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-139">Po zaimplementowaniu w klasie pochodnej, tworzy i zwraca identyczną kopię bieżącego obiektu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ef30b-139">When implemented by a derived class, creates and returns an identical copy of the current permission object.</span></span></summary>
        <returns><span data-ttu-id="ef30b-140">Kopię bieżącego obiektu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ef30b-140">A copy of the current permission object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-141">Kopię obiektu uprawnienie reprezentuje taki sam dostęp do zasobów jako oryginalnego obiektu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ef30b-141">A copy of a permission object represents the same access to resources as the original permission object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef30b-142">Poniższy przykład kodu pokazuje nadpisanie <xref:System.Security.CodeAccessPermission.Copy%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef30b-142">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Copy%2A> method.</span></span> <span data-ttu-id="ef30b-143">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="ef30b-143">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#2)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#2)]
 [!code-vb[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-144">Należy przesłonić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ef30b-144">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="codeAccessPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-145">Wymusza <see cref="T:System.Security.SecurityException" /> w czasie wykonywania, jeśli wszystkie obiekty wywołujące wyżej w stosie wywołań nie przyznano uprawnienia określone przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-145">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permission specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-146">Ta metoda jest zwykle używana przez bezpieczne biblioteki, aby upewnić się, że obiekty wywołujące ma uprawnienia do uzyskania dostępu do zasobu.</span><span class="sxs-lookup"><span data-stu-id="ef30b-146">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="ef30b-147">Na przykład wywołuje klasę pliku w bibliotece bezpiecznych klasy <xref:System.Security.CodeAccessPermission.Demand%2A> dla niezbędnych <xref:System.Security.Permissions.FileIOPermission> przed przystąpieniem do wykonywania operacji na pliku żądanego przez obiekt wywołujący.</span><span class="sxs-lookup"><span data-stu-id="ef30b-147">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="ef30b-148">Uprawnienia kod, który wywołuje tę metodę, nie będą badane; Sprawdzanie zaczyna się od bezpośredniego obiektu wywołującego kod i przechodzi w górę stosu.</span><span class="sxs-lookup"><span data-stu-id="ef30b-148">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="ef30b-149">Stos wywołań jest zazwyczaj reprezentowany jako rośnie, tak, aby metody wyżej w stosie wywołań mogą wywoływać metod niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="ef30b-149">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="ef30b-150"><xref:System.Security.CodeAccessPermission.Demand%2A> powiedzie się tylko wtedy, gdy nie <xref:System.Security.SecurityException> jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ef30b-150"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ef30b-151">Obiekt wywołujący wyżej w stosie wywołań nie ma uprawnienia określone przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-151">A caller higher in the call stack does not have the permission specified by the current instance.</span></span>  
  
<span data-ttu-id="ef30b-152">—lub—</span><span class="sxs-lookup"><span data-stu-id="ef30b-152">-or-</span></span> 
<span data-ttu-id="ef30b-153">Obiekt wywołujący wyżej w stosie wywołań została wywołana <see cref="M:System.Security.CodeAccessPermission.Deny" /> dla bieżącego obiektu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ef30b-153">A caller higher in the call stack has called <see cref="M:System.Security.CodeAccessPermission.Deny" /> on the current permission object.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-154">Nie można przesłonić tę metodę.</span><span class="sxs-lookup"><span data-stu-id="ef30b-154">You cannot override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit&#xA;override this.Deny : unit -&gt; unit" Usage="codeAccessPermission.Deny " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Deny is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-155">Uniemożliwia wywołującym wyżej w stosie wywołań przy użyciu kodu, który wywołuje tę metodę, aby uzyskać dostęp do zasobu, określony przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-155">Prevents callers higher in the call stack from using the code that calls this method to access the resource specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ef30b-156"><xref:System.Security.CodeAccessPermission.Deny%2A> Metoda powinna służyć tylko po to, aby chronić zasoby przed przypadkowym dostępem przez w pełni zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="ef30b-156">The <xref:System.Security.CodeAccessPermission.Deny%2A> method should be used only to protect resources from accidental access by fully trusted code.</span></span> <span data-ttu-id="ef30b-157">Nie można stosować do ochrony zasobów z zamierzone nieuprawnione użycie przez niezaufany kod.</span><span class="sxs-lookup"><span data-stu-id="ef30b-157">It should not be used to protect resources from intentional misuse by untrusted code.</span></span> <span data-ttu-id="ef30b-158">Na przykład jeśli metoda `A` problemów <xref:System.Security.CodeAccessPermission.Deny%2A> uprawnień, a następnie wywołuje metodę `B`, — Metoda `B` overtly można zastąpić <xref:System.Security.CodeAccessPermission.Deny%2A> wydając <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-158">For example, if method `A` issues a <xref:System.Security.CodeAccessPermission.Deny%2A> for a permission and then calls method `B`, method `B` can overtly override the <xref:System.Security.CodeAccessPermission.Deny%2A> by issuing an <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="ef30b-159">Metoda wywoływana jest zawsze wyżej w stosie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-159">The called method is always higher in the stack.</span></span> <span data-ttu-id="ef30b-160">W związku z tym jeśli metoda `B` próbuje uzyskać dostęp do chronionego zasobu systemu zabezpieczeń, rozpocznie się sprawdzanie uprawnień z on, ponieważ metoda `B` jest bezpośredniego obiektu wywołującego i przeszukiwania i w dół stosu, aby upewnić się, że istnieje nie <xref:System.Security.CodeAccessPermission.Deny%2A> lub <xref:System.Security.CodeAccessPermission.PermitOnly%2A> niżej w stosie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-160">Therefore, if method `B` tries to access a protected resource, the security system begins checking for permissions with it because method `B` is the immediate caller, and then walks down the stack to confirm that there is no <xref:System.Security.CodeAccessPermission.Deny%2A> or <xref:System.Security.CodeAccessPermission.PermitOnly%2A> lower in the stack.</span></span> <span data-ttu-id="ef30b-161">Metoda `B`, który próbuje uzyskać dostęp do zasobu, można zatrzymać przeszukiwania stosu natychmiast za pomocą <xref:System.Security.CodeAccessPermission.Assert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef30b-161">Method `B`, which is trying to access the resource, can stop the stack walk immediately by using the <xref:System.Security.CodeAccessPermission.Assert%2A> method.</span></span> <span data-ttu-id="ef30b-162">W takim przypadku <xref:System.Security.CodeAccessPermission.Deny%2A> umieszczenie w stosie przez metodę `A` (wywoływania metody) nigdy nie został odnaleziony.</span><span class="sxs-lookup"><span data-stu-id="ef30b-162">In that case, the <xref:System.Security.CodeAccessPermission.Deny%2A> placed on the stack by method `A` (the calling method) is never discovered.</span></span>  
  
 <span data-ttu-id="ef30b-163">Ta metoda uniemożliwia wywołującym wyżej w stosie wywołań uzyskiwania dostępu do chronionego zasobu za pomocą kodu, który wywołuje tę metodę, nawet wtedy, gdy te obiekty wywołujące przyznano uprawnienia dostępu do niego.</span><span class="sxs-lookup"><span data-stu-id="ef30b-163">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="ef30b-164">Stos wywołań jest zazwyczaj reprezentowany jako rośnie, tak, aby metody wyżej w stosie wywołań mogą wywoływać metod niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="ef30b-164">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="ef30b-165"><xref:System.Security.CodeAccessPermission.Deny%2A> można ograniczyć odpowiedzialność programisty lub zapobiec problemom przypadkowym zabezpieczeń, ponieważ zapobiega metodę, która wywołuje <xref:System.Security.CodeAccessPermission.Deny%2A> używany w celu dostępu do zasobów chronionych przez odmowy uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ef30b-165"><xref:System.Security.CodeAccessPermission.Deny%2A> can limit the liability of the programmer or help prevent accidental security issues because it helps prevent the method that calls <xref:System.Security.CodeAccessPermission.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="ef30b-166">Wywołuje metodę <xref:System.Security.CodeAccessPermission.Deny%2A> na uprawnienia i jeśli <xref:System.Security.CodeAccessPermission.Demand%2A> dla tego uprawnienia, zostanie wywołany przez obiekt wywołujący niżej w stosie wywołań, sprawdzanie zabezpieczeń nie powiedzie się po osiągnięciu <xref:System.Security.CodeAccessPermission.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-166">If a method calls <xref:System.Security.CodeAccessPermission.Deny%2A> on a permission, and if a <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check will fail when it reaches the <xref:System.Security.CodeAccessPermission.Deny%2A>.</span></span>  
  
 <span data-ttu-id="ef30b-167">Wywołanie <xref:System.Security.CodeAccessPermission.Deny%2A> jest efektywne, dopóki kod wywołujący powraca do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="ef30b-167">The call to <xref:System.Security.CodeAccessPermission.Deny%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="ef30b-168">Tylko jeden <xref:System.Security.CodeAccessPermission.Deny%2A> może być aktywne w ramce.</span><span class="sxs-lookup"><span data-stu-id="ef30b-168">Only one <xref:System.Security.CodeAccessPermission.Deny%2A> can be active on a frame.</span></span> <span data-ttu-id="ef30b-169">Próba wywołania <xref:System.Security.CodeAccessPermission.Deny%2A> podczas aktywnego <xref:System.Security.CodeAccessPermission.Deny%2A> istnieje w ramce skutkuje <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-169">An attempt to call <xref:System.Security.CodeAccessPermission.Deny%2A> when an active <xref:System.Security.CodeAccessPermission.Deny%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="ef30b-170">Wywołaj <xref:System.Security.CodeAccessPermission.RevertDeny%2A> lub <xref:System.Security.CodeAccessPermission.RevertAll%2A> można usunąć aktywnego <xref:System.Security.CodeAccessPermission.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-170">Call <xref:System.Security.CodeAccessPermission.RevertDeny%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.Deny%2A>.</span></span> <span data-ttu-id="ef30b-171"><xref:System.Security.CodeAccessPermission.Deny%2A> jest ignorowany dla uprawnień nie udzielić, ponieważ żądanie dla tego uprawnienia nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="ef30b-171"><xref:System.Security.CodeAccessPermission.Deny%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ef30b-172">Istnieje już aktywna <see cref="M:System.Security.CodeAccessPermission.Deny" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="ef30b-172">There is already an active <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-173">Nie można przesłonić tę metodę.</span><span class="sxs-lookup"><span data-stu-id="ef30b-173">You cannot override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="codeAccessPermission.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ef30b-174"><see cref="T:System.Security.CodeAccessPermission" /> Obiekt do porównania z bieżącym <see cref="T:System.Security.CodeAccessPermission" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-174">The <see cref="T:System.Security.CodeAccessPermission" /> object to compare with the current <see cref="T:System.Security.CodeAccessPermission" />.</span></span></param>
        <summary><span data-ttu-id="ef30b-175">Określa, czy określony <see cref="T:System.Security.CodeAccessPermission" /> obiekt jest taki sam do bieżącego <see cref="T:System.Security.CodeAccessPermission" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-175">Determines whether the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />.</span></span></summary>
        <returns><span data-ttu-id="ef30b-176"><see langword="true" /> Jeśli określony <see cref="T:System.Security.CodeAccessPermission" /> obiekt jest taki sam do bieżącego <see cref="T:System.Security.CodeAccessPermission" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-176"><see langword="true" /> if the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-177">Aby uzyskać więcej informacji, zobacz <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-177">For more information, see <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public abstract void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit" Usage="codeAccessPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem"><span data-ttu-id="ef30b-178">Kodowanie XML na potrzeby rekonstrukcji obiektu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="ef30b-178">The XML encoding to use to reconstruct the security object.</span></span></param>
        <summary><span data-ttu-id="ef30b-179">W przypadku przesłonięcia w klasie pochodnej, rekonstruuje obiektu zabezpieczeń przy użyciu określonego stanu z Kodowanie XML.</span><span class="sxs-lookup"><span data-stu-id="ef30b-179">When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-180">Kod niestandardowy, który rozszerza obiekty zabezpieczeń należy zaimplementować <xref:System.Security.CodeAccessPermission.ToXml%2A> i <xref:System.Security.CodeAccessPermission.FromXml%2A> metody w celu dokonania obiekty można kodować zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="ef30b-180">Custom code that extends security objects needs to implement the <xref:System.Security.CodeAccessPermission.ToXml%2A> and <xref:System.Security.CodeAccessPermission.FromXml%2A> methods to make the objects security-encodable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef30b-181">Poniższy przykład kodu pokazuje nadpisanie <xref:System.Security.CodeAccessPermission.FromXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef30b-181">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.FromXml%2A> method.</span></span> <span data-ttu-id="ef30b-182">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="ef30b-182">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#10)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#10)]
 [!code-vb[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef30b-183"><paramref name="elem" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-183">The <paramref name="elem" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef30b-184"><paramref name="elem" /> Parametr zawiera kodowanie XML w przypadku wystąpienia tego samego typu jak bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-184">The <paramref name="elem" /> parameter does not contain the XML encoding for an instance of the same type as the current instance.</span></span>  
  
<span data-ttu-id="ef30b-185">—lub—</span><span class="sxs-lookup"><span data-stu-id="ef30b-185">-or-</span></span> 
<span data-ttu-id="ef30b-186">Numer wersji <paramref name="elem" /> parametr nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="ef30b-186">The version number of the <paramref name="elem" /> parameter is not supported.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-187">Należy przesłonić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ef30b-187">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="codeAccessPermission.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-188">Pobiera wartość skrótu dla <see cref="T:System.Security.CodeAccessPermission" /> obiekt, który jest odpowiedni do użytku w mieszania algorytmów i struktur danych, takich jak Tabela skrótów.</span><span class="sxs-lookup"><span data-stu-id="ef30b-188">Gets a hash code for the <see cref="T:System.Security.CodeAccessPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="ef30b-189">Wartość skrótu dla bieżącego <see cref="T:System.Security.CodeAccessPermission" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ef30b-189">A hash code for the current <see cref="T:System.Security.CodeAccessPermission" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-190">Wartość skrótu dla dwóch wystąpień tego samego uprawnienia mogą się różnić, dlatego wartość skrótu nie należy używać do porównywania dwóch <xref:System.Security.CodeAccessPermission> obiektów.</span><span class="sxs-lookup"><span data-stu-id="ef30b-190">The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.CodeAccessPermission> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public abstract System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="codeAccessPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ef30b-191">Uprawnienie do przecięcia z uprawnieniami bieżącego.</span><span class="sxs-lookup"><span data-stu-id="ef30b-191">A permission to intersect with the current permission.</span></span> <span data-ttu-id="ef30b-192">Należy się tego samego typu jak bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ef30b-192">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="ef30b-193">Po zaimplementowaniu w klasie pochodnej, tworzy i zwraca uprawnienia, które jest częścią bieżącego uprawnienie oraz uprawnienie określoną wspólną.</span><span class="sxs-lookup"><span data-stu-id="ef30b-193">When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="ef30b-194">Nowe uprawnienia, które reprezentuje część wspólną bieżące uprawnienia i określony.</span><span class="sxs-lookup"><span data-stu-id="ef30b-194">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="ef30b-195">Jest to nowe uprawnienie <see langword="null" /> Jeśli część wspólną jest pusta.</span><span class="sxs-lookup"><span data-stu-id="ef30b-195">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-196">Część wspólną dwóch uprawnień jest uprawnień, który opisuje zestaw operacji, które opisują one zarówno we wspólnych.</span><span class="sxs-lookup"><span data-stu-id="ef30b-196">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="ef30b-197">Żądanie, który przekazuje zarówno pierwotnych uprawnień zostaną spełnione część wspólną.</span><span class="sxs-lookup"><span data-stu-id="ef30b-197">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef30b-198">Poniższy przykład kodu pokazuje nadpisanie <xref:System.Security.CodeAccessPermission.Intersect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef30b-198">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Intersect%2A> method.</span></span> <span data-ttu-id="ef30b-199">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="ef30b-199">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#5)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#5)]
 [!code-vb[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef30b-200"><paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest wystąpieniem tej samej klasy jako bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ef30b-200">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-201">Należy przesłonić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ef30b-201">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public abstract bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="codeAccessPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ef30b-202">Uprawnienia, które ma zostać przetestowana dla relacji podzbioru.</span><span class="sxs-lookup"><span data-stu-id="ef30b-202">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="ef30b-203">To uprawnienie musi być tego samego typu jak bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ef30b-203">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="ef30b-204">Po zaimplementowaniu w klasie pochodnej, określa, czy bieżące uprawnienia jest podzbiorem określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-204">When implemented by a derived class, determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="ef30b-205"><see langword="true" /> Jeśli bieżący uprawnienie jest podzbiorem określone uprawnienie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-205"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-206">Bieżące uprawnienia są podzbiorem określone uprawnienie, jeśli bieżące uprawnienia określa zestaw operacji, który jest całkowicie zawarty w określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-206">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="ef30b-207">Na przykład uprawnienia, która reprezentuje dostęp do C:\example.txt stanowią podzbiór zestawu uprawnień, która reprezentuje dostęp do C:\\.</span><span class="sxs-lookup"><span data-stu-id="ef30b-207">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="ef30b-208">Jeśli ta metoda zwraca `true`, bieżące uprawnienia reprezentuje nie uzyskać dostęp do chronionych zasobów niż określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-208">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="ef30b-209">Poniższe instrukcje muszą być `true` dla wszystkich zastąpień <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef30b-209">The following statements are required to be `true` for all overrides of the <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="ef30b-210">*X*, *Y*, i *Z* reprezentowała obiekty uprawnień dostępu do kodu niestandardowego, które nie są puste odwołania *U* reprezentuje uprawnienia dostępu kodu bez ograniczeń i *N* reprezentuje pusty uprawnienia o <xref:System.Security.Permissions.PermissionState> z <xref:System.Security.Permissions.PermissionState.None>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-210">*X*, *Y*, and *Z* represent custom code access permission objects that are not null references, *U* represents an unrestricted code access permission, and *N* represents an empty permission with a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.None>.</span></span>  
  
-   <span data-ttu-id="ef30b-211">*X*. Issubsetof — (*X*) zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="ef30b-211">*X*.IsSubsetOf(*X*) returns `true`.</span></span>  
  
-   <span data-ttu-id="ef30b-212">*X*. Issubsetof — (*Y*) zwraca taką samą wartość jak *Y*. Issubsetof — (*X*) tylko wtedy, gdy *X* i *Y* reprezentują ten sam zestaw uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ef30b-212">*X*.IsSubsetOf(*Y*) returns the same value as *Y*.IsSubsetOf(*X*) if and only if *X* and *Y* represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="ef30b-213">Jeśli *X*. Issubsetof — (*Y*) i *Y*. Issubsetof — (*Z*) zwracają `true`, *X*. Issubsetof — (*Z*) zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="ef30b-213">If *X*.IsSubsetOf(*Y*) and *Y*.IsSubsetOf(*Z*) both return `true`, *X*.IsSubsetOf(*Z*) returns `true`.</span></span>  
  
-   <span data-ttu-id="ef30b-214">*X*. Issubsetof — (*U*) zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="ef30b-214">*X*.IsSubsetOf(*U*) returns `true`.</span></span>  
  
-   <span data-ttu-id="ef30b-215">*X*. Issubsetof — (*N*) zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="ef30b-215">*X*.IsSubsetOf(*N*) returns `false`.</span></span>  
  
-   <span data-ttu-id="ef30b-216">*N*. Issubsetof — (*X*) zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="ef30b-216">*N*.IsSubsetOf(*X*) returns `true`.</span></span>  
  
 <span data-ttu-id="ef30b-217">Jeśli *X* i *Y* reprezentuje kod niestandardowy dostęp do uprawnień obiektów, które są puste odwołania *X*. Issubsetof — (*Y*) zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="ef30b-217">If *X* and *Y* represent custom code access permission objects that are null references, *X*.IsSubsetOf(*Y*) returns `true`.</span></span> <span data-ttu-id="ef30b-218">Jeśli *Z* również ma wartość null, operacja ustawienia złożony *X*. Złożenia (*Y*). Issubsetof — (*Z*) zwraca również wartość `true` ponieważ sumę dwóch uprawnień o wartości null jest uprawnień o wartości null.</span><span class="sxs-lookup"><span data-stu-id="ef30b-218">If *Z* is also null, the compound set operation *X*.Union(*Y*).IsSubsetOf(*Z*) also returns `true` because the union of two null permissions is a null permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef30b-219">Poniższy przykład kodu pokazuje nadpisanie <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef30b-219">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="ef30b-220">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="ef30b-220">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#4)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#4)]
 [!code-vb[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef30b-221"><paramref name="target" /> Parametr nie jest <see langword="null" /> i nie jest tego samego typu jak bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ef30b-221">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-222">Należy przesłonić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ef30b-222">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit&#xA;override this.PermitOnly : unit -&gt; unit" Usage="codeAccessPermission.PermitOnly " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-223">Uniemożliwia wywołującym wyżej w stosie wywołań przy użyciu kodu, który wywołuje tę metodę, aby uzyskiwać dostęp do wszystkich zasobów, z wyjątkiem zasób określony przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-223">Prevents callers higher in the call stack from using the code that calls this method to access all resources except for the resource specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ef30b-224"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> Metoda powinna służyć tylko po to, aby chronić zasoby przed przypadkowym dostępem przez w pełni zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="ef30b-224">The <xref:System.Security.CodeAccessPermission.PermitOnly%2A> method should be used only to protect resources from accidental access by fully trusted code.</span></span> <span data-ttu-id="ef30b-225">Nie można stosować do ochrony zasobów z zamierzone nieuprawnione użycie przez niezaufany kod.</span><span class="sxs-lookup"><span data-stu-id="ef30b-225">It should not be used to protect resources from intentional misuse by untrusted code.</span></span> <span data-ttu-id="ef30b-226">Na przykład jeśli metoda `A` problemów <xref:System.Security.CodeAccessPermission.PermitOnly%2A> uprawnień, a następnie wywołuje metodę `B`, — Metoda `B` overtly można zastąpić <xref:System.Security.CodeAccessPermission.PermitOnly%2A> wydając <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-226">For example, if method `A` issues a <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for a permission and then calls method `B`, method `B` can overtly override the <xref:System.Security.CodeAccessPermission.PermitOnly%2A> by issuing an <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="ef30b-227">Metoda wywoływana jest zawsze wyżej w stosie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-227">The called method is always higher in the stack.</span></span> <span data-ttu-id="ef30b-228">W związku z tym jeśli metoda `B` próbuje uzyskać dostęp do chronionego zasobu systemu zabezpieczeń, rozpocznie się sprawdzanie uprawnień z on, ponieważ metoda `B` jest bezpośredniego obiektu wywołującego i przeszukiwania i w dół stosu, aby upewnić się, że istnieje nie <xref:System.Security.CodeAccessPermission.Deny%2A> lub <xref:System.Security.CodeAccessPermission.PermitOnly%2A> niżej w stosie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-228">Therefore, if method `B` tries to access a protected resource, the security system begins checking for permissions with it because method `B` is the immediate caller, and then walks down the stack to confirm that there is no <xref:System.Security.CodeAccessPermission.Deny%2A> or <xref:System.Security.CodeAccessPermission.PermitOnly%2A> lower in the stack.</span></span> <span data-ttu-id="ef30b-229">Metoda `B`, który próbuje uzyskać dostęp do zasobu, można zatrzymać przeszukiwania stosu natychmiast za pomocą <xref:System.Security.CodeAccessPermission.Assert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef30b-229">Method `B`, which is trying to access the resource, can stop the stack walk immediately by using the <xref:System.Security.CodeAccessPermission.Assert%2A> method.</span></span> <span data-ttu-id="ef30b-230">W takim przypadku <xref:System.Security.CodeAccessPermission.PermitOnly%2A> umieszczenie w stosie przez metodę `A` (wywoływania metody) nigdy nie został odnaleziony.</span><span class="sxs-lookup"><span data-stu-id="ef30b-230">In that case, the <xref:System.Security.CodeAccessPermission.PermitOnly%2A> placed on the stack by method `A` (the calling method) is never discovered.</span></span>  
  
 <span data-ttu-id="ef30b-231"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> jest podobny do <xref:System.Security.CodeAccessPermission.Deny%2A>, oba powodują przeszukiwań stosu niepowodzeniem, jeśli w przeciwnym razie powiedzie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-231"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> is similar to <xref:System.Security.CodeAccessPermission.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="ef30b-232">Różnica jest to, że <xref:System.Security.CodeAccessPermission.Deny%2A> określa uprawnienia, które spowoduje przejście przez stos zakończyć się niepowodzeniem, ale <xref:System.Security.CodeAccessPermission.PermitOnly%2A> określa tylko uprawnienia, które nie powodują przejście przez stos nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="ef30b-232">The difference is that <xref:System.Security.CodeAccessPermission.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.CodeAccessPermission.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span>  
  
 <span data-ttu-id="ef30b-233">Wywołaj tę metodę, aby upewnić się, że Twój kod może służyć do dostępu do określonych zasobów.</span><span class="sxs-lookup"><span data-stu-id="ef30b-233">Call this method to ensure that your code can be used to access only the specified resources.</span></span> <span data-ttu-id="ef30b-234">Wywołanie <xref:System.Security.CodeAccessPermission.PermitOnly%2A> jest efektywne, dopóki kod wywołujący powraca do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="ef30b-234">The call to <xref:System.Security.CodeAccessPermission.PermitOnly%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="ef30b-235">Tylko jeden <xref:System.Security.CodeAccessPermission.PermitOnly%2A> może być aktywne w ramce.</span><span class="sxs-lookup"><span data-stu-id="ef30b-235">Only one <xref:System.Security.CodeAccessPermission.PermitOnly%2A> can be active on a frame.</span></span> <span data-ttu-id="ef30b-236">Próba wywołania <xref:System.Security.CodeAccessPermission.PermitOnly%2A> podczas aktywnego <xref:System.Security.CodeAccessPermission.PermitOnly%2A> istnieje w ramce skutkuje <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-236">An attempt to call <xref:System.Security.CodeAccessPermission.PermitOnly%2A> when an active <xref:System.Security.CodeAccessPermission.PermitOnly%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="ef30b-237">Wywołaj <xref:System.Security.CodeAccessPermission.RevertPermitOnly%2A> lub <xref:System.Security.CodeAccessPermission.RevertAll%2A> można usunąć aktywnego <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-237">Call <xref:System.Security.CodeAccessPermission.RevertPermitOnly%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span></span>  
  
 <span data-ttu-id="ef30b-238"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> jest ignorowany dla uprawnień nie udzielić, ponieważ żądanie dla tego uprawnienia nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="ef30b-238"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="ef30b-239">Jednak jeśli kod niżej w wywołanie stosu później wywołania <xref:System.Security.CodeAccessPermission.Demand%2A> dla tego uprawnienia <xref:System.Security.SecurityException> jest zgłaszany, gdy przeszukiwania stosu osiągnie kod, który próbowano wywołania <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef30b-239">However, if code lower on the call stack later calls <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span></span> <span data-ttu-id="ef30b-240">Jest to spowodowane kod, który wywołuje <xref:System.Security.CodeAccessPermission.PermitOnly%2A> nie udzielono uprawnień, mimo że ona wywoływana <xref:System.Security.CodeAccessPermission.PermitOnly%2A> dla tego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ef30b-240">This is because the code that called <xref:System.Security.CodeAccessPermission.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="ef30b-241">Stos wywołań jest zazwyczaj reprezentowany jako rośnie, tak, aby metody wyżej w stosie wywołań mogą wywoływać metod niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="ef30b-241">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ef30b-242">Istnieje już aktywna <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="ef30b-242">There is already an active <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-243">Nie można przesłonić tę metodę.</span><span class="sxs-lookup"><span data-stu-id="ef30b-243">You cannot override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RevertAll">
      <MemberSignature Language="C#" Value="public static void RevertAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertAll" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAll();" />
      <MemberSignature Language="F#" Value="static member RevertAll : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-244">Powoduje, że wszystkie poprzednie zastąpienia dla bieżącej ramki, który ma zostać usunięty, a nie działają.</span><span class="sxs-lookup"><span data-stu-id="ef30b-244">Causes all previous overrides for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-245">Jeśli istnieją żadne zastąpienia (<xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.Deny%2A>, lub <xref:System.Security.CodeAccessPermission.PermitOnly%2A>) dla bieżącej ramki <xref:System.ExecutionEngineException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="ef30b-245">If there are no overrides (<xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.Deny%2A>, or <xref:System.Security.CodeAccessPermission.PermitOnly%2A>) for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef30b-246">Istnieje nie poprzedniej <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" />, lub <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="ef30b-246">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" />, or <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberSignature Language="F#" Value="static member RevertAssert : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertAssert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-247">Powoduje, że wszystkie poprzednie <see cref="M:System.Security.CodeAccessPermission.Assert" /> dla bieżącej ramki, który ma zostać usunięty, a nie działają.</span><span class="sxs-lookup"><span data-stu-id="ef30b-247">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-248">Jeśli ma nie <xref:System.Security.CodeAccessPermission.Assert%2A> dla bieżącej ramki <xref:System.ExecutionEngineException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="ef30b-248">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef30b-249">Istnieje nie poprzedniej <see cref="M:System.Security.CodeAccessPermission.Assert" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="ef30b-249">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertDeny">
      <MemberSignature Language="C#" Value="public static void RevertDeny ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertDeny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertDeny" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertDeny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertDeny();" />
      <MemberSignature Language="F#" Value="static member RevertDeny : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertDeny " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Deny is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-250">Powoduje, że wszystkie poprzednie <see cref="M:System.Security.CodeAccessPermission.Deny" /> dla bieżącej ramki, który ma zostać usunięty, a nie działają.</span><span class="sxs-lookup"><span data-stu-id="ef30b-250">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-251">Jeśli ma nie <xref:System.Security.CodeAccessPermission.Deny%2A> dla bieżącej ramki <xref:System.ExecutionEngineException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="ef30b-251">If there is no <xref:System.Security.CodeAccessPermission.Deny%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef30b-252">Istnieje nie poprzedniej <see cref="M:System.Security.CodeAccessPermission.Deny" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="ef30b-252">There is no previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertPermitOnly">
      <MemberSignature Language="C#" Value="public static void RevertPermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertPermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertPermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertPermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertPermitOnly();" />
      <MemberSignature Language="F#" Value="static member RevertPermitOnly : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertPermitOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-253">Powoduje, że wszystkie poprzednie <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> dla bieżącej ramki, który ma zostać usunięty, a nie działają.</span><span class="sxs-lookup"><span data-stu-id="ef30b-253">Causes any previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-254">Jeśli ma nie <xref:System.Security.CodeAccessPermission.PermitOnly%2A> dla bieżącej ramki <xref:System.ExecutionEngineException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="ef30b-254">If there is no <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef30b-255">Istnieje nie poprzedniej <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="ef30b-255">There is no previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IPermission.Demand">
      <MemberSignature Language="C#" Value="void IPermission.Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IPermission.Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IPermission#Demand" />
      <MemberSignature Language="VB.NET" Value="Sub Demand () Implements IPermission.Demand" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IPermission.Demand() = System::Security::IPermission::Demand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Assert">
      <MemberSignature Language="C#" Value="void IStackWalk.Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert" />
      <MemberSignature Language="VB.NET" Value="Sub Assert () Implements IStackWalk.Assert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Assert() = System::Security::IStackWalk::Assert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Demand">
      <MemberSignature Language="C#" Value="void IStackWalk.Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand" />
      <MemberSignature Language="VB.NET" Value="Sub Demand () Implements IStackWalk.Demand" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Demand() = System::Security::IStackWalk::Demand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Deny">
      <MemberSignature Language="C#" Value="void IStackWalk.Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny" />
      <MemberSignature Language="VB.NET" Value="Sub Deny () Implements IStackWalk.Deny" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Deny() = System::Security::IStackWalk::Deny;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.PermitOnly">
      <MemberSignature Language="C#" Value="void IStackWalk.PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Sub PermitOnly () Implements IStackWalk.PermitOnly" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.PermitOnly() = System::Security::IStackWalk::PermitOnly;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="codeAccessPermission.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-256">Tworzy i zwraca ciąg reprezentujący bieżący obiekt uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ef30b-256">Creates and returns a string representation of the current permission object.</span></span></summary>
        <returns><span data-ttu-id="ef30b-257">Ciąg reprezentujący bieżący obiekt uprawnień.</span><span class="sxs-lookup"><span data-stu-id="ef30b-257">A string representation of the current permission object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-258">Ta metoda jest przydatna podczas debugowania, gdy zachodzi potrzeba wyświetlenia uprawnień jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="ef30b-258">This method is useful in debugging when you need to display the permission as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public abstract System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement" Usage="codeAccessPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef30b-259">Po przesłonięciu w klasie pochodnej tworzy Kodowanie XML obiektu zabezpieczeń oraz w jego bieżącym stanie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-259">When overridden in a derived class, creates an XML encoding of the security object and its current state.</span></span></summary>
        <returns><span data-ttu-id="ef30b-260">Kodowanie XML obiektu zabezpieczeń, w tym wszelkich informacji o stanie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-260">An XML encoding of the security object, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-261">Kod niestandardowy, który rozszerza obiekty zabezpieczeń należy zaimplementować <xref:System.Security.CodeAccessPermission.ToXml%2A> i <xref:System.Security.CodeAccessPermission.FromXml%2A> metody w celu dokonania obiekty można kodować zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="ef30b-261">Custom code that extends security objects needs to implement the <xref:System.Security.CodeAccessPermission.ToXml%2A> and <xref:System.Security.CodeAccessPermission.FromXml%2A> methods to make the objects security-encodable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef30b-262">Poniższy przykład kodu pokazuje nadpisanie <xref:System.Security.CodeAccessPermission.ToXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef30b-262">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.ToXml%2A> method.</span></span> <span data-ttu-id="ef30b-263">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="ef30b-263">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#11)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#11)]
 [!code-vb[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-264">Należy przesłonić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ef30b-264">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public virtual System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="codeAccessPermission.Union other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ef30b-265">Uprawnienie do łączenia z uprawnieniami bieżącego.</span><span class="sxs-lookup"><span data-stu-id="ef30b-265">A permission to combine with the current permission.</span></span> <span data-ttu-id="ef30b-266">Należy się tego samego typu jak bieżące uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="ef30b-266">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="ef30b-267">Po przesłonięciu w klasie pochodnej tworzy uprawnienia, które jest złożenie bieżące uprawnienia i określony.</span><span class="sxs-lookup"><span data-stu-id="ef30b-267">When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="ef30b-268">Nowe uprawnienie, który reprezentuje sumę bieżące uprawnienia i określony.</span><span class="sxs-lookup"><span data-stu-id="ef30b-268">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef30b-269">Wynik wywołania <xref:System.Security.CodeAccessPermission.Union%2A> uprawnienia, który reprezentuje wszystkie operacje, które są reprezentowane przez bieżące uprawnienia i określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="ef30b-269">The result of a call to <xref:System.Security.CodeAccessPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="ef30b-270">Wszelkie żądania spełniającą albo uprawnienie przekazuje ich Unii.</span><span class="sxs-lookup"><span data-stu-id="ef30b-270">Any demand that passes either permission passes their union.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef30b-271">Poniższy przykład kodu pokazuje nadpisanie <xref:System.Security.CodeAccessPermission.Union%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ef30b-271">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Union%2A> method.</span></span> <span data-ttu-id="ef30b-272">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="ef30b-272">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#12)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#12)]
 [!code-vb[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ef30b-273"><paramref name="other" /> Parametr nie jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-273">The <paramref name="other" /> parameter is not <see langword="null" />.</span></span> <span data-ttu-id="ef30b-274">Ta metoda jest obsługiwana tylko na tym poziomie, gdy przekazywane <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-274">This method is only supported at this level when passed <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef30b-275">Należy przesłonić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ef30b-275">You must override this method in a derived class.</span></span> <span data-ttu-id="ef30b-276">Użytkownik powinien zwrócić kopię uprawnienia, jeśli wartość <paramref name="other" /> parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ef30b-276">You should return a copy of the permission if the value of the <paramref name="other" /> parameter is <see langword="null" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>