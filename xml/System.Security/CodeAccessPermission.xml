<Type Name="CodeAccessPermission" FullName="System.Security.CodeAccessPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="601db96d6568f82c6748112c908cd958d402cf4c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69161838" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeAccessPermission : System.Security.IPermission, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CodeAccessPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.CodeAccessPermission" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeAccessPermission&#xA;Implements IPermission, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeAccessPermission abstract : System::Security::IPermission, System::Security::IStackWalk" />
  <TypeSignature Language="F#" Value="type CodeAccessPermission = class&#xA;    interface IPermission&#xA;    interface ISecurityEncodable&#xA;    interface IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="797d1-101">Definiuje podstawową strukturę wszystkich uprawnień dostępu kodu.</span><span class="sxs-lookup"><span data-stu-id="797d1-101">Defines the underlying structure of all code access permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-102">Uprawnienia dostępu kodu używają przeszukiwania stosu, aby upewnić się, że wszystkie obiekty wywołujące kod uzyskały uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-102">Code access permissions use a stack walk to ensure that all callers of the code have been granted a permission.</span></span> <span data-ttu-id="797d1-103">Jeśli obiekt uprawnień jest `null`, jest obsługiwany w taki sam sposób, jak obiekt uprawnień o stanie. <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="797d1-103">If a permission object is `null`, it is handled the same as a permission object with the state <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="797d1-104">Stos wywołań jest zazwyczaj reprezentowany jako rosnący, więc metody wyższe w metodach wywołania stosu wywołań są niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="797d1-104">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="797d1-105">Dziedziczenia <xref:System.Security.CodeAccessPermission> klasy muszą mieć przyznane pełne zaufanie, aby funkcjonowały prawidłowo jako uprawnienia rozszerzające infrastrukturę zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="797d1-105">Inheritors of the <xref:System.Security.CodeAccessPermission> class must be granted full trust to function correctly as permissions extending the security infrastructure.</span></span> <span data-ttu-id="797d1-106">Aby określić, że dziedziczenia są w pełni zaufane <xref:System.Security.CodeAccessPermission> , <xref:System.Security.Permissions.SecurityAction.InheritanceDemand> wystawia <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy>dla `true` <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence>  =  `true` i  = .</span><span class="sxs-lookup"><span data-stu-id="797d1-106">To determine that the inheritors are fully trusted, <xref:System.Security.CodeAccessPermission> issues an <xref:System.Security.Permissions.SecurityAction.InheritanceDemand> for <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence> = `true` and <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy> = `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="797d1-107">Poniższy przykład kodu pokazuje uprawnienie pochodne od <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="797d1-107">The following code example shows a permission derived from the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#1)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#1)]
 [!code-vb[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="797d1-108">Aby umożliwić dziedziczenie i wyświetlanie i modyfikowanie zasad.</span><span class="sxs-lookup"><span data-stu-id="797d1-108">for the ability of inheritors to provide evidence and view and modify policy.</span></span> <span data-ttu-id="797d1-109">Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />, <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-109">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />, <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</span></span></permission>
    <block subset="none" type="overrides"><para><span data-ttu-id="797d1-110">W przypadku dziedziczenia <see cref="T:System.Security.CodeAccessPermission" />z, należy również <see cref="T:System.Security.Permissions.IUnrestrictedPermission" /> zaimplementować interfejs.</span><span class="sxs-lookup"><span data-stu-id="797d1-110">When you inherit from <see cref="T:System.Security.CodeAccessPermission" />, you must also implement the <see cref="T:System.Security.Permissions.IUnrestrictedPermission" /> interface.</span></span>  
  
<span data-ttu-id="797d1-111">Następujące <see cref="T:System.Security.CodeAccessPermission" /> elementy członkowskie muszą zostać zastąpione <see cref="M:System.Security.CodeAccessPermission.Copy" />: <see cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.ToXml" /> <see cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />,, i <see cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-111">The following <see cref="T:System.Security.CodeAccessPermission" /> members must be overridden: <see cref="M:System.Security.CodeAccessPermission.Copy" />, <see cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.ToXml" />, <see cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />, and <see cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />.</span></span>  
  
<span data-ttu-id="797d1-112">Należy również zdefiniować konstruktora, który przyjmuje <see cref="T:System.Security.Permissions.PermissionState" /> jako jedyny parametr.</span><span class="sxs-lookup"><span data-stu-id="797d1-112">You must also define a constructor that takes a <see cref="T:System.Security.Permissions.PermissionState" /> as its only parameter.</span></span>  
  
<span data-ttu-id="797d1-113">Należy zastosować <see cref="T:System.SerializableAttribute" /> atrybut do klasy, która dziedziczy z <see cref="T:System.Security.CodeAccessPermission" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-113">You must apply the <see cref="T:System.SerializableAttribute" /> attribute to a class that inherits from <see cref="T:System.Security.CodeAccessPermission" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeAccessPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeAccessPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.CodeAccessPermission" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="797d1-114">Initializes a new instance of the <see cref="T:System.Security.CodeAccessPermission" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-115">Ten konstruktor jest wywoływany, aby zainicjować stan w typie za każdym razem, gdy tworzone jest wystąpienie klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="797d1-115">This constructor is called to initialize state in the type whenever an instance of the derived class is created.</span></span> <span data-ttu-id="797d1-116">Chociaż można jawnie wywołać ten Konstruktor w deklaracji konstruktora klasy pochodnej, nie jest to zwykle konieczne. większość kompilatorów automatycznie generuje wywołanie.</span><span class="sxs-lookup"><span data-stu-id="797d1-116">Although you can explicitly call this constructor in the constructor declaration of the derived class constructor, this is not usually necessary; most compilers will automatically generate the call for you.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit&#xA;override this.Assert : unit -&gt; unit" Usage="codeAccessPermission.Assert " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-117">Deklaruje, że kod wywołujący może uzyskać dostęp do zasobu chronionego przez żądanie dostępu za pomocą kodu, który wywołuje tę metodę, nawet jeśli obiekty wywołujące wyższego poziomu stosu nie uzyskały uprawnienia dostępu do zasobu.</span><span class="sxs-lookup"><span data-stu-id="797d1-117">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span></span> <span data-ttu-id="797d1-118">Korzystanie <see cref="M:System.Security.CodeAccessPermission.Assert" /> z programu może spowodować problemy z zabezpieczeniami.</span><span class="sxs-lookup"><span data-stu-id="797d1-118">Using <see cref="M:System.Security.CodeAccessPermission.Assert" /> can create security issues.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-119">Stos wywołań jest zazwyczaj reprezentowany jako rosnący, więc metody wyższe w metodach wywołania stosu wywołań są niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="797d1-119">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="797d1-120">Wywołania <xref:System.Security.CodeAccessPermission.Assert%2A> uniemożliwiają przechodzenie stosu w dół w stosie wywołań w celu przechodzenia przez stos wywołań poza kod, który wywołuje tę metodę.</span><span class="sxs-lookup"><span data-stu-id="797d1-120">Calling <xref:System.Security.CodeAccessPermission.Assert%2A> prevents a stack walk originating lower in the call stack from proceeding up the call stack beyond the code that calls this method.</span></span> <span data-ttu-id="797d1-121">W związku z tym nawet jeśli obiekty wywołujące wyższe na stosie wywołań nie mają wymaganych uprawnień dostępu do zasobu, nadal mogą uzyskać do niego dostęp za pomocą kodu, który wywołuje tę metodę na niezbędnych uprawnieniach.</span><span class="sxs-lookup"><span data-stu-id="797d1-121">Therefore, even if callers higher on the call stack do not have the requisite permissions to access a resource, they can still access it through the code that calls this method on the necessary permission.</span></span> <span data-ttu-id="797d1-122">Potwierdzenie ma zastosowanie tylko wtedy, gdy kod, który <xref:System.Security.CodeAccessPermission.Assert%2A> wywołuje, przekazuje kontrolę zabezpieczeń dla uprawnienia, które jest potwierdzone.</span><span class="sxs-lookup"><span data-stu-id="797d1-122">An assertion is effective only if the code that calls <xref:System.Security.CodeAccessPermission.Assert%2A> passes the security check for the permission that it is asserting.</span></span>  
  
 <span data-ttu-id="797d1-123">Wywołanie <xref:System.Security.CodeAccessPermission.Assert%2A> jest skuteczne do momentu powracania kodu wywołującego do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="797d1-123">The call to <xref:System.Security.CodeAccessPermission.Assert%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="797d1-124">Tylko jeden <xref:System.Security.CodeAccessPermission.Assert%2A> może być aktywny w ramce.</span><span class="sxs-lookup"><span data-stu-id="797d1-124">Only one <xref:System.Security.CodeAccessPermission.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="797d1-125">Próba wywołania <xref:System.Security.CodeAccessPermission.Assert%2A> , gdy element aktywny <xref:System.Security.CodeAccessPermission.Assert%2A> istnieje w ramce, spowoduje wystąpienie elementu <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="797d1-125">An attempt to call <xref:System.Security.CodeAccessPermission.Assert%2A> when an active <xref:System.Security.CodeAccessPermission.Assert%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="797d1-126"><xref:System.Security.CodeAccessPermission.RevertAssert%2A> Wywołaj <xref:System.Security.CodeAccessPermission.RevertAll%2A> lub, aby usunąć <xref:System.Security.CodeAccessPermission.Assert%2A>aktywny.</span><span class="sxs-lookup"><span data-stu-id="797d1-126">Call <xref:System.Security.CodeAccessPermission.RevertAssert%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span>  
  
 <span data-ttu-id="797d1-127"><xref:System.Security.CodeAccessPermission.Assert%2A>jest ignorowany dla uprawnień, które nie zostały przyznane, ponieważ żądanie tego uprawnienia nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="797d1-127"><xref:System.Security.CodeAccessPermission.Assert%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="797d1-128">Jeśli jednak kod niższy od wywołania <xref:System.Security.CodeAccessPermission.Demand%2A> stosu wywołań dla tego uprawnienia <xref:System.Security.SecurityException> , jest generowany, gdy przechodzenie stosu osiągnie kod, który próbował wywołać <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="797d1-128">However, if code lower on the call stack calls <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="797d1-129">Dzieje się tak, ponieważ kod, <xref:System.Security.CodeAccessPermission.Assert%2A> który został wywołany, nie otrzymał uprawnienia, nawet jeśli <xref:System.Security.CodeAccessPermission.Assert%2A> próbował go.</span><span class="sxs-lookup"><span data-stu-id="797d1-129">This happens because the code that called <xref:System.Security.CodeAccessPermission.Assert%2A> has not been granted the permission, even though it tried to <xref:System.Security.CodeAccessPermission.Assert%2A> it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="797d1-130">Ponieważ wywołanie <xref:System.Security.CodeAccessPermission.Assert%2A> usuwa wymaganie, aby cały kod w łańcuchu wywołań musiał otrzymać uprawnienia dostępu do określonego zasobu, można otworzyć problemy z zabezpieczeniami, jeśli są używane nieprawidłowo lub niewłaściwie.</span><span class="sxs-lookup"><span data-stu-id="797d1-130">Because calling <xref:System.Security.CodeAccessPermission.Assert%2A> removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security issues if used incorrectly or inappropriately.</span></span> <span data-ttu-id="797d1-131">W związku z tym powinno być używane z dużą ostrożnością.</span><span class="sxs-lookup"><span data-stu-id="797d1-131">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="797d1-132">Kod wywołujący nie ma <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-132">The calling code does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span></span>  
  
<span data-ttu-id="797d1-133">—lub—</span><span class="sxs-lookup"><span data-stu-id="797d1-133">-or-</span></span> 
<span data-ttu-id="797d1-134">Istnieje już aktywny <see cref="M:System.Security.CodeAccessPermission.Assert" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="797d1-134">There is already an active <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="797d1-135">do wywoływania <see cref="M:System.Security.CodeAccessPermission.Assert" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-135">for the ability to call <see cref="M:System.Security.CodeAccessPermission.Assert" />.</span></span> <span data-ttu-id="797d1-136">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /></span><span class="sxs-lookup"><span data-stu-id="797d1-136">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-137">Nie można zastąpić tej metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-137">You cannot override this method.</span></span></para></block>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md"><span data-ttu-id="797d1-138">Korzystanie z metody Assert</span><span class="sxs-lookup"><span data-stu-id="797d1-138">Using the Assert Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public abstract System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission" Usage="codeAccessPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-139">Po zaimplementowaniu przez klasę pochodną program tworzy i zwraca identyczną kopię bieżącego obiektu uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="797d1-139">When implemented by a derived class, creates and returns an identical copy of the current permission object.</span></span></summary>
        <returns><span data-ttu-id="797d1-140">Kopia bieżącego obiektu uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="797d1-140">A copy of the current permission object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-141">Kopia obiektu uprawnień reprezentuje ten sam dostęp do zasobów co oryginalny obiekt uprawnień.</span><span class="sxs-lookup"><span data-stu-id="797d1-141">A copy of a permission object represents the same access to resources as the original permission object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="797d1-142">Poniższy przykład kodu pokazuje przesłonięcie <xref:System.Security.CodeAccessPermission.Copy%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-142">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Copy%2A> method.</span></span> <span data-ttu-id="797d1-143">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="797d1-143">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#2)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#2)]
 [!code-vb[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-144">Należy zastąpić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="797d1-144">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="codeAccessPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-145"><see cref="T:System.Security.SecurityException" /> Wymusza w czasie wykonywania, jeśli wszystkie obiekty wywołujące wyższe w stosie wywołań nie udzieliły uprawnienia określonego przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-145">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permission specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-146">Ta metoda jest zwykle używana przez bezpieczne biblioteki w celu zapewnienia, że wywołujący mają uprawnienia dostępu do zasobu.</span><span class="sxs-lookup"><span data-stu-id="797d1-146">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="797d1-147">Na przykład Klasa plików w bezpiecznej bibliotece klas wywołuje <xref:System.Security.CodeAccessPermission.Demand%2A> wymagane <xref:System.Security.Permissions.FileIOPermission> przed wykonaniem operacji na plikach zażądanej przez wywołującego.</span><span class="sxs-lookup"><span data-stu-id="797d1-147">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="797d1-148">Uprawnienia kodu, który wywołuje tę metodę, nie są badane; sprawdzenie rozpoczyna się od bezpośredniego wywołującego tego kodu i przechodzi do stosu.</span><span class="sxs-lookup"><span data-stu-id="797d1-148">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="797d1-149">Stos wywołań jest zazwyczaj reprezentowany jako rosnący, więc metody wyższe w metodach wywołania stosu wywołań są niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="797d1-149">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="797d1-150"><xref:System.Security.CodeAccessPermission.Demand%2A>powiedzie się tylko wtedy <xref:System.Security.SecurityException> , gdy nie zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="797d1-150"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="797d1-151">Obiekt wywołujący wyższy w stosie wywołań nie ma uprawnienia określonego przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-151">A caller higher in the call stack does not have the permission specified by the current instance.</span></span>  
  
<span data-ttu-id="797d1-152">—lub—</span><span class="sxs-lookup"><span data-stu-id="797d1-152">-or-</span></span> 
<span data-ttu-id="797d1-153">Obiekt wywołujący wyższy w stosie wywołań został <see cref="M:System.Security.CodeAccessPermission.Deny" /> wywołany w bieżącym obiekcie uprawnień.</span><span class="sxs-lookup"><span data-stu-id="797d1-153">A caller higher in the call stack has called <see cref="M:System.Security.CodeAccessPermission.Deny" /> on the current permission object.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-154">Nie można zastąpić tej metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-154">You cannot override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit&#xA;override this.Deny : unit -&gt; unit" Usage="codeAccessPermission.Deny " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Deny is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-155">Zapobiega wywoływaniu obiektów wywołujących w stosie wywołań przy użyciu kodu wywołującego tę metodę w celu uzyskania dostępu do zasobu określonego przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-155">Prevents callers higher in the call stack from using the code that calls this method to access the resource specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="797d1-156"><xref:System.Security.CodeAccessPermission.Deny%2A> Metoda powinna być używana tylko w celu ochrony zasobów przed przypadkowym dostępem przez w pełni zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="797d1-156">The <xref:System.Security.CodeAccessPermission.Deny%2A> method should be used only to protect resources from accidental access by fully trusted code.</span></span> <span data-ttu-id="797d1-157">Nie należy używać go do ochrony zasobów przed zamierzonym nieprawidłowym użyciem przez kod niezaufany.</span><span class="sxs-lookup"><span data-stu-id="797d1-157">It should not be used to protect resources from intentional misuse by untrusted code.</span></span> <span data-ttu-id="797d1-158">Na przykład, jeśli metoda `A` <xref:System.Security.CodeAccessPermission.Deny%2A> wystawia dla uprawnienia, a następnie wywołuje `B`metodę, `B` <xref:System.Security.CodeAccessPermission.Assert%2A>Metoda może overtly zastąpić <xref:System.Security.CodeAccessPermission.Deny%2A> elementu przez wygenerowanie.</span><span class="sxs-lookup"><span data-stu-id="797d1-158">For example, if method `A` issues a <xref:System.Security.CodeAccessPermission.Deny%2A> for a permission and then calls method `B`, method `B` can overtly override the <xref:System.Security.CodeAccessPermission.Deny%2A> by issuing an <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="797d1-159">Wywołana metoda jest zawsze wyższa w stosie.</span><span class="sxs-lookup"><span data-stu-id="797d1-159">The called method is always higher in the stack.</span></span> <span data-ttu-id="797d1-160">W związku z tym `B` , jeśli metoda próbuje uzyskać dostęp do chronionego zasobu, system zabezpieczeń rozpocznie sprawdzanie pod `B` kątem uprawnień, ponieważ metoda jest bezpośrednim obiektem wywołującym, a następnie przeprowadzi stos w <xref:System.Security.CodeAccessPermission.Deny%2A> celu potwierdzenia, że nie ma lub <xref:System.Security.CodeAccessPermission.PermitOnly%2A> niższy na stosie.</span><span class="sxs-lookup"><span data-stu-id="797d1-160">Therefore, if method `B` tries to access a protected resource, the security system begins checking for permissions with it because method `B` is the immediate caller, and then walks down the stack to confirm that there is no <xref:System.Security.CodeAccessPermission.Deny%2A> or <xref:System.Security.CodeAccessPermission.PermitOnly%2A> lower in the stack.</span></span> <span data-ttu-id="797d1-161">Metoda `B`, która próbuje uzyskać dostęp do zasobu, może przestać przechodzenie stosu natychmiast przy <xref:System.Security.CodeAccessPermission.Assert%2A> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-161">Method `B`, which is trying to access the resource, can stop the stack walk immediately by using the <xref:System.Security.CodeAccessPermission.Assert%2A> method.</span></span> <span data-ttu-id="797d1-162">W takim przypadku <xref:System.Security.CodeAccessPermission.Deny%2A> umieszczenie w stos według metody `A` (Metoda wywołująca) nigdy nie jest odnajdywane.</span><span class="sxs-lookup"><span data-stu-id="797d1-162">In that case, the <xref:System.Security.CodeAccessPermission.Deny%2A> placed on the stack by method `A` (the calling method) is never discovered.</span></span>  
  
 <span data-ttu-id="797d1-163">Ta metoda uniemożliwia wywoływanie obiektów wywołujących wyższego poziomu w stosie wywołań dostępu do chronionego zasobu za pośrednictwem kodu, który wywołuje tę metodę, nawet jeśli Ci wywołujący mają uprawnienia dostępu do niej.</span><span class="sxs-lookup"><span data-stu-id="797d1-163">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="797d1-164">Stos wywołań jest zazwyczaj reprezentowany jako rosnący, więc metody wyższe w metodach wywołania stosu wywołań są niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="797d1-164">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="797d1-165"><xref:System.Security.CodeAccessPermission.Deny%2A>program może ograniczyć odpowiedzialność programisty lub zapobiec przypadkowemu występowaniu problemów z zabezpieczeniami, ponieważ pomaga zapobiec metodzie <xref:System.Security.CodeAccessPermission.Deny%2A> , która wywołuje z użycia w celu uzyskania dostępu do zasobów chronionych przez uprawnienie odmowa.</span><span class="sxs-lookup"><span data-stu-id="797d1-165"><xref:System.Security.CodeAccessPermission.Deny%2A> can limit the liability of the programmer or help prevent accidental security issues because it helps prevent the method that calls <xref:System.Security.CodeAccessPermission.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="797d1-166">Jeśli metoda wywołuje <xref:System.Security.CodeAccessPermission.Deny%2A> uprawnienie, a <xref:System.Security.CodeAccessPermission.Demand%2A> dla tego uprawnienia wywoływany przez obiekt wywołujący jest niższy w stosie wywołań, sprawdzanie zabezpieczeń zakończy <xref:System.Security.CodeAccessPermission.Deny%2A>się niepowodzeniem, gdy zostanie osiągnięty.</span><span class="sxs-lookup"><span data-stu-id="797d1-166">If a method calls <xref:System.Security.CodeAccessPermission.Deny%2A> on a permission, and if a <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check will fail when it reaches the <xref:System.Security.CodeAccessPermission.Deny%2A>.</span></span>  
  
 <span data-ttu-id="797d1-167">Wywołanie <xref:System.Security.CodeAccessPermission.Deny%2A> jest skuteczne do momentu powracania kodu wywołującego do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="797d1-167">The call to <xref:System.Security.CodeAccessPermission.Deny%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="797d1-168">Tylko jeden <xref:System.Security.CodeAccessPermission.Deny%2A> może być aktywny w ramce.</span><span class="sxs-lookup"><span data-stu-id="797d1-168">Only one <xref:System.Security.CodeAccessPermission.Deny%2A> can be active on a frame.</span></span> <span data-ttu-id="797d1-169">Próba wywołania <xref:System.Security.CodeAccessPermission.Deny%2A> , gdy element aktywny <xref:System.Security.CodeAccessPermission.Deny%2A> istnieje w ramce, spowoduje wystąpienie elementu <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="797d1-169">An attempt to call <xref:System.Security.CodeAccessPermission.Deny%2A> when an active <xref:System.Security.CodeAccessPermission.Deny%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="797d1-170"><xref:System.Security.CodeAccessPermission.RevertDeny%2A> Wywołaj <xref:System.Security.CodeAccessPermission.RevertAll%2A> lub, aby usunąć <xref:System.Security.CodeAccessPermission.Deny%2A>aktywny.</span><span class="sxs-lookup"><span data-stu-id="797d1-170">Call <xref:System.Security.CodeAccessPermission.RevertDeny%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.Deny%2A>.</span></span> <span data-ttu-id="797d1-171"><xref:System.Security.CodeAccessPermission.Deny%2A>jest ignorowany dla uprawnień, które nie zostały przyznane, ponieważ żądanie tego uprawnienia nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="797d1-171"><xref:System.Security.CodeAccessPermission.Deny%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="797d1-172">Istnieje już aktywny <see cref="M:System.Security.CodeAccessPermission.Deny" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="797d1-172">There is already an active <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-173">Nie można zastąpić tej metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-173">You cannot override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="codeAccessPermission.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="797d1-174">Obiekt, który ma zostać porównany <see cref="T:System.Security.CodeAccessPermission" />z bieżącym. <see cref="T:System.Security.CodeAccessPermission" /></span><span class="sxs-lookup"><span data-stu-id="797d1-174">The <see cref="T:System.Security.CodeAccessPermission" /> object to compare with the current <see cref="T:System.Security.CodeAccessPermission" />.</span></span></param>
        <summary><span data-ttu-id="797d1-175">Określa, czy określony <see cref="T:System.Security.CodeAccessPermission" /> obiekt jest równy bieżącemu. <see cref="T:System.Security.CodeAccessPermission" /></span><span class="sxs-lookup"><span data-stu-id="797d1-175">Determines whether the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />.</span></span></summary>
        <returns><span data-ttu-id="797d1-176"><see langword="true" />Jeśli określony <see cref="T:System.Security.CodeAccessPermission" /> obiekt jest równy bieżącemu <see cref="T:System.Security.CodeAccessPermission" />; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-176"><see langword="true" /> if the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-177">Aby uzyskać więcej informacji, zobacz <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="797d1-177">For more information, see <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public abstract void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit" Usage="codeAccessPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem"><span data-ttu-id="797d1-178">Kodowanie XML do użycia w celu odtworzenia obiektu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="797d1-178">The XML encoding to use to reconstruct the security object.</span></span></param>
        <summary><span data-ttu-id="797d1-179">Gdy jest zastępowany w klasie pochodnej, rekonstruuje obiekt zabezpieczeń z określonym stanem z kodowania XML.</span><span class="sxs-lookup"><span data-stu-id="797d1-179">When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-180">Kod niestandardowy, który rozszerza obiekty zabezpieczeń, musi <xref:System.Security.CodeAccessPermission.ToXml%2A> implementować <xref:System.Security.CodeAccessPermission.FromXml%2A> metody i, aby uczynić obiekty Security-encodable.</span><span class="sxs-lookup"><span data-stu-id="797d1-180">Custom code that extends security objects needs to implement the <xref:System.Security.CodeAccessPermission.ToXml%2A> and <xref:System.Security.CodeAccessPermission.FromXml%2A> methods to make the objects security-encodable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="797d1-181">Poniższy przykład kodu pokazuje przesłonięcie <xref:System.Security.CodeAccessPermission.FromXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-181">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.FromXml%2A> method.</span></span> <span data-ttu-id="797d1-182">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="797d1-182">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#10)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#10)]
 [!code-vb[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="797d1-183">Parametr ma wartość <see langword="null" />. <paramref name="elem" /></span><span class="sxs-lookup"><span data-stu-id="797d1-183">The <paramref name="elem" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="797d1-184"><paramref name="elem" /> Parametr nie zawiera kodowania XML dla wystąpienia tego samego typu co bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-184">The <paramref name="elem" /> parameter does not contain the XML encoding for an instance of the same type as the current instance.</span></span>  
  
<span data-ttu-id="797d1-185">—lub—</span><span class="sxs-lookup"><span data-stu-id="797d1-185">-or-</span></span> 
<span data-ttu-id="797d1-186">Numer <paramref name="elem" /> wersji parametru nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="797d1-186">The version number of the <paramref name="elem" /> parameter is not supported.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-187">Należy zastąpić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="797d1-187">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="codeAccessPermission.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-188">Pobiera kod skrótu dla <see cref="T:System.Security.CodeAccessPermission" /> obiektu, który jest odpowiedni do użycia w algorytmach wyznaczania wartości skrótu i struktur danych, takich jak tabela skrótów.</span><span class="sxs-lookup"><span data-stu-id="797d1-188">Gets a hash code for the <see cref="T:System.Security.CodeAccessPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="797d1-189">Kod skrótu dla bieżącego <see cref="T:System.Security.CodeAccessPermission" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="797d1-189">A hash code for the current <see cref="T:System.Security.CodeAccessPermission" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-190">Kod skrótu dla dwóch wystąpień tego samego uprawnienia może być inny, dlatego nie należy używać kodu skrótu do porównywania dwóch <xref:System.Security.CodeAccessPermission> obiektów.</span><span class="sxs-lookup"><span data-stu-id="797d1-190">The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.CodeAccessPermission> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public abstract System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="codeAccessPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="797d1-191">Uprawnienie do przecięcia z bieżącym uprawnieniem.</span><span class="sxs-lookup"><span data-stu-id="797d1-191">A permission to intersect with the current permission.</span></span> <span data-ttu-id="797d1-192">Musi być tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-192">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="797d1-193">W przypadku wdrożenia przez klasę pochodną program tworzy i zwraca uprawnienie, które jest częścią wspólną bieżącego uprawnienia i określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="797d1-193">When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="797d1-194">Nowe uprawnienie, które reprezentuje część wspólną bieżącego uprawnienia i określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="797d1-194">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="797d1-195">To nowe uprawnienie jest <see langword="null" /> , jeśli część wspólna jest pusta.</span><span class="sxs-lookup"><span data-stu-id="797d1-195">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-196">Wspólną częścią dwóch uprawnień jest uprawnienie, które opisuje zestaw operacji, które oba często opisują.</span><span class="sxs-lookup"><span data-stu-id="797d1-196">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="797d1-197">Tylko żądanie przekazujące pierwotne uprawnienia spowoduje przekazanie przedziału.</span><span class="sxs-lookup"><span data-stu-id="797d1-197">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="797d1-198">Poniższy przykład kodu pokazuje przesłonięcie <xref:System.Security.CodeAccessPermission.Intersect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-198">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Intersect%2A> method.</span></span> <span data-ttu-id="797d1-199">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="797d1-199">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#5)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#5)]
 [!code-vb[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="797d1-200"><paramref name="target" /> Parametr nie<see langword="null" /> jest ani wystąpieniem tej samej klasy, co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-200">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-201">Należy zastąpić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="797d1-201">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public abstract bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="codeAccessPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="797d1-202">Uprawnienie, które ma zostać przetestowane dla relacji podzbioru.</span><span class="sxs-lookup"><span data-stu-id="797d1-202">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="797d1-203">To uprawnienie musi być tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-203">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="797d1-204">W przypadku implementacji przez klasę pochodną określa, czy bieżące uprawnienie jest podzbiorem określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="797d1-204">When implemented by a derived class, determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="797d1-205"><see langword="true" />Jeśli bieżące uprawnienie jest podzbiorem określonego uprawnienia; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="797d1-205"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-206">Bieżące uprawnienie jest podzbiorem określonego uprawnienia, jeśli bieżące uprawnienie określa zestaw operacji, które są w całości zawarte w określonym uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="797d1-206">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="797d1-207">Na przykład uprawnienie, które reprezentuje dostęp do C:\example.txt, jest podzbiorem uprawnienia, które reprezentuje dostęp do C:\\.</span><span class="sxs-lookup"><span data-stu-id="797d1-207">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="797d1-208">Jeśli ta metoda zwróci `true`wartość, bieżące uprawnienie nie reprezentuje więcej dostępu do chronionego zasobu niż określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-208">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="797d1-209">Następujące instrukcje są wymagane `true` dla wszystkich zastąpień <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-209">The following statements are required to be `true` for all overrides of the <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="797d1-210">*X*, *Y*i *Z* reprezentują niestandardowe obiekty uprawnień dostępu do kodu, które nie są odwołaniami null, *U* reprezentuje nieograniczone uprawnienia dostępu do kodu, a *N* reprezentuje puste uprawnienie z <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState.None>.</span><span class="sxs-lookup"><span data-stu-id="797d1-210">*X*, *Y*, and *Z* represent custom code access permission objects that are not null references, *U* represents an unrestricted code access permission, and *N* represents an empty permission with a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.None>.</span></span>  
  
-   <span data-ttu-id="797d1-211">*X*. IsSubsetOf — (*X*) zwraca `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="797d1-211">*X*.IsSubsetOf(*X*) returns `true`.</span></span>  
  
-   <span data-ttu-id="797d1-212">*X*. IsSubsetOf — (*Y*) zwraca tę samą wartość jak *Y*. IsSubsetOf — (*X*) if i tylko wtedy, gdy *X* i *Y* reprezentują ten sam zestaw uprawnień.</span><span class="sxs-lookup"><span data-stu-id="797d1-212">*X*.IsSubsetOf(*Y*) returns the same value as *Y*.IsSubsetOf(*X*) if and only if *X* and *Y* represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="797d1-213">Jeśli *X*. IsSubsetOf — (*Y*) i *Y*. IsSubsetOf — (*Z*) oba zwracają `true`, *X*. IsSubsetOf — (*Z*) zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="797d1-213">If *X*.IsSubsetOf(*Y*) and *Y*.IsSubsetOf(*Z*) both return `true`, *X*.IsSubsetOf(*Z*) returns `true`.</span></span>  
  
-   <span data-ttu-id="797d1-214">*X*. IsSubsetOf — (*U*) zwraca `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="797d1-214">*X*.IsSubsetOf(*U*) returns `true`.</span></span>  
  
-   <span data-ttu-id="797d1-215">*X*. IsSubsetOf — (*N*) zwraca `false`wartość.</span><span class="sxs-lookup"><span data-stu-id="797d1-215">*X*.IsSubsetOf(*N*) returns `false`.</span></span>  
  
-   <span data-ttu-id="797d1-216">*N*. IsSubsetOf — (*X*) zwraca `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="797d1-216">*N*.IsSubsetOf(*X*) returns `true`.</span></span>  
  
 <span data-ttu-id="797d1-217">Jeśli *X* i *Y* reprezentują niestandardowe obiekty uprawnień dostępu do kodu, które są odwołaniami null, *X*. IsSubsetOf — (*Y*) zwraca `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="797d1-217">If *X* and *Y* represent custom code access permission objects that are null references, *X*.IsSubsetOf(*Y*) returns `true`.</span></span> <span data-ttu-id="797d1-218">Jeśli *z* ma również wartość null, operacja zestawu złożonego *X*. Unia (*Y*). IsSubsetOf — (*Z*) również zwraca `true` , ponieważ Unia dwóch uprawnień null jest uprawnieniem null.</span><span class="sxs-lookup"><span data-stu-id="797d1-218">If *Z* is also null, the compound set operation *X*.Union(*Y*).IsSubsetOf(*Z*) also returns `true` because the union of two null permissions is a null permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="797d1-219">Poniższy przykład kodu pokazuje przesłonięcie <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-219">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="797d1-220">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="797d1-220">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#4)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#4)]
 [!code-vb[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="797d1-221"><paramref name="target" /> Parametr nie<see langword="null" /> ma tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-221">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-222">Należy zastąpić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="797d1-222">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit&#xA;override this.PermitOnly : unit -&gt; unit" Usage="codeAccessPermission.PermitOnly " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-223">Zapobiega wywoływaniu obiektów wywołujących w stosie wywołań przy użyciu kodu wywołującego tę metodę w celu uzyskania dostępu do wszystkich zasobów z wyjątkiem zasobu określonego przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-223">Prevents callers higher in the call stack from using the code that calls this method to access all resources except for the resource specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="797d1-224"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> Metoda powinna być używana tylko w celu ochrony zasobów przed przypadkowym dostępem przez w pełni zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="797d1-224">The <xref:System.Security.CodeAccessPermission.PermitOnly%2A> method should be used only to protect resources from accidental access by fully trusted code.</span></span> <span data-ttu-id="797d1-225">Nie należy używać go do ochrony zasobów przed zamierzonym nieprawidłowym użyciem przez kod niezaufany.</span><span class="sxs-lookup"><span data-stu-id="797d1-225">It should not be used to protect resources from intentional misuse by untrusted code.</span></span> <span data-ttu-id="797d1-226">Na przykład, jeśli metoda `A` <xref:System.Security.CodeAccessPermission.PermitOnly%2A> wystawia dla uprawnienia, a następnie wywołuje `B`metodę, `B` <xref:System.Security.CodeAccessPermission.Assert%2A>Metoda może overtly zastąpić <xref:System.Security.CodeAccessPermission.PermitOnly%2A> elementu przez wygenerowanie.</span><span class="sxs-lookup"><span data-stu-id="797d1-226">For example, if method `A` issues a <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for a permission and then calls method `B`, method `B` can overtly override the <xref:System.Security.CodeAccessPermission.PermitOnly%2A> by issuing an <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="797d1-227">Wywołana metoda jest zawsze wyższa w stosie.</span><span class="sxs-lookup"><span data-stu-id="797d1-227">The called method is always higher in the stack.</span></span> <span data-ttu-id="797d1-228">W związku z tym `B` , jeśli metoda próbuje uzyskać dostęp do chronionego zasobu, system zabezpieczeń rozpocznie sprawdzanie pod `B` kątem uprawnień, ponieważ metoda jest bezpośrednim obiektem wywołującym, a następnie przeprowadzi stos w <xref:System.Security.CodeAccessPermission.Deny%2A> celu potwierdzenia, że nie ma lub <xref:System.Security.CodeAccessPermission.PermitOnly%2A> niższy na stosie.</span><span class="sxs-lookup"><span data-stu-id="797d1-228">Therefore, if method `B` tries to access a protected resource, the security system begins checking for permissions with it because method `B` is the immediate caller, and then walks down the stack to confirm that there is no <xref:System.Security.CodeAccessPermission.Deny%2A> or <xref:System.Security.CodeAccessPermission.PermitOnly%2A> lower in the stack.</span></span> <span data-ttu-id="797d1-229">Metoda `B`, która próbuje uzyskać dostęp do zasobu, może przestać przechodzenie stosu natychmiast przy <xref:System.Security.CodeAccessPermission.Assert%2A> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-229">Method `B`, which is trying to access the resource, can stop the stack walk immediately by using the <xref:System.Security.CodeAccessPermission.Assert%2A> method.</span></span> <span data-ttu-id="797d1-230">W takim przypadku <xref:System.Security.CodeAccessPermission.PermitOnly%2A> umieszczenie w stos według metody `A` (Metoda wywołująca) nigdy nie jest odnajdywane.</span><span class="sxs-lookup"><span data-stu-id="797d1-230">In that case, the <xref:System.Security.CodeAccessPermission.PermitOnly%2A> placed on the stack by method `A` (the calling method) is never discovered.</span></span>  
  
 <span data-ttu-id="797d1-231"><xref:System.Security.CodeAccessPermission.PermitOnly%2A>działa podobnie jak <xref:System.Security.CodeAccessPermission.Deny%2A>w przypadku, gdy obie przyczyny kończą się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="797d1-231"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> is similar to <xref:System.Security.CodeAccessPermission.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="797d1-232">Różnica polega na tym <xref:System.Security.CodeAccessPermission.Deny%2A> , że określa uprawnienia, które spowodują niepowodzenie przechodzenia stosu <xref:System.Security.CodeAccessPermission.PermitOnly%2A> , ale określa jedyne uprawnienia, które nie powodują błędów przeszukiwania stosu.</span><span class="sxs-lookup"><span data-stu-id="797d1-232">The difference is that <xref:System.Security.CodeAccessPermission.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.CodeAccessPermission.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span>  
  
 <span data-ttu-id="797d1-233">Wywołaj tę metodę, aby upewnić się, że kod może być używany w celu uzyskania dostępu tylko do określonych zasobów.</span><span class="sxs-lookup"><span data-stu-id="797d1-233">Call this method to ensure that your code can be used to access only the specified resources.</span></span> <span data-ttu-id="797d1-234">Wywołanie <xref:System.Security.CodeAccessPermission.PermitOnly%2A> jest skuteczne do momentu powracania kodu wywołującego do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="797d1-234">The call to <xref:System.Security.CodeAccessPermission.PermitOnly%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="797d1-235">Tylko jeden <xref:System.Security.CodeAccessPermission.PermitOnly%2A> może być aktywny w ramce.</span><span class="sxs-lookup"><span data-stu-id="797d1-235">Only one <xref:System.Security.CodeAccessPermission.PermitOnly%2A> can be active on a frame.</span></span> <span data-ttu-id="797d1-236">Próba wywołania <xref:System.Security.CodeAccessPermission.PermitOnly%2A> , gdy element aktywny <xref:System.Security.CodeAccessPermission.PermitOnly%2A> istnieje w ramce, spowoduje wystąpienie elementu <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="797d1-236">An attempt to call <xref:System.Security.CodeAccessPermission.PermitOnly%2A> when an active <xref:System.Security.CodeAccessPermission.PermitOnly%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="797d1-237"><xref:System.Security.CodeAccessPermission.RevertPermitOnly%2A> Wywołaj <xref:System.Security.CodeAccessPermission.RevertAll%2A> lub, aby usunąć <xref:System.Security.CodeAccessPermission.PermitOnly%2A>aktywny.</span><span class="sxs-lookup"><span data-stu-id="797d1-237">Call <xref:System.Security.CodeAccessPermission.RevertPermitOnly%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span></span>  
  
 <span data-ttu-id="797d1-238"><xref:System.Security.CodeAccessPermission.PermitOnly%2A>jest ignorowany dla uprawnień, które nie zostały przyznane, ponieważ żądanie tego uprawnienia nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="797d1-238"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="797d1-239">Jeśli jednak kod niższy na stosie wywołań później wywołuje <xref:System.Security.CodeAccessPermission.Demand%2A> dla tego uprawnienia <xref:System.Security.SecurityException> , jest generowany, gdy przeszukiwany stos osiągnie kod, który próbował wywołać <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="797d1-239">However, if code lower on the call stack later calls <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span></span> <span data-ttu-id="797d1-240">Wynika to z faktu, że <xref:System.Security.CodeAccessPermission.PermitOnly%2A> wywoływany kod nie otrzymał uprawnienia, nawet jeśli został wywołany <xref:System.Security.CodeAccessPermission.PermitOnly%2A> dla tego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="797d1-240">This is because the code that called <xref:System.Security.CodeAccessPermission.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="797d1-241">Stos wywołań jest zazwyczaj reprezentowany jako rosnący, więc metody wyższe w metodach wywołania stosu wywołań są niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="797d1-241">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="797d1-242">Istnieje już aktywny <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="797d1-242">There is already an active <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-243">Nie można zastąpić tej metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-243">You cannot override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RevertAll">
      <MemberSignature Language="C#" Value="public static void RevertAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertAll" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAll();" />
      <MemberSignature Language="F#" Value="static member RevertAll : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-244">Powoduje, że wszystkie poprzednie zastąpienia bieżącej ramki zostaną usunięte i nie będą już obowiązywały.</span><span class="sxs-lookup"><span data-stu-id="797d1-244">Causes all previous overrides for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-245">W przypadku braku zastąpień<xref:System.Security.CodeAccessPermission.Assert%2A>( <xref:System.Security.CodeAccessPermission.Deny%2A>, lub <xref:System.Security.CodeAccessPermission.PermitOnly%2A>) dla bieżącej ramki <xref:System.ExecutionEngineException> jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="797d1-245">If there are no overrides (<xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.Deny%2A>, or <xref:System.Security.CodeAccessPermission.PermitOnly%2A>) for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="797d1-246">Brak poprzedniej <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" />lub <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="797d1-246">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" />, or <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberSignature Language="F#" Value="static member RevertAssert : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertAssert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-247">Powoduje, że <see cref="M:System.Security.CodeAccessPermission.Assert" /> wszystkie poprzednie dla bieżącej ramki zostaną usunięte i nie będą już obowiązywały.</span><span class="sxs-lookup"><span data-stu-id="797d1-247">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-248">Jeśli nie <xref:System.Security.CodeAccessPermission.Assert%2A> ma dla bieżącej ramki <xref:System.ExecutionEngineException> , zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="797d1-248">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="797d1-249">Brak poprzedniej <see cref="M:System.Security.CodeAccessPermission.Assert" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="797d1-249">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertDeny">
      <MemberSignature Language="C#" Value="public static void RevertDeny ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertDeny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertDeny" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertDeny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertDeny();" />
      <MemberSignature Language="F#" Value="static member RevertDeny : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertDeny " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Deny is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-250">Powoduje, że <see cref="M:System.Security.CodeAccessPermission.Deny" /> wszystkie poprzednie dla bieżącej ramki zostaną usunięte i nie będą już obowiązywały.</span><span class="sxs-lookup"><span data-stu-id="797d1-250">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-251">Jeśli nie <xref:System.Security.CodeAccessPermission.Deny%2A> ma dla bieżącej ramki <xref:System.ExecutionEngineException> , zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="797d1-251">If there is no <xref:System.Security.CodeAccessPermission.Deny%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="797d1-252">Brak poprzedniej <see cref="M:System.Security.CodeAccessPermission.Deny" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="797d1-252">There is no previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertPermitOnly">
      <MemberSignature Language="C#" Value="public static void RevertPermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertPermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertPermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertPermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertPermitOnly();" />
      <MemberSignature Language="F#" Value="static member RevertPermitOnly : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertPermitOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-253">Powoduje, że <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> wszystkie poprzednie dla bieżącej ramki zostaną usunięte i nie będą już obowiązywały.</span><span class="sxs-lookup"><span data-stu-id="797d1-253">Causes any previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-254">Jeśli nie <xref:System.Security.CodeAccessPermission.PermitOnly%2A> ma dla bieżącej ramki <xref:System.ExecutionEngineException> , zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="797d1-254">If there is no <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="797d1-255">Brak poprzedniej <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="797d1-255">There is no previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IPermission.Demand">
      <MemberSignature Language="C#" Value="void IPermission.Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IPermission.Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IPermission#Demand" />
      <MemberSignature Language="VB.NET" Value="Sub Demand () Implements IPermission.Demand" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IPermission.Demand() = System::Security::IPermission::Demand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Assert">
      <MemberSignature Language="C#" Value="void IStackWalk.Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert" />
      <MemberSignature Language="VB.NET" Value="Sub Assert () Implements IStackWalk.Assert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Assert() = System::Security::IStackWalk::Assert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Demand">
      <MemberSignature Language="C#" Value="void IStackWalk.Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand" />
      <MemberSignature Language="VB.NET" Value="Sub Demand () Implements IStackWalk.Demand" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Demand() = System::Security::IStackWalk::Demand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Deny">
      <MemberSignature Language="C#" Value="void IStackWalk.Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny" />
      <MemberSignature Language="VB.NET" Value="Sub Deny () Implements IStackWalk.Deny" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Deny() = System::Security::IStackWalk::Deny;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.PermitOnly">
      <MemberSignature Language="C#" Value="void IStackWalk.PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Sub PermitOnly () Implements IStackWalk.PermitOnly" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.PermitOnly() = System::Security::IStackWalk::PermitOnly;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="codeAccessPermission.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-256">Tworzy i zwraca reprezentację ciągu dla bieżącego obiektu uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="797d1-256">Creates and returns a string representation of the current permission object.</span></span></summary>
        <returns><span data-ttu-id="797d1-257">Reprezentacja ciągu bieżącego obiektu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="797d1-257">A string representation of the current permission object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-258">Ta metoda jest przydatna w debugowaniu, gdy konieczne jest wyświetlenie uprawnienia jako ciągu.</span><span class="sxs-lookup"><span data-stu-id="797d1-258">This method is useful in debugging when you need to display the permission as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public abstract System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement" Usage="codeAccessPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-259">Gdy jest zastępowany w klasie pochodnej, tworzy Kodowanie XML obiektu zabezpieczeń i jego bieżący stan.</span><span class="sxs-lookup"><span data-stu-id="797d1-259">When overridden in a derived class, creates an XML encoding of the security object and its current state.</span></span></summary>
        <returns><span data-ttu-id="797d1-260">Kodowanie XML obiektu zabezpieczeń, w tym informacje o stanie.</span><span class="sxs-lookup"><span data-stu-id="797d1-260">An XML encoding of the security object, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-261">Kod niestandardowy, który rozszerza obiekty zabezpieczeń, musi <xref:System.Security.CodeAccessPermission.ToXml%2A> implementować <xref:System.Security.CodeAccessPermission.FromXml%2A> metody i, aby uczynić obiekty Security-encodable.</span><span class="sxs-lookup"><span data-stu-id="797d1-261">Custom code that extends security objects needs to implement the <xref:System.Security.CodeAccessPermission.ToXml%2A> and <xref:System.Security.CodeAccessPermission.FromXml%2A> methods to make the objects security-encodable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="797d1-262">Poniższy przykład kodu pokazuje przesłonięcie <xref:System.Security.CodeAccessPermission.ToXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-262">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.ToXml%2A> method.</span></span> <span data-ttu-id="797d1-263">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="797d1-263">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#11)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#11)]
 [!code-vb[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-264">Należy zastąpić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="797d1-264">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public virtual System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="codeAccessPermission.Union other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="797d1-265">Uprawnienie do łączenia z bieżącym uprawnieniem.</span><span class="sxs-lookup"><span data-stu-id="797d1-265">A permission to combine with the current permission.</span></span> <span data-ttu-id="797d1-266">Musi być tego samego typu co bieżące uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-266">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="797d1-267">Gdy jest zastępowany w klasie pochodnej, tworzy uprawnienie, które jest złożeniem bieżącego uprawnienia i określonym uprawnieniem.</span><span class="sxs-lookup"><span data-stu-id="797d1-267">When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="797d1-268">Nowe uprawnienie, które reprezentuje związek z bieżącym uprawnieniem i określonym uprawnieniem.</span><span class="sxs-lookup"><span data-stu-id="797d1-268">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-269">Wynikiem wywołania <xref:System.Security.CodeAccessPermission.Union%2A> jest uprawnienie, które reprezentuje wszystkie operacje reprezentowane przez bieżące uprawnienie i określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="797d1-269">The result of a call to <xref:System.Security.CodeAccessPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="797d1-270">Każde żądanie, które przekazuje jedno uprawnienie, przekazuje ich Unię.</span><span class="sxs-lookup"><span data-stu-id="797d1-270">Any demand that passes either permission passes their union.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="797d1-271">Poniższy przykład kodu pokazuje przesłonięcie <xref:System.Security.CodeAccessPermission.Union%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="797d1-271">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Union%2A> method.</span></span> <span data-ttu-id="797d1-272">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Security.CodeAccessPermission> klasy.</span><span class="sxs-lookup"><span data-stu-id="797d1-272">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#12)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#12)]
 [!code-vb[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="797d1-273"><paramref name="other" /> Parametr nie<see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="797d1-273">The <paramref name="other" /> parameter is not <see langword="null" />.</span></span> <span data-ttu-id="797d1-274">Ta metoda jest obsługiwana tylko na tym poziomie, gdy <see langword="null" />jest zakończony.</span><span class="sxs-lookup"><span data-stu-id="797d1-274">This method is only supported at this level when passed <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="797d1-275">Należy zastąpić tę metodę w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="797d1-275">You must override this method in a derived class.</span></span> <span data-ttu-id="797d1-276">Należy zwrócić kopię uprawnienia, jeśli wartość <paramref name="other" /> parametru to. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="797d1-276">You should return a copy of the permission if the value of the <paramref name="other" /> parameter is <see langword="null" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
