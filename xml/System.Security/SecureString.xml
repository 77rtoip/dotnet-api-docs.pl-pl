<Type Name="SecureString" FullName="System.Security.SecureString">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96bc424553b906350ab42e30474aa7eb58c02455" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69161583" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecureString : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecureString extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureString" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureString&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureString sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecureString = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="cc977-101">Reprezentuje tekst, który powinien zostać zachowany poufne, na przykład przez usunięcie go z pamięci komputera, gdy nie jest już potrzebne.</span><span class="sxs-lookup"><span data-stu-id="cc977-101">Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</span></span> <span data-ttu-id="cc977-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="cc977-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="cc977-103">Nie zalecamy używania `SecureString` klasy do nowych celów programistycznych.</span><span class="sxs-lookup"><span data-stu-id="cc977-103">We don't recommend that you use the `SecureString` class for new development.</span></span> <span data-ttu-id="cc977-104">Aby uzyskać więcej informacji, zobacz [SecureString nie powinien być używany](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md) w serwisie GitHub.</span><span class="sxs-lookup"><span data-stu-id="cc977-104">For more information, see [SecureString shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md) on GitHub.</span></span>

 <span data-ttu-id="cc977-105"><xref:System.Security.SecureString>jest typem ciągu, który zapewnia miarę zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="cc977-105"><xref:System.Security.SecureString> is a string type that provides a measure of security.</span></span> <span data-ttu-id="cc977-106">Próbuje uniknąć przechowywania potencjalnie poufnych ciągów w pamięci procesu jako zwykłego tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc977-106">It tries to avoid storing potentially sensitive strings in process memory as plain text.</span></span>  <span data-ttu-id="cc977-107">(W przypadku ograniczeń należy jednak zapoznać się z sekcją [jak bezpiecznie jest to SecureString?](#HowSecure) ). Wartość wystąpienia <xref:System.Security.SecureString> jest automatycznie chroniona przy użyciu mechanizmu obsługiwanego przez platformę podstawową, gdy wystąpienie zostanie zainicjowane lub gdy wartość zostanie zmodyfikowana.</span><span class="sxs-lookup"><span data-stu-id="cc977-107">(For limitations, however, see the [How secure is SecureString?](#HowSecure) section.) The value of an instance of <xref:System.Security.SecureString> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</span></span> <span data-ttu-id="cc977-108">Aplikacja może renderować wystąpienie niezmienne i uniemożliwiać dalsze modyfikacje przez wywołanie <xref:System.Security.SecureString.MakeReadOnly%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc977-108">Your application can render the instance immutable and prevent further modification by invoking the <xref:System.Security.SecureString.MakeReadOnly%2A> method.</span></span>  
  
 <span data-ttu-id="cc977-109">Maksymalna długość <xref:System.Security.SecureString> wystąpienia to 65 536 znaków.</span><span class="sxs-lookup"><span data-stu-id="cc977-109">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc977-110">Ten typ implementuje <xref:System.IDisposable> interfejs.</span><span class="sxs-lookup"><span data-stu-id="cc977-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="cc977-111">Po zakończeniu korzystania z wystąpienia typu należy usunąć jego wartość bezpośrednio lub pośrednio.</span><span class="sxs-lookup"><span data-stu-id="cc977-111">When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="cc977-112">Aby usunąć typ bezpośrednio <xref:System.IDisposable.Dispose%2A> , wywołaj jego metodę `try` / `catch` w bloku.</span><span class="sxs-lookup"><span data-stu-id="cc977-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="cc977-113">Aby usunąć go pośrednio, użyj konstrukcji języka, takiej jak `using` (in C#) lub `Using` (w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="cc977-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="cc977-114">Aby uzyskać więcej informacji, zobacz sekcję "Używanie obiektu implementującego <xref:System.IDisposable> interfejs IDisposable" w temacie dotyczącym interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cc977-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="cc977-115"><xref:System.Security.SecureString> Klasa i jej elementy członkowskie nie są widoczne dla modelu com.</span><span class="sxs-lookup"><span data-stu-id="cc977-115">The <xref:System.Security.SecureString> class and its members are not visible to COM.</span></span> <span data-ttu-id="cc977-116">Aby uzyskać więcej informacji, zobacz <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span><span class="sxs-lookup"><span data-stu-id="cc977-116">For more information, see <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="cc977-117">W tej sekcji:</span><span class="sxs-lookup"><span data-stu-id="cc977-117">In this section:</span></span>  
  
 <span data-ttu-id="cc977-118">[Ciąg a SecureString](#vsString) </span><span class="sxs-lookup"><span data-stu-id="cc977-118">[String vs. SecureString](#vsString) </span></span>  
 <span data-ttu-id="cc977-119">[Operacje SecureString](#Ops) </span><span class="sxs-lookup"><span data-stu-id="cc977-119">[SecureString operations](#Ops) </span></span>  
 <span data-ttu-id="cc977-120">[SecureString i Interop](#interop) </span><span class="sxs-lookup"><span data-stu-id="cc977-120">[SecureString and interop](#interop) </span></span>  
 [<span data-ttu-id="cc977-121">Jak bezpieczny jest SecureString?</span><span class="sxs-lookup"><span data-stu-id="cc977-121">How secure is  SecureString?</span></span>](#HowSecure)  
  
<a name="vsString"></a>   
## <a name="string-versus-securestring"></a><span data-ttu-id="cc977-122">Ciąg a SecureString</span><span class="sxs-lookup"><span data-stu-id="cc977-122">String versus SecureString</span></span>  
 <span data-ttu-id="cc977-123">Wystąpienie <xref:System.String?displayProperty=nameWithType> klasy jest zarówno niezmienne, jak i, gdy nie jest już potrzebne, nie można programowo zaplanować do wyrzucania elementów bezużytecznych; oznacza to, że wystąpienie jest tylko do odczytu po utworzeniu i nie można go przewidzieć, gdy wystąpienie będzie Usunięto z pamięci komputera.</span><span class="sxs-lookup"><span data-stu-id="cc977-123">An instance of the <xref:System.String?displayProperty=nameWithType> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</span></span> <span data-ttu-id="cc977-124">Ponieważ <xref:System.String?displayProperty=nameWithType> wystąpienia są niezmienne, operacje, które pojawiają się w celu zmodyfikowania istniejącego wystąpienia, faktycznie tworzą kopię go do manipulowania.</span><span class="sxs-lookup"><span data-stu-id="cc977-124">Because <xref:System.String?displayProperty=nameWithType> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</span></span> <span data-ttu-id="cc977-125">W związku z tym, <xref:System.String> Jeśli obiekt zawiera informacje poufne, takie jak hasło, numer karty kredytowej lub dane osobowe, istnieje ryzyko, że informacje mogą być ujawnione po ich użyciu, ponieważ aplikacja nie może usunąć danych z pamięci komputera .</span><span class="sxs-lookup"><span data-stu-id="cc977-125">Consequently, if a <xref:System.String> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</span></span>  
  
 <span data-ttu-id="cc977-126">Obiekt jest podobny <xref:System.String> do obiektu, w którym ma wartość tekstową. <xref:System.Security.SecureString></span><span class="sxs-lookup"><span data-stu-id="cc977-126">A <xref:System.Security.SecureString> object is similar to a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="cc977-127">Jednak wartość <xref:System.Security.SecureString> obiektu jest przypięta w pamięci, może być modyfikowana za pomocą mechanizmu ochrony, takiego jak szyfrowanie dostarczone przez podstawowy system operacyjny, do momentu, gdy aplikacja oznaczy go jako tylko do odczytu i może zostać usunięta z pamięci komputera przez aplikację wywołującą <xref:System.Security.SecureString.Dispose%2A> metodę lub przez .NET Framework Moduł wyrzucania elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="cc977-127">However, the value of a <xref:System.Security.SecureString> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <xref:System.Security.SecureString.Dispose%2A> method  or by the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="cc977-128">Aby zapoznać się z ograniczeniami <xref:System.Security.SecureString> klasy, zobacz sekcję [jak bezpiecznie is SecureString?](#HowSecure) .</span><span class="sxs-lookup"><span data-stu-id="cc977-128">For a discussion of the limitations of the <xref:System.Security.SecureString> class, see the [How secure is  SecureString?](#HowSecure) section.</span></span>  
  
 [<span data-ttu-id="cc977-129">Powrót do początku</span><span class="sxs-lookup"><span data-stu-id="cc977-129">Back to top</span></span>](#top)  
  
<a name="Ops"></a>   
## <a name="securestring-operations"></a><span data-ttu-id="cc977-130">Operacje SecureString</span><span class="sxs-lookup"><span data-stu-id="cc977-130">SecureString operations</span></span>  
 <span data-ttu-id="cc977-131"><xref:System.Security.SecureString> Klasa zawiera elementy członkowskie, które umożliwiają wykonywanie następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="cc977-131">The <xref:System.Security.SecureString> class includes members that allow you to do the following:</span></span>  
  
 <span data-ttu-id="cc977-132">Tworzenie wystąpienia <xref:System.Security.SecureString> obiektu</span><span class="sxs-lookup"><span data-stu-id="cc977-132">Instantiate a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="cc977-133">Utworzenie wystąpienia <xref:System.Security.SecureString> obiektu przez wywołanie jego konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="cc977-133">You instantiate a <xref:System.Security.SecureString> object by calling its parameterless constructor.</span></span>  
  
 <span data-ttu-id="cc977-134">Dodawanie znaków do <xref:System.Security.SecureString> obiektu</span><span class="sxs-lookup"><span data-stu-id="cc977-134">Add characters to a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="cc977-135">Możesz dodać pojedynczy znak jednocześnie do <xref:System.Security.SecureString> obiektu, wywołując jego <xref:System.Security.SecureString.AppendChar%2A> metodę or <xref:System.Security.SecureString.InsertAt%2A> .</span><span class="sxs-lookup"><span data-stu-id="cc977-135">You can add a single character at a time to a <xref:System.Security.SecureString> object  by calling its <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.InsertAt%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc977-136">Obiekt nigdy nie powinien być zbudowany <xref:System.String>z, ponieważ poufne dane są już uzależnione od niezmiennej <xref:System.String> klasy. <xref:System.Security.SecureString></span><span class="sxs-lookup"><span data-stu-id="cc977-136">A <xref:System.Security.SecureString> object should never be constructed from a <xref:System.String>, because the sensitive data is already subject to the memory persistence consequences of the immutable <xref:System.String> class.</span></span> <span data-ttu-id="cc977-137">Najlepszym sposobem konstruowania <xref:System.Security.SecureString> obiektu jest utworzenie niezarządzanego znaku w czasie, takiego <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> jak metoda.</span><span class="sxs-lookup"><span data-stu-id="cc977-137">The best way to construct a <xref:System.Security.SecureString> object is from a character-at-a-time unmanaged source, such as the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cc977-138">Usuwanie znaków z <xref:System.Security.SecureString> obiektu</span><span class="sxs-lookup"><span data-stu-id="cc977-138">Remove characters from a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="cc977-139">Możesz zamienić pojedynczy znak, wywołując <xref:System.Security.SecureString.SetAt%2A> metodę, usuwając pojedynczy znak przez <xref:System.Security.SecureString.RemoveAt%2A> wywołanie metody lub <xref:System.Security.SecureString> usuwając wszystkie znaki z wystąpienia, wywołując <xref:System.Security.SecureString.Clear%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="cc977-139">You can replace an individual character by calling the <xref:System.Security.SecureString.SetAt%2A> method, remove an individual character by calling the <xref:System.Security.SecureString.RemoveAt%2A> method, or remove all characters from the <xref:System.Security.SecureString> instance by calling the  <xref:System.Security.SecureString.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="cc977-140">Ustaw obiekt <xref:System.Security.SecureString> jako tylko do odczytu</span><span class="sxs-lookup"><span data-stu-id="cc977-140">Make the <xref:System.Security.SecureString> object read-only</span></span>  
 <span data-ttu-id="cc977-141">Po zdefiniowaniu ciągu, który <xref:System.Security.SecureString> reprezentuje obiekt, należy <xref:System.Security.SecureString.MakeReadOnly%2A> wywołać metodę, aby uzyskać ciąg tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-141">Once you have defined the string that the <xref:System.Security.SecureString> object represents, you call its  <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the string read-only.</span></span>  
  
 <span data-ttu-id="cc977-142">Pobierz informacje o <xref:System.Security.SecureString> obiekcie</span><span class="sxs-lookup"><span data-stu-id="cc977-142">Get information about the <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="cc977-143">Klasa ma tylko dwa elementy członkowskie, które zawierają informacje o ciągu: jej <xref:System.Security.SecureString.Length%2A> właściwość, która wskazuje liczbę jednostek kodu zakodowanych UTF16 w ciągu; i <xref:System.Security.SecureString.IsReadOnly%2A>metodę, która wskazuje, czy wystąpienie jest <xref:System.Security.SecureString> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-143">The <xref:System.Security.SecureString> class has only two members that provide information about the string: its <xref:System.Security.SecureString.Length%2A> property, which indicates the number of UTF16-encoded code units in the string; and the <xref:System.Security.SecureString.IsReadOnly%2A>, method, which indicates whether the instance is read-only.</span></span>  
  
 <span data-ttu-id="cc977-144">Zwolnij pamięć przydzieloną do <xref:System.Security.SecureString> wystąpienia</span><span class="sxs-lookup"><span data-stu-id="cc977-144">Release the memory allocated to the <xref:System.Security.SecureString> instance</span></span>  
 <span data-ttu-id="cc977-145">Ponieważ <xref:System.Security.SecureString> <xref:System.Security.SecureString.Dispose%2A> implementuje interfejs,zwolnijpamięć,wywołującmetodę.<xref:System.IDisposable></span><span class="sxs-lookup"><span data-stu-id="cc977-145">Because <xref:System.Security.SecureString> implements the <xref:System.IDisposable> interface, you release its memory by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="cc977-146">Klasa nie ma elementów członkowskich, które sprawdzają, porównują lub konwertują wartość <xref:System.Security.SecureString>. <xref:System.Security.SecureString></span><span class="sxs-lookup"><span data-stu-id="cc977-146">The <xref:System.Security.SecureString> class has no members that inspect, compare, or convert the value of a <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="cc977-147">Brak takich członków pomaga chronić wartość wystąpienia przed przypadkowym lub złośliwym narażeniem.</span><span class="sxs-lookup"><span data-stu-id="cc977-147">The absence of such members helps protect the value of the instance from accidental or malicious exposure.</span></span> <span data-ttu-id="cc977-148">Użyj odpowiednich elementów członkowskich <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> klasy, takich <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> jak metoda, do <xref:System.Security.SecureString> manipulowania wartością obiektu.</span><span class="sxs-lookup"><span data-stu-id="cc977-148">Use appropriate members of the <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> class, such as the <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method, to manipulate the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 <span data-ttu-id="cc977-149">Biblioteka klas .NET Framework często używa <xref:System.Security.SecureString> wystąpień w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="cc977-149">The .NET Framework Class Library commonly uses <xref:System.Security.SecureString> instances in the following ways:</span></span>  
  
-   <span data-ttu-id="cc977-150">Aby podać informacje o haśle do procesu przy użyciu <xref:System.Diagnostics.ProcessStartInfo> struktury lub przez wywołanie przeciążenia <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> metody, która ma parametr typu <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="cc977-150">To provide password information to a process by using the <xref:System.Diagnostics.ProcessStartInfo> structure or by calling an overload of the <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> method that has a parameter of type <xref:System.Security.SecureString>.</span></span>  
  
-   <span data-ttu-id="cc977-151">Aby podać informacje o haśle sieciowym, wywołując <xref:System.Net.NetworkCredential> Konstruktor klasy, który ma parametr typu <xref:System.Security.SecureString> lub przy użyciu <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc977-151">To provide network password information by calling a <xref:System.Net.NetworkCredential> class constructor that has a parameter of type <xref:System.Security.SecureString> or by using the <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="cc977-152">Aby podać informacje o haśle SQL Server uwierzytelniania przez wywołanie <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> konstruktora lub pobranie wartości <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc977-152">To provide password information for SQL Server Authentication by calling the <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> constructor or retrieving the value of the <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="cc977-153">Aby przekazać ciąg do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="cc977-153">To pass a string to unmanaged code.</span></span> <span data-ttu-id="cc977-154">Aby uzyskać więcej informacji, zobacz sekcję [SecureString i](#interop) międzyoperacyjność.</span><span class="sxs-lookup"><span data-stu-id="cc977-154">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 [<span data-ttu-id="cc977-155">Powrót do początku</span><span class="sxs-lookup"><span data-stu-id="cc977-155">Back to top</span></span>](#top)  
  
<a name="interop"></a>   
## <a name="securestring-and-interop"></a><span data-ttu-id="cc977-156">SecureString i Interop</span><span class="sxs-lookup"><span data-stu-id="cc977-156">SecureString and interop</span></span>  
 <span data-ttu-id="cc977-157">Ponieważ system operacyjny nie obsługuje <xref:System.Security.SecureString>bezpośrednio, należy przekonwertować wartość <xref:System.Security.SecureString> obiektu na wymagany typ ciągu przed przekazaniem ciągu do metody natywnej.</span><span class="sxs-lookup"><span data-stu-id="cc977-157">Because the operating system does not  directly support <xref:System.Security.SecureString>, you must convert the value of the <xref:System.Security.SecureString> object to the required string type before passing the string to a native method.</span></span>  <span data-ttu-id="cc977-158"><xref:System.Runtime.InteropServices.Marshal> Klasa ma pięć metod, które wykonują następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="cc977-158">The <xref:System.Runtime.InteropServices.Marshal> class has five methods that do this:</span></span>  
  
-   <span data-ttu-id="cc977-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, która konwertuje <xref:System.Security.SecureString> wartość ciągu na ciąg binarny (BSTR) uznawany przez com.</span><span class="sxs-lookup"><span data-stu-id="cc977-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, which converts the <xref:System.Security.SecureString> string value to a binary string (BSTR) recognized by COM.</span></span>  
  
-   <span data-ttu-id="cc977-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>i <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, która <xref:System.Security.SecureString> kopiuje wartość ciągu do ciągu ANSI w pamięci niezarządzanej.</span><span class="sxs-lookup"><span data-stu-id="cc977-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to an ANSI string in unmanaged memory.</span></span>  
  
-   <span data-ttu-id="cc977-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>i <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, która <xref:System.Security.SecureString> kopiuje wartość ciągu do ciągu Unicode w pamięci niezarządzanej.</span><span class="sxs-lookup"><span data-stu-id="cc977-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to a Unicode string in unmanaged memory.</span></span>  
  
 <span data-ttu-id="cc977-162">Każda z tych metod tworzy ciąg w postaci zwykłego tekstu w pamięci niezarządzanej.</span><span class="sxs-lookup"><span data-stu-id="cc977-162">Each of these methods creates a clear-text string in unmanaged memory.</span></span> <span data-ttu-id="cc977-163">Jest odpowiedzialny za wyzerowanie i zwolnienie pamięci przez dewelopera, gdy tylko nie będą potrzebne.</span><span class="sxs-lookup"><span data-stu-id="cc977-163">It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</span></span> <span data-ttu-id="cc977-164">Każda metoda konwersji ciągów i alokacji pamięci ma odpowiadającą metodę wyzerowania i zwolnienia przydzielonej pamięci:</span><span class="sxs-lookup"><span data-stu-id="cc977-164">Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</span></span>  
  
|<span data-ttu-id="cc977-165">Metoda alokacji i konwersji</span><span class="sxs-lookup"><span data-stu-id="cc977-165">Allocation and conversion method</span></span>|<span data-ttu-id="cc977-166">Zero i bezpłatna Metoda</span><span class="sxs-lookup"><span data-stu-id="cc977-166">Zero and free method</span></span>|  
|--------------------------------------|--------------------------|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=nameWithType>|  
  
 [<span data-ttu-id="cc977-167">Powrót do początku</span><span class="sxs-lookup"><span data-stu-id="cc977-167">Back to top</span></span>](#top)  
  
<a name="HowSecure"></a>   
## <a name="how-secure-is-securestring"></a><span data-ttu-id="cc977-168">Jak bezpieczny jest SecureString?</span><span class="sxs-lookup"><span data-stu-id="cc977-168">How secure is SecureString?</span></span>  
 <span data-ttu-id="cc977-169">Po poprawnym <xref:System.Security.SecureString> utworzeniu wystąpienie zapewnia większą ochronę danych <xref:System.String>niż.</span><span class="sxs-lookup"><span data-stu-id="cc977-169">When created properly, a <xref:System.Security.SecureString> instance provides more data protection than a <xref:System.String>.</span></span> <span data-ttu-id="cc977-170">Podczas tworzenia ciągu na podstawie znaku na początku, program <xref:System.String> tworzy wiele pośrednich w pamięci, podczas gdy <xref:System.Security.SecureString> tworzy tylko jedno wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="cc977-170">When creating a string from a character-at-a-time source, <xref:System.String> creates multiple intermediate in memory, whereas  <xref:System.Security.SecureString> creates just a single instance.</span></span>  <span data-ttu-id="cc977-171">Wyrzucanie elementów bezużytecznych obiektów nie jest deterministyczne. <xref:System.String></span><span class="sxs-lookup"><span data-stu-id="cc977-171">Garbage collection of <xref:System.String> objects  is non-deterministic.</span></span> <span data-ttu-id="cc977-172">Ponadto, ponieważ jej pamięć nie jest przypięta, Moduł wyrzucania elementów bezużytecznych będzie tworzyć dodatkowe kopie <xref:System.String> wartości podczas przesuwania i kompaktowania pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc977-172">In addition, because its memory is not pinned, the garbage collector will make additional copies of <xref:System.String> values when moving and compacting memory.</span></span> <span data-ttu-id="cc977-173">Z kolei pamięć przypięta do <xref:System.Security.SecureString> obiektu jest przypinana i pamięć może zostać zwolniona przez <xref:System.Security.SecureString.Dispose%2A> wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="cc977-173">In contrast, the memory allocated to a <xref:System.Security.SecureString> object is pinned,  and that memory can be freed by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="cc977-174">Mimo że dane przechowywane w <xref:System.Security.SecureString> wystąpieniu są bezpieczniejsze niż dane przechowywane <xref:System.String> w wystąpieniu, istnieją znaczne <xref:System.Security.SecureString> ograniczenia dotyczące sposobu zabezpieczania wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="cc977-174">Although data stored in a <xref:System.Security.SecureString> instance is more secure than data stored in a <xref:System.String> instance, there are significant limitations on how secure a <xref:System.Security.SecureString> instance is.</span></span> <span data-ttu-id="cc977-175">Należą do nich następujące elementy:</span><span class="sxs-lookup"><span data-stu-id="cc977-175">These include:</span></span>  
  
 <span data-ttu-id="cc977-176">Platforma</span><span class="sxs-lookup"><span data-stu-id="cc977-176">Platform</span></span>  
 <span data-ttu-id="cc977-177">W systemie operacyjnym Windows zawartość <xref:System.Security.SecureString> wewnętrznej tablicy znaków wystąpienia jest zaszyfrowana.</span><span class="sxs-lookup"><span data-stu-id="cc977-177">On the Windows operating system, the contents of a <xref:System.Security.SecureString> instance's internal character array are encrypted.</span></span> <span data-ttu-id="cc977-178">Jednak bez względu na to, czy z powodu brakujących interfejsów API lub problemów z zarządzaniem kluczami, szyfrowanie nie jest dostępne na wszystkich platformach.</span><span class="sxs-lookup"><span data-stu-id="cc977-178">However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</span></span> <span data-ttu-id="cc977-179">Ze względu na tę zależność <xref:System.Security.SecureString> platformy program nie szyfruje magazynu wewnętrznego na platformie innej niż Windows.</span><span class="sxs-lookup"><span data-stu-id="cc977-179">Because of this platform dependency, <xref:System.Security.SecureString> does not encrypt the internal storage on non-Windows platform.</span></span> <span data-ttu-id="cc977-180">Inne techniki są używane na tych platformach w celu zapewnienia dodatkowej ochrony.</span><span class="sxs-lookup"><span data-stu-id="cc977-180">Other techniques are used on those platforms to provide additional protection.</span></span>
  
 <span data-ttu-id="cc977-181">Duration</span><span class="sxs-lookup"><span data-stu-id="cc977-181">Duration</span></span>  
 <span data-ttu-id="cc977-182">Nawet jeśli <xref:System.Security.SecureString> implementacja jest w stanie korzystać z szyfrowania, zwykły tekst przypisany <xref:System.Security.SecureString> do wystąpienia może być narażony w różnym czasie:</span><span class="sxs-lookup"><span data-stu-id="cc977-182">Even if the <xref:System.Security.SecureString> implementation is able to take advantage of encryption, the plain text assigned to the <xref:System.Security.SecureString> instance may be exposed at various times:</span></span>  
  
-   <span data-ttu-id="cc977-183">Ponieważ system Windows nie oferuje bezpiecznej implementacji ciągu na poziomie systemu operacyjnego, .NET Framework nadal musi przekonwertować wartość bezpiecznego ciągu na jej reprezentację w postaci zwykłego tekstu, aby można było jej używać.</span><span class="sxs-lookup"><span data-stu-id="cc977-183">Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</span></span>  
  
-   <span data-ttu-id="cc977-184">Za każdym razem, gdy wartość bezpiecznego ciągu jest modyfikowana przy użyciu <xref:System.Security.SecureString.AppendChar%2A> metod <xref:System.Security.SecureString.RemoveAt%2A>takich jak lub, należy ją odszyfrować (oznacza to, że są konwertowane z powrotem na zwykły tekst), modyfikowane i szyfrowane.</span><span class="sxs-lookup"><span data-stu-id="cc977-184">Whenever the value of the secure string is modified by methods such as <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.RemoveAt%2A>, it must be decrypted (that is, converted back to plain text), modified, and then encrypted again.</span></span>  
  
-   <span data-ttu-id="cc977-185">Jeśli bezpieczny ciąg jest używany w wywołaniu międzyoperacyjnym, musi być konwertowany na ciąg ANSI, ciąg Unicode lub ciąg binarny (BSTR).</span><span class="sxs-lookup"><span data-stu-id="cc977-185">If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</span></span> <span data-ttu-id="cc977-186">Aby uzyskać więcej informacji, zobacz sekcję [SecureString i](#interop) międzyoperacyjność.</span><span class="sxs-lookup"><span data-stu-id="cc977-186">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 <span data-ttu-id="cc977-187">Przedział czasu, dla którego <xref:System.Security.SecureString> wartość wystąpienia jest narażony, jest jedynie skracany w porównaniu <xref:System.String> do klasy.</span><span class="sxs-lookup"><span data-stu-id="cc977-187">The time interval for which the <xref:System.Security.SecureString> instance's value is exposed  is merely shortened in comparison to the <xref:System.String> class.</span></span>  
  
 <span data-ttu-id="cc977-188">Magazyn i użycie</span><span class="sxs-lookup"><span data-stu-id="cc977-188">Storage versus usage</span></span>  
 <span data-ttu-id="cc977-189">Bardziej ogólnie rzecz biorąc <xref:System.Security.SecureString> , Klasa definiuje mechanizm magazynowania dla wartości ciągów, które powinny być chronione lub poufne.</span><span class="sxs-lookup"><span data-stu-id="cc977-189">More generally, the <xref:System.Security.SecureString> class defines a storage mechanism for string values that should be protected or kept confidential.</span></span> <span data-ttu-id="cc977-190">Jednakże poza .NET Framework, żaden mechanizm użycia nie obsługuje <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="cc977-190">However, outside of the .NET Framework itself, no usage mechanism supports <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="cc977-191">Oznacza to, że bezpieczny ciąg musi być konwertowany na przydatny formularz (zazwyczaj formularz czysty tekst), który może zostać rozpoznany przez jego obiekt docelowy, a odszyfrowywanie i konwersja muszą następować w przestrzeni użytkownika.</span><span class="sxs-lookup"><span data-stu-id="cc977-191">This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</span></span>  
  
 <span data-ttu-id="cc977-192">Ogólnie, <xref:System.Security.SecureString> jest bezpieczniejszy niż <xref:System.String> ponieważ ogranicza narażenie poufnych danych ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-192">Overall, <xref:System.Security.SecureString> is more secure than <xref:System.String> because it limits the exposure of sensitive string data.</span></span> <span data-ttu-id="cc977-193">Jednak te ciągi mogą być nadal uwidocznione w dowolnym procesie lub operacji, które mają dostęp do pamięci nieprzetworzonej, takich jak złośliwy proces uruchomiony na komputerze-hoście, zrzut procesu lub plik wymiany widoczny dla użytkownika.</span><span class="sxs-lookup"><span data-stu-id="cc977-193">However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</span></span> <span data-ttu-id="cc977-194">Zamiast korzystać <xref:System.Security.SecureString> z programu w celu ochrony haseł, Zalecaną alternatywą jest użycie nieprzezroczystego uchwytu do poświadczeń przechowywanych poza procesem.</span><span class="sxs-lookup"><span data-stu-id="cc977-194">Instead of using <xref:System.Security.SecureString> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</span></span>  
  
 [<span data-ttu-id="cc977-195">Powrót do początku</span><span class="sxs-lookup"><span data-stu-id="cc977-195">Back to top</span></span>](#top)  
  
   
  
## Examples  
 <span data-ttu-id="cc977-196">Poniższy przykład ilustruje sposób użycia programu <xref:System.Security.SecureString> w celu zabezpieczenia hasła użytkownika do użycia jako poświadczenia do uruchomienia nowego procesu.</span><span class="sxs-lookup"><span data-stu-id="cc977-196">The following example demonstrates how to use a <xref:System.Security.SecureString> to secure a user's password for use as a credential to start a new process.</span></span>  
  
 [!code-csharp[System.Security.SecureString.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/ctor4.cs#4)]
 [!code-vb[System.Security.SecureString.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor4.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
    <altmember cref="T:System.Runtime.InteropServices.Marshal" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc977-197">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.SecureString" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="cc977-197">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc977-198">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.SecureString" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="cc977-198">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc977-199">Poniższy przykład używa domyślnego (lub bezparametrowego) konstruktora do utworzenia wystąpienia nowego <xref:System.Security.SecureString> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cc977-199">The following example uses the default (or parameterless) constructor to instantiate a new <xref:System.Security.SecureString> object.</span></span> <span data-ttu-id="cc977-200">Następnie wywołuje metodę, <xref:System.Security.SecureString.AppendChar%2A> aby dodać do niej tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="cc977-200">It then calls the <xref:System.Security.SecureString.AppendChar%2A> method to add an array of characters to it.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor2.cpp#2)]
 [!code-csharp[System.Security.SecureString.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor2.cs#2)]
 [!code-vb[System.Security.SecureString.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor2.vb#2)]  
  
 <span data-ttu-id="cc977-201">Poniższy przykład tworzy <xref:System.Security.SecureString> obiekt z wartości <xref:System.String> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cc977-201">The following example creates a <xref:System.Security.SecureString> object from the value of a <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor3.cpp#3)]
 [!code-csharp[System.Security.SecureString.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor3.cs#3)]
 [!code-vb[System.Security.SecureString.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/Ctor3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="cc977-202">Wystąpił błąd podczas ochrony lub nieochrony wartości tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="cc977-202">An error occurred while protecting or unprotecting the value of this instance.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc977-203">Ta operacja nie jest obsługiwana na tej platformie.</span><span class="sxs-lookup"><span data-stu-id="cc977-203">This operation is not supported on this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString (char* value, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString(char* value, int length);" />
      <MemberSignature Language="F#" Value="new System.Security.SecureString : nativeptr&lt;char&gt; * int -&gt; System.Security.SecureString" Usage="new System.Security.SecureString (value, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc977-204">Wskaźnik do tablicy <see cref="T:System.Char" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="cc977-204">A pointer to an array of <see cref="T:System.Char" /> objects.</span></span></param>
        <param name="length"><span data-ttu-id="cc977-205">Liczba elementów <paramref name="value" /> do uwzględnienia w nowym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="cc977-205">The number of elements of <paramref name="value" /> to include in the new instance.</span></span></param>
        <summary><span data-ttu-id="cc977-206">Inicjuje nowe wystąpienie <see cref="T:System.Security.SecureString" /> klasy z <see cref="T:System.Char" /> podtabeli obiektów.</span><span class="sxs-lookup"><span data-stu-id="cc977-206">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class from a subarray of <see cref="T:System.Char" /> objects.</span></span>  
  
<span data-ttu-id="cc977-207">Ten konstruktor nie jest zgodny ze specyfikacją CLS.</span><span class="sxs-lookup"><span data-stu-id="cc977-207">This constructor is not CLS-compliant.</span></span> <span data-ttu-id="cc977-208">Alternatywa zgodna ze specyfikacją <see cref="M:System.Security.SecureString.#ctor" />CLS ma wartość.</span><span class="sxs-lookup"><span data-stu-id="cc977-208">The CLS-compliant alternative is <see cref="M:System.Security.SecureString.#ctor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-209">Ten konstruktor inicjuje nowy <xref:System.Security.SecureString> obiekt do liczby `value` znaków określonych przez `length`; wartość wystąpienia jest zaszyfrowana.</span><span class="sxs-lookup"><span data-stu-id="cc977-209">This constructor initializes the new <xref:System.Security.SecureString> object to the number of characters in `value` specified by `length`; the value of the instance is then encrypted.</span></span>  
  
 <span data-ttu-id="cc977-210">W C#programie ten konstruktor jest zdefiniowany tylko w kontekście niebezpiecznego kodu.</span><span class="sxs-lookup"><span data-stu-id="cc977-210">In C#, this constructor is defined only in the context of unsafe code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc977-211">Poniższy przykład tworzy wystąpienie nowego <xref:System.Security.SecureString> obiektu, przekazując jego konstruktora wskaźnik do tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="cc977-211">The following example instantiates a new <xref:System.Security.SecureString> object by passing its constructor a pointer to a character array.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cpp/ctor1.cpp#1)]
 [!code-csharp[System.Security.SecureString.Ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cs/ctor1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc977-212"><paramref name="value" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc977-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc977-213"><paramref name="length" />jest mniejsza od zera lub większa niż 65 536.</span><span class="sxs-lookup"><span data-stu-id="cc977-213"><paramref name="length" /> is less than zero or greater than 65,536.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="cc977-214">Wystąpił błąd podczas ochrony lub nieochrony wartości tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-214">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc977-215">Ta operacja nie jest obsługiwana na tej platformie.</span><span class="sxs-lookup"><span data-stu-id="cc977-215">This operation is not supported on this platform.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cc977-216">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="cc977-216">requires full trust for the immediate caller.</span></span> <span data-ttu-id="cc977-217">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="cc977-217">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AppendChar">
      <MemberSignature Language="C#" Value="public void AppendChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.AppendChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChar (c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChar(char c);" />
      <MemberSignature Language="F#" Value="member this.AppendChar : char -&gt; unit" Usage="secureString.AppendChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="cc977-218">Znak do dołączenia do tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-218">A character to append to this secure string.</span></span></param>
        <summary><span data-ttu-id="cc977-219">Dołącza znak na końcu bieżącego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-219">Appends a character to the end of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-220">Jeśli implementacja używa mechanizmu ochrony, takiego jak szyfrowanie, wartość tego bezpiecznego ciągu (jeśli istnieje) nie jest chroniona; `c` jest dołączany, a następnie nowa wartość bezpiecznego ciągu jest ponownie chroniona.</span><span class="sxs-lookup"><span data-stu-id="cc977-220">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; `c` is appended; then the new value of the secure string is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc977-221">W poniższym przykładzie <xref:System.Security.SecureString.AppendChar%2A>pokazano, jak metody, <xref:System.Security.SecureString.RemoveAt%2A> <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, i <xref:System.Security.SecureString.Clear%2A> wpływają na wartość <xref:System.Security.SecureString> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cc977-221">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="cc977-222">W poniższym przykładzie pokazano, jak <xref:System.Security.SecureString.AppendChar%2A> metody <xref:System.Security.SecureString.RemoveAt%2A> i mogą być używane do zbierania znaków w haśle.</span><span class="sxs-lookup"><span data-stu-id="cc977-222">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc977-223">Ten bezpieczny ciąg został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="cc977-223">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc977-224">Ten bezpieczny ciąg jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-224">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc977-225">Wykonanie tej operacji spowodowałoby, że długość tego ciągu bezpiecznego przekracza 65 536 znaków.</span><span class="sxs-lookup"><span data-stu-id="cc977-225">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="cc977-226">Wystąpił błąd podczas ochrony lub nieochrony wartości tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-226">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="secureString.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc977-227">Usuwa wartość bieżącego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-227">Deletes the value of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-228">Pamięć komputera, która zawiera wartość tego bezpiecznego ciągu, jest zerowa, a następnie długość wartości tego bezpiecznego ciągu jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="cc977-228">The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc977-229">W poniższym przykładzie <xref:System.Security.SecureString.AppendChar%2A>pokazano, jak metody, <xref:System.Security.SecureString.RemoveAt%2A> <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, i <xref:System.Security.SecureString.Clear%2A> wpływają na wartość <xref:System.Security.SecureString> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cc977-229">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc977-230">Ten bezpieczny ciąg został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="cc977-230">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc977-231">Ten bezpieczny ciąg jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-231">This secure string is read-only.</span></span></exception>
        <altmember cref="P:System.Security.SecureString.Length" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecureString Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecureString ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecureString" Usage="secureString.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc977-232">Tworzy kopię bieżącego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-232">Creates a copy of the current secure string.</span></span></summary>
        <returns><span data-ttu-id="cc977-233">Duplikat tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-233">A duplicate of this secure string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-234">Jeśli wystąpienie <xref:System.Security.SecureString> obiektu jest oznaczone jako tylko do odczytu, kopia tego wystąpienia nie będzie tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-234">If an instance of a <xref:System.Security.SecureString> is marked read-only, the copy of that instance will not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc977-235">Ten bezpieczny ciąg został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="cc977-235">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="cc977-236">Wystąpił błąd podczas ochrony lub nieochrony wartości tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-236">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureString.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc977-237">Zwalnia wszystkie zasoby używane przez bieżący <see cref="T:System.Security.SecureString" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="cc977-237">Releases all resources used by the current <see cref="T:System.Security.SecureString" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-238">Metoda zapisuje binarne zera do przydzieloną pamięci, która zawiera wartość tego <xref:System.Security.SecureString> obiektu, a następnie zwalnia przydzieloną pamięć. <xref:System.Security.SecureString.Dispose%2A></span><span class="sxs-lookup"><span data-stu-id="cc977-238">The <xref:System.Security.SecureString.Dispose%2A> method writes binary zeroes to the allocated memory that contains the value of this <xref:System.Security.SecureString> object, then frees the allocated memory.</span></span>  
  
 <span data-ttu-id="cc977-239">Aby uzyskać więcej informacji, zobacz [odzyskiwanie pamięci](~/docs/standard/garbage-collection/index.md).</span><span class="sxs-lookup"><span data-stu-id="cc977-239">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : int * char -&gt; unit" Usage="secureString.InsertAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cc977-240">Pozycja indeksu, w której <paramref name="c" /> został wstawiony parametr.</span><span class="sxs-lookup"><span data-stu-id="cc977-240">The index position where parameter <paramref name="c" /> is inserted.</span></span></param>
        <param name="c"><span data-ttu-id="cc977-241">Znak do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="cc977-241">The character to insert.</span></span></param>
        <summary><span data-ttu-id="cc977-242">Wstawia znak w tym bezpiecznym ciągu w podanej pozycji indeksu.</span><span class="sxs-lookup"><span data-stu-id="cc977-242">Inserts a character in this secure string at the specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-243">Indeks jest liczony od zera. pierwszy znak w tym bezpiecznym ciągu znajduje się na pozycji indeksu zero.</span><span class="sxs-lookup"><span data-stu-id="cc977-243">The index is zero-based; the first character in this secure string is at index position zero.</span></span>  
  
 <span data-ttu-id="cc977-244">Jeśli implementacja używa mechanizmu ochrony, takiego jak szyfrowanie, wartość bezpiecznego ciągu (jeśli istnieje) nie jest chroniona; `c` jest wstawiany w określonej pozycji indeksu, a następnie nowa wartość jest ponownie chroniona.</span><span class="sxs-lookup"><span data-stu-id="cc977-244">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is inserted at the specified index position; then the new value is re-protected.</span></span> <span data-ttu-id="cc977-245">Metoda daje takie same wyniki <xref:System.Security.SecureString.AppendChar%2A> jak metoda, która wstawia znak na końcu `index` bezpiecznego ciągu <xref:System.Security.SecureString.InsertAt%2A> , jeśli parametr jest ustawiony na długość tego wystąpienia. <xref:System.Security.SecureString.InsertAt%2A></span><span class="sxs-lookup"><span data-stu-id="cc977-245">The <xref:System.Security.SecureString.InsertAt%2A> method yields the same results as the <xref:System.Security.SecureString.AppendChar%2A> method, which inserts a character at the end of a secure string, if the `index` parameter of <xref:System.Security.SecureString.InsertAt%2A> is set to the length of this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc977-246">W poniższym przykładzie <xref:System.Security.SecureString.AppendChar%2A>pokazano, jak metody, <xref:System.Security.SecureString.RemoveAt%2A> <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, i <xref:System.Security.SecureString.Clear%2A> wpływają na wartość <xref:System.Security.SecureString> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cc977-246">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc977-247">Ten bezpieczny ciąg został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="cc977-247">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc977-248">Ten bezpieczny ciąg jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-248">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc977-249"><paramref name="index" />jest mniejsza od zera lub większa niż długość tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-249"><paramref name="index" /> is less than zero, or greater than the length of this secure string.</span></span>  
  
<span data-ttu-id="cc977-250">—lub—</span><span class="sxs-lookup"><span data-stu-id="cc977-250">-or-</span></span> 
<span data-ttu-id="cc977-251">Wykonanie tej operacji spowodowałoby, że długość tego ciągu bezpiecznego przekracza 65 536 znaków.</span><span class="sxs-lookup"><span data-stu-id="cc977-251">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="cc977-252">Wystąpił błąd podczas ochrony lub nieochrony wartości tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-252">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : unit -&gt; bool" Usage="secureString.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc977-253">Wskazuje, czy ten bezpieczny ciąg jest oznaczony jako tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-253">Indicates whether this secure string is marked read-only.</span></span></summary>
        <returns><span data-ttu-id="cc977-254"><see langword="true" />Jeśli ten bezpieczny ciąg jest oznaczony jako tylko do odczytu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="cc977-254"><see langword="true" /> if this secure string is marked read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-255">Gdy wystąpienie <xref:System.Security.SecureString> jest oznaczone jako tylko do odczytu <xref:System.Security.SecureString.MakeReadOnly%2A> przez metodę, wszelkie próby zmodyfikowania wartości wystąpienia zgłaszają <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="cc977-255">After an instance of <xref:System.Security.SecureString> is marked read-only by the <xref:System.Security.SecureString.MakeReadOnly%2A> method, any attempt to modify the value of the instance throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="cc977-256">Użyj metody <xref:System.Security.SecureString.IsReadOnly%2A> , aby sprawdzić, czy <xref:System.Security.SecureString> jest tylko do odczytu przed próbą zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="cc977-256">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether a <xref:System.Security.SecureString> is read-only before attempting to modify it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc977-257">Ten bezpieczny ciąg został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="cc977-257">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecureString.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Security.SecureString.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc977-258">Pobiera liczbę znaków w bieżącym bezpiecznym ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-258">Gets the number of characters in the current secure string.</span></span></summary>
        <value><span data-ttu-id="cc977-259">Liczba <see cref="T:System.Char" /> obiektów w tym bezpiecznym ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-259">The number of <see cref="T:System.Char" /> objects in this secure string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-260"><xref:System.Security.SecureString.Length%2A> Właściwość zwraca<xref:System.Char> liczbę obiektów w tym wystąpieniu, a nie liczbę znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="cc977-260">The <xref:System.Security.SecureString.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="cc977-261">Znak Unicode może być reprezentowany przez więcej niż jeden <xref:System.Char> obiekt.</span><span class="sxs-lookup"><span data-stu-id="cc977-261">A Unicode character might be represented by more than one <xref:System.Char> object.</span></span>  
  
 <span data-ttu-id="cc977-262">Maksymalna długość <xref:System.Security.SecureString> wystąpienia to 65 536 znaków.</span><span class="sxs-lookup"><span data-stu-id="cc977-262">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc977-263">Ten bezpieczny ciąg został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="cc977-263">This secure string has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="secureString.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc977-264">Powoduje, że wartość tekstowa tego bezpiecznego ciągu jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-264">Makes the text value of this secure string read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-265"><xref:System.Security.SecureString> Zainicjuj wartość tekstową wystąpienia klasy <xref:System.Security.SecureString.%23ctor%2A> z konstruktorami i <xref:System.Security.SecureString.Clear%2A>zmodyfikuj wartość przy użyciu metod, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>i <xref:System.Security.SecureString.AppendChar%2A> .</span><span class="sxs-lookup"><span data-stu-id="cc977-265">Initialize the text value of an instance of the <xref:System.Security.SecureString> class with the <xref:System.Security.SecureString.%23ctor%2A> constructors, and modify the value with the <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, and <xref:System.Security.SecureString.AppendChar%2A> methods.</span></span>  
  
 <span data-ttu-id="cc977-266">Po dokonaniu ostatecznych modyfikacji Użyj <xref:System.Security.SecureString.MakeReadOnly%2A> metody, aby zmienić wartość wystąpienia na niezmienne (tylko do odczytu).</span><span class="sxs-lookup"><span data-stu-id="cc977-266">After you have made your final modifications, use the <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the value of the instance immutable (read-only).</span></span> <span data-ttu-id="cc977-267">Gdy wartość zostanie oznaczona jako tylko do odczytu, jakakolwiek kolejna próba jego modyfikacji wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="cc977-267">After the value is marked as read-only, any further attempt to modify it throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="cc977-268">Efekt wywołania <xref:System.Security.SecureString.MakeReadOnly%2A> jest trwały, <xref:System.Security.SecureString> ponieważ Klasa nie zapewnia żadnych środków, aby ponownie zmodyfikować bezpieczny ciąg.</span><span class="sxs-lookup"><span data-stu-id="cc977-268">The effect of invoking <xref:System.Security.SecureString.MakeReadOnly%2A> is permanent because the <xref:System.Security.SecureString> class provides no means to make the secure string modifiable again.</span></span> <span data-ttu-id="cc977-269">Użyj metody <xref:System.Security.SecureString.IsReadOnly%2A> , aby sprawdzić, czy <xref:System.Security.SecureString> wystąpienie jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-269">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether an instance of <xref:System.Security.SecureString> is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc977-270">W poniższym przykładzie pokazano, jak <xref:System.Security.SecureString.AppendChar%2A> metody <xref:System.Security.SecureString.RemoveAt%2A> i mogą być używane do zbierania znaków w haśle.</span><span class="sxs-lookup"><span data-stu-id="cc977-270">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span> <span data-ttu-id="cc977-271">Po zebraniu hasła jest ono wykonywane tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-271">After the password is collected, it is made read-only.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc977-272">Ten bezpieczny ciąg został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="cc977-272">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="secureString.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cc977-273">Pozycja indeksu znaku w tym bezpiecznym ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-273">The index position of a character in this secure string.</span></span></param>
        <summary><span data-ttu-id="cc977-274">Usuwa znak z podanej pozycji indeksu z tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-274">Removes the character at the specified index position from this secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-275">Indeks jest liczony od zera. pierwszy znak w tym wystąpieniu znajduje się na pozycji indeksu zero.</span><span class="sxs-lookup"><span data-stu-id="cc977-275">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="cc977-276">Jeśli implementacja używa mechanizmu ochrony, takiego jak szyfrowanie, wartość tego bezpiecznego ciągu (jeśli istnieje) nie jest chroniona; znak z podanej pozycji indeksu zostanie usunięty; następnie nowa wartość jest ponownie chroniona.</span><span class="sxs-lookup"><span data-stu-id="cc977-276">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc977-277">W poniższym przykładzie <xref:System.Security.SecureString.AppendChar%2A>pokazano, jak metody, <xref:System.Security.SecureString.RemoveAt%2A> <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, i <xref:System.Security.SecureString.Clear%2A> wpływają na wartość <xref:System.Security.SecureString> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cc977-277">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="cc977-278">W poniższym przykładzie pokazano, jak <xref:System.Security.SecureString.AppendChar%2A> metody <xref:System.Security.SecureString.RemoveAt%2A> i mogą być używane do zbierania znaków w haśle.</span><span class="sxs-lookup"><span data-stu-id="cc977-278">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc977-279">Ten bezpieczny ciąg został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="cc977-279">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc977-280">Ten bezpieczny ciąg jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-280">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc977-281"><paramref name="index" />jest mniejsza od zera lub większa lub równa długości tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-281"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="cc977-282">Wystąpił błąd podczas ochrony lub nieochrony wartości tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-282">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAt">
      <MemberSignature Language="C#" Value="public void SetAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.SetAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.SetAt : int * char -&gt; unit" Usage="secureString.SetAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cc977-283">Pozycja indeksu istniejącego znaku w tym bezpiecznym ciągu</span><span class="sxs-lookup"><span data-stu-id="cc977-283">The index position of an existing character in this secure string</span></span></param>
        <param name="c"><span data-ttu-id="cc977-284">Znak, który zastępuje istniejący znak.</span><span class="sxs-lookup"><span data-stu-id="cc977-284">A character that replaces the existing character.</span></span></param>
        <summary><span data-ttu-id="cc977-285">Zastępuje istniejący znak w podanej pozycji indeksu innym znakiem.</span><span class="sxs-lookup"><span data-stu-id="cc977-285">Replaces the existing character at the specified index position with another character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc977-286">Indeks jest liczony od zera. pierwszy znak w tym wystąpieniu znajduje się na pozycji indeksu zero.</span><span class="sxs-lookup"><span data-stu-id="cc977-286">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="cc977-287">Jeśli implementacja używa mechanizmu ochrony, takiego jak szyfrowanie, wartość bezpiecznego ciągu (jeśli istnieje) nie jest chroniona; `c` jest przypisany do określonej pozycji indeksu, a następnie nowa wartość jest ponownie chroniona.</span><span class="sxs-lookup"><span data-stu-id="cc977-287">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is assigned to the specified index position; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc977-288">W poniższym przykładzie <xref:System.Security.SecureString.AppendChar%2A>pokazano, jak metody, <xref:System.Security.SecureString.RemoveAt%2A> <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, i <xref:System.Security.SecureString.Clear%2A> wpływają na wartość <xref:System.Security.SecureString> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cc977-288">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc977-289">Ten bezpieczny ciąg został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="cc977-289">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc977-290">Ten bezpieczny ciąg jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cc977-290">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc977-291"><paramref name="index" />jest mniejsza od zera lub większa lub równa długości tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-291"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="cc977-292">Wystąpił błąd podczas ochrony lub nieochrony wartości tego bezpiecznego ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc977-292">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
