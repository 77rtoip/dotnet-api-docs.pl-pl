<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecureString.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f06352fcacdabe46f8a02266efc7ecb816129c3b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f06352fcacdabe46f8a02266efc7ecb816129c3b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecureString">
          <source>Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</source>
          <target state="translated">Reprezentuje tekst, który powinny być poufne, takie jak, usuwając go w pamięci komputera, gdy nie są już potrzebne.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.SecureString">
          <source>This class cannot be inherited.</source>
          <target state="translated">Klasa ta nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is a string type that provides a measure of security.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> jest typu ciąg, który zawiera miary zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>It tries to avoid storing potentially sensitive strings in process memory as plain text.</source>
          <target state="translated">Próbuje uniknąć przechowywanie potencjalnie poufnych ciągów w pamięci procesu jako zwykły tekst.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>(For limitations, however, see the <bpt id="p1">[</bpt>How secure is SecureString?<ept id="p1">](#HowSecure)</ept> section.) The value of an instance of <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</source>
          <target state="translated">(Ograniczenia, jednak wystąpić <bpt id="p1">[</bpt>jak bezpieczne jest SecureString?<ept id="p1">](#HowSecure)</ept> sekcji.) Wartość wystąpienia <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> jest automatycznie chronione przy użyciu mechanizmu obsługiwane przez podstawowej platformy po zainicjowaniu wystąpienia lub modyfikacji wartości.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Your application can render the instance immutable and prevent further modification by invoking the <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Aplikacja może renderować niezmienialne wystąpienie i uniknąć dalszych zmiany wywołując <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The maximum length of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance is 65,536 characters.</source>
          <target state="translated">Maksymalna długość <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> wystąpienia wynosi 65 536 znaków.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ten typ implementuje <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Po zakończeniu za pomocą wystąpienia typu bezpośrednio lub pośrednio należy usunąć z niego.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Do usuwania tego typu, należy wywołać jej <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> metody w <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloku.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak <ph id="ph1">`using`</ph> (w języku C#) lub <ph id="ph2">`Using`</ph> (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfejsu tematu.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class and its members are not visible to COM.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> Klasy i jej elementów członkowskich nie są widoczne dla modelu COM.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>In this section:</source>
          <target state="translated">W tej sekcji:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>String vs. SecureString<ept id="p1">](#vsString)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Ciąg wersji programu vs. SecureString<ept id="p1">](#vsString)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>SecureString operations<ept id="p1">](#Ops)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Operacje SecureString<ept id="p1">](#Ops)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>SecureString i międzyoperacyjne<ept id="p1">](#interop)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>How secure is  SecureString?<ept id="p1">](#HowSecure)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Jak bezpieczne jest SecureString?<ept id="p1">](#HowSecure)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>String versus SecureString</source>
          <target state="translated">Ciąg lub SecureString</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>An instance of the <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> klasy jest niezmienialny i, gdy nie są już potrzebne, nie może być programowo zaplanowane do wyrzucanie elementów bezużytecznych; wystąpienia jest tylko do odczytu po utworzeniu i nie jest możliwe do przewidzenia, kiedy będzie wystąpienia usunięte z pamięci komputera.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> wystąpienia są niezmienne, operacje, które są wyświetlane, aby zmodyfikować istniejące wystąpienie faktycznie utwórz jego kopię do manipulowania.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Consequently, if a <ph id="ph1">&lt;xref:System.String&gt;</ph> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</source>
          <target state="translated">W związku z tym jeśli <ph id="ph1">&lt;xref:System.String&gt;</ph> obiektu zawiera poufne informacje, takie jak hasła, numer karty kredytowej lub dane osobowe, istnieje ryzyko informacje mogą uzyskać dostęp, gdy jest używane, ponieważ aplikacja nie może usunąć dane z pamięci komputera .</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is similar to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object in that it has a text value.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu jest podobny do <ph id="ph2">&lt;xref:System.String&gt;</ph> obiektów w tym ma wartość tekstową.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, the value of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method  or by the .NET Framework garbage collector.</source>
          <target state="translated">Jednak wartość <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiekt jest przypięta w pamięci, może używać mechanizm ochrony, takie jak szyfrowania, obsługiwanego przez system operacyjny, można modyfikować, dopóki aplikacja oznacza je jako tylko do odczytu i może być usunięty z pamięci komputera przy wywołaniu z aplikacji <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> metody lub przez moduł zbierający elementy bezużyteczne .NET Framework.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For a discussion of the limitations of the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class, see the <bpt id="p1">[</bpt>How secure is  SecureString?<ept id="p1">](#HowSecure)</ept> section.</source>
          <target state="translated">Aby uzyskać informacje dotyczące ograniczenia <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> , zobacz <bpt id="p1">[</bpt>jak bezpieczne SecureString jest?<ept id="p1">](#HowSecure)</ept> sekcji.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Powrót do początku<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>SecureString operations</source>
          <target state="translated">Operacje SecureString</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class includes members that allow you to do the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> Klasa zawiera elementy członkowskie, które umożliwiają wykonywanie następujących czynności:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Instantiate a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Utwórz wystąpienie <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object by calling its parameterless constructor.</source>
          <target state="translated">Można utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu przez wywołanie jego konstruktora bez parametrów.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Add characters to a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Dodawanie znaków <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>You can add a single character at a time to a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object  by calling its <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> method.</source>
          <target state="translated">Można dodać jednego znaku w czasie, aby <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu przez wywołanie jego <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object should never be constructed from a <ph id="ph2">&lt;xref:System.String&gt;</ph>, because the sensitive data is already subject to the memory persistence consequences of the immutable <ph id="ph3">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiekt nigdy nie powinien być skonstruowany na podstawie <ph id="ph2">&lt;xref:System.String&gt;</ph>, ponieważ dane poufne już podlega konsekwencje trwałości pamięci niezmienne <ph id="ph3">&lt;xref:System.String&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The best way to construct a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is from a character-at-a-time unmanaged source, such as the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Najlepszym sposobem tworzenia <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiekt jest niezarządzanego źródła znaku w czasie, takie jak <ph id="ph2">&lt;xref:System.Console.ReadKey%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Remove characters from a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Usuń znaki z <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>You can replace an individual character by calling the <ph id="ph1">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph> method, remove an individual character by calling the <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> method, or remove all characters from the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> instance by calling the  <ph id="ph4">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Można zastąpić indywidualnym przez wywołanie metody <ph id="ph1">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph> metody, Usuń znak poszczególnych przez wywołanie metody <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> metody lub Usuń wszystkie znaki od <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> wystąpienia przez wywołanie metody <ph id="ph4">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> — metoda.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Make the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object read-only</source>
          <target state="translated">Wprowadź <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu tylko do odczytu</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Once you have defined the string that the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object represents, you call its  <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method to make the string read-only.</source>
          <target state="translated">Po zdefiniowaniu ciąg który <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> reprezentuje obiekt, należy wywołać jej <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> metodę, aby oznaczyć ciąg tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Get information about the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Uzyskiwanie informacji <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class has only two members that provide information about the string: its <ph id="ph2">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> property, which indicates the number of UTF16-encoded code units in the string; and the <ph id="ph3">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph>, method, which indicates whether the instance is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> Klasa ma tylko dwa elementy członkowskie, które udostępniają informacje na temat ciągu: jego <ph id="ph2">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> właściwość, która wskazuje liczbę jednostek kodu UTF16 zakodowane w ciągu; i <ph id="ph3">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph>, metody, która wskazuje, czy to wystąpienie tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Release the memory allocated to the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance</source>
          <target state="translated">Zwolnij pamięć przydzielona programowi <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> wystąpienia</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface, you release its memory by calling the <ph id="ph3">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implementuje <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interfejsu, zwolnij pamięci przez wywołanie metody <ph id="ph3">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class has no members that inspect, compare, or convert the value of a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> Klasa nie ma elementów członkowskich inspekcję, porównaj lub przekonwertować wartości <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The absence of such members helps protect the value of the instance from accidental or malicious exposure.</source>
          <target state="translated">Braku takich członków pomaga w ochronie wartość wystąpienia przed przypadkowym lub złośliwymi zagrożeń.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Use appropriate members of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;</ph> method, to manipulate the value of a <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">Użyć odpowiednich członków grupy <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType&gt;</ph> klas, takich jak <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;</ph> metody do manipulowania wartość <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The .NET Framework Class Library commonly uses <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instances in the following ways:</source>
          <target state="translated">Biblioteka klas programu .NET Framework często używa <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> wystąpień w następujący sposób:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To provide password information to a process by using the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> structure or by calling an overload of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType&gt;</ph> method that has a parameter of type <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph>.</source>
          <target state="translated">Aby podać informacje hasła do procesu za pomocą <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> struktury lub poprzez wywołanie przeciążenia <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType&gt;</ph> metodę, która ma parametr typu <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To provide network password information by calling a <ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> class constructor that has a parameter of type <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> or by using the <ph id="ph3">&lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Zapewnienie informacji o hasłach sieci przez wywołanie metody <ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> konstruktora klasy, która ma parametr typu <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> lub za pomocą <ph id="ph3">&lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To provide password information for SQL Server Authentication by calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor or retrieving the value of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Aby podać informacje hasło dla uwierzytelniania programu SQL Server przez wywołanie metody <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType&gt;</ph> konstruktora lub pobierania wartości <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To pass a string to unmanaged code.</source>
          <target state="translated">Aby przekazać ciąg do kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>SecureString i międzyoperacyjnego<ept id="p1">](#interop)</ept> sekcji.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Powrót do początku<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>SecureString and interop</source>
          <target state="translated">SecureString i międzyoperacyjne</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because the operating system does not  directly support <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>, you must convert the value of the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object to the required string type before passing the string to a native method.</source>
          <target state="translated">Ponieważ system operacyjny nie obsługuje bezpośrednio <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>, należy przekonwertować wartość <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> obiektu na typ ciągu wymagana przed przekazaniem ciąg do metody natywnej.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class has five methods that do this:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> Klasa ma pięć metod, które w tym:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType&gt;</ph>, which converts the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> string value to a binary string (BSTR) recognized by COM.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType&gt;</ph>, która konwertuje <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> ciągu wartości ciągu binarnego (BSTR) rozpoznawany przez modelu COM.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType&gt;</ph>, which copy the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> string value to an ANSI string in unmanaged memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType&gt;</ph>, których kopia <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> wartość na ciąg ANSI w pamięci niezarządzanej ciągu.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph>, which copy the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> string value to a Unicode string in unmanaged memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph>, których kopia <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> wartość na ciąg Unicode w pamięci niezarządzanej ciągu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Each of these methods creates a clear-text string in unmanaged memory.</source>
          <target state="translated">Każda z tych metod tworzy ciąg zwykłego tekstu w pamięci niezarządzanej.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</source>
          <target state="translated">Jest odpowiedzialny za deweloperowi zero wychodzących i zwolnić pamięć tego, jak jest już potrzebne.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</source>
          <target state="translated">Każdej z metod alokacji konwersji i pamięć ciąg ma odpowiedniej metody do zera limit oraz o wolnym alokacji pamięci:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Allocation and conversion method</source>
          <target state="translated">Metoda alokacji i konwersji</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Zero and free method</source>
          <target state="translated">Zero i free — metoda</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Powrót do początku<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>How secure is SecureString?</source>
          <target state="translated">Jak bezpieczne jest SecureString?</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>When created properly, a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance provides more data protection than a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Podczas tworzenia prawidłowo, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> wystąpienia chroni więcej danych niż <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>When creating a string from a character-at-a-time source, <ph id="ph1">&lt;xref:System.String&gt;</ph> creates multiple intermediate in memory, whereas  <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> creates just a single instance.</source>
          <target state="translated">Podczas tworzenia ciąg ze źródła znaku w czasie <ph id="ph1">&lt;xref:System.String&gt;</ph> tworzy wiele obiektów w pamięci, podczas gdy <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> tworzy tylko jedno wystąpienie.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Garbage collection of <ph id="ph1">&lt;xref:System.String&gt;</ph> objects  is non-deterministic.</source>
          <target state="translated">Wyrzucanie elementów bezużytecznych z <ph id="ph1">&lt;xref:System.String&gt;</ph> obiektów jest deterministyczna.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>In addition, because its memory is not pinned, the garbage collector will make additional copies of <ph id="ph1">&lt;xref:System.String&gt;</ph> values when moving and compacting memory.</source>
          <target state="translated">Ponadto, ponieważ jego pamięci nie jest przypięty, moduł zbierający elementy bezużyteczne spowoduje dodatkowych kopii <ph id="ph1">&lt;xref:System.String&gt;</ph> wartości po przenoszenie i kompaktowanie pamięci.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>In contrast, the memory allocated to a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is pinned,  and that memory can be freed by calling the <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">Z kolei ilość pamięci przydzielona do <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu jest przypięty i pamięci, może zostać zwolniony przez wywołanie metody <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Although data stored in a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance is more secure than data stored in a <ph id="ph2">&lt;xref:System.String&gt;</ph> instance, there are significant limitations on how secure a <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> instance is.</source>
          <target state="translated">Mimo że dane przechowywane w <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> wystąpienia jest bezpieczniejsza niż dane przechowywane w <ph id="ph2">&lt;xref:System.String&gt;</ph> wystąpienia, występują znaczne ograniczenia w sposób bezpieczny <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> wystąpienie jest.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>These include:</source>
          <target state="translated">Należą do nich następujące elementy:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Platform</source>
          <target state="translated">Platforma</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>On the Windows operating system, the contents of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance's internal character array is encrypted.</source>
          <target state="translated">W systemie operacyjnym Windows, zawartość <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> tablicy znaków wewnętrzny instancji są szyfrowane.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</source>
          <target state="translated">Jednak czy ze względu na Brak interfejsów API lub problemy dotyczące zarządzania kluczami, szyfrowanie nie jest dostępne na wszystkich platformach.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because of this, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is available on Desktop (Windows only), and not on .NET Core.</source>
          <target state="translated">W związku z tym <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> jest dostępny na pulpicie (tylko system Windows), a nie na .NET Core.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Duration</source>
          <target state="translated">Czas trwania</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Even if the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implementation is able to take advantage of encryption, the plain text assigned to the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> instance may be exposed at various times:</source>
          <target state="translated">Nawet jeśli <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implementacji jest w stanie korzystać z szyfrowania, zwykły tekst przypisany do <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> wystąpienie może zostać uwidoczniona w różnym czasie:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</source>
          <target state="translated">Ponieważ system Windows nie oferują implementacji bezpieczny ciąg, na poziomie systemu operacyjnego, programu .NET Framework jest nadal ma można przekonwertować wartości bezpieczny ciąg do jej reprezentacji w postaci zwykłego tekstu, aby można było go używać.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Whenever the value of the secure string is modified by methods such as <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, it must be decrypted (i.e., converted back to plain text), modified, and then encrypted again.</source>
          <target state="translated">Zawsze, gdy wartość bezpieczny ciąg jest modyfikowana za pomocą metod takich jak <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, musi być odszyfrowane (tj. przekonwertowany z powrotem na zwykły tekst), modyfikować i ponownie szyfrowane.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</source>
          <target state="translated">Jeśli bezpieczny ciąg jest używany w wywołaniu międzyoperacyjnego, muszą zostać skonwertowane do ciągu ANSI, ciąg Unicode lub ciąg binarny (BSTR).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>SecureString i międzyoperacyjnego<ept id="p1">](#interop)</ept> sekcji.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The time interval for which the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance's value is exposed  is merely shortened in comparison to the <ph id="ph2">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">Przedział czasu, dla którego <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> wartość wystąpienia jest widoczna tylko jest skrócona, w porównaniu z <ph id="ph2">&lt;xref:System.String&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Storage versus usage</source>
          <target state="translated">Porównanie użycia magazynów</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>More generally, the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class defines a storage mechanism for string values that should be protected or kept confidential.</source>
          <target state="translated">Ogólnie rzecz biorąc <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> klasa definiuje mechanizm magazynu wartości ciągów, które powinny być chronione lub poufne.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, outside of the .NET Framework itself, no usage mechanism supports <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>.</source>
          <target state="translated">Poza .NET Framework sam mechanizm użycia obsługuje jednak <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</source>
          <target state="translated">Oznacza to, że bezpieczny ciąg muszą zostać skonwertowane do użytecznej postaci (zwykle w postaci zwykłego tekstu), który może zostać rozpoznany przez jego obiekt docelowy i że odszyfrowywania i konwersji musi przypadać w przestrzeni.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Overall, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is more secure than <ph id="ph2">&lt;xref:System.String&gt;</ph> because it limits the exposure of sensitive string data.</source>
          <target state="translated">Ogólne <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> jest bezpieczniejsza niż <ph id="ph2">&lt;xref:System.String&gt;</ph> ponieważ ogranicza ujawnienia danych poufnych ciągu.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</source>
          <target state="translated">Jednak te ciągi nadal mogą być narażone na proces ani operacja, która ma dostęp do pamięci, takich jak złośliwe procesu uruchomionego na komputerze-hoście, zrzutu procesu lub plik wymiany widoczny dla użytkownika.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Instead of using <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</source>
          <target state="translated">Zamiast <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> do ochrony haseł, zalecaną alternatywą jest użycie nieprzezroczystego uchwyt poświadczenia, które są przechowywane poza procesem.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Powrót do początku<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The following example demonstrates how to use a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> to secure a user’s password for use as a credential to start a new process.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> do bezpiecznego hasła użytkownika do użycia jako poświadczenie, aby uruchomić nowego procesu.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:System.Security.SecureString">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor">
          <source>The following example uses the default (or parameterless) constructor to instantiate a new <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie użyto wartość domyślna (lub bez parametrów) konstruktora, aby utworzyć obiekt klasy <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> method to add an array of characters to it.</source>
          <target state="translated">Następnie wywołuje <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> metody, aby dodać do tablicy znaków.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object from the value of a <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiekt z wartością <ph id="ph2">&lt;xref:System.String&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor">
          <source>An error occurred while protecting or unprotecting the value of this instance.</source>
          <target state="translated">Wystąpił błąd podczas ochrony lub wyłączenie wartość tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Ta operacja nie jest obsługiwana na tej platformie.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>A pointer to an array of <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> objects.</source>
          <target state="translated">Wskaźnik do tablicy <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>The number of elements of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to include in the new instance.</source>
          <target state="translated">Liczba elementów <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> do uwzględnienia w tym nowym wystąpieniu.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> class from a subarray of <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> objects.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> klasy z subarray z <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This constructor is not CLS-compliant.</source>
          <target state="translated">Ten konstruktor nie jest zgodny ze specyfikacją CLS.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>The CLS-compliant alternative is <ph id="ph1">&lt;see cref="M:System.Security.SecureString.#ctor" /&gt;</ph>.</source>
          <target state="translated">Alternatywnym, zgodnym ze specyfikacją CLS jest <ph id="ph1">&lt;see cref="M:System.Security.SecureString.#ctor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This constructor initializes the new <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object to the number of characters in <ph id="ph2">`value`</ph> specified by <ph id="ph3">`length`</ph>; the value of the instance is then encrypted.</source>
          <target state="translated">Ten konstruktor inicjuje nowy <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiekt, aby liczba znaków w <ph id="ph2">`value`</ph> określonego przez <ph id="ph3">`length`</ph>; wartość wystąpienia jest następnie szyfrowany.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>In C#, this constructor is defined only in the context of unsafe code.</source>
          <target state="translated">W języku C# ten konstruktor jest zdefiniowany tylko w kontekście niebezpieczny kod.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>The following example instantiates a new <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object by passing its constructor a pointer to a character array.</source>
          <target state="translated">Poniższy przykład tworzy nową <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> obiektu przez przekazanie jej konstruktora wskaźnika do tablicy znaków.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="length" /&gt;</ph> is less than zero or greater than 65,536.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> jest mniejsza niż zero lub większy niż 65 536.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Wystąpił błąd podczas ochrony lub wyłączenie wartość tego ciągu bezpiecznego.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Ta operacja nie jest obsługiwana na tej platformie.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>A character to append to this secure string.</source>
          <target state="translated">Znak do dołączenia do tego ciągu bezpiecznego.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>Appends a character to the end of the current secure string.</source>
          <target state="translated">Dołącza znak na końcu aktualnie bezpiecznego ciągu.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is appended; then the new value of the secure string is re-protected.</source>
          <target state="translated">Jeśli implementacja używa mechanizmu ochrony, takimi jak szyfrowanie, wartość ta bezpieczny ciąg, jeśli istnieje, nie jest chroniony; <ph id="ph1">`c`</ph> jest dołączany; nowa wartość bezpieczny ciąg jest ponownego włączenia jego ochrony.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> metod na wartość <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> methods can be used to collect the characters in a password.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> metody może służyć do zbierania znaków w haśle.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">To bezpieczny ciąg został już usunięty.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>This secure string is read-only.</source>
          <target state="translated">Ten ciąg bezpieczny jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">Wykonanie tej operacji spowodowałoby, długość to bezpieczny ciąg przekracza 65 536 znaków.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Wystąpił błąd podczas ochrony lub wyłączenie wartość tego ciągu bezpiecznego.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Clear">
          <source>Deletes the value of the current secure string.</source>
          <target state="translated">Usuwa wartość bieżącego bezpieczny ciąg.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Clear">
          <source>The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</source>
          <target state="translated">Mają być wyzerowane pamięci komputera, która zawiera wartość to bezpieczny ciąg, a następnie długość wartości to bezpieczny ciąg ma wartość zero.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Clear">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> metod na wartość <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Clear">
          <source>This secure string has already been disposed.</source>
          <target state="translated">To bezpieczny ciąg został już usunięty.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Clear">
          <source>This secure string is read-only.</source>
          <target state="translated">Ten ciąg bezpieczny jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>Creates a copy of the current secure string.</source>
          <target state="translated">Tworzy kopię bieżącego bezpieczny ciąg.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>A duplicate of this secure string.</source>
          <target state="translated">Duplikat tego ciągu bezpiecznego.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Copy">
          <source>If an instance of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is marked read-only, the copy of that instance will not be read-only.</source>
          <target state="translated">Jeśli wystąpienie <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> jest oznaczony jako tylko do odczytu, kopię tego wystąpienia nie będzie tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>This secure string has already been disposed.</source>
          <target state="translated">To bezpieczny ciąg został już usunięty.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Wystąpił błąd podczas ochrony lub wyłączenie wartość tego ciągu bezpiecznego.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Dispose">
          <source>Releases all resources used by the current <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object.</source>
          <target state="translated">Zwalnia wszelkie zasoby używane przez bieżące <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method writes binary zeroes to the allocated memory that contains the value of this <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object, then frees the allocated memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> Metoda zapisuje binarne zer alokacji pamięci, który zawiera wartość tego <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> obiektu, a następnie zwalnia alokacji pamięci.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>wyrzucanie elementów bezużytecznych<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The index position where parameter <bpt id="p1">&lt;c&gt;</bpt>c<ept id="p1">&lt;/c&gt;</ept> is inserted.</source>
          <target state="translated">Gdzie umieścić indeks parametru <bpt id="p1">&lt;c&gt;</bpt>c<ept id="p1">&lt;/c&gt;</ept> dodaje się.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The character to insert.</source>
          <target state="translated">Znak do wstawienia.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>Inserts a character in this secure string at the specified index position.</source>
          <target state="translated">Wstawia znak w tym bezpiecznego ciągu w miejscu określonym indeksie.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The index is zero-based; the first character in this secure string is at index position zero.</source>
          <target state="translated">Indeks jest liczony od zera; pierwszy znak w tym bezpieczny ciąg jest na pozycji indeksu zero.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is inserted at the specified index position; then the new value is re-protected.</source>
          <target state="translated">Jeśli implementacja używa mechanizmu ochrony, takimi jak szyfrowanie, wartość bezpieczny ciąg, jeśli istnieje, nie jest chroniony; <ph id="ph1">`c`</ph> dodaje się na pozycji indeksu określonego; nowa wartość jest ponownego włączenia jego ochrony.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> method yields the same results as the <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> method, which inserts a character at the end of a secure string, if the <ph id="ph3">`index`</ph> parameter of <ph id="ph4">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> is set to the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> Metody daje takie same wyniki jak <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> metodę, która wstawia znak na końcu bezpieczny ciąg, jeśli <ph id="ph3">`index`</ph> parametr <ph id="ph4">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> jest równa długości tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> metod na wartość <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">To bezpieczny ciąg został już usunięty.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>This secure string is read-only.</source>
          <target state="translated">Ten ciąg bezpieczny jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or greater than the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera, lub większa niż długość tego ciągu bezpiecznego.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">Wykonanie tej operacji spowodowałoby, długość to bezpieczny ciąg przekracza 65 536 znaków.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Wystąpił błąd podczas ochrony lub wyłączenie wartość tego ciągu bezpiecznego.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.IsReadOnly">
          <source>Indicates whether this secure string is marked read-only.</source>
          <target state="translated">Wskazuje, czy to bezpieczny ciąg jest oznaczony jako tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this secure string is marked read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ten ciąg bezpieczny jest oznaczony jako tylko do odczytu. w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.IsReadOnly">
          <source>After an instance of <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is marked read-only by the <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method, any attempt to modify the value of the instance throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Po wystąpieniu <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> jest oznaczony jako tylko do odczytu przez <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> metody próby zmodyfikuj wartość zgłasza wystąpienia <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.IsReadOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> method to test whether a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> is read-only before attempting to modify it.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> metody do testowania czy <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> jest tylko do odczytu, przed podjęciem próby zmodyfikowania go.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.IsReadOnly">
          <source>This secure string has already been disposed.</source>
          <target state="translated">To bezpieczny ciąg został już usunięty.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.SecureString.Length">
          <source>Gets the number of characters in the current secure string.</source>
          <target state="translated">Pobiera liczbę znaków w bieżącym bezpieczny ciąg.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>The number of <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> objects in this secure string.</source>
          <target state="translated">Liczba <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> obiektów w tym bezpiecznego ciągu.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> property returns the number of <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects in this instance, not the number of Unicode characters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> Właściwość zwraca liczbę <ph id="ph2">&lt;xref:System.Char&gt;</ph> obiektów w tym wystąpieniu, nie liczbę znaków Unicode.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>A Unicode character might be represented by more than one <ph id="ph1">&lt;xref:System.Char&gt;</ph> object.</source>
          <target state="translated">Znak Unicode może być reprezentowany przez więcej niż jedną <ph id="ph1">&lt;xref:System.Char&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>The maximum length of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance is 65,536 characters.</source>
          <target state="translated">Maksymalna długość <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> wystąpienia wynosi 65 536 znaków.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Security.SecureString.Length">
          <source>This secure string has already been disposed.</source>
          <target state="translated">To bezpieczny ciąg został już usunięty.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>Makes the text value of this secure string read-only.</source>
          <target state="translated">Powoduje, że wartość tekstu tego bezpieczny ciąg tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>Initialize the text value of an instance of the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class with the <ph id="ph2">&lt;xref:System.Security.SecureString.%23ctor%2A&gt;</ph> constructors, and modify the value with the <ph id="ph3">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> methods.</source>
          <target state="translated">Inicjowanie wartości tekstowej wystąpienia <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> klasy z <ph id="ph2">&lt;xref:System.Security.SecureString.%23ctor%2A&gt;</ph> konstruktory i zmodyfikuj wartości z <ph id="ph3">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, i <ph id="ph7">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>After you have made your final modifications, use the <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method to make the value of the instance immutable (read-only).</source>
          <target state="translated">Po dokonaniu końcowego modyfikacje, użyj <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> metodę, aby wprowadzić wartość wystąpienia niezmienne (tylko do odczytu).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>After the value is marked as read-only, any further attempt to modify it throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Po wartość został oznaczony jako tylko do odczytu, dalsze próby go zmodyfikować zgłasza <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>The effect of invoking <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> is permanent because the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> class provides no means to make the secure string modifiable again.</source>
          <target state="translated">Efekt wywoływania <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> jest trwały ponieważ <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> klasa udostępnia sposób stał bezpieczny ciąg można modyfikować.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> method to test whether an instance of <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> is read-only.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> metody, aby sprawdzić, czy wystąpienie <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> methods can be used to collect the characters in a password.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> metody może służyć do zbierania znaków w haśle.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>After the password is collected, it is made read-only.</source>
          <target state="translated">Po zebraniu hasło staje się tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>This secure string has already been disposed.</source>
          <target state="translated">To bezpieczny ciąg został już usunięty.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The index position of a character in this secure string.</source>
          <target state="translated">Indeks znaków w tym ciągu bezpiecznego.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>Removes the character at the specified index position from this secure string.</source>
          <target state="translated">Usuwa znak na pozycji indeksu określony ciąg bezpieczny.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">Indeks jest liczony od zera; pierwszy znak w tym wystąpieniu jest na pozycji indeksu zero.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</source>
          <target state="translated">Jeśli implementacja używa mechanizmu ochrony, takimi jak szyfrowanie, wartość ta bezpieczny ciąg, jeśli istnieje, nie jest chroniony; znak na pozycji określony indeks zostanie usunięta; Nowa wartość jest następnie ponownego włączenia jego ochrony.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> metod na wartość <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> methods can be used to collect the characters in a password.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> metody może służyć do zbierania znaków w haśle.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">To bezpieczny ciąg został już usunięty.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>This secure string is read-only.</source>
          <target state="translated">Ten ciąg bezpieczny jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> nie może być większa niż zero, lub większa niż długość to bezpieczny ciąg.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Wystąpił błąd podczas ochrony lub wyłączenie wartość tego ciągu bezpiecznego.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>The index position of an existing character in this secure string</source>
          <target state="translated">Indeks istniejącego znaku w tym ciągu bezpiecznego</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>A character that replaces the existing character.</source>
          <target state="translated">Znak, który zastępuje istniejący znak.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>Replaces the existing character at the specified index position with another character.</source>
          <target state="translated">Zamienia istniejący znak na pozycji indeksu określonego innego znaku.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">Indeks jest liczony od zera; pierwszy znak w tym wystąpieniu jest na pozycji indeksu zero.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is assigned to the specified index position; then the new value is re-protected.</source>
          <target state="translated">Jeśli implementacja używa mechanizmu ochrony, takimi jak szyfrowanie, wartość bezpieczny ciąg, jeśli istnieje, nie jest chroniony; <ph id="ph1">`c`</ph> jest przypisana do położenia w określonym indeksie; nowa wartość jest ponownego włączenia jego ochrony.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> metod na wartość <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">To bezpieczny ciąg został już usunięty.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>This secure string is read-only.</source>
          <target state="translated">Ten ciąg bezpieczny jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> nie może być większa niż zero, lub większa niż długość to bezpieczny ciąg.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Wystąpił błąd podczas ochrony lub wyłączenie wartość tego ciągu bezpiecznego.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>