<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPermission.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ab62c8d43e0ca696a66655b37755ebe3e68e56e6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab62c8d43e0ca696a66655b37755ebe3e68e56e6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.IPermission">
          <source>Defines methods implemented by permission types.</source>
          <target state="translated">Definiuje metody implementowane przez typy uprawnień.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</source>
          <target state="translated">Uprawnienia w środowisku uruchomieniowym języka są obiektami, które opisują zestawów działań, które mogą być chronione dla określonych zasobów.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</source>
          <target state="translated">Obiekt uprawnienia w tym artykule opisano operacje lub dostępu, który podlega kontroli zabezpieczeń; reprezentuje dostępu lub w prawo w celu wykonania operacji.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Permissions are used by both application code and the .NET Framework security system in the following ways.</source>
          <target state="translated">Uprawnienia są używane zarówno przez kod aplikacji i systemu .NET Framework zabezpieczeń w następujący sposób.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Code requests the permissions it needs in order to run.</source>
          <target state="translated">Kod żądania uprawnienia, które wymaga, aby można było uruchomić.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>The security system policy grants permissions to code in order for it to run.</source>
          <target state="translated">Zasady systemu zabezpieczeń przyznaje uprawnienia do kodu, aby go uruchomić.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Code demands that calling code has a permission.</source>
          <target state="translated">Kod wymaga, aby wywołanie kodu ma uprawnienie.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Code overrides the security stack using assert/deny/permit-only.</source>
          <target state="translated">Kod zastępuje stosu zabezpieczeń przy użyciu potwierdzenia / / zezwolenia tylko odmowa.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>If you write a new permission, you must implement this interface in your class.</source>
          <target state="translated">Jeśli piszesz nowe uprawnienie należy zaimplementować ten interfejs w klasie.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>A permission can be accessed by multiple threads.</source>
          <target state="translated">Uprawnienia są dostępne przez wiele wątków.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>When implementing this interface, you must guarantee that the <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> method implementations are thread safe.</source>
          <target state="translated">Podczas implementowania interfejsu, użytkownik musi zagwarantować, że <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph>, i <ph id="ph4">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> implementacje metod są bezpieczne dla wątków.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>This example shows how to define a permission class for use with code access security.</source>
          <target state="translated">Ten przykład przedstawia sposób definiowania klasy uprawnień do użycia z zabezpieczeniami dostępu kodu.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>All of the necessary permission interfaces are implemented.</source>
          <target state="translated">Wszystkie interfejsy niezbędne uprawnienia są implementowane.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Copy">
          <source>Creates and returns an identical copy of the current permission.</source>
          <target state="translated">Tworzy i zwraca identyczne kopię bieżącego uprawnień.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Copy">
          <source>A copy of the current permission.</source>
          <target state="translated">Kopię bieżącego uprawnień.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Copy">
          <source>A copy of a permission represents the same access to resources as the original permission.</source>
          <target state="translated">Kopię uprawnienie reprezentuje takie same prawa dostępu do zasobów oryginalnego uprawnienia.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Copy">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy przykład kodu pokazuje implementacja <ph id="ph1">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Copy">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Demand">
          <source>Throws a <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> at run time if the security requirement is not met.</source>
          <target state="translated">Zgłasza wyjątek <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> w czasie wykonywania, jeśli nie są spełnione wymagania dotyczące zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>This method is typically used by secure libraries to ensure that callers have permission to access a resource.</source>
          <target state="translated">Ta metoda jest używana zazwyczaj przez bezpieczne biblioteki, aby upewnić się, że obiekty wywołujące ma uprawnienia do uzyskania dostępu do zasobu.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>For example, a file class in a secure class library calls <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> for the necessary <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> before performing a file operation requested by the caller.</source>
          <target state="translated">Na przykład wywołuje klasy pliku w bibliotece klas bezpiecznego <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> dla niezbędnych <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> przed wykonaniem operacji na pliku żądanego przez obiekt wywołujący.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</source>
          <target state="translated">Mimo że większość klas, które implementują metody tego interfejsu spełniają kryteria bezpieczeństwa przez wykonanie pełnego stosów, przeszukiwania stosu nie jest wykonywane zawsze.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>An example of an implementation that does not perform a stack walk is <ph id="ph1">&lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Na przykład implementację, która wykonuje przeszukiwania stosu <ph id="ph1">&lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">Podczas przeszukiwania stosu nie są sprawdzane uprawnienia kod, który wywołuje tę metodę; Sprawdzanie zaczyna się od bezpośredniego obiektu wywołującego kodu i jest przeprowadzane w górę stosu.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Stos wywołań jest zazwyczaj reprezentowany jako rośnie, tak, aby metody wyżej w stosie wywołań wywoływać metody niższe w stosie wywołań.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source><ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> succeeds only if no <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> powiedzie się tylko wtedy, gdy nie <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> jest wywoływane.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>A permission to intersect with the current permission.</source>
          <target state="translated">Uprawnienie do intersect z uprawnieniami bieżącego.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">Należy tego samego typu co bieżący uprawnień.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>Creates and returns a permission that is the intersection of the current permission and the specified permission.</source>
          <target state="translated">Tworzy i zwraca uprawnienia, które jest przecięcia bieżące uprawnienia i określony.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>A new permission that represents the intersection of the current permission and the specified permission.</source>
          <target state="translated">Nowe uprawnienie reprezentuje część wspólną bieżące uprawnienia i określony.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>This new permission is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the intersection is empty.</source>
          <target state="translated">Jest to nowe uprawnienie <ph id="ph1">&lt;see langword="null" /&gt;</ph> Jeśli część wspólną jest pusta.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The intersection of two permissions is a permission that describes the set of operations they both describe in common.</source>
          <target state="translated">Część wspólną dwóch uprawnień jest uprawnienia, które opisano zestaw działań, które opisują one zarówno wspólnych.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>Only a demand that passes both original permissions will pass the intersection.</source>
          <target state="translated">Tylko zażąda przekazuje oba oryginalnego uprawnienia zostaną spełnione przecięcie.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The following statements are required to be true for all implementations of the <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">Poniższe instrukcje muszą być spełnione wszystkie implementacji <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> object references that are not <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph> i <ph id="ph2">`Y`</ph> reprezentują <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> odwołania do obiektów, które nie są <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`X`</ph>) returns a value equal to <ph id="ph3">`X`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. INTERSECT (<ph id="ph2">`X`</ph>) zwraca wartość równa <ph id="ph3">`X`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`Y`</ph>) returns the same value as <ph id="ph3">`Y`</ph>.Intersect(<ph id="ph4">`X`</ph>).</source>
          <target state="translated"><ph id="ph1">`X`</ph>. INTERSECT (<ph id="ph2">`Y`</ph>) zwraca taką samą wartość jak <ph id="ph3">`Y`</ph>. INTERSECT (<ph id="ph4">`X`</ph>).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`null`</ph>) returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. INTERSECT (<ph id="ph2">`null`</ph>) zwraca <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy przykład kodu pokazuje implementacja <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> and is not an instance of the same class as the current permission.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> Parametr nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph> i nie jest wystąpieniem tej samej klasy bieżące uprawnienia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>A permission that is to be tested for the subset relationship.</source>
          <target state="translated">Uprawnienia, które ma być sprawdzane pod kątem relacji podzbioru.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>This permission must be of the same type as the current permission.</source>
          <target state="translated">To uprawnienie musi być tego samego typu co bieżący uprawnień.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Determines whether the current permission is a subset of the specified permission.</source>
          <target state="translated">Określa, czy bieżące uprawnienia podzbiór określonego uprawnienia.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current permission is a subset of the specified permission; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżące uprawnienia są podzbiorem określonego uprawnienia; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
          <target state="translated">Bieżące uprawnienia jest podzbiorem określonego uprawnienia, jeśli uprawnienia bieżącego określa zestaw operacji jest całkowicie zawarty w określonego uprawnienia.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:<ph id="ph1">\\</ph>.</source>
          <target state="translated">Na przykład uprawnienia reprezentujące dostęp do C:\example.txt jest podzbiorem uprawnienie reprezentujące dostęp do folderu C:<ph id="ph1">\\</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
          <target state="translated">Jeśli ta metoda zwraca <ph id="ph1">`true`</ph>, bieżący uprawnienie reprezentuje nie uzyskać dostęp do chronionych zasobów niż określone uprawnienie.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following statements are required to be true for all implementations of the <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">Poniższe instrukcje muszą być spełnione wszystkie implementacji <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>, <ph id="ph2">`Y`</ph>, and <ph id="ph3">`Z`</ph> represent <ph id="ph4">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not <ph id="ph5">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>, <ph id="ph2">`Y`</ph>, i <ph id="ph3">`Z`</ph> reprezentują <ph id="ph4">&lt;xref:System.Security.IPermission&gt;</ph> obiektów, które nie są <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.IsSubsetOf(<ph id="ph2">`X`</ph>) returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. IsSubsetOf (<ph id="ph2">`X`</ph>) zwraca <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.IsSubsetOf(<ph id="ph2">`Y`</ph>) returns the same value as <ph id="ph3">`Y`</ph>.IsSubsetOf(<ph id="ph4">`X`</ph>) if and only if <ph id="ph5">`X`</ph> and <ph id="ph6">`Y`</ph> represent the same set of permissions.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. IsSubsetOf (<ph id="ph2">`Y`</ph>) zwraca taką samą wartość jak <ph id="ph3">`Y`</ph>. IsSubsetOf (<ph id="ph4">`X`</ph>) tylko wtedy, gdy <ph id="ph5">`X`</ph> i <ph id="ph6">`Y`</ph> reprezentują ten sam zestaw uprawnień.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`X`</ph>.IsSubsetOf(<ph id="ph2">`Y`</ph>) and <ph id="ph3">`Y`</ph>.IsSubsetOf(<ph id="ph4">`Z`</ph>) both return <ph id="ph5">`true`</ph>, <ph id="ph6">`X`</ph>.IsSubsetOf(<ph id="ph7">`Z`</ph>) returns <ph id="ph8">`true`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`X`</ph>. IsSubsetOf (<ph id="ph2">`Y`</ph>) i <ph id="ph3">`Y`</ph>. IsSubsetOf (<ph id="ph4">`Z`</ph>) zwrócą <ph id="ph5">`true`</ph>, <ph id="ph6">`X`</ph>. IsSubsetOf (<ph id="ph7">`Z`</ph>) zwraca <ph id="ph8">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`X`</ph> represents an empty <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> object with a permission state of <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> and <ph id="ph4">`Y`</ph> represents an <ph id="ph5">&lt;xref:System.Security.IPermission&gt;</ph> object that is <ph id="ph6">`null`</ph>, <ph id="ph7">`X`</ph>.IsSubsetOf(<ph id="ph8">`Y`</ph>) returns <ph id="ph9">`true`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`X`</ph> reprezentuje pustą <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> obiektu ze stanem uprawnienia <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> i <ph id="ph4">`Y`</ph> reprezentuje <ph id="ph5">&lt;xref:System.Security.IPermission&gt;</ph> obiekt <ph id="ph6">`null`</ph>, <ph id="ph7">`X`</ph>. IsSubsetOf (<ph id="ph8">`Y`</ph>) zwraca <ph id="ph9">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`Z`</ph> is also an empty permission, the compound set operation <ph id="ph2">`X`</ph>.Union(Z).IsSubsetOf(Y) also returns <ph id="ph3">`true`</ph> because the union of two empty permissions is an empty permission.</source>
          <target state="translated">Jeśli <ph id="ph1">`Z`</ph> jest również pusty uprawnienia operacji złożone ustawienia <ph id="ph2">`X`</ph>. Union(Z). Zwraca także IsSubsetOf(Y) <ph id="ph3">`true`</ph> ponieważ złożenie dwóch uprawnienia pusty pusty uprawnienia.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy przykład kodu pokazuje implementacja <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> and is not of the same type as the current permission.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> Parametr nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph> i nie jest taki sam typ jak bieżące uprawnienia.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>A permission to combine with the current permission.</source>
          <target state="translated">Uprawnienie do łączenia z uprawnieniami bieżącego.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">Należy tego samego typu co bieżący uprawnień.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>Creates a permission that is the union of the current permission and the specified permission.</source>
          <target state="translated">Tworzy uprawnienia, które łączy bieżące uprawnienia i określony.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>A new permission that represents the union of the current permission and the specified permission.</source>
          <target state="translated">Nowe uprawnienie reprezentuje złożenie bieżące uprawnienia i określony.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> is a permission that represents all the operations represented by both the current permission and the specified permission.</source>
          <target state="translated">Wynik wywołania <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> jest uprawnienia, które reprezentuje wszystkie operacje reprezentowany przez bieżące uprawnienia i określonego uprawnienia.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>Any demand that passes either permission passes their union.</source>
          <target state="translated">Wszelkie żądania, który przekazuje albo uprawnienie przekazuje ich union.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The following statements are required to be true for all implementations of the <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> method.</source>
          <target state="translated">Poniższe instrukcje muszą być spełnione wszystkie implementacji <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph> i <ph id="ph2">`Y`</ph> reprezentują <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> obiektów, które nie są <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Union(<ph id="ph2">`X`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Unii (<ph id="ph2">`X`</ph>) zwraca obiekt, który ma taką samą wartość jak <ph id="ph3">`X`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Union(<ph id="ph2">`Y`</ph>) returns an object that has the same value as the object returned by <ph id="ph3">`Y`</ph>.Union(<ph id="ph4">`X`</ph>).</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Unii (<ph id="ph2">`Y`</ph>) zwraca obiekt, który ma taką samą wartość jak zwracany przez obiekt <ph id="ph3">`Y`</ph>. Unii (<ph id="ph4">`X`</ph>).</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Union(<ph id="ph2">`null`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Unii (<ph id="ph2">`null`</ph>) zwraca obiekt, który ma taką samą wartość jak <ph id="ph3">`X`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy przykład kodu pokazuje implementacja <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> and is not of the same type as the current permission.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> Parametr nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph> i nie jest taki sam typ jak bieżące uprawnienia.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>