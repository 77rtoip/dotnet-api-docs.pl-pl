<Type Name="PermissionSet" FullName="System.Security.PermissionSet">
  <TypeSignature Language="C#" Value="public class PermissionSet : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Security.ISecurityEncodable, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PermissionSet extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.PermissionSet" />
  <TypeSignature Language="VB.NET" Value="Public Class PermissionSet&#xA;Implements ICollection, IDeserializationCallback, ISecurityEncodable, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class PermissionSet : System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Security::ISecurityEncodable, System::Security::IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8dce7-101">Reprezentuje kolekcję, która może zawierać wiele różnych typów uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-101">Represents a collection that can contain many different types of permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-102">Można użyć <xref:System.Security.PermissionSet> do wykonywania operacji na kilka różnych uprawnień jako grupa.</span><span class="sxs-lookup"><span data-stu-id="8dce7-102">You can use <xref:System.Security.PermissionSet> to perform operations on several different permissions as a group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-103">Poniższy przykład kodu pokazuje użycie <xref:System.Security.PermissionSet> klasy i elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="8dce7-103">The following code example demonstrates the use of the <xref:System.Security.PermissionSet> class and members.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#1)]
 [!code-csharp[System.Security.PermissionSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#1)]
 [!code-vb[System.Security.PermissionSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="8dce7-104">do dziedziczenia być w pełni zaufany lub w zestawie, do którego jest podpisany za pomocą programu Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-104">for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8dce7-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.PermissionSet" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-105">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="8dce7-106">Jedna z wartości wyliczenia, które określają zestaw uprawnień dostępu do zasobów.</span><span class="sxs-lookup"><span data-stu-id="8dce7-106">One of the enumeration values that specifies the permission set's access to resources.</span></span></param>
        <summary><span data-ttu-id="8dce7-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.PermissionSet" /> klasy z określonym <see cref="T:System.Security.Permissions.PermissionState" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-107">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-108">`Unrestricted` Stanu umożliwia wszystkie uprawnienia, które implementują <xref:System.Security.Permissions.IUnrestrictedPermission> interfejsu, gdy `None` umożliwia żadne uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-108">The `Unrestricted` state allows all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface, while `None` allows no permissions.</span></span>  
  
 <span data-ttu-id="8dce7-109">Użyj <xref:System.Security.PermissionSet.AddPermission%2A> na pustą <xref:System.Security.PermissionSet> do zdefiniowania zestawu większej liczby szczegółów.</span><span class="sxs-lookup"><span data-stu-id="8dce7-109">Use <xref:System.Security.PermissionSet.AddPermission%2A> on an empty <xref:System.Security.PermissionSet> to define the set in greater detail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-110">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.%23ctor%2A> konstruktora, aby utworzyć uprawnienia ustawić ze stanem uprawnienia <xref:System.Security.Permissions.PermissionState.None>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-110">The following code example shows the use of the <xref:System.Security.PermissionSet.%23ctor%2A> constructor to create a permission set with a permission state of <xref:System.Security.Permissions.PermissionState.None>.</span></span> <span data-ttu-id="8dce7-111">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-111">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#2)]
 [!code-csharp[System.Security.PermissionSet#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#2)]
 [!code-vb[System.Security.PermissionSet#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8dce7-112"><paramref name="state" /> Parametru nie jest prawidłową <see cref="T:System.Security.Permissions.PermissionState" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-112">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.PermissionSet permSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.PermissionSet permSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permSet As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::PermissionSet ^ permSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="permSet"><span data-ttu-id="8dce7-113">Zestaw, z którego można przyjąć wartość nowego <see cref="T:System.Security.PermissionSet" />, lub <see langword="null" /> utworzyć pustą <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-113">The set from which to take the value of the new <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> to create an empty <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="8dce7-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.PermissionSet" /> klasy początkowej wartości z <paramref name="permSet" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="8dce7-114">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with initial values taken from the <paramref name="permSet" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-115">Nowy <xref:System.Security.PermissionSet> zawiera kopie uprawnienia zawartych w określonym <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-115">The new <xref:System.Security.PermissionSet> contains copies of the permissions contained in the specified <xref:System.Security.PermissionSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8dce7-116">Jest to równoważne <xref:System.Security.PermissionSet.Copy%2A> podczas `permSet` parametr nie jest `null`.</span><span class="sxs-lookup"><span data-stu-id="8dce7-116">This is equivalent to <xref:System.Security.PermissionSet.Copy%2A> when the `permSet` parameter is not `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission AddPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission AddPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ AddPermission(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="8dce7-117">Uprawnienia do dodawania.</span><span class="sxs-lookup"><span data-stu-id="8dce7-117">The permission to add.</span></span></param>
        <summary><span data-ttu-id="8dce7-118">Dodaje określone uprawnienie do <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-118">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="8dce7-119">Złożenie uprawnienia dodane i wszystkie tego samego typu, który już istnieje w <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-119">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-120">Jeśli uprawnień do tego samego typu co dodano uprawnienie już istnieje w <xref:System.Security.PermissionSet>, nowe uprawnienie jest Unii istniejący obiekt uprawnień i obiektu określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-120">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="8dce7-121">Na przykład, jeśli uprawnienia, które implementuje <xref:System.Security.Permissions.IUnrestrictedPermission> jest dodawany do <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, wynikowy Unii jest oryginalnym `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-121">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-122">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.AddPermission%2A> metodę, aby dodać uprawnienia do zestawu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-122">The following code example shows the use of the <xref:System.Security.PermissionSet.AddPermission%2A> method to add a permission to a permission set.</span></span> <span data-ttu-id="8dce7-123">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-123">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#3)]
 [!code-csharp[System.Security.PermissionSet#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#3)]
 [!code-vb[System.Security.PermissionSet#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8dce7-124">Metoda jest wywoływana z <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-124">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8dce7-125">Przy dziedziczeniu z <see cref="T:System.Security.PermissionSet" />, można zmienić zachowanie <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> metody przez zastąpienie <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-125">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission AddPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ AddPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="8dce7-126">Uprawnienia do dodawania.</span><span class="sxs-lookup"><span data-stu-id="8dce7-126">The permission to add.</span></span></param>
        <summary><span data-ttu-id="8dce7-127">Dodaje określone uprawnienie do <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-127">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="8dce7-128">Złożenie uprawnienia dodane i wszystkie tego samego typu, który już istnieje w <see cref="T:System.Security.PermissionSet" />, lub <see langword="null" /> Jeśli <paramref name="perm" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-128">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if <paramref name="perm" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-129"><xref:System.Security.PermissionSet.AddPermissionImpl%2A> Metoda jest implementacją dla <xref:System.Security.PermissionSet.AddPermission%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-129">The <xref:System.Security.PermissionSet.AddPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.AddPermission%2A> method.</span></span>  
  
 <span data-ttu-id="8dce7-130">Jeśli uprawnień do tego samego typu co dodano uprawnienie już istnieje w <xref:System.Security.PermissionSet>, nowe uprawnienie jest Unii istniejący obiekt uprawnień i obiektu określonego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-130">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="8dce7-131">Na przykład, jeśli uprawnienia, które implementuje <xref:System.Security.Permissions.IUnrestrictedPermission> jest dodawany do <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, wynikowy Unii jest oryginalnym `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-131">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8dce7-132">Metoda jest wywoływana z <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-132">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-133">Deklaruje, że kod wywołujący może uzyskać dostępu do zasobu chroniony na żądanie uprawnień przez kod, który wywołuje tę metodę, nawet jeśli wyżej w stosie wywołań nie przyznano uprawnień dostępu do zasobu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-133">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span></span> <span data-ttu-id="8dce7-134">Przy użyciu <see cref="M:System.Security.PermissionSet.Assert" /> może stanowić zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="8dce7-134">Using <see cref="M:System.Security.PermissionSet.Assert" /> can create security vulnerabilities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-135">To jest jedynym sposobem assert wiele uprawnień w tym samym czasie w ramce, ponieważ tylko jeden <xref:System.Security.PermissionSet.Assert%2A> może być aktywne w ramce.</span><span class="sxs-lookup"><span data-stu-id="8dce7-135">This is the only way to assert multiple permissions at the same time within a frame because only one <xref:System.Security.PermissionSet.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="8dce7-136"><xref:System.Security.PermissionSet.Assert%2A> ma zastosowanie tylko do przyznanych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-136"><xref:System.Security.PermissionSet.Assert%2A> is only effective for granted permissions.</span></span> <span data-ttu-id="8dce7-137">Wywołanie <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> lub <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> metodę, aby anulować aktywnego <xref:System.Security.PermissionSet.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-137">Call the <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> or <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> method to cancel an active <xref:System.Security.PermissionSet.Assert%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8dce7-138">Ponieważ wywoływanie <xref:System.Security.PermissionSet.Assert%2A> metoda usuwa wymaganie, że wszystkie kodu w łańcuchu wywołań muszą mieć uprawnienie dostępu do określonego zasobu, można go otwarcie luk w zabezpieczeniach użycie nieprawidłowo lub niewłaściwie.</span><span class="sxs-lookup"><span data-stu-id="8dce7-138">Because calling the <xref:System.Security.PermissionSet.Assert%2A> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="8dce7-139">W związku z tym należy można używać z dużą ostrożność.</span><span class="sxs-lookup"><span data-stu-id="8dce7-139">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8dce7-140"><see cref="T:System.Security.PermissionSet" /> Wystąpienia potwierdzone nie posiada uprawnień do asserting kodu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-140">The <see cref="T:System.Security.PermissionSet" /> instance asserted has not been granted to the asserting code.</span></span>  
  
 <span data-ttu-id="8dce7-141">—lub—</span><span class="sxs-lookup"><span data-stu-id="8dce7-141">-or-</span></span>  
  
 <span data-ttu-id="8dce7-142">Istnieje już aktywny <see cref="M:System.Security.PermissionSet.Assert" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="8dce7-142">There is already an active <see cref="M:System.Security.PermissionSet.Assert" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsNonCodeAccessPermissions">
      <MemberSignature Language="C#" Value="public bool ContainsNonCodeAccessPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsNonCodeAccessPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsNonCodeAccessPermissions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsNonCodeAccessPermissions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-143">Pobiera wartość wskazującą czy <see cref="T:System.Security.PermissionSet" /> zawiera uprawnienia, które nie pochodzą z <see cref="T:System.Security.CodeAccessPermission" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-143">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />.</span></span></summary>
        <returns>
          <span data-ttu-id="8dce7-144"><see langword="true" /> Jeśli <see cref="T:System.Security.PermissionSet" /> zawiera uprawnienia, które nie pochodzą z <see cref="T:System.Security.CodeAccessPermission" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-144"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8dce7-145">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-145">The following code example shows the use of the <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> method.</span></span> <span data-ttu-id="8dce7-146">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-146">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#9)]
 [!code-csharp[System.Security.PermissionSet#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#9)]
 [!code-vb[System.Security.PermissionSet#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPermissionSet">
      <MemberSignature Language="C#" Value="public static byte[] ConvertPermissionSet (string inFormat, byte[] inData, string outFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ConvertPermissionSet(string inFormat, unsigned int8[] inData, string outFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertPermissionSet (inFormat As String, inData As Byte(), outFormat As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ ConvertPermissionSet(System::String ^ inFormat, cli::array &lt;System::Byte&gt; ^ inData, System::String ^ outFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inFormat" Type="System.String" />
        <Parameter Name="inData" Type="System.Byte[]" />
        <Parameter Name="outFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inFormat"><span data-ttu-id="8dce7-147">Ciąg reprezentujący jedną z następujących formatów kodowania: ASCII, Unicode lub dane binarne.</span><span class="sxs-lookup"><span data-stu-id="8dce7-147">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span></span> <span data-ttu-id="8dce7-148">Możliwe wartości to "XMLASCII" lub "XML", "XMLUNICODE" i "BINARY".</span><span class="sxs-lookup"><span data-stu-id="8dce7-148">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span></span></param>
        <param name="inData"><span data-ttu-id="8dce7-149">Zestaw uprawnień kodowany w formacie XML.</span><span class="sxs-lookup"><span data-stu-id="8dce7-149">An XML-encoded permission set.</span></span></param>
        <param name="outFormat"><span data-ttu-id="8dce7-150">Ciąg reprezentujący jedną z następujących formatów kodowania: ASCII, Unicode lub dane binarne.</span><span class="sxs-lookup"><span data-stu-id="8dce7-150">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span></span> <span data-ttu-id="8dce7-151">Możliwe wartości to "XMLASCII" lub "XML", "XMLUNICODE" i "BINARY".</span><span class="sxs-lookup"><span data-stu-id="8dce7-151">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span></span></param>
        <summary><span data-ttu-id="8dce7-152">Konwertuje zakodowanego <see cref="T:System.Security.PermissionSet" /> z jednego formatu kodowania XML do innego formatu kodowania XML.</span><span class="sxs-lookup"><span data-stu-id="8dce7-152">Converts an encoded <see cref="T:System.Security.PermissionSet" /> from one XML encoding format to another XML encoding format.</span></span></summary>
        <returns><span data-ttu-id="8dce7-153">Zaszyfrowane uprawnienia z formatem określonym produktem wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="8dce7-153">An encrypted permission set with the specified output format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-154">Nie należy używać tej metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-154">Do not use this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8dce7-155">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="8dce7-155">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.PermissionSet Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Copy () As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::PermissionSet ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-156">Tworzy kopię <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-156">Creates a copy of the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="8dce7-157">Kopię <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-157">A copy of the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-158">Kopię <xref:System.Security.PermissionSet> reprezentuje takie same prawa dostępu do zasobów do oryginalnego obiektu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-158">A copy of a <xref:System.Security.PermissionSet> represents the same access to resources as the original object.</span></span> <span data-ttu-id="8dce7-159">Zmiany wprowadzone w kopii nie wpływają na oryginalny zestaw uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-159">Changes made to the copy do not affect the original permission set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-160">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.Copy%2A> metodę, aby utworzyć kopię zestaw uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-160">The following code example shows the use of the <xref:System.Security.PermissionSet.Copy%2A> method to create a copy of a permission set.</span></span> <span data-ttu-id="8dce7-161">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-161">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#20)]
 [!code-csharp[System.Security.PermissionSet#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#20)]
 [!code-vb[System.Security.PermissionSet#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8dce7-162">Tablica docelowa, do którego zostaną skopiowane.</span><span class="sxs-lookup"><span data-stu-id="8dce7-162">The target array to which to copy.</span></span></param>
        <param name="index"><span data-ttu-id="8dce7-163">Położenie początkowe w tablicy, aby rozpocząć kopiowanie (o wartości początkowej zero).</span><span class="sxs-lookup"><span data-stu-id="8dce7-163">The starting position in the array to begin copying (zero based).</span></span></param>
        <summary><span data-ttu-id="8dce7-164">Kopiuje obiektów uprawnień zestawu do określonej lokalizacji w <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-164">Copies the permission objects of the set to the indicated location in an <see cref="T:System.Array" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8dce7-165"><paramref name="array" /> Parametr jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-165">The <paramref name="array" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8dce7-166"><paramref name="array" /> Parametr ma więcej niż jednym wymiarze.</span><span class="sxs-lookup"><span data-stu-id="8dce7-166">The <paramref name="array" /> parameter has more than one dimension.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="8dce7-167"><paramref name="index" /> Parametru jest spoza zakresu <paramref name="array" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="8dce7-167">The <paramref name="index" /> parameter is out of the range of the <paramref name="array" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8dce7-168">Pobiera liczbę uprawnień obiektów zawartych w zestawie uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-168">Gets the number of permission objects contained in the permission set.</span></span></summary>
        <value><span data-ttu-id="8dce7-169">Liczba obiektów uprawnienia zawartych w <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-169">The number of permission objects contained in the <see cref="T:System.Security.PermissionSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-170">W `None` lub `Unrestricted` stanu to zwraca zero, ponieważ nie są używane nie rzeczywiste uprawnienia wystąpienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-170">In the `None` or `Unrestricted` state this returns zero, because no actual permission object instances are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-171">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.Count%2A> właściwości można pobrać liczby obiektów uprawnień w zestawie uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-171">The following code example shows the use of the <xref:System.Security.PermissionSet.Count%2A> property to get the number of permission objects in a permission set.</span></span> <span data-ttu-id="8dce7-172">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-172">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#5)]
 [!code-csharp[System.Security.PermissionSet#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#5)]
 [!code-vb[System.Security.PermissionSet#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-173">Wymusza <see cref="T:System.Security.SecurityException" /> na czas wykonywania Jeśli wszystkim zainteresowanym wyżej w stosie wywołań nie przyznano uprawnienia określone przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="8dce7-173">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-174">Użyj <xref:System.Security.PermissionSet.Demand%2A> na <xref:System.Security.PermissionSet> się upewnić, że wszystkie obiekty wywołujące mają wszystkie uprawnienia w zestawie z jednej operacji.</span><span class="sxs-lookup"><span data-stu-id="8dce7-174">Use <xref:System.Security.PermissionSet.Demand%2A> on a <xref:System.Security.PermissionSet> to ensure that all callers have all permissions in the set with one operation.</span></span>  
  
 <span data-ttu-id="8dce7-175">Uprawnienia kod, który wywołuje tę metodę, nie są sprawdzane; Sprawdzanie zaczyna się od bezpośredniego obiektu wywołującego kodu i jest przeprowadzane w górę stosu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-175">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="8dce7-176">Stos wywołań jest zazwyczaj reprezentowany jako rośnie, tak, aby metody wyżej w stosie wywołań wywoływać metody niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="8dce7-176">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="8dce7-177"><xref:System.Security.PermissionSet.Demand%2A> powiedzie się tylko wtedy, gdy nie <xref:System.Security.SecurityException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="8dce7-177"><xref:System.Security.PermissionSet.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="8dce7-178">Jeśli <xref:System.Security.PermissionSet> zawiera uprawnienia, które nie dziedziczą <xref:System.Security.CodeAccessPermission>, `Demand` metody te uprawnienia są nazywane również.</span><span class="sxs-lookup"><span data-stu-id="8dce7-178">If the <xref:System.Security.PermissionSet> contains permissions that do not inherit from <xref:System.Security.CodeAccessPermission>, the `Demand` methods of those permissions are called as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-179">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.Demand%2A> metoda żądania wszystkie uprawnienia w zestawie uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-179">The following code example shows the use of the <xref:System.Security.PermissionSet.Demand%2A> method to demand all the permissions in a permission set.</span></span> <span data-ttu-id="8dce7-180">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-180">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#4)]
 [!code-csharp[System.Security.PermissionSet#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#4)]
 [!code-vb[System.Security.PermissionSet#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8dce7-181">Obiekt wywołujący w łańcuchu wywołań nie ma wymagane uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-181">A caller in the call chain does not have the permission demanded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-182">Powoduje, że każdy <see cref="M:System.Security.PermissionSet.Demand" /> który przechodzi przez kod wywołujący dla uprawnienia, które ma punktu przecięcia z uprawnieniem typu zawartych w bieżącym <see cref="T:System.Security.PermissionSet" /> się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="8dce7-182">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <see cref="T:System.Security.PermissionSet" /> to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-183">Ta metoda uniemożliwia dostęp do chronionych zasobów za pośrednictwem kod, który wywołuje tę metodę, nawet w przypadku tych wywołań przyznano uprawnień dostępu do niego wywołań wyżej w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="8dce7-183">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="8dce7-184">Stos wywołań jest zazwyczaj reprezentowany jako rośnie, tak, aby metody wyżej w stosie wywołań wywoływać metody niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="8dce7-184">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="8dce7-185"><xref:System.Security.PermissionSet.Deny%2A> można ograniczyć odpowiedzialność programisty lub pomagać w zapobieganiu luk w zabezpieczeniach przypadkowe, ponieważ uniemożliwia metodę, która wywołuje <xref:System.Security.PermissionSet.Deny%2A> z zasobów chronionych przez odmówiono uprawnień dostępu do użycia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-185"><xref:System.Security.PermissionSet.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.PermissionSet.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="8dce7-186">Wywołuje metodę <xref:System.Security.PermissionSet.Deny%2A> na uprawnienia, a jeśli <xref:System.Security.PermissionSet.Demand%2A> dla tego uprawnienia jest wywoływany przez obiekt wywołujący niższe w stosie wywołań, sprawdzanie zabezpieczeń nie powiedzie się po osiągnięciu <xref:System.Security.PermissionSet.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-186">If a method calls <xref:System.Security.PermissionSet.Deny%2A> on a permission, and if a <xref:System.Security.PermissionSet.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <xref:System.Security.PermissionSet.Deny%2A>.</span></span>  
  
 <span data-ttu-id="8dce7-187"><xref:System.Security.PermissionSet.Deny%2A> jest ignorowany dla uprawnienia, które nie udzielono, ponieważ nie powiodło się żądanie dla tego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-187"><xref:System.Security.PermissionSet.Deny%2A> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8dce7-188">Poprzednie wywołanie <see cref="M:System.Security.PermissionSet.Deny" /> już ma ograniczone uprawnienia dla bieżącej ramki stosu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-188">A previous call to <see cref="M:System.Security.PermissionSet.Deny" /> has already restricted the permissions for the current stack frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Equals(System.Object)" FrameworkAlternate="netframework-4.5;netcore-2.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="8dce7-189">Obiekt do porównania z bieżącym <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-189">The object to compare with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <param name="obj">To be added.</param>
        <summary><span data-ttu-id="8dce7-190">Określa, czy określony <see cref="T:System.Security.PermissionSet" /> lub <see cref="T:System.Security.NamedPermissionSet" /> obiekt jest taki sam, jak bieżący <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-190">Determines whether the specified <see cref="T:System.Security.PermissionSet" /> or <see cref="T:System.Security.NamedPermissionSet" /> object is equal to the current <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="8dce7-191"><see langword="true" /> Jeśli określony obiekt jest taki sam, jak bieżący <see cref="T:System.Security.PermissionSet" /> obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-191"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Security.PermissionSet" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-192">Równość jest określane na podstawie uprawnień zawarte w określony przez zestaw uprawnień `obj`.</span><span class="sxs-lookup"><span data-stu-id="8dce7-192">Equality is determined by the permissions contained in the permission set specified by `obj`.</span></span> <span data-ttu-id="8dce7-193">`obj` może to być albo <xref:System.Security.PermissionSet> obiektu lub <xref:System.Security.NamedPermissionSet> obiektu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-193">`obj` can be either a <xref:System.Security.PermissionSet> object or a <xref:System.Security.NamedPermissionSet> object.</span></span> <span data-ttu-id="8dce7-194">Jeśli `obj` jest <xref:System.Security.NamedPermissionSet>, nazwę i opis są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="8dce7-194">If `obj` is a <xref:System.Security.NamedPermissionSet>, the name and description are ignored.</span></span>  
  
 <span data-ttu-id="8dce7-195">Aby uzyskać więcej informacji, zobacz <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-195">For more information, see <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public virtual void FromXml (System.Security.SecurityElement et);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement et) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXml (et As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ et);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="et" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="et"><span data-ttu-id="8dce7-196">Kodowanie XML na potrzeby rekonstrukcji obiektu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="8dce7-196">The XML encoding to use to reconstruct the security object.</span></span></param>
        <summary><span data-ttu-id="8dce7-197">Rekonstruuje obiektu zabezpieczeń o określonym stanie kodowania XML.</span><span class="sxs-lookup"><span data-stu-id="8dce7-197">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8dce7-198">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.FromXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-198">The following code example shows the use of the <xref:System.Security.PermissionSet.FromXml%2A> method.</span></span> <span data-ttu-id="8dce7-199">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-199">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8dce7-200"><paramref name="et" /> Parametr jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-200">The <paramref name="et" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8dce7-201"><paramref name="et" /> Parametr nie jest elementem prawidłowego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-201">The <paramref name="et" /> parameter is not a valid permission element.</span></span>  
  
 <span data-ttu-id="8dce7-202">—lub—</span><span class="sxs-lookup"><span data-stu-id="8dce7-202">-or-</span></span>  
  
 <span data-ttu-id="8dce7-203"><paramref name="et" /> Parametru numer wersji nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="8dce7-203">The <paramref name="et" /> parameter's version number is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-204">Zwraca moduł wyliczający dla zestawu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-204">Returns an enumerator for the permissions of the set.</span></span></summary>
        <returns><span data-ttu-id="8dce7-205">Obiekt enumerator zestawu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-205">An enumerator object for the permissions of the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-206">Użyj modułu wyliczającego jako indeks dostęp do obiektów z uprawnień w zestawie.</span><span class="sxs-lookup"><span data-stu-id="8dce7-206">Use the enumerator as an index to access individual permission objects in the set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-207">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.GetEnumerator%2A> metody, aby wyświetlić listę wszystkich uprawnień w zestawie uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-207">The following code example shows the use of the <xref:System.Security.PermissionSet.GetEnumerator%2A> method to list all the permissions in a permission set.</span></span> <span data-ttu-id="8dce7-208">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-208">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#18)]
 [!code-csharp[System.Security.PermissionSet#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#18)]
 [!code-vb[System.Security.PermissionSet#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#18)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8dce7-209">Przy dziedziczeniu z <see cref="T:System.Security.PermissionSet" />, można zmienić zachowanie <see cref="M:System.Security.PermissionSet.GetEnumerator" /> metody przez zastąpienie <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-209">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetEnumerator" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerator GetEnumeratorImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumeratorImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumeratorImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEnumeratorImpl () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerator ^ GetEnumeratorImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-210">Zwraca moduł wyliczający dla zestawu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-210">Returns an enumerator for the permissions of the set.</span></span></summary>
        <returns><span data-ttu-id="8dce7-211">Obiekt enumerator zestawu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-211">An enumerator object for the permissions of the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-212"><xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> Metoda jest implementacją dla <xref:System.Security.PermissionSet.GetEnumerator%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-212">The <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-213">Pobiera wartość skrótu dla <see cref="T:System.Security.PermissionSet" /> obiekt, który jest odpowiedni do użycia w mieszania struktury algorytmów i danych, takich jak tablicy skrótów.</span><span class="sxs-lookup"><span data-stu-id="8dce7-213">Gets a hash code for the <see cref="T:System.Security.PermissionSet" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="8dce7-214">Wartość skrótu dla bieżącego <see cref="T:System.Security.PermissionSet" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-214">A hash code for the current <see cref="T:System.Security.PermissionSet" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-215">Wartość skrótu dla dwóch wystąpień tego samego zestawu uprawnień może być inne, dlatego nie należy używać skrótu do porównywania dwóch <xref:System.Security.PermissionSet> obiektów.</span><span class="sxs-lookup"><span data-stu-id="8dce7-215">The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <xref:System.Security.PermissionSet> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission GetPermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission GetPermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ GetPermission(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="8dce7-216">Typ obiektu odpowiednie uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-216">The type of the desired permission object.</span></span></param>
        <summary><span data-ttu-id="8dce7-217">Pobiera uprawnienia obiektu określonego typu, jeśli istnieje w zestawie.</span><span class="sxs-lookup"><span data-stu-id="8dce7-217">Gets a permission object of the specified type, if it exists in the set.</span></span></summary>
        <returns><span data-ttu-id="8dce7-218">Kopię obiektu uprawnień o typie określonym przez <paramref name="permClass" /> parametru zawarte w <see cref="T:System.Security.PermissionSet" />, lub <see langword="null" /> Jeśli żaden nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="8dce7-218">A copy of the permission object of the type specified by the <paramref name="permClass" /> parameter contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-219">Metoda zwraca `null` dla `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-219">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="8dce7-220">Mimo że `Unrestricted` <xref:System.Security.PermissionSet> skutecznie zawiera wszystkie uprawnienia, nie ma żadnych rzeczywistych wystąpień do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-220">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8dce7-221">Przy dziedziczeniu z <see cref="T:System.Security.PermissionSet" />, można zmienić zachowanie <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> metody przez zastąpienie <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-221">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission GetPermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission GetPermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ GetPermissionImpl(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="8dce7-222">Typ obiektu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="8dce7-222">The type of the permission object.</span></span></param>
        <summary><span data-ttu-id="8dce7-223">Pobiera uprawnienia obiektu określonego typu, jeśli istnieje w zestawie.</span><span class="sxs-lookup"><span data-stu-id="8dce7-223">Gets a permission object of the specified type, if it exists in the set.</span></span></summary>
        <returns><span data-ttu-id="8dce7-224">Kopię obiektu uprawnienia typu określonego przez <paramref name="permClass" /> parametru zawarte w <see cref="T:System.Security.PermissionSet" />, lub <see langword="null" /> Jeśli żaden nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="8dce7-224">A copy of the permission object, of the type specified by the <paramref name="permClass" /> parameter, contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-225"><xref:System.Security.PermissionSet.GetPermissionImpl%2A> Metoda jest implementacją dla <xref:System.Security.PermissionSet.GetPermission%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-225">The <xref:System.Security.PermissionSet.GetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="8dce7-226">Metoda zwraca `null` dla `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-226">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="8dce7-227">Mimo że `Unrestricted` <xref:System.Security.PermissionSet> skutecznie zawiera wszystkie uprawnienia, nie ma żadnych rzeczywistych wystąpień do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-227">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Intersect (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Intersect(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Intersect(System::Security::PermissionSet ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="8dce7-228">Uprawnienie ustawioną intersect z bieżącym <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-228">A permission set to intersect with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="8dce7-229">Tworzy i zwraca, czyli zestawu uprawnień przecięcie bieżącego <see cref="T:System.Security.PermissionSet" /> i określonego <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-229">Creates and returns a permission set that is the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="8dce7-230">Nowego zestawu uprawnień, który reprezentuje część wspólną bieżącego <see cref="T:System.Security.PermissionSet" /> i określonego obiektu docelowego.</span><span class="sxs-lookup"><span data-stu-id="8dce7-230">A new permission set that represents the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified target.</span></span> <span data-ttu-id="8dce7-231">Ten obiekt jest <see langword="null" /> Jeśli część wspólną jest pusta.</span><span class="sxs-lookup"><span data-stu-id="8dce7-231">This object is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-232">Część wspólną dwóch zestawów uprawnień to zestaw uprawnień opisującą zestaw działań, które opisują one zarówno wspólnych.</span><span class="sxs-lookup"><span data-stu-id="8dce7-232">The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="8dce7-233">W szczególności reprezentuje minimalne uprawnienia tak, aby wszelkie żądania, który przekazuje zarówno uprawnienia ustawia również przekazuje ich przecięcia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-233">Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</span></span>  
  
 <span data-ttu-id="8dce7-234">Dla każdego typu uprawnień, który znajduje się w obu zestawach dwa wystąpienia te uprawnienia są zakończone, przy użyciu uprawnień `Intersect` metody; wynikowy uprawnienie jest zawarte w wynikowym <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-234">For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's `Intersect` method; the resulting permission is included in the resulting <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="8dce7-235">Typy uprawnień, które istnieją w tylko jeden z dwóch zestawów są wykluczone z Wynikowy zestaw.</span><span class="sxs-lookup"><span data-stu-id="8dce7-235">Permission types that exist in only one of the two sets are excluded from the resulting set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-236">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.Intersect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-236">The following code example shows the use of the <xref:System.Security.PermissionSet.Intersect%2A> method.</span></span> <span data-ttu-id="8dce7-237">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-237">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#12)]
 [!code-csharp[System.Security.PermissionSet#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#12)]
 [!code-vb[System.Security.PermissionSet#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-238">Pobiera wartość wskazującą czy <see cref="T:System.Security.PermissionSet" /> jest pusta.</span><span class="sxs-lookup"><span data-stu-id="8dce7-238">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> is empty.</span></span></summary>
        <returns>
          <span data-ttu-id="8dce7-239"><see langword="true" /> Jeśli <see cref="T:System.Security.PermissionSet" /> jest pusty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-239"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is empty; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-240">A <xref:System.Security.PermissionSet> może być pusty, a jeszcze zawierać wystąpienia uprawnienia, jeśli te uprawnienia są w stanie pełni ograniczone.</span><span class="sxs-lookup"><span data-stu-id="8dce7-240">A <xref:System.Security.PermissionSet> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</span></span> <span data-ttu-id="8dce7-241">Uprawnienia są w pełni ograniczeniami jeśli ich `IsSubsetOf` metody zwracają `true` podczas `null` jest przekazywana jako parametr.</span><span class="sxs-lookup"><span data-stu-id="8dce7-241">Permissions are in a fully restricted state if their `IsSubsetOf` methods return `true` when `null` is passed as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8dce7-242">Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-242">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="8dce7-243">Zawsze <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-243">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-244">A <xref:System.Security.PermissionSet> nie może być tylko do odczytu, dzięki czemu ta właściwość jest zawsze `false`.</span><span class="sxs-lookup"><span data-stu-id="8dce7-244">A <xref:System.Security.PermissionSet> cannot be read-only, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-245">Poniższy przykład kodu pokazuje wartość zwrócona przez <xref:System.Security.PermissionSet.IsReadOnly%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8dce7-245">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsReadOnly%2A> property.</span></span> <span data-ttu-id="8dce7-246">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-246">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#7)]
 [!code-csharp[System.Security.PermissionSet#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#7)]
 [!code-vb[System.Security.PermissionSet#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.PermissionSet target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class System.Security.PermissionSet target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As PermissionSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::PermissionSet ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8dce7-247">Zestaw uprawnień do testowania dla relacji podzbioru.</span><span class="sxs-lookup"><span data-stu-id="8dce7-247">The permission set to test for the subset relationship.</span></span> <span data-ttu-id="8dce7-248">Musi to być albo <see cref="T:System.Security.PermissionSet" /> lub <see cref="T:System.Security.NamedPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-248">This must be either a <see cref="T:System.Security.PermissionSet" /> or a <see cref="T:System.Security.NamedPermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="8dce7-249">Określa, czy bieżący <see cref="T:System.Security.PermissionSet" /> jest podzbiorem określonego <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-249">Determines whether the current <see cref="T:System.Security.PermissionSet" /> is a subset of the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="8dce7-250"><see langword="true" /> Jeśli bieżący <see cref="T:System.Security.PermissionSet" /> jest podzbiorem <paramref name="target" /> parametru; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-250"><see langword="true" /> if the current <see cref="T:System.Security.PermissionSet" /> is a subset of the <paramref name="target" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-251">A <xref:System.Security.PermissionSet> jest podzbiorem docelowy <xref:System.Security.PermissionSet> Jeśli wszystkich potrzeb, która niepowodzeniem dla <xref:System.Security.PermissionSet> również powiodła się dla elementu docelowego.</span><span class="sxs-lookup"><span data-stu-id="8dce7-251">A <xref:System.Security.PermissionSet> is a subset of the target <xref:System.Security.PermissionSet> if all demands that succeed for the <xref:System.Security.PermissionSet> also succeed for the target.</span></span> <span data-ttu-id="8dce7-252">Oznacza to co najmniej uprawnienia zawarte w podzbiorze zawiera element docelowy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-252">That is, the target contains at least the permissions contained in the subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-253">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.IsSubsetOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-253">The following code example shows the use of the <xref:System.Security.PermissionSet.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="8dce7-254">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-254">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#11)]
 [!code-csharp[System.Security.PermissionSet#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#11)]
 [!code-vb[System.Security.PermissionSet#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8dce7-255">Pobiera wartość wskazującą, czy kolekcja jest gwarantowane wątku jest bezpieczne.</span><span class="sxs-lookup"><span data-stu-id="8dce7-255">Gets a value indicating whether the collection is guaranteed to be thread safe.</span></span></summary>
        <value><span data-ttu-id="8dce7-256">Zawsze <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-256">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-257"><xref:System.Security.PermissionSet> nie automatycznie obsługuje bezpieczeństwo wątków, dzięki czemu ta właściwość jest zawsze `false`.</span><span class="sxs-lookup"><span data-stu-id="8dce7-257"><xref:System.Security.PermissionSet> does not automatically handle thread safety, so this property is always `false`.</span></span>  
  
 <span data-ttu-id="8dce7-258">Ta metoda jest wymagany do obsługi <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-258">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-259">Poniższy przykład kodu pokazuje wartość zwrócona przez <xref:System.Security.PermissionSet.IsSynchronized%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8dce7-259">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsSynchronized%2A> property.</span></span> <span data-ttu-id="8dce7-260">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-260">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#6)]
 [!code-csharp[System.Security.PermissionSet#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#6)]
 [!code-vb[System.Security.PermissionSet#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-261">Określa, czy <see cref="T:System.Security.PermissionSet" /> jest <see langword="Unrestricted" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-261">Determines whether the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />.</span></span></summary>
        <returns>
          <span data-ttu-id="8dce7-262"><see langword="true" /> Jeśli <see cref="T:System.Security.PermissionSet" /> jest <see langword="Unrestricted" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-262"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-263">`Unrestricted` <xref:System.Security.PermissionSet> Skutecznie zawiera wszystkie uprawnienia, które implementują <xref:System.Security.Permissions.IUnrestrictedPermission> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-263">An `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-264">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.IsUnrestricted%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-264">The following code example shows the use of the <xref:System.Security.PermissionSet.IsUnrestricted%2A> method.</span></span> <span data-ttu-id="8dce7-265">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-265">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#19)]
 [!code-csharp[System.Security.PermissionSet#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#19)]
 [!code-vb[System.Security.PermissionSet#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-266">Powoduje, że każdy <see cref="M:System.Security.PermissionSet.Demand" /> który przechodzi przez kod wywołujący dla każdego <see cref="T:System.Security.PermissionSet" /> czyli nie podzbiór bieżącego <see cref="T:System.Security.PermissionSet" /> się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="8dce7-266">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for any <see cref="T:System.Security.PermissionSet" /> that is not a subset of the current <see cref="T:System.Security.PermissionSet" /> to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-267"><xref:System.Security.PermissionSet.PermitOnly%2A> przypomina <xref:System.Security.PermissionSet.Deny%2A>, w tym zarówno spowodować przeszukiwań stosu się niepowodzeniem podczas ich w przeciwnym razie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="8dce7-267"><xref:System.Security.PermissionSet.PermitOnly%2A> is similar to <xref:System.Security.PermissionSet.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="8dce7-268">Różnica jest to, że <xref:System.Security.PermissionSet.Deny%2A> określa uprawnienia, które spowoduje niepowodzenie przeszukiwania stosu, ale <xref:System.Security.PermissionSet.PermitOnly%2A> określa tylko uprawnienia, które nie powodują przeszukiwania stosu się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="8dce7-268">The difference is that <xref:System.Security.PermissionSet.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.PermissionSet.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="8dce7-269">Wywołanie tej metody, aby upewnić się, że kodu można uzyskać dostępu do określonych zasobów.</span><span class="sxs-lookup"><span data-stu-id="8dce7-269">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="8dce7-270"><xref:System.Security.PermissionSet.PermitOnly%2A> jest ignorowany dla uprawnienia nie udzielono, ponieważ nie powiodło się żądanie dla tego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-270"><xref:System.Security.PermissionSet.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission cannot succeed.</span></span> <span data-ttu-id="8dce7-271">Jednak jeśli kod niższe w wywołaniu później stosu wywołań <xref:System.Security.PermissionSet.Demand%2A> dla tego uprawnienia <xref:System.Security.SecurityException> jest generowany, gdy kod, który próbowano nawiązać połączenie osiągnie przeszukiwania stosu <xref:System.Security.PermissionSet.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-271">However, if code lower on the call stack later calls <xref:System.Security.PermissionSet.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.PermissionSet.PermitOnly%2A>.</span></span> <span data-ttu-id="8dce7-272">Jest to spowodowane kod, który wywołuje <xref:System.Security.PermissionSet.PermitOnly%2A> nie udzielono uprawnień, mimo że mu <xref:System.Security.PermissionSet.PermitOnly%2A> dla tego uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-272">This is because the code that called <xref:System.Security.PermissionSet.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.PermissionSet.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="8dce7-273">Stos wywołań jest zazwyczaj reprezentowany jako rośnie, tak, aby metody wyżej w stosie wywołań wywoływać metody niższe w stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="8dce7-273">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission RemovePermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission RemovePermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemovePermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ RemovePermission(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="8dce7-274">Typ uprawnień do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-274">The type of permission to delete.</span></span></param>
        <summary><span data-ttu-id="8dce7-275">Usuwa uprawnienia określonego typu z zestawu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-275">Removes a permission of a certain type from the set.</span></span></summary>
        <returns><span data-ttu-id="8dce7-276">Uprawnienie usunięte z zestawu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-276">The permission removed from the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8dce7-277">Nie można usunąć uprawnienia z zestawu nieograniczone uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-277">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="8dce7-278">Uprawnienie zestaw pozostanie bez ograniczeń po próbować usunąć uprawnienie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="8dce7-278">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 <span data-ttu-id="8dce7-279">Poniższy kod C# próbuje usunąć <xref:System.Security.Permissions.FileIOPermission> z `FullTrust` zestawu uprawnień, ale uprawnienia nie są usuwane.</span><span class="sxs-lookup"><span data-stu-id="8dce7-279">The following C# code attempts to remove the <xref:System.Security.Permissions.FileIOPermission> from the `FullTrust` permission set, but the permission is not removed.</span></span>  
  
```  
PolicyLevel myPol = PolicyLevel.CreateAppDomainLevel();  
PermissionSet myPermSet = myPol.GetNamedPermissionSet("FullTrust");  
myPermSet.RemovePermission(typeof(FileIOPermission));  
```  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-280">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.RemovePermission%2A> metodę, aby usunąć <xref:System.Security.Permissions.FileIOPermission> z uprawnień ustawić.</span><span class="sxs-lookup"><span data-stu-id="8dce7-280">The following code example shows the use of the <xref:System.Security.PermissionSet.RemovePermission%2A> method to remove a <xref:System.Security.Permissions.FileIOPermission> from a permission set.</span></span> <span data-ttu-id="8dce7-281">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-281">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#15)]
 [!code-csharp[System.Security.PermissionSet#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#15)]
 [!code-vb[System.Security.PermissionSet#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8dce7-282">Metoda jest wywoływana z <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-282">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8dce7-283">Przy dziedziczeniu z <see cref="T:System.Security.PermissionSet" />, można zmienić zachowanie <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> metody przez zastąpienie <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-283">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission RemovePermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission RemovePermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemovePermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ RemovePermissionImpl(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="8dce7-284">Typ uprawnień do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-284">The type of the permission to remove.</span></span></param>
        <summary><span data-ttu-id="8dce7-285">Usuwa uprawnienia określonego typu z zestawu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-285">Removes a permission of a certain type from the set.</span></span></summary>
        <returns><span data-ttu-id="8dce7-286">Uprawnienie usunięte z zestawu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-286">The permission removed from the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-287"><xref:System.Security.PermissionSet.RemovePermissionImpl%2A> Metoda jest implementacją dla <xref:System.Security.PermissionSet.RemovePermission%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-287">The <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.RemovePermission%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8dce7-288">Nie można usunąć uprawnienia z zestawu nieograniczone uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-288">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="8dce7-289">Uprawnienie zestaw pozostanie bez ograniczeń po próbować usunąć uprawnienie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="8dce7-289">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8dce7-290">Metoda jest wywoływana z <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-290">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-291">Powoduje, że wszystkie poprzednie <see cref="M:System.Security.CodeAccessPermission.Assert" /> dla bieżącej ramki do zostaną usunięte i nie będzie już obowiązywać.</span><span class="sxs-lookup"><span data-stu-id="8dce7-291">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer be in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-292">W przypadku nie <xref:System.Security.CodeAccessPermission.Assert%2A> dla bieżącej ramki <xref:System.ExecutionEngineException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="8dce7-292">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8dce7-293">Brak poprzedniej nie <see cref="M:System.Security.CodeAccessPermission.Assert" /> dla bieżącej ramki.</span><span class="sxs-lookup"><span data-stu-id="8dce7-293">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission SetPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission SetPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ SetPermission(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="8dce7-294">Uprawnienia, aby ustawić.</span><span class="sxs-lookup"><span data-stu-id="8dce7-294">The permission to set.</span></span></param>
        <summary><span data-ttu-id="8dce7-295">Ustawia uprawnienia <see cref="T:System.Security.PermissionSet" />, zastępowanie istniejących uprawnień tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-295">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span></span></summary>
        <returns><span data-ttu-id="8dce7-296">Ustawianie uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-296">The set permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-297">Ta metoda usuwa wszystkie istniejące obiektu uprawnień tego samego typu z <xref:System.Security.PermissionSet> i zastępuje go tekstem `perm` parametru.</span><span class="sxs-lookup"><span data-stu-id="8dce7-297">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="8dce7-298">Jeśli uprawnienia, które implementuje <xref:System.Security.Permissions.IUnrestrictedPermission> jest ustawiona na <xref:System.Security.PermissionSet> czyli <xref:System.Security.Permissions.PermissionState.Unrestricted>, powstałe w ten sposób <xref:System.Security.PermissionSet> nie jest już `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="8dce7-298">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-299">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.SetPermission%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-299">The following code example shows the use of the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span> <span data-ttu-id="8dce7-300">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-300">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#16)]
 [!code-csharp[System.Security.PermissionSet#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#16)]
 [!code-vb[System.Security.PermissionSet#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8dce7-301">Metoda jest wywoływana z <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-301">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8dce7-302">Przy dziedziczeniu z <see cref="T:System.Security.PermissionSet" />, można zmienić zachowanie <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> metody przez zastąpienie <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-302">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission SetPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ SetPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="8dce7-303">Uprawnienia, aby ustawić.</span><span class="sxs-lookup"><span data-stu-id="8dce7-303">The permission to set.</span></span></param>
        <summary><span data-ttu-id="8dce7-304">Ustawia uprawnienia <see cref="T:System.Security.PermissionSet" />, zastępowanie istniejących uprawnień tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-304">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span></span></summary>
        <returns><span data-ttu-id="8dce7-305">Ustawianie uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="8dce7-305">The set permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-306"><xref:System.Security.PermissionSet.SetPermissionImpl%2A> Metoda jest implementacją dla <xref:System.Security.PermissionSet.SetPermission%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-306">The <xref:System.Security.PermissionSet.SetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="8dce7-307">Ta metoda usuwa wszystkie istniejące obiektu uprawnień tego samego typu z <xref:System.Security.PermissionSet> i zastępuje go tekstem `perm` parametru.</span><span class="sxs-lookup"><span data-stu-id="8dce7-307">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="8dce7-308">Jeśli uprawnienia, które implementuje <xref:System.Security.Permissions.IUnrestrictedPermission> jest ustawiona na <xref:System.Security.PermissionSet> czyli <xref:System.Security.Permissions.PermissionState.Unrestricted>, powstałe w ten sposób <xref:System.Security.PermissionSet> nie jest już `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="8dce7-308">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8dce7-309">Metoda jest wywoływana z <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-309">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8dce7-310">Pobiera obiekt główny bieżącej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="8dce7-310">Gets the root object of the current collection.</span></span></summary>
        <value><span data-ttu-id="8dce7-311">Obiekt główny bieżącej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="8dce7-311">The root object of the current collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-312">Ta metoda jest wymagany do obsługi <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-312">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-313">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.SyncRoot%2A> właściwość pobierania obiektu głównego bieżącej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="8dce7-313">The following code example shows the use of <xref:System.Security.PermissionSet.SyncRoot%2A> property to get the root object of the current collection.</span></span> <span data-ttu-id="8dce7-314">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-314">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#8)]
 [!code-csharp[System.Security.PermissionSet#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#8)]
 [!code-vb[System.Security.PermissionSet#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="8dce7-315">Obiekt, który zainicjował wywołanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="8dce7-315">The object that initiated the callback.</span></span> <span data-ttu-id="8dce7-316">Funkcje tego parametru nie są obecnie implementowane.</span><span class="sxs-lookup"><span data-stu-id="8dce7-316">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="8dce7-317">Przebiegi podczas przeprowadzić deserializacji grafu całego obiektu.</span><span class="sxs-lookup"><span data-stu-id="8dce7-317">Runs when the entire object graph has been deserialized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-318">Zwraca reprezentację ciągu <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-318">Returns a string representation of the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="8dce7-319">Reprezentacja <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-319">A representation of the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-320">Reprezentacja ciągu jest przydatne w debugowanie, aby wyświetlić stan <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-320">The string representation is useful in debugging to see the state of a <xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-321">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.ToString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-321">The following code example shows the use of the <xref:System.Security.PermissionSet.ToString%2A> method.</span></span> <span data-ttu-id="8dce7-322">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-322">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#10)]
 [!code-csharp[System.Security.PermissionSet#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#10)]
 [!code-vb[System.Security.PermissionSet#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dce7-323">Tworzy kodowania XML obiektu zabezpieczeń oraz w jego bieżącym stanie.</span><span class="sxs-lookup"><span data-stu-id="8dce7-323">Creates an XML encoding of the security object and its current state.</span></span></summary>
        <returns><span data-ttu-id="8dce7-324">Kodowanie XML obiektu zabezpieczeń, łącznie z żadnych informacji o stanie.</span><span class="sxs-lookup"><span data-stu-id="8dce7-324">An XML encoding of the security object, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8dce7-325">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.ToXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-325">The following code example shows the use of the <xref:System.Security.PermissionSet.ToXml%2A> method.</span></span> <span data-ttu-id="8dce7-326">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-326">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Union (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Union(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Union(System::Security::PermissionSet ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="8dce7-327">Uprawnienie ustawione na formularzu związek z bieżącym <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-327">The permission set to form the union with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="8dce7-328">Tworzy <see cref="T:System.Security.PermissionSet" /> czyli Unii bieżącego <see cref="T:System.Security.PermissionSet" /> i określonego <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-328">Creates a <see cref="T:System.Security.PermissionSet" /> that is the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="8dce7-329">Nowy zestaw uprawnień, reprezentujący Unii bieżącego <see cref="T:System.Security.PermissionSet" /> i określonego <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="8dce7-329">A new permission set that represents the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dce7-330">Wynik wywołania <xref:System.Security.PermissionSet.Union%2A> jest <xref:System.Security.PermissionSet> reprezentujący wszystkie operacje reprezentowany przez bieżący <xref:System.Security.PermissionSet> oraz wszystkie operacje reprezentowany przez określony <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="8dce7-330">The result of a call to <xref:System.Security.PermissionSet.Union%2A> is a <xref:System.Security.PermissionSet> that represents all the operations represented by the current <xref:System.Security.PermissionSet> as well as all the operations represented by the specified <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="8dce7-331">Jeśli jest skonfigurowany `Unrestricted`, Unii jest `Unrestricted` również.</span><span class="sxs-lookup"><span data-stu-id="8dce7-331">If either set is `Unrestricted`, the union is `Unrestricted` as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dce7-332">W poniższym przykładzie pokazano sposób użycia <xref:System.Security.PermissionSet.Union%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8dce7-332">The following code example shows the use of the <xref:System.Security.PermissionSet.Union%2A> method.</span></span> <span data-ttu-id="8dce7-333">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.PermissionSet> klasy.</span><span class="sxs-lookup"><span data-stu-id="8dce7-333">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#13)]
 [!code-csharp[System.Security.PermissionSet#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#13)]
 [!code-vb[System.Security.PermissionSet#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>