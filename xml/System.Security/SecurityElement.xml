<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityElement.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f9e13ab606e9616d0c4f55d43e917229c2a09f97.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e13ab606e9616d0c4f55d43e917229c2a09f97</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>Represents the XML object model for encoding security objects.</source>
          <target state="translated">Reprezentuje model obiektów XML do kodowania obiektów zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>This class cannot be inherited.</source>
          <target state="translated">Klasa ta nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</source>
          <target state="translated">Ta klasa ma być lekkie wykonania prostego modelu obiektu XML do użycia w ramach systemu zabezpieczeń, a nie do użytku jako ogólne modelu obiektu XML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This documentation assumes a basic knowledge of XML.</source>
          <target state="translated">W tej dokumentacji przyjęto założenie, podstawową wiedzę na temat języka XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The simple XML object model for an element consists of the following parts:</source>
          <target state="translated">Prosty model obiektów XML dla elementu składa się z następujących elementów:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The tag is the element name.</source>
          <target state="translated">Tag jest nazwa elementu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The attributes are zero or more name/value attribute pairs on the element.</source>
          <target state="translated">Atrybuty są zero lub więcej pary atrybutów nazwa/wartość w elemencie.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The children are zero or more elements nested within <ph id="ph1">`&lt;tag&gt;`</ph> and <ph id="ph2">`&lt;/tag&gt;`</ph>.</source>
          <target state="translated">Elementy podrzędne są zero lub więcej elementów zagnieżdżone w obrębie <ph id="ph1">`&lt;tag&gt;`</ph> i <ph id="ph2">`&lt;/tag&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>It is strongly suggested that attribute based XML representation is used to express security elements and their values.</source>
          <target state="translated">Zaleca się, że atrybut w reprezentacji XML jest używany do express elementy zabezpieczeń i ich wartości.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This means properties of an element are expressed as attributes and property values are expressed as attribute values.</source>
          <target state="translated">Oznacza to, właściwości elementu są wyrażane jako atrybuty i wartości właściwości są wyrażane jako wartości atrybutu.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Avoid nesting text within tags.</source>
          <target state="translated">Unikaj zagnieżdżenia tekst w tagach.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>For any <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> representation a representation of type <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> is usually available.</source>
          <target state="translated">Dla każdego <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> reprezentacja a reprezentacja typu <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> jest zazwyczaj dostępna.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</source>
          <target state="translated">Za pomocą tego reprezentacji XML na podstawie atrybutów zwiększa czytelność i umożliwia łatwe przenośność WMI wynikowy serializacji XML.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>An attribute name must be one character or longer, and cannot be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Nazwa atrybutu musi być jednym znaku lub dłużej, a nie może być <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>If element-based value representation is used, elements with a text string that is <ph id="ph1">`null`</ph> are represented in the <ph id="ph2">`&lt;tag/&gt;`</ph> form; otherwise, text is delimited by the <ph id="ph3">`&lt;tag&gt;`</ph> and <ph id="ph4">`&lt;/tag&gt;`</ph> tokens.</source>
          <target state="translated">Jeśli używana jest reprezentacja elementu na podstawie wartości, elementy z tekstem ciąg znaków <ph id="ph1">`null`</ph> są reprezentowane w <ph id="ph2">`&lt;tag/&gt;`</ph> tworzą; w przeciwnym razie tekst rozdzielone <ph id="ph3">`&lt;tag&gt;`</ph> i <ph id="ph4">`&lt;/tag&gt;`</ph> tokenów.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Both forms can be combined with attributes, which are shown if present.</source>
          <target state="translated">Zarówno formularzy można łączyć z atrybutów, które są wyświetlane jeśli jest obecny.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The tags, attributes, and text of elements, if present, are always case-sensitive.</source>
          <target state="translated">Tagi, atrybuty i tekst elementy, jeśli jest obecny, zawsze jest rozróżniana wielkość liter.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The XML form contains quotations and escapes where necessary.</source>
          <target state="translated">W formacie XML zawiera oferty i specjalne w miarę potrzeby.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>String values that include characters invalid for use in XML result in an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Wartości ciągu, które zawierają znaki nieprawidłowy do użycia w kodzie XML wyniku w <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>These rules apply to all properties and methods.</source>
          <target state="translated">Te reguły dotyczą wszystkich właściwości i metod.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</source>
          <target state="translated">Ze względu na wydajność ważności znak tylko są sprawdzane, gdy element jest zakodowany w postaci tekstu XML, a nie na każdy zestaw właściwości lub metody.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Static methods allow explicit checking where needed.</source>
          <target state="translated">Metody statyczne Zezwalaj jawne sprawdzanie w razie potrzeby.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The following example shows the use of members of the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">W poniższym przykładzie przedstawiono użycie członkami <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The tag name of an XML element.</source>
          <target state="translated">Nazwa tagu elementu XML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class with the specified tag.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> klasy z określonego tagu.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">`tag`</ph> parameter must consist of a valid XML tag name.</source>
          <target state="translated"><ph id="ph1">`tag`</ph> Parametru może składać się z prawidłową nazwą tagu XML.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> usunięcie nieprawidłowych znaków z ciągu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The following code shows the use of  the <ph id="ph1">&lt;xref:System.Security.SecurityElement.%23ctor%2A&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> object.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.%23ctor%2A&gt;</ph> konstruktora, aby utworzyć nową <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> Parametr jest nieprawidłowy w kodzie XML.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The tag name of the XML element.</source>
          <target state="translated">Nazwa tagu elementu XML.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The text content within the element.</source>
          <target state="translated">Zawartość tekstu w elemencie.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class with the specified tag and text.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> z określonego tagu i tekst.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>If the <ph id="ph1">`text`</ph> parameter is <ph id="ph2">`null`</ph> this constructor produces an element identical to the default constructor.</source>
          <target state="translated">Jeśli <ph id="ph1">`text`</ph> parametr jest <ph id="ph2">`null`</ph> ten konstruktor tworzy element taki sam jak konstruktora domyślnego.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> Parametru lub <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parametr jest nieprawidłowy w kodzie XML.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The name of the attribute.</source>
          <target state="translated">Nazwa atrybutu.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">Wartość atrybutu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Adds a name/value attribute to an XML element.</source>
          <target state="translated">Dodaje atrybut nazwy i wartości do elementu XML.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Names and values in attributes should only contain valid XML attribute characters.</source>
          <target state="translated">Nazwy i wartości atrybutów powinna zawierać tylko prawidłowe znaki atrybutu XML.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>XML attribute names must be unique.</source>
          <target state="translated">Nazwy atrybutów XML musi być unikatowa.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> usunięcie nieprawidłowych znaków z ciągu.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">Nie jest obsługiwane dla ciągów ujętego w cudzysłów, dlatego ciągów dla pary nazwa/wartość nie powinna zawierać cudzysłowów lub inne znaki wymagające zamykający.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddAttribute%2A&gt;</ph> method to add a name/value attribute to an XML element.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddAttribute%2A&gt;</ph> metodę, aby dodać atrybut nazwy i wartości do elementu XML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> Parametru lub <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parametr jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> Parametru lub <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parametr jest nieprawidłowy w kodzie XML.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>An attribute with the name specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter already exists.</source>
          <target state="translated">Atrybut o nazwie określonej przez <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parametr już istnieje.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The child element to add.</source>
          <target state="translated">Aby dodać element podrzędny.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>Adds a child element to the XML element.</source>
          <target state="translated">Dodaje element podrzędny elementu XML.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The child element is added following any previously existing child elements.</source>
          <target state="translated">Element podrzędny jest dodawany po żadnych istniejących elementów podrzędnych.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddChild%2A&gt;</ph> method to add a child element to the XML element.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddChild%2A&gt;</ph> metody w celu dodania elementu podrzędnego do elementu XML.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="child" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="child" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The name of the attribute for which to search.</source>
          <target state="translated">Nazwa atrybutu, który chcesz wyszukać.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>Finds an attribute by name in an XML element.</source>
          <target state="translated">Wyszukuje atrybut według nazwy w elemencie XML.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The value associated with the named attribute, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no attribute with <ph id="ph2">&lt;paramref name="name" /&gt;</ph> exists.</source>
          <target state="translated">Wartość skojarzoną z nazwanego atrybutu lub <ph id="ph1">&lt;see langword="null" /&gt;</ph> Jeśli atrybutu z <ph id="ph2">&lt;paramref name="name" /&gt;</ph> istnieje.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>With XML as follows, <ph id="ph1">`Attribute("B")`</ph> would return "456".</source>
          <target state="translated">Za pomocą XML w następujący sposób <ph id="ph1">`Attribute("B")`</ph> zwróci "456".</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attribute%2A&gt;</ph> method to find an attribute by name.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attribute%2A&gt;</ph> metody do znalezienia atrybutu według nazwy.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>Gets or sets the attributes of an XML element as name/value pairs.</source>
          <target state="translated">Pobiera lub ustawia atrybuty elementu XML jako pary nazwa/wartość.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> object for the attribute values of the XML element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> Obiektu dla wartości atrybutu elementu XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Each attribute is stored in the <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> as a name/value pair.</source>
          <target state="translated">Każdy atrybut jest przechowywany w <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> jako pary nazwa/wartość.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Names and values in attributes should contain only valid XML attribute characters.</source>
          <target state="translated">Nazwy i wartości atrybutów powinna zawierać tylko prawidłowe znaki atrybutu XML.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> usunięcie nieprawidłowych znaków z ciągu.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">Nie jest obsługiwane dla ciągów ujętego w cudzysłów, dlatego ciągów dla pary nazwa/wartość nie powinna zawierać cudzysłowów lub inne znaki wymagające zamykający.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> property to get an attribute of an XML element.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> właściwości można pobrać atrybutu elementu XML.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>The name or value of the <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> object is invalid.</source>
          <target state="translated">Nazwa lub wartość <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> obiektu jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>The name is not a valid XML attribute name.</source>
          <target state="translated">Nazwa nie jest prawidłową nazwą atrybutu XML.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Children">
          <source>Gets or sets the array of child elements of the XML element.</source>
          <target state="translated">Pobiera lub ustawia tablicę elementów podrzędnych elementu XML.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>The ordered child elements of the XML element as security elements.</source>
          <target state="translated">Elementy podrzędne uporządkowanej elementu XML jako elementy zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>If a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contains both <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> will appear first.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> zawiera oba <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> będą występować jako pierwszy.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> property to get the array of child elements of the XML element.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> właściwości do pobrania tablicy elementów podrzędnych elementu XML.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Children">
          <source>A child of the XML parent node is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Jest elementem podrzędnym węzła nadrzędnego XML <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Copy">
          <source>Creates and returns an identical copy of the current <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> object.</source>
          <target state="translated">Tworzy i zwraca identyczne kopię bieżącego <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Copy">
          <source>A copy of the current <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> object.</source>
          <target state="translated">Kopię bieżącego <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Copy">
          <source>The copy includes both the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> properties.</source>
          <target state="translated">Kopia obejmuje zarówno <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>An XML element object to which to compare the current XML element object.</source>
          <target state="translated">Obiektu elementu XML, do których należy porównywać bieżący obiekt elementu XML.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>Compares two XML element objects for equality.</source>
          <target state="translated">Porównuje dwa obiekty — element XML pod kątem równości.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli znacznik, nazw atrybutów i wartości, elementy podrzędne i pól tekstowych w bieżącym elemencie XML są takie same jak ich odpowiedniki w <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parametru; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>If there are child elements, comparison extends recursively to them.</source>
          <target state="translated">Jeśli istnieją elementy podrzędne, porównanie rozszerza rekursywnie do nich.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>There is no support for comparing different XML representations of the same characters.</source>
          <target state="translated">Nie jest obsługiwane dla porównanie różnych reprezentacji XML znaków.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Equal%2A&gt;</ph> method to compare two XML elements.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.Equal%2A&gt;</ph> metodę, aby porównać dwóch elementów XML.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The string within which to escape invalid characters.</source>
          <target state="translated">Ciąg, w jakim nieprawidłowe znaki ucieczki.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Replaces invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">Zamienia nieprawidłowych znaków XML w ciągu z ich prawidłowe równoważnymi XML.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The input string with invalid characters replaced.</source>
          <target state="translated">Ciąg wejściowy nieprawidłowych znaków.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Use this method to replace invalid characters in a string before using the string in a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>.</source>
          <target state="translated">Ta metoda umożliwia zamienić nieprawidłowe znaki w ciągu przed użyciem ciągu w <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>If invalid characters are used in a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> without being escaped, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">Jeśli używane są nieprawidłowe znaki w <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> bez znaki ucieczki, <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> jest generowany.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The following table shows the invalid XML characters and their escaped equivalents.</source>
          <target state="translated">W poniższej tabeli przedstawiono nieprawidłowych znaków XML i ich odpowiedniki zmienionym znaczeniu.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>invalid XML Character</source>
          <target state="translated">Nieprawidłowy znak XML</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Replaced With</source>
          <target state="translated">Zastąpiony</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"<ph id="ph1">\&lt;</ph>"</source>
          <target state="translated">"<ph id="ph1">\&lt;</ph>"</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"<ph id="ph1">&amp;lt;</ph>"</source>
          <target state="translated">"<ph id="ph1">&amp;lt;</ph>"</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"&gt;"</source>
          <target state="translated">"&gt;"</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"<ph id="ph1">&amp;gt;</ph>"</source>
          <target state="translated">"<ph id="ph1">&amp;gt;</ph>"</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"<ph id="ph1">\\</ph>""</source>
          <target state="translated">"<ph id="ph1">\\</ph>""</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"<ph id="ph1">&amp;quot;</ph>"</source>
          <target state="translated">"<ph id="ph1">&amp;quot;</ph>"</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"<ph id="ph1">\\</ph>'"</source>
          <target state="translated">"<ph id="ph1">\\</ph>'"</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"<ph id="ph1">&amp;apos;</ph>"</source>
          <target state="translated">"<ph id="ph1">&amp;apos;</ph>"</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"&amp;"</source>
          <target state="translated">"&amp;"</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>"<ph id="ph1">&amp;amp;</ph>"</source>
          <target state="translated">"<ph id="ph1">&amp;amp;</ph>"</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> method to replace invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> metodę, aby zastąpić nieprawidłowy kod XML znaków w ciągu z ich prawidłowe równoważnymi XML.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>The XML-encoded string from which to create the security element.</source>
          <target state="translated">Ciąg kodowany w formacie XML z którego można utworzyć elementu zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Creates a security element from an XML-encoded string.</source>
          <target state="translated">Tworzy element zabezpieczeń z ciąg kodowany w formacie XML.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> created from the XML.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> utworzone na podstawie pliku XML.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</source>
          <target state="translated">Nie należy używać pojedynczego cudzysłowu w ciągu XML; Zamiast tego użyj wyjściowym podwójnych cudzysłowów prostych.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>For example, instead of "<ph id="ph1">`&lt;value name='Company'&gt;Microsoft&lt;/value&gt;"`</ph> use "<ph id="ph2">`&lt;value name=\"Company\"&gt;Microsoft&lt;/value&gt;"`</ph>.</source>
          <target state="translated">Na przykład zamiast elementu "<ph id="ph1">`&lt;value name='Company'&gt;Microsoft&lt;/value&gt;"`</ph> Użyj"<ph id="ph2">`&lt;value name=\"Company\"&gt;Microsoft&lt;/value&gt;"`</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</source>
          <target state="translated">Użycie apostrofu może spowodować w Wystąpił wyjątek został zgłoszony lub, w niektórych przypadkach pojedynczy znaki cudzysłowu są traktowane jako tekst w ciągu.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> contains one or more single quotation mark characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> zawiera co najmniej jeden znak pojedynczego cudzysłowu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>The attribute name to test for validity.</source>
          <target state="translated">Nazwa atrybutu, aby sprawdzić poprawność.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>Determines whether a string is a valid attribute name.</source>
          <target state="translated">Określa, czy ciąg jest prawidłową nazwą atrybutu.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parameter is a valid XML attribute name; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parametr jest prawidłowy atrybut XML nazwa; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">Ta metoda może służyć do testowania atrybutu przed dodaniem go do elementu zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeName%2A&gt;</ph> method to determine whether a string is a valid attribute name.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeName%2A&gt;</ph> metodę, aby określić, czy ciąg jest prawidłową nazwą atrybutu.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>The attribute value to test for validity.</source>
          <target state="translated">Wartość atrybutu do sprawdzenia poprawności.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>Determines whether a string is a valid attribute value.</source>
          <target state="translated">Określa, czy ciąg ma wartość nieprawidłowy atrybut.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is a valid XML attribute value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parametru jest prawidłową wartością atrybutu XML; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">Ta metoda może służyć do testowania atrybutu przed dodaniem go do elementu zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeValue%2A&gt;</ph> method to determine whether a string is a valid attribute value.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeValue%2A&gt;</ph> metodę, aby określić, czy ciąg jest prawidłowym atrybutem wartości.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>The tag to test for validity.</source>
          <target state="translated">Tag, aby sprawdzić poprawność.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>Determines whether a string is a valid tag.</source>
          <target state="translated">Określa, czy ciąg jest poprawny tag.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> parameter is a valid XML tag; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> parametr jest nieprawidłowy tag XML; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>This can be used to test a <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> before setting it.</source>
          <target state="translated">To może służyć do testowania <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> przed ustawieniem dla niego.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidTag%2A&gt;</ph> method to determine whether a string is a valid attribute tag.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidTag%2A&gt;</ph> metodę, aby określić, czy ciąg jest prawidłowym atrybutem tag.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>The text to test for validity.</source>
          <target state="translated">Tekst, aby sprawdzić poprawność.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>Determines whether a string is valid as text within an XML element.</source>
          <target state="translated">Określa, czy ciąg jest prawidłowy jako tekst w obrębie elementu XML.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parameter is a valid XML text element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parametr jest prawidłowy element tekstowy XML; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>This method can be used to test <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> before setting it.</source>
          <target state="translated">Ta metoda może służyć do testowania <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> przed ustawieniem dla niego.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidText%2A&gt;</ph> method to determine whether a string is valid as XML element text.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidText%2A&gt;</ph> metodę, aby określić, czy ciąg jest prawidłowy jako tekst elementu XML.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">Tag do wyszukania w elementach podrzędnych.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>Finds a child by its tag name.</source>
          <target state="translated">Wyszukuje element podrzędny za pomocą nazwy tagu.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The first child XML element with the specified tag value, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no child element with <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> exists.</source>
          <target state="translated">Pierwszym elementem podrzędnym XML z wartością określonego tagu lub <ph id="ph1">&lt;see langword="null" /&gt;</ph> Jeśli żaden element podrzędny o <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> istnieje.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>With XML as follows, <ph id="ph1">`SearchForChildByTag("second")`</ph> would return the child element <ph id="ph2">`&lt;second&gt;`</ph>.</source>
          <target state="translated">Za pomocą XML w następujący sposób <ph id="ph1">`SearchForChildByTag("second")`</ph> zwróci element podrzędny <ph id="ph2">`&lt;second&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForChildByTag%2A&gt;</ph> method to find a child by its tag name.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForChildByTag%2A&gt;</ph> metody do znalezienia elementu podrzędnego za pomocą nazwy tagu.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">Tag do wyszukania w elementach podrzędnych.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>Finds a child by its tag name and returns the contained text.</source>
          <target state="translated">Znajduje podrzędnej przy użyciu nazwy tagu i zwraca zawartych w niej tekstu.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The text contents of the first child element with the specified tag value.</source>
          <target state="translated">Zawartość tekstowa pierwszy element podrzędny o wartości określonego tagu.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>This method is equivalent to the following:</source>
          <target state="translated">Ta metoda jest odpowiednikiem następujące czynności:</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>With XML as follows, <ph id="ph1">`SearchForTextOfTag("second")`</ph> would return "text2".</source>
          <target state="translated">Za pomocą XML w następujący sposób <ph id="ph1">`SearchForTextOfTag("second")`</ph> zwróci "Tekst2".</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForTextOfTag%2A&gt;</ph> method to find a child by its tag name and return the contained text.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForTextOfTag%2A&gt;</ph> metody można znaleźć elementu podrzędnego za pomocą nazwy tagu i zwracanie zawartych w niej tekstu.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>Gets or sets the tag name of an XML element.</source>
          <target state="translated">Pobiera lub ustawia nazwę tagu elementu XML.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag name of an XML element.</source>
          <target state="translated">Nazwa tagu elementu XML.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>In XML, the tag appears in the script as appears below:</source>
          <target state="translated">W kodzie XML znaczniki pojawia się skrypt pojawia się poniżej:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>If this element has child elements, the children will replace <ph id="ph1">`text`</ph>.</source>
          <target state="translated">Jeśli ten element ma elementy podrzędne, spowoduje zastąpienie dzieci <ph id="ph1">`text`</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>Assign only valid XML tag strings to this property.</source>
          <target state="translated">Tylko prawidłowe ciągi tagu XML można przypisać do tej właściwości.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> usunięcie nieprawidłowych znaków z ciągu.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> property to get the tag name of an XML element.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> właściwości można uzyskać nazwy tagu elementu XML.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Tag jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag is not valid in XML.</source>
          <target state="translated">Tag nie jest nieprawidłowe w kodzie XML.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Text">
          <source>Gets or sets the text within an XML element.</source>
          <target state="translated">Pobiera lub ustawia tekst wewnątrz elementu XML.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The value of the text within an XML element.</source>
          <target state="translated">Wartość tekstu w elemencie XML.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The text should not contain XML special characters.</source>
          <target state="translated">Tekst nie powinna zawierać znaków specjalnych XML.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> usunięcie nieprawidłowych znaków z ciągu.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>If a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contains both <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> will appear first.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> zawiera oba <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> będą występować jako pierwszy.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> property to get the text of an XML element.</source>
          <target state="translated">Poniższy kod przedstawia użycie <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> właściwości, aby uzyskać tekst elementu XML.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Text">
          <source>The text is not valid in XML.</source>
          <target state="translated">Tekst nie jest nieprawidłowe w kodzie XML.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.ToString">
          <source>Produces a string representation of an XML element and its constituent attributes, child elements, and text.</source>
          <target state="translated">Generuje reprezentację ciągu XML element i jego składników atrybutów, elementy podrzędne i tekst.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.ToString">
          <source>The XML element and its contents.</source>
          <target state="translated">XML element i jego zawartość.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.ToString">
          <source>This method is useful in debugging to see the XML representation of the element.</source>
          <target state="translated">Ta metoda jest przydatna w debugowanie, aby wyświetlić reprezentację XML elementu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>