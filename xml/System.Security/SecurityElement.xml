<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a0d193e88792a87885f5a502568fc741fc772cd" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58749729" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6922d-101">Reprezentuje model obiektów XML do kodowania obiektów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="6922d-101">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="6922d-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="6922d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-103">Ta klasa ma być uproszczone wykonania prostego modelu obiektów XML do użycia w ramach systemu zabezpieczeń, a nie do użytku jako ogólne model obiektów XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="6922d-104">Ta dokumentacja przyjęto podstawową wiedzę na temat języka XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="6922d-105">Prosty model obiektów XML element składa się z następujących elementów:</span><span class="sxs-lookup"><span data-stu-id="6922d-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="6922d-106">Tag jest nazwa elementu.</span><span class="sxs-lookup"><span data-stu-id="6922d-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="6922d-107">Atrybuty są zero lub więcej par atrybutów nazwa/wartość dla elementu.</span><span class="sxs-lookup"><span data-stu-id="6922d-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="6922d-108">Elementy podrzędne mają wartość zero lub więcej elementów zagnieżdżonych w `<tag>` i `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="6922d-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="6922d-109">Zaleca się, że reprezentacja XML na podstawie atrybutu jest używana do express elementów zabezpieczeń i ich wartości.</span><span class="sxs-lookup"><span data-stu-id="6922d-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="6922d-110">Oznacza to właściwości elementu są wyrażane jako atrybuty i wartości właściwości są wyrażane jako wartości atrybutów.</span><span class="sxs-lookup"><span data-stu-id="6922d-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="6922d-111">Należy unikać zagnieżdżenia tekst wewnątrz tagów.</span><span class="sxs-lookup"><span data-stu-id="6922d-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="6922d-112">Dla każdego `<tag>text</tag>` reprezentacji a reprezentacja typu `<tag value="text"/>` jest zwykle dostępne.</span><span class="sxs-lookup"><span data-stu-id="6922d-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="6922d-113">Za pomocą taka Reprezentacja XML opartych na atrybutach zwiększa czytelność i umożliwia łatwe przenośność WMI wynikowy serializacji XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="6922d-114">Nazwa atrybutu musi być jednym znaku lub dłużej, a nie może być `null`.</span><span class="sxs-lookup"><span data-stu-id="6922d-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="6922d-115">Jeśli jest używana reprezentacja wartości na podstawie elementu, elementy z tekstem ciąg znaków `null` są reprezentowane w `<tag/>` tworzą; w przeciwnym razie rozdzielone tekstu `<tag>` i `</tag>` tokenów.</span><span class="sxs-lookup"><span data-stu-id="6922d-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="6922d-116">Obie formy może być łączone z atrybutów, które są wyświetlane jeśli jest obecny.</span><span class="sxs-lookup"><span data-stu-id="6922d-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="6922d-117">Znaczniki, atrybuty i tekst elementów, jeśli jest obecne, zawsze jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="6922d-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="6922d-118">W formacie XML zawiera ofert i specjalne, gdy jest to konieczne.</span><span class="sxs-lookup"><span data-stu-id="6922d-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="6922d-119">Wartości ciągu, które zawierają znaki nieprawidłowe do użycia w kodzie XML wyniku w <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6922d-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6922d-120">Te reguły mają zastosowanie do wszystkich właściwości i metod.</span><span class="sxs-lookup"><span data-stu-id="6922d-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6922d-121">Ze względu na wydajność ważność znaków są sprawdzane tylko wtedy, gdy element jest zakodowany w postaci tekstu XML, a nie na każdy zbiór właściwości lub metody.</span><span class="sxs-lookup"><span data-stu-id="6922d-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="6922d-122">Metody statyczne umożliwia jawne, sprawdzanie w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="6922d-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-123">Poniższy przykład pokazuje użycie członkowie <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6922d-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.SecurityElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="6922d-125">Nazwa tagu XML element.</span><span class="sxs-lookup"><span data-stu-id="6922d-125">The tag name of an XML element.</span></span></param>
        <summary><span data-ttu-id="6922d-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.SecurityElement" /> klasy z określonego tagu.</span><span class="sxs-lookup"><span data-stu-id="6922d-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-127">`tag` Parametr musi zawierać prawidłową nazwę tagu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="6922d-128">Użyj <xref:System.Security.SecurityElement.Escape%2A> do usunięcia nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="6922d-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-129">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.%23ctor%2A> Konstruktor do tworzenia nowego <xref:System.Security.SecurityElement> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6922d-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="6922d-130">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6922d-131"><paramref name="tag" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6922d-132"><paramref name="tag" /> Parametr jest nieprawidłowy w formacie XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-132">The <paramref name="tag" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="6922d-133">Nazwa tagu elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-133">The tag name of the XML element.</span></span></param>
        <param name="text"><span data-ttu-id="6922d-134">Zawartość tekstu w elemencie.</span><span class="sxs-lookup"><span data-stu-id="6922d-134">The text content within the element.</span></span></param>
        <summary><span data-ttu-id="6922d-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.SecurityElement" /> klasy z określonego tagu i tekst.</span><span class="sxs-lookup"><span data-stu-id="6922d-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-136">Jeśli `text` parametr `null` ten konstruktor tworzy element identyczne z domyślnego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="6922d-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6922d-137"><paramref name="tag" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6922d-138"><paramref name="tag" /> Parametru lub <paramref name="text" /> parametr jest nieprawidłowy w formacie XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6922d-139">Nazwa atrybutu.</span><span class="sxs-lookup"><span data-stu-id="6922d-139">The name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="6922d-140">Wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="6922d-140">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="6922d-141">Dodaje atrybut nazwa/wartość do elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-141">Adds a name/value attribute to an XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-142">Nazwy i wartości w atrybutach powinien zawierać tylko prawidłowe znaki atrybutu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="6922d-143">Nazw atrybutów XML musi być unikatowa.</span><span class="sxs-lookup"><span data-stu-id="6922d-143">XML attribute names must be unique.</span></span> <span data-ttu-id="6922d-144">Użyj <xref:System.Security.SecurityElement.Escape%2A> do usunięcia nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="6922d-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="6922d-145">Nie jest obsługiwane dla ciągów w cudzysłowach, więc ciągi dla pary nazwa/wartość nie może zawierać cudzysłowów ani innych znaków, wymagających cytowanie.</span><span class="sxs-lookup"><span data-stu-id="6922d-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-146">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.AddAttribute%2A> metodę, aby dodać atrybut nazwa/wartość do elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="6922d-147">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6922d-148"><paramref name="name" /> Parametru lub <paramref name="value" /> parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6922d-149"><paramref name="name" /> Parametru lub <paramref name="value" /> parametr jest nieprawidłowy w formacie XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span></span>  
  
<span data-ttu-id="6922d-150">—lub—</span><span class="sxs-lookup"><span data-stu-id="6922d-150">-or-</span></span> 
<span data-ttu-id="6922d-151">Atrybut o nazwie określonej przez <paramref name="name" /> parametr już istnieje.</span><span class="sxs-lookup"><span data-stu-id="6922d-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="6922d-152">Element podrzędny do dodania.</span><span class="sxs-lookup"><span data-stu-id="6922d-152">The child element to add.</span></span></param>
        <summary><span data-ttu-id="6922d-153">Dodaje element podrzędny do elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-153">Adds a child element to the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-154">Element podrzędny zostanie dodany po wszelkich uprzednio istniejące elementy podrzędne.</span><span class="sxs-lookup"><span data-stu-id="6922d-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-155">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.AddChild%2A> metodę, aby dodać element podrzędny do elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="6922d-156">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6922d-157"><paramref name="child" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-157">The <paramref name="child" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6922d-158">Nazwa atrybutu, który chcesz wyszukać.</span><span class="sxs-lookup"><span data-stu-id="6922d-158">The name of the attribute for which to search.</span></span></param>
        <summary><span data-ttu-id="6922d-159">Wyszukuje atrybut według nazwy w elemencie XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-159">Finds an attribute by name in an XML element.</span></span></summary>
        <returns><span data-ttu-id="6922d-160">Wartość skojarzona z nazwanego atrybutu lub <see langword="null" /> Jeśli atrybutu z <paramref name="name" /> istnieje.</span><span class="sxs-lookup"><span data-stu-id="6922d-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-161">Za pomocą XML w następujący sposób `Attribute("B")` zwróci "456".</span><span class="sxs-lookup"><span data-stu-id="6922d-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6922d-162">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Attribute%2A> metody do znalezienia atrybut według nazwy.</span><span class="sxs-lookup"><span data-stu-id="6922d-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="6922d-163">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6922d-164"><paramref name="name" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-164">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6922d-165">Pobiera lub ustawia atrybuty elementu XML jako pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="6922d-165">Gets or sets the attributes of an XML element as name/value pairs.</span></span></summary>
        <value><span data-ttu-id="6922d-166"><see cref="T:System.Collections.Hashtable" /> Obiektu dla wartości atrybutów elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-167">Każdy atrybut jest przechowywany w <xref:System.Collections.Hashtable> jako pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="6922d-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="6922d-168">Nazwy i wartości atrybutów może zawierać tylko prawidłowe znaki atrybutu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="6922d-169">Użyj <xref:System.Security.SecurityElement.Escape%2A> do usunięcia nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="6922d-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="6922d-170">Nie jest obsługiwane dla ciągów w cudzysłowach, więc ciągi dla pary nazwa/wartość nie może zawierać cudzysłowów ani innych znaków, wymagających cytowanie.</span><span class="sxs-lookup"><span data-stu-id="6922d-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-171">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Attributes%2A> właściwości do pobrania atrybutu elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="6922d-172">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="6922d-173">Nazwa lub wartość <see cref="T:System.Collections.Hashtable" /> obiekt jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="6922d-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6922d-174">Nazwa nie jest prawidłową nazwą atrybutu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-174">The name is not a valid XML attribute name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6922d-175">Pobiera lub ustawia tablicę elementów podrzędnych elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-175">Gets or sets the array of child elements of the XML element.</span></span></summary>
        <value><span data-ttu-id="6922d-176">Elementy podrzędne uporządkowane elementu XML jako elementy zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="6922d-176">The ordered child elements of the XML element as security elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-177">Jeśli <xref:System.Security.SecurityElement> zawiera zarówno <xref:System.Security.SecurityElement.Text%2A> i <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> będą wyświetlane na początku.</span><span class="sxs-lookup"><span data-stu-id="6922d-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-178">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Children%2A> właściwości do pobrania tablicy elementów podrzędnych elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="6922d-179">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6922d-180">Jest elementem podrzędnym węzła nadrzędnego XML <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-180">A child of the XML parent node is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6922d-181">Tworzy i zwraca identyczną kopię bieżącego <see cref="T:System.Security.SecurityElement" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6922d-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></summary>
        <returns><span data-ttu-id="6922d-182">Kopię bieżącego <see cref="T:System.Security.SecurityElement" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6922d-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-183">Kopia obejmuje zarówno <xref:System.Security.SecurityElement.Children%2A> i <xref:System.Security.SecurityElement.Attributes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6922d-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="6922d-184">Obiekt elementu XML, do którego do porównania z bieżącym obiektem elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-184">An XML element object to which to compare the current XML element object.</span></span></param>
        <summary><span data-ttu-id="6922d-185">Porównuje dwa obiekty elementu XML dla równości.</span><span class="sxs-lookup"><span data-stu-id="6922d-185">Compares two XML element objects for equality.</span></span></summary>
        <returns><span data-ttu-id="6922d-186"><see langword="true" /> Jeśli tag, nazwy atrybutów i wartości, elementy podrzędne i pola tekstowe w bieżącym elemencie XML są identyczne do ich odpowiedników w <paramref name="other" /> parametru; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-186"><see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-187">W przypadku elementów podrzędnych porównania rozszerza rekursywnie do nich.</span><span class="sxs-lookup"><span data-stu-id="6922d-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="6922d-188">Brak obsługi do porównywania różnych reprezentacji XML te same znaki.</span><span class="sxs-lookup"><span data-stu-id="6922d-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-189">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Equal%2A> metodę, aby porównać dwa elementy XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="6922d-190">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="6922d-191">Ciąg, w którym należy wprowadzić nieprawidłowe znaki.</span><span class="sxs-lookup"><span data-stu-id="6922d-191">The string within which to escape invalid characters.</span></span></param>
        <summary><span data-ttu-id="6922d-192">Zamienia nieprawidłowe znaki XML w ciągu przy użyciu ich prawidłowe odpowiednika XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span></span></summary>
        <returns><span data-ttu-id="6922d-193">Ciąg wejściowy przy użyciu nieprawidłowych znaków.</span><span class="sxs-lookup"><span data-stu-id="6922d-193">The input string with invalid characters replaced.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-194">Ta metoda umożliwia zamienić nieprawidłowe znaki w ciągu przed rozpoczęciem korzystania z ciągów w <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="6922d-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="6922d-195">Jeśli używane są nieprawidłowe znaki w <xref:System.Security.SecurityElement> bez są poprzedzone znakiem zmiany znaczenia, <xref:System.ArgumentException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="6922d-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="6922d-196">W poniższej tabeli przedstawiono nieprawidłowych znaków XML i ich odpowiedniki o zmienionym znaczeniu.</span><span class="sxs-lookup"><span data-stu-id="6922d-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="6922d-197">Nieprawidłowy znak XML</span><span class="sxs-lookup"><span data-stu-id="6922d-197">Invalid XML character</span></span> | <span data-ttu-id="6922d-198">Zastąpione</span><span class="sxs-lookup"><span data-stu-id="6922d-198">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="6922d-199">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Escape%2A> metodę, aby zastąpić nieprawidłowy kod XML znaków w ciągu przy użyciu ich prawidłowe odpowiednika XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-199">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="6922d-200">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-200">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="6922d-201">Ciąg kodowany w formacie XML służący do utworzenia elementu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="6922d-201">The XML-encoded string from which to create the security element.</span></span></param>
        <summary><span data-ttu-id="6922d-202">Tworzy element zabezpieczeń na podstawie ciąg kodowany w formacie XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-202">Creates a security element from an XML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="6922d-203">A <see cref="T:System.Security.SecurityElement" /> utworzone na podstawie pliku XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-203">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-204">Nie należy używać pojedynczego cudzysłowu w ciągu XML; Zamiast tego należy użyć o zmienionym znaczeniu podwójne znaki cudzysłowu.</span><span class="sxs-lookup"><span data-stu-id="6922d-204">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="6922d-205">Na przykład, zamiast z "`<value name='Company'>Microsoft</value>"` Użyj"`<value name=\"Company\">Microsoft</value>"`.</span><span class="sxs-lookup"><span data-stu-id="6922d-205">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="6922d-206">Przy użyciu znaków apostrofu może spowodować w obu rzuceniem wyjątku lub w niektórych przypadkach, w pojedynczym cudzysłowie są traktowane jako tekst w ciągu.</span><span class="sxs-lookup"><span data-stu-id="6922d-206">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException"><span data-ttu-id="6922d-207"><paramref name="xml" /> zawiera co najmniej jeden znak pojedynczego cudzysłowu.</span><span class="sxs-lookup"><span data-stu-id="6922d-207"><paramref name="xml" /> contains one or more single quotation mark characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6922d-208"><paramref name="xml" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-208"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6922d-209">Nazwa atrybutu, aby sprawdzić poprawność.</span><span class="sxs-lookup"><span data-stu-id="6922d-209">The attribute name to test for validity.</span></span></param>
        <summary><span data-ttu-id="6922d-210">Określa, czy ciąg ma prawidłową nazwę atrybutu.</span><span class="sxs-lookup"><span data-stu-id="6922d-210">Determines whether a string is a valid attribute name.</span></span></summary>
        <returns><span data-ttu-id="6922d-211"><see langword="true" /> Jeśli <paramref name="name" /> parametr jest prawidłowy atrybut XML; w przeciwnym razie nazwa <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-211"><see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-212">Ta metoda może służyć do testowania atrybut przed dodaniem go do elementu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="6922d-212">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-213">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.IsValidAttributeName%2A> metodę, aby określić, czy ciąg jest prawidłową nazwę atrybutu.</span><span class="sxs-lookup"><span data-stu-id="6922d-213">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="6922d-214">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-214">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6922d-215">Wartość atrybutu, aby sprawdzić poprawność.</span><span class="sxs-lookup"><span data-stu-id="6922d-215">The attribute value to test for validity.</span></span></param>
        <summary><span data-ttu-id="6922d-216">Określa, czy ciąg jest wartością atrybutu prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="6922d-216">Determines whether a string is a valid attribute value.</span></span></summary>
        <returns><span data-ttu-id="6922d-217"><see langword="true" /> Jeśli <paramref name="value" /> parametru jest prawidłową wartością atrybutu XML; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-217"><see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-218">Ta metoda może służyć do testowania atrybut przed dodaniem go do elementu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="6922d-218">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-219">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> metodę, aby określić, czy ciąg jest wartością atrybutu prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="6922d-219">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="6922d-220">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-220">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="6922d-221">Tag, aby sprawdzić poprawność.</span><span class="sxs-lookup"><span data-stu-id="6922d-221">The tag to test for validity.</span></span></param>
        <summary><span data-ttu-id="6922d-222">Określa, czy ciąg jest poprawny tag.</span><span class="sxs-lookup"><span data-stu-id="6922d-222">Determines whether a string is a valid tag.</span></span></summary>
        <returns><span data-ttu-id="6922d-223"><see langword="true" /> Jeśli <paramref name="tag" /> parametr jest prawidłowy tag XML; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-223"><see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-224">To może służyć do testowania <xref:System.Security.SecurityElement.Tag%2A> przed ustawieniem dla niego.</span><span class="sxs-lookup"><span data-stu-id="6922d-224">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-225">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.IsValidTag%2A> metodę, aby ustalić, czy ciąg znacznika prawidłowego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="6922d-225">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="6922d-226">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-226">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="6922d-227">Tekst, aby sprawdzić poprawność.</span><span class="sxs-lookup"><span data-stu-id="6922d-227">The text to test for validity.</span></span></param>
        <summary><span data-ttu-id="6922d-228">Określa, czy ciąg jest prawidłowy jako tekst w obrębie elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-228">Determines whether a string is valid as text within an XML element.</span></span></summary>
        <returns><span data-ttu-id="6922d-229"><see langword="true" /> Jeśli <paramref name="text" /> parametr jest prawidłowy element tekstowy XML; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-229"><see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-230">Ta metoda może służyć do testowania <xref:System.Security.SecurityElement.Text%2A> przed ustawieniem dla niego.</span><span class="sxs-lookup"><span data-stu-id="6922d-230">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-231">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.IsValidText%2A> metodę pozwala ustalić, czy ciąg jest prawidłowy jako tekst — element XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-231">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="6922d-232">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-232">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="6922d-233">Tag do wyszukania w elementy podrzędne.</span><span class="sxs-lookup"><span data-stu-id="6922d-233">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="6922d-234">Umożliwia znalezienie elementem podrzędnym, za pomocą nazwy tagu.</span><span class="sxs-lookup"><span data-stu-id="6922d-234">Finds a child by its tag name.</span></span></summary>
        <returns><span data-ttu-id="6922d-235">Pierwszy element podrzędny w XML, z wartością określonego tagu lub <see langword="null" /> Jeśli nie elementu podrzędnego z <paramref name="tag" /> istnieje.</span><span class="sxs-lookup"><span data-stu-id="6922d-235">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-236">Za pomocą XML w następujący sposób `SearchForChildByTag("second")` zwróci element podrzędny `<second>`.</span><span class="sxs-lookup"><span data-stu-id="6922d-236">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6922d-237">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.SearchForChildByTag%2A> metody do znalezienia elementu podrzędnego za pomocą nazwy tagu.</span><span class="sxs-lookup"><span data-stu-id="6922d-237">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="6922d-238">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-238">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6922d-239"><paramref name="tag" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-239">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="6922d-240">Tag do wyszukania w elementy podrzędne.</span><span class="sxs-lookup"><span data-stu-id="6922d-240">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="6922d-241">Znajduje element podrzędny za pomocą nazwy tagu i zwraca zawarty tekst.</span><span class="sxs-lookup"><span data-stu-id="6922d-241">Finds a child by its tag name and returns the contained text.</span></span></summary>
        <returns><span data-ttu-id="6922d-242">Zawartość tekstowa pierwszy element podrzędny z wartością określonego tagu.</span><span class="sxs-lookup"><span data-stu-id="6922d-242">The text contents of the first child element with the specified tag value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-243">Ta metoda jest równoważna dla następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="6922d-243">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="6922d-244">Za pomocą XML w następujący sposób `SearchForTextOfTag("second")` zwróci "Tekst2".</span><span class="sxs-lookup"><span data-stu-id="6922d-244">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6922d-245">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> metodę, aby znaleźć element podrzędny, jego nazwa tagu i zwracają zawarty tekst.</span><span class="sxs-lookup"><span data-stu-id="6922d-245">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="6922d-246">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-246">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6922d-247"><paramref name="tag" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-247"><paramref name="tag" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6922d-248">Pobiera lub ustawia nazwę tagu elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-248">Gets or sets the tag name of an XML element.</span></span></summary>
        <value><span data-ttu-id="6922d-249">Nazwa tagu XML element.</span><span class="sxs-lookup"><span data-stu-id="6922d-249">The tag name of an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-250">W pliku XML tagu pojawia się w skrypcie, jak pojawiają się poniżej:</span><span class="sxs-lookup"><span data-stu-id="6922d-250">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="6922d-251">Jeśli ten element ma elementy podrzędne, elementy podrzędne spowoduje zastąpienie `text`.</span><span class="sxs-lookup"><span data-stu-id="6922d-251">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="6922d-252">Przypisz tylko prawidłowe ciągi tagu XML do tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="6922d-252">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="6922d-253">Użyj <xref:System.Security.SecurityElement.Escape%2A> do usunięcia nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="6922d-253">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-254">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Tag%2A> właściwości, aby uzyskać nazwę tagu elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-254">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="6922d-255">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-255">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6922d-256">Tag jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6922d-256">The tag is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6922d-257">Tag jest nieprawidłowy w formacie XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-257">The tag is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6922d-258">Pobiera lub ustawia tekst w obrębie elementu XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-258">Gets or sets the text within an XML element.</span></span></summary>
        <value><span data-ttu-id="6922d-259">Wartość tekstu w elemencie XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-259">The value of the text within an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-260">Tekst nie może zawierać znaków specjalnych XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-260">The text should not contain XML special characters.</span></span> <span data-ttu-id="6922d-261">Użyj <xref:System.Security.SecurityElement.Escape%2A> do usunięcia nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="6922d-261">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="6922d-262">Jeśli <xref:System.Security.SecurityElement> zawiera zarówno <xref:System.Security.SecurityElement.Text%2A> i <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> będą wyświetlane na początku.</span><span class="sxs-lookup"><span data-stu-id="6922d-262">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6922d-263">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Text%2A> właściwości do uzyskania tekstu XML element.</span><span class="sxs-lookup"><span data-stu-id="6922d-263">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="6922d-264">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="6922d-264">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6922d-265">Tekst nie jest prawidłowy w formacie XML.</span><span class="sxs-lookup"><span data-stu-id="6922d-265">The text is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6922d-266">Tworzy ciąg reprezentujący XML element i jej składowe atrybutów, elementy podrzędne i tekst.</span><span class="sxs-lookup"><span data-stu-id="6922d-266">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span></span></summary>
        <returns><span data-ttu-id="6922d-267">XML element i jego zawartość.</span><span class="sxs-lookup"><span data-stu-id="6922d-267">The XML element and its contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6922d-268">Ta metoda jest przydatna podczas debugowania, aby wyświetlić reprezentację XML element.</span><span class="sxs-lookup"><span data-stu-id="6922d-268">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>