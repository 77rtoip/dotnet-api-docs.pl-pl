<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="818d504196f12b9c0fb2d709edba0ae29cba89d4" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e8377-101">Reprezentuje model obiektów XML do kodowania obiektów zabezpieczeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8377-101">Represents the XML object model for encoding security objects.</span>
      </span>
      <span data-ttu-id="e8377-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8377-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-103">Ta klasa ma być lekkie wykonania prostego modelu obiektu XML do użycia w ramach systemu zabezpieczeń, a nie do użytku jako ogólne modelu obiektu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="e8377-104">W tej dokumentacji przyjęto założenie, podstawową wiedzę na temat języka XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="e8377-105">Prosty model obiektów XML dla elementu składa się z następujących elementów:</span><span class="sxs-lookup"><span data-stu-id="e8377-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="e8377-106">Tag jest nazwa elementu.</span><span class="sxs-lookup"><span data-stu-id="e8377-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="e8377-107">Atrybuty są zero lub więcej pary atrybutów nazwa/wartość w elemencie.</span><span class="sxs-lookup"><span data-stu-id="e8377-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="e8377-108">Elementy podrzędne są zero lub więcej elementów zagnieżdżone w obrębie `<tag>` i `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="e8377-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="e8377-109">Zaleca się, że atrybut w reprezentacji XML jest używany do express elementy zabezpieczeń i ich wartości.</span><span class="sxs-lookup"><span data-stu-id="e8377-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="e8377-110">Oznacza to, właściwości elementu są wyrażane jako atrybuty i wartości właściwości są wyrażane jako wartości atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e8377-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="e8377-111">Unikaj zagnieżdżenia tekst w tagach.</span><span class="sxs-lookup"><span data-stu-id="e8377-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="e8377-112">Dla każdego `<tag>text</tag>` reprezentacja a reprezentacja typu `<tag value="text"/>` jest zazwyczaj dostępna.</span><span class="sxs-lookup"><span data-stu-id="e8377-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="e8377-113">Za pomocą tego reprezentacji XML na podstawie atrybutów zwiększa czytelność i umożliwia łatwe przenośność WMI wynikowy serializacji XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="e8377-114">Nazwa atrybutu musi być jednym znaku lub dłużej, a nie może być `null`.</span><span class="sxs-lookup"><span data-stu-id="e8377-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="e8377-115">Jeśli używana jest reprezentacja elementu na podstawie wartości, elementy z tekstem ciąg znaków `null` są reprezentowane w `<tag/>` tworzą; w przeciwnym razie tekst rozdzielone `<tag>` i `</tag>` tokenów.</span><span class="sxs-lookup"><span data-stu-id="e8377-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="e8377-116">Zarówno formularzy można łączyć z atrybutów, które są wyświetlane jeśli jest obecny.</span><span class="sxs-lookup"><span data-stu-id="e8377-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="e8377-117">Tagi, atrybuty i tekst elementy, jeśli jest obecny, zawsze jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="e8377-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="e8377-118">W formacie XML zawiera oferty i specjalne w miarę potrzeby.</span><span class="sxs-lookup"><span data-stu-id="e8377-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="e8377-119">Wartości ciągu, które zawierają znaki nieprawidłowy do użycia w kodzie XML wyniku w <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="e8377-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="e8377-120">Te reguły dotyczą wszystkich właściwości i metod.</span><span class="sxs-lookup"><span data-stu-id="e8377-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8377-121">Ze względu na wydajność ważności znak tylko są sprawdzane, gdy element jest zakodowany w postaci tekstu XML, a nie na każdy zestaw właściwości lub metody.</span><span class="sxs-lookup"><span data-stu-id="e8377-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="e8377-122">Metody statyczne Zezwalaj jawne sprawdzanie w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="e8377-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-123">W poniższym przykładzie przedstawiono użycie członkami <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8377-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.SecurityElement" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="e8377-125">Nazwa tagu elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-125">The tag name of an XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.SecurityElement" /> klasy z określonego tagu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-127">`tag` Parametru może składać się z prawidłową nazwą tagu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="e8377-128">Użyj <xref:System.Security.SecurityElement.Escape%2A> usunięcie nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e8377-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-129">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.%23ctor%2A> konstruktora, aby utworzyć nową <xref:System.Security.SecurityElement> obiektu.</span><span class="sxs-lookup"><span data-stu-id="e8377-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="e8377-130">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8377-131">
            <paramref name="tag" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8377-132">
            <paramref name="tag" /> Parametr jest nieprawidłowy w kodzie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="e8377-133">Nazwa tagu elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-133">The tag name of the XML element.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="e8377-134">Zawartość tekstu w elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-134">The text content within the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.SecurityElement" /> z określonego tagu i tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-136">Jeśli `text` parametr jest `null` ten konstruktor tworzy element taki sam jak konstruktora domyślnego.</span><span class="sxs-lookup"><span data-stu-id="e8377-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8377-137">
            <paramref name="tag" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8377-138">
            <paramref name="tag" /> Parametru lub <paramref name="text" /> parametr jest nieprawidłowy w kodzie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e8377-139">Nazwa atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-139">The name of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e8377-140">Wartość atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-140">The value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-141">Dodaje atrybut nazwy i wartości do elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-141">Adds a name/value attribute to an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-142">Nazwy i wartości atrybutów powinna zawierać tylko prawidłowe znaki atrybutu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="e8377-143">Nazwy atrybutów XML musi być unikatowa.</span><span class="sxs-lookup"><span data-stu-id="e8377-143">XML attribute names must be unique.</span></span> <span data-ttu-id="e8377-144">Użyj <xref:System.Security.SecurityElement.Escape%2A> usunięcie nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e8377-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="e8377-145">Nie jest obsługiwane dla ciągów ujętego w cudzysłów, dlatego ciągów dla pary nazwa/wartość nie powinna zawierać cudzysłowów lub inne znaki wymagające zamykający.</span><span class="sxs-lookup"><span data-stu-id="e8377-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-146">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.AddAttribute%2A> metodę, aby dodać atrybut nazwy i wartości do elementu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="e8377-147">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8377-148">
            <paramref name="name" /> Parametru lub <paramref name="value" /> parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8377-149">
            <paramref name="name" /> Parametru lub <paramref name="value" /> parametr jest nieprawidłowy w kodzie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          </span>
          <span data-ttu-id="e8377-150">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-150">-or-</span>
          </span>
          <span data-ttu-id="e8377-151">Atrybut o nazwie określonej przez <paramref name="name" /> parametr już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="e8377-152">Aby dodać element podrzędny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-152">The child element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-153">Dodaje element podrzędny elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-153">Adds a child element to the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-154">Element podrzędny jest dodawany po żadnych istniejących elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="e8377-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-155">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.AddChild%2A> metody w celu dodania elementu podrzędnego do elementu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="e8377-156">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8377-157">
            <paramref name="child" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-157">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e8377-158">Nazwa atrybutu, który chcesz wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-158">The name of the attribute for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-159">Wyszukuje atrybut według nazwy w elemencie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-159">Finds an attribute by name in an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-160">Wartość skojarzoną z nazwanego atrybutu lub <see langword="null" /> Jeśli atrybutu z <paramref name="name" /> istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-161">Za pomocą XML w następujący sposób `Attribute("B")` zwróci "456".</span><span class="sxs-lookup"><span data-stu-id="e8377-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e8377-162">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Attribute%2A> metody do znalezienia atrybutu według nazwy.</span><span class="sxs-lookup"><span data-stu-id="e8377-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="e8377-163">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8377-164">
            <paramref name="name" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-164">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8377-165">Pobiera lub ustawia atrybuty elementu XML jako pary nazwa/wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-165">Gets or sets the attributes of an XML element as name/value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8377-166">
            <see cref="T:System.Collections.Hashtable" /> Obiektu dla wartości atrybutu elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-167">Każdy atrybut jest przechowywany w <xref:System.Collections.Hashtable> jako pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="e8377-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="e8377-168">Nazwy i wartości atrybutów powinna zawierać tylko prawidłowe znaki atrybutu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="e8377-169">Użyj <xref:System.Security.SecurityElement.Escape%2A> usunięcie nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e8377-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="e8377-170">Nie jest obsługiwane dla ciągów ujętego w cudzysłów, dlatego ciągów dla pary nazwa/wartość nie powinna zawierać cudzysłowów lub inne znaki wymagające zamykający.</span><span class="sxs-lookup"><span data-stu-id="e8377-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-171">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Attributes%2A> właściwości można pobrać atrybutu elementu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="e8377-172">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e8377-173">Nazwa lub wartość <see cref="T:System.Collections.Hashtable" /> obiektu jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8377-174">Nazwa nie jest prawidłową nazwą atrybutu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-174">The name is not a valid XML attribute name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8377-175">Pobiera lub ustawia tablicę elementów podrzędnych elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-175">Gets or sets the array of child elements of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8377-176">Elementy podrzędne uporządkowanej elementu XML jako elementy zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-176">The ordered child elements of the XML element as security elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-177">Jeśli <xref:System.Security.SecurityElement> zawiera oba <xref:System.Security.SecurityElement.Text%2A> i <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> będą występować jako pierwszy.</span><span class="sxs-lookup"><span data-stu-id="e8377-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-178">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Children%2A> właściwości do pobrania tablicy elementów podrzędnych elementu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="e8377-179">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8377-180">Jest elementem podrzędnym węzła nadrzędnego XML <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-180">A child of the XML parent node is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8377-181">Tworzy i zwraca identyczne kopię bieżącego <see cref="T:System.Security.SecurityElement" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-182">Kopię bieżącego <see cref="T:System.Security.SecurityElement" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-183">Kopia obejmuje zarówno <xref:System.Security.SecurityElement.Children%2A> i <xref:System.Security.SecurityElement.Attributes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e8377-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="e8377-184">Obiektu elementu XML, do których należy porównywać bieżący obiekt elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-184">An XML element object to which to compare the current XML element object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-185">Porównuje dwa obiekty — element XML pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-185">Compares two XML element objects for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-186">
            <see langword="true" /> Jeśli znacznik, nazw atrybutów i wartości, elementy podrzędne i pól tekstowych w bieżącym elemencie XML są takie same jak ich odpowiedniki w <paramref name="other" /> parametru; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-186">
              <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-187">Jeśli istnieją elementy podrzędne, porównanie rozszerza rekursywnie do nich.</span><span class="sxs-lookup"><span data-stu-id="e8377-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="e8377-188">Nie jest obsługiwane dla porównanie różnych reprezentacji XML znaków.</span><span class="sxs-lookup"><span data-stu-id="e8377-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-189">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Equal%2A> metodę, aby porównać dwóch elementów XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="e8377-190">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e8377-191">Ciąg, w jakim nieprawidłowe znaki ucieczki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-191">The string within which to escape invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-192">Zamienia nieprawidłowych znaków XML w ciągu z ich prawidłowe równoważnymi XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-193">Ciąg wejściowy nieprawidłowych znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-193">The input string with invalid characters replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-194">Ta metoda umożliwia zamienić nieprawidłowe znaki w ciągu przed użyciem ciągu w <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="e8377-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="e8377-195">Jeśli używane są nieprawidłowe znaki w <xref:System.Security.SecurityElement> bez znaki ucieczki, <xref:System.ArgumentException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="e8377-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="e8377-196">W poniższej tabeli przedstawiono nieprawidłowych znaków XML i ich odpowiedniki zmienionym znaczeniu.</span><span class="sxs-lookup"><span data-stu-id="e8377-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="e8377-197">Nieprawidłowy znak XML</span><span class="sxs-lookup"><span data-stu-id="e8377-197">Invalid XML character</span></span> | <span data-ttu-id="e8377-198">Zastąpiony</span><span class="sxs-lookup"><span data-stu-id="e8377-198">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="e8377-199">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Escape%2A> metodę, aby zastąpić nieprawidłowy kod XML znaków w ciągu z ich prawidłowe równoważnymi XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-199">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="e8377-200">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-200">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="e8377-201">Ciąg kodowany w formacie XML z którego można utworzyć elementu zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-201">The XML-encoded string from which to create the security element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-202">Tworzy element zabezpieczeń z ciąg kodowany w formacie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-202">Creates a security element from an XML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-203">A <see cref="T:System.Security.SecurityElement" /> utworzone na podstawie pliku XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-203">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-204">Nie należy używać pojedynczego cudzysłowu w ciągu XML; Zamiast tego użyj wyjściowym podwójnych cudzysłowów prostych.</span><span class="sxs-lookup"><span data-stu-id="e8377-204">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="e8377-205">Na przykład zamiast elementu "`<value name='Company'>Microsoft</value>"` Użyj"`<value name=\"Company\">Microsoft</value>"`.</span><span class="sxs-lookup"><span data-stu-id="e8377-205">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="e8377-206">Użycie apostrofu może spowodować w Wystąpił wyjątek został zgłoszony lub, w niektórych przypadkach pojedynczy znaki cudzysłowu są traktowane jako tekst w ciągu.</span><span class="sxs-lookup"><span data-stu-id="e8377-206">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException">
          <span data-ttu-id="e8377-207">
            <paramref name="xml" /> zawiera co najmniej jeden znak pojedynczego cudzysłowu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-207">
              <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8377-208">
            <paramref name="xml" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-208">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e8377-209">Nazwa atrybutu, aby sprawdzić poprawność.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-209">The attribute name to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-210">Określa, czy ciąg jest prawidłową nazwą atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-210">Determines whether a string is a valid attribute name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-211">
            <see langword="true" /> Jeśli <paramref name="name" /> parametr jest prawidłowy atrybut XML nazwa; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-211">
              <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-212">Ta metoda może służyć do testowania atrybutu przed dodaniem go do elementu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="e8377-212">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-213">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.IsValidAttributeName%2A> metodę, aby określić, czy ciąg jest prawidłową nazwą atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e8377-213">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="e8377-214">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-214">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e8377-215">Wartość atrybutu do sprawdzenia poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-215">The attribute value to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-216">Określa, czy ciąg ma wartość nieprawidłowy atrybut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-216">Determines whether a string is a valid attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-217">
            <see langword="true" /> Jeśli <paramref name="value" /> parametru jest prawidłową wartością atrybutu XML; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-217">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-218">Ta metoda może służyć do testowania atrybutu przed dodaniem go do elementu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="e8377-218">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-219">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> metodę, aby określić, czy ciąg jest prawidłowym atrybutem wartości.</span><span class="sxs-lookup"><span data-stu-id="e8377-219">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="e8377-220">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-220">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="e8377-221">Tag, aby sprawdzić poprawność.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-221">The tag to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-222">Określa, czy ciąg jest poprawny tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-222">Determines whether a string is a valid tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-223">
            <see langword="true" /> Jeśli <paramref name="tag" /> parametr jest nieprawidłowy tag XML; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-223">
              <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-224">To może służyć do testowania <xref:System.Security.SecurityElement.Tag%2A> przed ustawieniem dla niego.</span><span class="sxs-lookup"><span data-stu-id="e8377-224">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-225">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.IsValidTag%2A> metodę, aby określić, czy ciąg jest prawidłowym atrybutem tag.</span><span class="sxs-lookup"><span data-stu-id="e8377-225">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="e8377-226">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-226">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="e8377-227">Tekst, aby sprawdzić poprawność.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-227">The text to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-228">Określa, czy ciąg jest prawidłowy jako tekst w obrębie elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-228">Determines whether a string is valid as text within an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-229">
            <see langword="true" /> Jeśli <paramref name="text" /> parametr jest prawidłowy element tekstowy XML; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-229">
              <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-230">Ta metoda może służyć do testowania <xref:System.Security.SecurityElement.Text%2A> przed ustawieniem dla niego.</span><span class="sxs-lookup"><span data-stu-id="e8377-230">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-231">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.IsValidText%2A> metodę, aby określić, czy ciąg jest prawidłowy jako tekst elementu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-231">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="e8377-232">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-232">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="e8377-233">Tag do wyszukania w elementach podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-233">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-234">Wyszukuje element podrzędny za pomocą nazwy tagu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-234">Finds a child by its tag name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-235">Pierwszym elementem podrzędnym XML z wartością określonego tagu lub <see langword="null" /> Jeśli żaden element podrzędny o <paramref name="tag" /> istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-235">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-236">Za pomocą XML w następujący sposób `SearchForChildByTag("second")` zwróci element podrzędny `<second>`.</span><span class="sxs-lookup"><span data-stu-id="e8377-236">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e8377-237">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.SearchForChildByTag%2A> metody do znalezienia elementu podrzędnego za pomocą nazwy tagu.</span><span class="sxs-lookup"><span data-stu-id="e8377-237">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="e8377-238">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-238">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8377-239">
            <paramref name="tag" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-239">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="e8377-240">Tag do wyszukania w elementach podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-240">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8377-241">Znajduje podrzędnej przy użyciu nazwy tagu i zwraca zawartych w niej tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-241">Finds a child by its tag name and returns the contained text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-242">Zawartość tekstowa pierwszy element podrzędny o wartości określonego tagu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-242">The text contents of the first child element with the specified tag value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-243">Ta metoda jest odpowiednikiem następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="e8377-243">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="e8377-244">Za pomocą XML w następujący sposób `SearchForTextOfTag("second")` zwróci "Tekst2".</span><span class="sxs-lookup"><span data-stu-id="e8377-244">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e8377-245">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> metody można znaleźć elementu podrzędnego za pomocą nazwy tagu i zwracanie zawartych w niej tekstu.</span><span class="sxs-lookup"><span data-stu-id="e8377-245">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="e8377-246">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-246">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8377-247">
            <paramref name="tag" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-247">
              <paramref name="tag" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8377-248">Pobiera lub ustawia nazwę tagu elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-248">Gets or sets the tag name of an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8377-249">Nazwa tagu elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-249">The tag name of an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-250">W kodzie XML znaczniki pojawia się skrypt pojawia się poniżej:</span><span class="sxs-lookup"><span data-stu-id="e8377-250">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="e8377-251">Jeśli ten element ma elementy podrzędne, spowoduje zastąpienie dzieci `text`.</span><span class="sxs-lookup"><span data-stu-id="e8377-251">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="e8377-252">Tylko prawidłowe ciągi tagu XML można przypisać do tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="e8377-252">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="e8377-253">Użyj <xref:System.Security.SecurityElement.Escape%2A> usunięcie nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e8377-253">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-254">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Tag%2A> właściwości można uzyskać nazwy tagu elementu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-254">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="e8377-255">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-255">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8377-256">Tag jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-256">The tag is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8377-257">Tag nie jest nieprawidłowe w kodzie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-257">The tag is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8377-258">Pobiera lub ustawia tekst wewnątrz elementu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-258">Gets or sets the text within an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8377-259">Wartość tekstu w elemencie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-259">The value of the text within an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-260">Tekst nie powinna zawierać znaków specjalnych XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-260">The text should not contain XML special characters.</span></span> <span data-ttu-id="e8377-261">Użyj <xref:System.Security.SecurityElement.Escape%2A> usunięcie nieprawidłowych znaków z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e8377-261">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="e8377-262">Jeśli <xref:System.Security.SecurityElement> zawiera oba <xref:System.Security.SecurityElement.Text%2A> i <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> będą występować jako pierwszy.</span><span class="sxs-lookup"><span data-stu-id="e8377-262">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8377-263">Poniższy kod przedstawia użycie <xref:System.Security.SecurityElement.Text%2A> właściwości, aby uzyskać tekst elementu XML.</span><span class="sxs-lookup"><span data-stu-id="e8377-263">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="e8377-264">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.SecurityElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8377-264">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8377-265">Tekst nie jest nieprawidłowe w kodzie XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-265">The text is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8377-266">Generuje reprezentację ciągu XML element i jego składników atrybutów, elementy podrzędne i tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-266">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8377-267">XML element i jego zawartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8377-267">The XML element and its contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8377-268">Ta metoda jest przydatna w debugowanie, aby wyświetlić reprezentację XML elementu.</span><span class="sxs-lookup"><span data-stu-id="e8377-268">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>