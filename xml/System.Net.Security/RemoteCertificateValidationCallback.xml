<Type Name="RemoteCertificateValidationCallback" FullName="System.Net.Security.RemoteCertificateValidationCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31de646394db881ef6a77fd0713da4c1312f3d98" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69112737" /></Metadata><TypeSignature Language="C#" Value="public delegate bool RemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RemoteCertificateValidationCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.RemoteCertificateValidationCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function RemoteCertificateValidationCallback(sender As Object, certificate As X509Certificate, chain As X509Chain, sslPolicyErrors As SslPolicyErrors) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool RemoteCertificateValidationCallback(System::Object ^ sender, X509Certificate ^ certificate, X509Chain ^ chain, SslPolicyErrors sslPolicyErrors);" />
  <TypeSignature Language="F#" Value="type RemoteCertificateValidationCallback = delegate of obj * X509Certificate * X509Chain * SslPolicyErrors -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    <Parameter Name="chain" Type="System.Security.Cryptography.X509Certificates.X509Chain" />
    <Parameter Name="sslPolicyErrors" Type="System.Net.Security.SslPolicyErrors" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Obiekt, który zawiera informacje o stanie dla tej walidacji.</param>
    <param name="certificate">Certyfikat używany do uwierzytelniania strony zdalnej.</param>
    <param name="chain">Łańcuch urzędów certyfikacji skojarzonych z certyfikatem zdalnym.</param>
    <param name="sslPolicyErrors">Wystąpił co najmniej jeden błąd związany z certyfikatem zdalnym.</param>
    <summary>Weryfikuje certyfikat zdalnego SSL (SSL) używany do uwierzytelniania.</summary>
    <returns><see cref="T:System.Boolean" /> Wartość określająca, czy określony certyfikat jest akceptowany na potrzeby uwierzytelniania.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sslPolicyErrors` Argument delegata zawiera wszystkie błędy certyfikatów zwrócone przez interfejs SSPI podczas uwierzytelniania klienta lub serwera. <xref:System.Boolean> Wartość zwracana przez metodę wywoływaną przez tego delegata określa, czy uwierzytelnianie może się powieść.  
  
 Ten delegat jest używany z <xref:System.Net.Security.SslStream> klasą.  
  
   
  
## Examples  
 Poniższy przykład kodu implementuje metodę, która jest wywoływana przez wystąpienie <xref:System.Net.Security.RemoteCertificateValidationCallback> klasy. Jeśli występują błędy walidacji, ta metoda wyświetla je i zwraca `false`, co uniemożliwia komunikację z nieuwierzytelnionym serwerem.  
  
 [!code-cpp[NCLSslClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#1)]
 [!code-csharp[NCLSslClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#1)]  
  
 Poniższy przykład kodu tworzy delegata przy użyciu metody zdefiniowanej w poprzednim przykładzie kodu.  
  
 [!code-cpp[NCLSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NCLSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.LocalCertificateSelectionCallback" />
  </Docs>
</Type>
