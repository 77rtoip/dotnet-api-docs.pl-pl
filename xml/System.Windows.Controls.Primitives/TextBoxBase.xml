<Type Name="TextBoxBase" FullName="System.Windows.Controls.Primitives.TextBoxBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1c4ee84f5cabf1ba2ff1b5d254d7ca60837fd29" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65016688" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract TextBoxBase extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Controls::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentHost", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="87353-101">Abstrakcyjna klasa bazowa dostarczająca funkcje dla kontrolek, w tym edycji tekstu <see cref="T:System.Windows.Controls.TextBox" /> i <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="87353-101">An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-102">Poniższy przykład pokazuje sposób użycia pochodnej <xref:System.Windows.Controls.TextBox> obiektu [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="87353-102">The following example demonstrates how to use the derived <xref:System.Windows.Controls.TextBox> object in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 <span data-ttu-id="87353-103">Poniższy przykład pokazuje sposób użycia pochodnej <xref:System.Windows.Controls.RichTextBox> obiektu w kodzie.</span><span class="sxs-lookup"><span data-stu-id="87353-103">The following example demonstrates how to use the derived <xref:System.Windows.Controls.RichTextBox> object in code.</span></span>  
  
 [!code-csharp[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_richtextbox_mouseupdown)]
 [!code-vb[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_richtextbox_mouseupdown)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TextBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-104">Pobiera lub ustawia wartość, która wskazuje, jak kontrolka edycji reaguje, gdy użytkownik naciśnie klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="87353-104">Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</span></span></summary>
        <value><span data-ttu-id="87353-105"><see langword="true" /> Naciśnięcie klawisza ENTER wstawienie nowego wiersza w bieżącym położeniu kursora; w przeciwnym razie jest ignorowana klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="87353-105"><see langword="true" /> if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored.</span></span> <span data-ttu-id="87353-106">Wartość domyślna to <see langword="false" /> dla <see cref="T:System.Windows.Controls.TextBox" /> i <see langword="true" /> dla <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="87353-106">The default value is <see langword="false" /> for <see cref="T:System.Windows.Controls.TextBox" /> and <see langword="true" /> for <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-107">Klawisz ENTER odnosi się do `VK_RETURN` kod klawisza wirtualnego.</span><span class="sxs-lookup"><span data-stu-id="87353-107">The ENTER key corresponds to `VK_RETURN` virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsReturn"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="87353-108">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="87353-108">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-109">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-109">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty>|  
|<span data-ttu-id="87353-110">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="87353-110">Metadata properties set to `true`</span></span>|<span data-ttu-id="87353-111">Brak</span><span class="sxs-lookup"><span data-stu-id="87353-111">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsReturnProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-112">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-112">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-113">Pobiera lub ustawia wartość, która wskazuje, jak kontrolka edycji reaguje, gdy użytkownik naciśnie klawisz TAB.</span><span class="sxs-lookup"><span data-stu-id="87353-113">Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</span></span></summary>
        <value><span data-ttu-id="87353-114"><see langword="true" /> Jeśli naciśnięcie klawisza TAB Wstawia znak tabulacji w bieżącym położeniu kursora; <see langword="false" /> Jeśli naciśnięcie klawisza TAB przenosi fokus do następnego formantu, który jest oznaczony jako tabulatora i wstawia znak tabulacji.</span><span class="sxs-lookup"><span data-stu-id="87353-114"><see langword="true" /> if pressing the TAB key inserts a tab character at the current cursor position; <see langword="false" /> if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.</span></span>  
  
<span data-ttu-id="87353-115">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-115">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-116">Klawisz TAB odnosi się do **VK_TAB** kod klawisza wirtualnego.</span><span class="sxs-lookup"><span data-stu-id="87353-116">The TAB key corresponds to **VK_TAB** virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsTab"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="87353-117">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="87353-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-118">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty>|  
|<span data-ttu-id="87353-119">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="87353-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="87353-120">Brak</span><span class="sxs-lookup"><span data-stu-id="87353-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsTabProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-121">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="87353-122">Ciąg, który określa tekst, który można dołączyć do bieżącej zawartości kontrolki tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-122">A string that specifies the text to append to the current contents of the text control.</span></span></param>
        <summary><span data-ttu-id="87353-123">Dołącza ciąg znaków do zawartości kontrolki tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-123">Appends a string to the contents of a text control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-124"><xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> Metoda umożliwia użytkownikowi dołączyć tekst do zawartości kontrolki tekstu bez korzystania z łączenia tekstu, który może zapewnić lepszą wydajność, gdy wiele konkatenacji są wymagane.</span><span class="sxs-lookup"><span data-stu-id="87353-124">The <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method enables the user to append text to the contents of a text control without using text concatenation, which, can yield better performance when many concatenations are required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87353-125">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="87353-125">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase11)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoWordSelection : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-126">Pobiera lub ustawia wartość określającą, czy po użytkownik wybierze część wyrazu, przeciągając nad nim wskaźnik myszy, pozostała część słowo jest zaznaczone.</span><span class="sxs-lookup"><span data-stu-id="87353-126">Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</span></span></summary>
        <value><span data-ttu-id="87353-127"><see langword="true" /> Jeśli włączono automatyczne zaznaczanie słów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-127"><see langword="true" /> if automatic word selection is enabled; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="87353-128">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-128">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-129">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> jest włączone, za każdym razem, gdy wybrano tę część wyrazu przez użytkownika, przeciągając nad częścią wyrazu za pomocą myszy, wybór jest automatycznie rozwinięta i obejmuje cały wyraz.</span><span class="sxs-lookup"><span data-stu-id="87353-129">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is enabled, every time that part of a word is selected by the user dragging over part of a word using the mouse, the selection is automatically expanded to include the whole word.</span></span> <span data-ttu-id="87353-130">Użytkownik może zastąpić automatyczny wybór całe wyrazy chwilowo odwrócenie kierunku, w którym kursor jest przeciągany zgodnie z wybraniu.</span><span class="sxs-lookup"><span data-stu-id="87353-130">The user can override automatic selection of a whole word by momentarily reversing the direction in which the mouse pointer is being dragged as the selection is made.</span></span> <span data-ttu-id="87353-131">Ta akcja spowoduje cofnięcie automatyczny wybór całe wyrazy i umożliwia użytkownikowi precyzyjny wybór część lub całość wyrazu.</span><span class="sxs-lookup"><span data-stu-id="87353-131">This action undoes the automatic selection of the whole word, and enables the user to precisely select part or all of the word.</span></span>  
  
 <span data-ttu-id="87353-132">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> jest wyłączona, wybór nie jest automatycznie dodawany do obejmują całe wyrazy; w takim przypadku dokładne opcji zawsze są określane ręcznie.</span><span class="sxs-lookup"><span data-stu-id="87353-132">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is disabled, a selection is not automatically expanded to include whole words; in this case, precise selections are always determined manually.</span></span>  
  
 > [!NOTE] 
 > <span data-ttu-id="87353-133">Wybór automatyczny nie ma wpływu na pierwszy wyraz, który użytkownik przeciąga między.</span><span class="sxs-lookup"><span data-stu-id="87353-133">Auto selection does not affect the first word that the user drags across.</span></span> <span data-ttu-id="87353-134">Jest tylko wtedy, gdy jest to pierwszy granicy słowa przekroczeniu wyboru automatycznie staje się skuteczny.</span><span class="sxs-lookup"><span data-stu-id="87353-134">It is only after this first word boundary is crossed that auto selection takes effect.</span></span>  
  
<a name="dependencyPropertyInfo_AutoWordSelection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="87353-135">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="87353-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-136">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-136">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty>|  
|<span data-ttu-id="87353-137">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="87353-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="87353-138">Brak</span><span class="sxs-lookup"><span data-stu-id="87353-138">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoWordSelectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoWordSelectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoWordSelectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoWordSelectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoWordSelectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-139">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-139">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginChange">
      <MemberSignature Language="C#" Value="public void BeginChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginChange();" />
      <MemberSignature Language="F#" Value="member this.BeginChange : unit -&gt; unit" Usage="textBoxBase.BeginChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-140">Rozpoczyna się blokiem zmiany.</span><span class="sxs-lookup"><span data-stu-id="87353-140">Begins a change block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

 > [!NOTE] 
 > <span data-ttu-id="87353-141">Gdy wywołujesz <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, musisz również wywołać <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> aby zakończyć blok zmiany w przeciwnym razie zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="87353-141">When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="87353-142">Blokuj zmiany logicznie grupuje wielu zmian w pojedynczą czynność cofnięcia jednostkę i zapobiega zgłaszanych dopiero po bloku zmiany zdarzenia zmiany zawartości lub zaznaczenie tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-142">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="87353-143">W ten sposób można wprowadzać wiele edycji elementu tekstu bez obawy, element tekstowy zmieniane przez inny odbiornik, w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="87353-143">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another listener.</span></span> <span data-ttu-id="87353-144">Blokuj zmiany jest tworzony przez wywołanie <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="87353-144">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="87353-145">Wywoływanie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> metoda powoduje, że wszystkie kolejne zmiany, które mają zostać uwzględnione w bloku określoną zmianę, aż do odpowiedniego wywołania <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> wykonano metody.</span><span class="sxs-lookup"><span data-stu-id="87353-145">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87353-146">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> i <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> metody tworzenia blok zmiany.</span><span class="sxs-lookup"><span data-stu-id="87353-146">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRedo : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-147">Pobiera wartość wskazującą, czy ostatnio wykonaną akcję cofania można wykonać ponownie.</span><span class="sxs-lookup"><span data-stu-id="87353-147">Gets a value that indicates whether the most recent undo action can be redone.</span></span></summary>
        <value><span data-ttu-id="87353-148"><see langword="true" /> Jeśli ostatnio wykonaną akcję cofania można wykonać ponownie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-148"><see langword="true" /> if the most recent undo action can be redone; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="87353-149">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="87353-149">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-150">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> właściwości w celu określenia, czy ostatnio wykonaną akcję cofania można wykonać ponownie.</span><span class="sxs-lookup"><span data-stu-id="87353-150">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> property to determine whether the most recent undo action can be redone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-151">Pobiera wartość wskazującą, czy ostatnio wykonaną akcję można cofnąć.</span><span class="sxs-lookup"><span data-stu-id="87353-151">Gets a value that indicates whether the most recent action can be undone.</span></span></summary>
        <value><span data-ttu-id="87353-152"><see langword="true" /> Jeśli ostatniej akcji można jej cofnąć. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-152"><see langword="true" /> if the most recent action can be undone; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="87353-153">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="87353-153">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-154">Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> właściwości w celu określenia, czy ostatnio wykonaną akcję można cofnąć.</span><span class="sxs-lookup"><span data-stu-id="87353-154">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> property to determine whether the most recent action can be undone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CaretBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CaretBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CaretBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CaretBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-155">Pobiera lub ustawia pędzel używany do rysowania karetkę pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="87353-155">Gets or sets the brush that is used to paint the caret of the text box.</span></span></summary>
        <value><span data-ttu-id="87353-156">Pędzel używany do rysowania karetkę pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="87353-156">The brush that is used to paint the caret of the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-157">Poniższy przykład tworzy <xref:System.Windows.Controls.TextBox> i dodaje tekst "Jest jakiś tekst".</span><span class="sxs-lookup"><span data-stu-id="87353-157">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="87353-158">Przykład ustawia <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> i <xref:System.Windows.Controls.Control.Foreground%2A> właściwości <xref:System.Windows.Controls.TextBox> na niebieski.</span><span class="sxs-lookup"><span data-stu-id="87353-158">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties of a <xref:System.Windows.Controls.TextBox> to blue.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="87353-159">Poprzedni przykład generuje dane wyjściowe, podobnie jak na poniższej ilustracji.</span><span class="sxs-lookup"><span data-stu-id="87353-159">The preceding example produces output that is like the following illustration.</span></span>  
  
 <span data-ttu-id="87353-160">![Ustaw pole tekstowe z CaretBrush na niebieski. ] (~/add/media/textboxcaretbrush.png "Pole tekstowe z CaretBrush ustawiony na niebieski.")</span><span class="sxs-lookup"><span data-stu-id="87353-160">![TextBox with CaretBrush set to blue.](~/add/media/textboxcaretbrush.png "TextBox with CaretBrush set to blue.")</span></span>  
<span data-ttu-id="87353-161">Pole tekstowe z zestawem CaretBrush na niebieski</span><span class="sxs-lookup"><span data-stu-id="87353-161">TextBox with CaretBrush set to blue</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaretBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaretBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaretBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaretBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CaretBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-162">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-162">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-163">Kopiuje bieżącego zaznaczenia edycji kontrolki tekstu <see cref="T:System.Windows.Clipboard" />.</span><span class="sxs-lookup"><span data-stu-id="87353-163">Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-164">Działanie kopiowania Kopiuje zaznaczony tekst do <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="87353-164">A copy operation copies the selected text to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="87353-165">Należy pamiętać, że zaznaczony tekst nie zostanie usunięty z edycji kontrolki w procesie tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-165">Note that the selected text is not removed from the text editing control in the process.</span></span> <span data-ttu-id="87353-166">Podobnej metody <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, przenosi bieżącego zaznaczenia <xref:System.Windows.Clipboard> i Usuwa zaznaczony tekst z pliku tekstowego edycji kontrolki w procesie.</span><span class="sxs-lookup"><span data-stu-id="87353-166">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, moves the current selection to the <xref:System.Windows.Clipboard> and removes the selected text from the text editing control in the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87353-167">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> metodę, aby skopiować tekst, który wybrano w <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-167">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> method to copy the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase4)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="87353-168">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="87353-168">for full trust for inheritors.</span></span> <span data-ttu-id="87353-169">Ten element członkowski nie może być dziedziczona przez częściowo zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="87353-169">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-170">Usuwa bieżące zaznaczenie w formancie edycji tekstu i kopiuje go do <see cref="T:System.Windows.Clipboard" />.</span><span class="sxs-lookup"><span data-stu-id="87353-170">Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-171">Wytnij operacja usuwa bieżące zaznaczenie w formancie edycji tekstu i kopiuje go do <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="87353-171">A cut operation removes the current selection from the text editing control and copies it to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="87353-172">Należy pamiętać, że zaznaczony tekst został usunięty (obcięty) z edycji kontrolki w procesie tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-172">Note that the selected text is removed (cut) from the text editing control in the process.</span></span> <span data-ttu-id="87353-173">Podobnej metody <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, kopiuje bieżące zaznaczenie do Schowka, ale nie powoduje usunięcia zaznaczonego tekstu w formancie edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-173">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copies the current selection to the Clipboard, but does not remove the selected text from the text editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87353-174">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> metodę, aby usunąć tekst, który wybrano w <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-174">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> method to delete the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase5)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="87353-175">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="87353-175">for full trust for inheritors.</span></span> <span data-ttu-id="87353-176">Ten element członkowski nie może być dziedziczona przez częściowo zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="87353-176">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="DeclareChangeBlock">
      <MemberSignature Language="C#" Value="public IDisposable DeclareChangeBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable DeclareChangeBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
      <MemberSignature Language="VB.NET" Value="Public Function DeclareChangeBlock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ DeclareChangeBlock();" />
      <MemberSignature Language="F#" Value="member this.DeclareChangeBlock : unit -&gt; IDisposable" Usage="textBoxBase.DeclareChangeBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-177">Tworzy blok zmiany.</span><span class="sxs-lookup"><span data-stu-id="87353-177">Creates a change block.</span></span></summary>
        <returns><span data-ttu-id="87353-178"><see cref="T:System.IDisposable" /> Obiekt, który odwołuje się do nowego bloku zmiany.</span><span class="sxs-lookup"><span data-stu-id="87353-178">An <see cref="T:System.IDisposable" /> object that refers to a new change block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-179">Blokuj zmianę grupy logicznie wiele zmian w pojedynczą czynność cofnięcia jednostkę.</span><span class="sxs-lookup"><span data-stu-id="87353-179">A change block logically groups multiple changes into a single undo unit.</span></span> <span data-ttu-id="87353-180">Blokuj zmiany jest tworzony przez wywołanie <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="87353-180">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="87353-181">Wywoływanie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> metoda powoduje, że wszystkie kolejne zmiany, które mają zostać uwzględnione w bloku określoną zmianę, aż do odpowiedniego wywołania <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> wykonano metody.</span><span class="sxs-lookup"><span data-stu-id="87353-181">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="EndChange">
      <MemberSignature Language="C#" Value="public void EndChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndChange();" />
      <MemberSignature Language="F#" Value="member this.EndChange : unit -&gt; unit" Usage="textBoxBase.EndChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-182">Kończy blok zmiany.</span><span class="sxs-lookup"><span data-stu-id="87353-182">Ends a change block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 > [!NOTE] 
 > <span data-ttu-id="87353-183">Gdy wywołujesz <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, musisz również wywołać <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> aby zakończyć blok zmiany w przeciwnym razie zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="87353-183">When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="87353-184">Blokuj zmiany logicznie grupuje wielu zmian w pojedynczą czynność cofnięcia jednostkę i zapobiega zgłaszanych dopiero po bloku zmiany zdarzenia zmiany zawartości lub zaznaczenie tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-184">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="87353-185">W ten sposób można wprowadzać wiele edycji elementu tekstu bez obawy, element tekstowy zmieniane przez inny proces, w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="87353-185">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another process.</span></span> <span data-ttu-id="87353-186">Blokuj zmiany jest tworzony przez wywołanie <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="87353-186">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="87353-187">Wywoływanie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> metoda powoduje, że wszystkie kolejne zmiany, które mają zostać uwzględnione w bloku określoną zmianę, aż do odpowiedniego wywołania <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> wykonano metody.</span><span class="sxs-lookup"><span data-stu-id="87353-187">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87353-188">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> i <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> metody tworzenia blok zmiany.</span><span class="sxs-lookup"><span data-stu-id="87353-188">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtentHeight : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-189">Pobiera pionowy rozmiar obszaru zawartości.</span><span class="sxs-lookup"><span data-stu-id="87353-189">Gets the vertical size of the visible content area.</span></span></summary>
        <value><span data-ttu-id="87353-190">Wartość zmiennoprzecinkową, która określa pionowy rozmiar obszaru zawartości, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="87353-190">A floating-point value that specifies the vertical size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="87353-191">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji tekstu nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="87353-191">The value of this property is 0.0 if the text-editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="87353-192">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="87353-192">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-193">Poniższy przykład pokazuje, jak odczytać wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="87353-193">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtentWidth : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-194">Pobiera rozmiar poziomy obszaru zawartości.</span><span class="sxs-lookup"><span data-stu-id="87353-194">Gets the horizontal size of the visible content area.</span></span></summary>
        <value><span data-ttu-id="87353-195">Wartość zmiennoprzecinkową, która określa poziomy rozmiar obszaru zawartości, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="87353-195">A floating-point value that specifies the horizontal size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="87353-196">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="87353-196">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="87353-197">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="87353-197">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-198">Poniższy przykład pokazuje, jak odczytać wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="87353-198">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-199">Pobiera lub Ustawia położenie przewijania w poziomie.</span><span class="sxs-lookup"><span data-stu-id="87353-199">Gets or sets the horizontal scroll position.</span></span></summary>
        <value><span data-ttu-id="87353-200">Wartość zmiennoprzecinkową, która określa położenie przewijania w poziomie w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="87353-200">A floating-point value that specifies the horizontal scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="87353-201">Ustawienie tej właściwości powoduje, że tekst kontrolki do przewijania do określonej przesunięcie w poziomie do edycji.</span><span class="sxs-lookup"><span data-stu-id="87353-201">Setting this property causes the text editing control to scroll to the specified horizontal offset.</span></span> <span data-ttu-id="87353-202">Czytanie tej właściwości zwraca bieżące przesunięcie w poziomie.</span><span class="sxs-lookup"><span data-stu-id="87353-202">Reading this property returns the current horizontal offset.</span></span>  
  
<span data-ttu-id="87353-203">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="87353-203">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="87353-204">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="87353-204">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-205">Przesunięcie w poziomie jest mierzony od po prawej stronie obszaru tekst wyświetlany, jeśli pracujesz w trybie od prawej do lewej w przeciwnym razie jest mierzony z lewej strony.</span><span class="sxs-lookup"><span data-stu-id="87353-205">The horizontal offset is measured from the right of the visible text area if you are working in right-to-left mode; otherwise, it is measured from the left.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87353-206">Poniższy przykład pokazuje, jak odczytać wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="87353-206">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="87353-207">Aby ustawić tę właściwość na wartość ujemną, podejmowana jest próba.</span><span class="sxs-lookup"><span data-stu-id="87353-207">An attempt is made to set this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-208">Pobiera lub ustawia wartość wskazującą, czy poziomy pasek przewijania jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="87353-208">Gets or sets a value that indicates whether a horizontal scroll bar is shown.</span></span></summary>
        <value><span data-ttu-id="87353-209">Wartość, która jest zdefiniowana przez <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="87353-209">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span></span>  
  
<span data-ttu-id="87353-210">Wartość domyślna to <see cref="F:System.Windows.Visibility.Hidden" />.</span><span class="sxs-lookup"><span data-stu-id="87353-210">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HorizontalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="87353-211">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="87353-211">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-212">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-212">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty>|  
|<span data-ttu-id="87353-213">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="87353-213">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="87353-214">Poniższy przykład pokazuje, jak ustawić wartość <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> właściwości przy użyciu [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="87353-214">The following example demonstrates how to set the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-215">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-215">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabled">
      <MemberSignature Language="C#" Value="public bool IsInactiveSelectionHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInactiveSelectionHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInactiveSelectionHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInactiveSelectionHighlightEnabled : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-216">Pobiera lub ustawia wartość wskazującą, czy pole tekstowe wyświetla zaznaczonego tekstu, gdy pole tekstowe nie ma fokusu.</span><span class="sxs-lookup"><span data-stu-id="87353-216">Gets or sets a value that indicates whether the text box displays selected text when the text box does not have focus.</span></span></summary>
        <value><span data-ttu-id="87353-217"><see langword="true" /> Jeśli zaznaczony tekst jest wyświetlany w polu tekstowym, gdy pole tekstowe nie ma fokusa; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-217"><see langword="true" /> if the text box displays selected text when the text box does not have focus; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="87353-218">Zarejestrowaną wartością domyślną jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-218">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="87353-219">Aby uzyskać więcej informacji o obiektach mogących wpływać wartość, zobacz [następstwo wartości właściwości](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="87353-219">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInactiveSelectionHighlightEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="87353-220">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="87353-220">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-221">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-221">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty>|  
|<span data-ttu-id="87353-222">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="87353-222">Metadata properties set to `true`</span></span>|<span data-ttu-id="87353-223">Brak</span><span class="sxs-lookup"><span data-stu-id="87353-223">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInactiveSelectionHighlightEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInactiveSelectionHighlightEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-224">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-224">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-225">Pobiera lub ustawia wartość wskazującą, czy kontrolka edycji tekstu jest tylko do odczytu dla użytkownika obsługującego daną kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="87353-225">Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</span></span></summary>
        <value><span data-ttu-id="87353-226"><see langword="true" /> Jeśli zawartość formancie edycji tekstu jest tylko do odczytu dla użytkownika; w przeciwnym razie można modyfikować zawartość kontrolki edycji tekstu przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="87353-226"><see langword="true" /> if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user.</span></span> <span data-ttu-id="87353-227">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-227">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-228">Ta wartość dotyczy tylko użytkownik, który prowadzi interakcję z kontrolką.</span><span class="sxs-lookup"><span data-stu-id="87353-228">This value only affects a user who is interacting with the control.</span></span> <span data-ttu-id="87353-229">Zawsze można modyfikować programowo zawartość kontrolki edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-229">The contents of a text editing control can always be modified programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="87353-230">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="87353-230">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-231">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-231">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty>|  
|<span data-ttu-id="87353-232">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="87353-232">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisible">
      <MemberSignature Language="C#" Value="public bool IsReadOnlyCaretVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnlyCaretVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnlyCaretVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnlyCaretVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnlyCaretVisible : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-233">Pobiera lub ustawia wartość wskazującą, czy pola tekstowego tylko do odczytu do wyświetla daszek.</span><span class="sxs-lookup"><span data-stu-id="87353-233">Gets or sets a value that indicates whether a read-only text box displays a caret.</span></span></summary>
        <value><span data-ttu-id="87353-234"><see langword="true" /> Jeśli pole tekstowe tylko do odczytu jest wyświetlany znak daszka; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-234"><see langword="true" /> if a read-only text box displays a caret; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="87353-235">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-235">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-236">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> jest `true`, użytkownik nadal może zaznacz i skopiuj tekst.</span><span class="sxs-lookup"><span data-stu-id="87353-236">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `true`, a user can still select and copy text.</span></span> <span data-ttu-id="87353-237">Jeśli <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> właściwość jest również ustawiona na `true`, daszek pojawi się w polu tekstowym, gdy pole tekstowe ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="87353-237">If the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property is also set to `true`, a caret will appear in the text box when the text box has keyboard focus.</span></span> <span data-ttu-id="87353-238">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> jest `false`, <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> właściwość nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="87353-238">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `false`, the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyCaretVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyCaretVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-239">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-239">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-240">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-240">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActive">
      <MemberSignature Language="C#" Value="public bool IsSelectionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionActive : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-241">Pobiera wartość wskazującą, czy pole ma fokus i zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-241">Gets a value that indicates whether the text box has focus and selected text.</span></span></summary>
        <value><span data-ttu-id="87353-242"><see langword="true" /> Jeśli pole ma fokus i zaznaczonego tekstu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-242"><see langword="true" /> if the text box has focus and selected text; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="87353-243">Zarejestrowaną wartością domyślną jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-243">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="87353-244">Aby uzyskać więcej informacji o obiektach mogących wpływać wartość, zobacz [następstwo wartości właściwości](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="87353-244">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSelectionActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="87353-245">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="87353-245">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-246">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-246">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty>|  
|<span data-ttu-id="87353-247">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="87353-247">Metadata properties set to `true`</span></span>|<span data-ttu-id="87353-248">Brak</span><span class="sxs-lookup"><span data-stu-id="87353-248">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-249">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-249">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabled">
      <MemberSignature Language="C#" Value="public bool IsUndoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUndoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUndoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUndoEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUndoEnabled : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-250">Pobiera lub ustawia wartość wskazującą, czy obsługa polecenia Cofnij jest włączona dla kontrolki edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-250">Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</span></span></summary>
        <value><span data-ttu-id="87353-251"><see langword="true" /> Jeśli jest włączona obsługa polecenia Cofnij; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-251"><see langword="true" /> if undo support is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="87353-252">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="87353-252">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-253">Ustawienie tej właściwości na `false` czyści stos cofania.</span><span class="sxs-lookup"><span data-stu-id="87353-253">Setting this property to `false` clears the undo stack.</span></span> <span data-ttu-id="87353-254">W związku z tym jeśli Wyłącz cofanie, a następnie włączyć ją ponownie, cofnięcie polecenia nadal działa, ponieważ stos cofania został opróżniony po wyłączeniu cofania.</span><span class="sxs-lookup"><span data-stu-id="87353-254">Therefore, if you disable undo and then re-enable it, undo commands still do not work because the undo stack was emptied when you disabled undo.</span></span>  
  
<a name="dependencyPropertyInfo_IsUndoEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="87353-255">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="87353-255">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-256">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-256">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty>|  
|<span data-ttu-id="87353-257">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="87353-257">Metadata properties set to `true`</span></span>|<span data-ttu-id="87353-258">Brak</span><span class="sxs-lookup"><span data-stu-id="87353-258">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="87353-259">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> właściwość [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="87353-259">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsUndoEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsUndoEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsUndoEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsUndoEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsUndoEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-260">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-260">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineDown();" />
      <MemberSignature Language="F#" Value="member this.LineDown : unit -&gt; unit" Usage="textBoxBase.LineDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-261">Przewijania zawartości formantu przez jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="87353-261">Scrolls the contents of the control down by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-262">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-262">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase13)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineLeft();" />
      <MemberSignature Language="F#" Value="member this.LineLeft : unit -&gt; unit" Usage="textBoxBase.LineLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-263">Przewija zawartość kontrolki w lewo o jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="87353-263">Scrolls the contents of the control to the left by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-264">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-264">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase14)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineRight();" />
      <MemberSignature Language="F#" Value="member this.LineRight : unit -&gt; unit" Usage="textBoxBase.LineRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-265">Przewija zawartość kontrolki po prawej stronie przez jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="87353-265">Scrolls the contents of the control to the right by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-266">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-266">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase15)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineUp();" />
      <MemberSignature Language="F#" Value="member this.LineUp : unit -&gt; unit" Usage="textBoxBase.LineUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-267">Przewija zawartość kontrolki jest stawki rabatowe zwiększone o jedną linię.</span><span class="sxs-lookup"><span data-stu-id="87353-267">Scrolls the contents of the control upward by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-268">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-268">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase16)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      </Docs>
    </Member>
    <Member MemberName="LockCurrentUndoUnit">
      <MemberSignature Language="C#" Value="public void LockCurrentUndoUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LockCurrentUndoUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockCurrentUndoUnit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockCurrentUndoUnit();" />
      <MemberSignature Language="F#" Value="member this.LockCurrentUndoUnit : unit -&gt; unit" Usage="textBoxBase.LockCurrentUndoUnit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-269">Blokuje najnowszych jednostki cofania stosu cofania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="87353-269">Locks the most recent undo unit of the undo stack of the application.</span></span> <span data-ttu-id="87353-270">Zapobiega to scalana z jednostek cofania, które są dodawane później zablokowanych jednostek.</span><span class="sxs-lookup"><span data-stu-id="87353-270">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-271">Wywołaj tę metodę, gdy jednostki cofania nietekstową zostanie dodany do stosu cofania głównego aplikacji.</span><span class="sxs-lookup"><span data-stu-id="87353-271">Call this method when a non-text undo unit is added to the application's main undo stack.</span></span> <span data-ttu-id="87353-272">Zapobiega to scalana z jednostek cofania, które są dodawane później zablokowanych jednostek.</span><span class="sxs-lookup"><span data-stu-id="87353-272">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="textBoxBase.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-273">Jest wywoływana, gdy jest stosowany szablon kontrolki.</span><span class="sxs-lookup"><span data-stu-id="87353-273">Is called when a control template is applied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-274">Zastępuje <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="87353-274">Overrides <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="87353-275">Po zaimplementowaniu w klasie pochodnej, ta metoda jest wywoływana zawsze wtedy, gdy kod aplikacji realizowania innych procesów wewnętrznych wywołań <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="87353-275">When implemented in a derived class, this method is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="textBoxBase.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-276">Argumenty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-276">Arguments of the event.</span></span></param>
        <summary><span data-ttu-id="87353-277">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> zdarzenia trasowanego osiągnie tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-277">Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="87353-278">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-278">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-279">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="87353-279">This method has no default implementation.</span></span> <span data-ttu-id="87353-280">Nadal powinny wywoływać implementację podstawową, w przypadku, gdy klasa pośrednicząca w dziedziczeniu zaimplementowała tej metody.</span><span class="sxs-lookup"><span data-stu-id="87353-280">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="87353-281">Celem tej metody jest nieco podobne do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: pozwala obsługiwać pasującego zdarzenia z klasy pochodnej za pomocą obsługi klasy zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="87353-281">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="87353-282">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="87353-282">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="87353-283">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenie trasowane może być wywoływane przez element podrzędny, który nie musi być element, który wywołuje procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="87353-283">The implementation pattern of the On\* methods is different for routed events because the routed event might have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="87353-284">W związku z tym Twoja implementacja musi uwzględniać zdarzenia właściwości źródła argumentów (i nie należy próbować ponownie zgłosić zdarzenie, które w większości przypadków).</span><span class="sxs-lookup"><span data-stu-id="87353-284">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="87353-285">Podklasy <xref:System.Windows.Controls.Primitives.TextBoxBase> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy.</span><span class="sxs-lookup"><span data-stu-id="87353-285">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="87353-286">Jeden scenariusz jest przyjmują argumentów zdarzenia i celowo oznaczanie zdarzenia, jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="87353-286">One scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-287">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-287">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-288">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-288">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-289">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-289">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-290">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-290">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-291">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragLeave" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-291">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-292">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-292">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-293">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-293">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-294">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragOver" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-294">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-295">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-295">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-296">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-296">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-297">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-297">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-298">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-298">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="textBoxBase.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-299">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-299">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-300">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.GiveFeedback" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-300">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-301">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-301">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="textBoxBase.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-302">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-302">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-303">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-303">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-304">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-304">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-305">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-305">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-306">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-306">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-307">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-307">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-308">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-308">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-309">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-309">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-310">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-310">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="textBoxBase.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-311">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-311">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-312">Wywołuje <see cref="E:System.Windows.UIElement.LostFocus" /> zdarzeń (przy użyciu podanych argumentów).</span><span class="sxs-lookup"><span data-stu-id="87353-312">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="textBoxBase.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-313">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-313">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-314">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-314">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-315">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-315">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="textBoxBase.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-316">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-316">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-317">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-317">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-318">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-318">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-319">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-319">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-320">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-320">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-321">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-321">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-322">Argumenty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-322">Arguments of the event.</span></span> <span data-ttu-id="87353-323">Te argumenty będzie zawierać szczegółowe informacje, o które myszy przycisk został wciśnięty i obsługiwanego stanu.</span><span class="sxs-lookup"><span data-stu-id="87353-323">These arguments will include details about which mouse button was depressed, and the handled state.</span></span></param>
        <summary><span data-ttu-id="87353-324">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseUp" /> zdarzeń osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-324">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-325">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-325">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="textBoxBase.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-326">Argumenty kółka myszy, które są skojarzone z tym zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="87353-326">The mouse wheel arguments that are associated with this event.</span></span></param>
        <summary><span data-ttu-id="87353-327">Jest wywoływana, gdy <see cref="E:System.Windows.UIElement.MouseWheel" /> zdarzeń jest kierowany do tej klasy (lub klasę, która dziedziczy z tej klasy).</span><span class="sxs-lookup"><span data-stu-id="87353-327">Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-328"><xref:System.Windows.UIElement.MouseWheel> Zdarzenie występuje, gdy jest wycofywany kółka myszy.</span><span class="sxs-lookup"><span data-stu-id="87353-328">The <xref:System.Windows.UIElement.MouseWheel> event occurs when the mouse wheel is rolled.</span></span>  
  
 <span data-ttu-id="87353-329">Zastępuje <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span><span class="sxs-lookup"><span data-stu-id="87353-329">Overrides <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-330">Dane dotyczące zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-330">The event data.</span></span></param>
        <summary><span data-ttu-id="87353-331">Wywoływane, gdy <see cref="E:System.Windows.UIElement.KeyDown" /> występuje.</span><span class="sxs-lookup"><span data-stu-id="87353-331">Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="textBoxBase.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-332">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-332">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-333">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-333">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-334">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-334">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-335">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="87353-335">This method has no default implementation.</span></span> <span data-ttu-id="87353-336">Wywoływanie base() w danej implementacji nadal zaleca się, w przypadku, gdy klasa pośrednicząca w dziedziczeniu zaimplementować tę metodę.</span><span class="sxs-lookup"><span data-stu-id="87353-336">Calling base() in your implementation is still recommended, in case an intermediate class in the inheritance implemented this method.</span></span> <span data-ttu-id="87353-337">Base() możesz wywołać przed lub po swojej specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="87353-337">You may call base() either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="87353-338">Celem tej metody jest nieco podobne do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: pozwala obsługiwać pasującego zdarzenia z klasy pochodnej za pomocą obsługi klasy zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="87353-338">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="87353-339">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="87353-339">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="87353-340">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenie trasowane został zgłoszony przez element podrzędny, który nie musi być element, który wywołuje procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="87353-340">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="87353-341">W związku z tym Twoja implementacja musi uwzględniać zdarzenia właściwości źródła argumentów (i nie należy próbować ponownie zgłosić zdarzenie, które w większości przypadków).</span><span class="sxs-lookup"><span data-stu-id="87353-341">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="87353-342">Podklasy <xref:System.Windows.Controls.Primitives.TextBoxBase> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy.</span><span class="sxs-lookup"><span data-stu-id="87353-342">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="87353-343">Jeden scenariusz jest przyjmują argumentów zdarzenia i oznaczanie zdarzenia, jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="87353-343">One scenario is to take the arguments of the event and mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected override void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="textBoxBase.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-344">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-344">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-345">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-345">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-346">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-346">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnSelectionChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="textBoxBase.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-347">Argumenty, które są skojarzone z <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="87353-347">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="87353-348">Jest wywoływana, gdy karetki lub bieżące zaznaczenie zmienia pozycję.</span><span class="sxs-lookup"><span data-stu-id="87353-348">Is called when the caret or current selection changes position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-349">Ta metoda wywołuje <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="87353-349">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="override this.OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="textBoxBase.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate"><span data-ttu-id="87353-350">A <see cref="T:System.Windows.Controls.ControlTemplate" /> obiekt, który określa szablon kontrolki, który jest obecnie aktywny.</span><span class="sxs-lookup"><span data-stu-id="87353-350">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</span></span></param>
        <param name="newTemplate"><span data-ttu-id="87353-351">Element <see cref="T:System.Windows.Controls.ControlTemplate" /> obiektu, który określa nowy szablon kontrolki do użycia.</span><span class="sxs-lookup"><span data-stu-id="87353-351">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</span></span></param>
        <summary><span data-ttu-id="87353-352">Jest wywoływana, gdy zmieni się szablonu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="87353-352">Is called when the control template changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-353">Zastępuje <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="87353-353">Overrides <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (System.Windows.Controls.TextChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.Windows.Controls.TextChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As TextChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(System::Windows::Controls::TextChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : System.Windows.Controls.TextChangedEventArgs -&gt; unit&#xA;override this.OnTextChanged : System.Windows.Controls.TextChangedEventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.TextChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-354">Argumenty, które są skojarzone z <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="87353-354">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="87353-355">Jest wywoływana, gdy zmienia się zawartość w tej kontrolki edycji.</span><span class="sxs-lookup"><span data-stu-id="87353-355">Is called when content in this editing control changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-356">Ta metoda wywołuje <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="87353-356">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="textBoxBase.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="87353-357">Udostępnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="87353-357">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="87353-358">Wywoływana zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> dołączone zdarzenie trasowane osiągnie elementu pochodzących z tej klasy w jego trasę.</span><span class="sxs-lookup"><span data-stu-id="87353-358">Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="87353-359">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="87353-359">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageDown();" />
      <MemberSignature Language="F#" Value="member this.PageDown : unit -&gt; unit" Usage="textBoxBase.PageDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-360">Przewija widok zawartości formantu w dół o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="87353-360">Scrolls the contents of the control down by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-361">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-361">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase17)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageLeft();" />
      <MemberSignature Language="F#" Value="member this.PageLeft : unit -&gt; unit" Usage="textBoxBase.PageLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-362">Przewija zawartość kontrolki w lewo o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="87353-362">Scrolls the contents of the control to the left by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-363">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-363">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase18)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageRight();" />
      <MemberSignature Language="F#" Value="member this.PageRight : unit -&gt; unit" Usage="textBoxBase.PageRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-364">Przewija zawartość kontrolki w prawo o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="87353-364">Scrolls the contents of the control to the right by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-365">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-365">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase19)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageUp();" />
      <MemberSignature Language="F#" Value="member this.PageUp : unit -&gt; unit" Usage="textBoxBase.PageUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-366">Przewija widok zawartości formantu, o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="87353-366">Scrolls the contents of the control up by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-367">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-367">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase20)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-368">Wkleja zawartość Schowka za pośrednictwem bieżące zaznaczenie w formancie edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-368">Pastes the contents of the Clipboard over the current selection in the text editing control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-369">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> metodę, aby wkleić zawartość wybranego do <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-369">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> method to paste selected content into a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase6)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberSignature Language="F#" Value="member this.Redo : unit -&gt; bool" Usage="textBoxBase.Redo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-370">Cofa ostatnio polecenie cofania.</span><span class="sxs-lookup"><span data-stu-id="87353-370">Undoes the most recent undo command.</span></span> <span data-ttu-id="87353-371">Innymi słowy wykonuje ponownie najnowszych jednostki cofania na stos cofania.</span><span class="sxs-lookup"><span data-stu-id="87353-371">In other words, redoes the most recent undo unit on the undo stack.</span></span></summary>
        <returns><span data-ttu-id="87353-372"><see langword="true" /> Jeśli operacja ponawiania zakończyła się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-372"><see langword="true" /> if the redo operation was successful; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="87353-373">Ta metoda zwraca <see langword="false" /> Jeśli nie ma żadnego polecenia Cofnij dostępne (stos cofania jest pusty).</span><span class="sxs-lookup"><span data-stu-id="87353-373">This method returns <see langword="false" /> if there is no undo command available (the undo stack is empty).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-374">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="87353-374">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToEnd">
      <MemberSignature Language="C#" Value="public void ScrollToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToEnd();" />
      <MemberSignature Language="F#" Value="member this.ScrollToEnd : unit -&gt; unit" Usage="textBoxBase.ScrollToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-375">Przewija widok edycji kontrolek na końcu zawartości.</span><span class="sxs-lookup"><span data-stu-id="87353-375">Scrolls the view of the editing control to the end of the content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-376">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-376">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase22)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHome">
      <MemberSignature Language="C#" Value="public void ScrollToHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHome();" />
      <MemberSignature Language="F#" Value="member this.ScrollToHome : unit -&gt; unit" Usage="textBoxBase.ScrollToHome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-377">Przewija widok edycji kontrolek na początek bieżącego okienka ekranu.</span><span class="sxs-lookup"><span data-stu-id="87353-377">Scrolls the view of the editing control to the beginning of the viewport.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-378">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> metodę, aby przewinąć zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-378">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase21)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHorizontalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHorizontalOffset(double offset);" />
      <MemberSignature Language="F#" Value="member this.ScrollToHorizontalOffset : double -&gt; unit" Usage="textBoxBase.ScrollToHorizontalOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="87353-379">Podwójna wartość określa przesunięcie w poziomie, aby przewinąć do.</span><span class="sxs-lookup"><span data-stu-id="87353-379">A double value that specifies the horizontal offset to scroll to.</span></span></param>
        <summary><span data-ttu-id="87353-380">Przewija zawartość kontrolka edycji do określonego przesunięcie w poziomie.</span><span class="sxs-lookup"><span data-stu-id="87353-380">Scrolls the contents of the editing control to the specified horizontal offset.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToVerticalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToVerticalOffset(double offset);" />
      <MemberSignature Language="F#" Value="member this.ScrollToVerticalOffset : double -&gt; unit" Usage="textBoxBase.ScrollToVerticalOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="87353-381">Podwójna wartość określa przesunięcie w pionie, aby przewinąć do.</span><span class="sxs-lookup"><span data-stu-id="87353-381">A double value that specifies the vertical offset to scroll to.</span></span></param>
        <summary><span data-ttu-id="87353-382">Przewija zawartość kontrolka edycji do określonego przesunięcie w pionie.</span><span class="sxs-lookup"><span data-stu-id="87353-382">Scrolls the contents of the editing control to the specified vertical offset.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-383">Zaznacza zawartość formancie edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-383">Selects all the contents of the text editing control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-384">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> metodę, aby zaznaczyć wszystkie zawartość <xref:System.Windows.Controls.TextBox> kontroli.</span><span class="sxs-lookup"><span data-stu-id="87353-384">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> method to select all the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase7)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-385">Pobiera lub ustawia pędzel wyróżnia zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-385">Gets or sets the brush that highlights selected text.</span></span></summary>
        <value><span data-ttu-id="87353-386">Pędzel wyróżnia zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-386">The brush that highlights selected text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-387">Można określić pędzla, który wyróżnia zaznaczonego tekstu, ustawiając <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> i <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="87353-387">You can specify the brush that highlights selected text by setting the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> properties.</span></span> <span data-ttu-id="87353-388"><xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> Właściwości Określa przezroczystość <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span><span class="sxs-lookup"><span data-stu-id="87353-388">The <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property specifies the opacity of the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87353-389">Poniższy przykład tworzy <xref:System.Windows.Controls.TextBox> i dodaje tekst "Jest jakiś tekst".</span><span class="sxs-lookup"><span data-stu-id="87353-389">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="87353-390">Przykład ustawia <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> właściwość czerwony i <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> właściwość 0,5, aby dostosować wygląd zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-390">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="87353-391">Poniższa ilustracja przedstawia <xref:System.Windows.Controls.TextBox> z poprzedniego przykładu z jego zaznaczonym tekstem.</span><span class="sxs-lookup"><span data-stu-id="87353-391">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="87353-392">![Pole tekstowe z czerwonym SelectionBrush](~/add/media/textboxselectionbrush.png "pole tekstowe z czerwonym SelectionBrush")</span><span class="sxs-lookup"><span data-stu-id="87353-392">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="87353-393">Zaznaczony tekst w polu tekstowym za pomocą SelectionBrush Ustaw na czerwony</span><span class="sxs-lookup"><span data-stu-id="87353-393">Selected text in a TextBox with SelectionBrush set to red</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-394">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-394">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : System.Windows.RoutedEventHandler " Usage="member this.SelectionChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-395">Występuje, gdy zmienia się zaznaczenie tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-395">Occurs when the text selection has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SelectionChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="87353-396">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="87353-396">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-397">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-397">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent>|  
|<span data-ttu-id="87353-398">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="87353-398">Routing strategy</span></span>|<span data-ttu-id="87353-399">Propagacja</span><span class="sxs-lookup"><span data-stu-id="87353-399">Bubbling</span></span>|  
|<span data-ttu-id="87353-400">Delegate</span><span class="sxs-lookup"><span data-stu-id="87353-400">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="87353-401">W poniższym przykładzie pokazano sposób obsługi <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> zdarzeń przy użyciu kodu.</span><span class="sxs-lookup"><span data-stu-id="87353-401">The following example demonstrates how to handle the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event by using code.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase10)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectionChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectionChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectionChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-402">Identyfikuje <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="87353-402">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacity">
      <MemberSignature Language="C#" Value="public double SelectionOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionOpacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionOpacity : double with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-403">Pobiera lub ustawia nieprzezroczystość <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="87353-403">Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span></span></summary>
        <value><span data-ttu-id="87353-404">Nieprzezroczystość <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="87353-404">The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span></span> <span data-ttu-id="87353-405">Wartość domyślna to Update 0.4.</span><span class="sxs-lookup"><span data-stu-id="87353-405">The default is 0.4.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-406">Jeśli <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> jest równa 0, <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> jest przejrzysta i nie jest widoczny.</span><span class="sxs-lookup"><span data-stu-id="87353-406">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 0, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is transparent and is not visible.</span></span> <span data-ttu-id="87353-407">Jeśli <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> ustawiono 1.0 lub nowszej, <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> nieprzezroczysty i wybranego tekst nie jest widoczny.</span><span class="sxs-lookup"><span data-stu-id="87353-407">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 1.0 or greater, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is opaque and the selected text is not visible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87353-408">Poniższy przykład tworzy <xref:System.Windows.Controls.TextBox> i dodaje tekst "Jest jakiś tekst".</span><span class="sxs-lookup"><span data-stu-id="87353-408">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="87353-409">Przykład ustawia <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> właściwość czerwony i <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> właściwość 0,5, aby dostosować wygląd zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-409">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="87353-410">Poniższa ilustracja przedstawia <xref:System.Windows.Controls.TextBox> z poprzedniego przykładu z jego zaznaczonym tekstem.</span><span class="sxs-lookup"><span data-stu-id="87353-410">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="87353-411">![Pole tekstowe z czerwonym SelectionBrush](~/add/media/textboxselectionbrush.png "pole tekstowe z czerwonym SelectionBrush")</span><span class="sxs-lookup"><span data-stu-id="87353-411">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="87353-412">Zaznaczony tekst w polu tekstowym za pomocą SelectionOpacity równa 0,5</span><span class="sxs-lookup"><span data-stu-id="87353-412">Selected text in a TextBox with SelectionOpacity set to 0.5</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionOpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionOpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionOpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionOpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionOpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-413">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-413">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionTextBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionTextBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionTextBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionTextBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionTextBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionTextBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-414">Pobiera lub ustawia wartość definiującą pędzel używany do zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-414">Gets or sets a value that defines the brush used for selected text.</span></span></summary>
        <value><span data-ttu-id="87353-415">Pędzel używany do zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-415">The brush used for selected text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks  

<span data-ttu-id="87353-416">Wartość domyślna to <xref:System.Windows.Media.SolidColorBrush> kolorem zdefiniowaną przez system dla wyróżnionego tekstu.</span><span class="sxs-lookup"><span data-stu-id="87353-416">The default value is a <xref:System.Windows.Media.SolidColorBrush> with the system-defined color for highlighted text.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionTextBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionTextBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionTextBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionTextBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionTextBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionTextBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-417">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-417">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks  

<span data-ttu-id="87353-418">Jeśli ta właściwość jest `null`, zaznaczony tekst nie jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="87353-418">If this property is `null`, selected text is not rendered.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheck">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellCheck SpellCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SpellCheck SpellCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellCheck As SpellCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellCheck ^ SpellCheck { System::Windows::Controls::SpellCheck ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpellCheck : System.Windows.Controls.SpellCheck" Usage="System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-419">Pobiera <see cref="T:System.Windows.Controls.SpellCheck" /> obiektu, który zapewnia dostęp do błędy pisowni w zawartość tekstową <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> lub <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="87353-419">Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></summary>
        <value><span data-ttu-id="87353-420">A <see cref="T:System.Windows.Controls.SpellCheck" /> obiektu, który zapewnia dostęp do błędy pisowni w zawartość tekstową <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> lub <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="87353-420">A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span>  
  
<span data-ttu-id="87353-421">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="87353-421">This property has no default value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.SpellingError" />
        <altmember cref="T:System.Windows.Controls.SpellingReform" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.TextChangedEventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.TextChangedEventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As TextChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::TextChangedEventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : System.Windows.Controls.TextChangedEventHandler " Usage="member this.TextChanged : System.Windows.Controls.TextChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.TextChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-422">Występuje, gdy zmienia się zawartość w elemencie tekstowym.</span><span class="sxs-lookup"><span data-stu-id="87353-422">Occurs when content changes in the text element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-423">Aby uzyskać <xref:System.Windows.Controls.TextBox>, to zdarzenie występuje, gdy jego tekstu; dla <xref:System.Windows.Controls.RichTextBox>, to zdarzenie występuje, gdy którykolwiek zawartości lub formatowania zmian (na przykład, obrazy, tabela lub kolor tła).</span><span class="sxs-lookup"><span data-stu-id="87353-423">For a <xref:System.Windows.Controls.TextBox>, this event occurs when its text changes; for a <xref:System.Windows.Controls.RichTextBox>, this event occurs when any content or formatting changes (for example, images, table, or background color).</span></span>  
  
<a name="routedEventInfo_TextChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="87353-424">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="87353-424">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-425">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-425">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent>|  
|<span data-ttu-id="87353-426">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="87353-426">Routing strategy</span></span>|<span data-ttu-id="87353-427">Propagacja</span><span class="sxs-lookup"><span data-stu-id="87353-427">Bubbling</span></span>|  
|<span data-ttu-id="87353-428">Delegate</span><span class="sxs-lookup"><span data-stu-id="87353-428">Delegate</span></span>|<xref:System.Windows.Controls.TextChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.TextChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TextChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-429">Identyfikuje <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="87353-429">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; bool" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87353-430">Cofa ostatnio polecenie cofania.</span><span class="sxs-lookup"><span data-stu-id="87353-430">Undoes the most recent undo command.</span></span> <span data-ttu-id="87353-431">Innymi słowy cofa najnowszych jednostki cofania na stos cofania.</span><span class="sxs-lookup"><span data-stu-id="87353-431">In other words, undoes the most recent undo unit on the undo stack.</span></span></summary>
        <returns><span data-ttu-id="87353-432"><see langword="true" /> Jeśli operacja cofania zakończyła się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87353-432"><see langword="true" /> if the undo operation was successful; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="87353-433">Ta metoda zwraca <see langword="false" /> Jeśli stos cofania jest pusty.</span><span class="sxs-lookup"><span data-stu-id="87353-433">This method returns <see langword="false" /> if the undo stack is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-434">Poniższy przykład pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="87353-434">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="UndoLimit">
      <MemberSignature Language="C#" Value="public int UndoLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UndoLimit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property UndoLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UndoLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UndoLimit : int with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-435">Pobiera lub ustawia liczbę akcji przechowywane w kolejce cofania.</span><span class="sxs-lookup"><span data-stu-id="87353-435">Gets or sets the number of actions stored in the undo queue.</span></span></summary>
        <value><span data-ttu-id="87353-436">Liczba akcji przechowywane w kolejce cofania.</span><span class="sxs-lookup"><span data-stu-id="87353-436">The number of actions stored in the undo queue.</span></span> <span data-ttu-id="87353-437">Wartość domyślna to -1, co oznacza, że kolejka cofania jest ograniczona do pamięci, która jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="87353-437">The default is -1, which means the undo queue is limited to the memory that is available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-438">Ustawienie <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> czyści kolejka cofania.</span><span class="sxs-lookup"><span data-stu-id="87353-438">Setting <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> clears the undo queue.</span></span> <span data-ttu-id="87353-439">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> jest ustawiona na wartość -1, kolejka cofania jest ograniczony tylko ilością pamięci, która jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="87353-439">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to -1, the undo queue is limited only by the memory that is available.</span></span> <span data-ttu-id="87353-440">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> jest ustawiona na wartość 0, cofania jest wyłączona na <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="87353-440">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to 0, undo is disabled on the <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span></span>  
  
 <span data-ttu-id="87353-441"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> został wprowadzony w .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="87353-441"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="87353-442">Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="87353-442">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="87353-443"><see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> ustawiono po wywołaniu <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> i przed wywołaniem <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span><span class="sxs-lookup"><span data-stu-id="87353-443"><see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UndoLimitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UndoLimitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UndoLimitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoLimitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UndoLimitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UndoLimitProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-444">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-444">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-445"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> został wprowadzony w .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="87353-445"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> is introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="87353-446">Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="87353-446">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-447">Pobiera lub Ustawia położenie przewijania pionowego.</span><span class="sxs-lookup"><span data-stu-id="87353-447">Gets or sets the vertical scroll position.</span></span></summary>
        <value><span data-ttu-id="87353-448">Wartość zmiennoprzecinkową, która określa położenie przewijania pionowego w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="87353-448">A floating-point value that specifies the vertical scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="87353-449">Ustawienie tej właściwości powoduje, że tekst kontrolki do przewijania do określonej przesunięcie w pionie do edycji.</span><span class="sxs-lookup"><span data-stu-id="87353-449">Setting this property causes the text editing control to scroll to the specified vertical offset.</span></span> <span data-ttu-id="87353-450">Czytanie tej właściwości zwraca bieżące przesunięcie w pionie.</span><span class="sxs-lookup"><span data-stu-id="87353-450">Reading this property returns the current vertical offset.</span></span>  
  
<span data-ttu-id="87353-451">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="87353-451">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="87353-452">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="87353-452">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87353-453">Przesunięcie w pionie jest mierzony od góry obszaru tekstu widocznego.</span><span class="sxs-lookup"><span data-stu-id="87353-453">The vertical offset is measured from the top of the visible text area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87353-454">Poniższy przykład pokazuje, jak odczytać wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="87353-454">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="87353-455">Aby ustawić tę właściwość na wartość ujemną, podejmowana jest próba.</span><span class="sxs-lookup"><span data-stu-id="87353-455">An attempt is made to set this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-456">Pobiera lub ustawia wartość wskazującą, czy pionowy pasek przewijania jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="87353-456">Gets or sets a value that indicates whether a vertical scroll bar is shown.</span></span></summary>
        <value><span data-ttu-id="87353-457">Wartość, która jest zdefiniowana przez <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="87353-457">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span></span>  
  
<span data-ttu-id="87353-458">Wartość domyślna to <see cref="F:System.Windows.Visibility.Hidden" />.</span><span class="sxs-lookup"><span data-stu-id="87353-458">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_VerticalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="87353-459">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="87353-459">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="87353-460">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="87353-460">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty>|  
|<span data-ttu-id="87353-461">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="87353-461">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="T:System.Windows.Controls.ScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-462">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="87353-462">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewportHeight : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-463">Pobiera pionowy rozmiar przewijany obszar zawartości.</span><span class="sxs-lookup"><span data-stu-id="87353-463">Gets the vertical size of the scrollable content area.</span></span></summary>
        <value><span data-ttu-id="87353-464">Wartość zmiennoprzecinkową, która określa pionowy rozmiar przewijany obszar zawartości w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="87353-464">A floating-point value that specifies the vertical size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="87353-465">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="87353-465">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="87353-466">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="87353-466">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-467">Poniższy przykład pokazuje, jak odczytać wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="87353-467">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewportWidth : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87353-468">Pobiera rozmiar poziomy przewijany obszar zawartości.</span><span class="sxs-lookup"><span data-stu-id="87353-468">Gets the horizontal size of the scrollable content area.</span></span></summary>
        <value><span data-ttu-id="87353-469">Wartość zmiennoprzecinkową, która określa poziomy rozmiar przewijany obszar zawartości w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="87353-469">A floating-point value that specifies the horizontal size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="87353-470">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="87353-470">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="87353-471">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="87353-471">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87353-472">Poniższy przykład pokazuje, jak odczytać wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="87353-472">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
  </Members>
</Type>