<Type Name="TextBoxBase" FullName="System.Windows.Controls.Primitives.TextBoxBase">
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract TextBoxBase extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Controls::Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentHost", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc3e8-101">Abstrakcyjna klasa podstawowa, która udostępnia funkcje dla kontrolek edycji tekstu, w tym <see cref="T:System.Windows.Controls.TextBox" /> i <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-101">An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-102">W poniższym przykładzie pokazano sposób użycia pochodnej <xref:System.Windows.Controls.TextBox> obiektu w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3e8-102">The following example demonstrates how to use the derived <xref:System.Windows.Controls.TextBox> object in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 <span data-ttu-id="cc3e8-103">W poniższym przykładzie pokazano sposób użycia pochodnej <xref:System.Windows.Controls.RichTextBox> obiektu w kodzie.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-103">The following example demonstrates how to use the derived <xref:System.Windows.Controls.RichTextBox> object in code.</span></span>  
  
 [!code-csharp[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_richtextbox_mouseupdown)]
 [!code-vb[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_richtextbox_mouseupdown)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TextBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-104">Pobiera lub ustawia wartość wskazującą, jak kontrolka edycji reaguje na naciśnięcie klawisza ENTER.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-104">Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-105"><see langword="true" /> Naciśnięcie klawisza ENTER Wstawia nowy wiersz w bieżącym położeniu kursora; w przeciwnym razie jest ignorowana klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-105"><see langword="true" /> if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored.</span></span> <span data-ttu-id="cc3e8-106">Wartość domyślna to <see langword="false" /> dla <see cref="T:System.Windows.Controls.TextBox" /> i <see langword="true" /> dla <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-106">The default value is <see langword="false" /> for <see cref="T:System.Windows.Controls.TextBox" /> and <see langword="true" /> for <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-107">Klawisz ENTER odpowiada `VK_RETURN` kod klucza wirtualnego.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-107">The ENTER key corresponds to `VK_RETURN` virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsReturn"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="cc3e8-108">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="cc3e8-108">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-109">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-109">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty>|  
|<span data-ttu-id="cc3e8-110">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="cc3e8-110">Metadata properties set to `true`</span></span>|<span data-ttu-id="cc3e8-111">Brak</span><span class="sxs-lookup"><span data-stu-id="cc3e8-111">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-112">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-112">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-113">Pobiera lub ustawia wartość wskazującą, jak kontrolka edycji reaguje na naciśnięcie klawisza TAB.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-113">Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-114"><see langword="true" /> Jeśli naciśnięcie klawisza TAB Wstawia znak tabulacji w bieżącym położeniu kursora; <see langword="false" /> Jeśli naciśnięcie klawisza TAB przenosi fokus do następnego formantu, który jest oznaczony jako tabulatora i nie Wstaw znak tabulacji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-114"><see langword="true" /> if pressing the TAB key inserts a tab character at the current cursor position; <see langword="false" /> if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.</span></span>  
  
 <span data-ttu-id="cc3e8-115">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-115">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-116">Klawisz TAB odpowiada **VK_TAB** kod klucza wirtualnego.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-116">The TAB key corresponds to **VK_TAB** virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsTab"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="cc3e8-117">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="cc3e8-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-118">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty>|  
|<span data-ttu-id="cc3e8-119">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="cc3e8-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="cc3e8-120">Brak</span><span class="sxs-lookup"><span data-stu-id="cc3e8-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-121">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="cc3e8-122">Ciąg, który określa tekst, który można dołączyć do bieżącą zawartość formantu tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-122">A string that specifies the text to append to the current contents of the text control.</span></span></param>
        <summary><span data-ttu-id="cc3e8-123">Dołącza ciąg do zawartości kontrolki tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-123">Appends a string to the contents of a text control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-124"><xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> Metody umożliwia użytkownikowi dołączać tekstu do zawartości kontrolki tekstu bez użycia łączenia tekstu, który może zapewnić lepszą wydajność, gdy wymagane są wiele konkatenacji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-124">The <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method enables the user to append text to the contents of a text control without using text concatenation, which, can yield better performance when many concatenations are required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-125">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-125">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase11)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-126">Pobiera lub ustawia wartość określającą, czy, gdy użytkownik wybierze część przeciągając myszą po nim, pozostałe słowo jest zaznaczone.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-126">Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-127"><see langword="true" /> Jeśli włączono automatyczne zaznaczanie słów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-127"><see langword="true" /> if automatic word selection is enabled; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="cc3e8-128">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-128">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-129">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> jest włączone, za każdym razem część wyraz jest wybrane przez użytkownika przeciąganie przez wyrażenie za pomocą myszy, zaznaczenie jest automatycznie dodawany do obejmować całe wyrazy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-129">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is enabled, every time that part of a word is selected by the user dragging over part of a word using the mouse, the selection is automatically expanded to include the whole word.</span></span> <span data-ttu-id="cc3e8-130">Użytkownika można zastąpić automatyczny wybór całe wyrazy na chwilę odwrócić kierunek, w którym wskaźnik myszy jest przeciągany jako wybór.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-130">The user can override automatic selection of a whole word by momentarily reversing the direction in which the mouse pointer is being dragged as the selection is made.</span></span> <span data-ttu-id="cc3e8-131">Ta akcja spowoduje cofnięcie automatyczny wybór całe wyrazy i umożliwia użytkownikowi wybranie dokładnie części lub całości Word.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-131">This action undoes the automatic selection of the whole word, and enables the user to precisely select part or all of the word.</span></span>  
  
 <span data-ttu-id="cc3e8-132">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> jest wyłączona, wybór nie jest automatycznie rozwinięty uwzględnienie całe wyrazy; w takim przypadku dokładne opcje zawsze są określane ręcznie.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-132">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is disabled, a selection is not automatically expanded to include whole words; in this case, precise selections are always determined manually.</span></span>  
  
 <span data-ttu-id="cc3e8-133">**Uwaga:** automatycznego wyboru nie ma wpływu na pierwsze słowo, którą przeciąga użytkownik między.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-133">**Note:** Auto selection does not affect the first word that the user drags across.</span></span> <span data-ttu-id="cc3e8-134">Jest tylko wtedy, gdy pierwszy granicę word przekroczeniu wyboru automatycznie staje się skuteczne.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-134">It is only after this first word boundary is crossed that auto selection takes effect.</span></span>  
  
<a name="dependencyPropertyInfo_AutoWordSelection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="cc3e8-135">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="cc3e8-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-136">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-136">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty>|  
|<span data-ttu-id="cc3e8-137">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="cc3e8-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="cc3e8-138">Brak</span><span class="sxs-lookup"><span data-stu-id="cc3e8-138">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoWordSelectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoWordSelectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoWordSelectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoWordSelectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-139">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-139">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginChange">
      <MemberSignature Language="C#" Value="public void BeginChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-140">Rozpoczyna się blok zmiany.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-140">Begins a change block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-141">**Uwaga:** podczas wywoływania <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, musisz również wywołać <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> przeprowadzenie bloku zmiany w przeciwnym razie zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-141">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="cc3e8-142">Blok zmiany logicznie wiele zmian do jednostki cofania jednej grupy i uniemożliwia zgłaszanych dopiero po bloku zmiany zdarzenia zmiany zawartości lub zaznaczenie tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-142">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="cc3e8-143">W ten sposób można wprowadzać wiele edycji elementu tekstu bez obawy, zmieniane w tym samym czasie przez odbiornik innego elementu tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-143">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another listener.</span></span> <span data-ttu-id="cc3e8-144">Blok zmian jest tworzony przez wywołanie metody <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-144">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="cc3e8-145">Wywoływanie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> metoda powoduje, że wszystkie kolejne zmiany, które mają zostać uwzględnione w bloku określoną zmianę, aż do odpowiedniego wywołania <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> staje się metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-145">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-146">Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> i <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> metody tworzenia blok zmiany.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-146">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-147">Pobiera wartość wskazującą, czy można wykonać ponownie ostatniej akcji cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-147">Gets a value that indicates whether the most recent undo action can be redone.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-148"><see langword="true" /> Jeśli można wykonać ponownie ostatniej akcji cofania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-148"><see langword="true" /> if the most recent undo action can be redone; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="cc3e8-149">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-149">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-150">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> właściwości w celu określenia, czy można wykonać ponownie ostatniej akcji cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-150">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> property to determine whether the most recent undo action can be redone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-151">Pobiera wartość wskazującą, czy można cofnąć ostatniej akcji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-151">Gets a value that indicates whether the most recent action can be undone.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-152"><see langword="true" /> Jeśli ostatniej akcji można jej cofnąć. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-152"><see langword="true" /> if the most recent action can be undone; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="cc3e8-153">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-153">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-154">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> właściwości w celu określenia, czy można cofnąć ostatniej akcji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-154">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> property to determine whether the most recent action can be undone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CaretBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CaretBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CaretBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CaretBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-155">Pobiera lub ustawia pędzel używany do rysowania karetkę pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-155">Gets or sets the brush that is used to paint the caret of the text box.</span></span></summary>
        <value><span data-ttu-id="cc3e8-156">Pędzel używany do rysowania karetkę pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-156">The brush that is used to paint the caret of the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-157">Poniższy przykład tworzy <xref:System.Windows.Controls.TextBox> i dodaje tekst "Jest tekstem".</span><span class="sxs-lookup"><span data-stu-id="cc3e8-157">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="cc3e8-158">Ustawia przykład <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> i <xref:System.Windows.Controls.Control.Foreground%2A> właściwości <xref:System.Windows.Controls.TextBox> na niebieski.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-158">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties of a <xref:System.Windows.Controls.TextBox> to blue.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="cc3e8-159">Powyższy przykład generuje dane wyjściowe, podobnie jak na poniższej ilustracji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-159">The preceding example produces output that is like the following illustration.</span></span>  
  
 <span data-ttu-id="cc3e8-160">![Pole tekstowe z CaretBrush ustawioną niebieski. ] (~/add/media/textboxcaretbrush.png "Pole tekstowe z CaretBrush ustawioną niebieski.")</span><span class="sxs-lookup"><span data-stu-id="cc3e8-160">![TextBox with CaretBrush set to blue.](~/add/media/textboxcaretbrush.png "TextBox with CaretBrush set to blue.")</span></span>  
<span data-ttu-id="cc3e8-161">Pole tekstowe z zestawem CaretBrush na niebieski</span><span class="sxs-lookup"><span data-stu-id="cc3e8-161">TextBox with CaretBrush set to blue</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaretBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaretBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaretBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaretBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-162">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-162">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-163">Kopiuje bieżące zaznaczenie tekstu formantu do edytowania <see cref="T:System.Windows.Clipboard" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-163">Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-164">Operacja kopiowania Kopiuje zaznaczony tekst <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-164">A copy operation copies the selected text to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="cc3e8-165">Należy pamiętać, że zaznaczony tekst nie jest usuwany z kontrolki w procesie edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-165">Note that the selected text is not removed from the text editing control in the process.</span></span> <span data-ttu-id="cc3e8-166">Podobnej metody <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, przenosi bieżące zaznaczenie do <xref:System.Windows.Clipboard> i usuwa kontrolki w procesie edycji tekstu zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-166">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, moves the current selection to the <xref:System.Windows.Clipboard> and removes the selected text from the text editing control in the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-167">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> metodę, aby skopiować tekst, który wybrano w <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-167">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> method to copy the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase4)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cc3e8-168">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-168">for full trust for inheritors.</span></span> <span data-ttu-id="cc3e8-169">Ten element członkowski nie może być dziedziczona przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-169">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-170">Usuwa bieżące zaznaczenie z kontrolki edycji tekstu i kopiuje go do <see cref="T:System.Windows.Clipboard" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-170">Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-171">Operacja wycięte usuwa bieżące zaznaczenie z kontrolki edycji tekstu i kopiuje go do <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-171">A cut operation removes the current selection from the text editing control and copies it to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="cc3e8-172">Należy pamiętać, że zaznaczony tekst został usunięty (obcięty) z kontrolki w procesie edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-172">Note that the selected text is removed (cut) from the text editing control in the process.</span></span> <span data-ttu-id="cc3e8-173">Podobnej metody <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, kopiuje bieżące zaznaczenie do Schowka, ale nie powoduje usunięcia zaznaczonego tekstu z kontrolki edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-173">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copies the current selection to the Clipboard, but does not remove the selected text from the text editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-174">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> metodę, aby usunąć tekst, który wybrano w <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-174">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> method to delete the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase5)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cc3e8-175">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-175">for full trust for inheritors.</span></span> <span data-ttu-id="cc3e8-176">Ten element członkowski nie może być dziedziczona przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-176">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="DeclareChangeBlock">
      <MemberSignature Language="C#" Value="public IDisposable DeclareChangeBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable DeclareChangeBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
      <MemberSignature Language="VB.NET" Value="Public Function DeclareChangeBlock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ DeclareChangeBlock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-177">Tworzy blok zmiany.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-177">Creates a change block.</span></span></summary>
        <returns><span data-ttu-id="cc3e8-178"><see cref="T:System.IDisposable" /> Obiekt, który odwołuje się do nowego bloku zmiany.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-178">An <see cref="T:System.IDisposable" /> object that refers to a new change block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-179">Blok zmiany grupuje logicznie wiele zmian do jednostki cofania pojedynczego.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-179">A change block logically groups multiple changes into a single undo unit.</span></span> <span data-ttu-id="cc3e8-180">Blok zmian jest tworzony przez wywołanie metody <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-180">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="cc3e8-181">Wywoływanie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> metoda powoduje, że wszystkie kolejne zmiany, które mają zostać uwzględnione w bloku określoną zmianę, aż do odpowiedniego wywołania <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> staje się metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-181">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="EndChange">
      <MemberSignature Language="C#" Value="public void EndChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-182">Kończy się blok zmiany.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-182">Ends a change block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-183">**Uwaga:** podczas wywoływania <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, musisz również wywołać <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> przeprowadzenie bloku zmiany w przeciwnym razie zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-183">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="cc3e8-184">Blok zmiany logicznie wiele zmian do jednostki cofania jednej grupy i uniemożliwia zgłaszanych dopiero po bloku zmiany zdarzenia zmiany zawartości lub zaznaczenie tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-184">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="cc3e8-185">W ten sposób można wprowadzać wiele edycji elementu tekstu bez zagrożenia elementu tekst zostanie zmieniony w tym samym czasie przez inny proces.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-185">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another process.</span></span> <span data-ttu-id="cc3e8-186">Blok zmian jest tworzony przez wywołanie metody <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-186">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="cc3e8-187">Wywoływanie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> metoda powoduje, że wszystkie kolejne zmiany, które mają zostać uwzględnione w bloku określoną zmianę, aż do odpowiedniego wywołania <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> staje się metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-187">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-188">Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> i <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> metody tworzenia blok zmiany.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-188">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-189">Pobiera pionowy rozmiar obszaru zawartości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-189">Gets the vertical size of the visible content area.</span></span></summary>
        <value><span data-ttu-id="cc3e8-190">Wartość zmiennoprzecinkowa, określająca rozmiar pionowy obszaru zawartości, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3e8-190">A floating-point value that specifies the vertical size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
 <span data-ttu-id="cc3e8-191">Wartość tej właściwości jest 0.0, jeśli kontrolka edycji tekstu nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-191">The value of this property is 0.0 if the text-editing control is not configured to support scrolling.</span></span>  
  
 <span data-ttu-id="cc3e8-192">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-192">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-193">W poniższym przykładzie pokazano sposób odczytywania wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-193">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-194">Pobiera poziomy rozmiar obszaru zawartości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-194">Gets the horizontal size of the visible content area.</span></span></summary>
        <value><span data-ttu-id="cc3e8-195">Wartość zmiennoprzecinkowa, który określa poziomy rozmiar obszaru zawartości, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3e8-195">A floating-point value that specifies the horizontal size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
 <span data-ttu-id="cc3e8-196">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji tekstu nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-196">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
 <span data-ttu-id="cc3e8-197">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-197">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-198">W poniższym przykładzie pokazano sposób odczytywania wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-198">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-199">Pobiera lub Ustawia położenie przewijania w poziomie.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-199">Gets or sets the horizontal scroll position.</span></span></summary>
        <value><span data-ttu-id="cc3e8-200">Wartość zmiennoprzecinkowa, który określa położenie przewijania w poziomie w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3e8-200">A floating-point value that specifies the horizontal scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
 <span data-ttu-id="cc3e8-201">Ustawienie tej właściwości powoduje, że tekst kontrolki do przewiń do określonego przesunięcie w poziomie edycji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-201">Setting this property causes the text editing control to scroll to the specified horizontal offset.</span></span> <span data-ttu-id="cc3e8-202">Odczytywanie ta właściwość zwraca przesunięcie w bieżącym poziomie.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-202">Reading this property returns the current horizontal offset.</span></span>  
  
 <span data-ttu-id="cc3e8-203">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji tekstu nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-203">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
 <span data-ttu-id="cc3e8-204">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-204">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-205">Przesunięcie w poziomie jest mierzony z prawej strony obszaru tekstu widoczny podczas pracy w trybie od prawej do lewej; w przeciwnym razie jest mierzony z lewej strony.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-205">The horizontal offset is measured from the right of the visible text area if you are working in right-to-left mode; otherwise, it is measured from the left.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-206">W poniższym przykładzie pokazano sposób odczytywania wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-206">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc3e8-207">Aby ustawić tę właściwość na wartość ujemna jest podejmowana próba.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-207">An attempt is made to set this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-208">Pobiera lub ustawia wartość wskazującą, czy jest wyświetlany poziomy pasek przewijania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-208">Gets or sets a value that indicates whether a horizontal scroll bar is shown.</span></span></summary>
        <value><span data-ttu-id="cc3e8-209">Wartość, która jest definiowana za pomocą <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-209">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span></span>  
  
 <span data-ttu-id="cc3e8-210">Wartość domyślna to <see cref="F:System.Windows.Visibility.Hidden" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-210">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HorizontalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="cc3e8-211">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="cc3e8-211">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-212">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-212">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty>|  
|<span data-ttu-id="cc3e8-213">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="cc3e8-213">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-214">W poniższym przykładzie pokazano, jak ustawić wartość <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> właściwości przy użyciu [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3e8-214">The following example demonstrates how to set the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-215">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-215">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabled">
      <MemberSignature Language="C#" Value="public bool IsInactiveSelectionHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInactiveSelectionHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInactiveSelectionHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-216">Pobiera lub ustawia wartość wskazującą, czy pole tekstowe zawiera zaznaczonego tekstu, gdy pole tekstowe nie ma fokusa.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-216">Gets or sets a value that indicates whether the text box displays selected text when the text box does not have focus.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-217"><see langword="true" /> Jeśli pole tekstowe zawiera zaznaczonego tekstu, gdy pole tekstowe nie ma fokusa; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-217"><see langword="true" /> if the text box displays selected text when the text box does not have focus; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="cc3e8-218">Domyślnie zarejestrowanych <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-218">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="cc3e8-219">Aby uzyskać więcej informacji o to, co może mieć wpływ wartości, zobacz [pierwszeństwo wartość właściwości zależności](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-219">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInactiveSelectionHighlightEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="cc3e8-220">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="cc3e8-220">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-221">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-221">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty>|  
|<span data-ttu-id="cc3e8-222">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="cc3e8-222">Metadata properties set to `true`</span></span>|<span data-ttu-id="cc3e8-223">Brak</span><span class="sxs-lookup"><span data-stu-id="cc3e8-223">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInactiveSelectionHighlightEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-224">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-224">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-225">Pobiera lub ustawia wartość wskazującą, czy kontrolka edycji jest tylko do odczytu do interakcji z formantem użytkownika.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-225">Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-226"><see langword="true" /> Jeśli zawartość kontrolki edycji tekstu jest tylko do odczytu dla użytkownika; w przeciwnym razie zawartość kontrolki edycji tekstu może być modyfikowany przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-226"><see langword="true" /> if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user.</span></span> <span data-ttu-id="cc3e8-227">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-227">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-228">Ta wartość dotyczy tylko użytkownik, który prowadzi interakcję z formantem.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-228">This value only affects a user who is interacting with the control.</span></span> <span data-ttu-id="cc3e8-229">Zawsze można modyfikować programowo zawartość kontrolki edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-229">The contents of a text editing control can always be modified programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="cc3e8-230">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="cc3e8-230">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-231">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-231">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty>|  
|<span data-ttu-id="cc3e8-232">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="cc3e8-232">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisible">
      <MemberSignature Language="C#" Value="public bool IsReadOnlyCaretVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnlyCaretVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnlyCaretVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnlyCaretVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-233">Pobiera lub ustawia wartość wskazującą, czy pole tekstowe tylko do odczytu wyświetlana karetki.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-233">Gets or sets a value that indicates whether a read-only text box displays a caret.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-234"><see langword="true" /> Jeśli pole tekstowe tylko do odczytu wyświetlany karetkę; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-234"><see langword="true" /> if a read-only text box displays a caret; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cc3e8-235">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-235">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-236">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> jest `true`, użytkownik nadal może zaznacz i skopiuj tekst.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-236">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `true`, a user can still select and copy text.</span></span> <span data-ttu-id="cc3e8-237">Jeśli <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> również ustawiono właściwość `true`, gdy pole ma fokus klawiatury daszek będzie wyświetlana w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-237">If the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property is also set to `true`, a caret will appear in the text box when the text box has keyboard focus.</span></span> <span data-ttu-id="cc3e8-238">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> jest `false`, <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> właściwość nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-238">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `false`, the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyCaretVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyCaretVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-239">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-239">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-240">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-240">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActive">
      <MemberSignature Language="C#" Value="public bool IsSelectionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-241">Pobiera wartość wskazującą, czy pole ma fokus i zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-241">Gets a value that indicates whether the text box has focus and selected text.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-242"><see langword="true" /> Jeśli pole ma fokus i zaznaczonego tekstu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-242"><see langword="true" /> if the text box has focus and selected text; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="cc3e8-243">Domyślnie zarejestrowanych <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-243">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="cc3e8-244">Aby uzyskać więcej informacji o to, co może mieć wpływ wartości, zobacz [pierwszeństwo wartość właściwości zależności](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-244">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSelectionActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="cc3e8-245">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="cc3e8-245">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-246">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-246">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty>|  
|<span data-ttu-id="cc3e8-247">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="cc3e8-247">Metadata properties set to `true`</span></span>|<span data-ttu-id="cc3e8-248">Brak</span><span class="sxs-lookup"><span data-stu-id="cc3e8-248">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionActiveProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-249">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-249">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabled">
      <MemberSignature Language="C#" Value="public bool IsUndoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUndoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUndoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUndoEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-250">Pobiera lub ustawia wartość wskazującą, czy kontrolki edycji tekstu jest włączona obsługa cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-250">Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</span></span></summary>
        <value>
          <span data-ttu-id="cc3e8-251"><see langword="true" /> Jeśli jest włączona obsługa polecenia Cofnij; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-251"><see langword="true" /> if undo support is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cc3e8-252">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-252">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-253">Ustawienie tej właściwości na `false` spowoduje wyczyszczenie stosu cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-253">Setting this property to `false` clears the undo stack.</span></span> <span data-ttu-id="cc3e8-254">W związku z tym Jeśli wyłączysz cofania i następnie ponownie ją włączyć, polecenia Cofnij nadal działa, ponieważ stos cofania został opróżniony po wyłączeniu cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-254">Therefore, if you disable undo and then re-enable it, undo commands still do not work because the undo stack was emptied when you disabled undo.</span></span>  
  
<a name="dependencyPropertyInfo_IsUndoEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="cc3e8-255">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="cc3e8-255">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-256">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-256">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty>|  
|<span data-ttu-id="cc3e8-257">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="cc3e8-257">Metadata properties set to `true`</span></span>|<span data-ttu-id="cc3e8-258">Brak</span><span class="sxs-lookup"><span data-stu-id="cc3e8-258">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-259">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> właściwości w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3e8-259">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsUndoEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsUndoEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsUndoEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsUndoEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-260">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-260">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-261">Przewija zawartość formantu w dół o jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-261">Scrolls the contents of the control down by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-262">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-262">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase13)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-263">Przewija zawartość kontrolki do lewej strony o jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-263">Scrolls the contents of the control to the left by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-264">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-264">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase14)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-265">Przewija zawartości formantu w prawo o jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-265">Scrolls the contents of the control to the right by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-266">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-266">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase15)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-267">Przewija zawartość formantu w górę o jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-267">Scrolls the contents of the control upward by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-268">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-268">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase16)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      </Docs>
    </Member>
    <Member MemberName="LockCurrentUndoUnit">
      <MemberSignature Language="C#" Value="public void LockCurrentUndoUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LockCurrentUndoUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockCurrentUndoUnit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockCurrentUndoUnit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-269">Blokuje najnowszych modułu cofnięcia stosu cofania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-269">Locks the most recent undo unit of the undo stack of the application.</span></span> <span data-ttu-id="cc3e8-270">Zapobiega to scalane z jednostek cofania, które są następnie dodawane zablokowanego modułu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-270">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-271">Tę metodę można wywołać, gdy jednostki cofania nietekstowych zostanie dodany do stosu cofania głównego aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-271">Call this method when a non-text undo unit is added to the application's main undo stack.</span></span> <span data-ttu-id="cc3e8-272">Zapobiega to scalane z jednostek cofania, które są następnie dodawane zablokowanego modułu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-272">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-273">Jest wywoływana po zastosowaniu szablon formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-273">Is called when a control template is applied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-274">Zastępuje <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-274">Overrides <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc3e8-275">Po zaimplementowaniu w klasie pochodnej, ta metoda jest wywoływana przy każdym wywołania kodu aplikacji lub procesami wewnętrznymi <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-275">When implemented in a derived class, this method is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-276">Argumenty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-276">Arguments of the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-277">Wywoływana, gdy jest to nieobsługiwany <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> kierowanego zdarzenia osiągnie tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-277">Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="cc3e8-278">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-278">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-279">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-279">This method has no default implementation.</span></span> <span data-ttu-id="cc3e8-280">Nadal powinny wywoływać implementację podstawową, w przypadku, gdy klasa pośrednicząca w dziedziczenia zaimplementowała tej metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-280">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="cc3e8-281">Celem tej metody przypomina trochę [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: umożliwia Obsługa zdarzenia zgodnego z klasy pochodnej przy użyciu klasy obsługi zamiast obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-281">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="cc3e8-282">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-282">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="cc3e8-283">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może wywołane przez element podrzędny, który nie musi być element, który wywołuje programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-283">The implementation pattern of the On\* methods is different for routed events because the routed event might have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="cc3e8-284">W związku z tym implementacji musi uwzględniać zdarzenia właściwości źródła argumentów (i nie należy próbować ponownie zgłosić zdarzenie, które w większości przypadków).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-284">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="cc3e8-285">Podklasy <xref:System.Windows.Controls.Primitives.TextBoxBase> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-285">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="cc3e8-286">Scenariusz jest przyjmują argumentów zdarzenia i celowo oznaczanie zdarzenia jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-286">One scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-287">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-287">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-288">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-288">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-289">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-289">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-290">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-290">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-291">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragLeave" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-291">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-292">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-292">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-293">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-293">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-294">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragOver" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-294">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-295">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-295">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-296">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-296">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-297">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-297">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-298">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-298">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-299">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-299">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-300">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.GiveFeedback" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-300">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-301">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-301">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-302">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-302">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-303">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-303">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-304">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-304">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-305">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-305">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-306">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-306">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-307">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-307">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-308">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-308">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-309">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-309">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-310">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-310">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-311">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-311">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-312">Zgłasza <see cref="E:System.Windows.UIElement.LostFocus" /> zdarzeń (przy użyciu podanych argumentów).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-312">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-313">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-313">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-314">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-314">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-315">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-315">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-316">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-316">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-317">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-317">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-318">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-318">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-319">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-319">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-320">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-320">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-321">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-321">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-322">Argumenty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-322">Arguments of the event.</span></span> <span data-ttu-id="cc3e8-323">Tych argumentów zawiera szczegółowe informacje, o które myszy przycisk został wciśnięty i obsługiwanego stanu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-323">These arguments will include details about which mouse button was depressed, and the handled state.</span></span></param>
        <summary><span data-ttu-id="cc3e8-324">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseUp" /> zdarzeń osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-324">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-325">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-325">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-326">Argumenty kółka myszy, które są skojarzone z tym zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-326">The mouse wheel arguments that are associated with this event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-327">Wywoływana, gdy <see cref="E:System.Windows.UIElement.MouseWheel" /> zdarzeń jest kierowany do tej klasy (lub do klasy, która dziedziczy po tej klasie).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-327">Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-328"><xref:System.Windows.UIElement.MouseWheel> Zdarzenie wystąpi, gdy jest wycofywany kółka myszy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-328">The <xref:System.Windows.UIElement.MouseWheel> event occurs when the mouse wheel is rolled.</span></span>  
  
 <span data-ttu-id="cc3e8-329">Zastępuje <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-329">Overrides <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-330">Dane dotyczące zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-330">The event data.</span></span></param>
        <summary><span data-ttu-id="cc3e8-331">Wywoływane, gdy <see cref="E:System.Windows.UIElement.KeyDown" /> występuje.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-331">Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-332">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-332">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-333">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-333">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-334">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-334">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-335">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-335">This method has no default implementation.</span></span> <span data-ttu-id="cc3e8-336">Wywoływanie base() w implementacji nadal zaleca się, w przypadku, gdy klasa pośrednicząca w dziedziczenia zaimplementowane tej metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-336">Calling base() in your implementation is still recommended, in case an intermediate class in the inheritance implemented this method.</span></span> <span data-ttu-id="cc3e8-337">Base() należy wywołać przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-337">You may call base() either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="cc3e8-338">Celem tej metody przypomina trochę [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: umożliwia Obsługa zdarzenia zgodnego z klasy pochodnej przy użyciu klasy obsługi zamiast obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-338">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="cc3e8-339">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-339">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="cc3e8-340">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia został zgłoszony przez element podrzędny, który nie musi być element, który wywołuje programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-340">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="cc3e8-341">W związku z tym implementacji musi uwzględniać zdarzenia właściwości źródła argumentów (i nie należy próbować ponownie zgłosić zdarzenie, które w większości przypadków).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-341">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="cc3e8-342">Podklasy <xref:System.Windows.Controls.Primitives.TextBoxBase> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-342">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="cc3e8-343">Scenariusz jest przyjmują argumentów zdarzenia i zostać oznaczone jako obsługi zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-343">One scenario is to take the arguments of the event and mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected override void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-344">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-344">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-345">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-345">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-346">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-346">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-347">Argumenty, które są skojarzone z <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-347">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-348">Jest wywoływana podczas zmiany pozycji karetki lub bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-348">Is called when the caret or current selection changes position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-349">Ta metoda zgłasza <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-349">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate"><span data-ttu-id="cc3e8-350">A <see cref="T:System.Windows.Controls.ControlTemplate" /> obiekt, który określa szablon formantu, który jest obecnie aktywny.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-350">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</span></span></param>
        <param name="newTemplate"><span data-ttu-id="cc3e8-351">A <see cref="T:System.Windows.Controls.ControlTemplate" /> obiekt, który określa nowy szablon formantu do użycia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-351">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</span></span></param>
        <summary><span data-ttu-id="cc3e8-352">Jest wywoływane, gdy zmienia kontroli szablonu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-352">Is called when the control template changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-353">Zastępuje <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-353">Overrides <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (System.Windows.Controls.TextChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.Windows.Controls.TextChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As TextChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(System::Windows::Controls::TextChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.TextChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-354">Argumenty, które są skojarzone z <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-354">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-355">Jest wywoływana, gdy zmienia się zawartość w tym formancie edycji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-355">Is called when content in this editing control changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-356">Ta metoda zgłasza <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-356">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cc3e8-357">Zapewnia dane o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-357">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="cc3e8-358">Wywoływane zawsze, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> dołączone kierowanego zdarzenia osiągnie element pochodzi od tej klasy w jego trasy.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-358">Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="cc3e8-359">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-359">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-360">Przewija zawartość formantu w dół o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-360">Scrolls the contents of the control down by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-361">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-361">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase17)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-362">Przewija zawartość kontrolki do lewej strony o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-362">Scrolls the contents of the control to the left by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-363">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-363">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase18)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-364">Przewija zawartości formantu w prawo o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-364">Scrolls the contents of the control to the right by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-365">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-365">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase19)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-366">Przewija zawartości formantu w górę o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-366">Scrolls the contents of the control up by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-367">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-367">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase20)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-368">Wkleja zawartość Schowka w aktualnie zaznaczonej kontrolki edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-368">Pastes the contents of the Clipboard over the current selection in the text editing control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-369">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> metodę, aby wkleić zawartość wybranego do <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-369">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> method to paste selected content into a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase6)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-370">Cofa ostatnio polecenie cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-370">Undoes the most recent undo command.</span></span> <span data-ttu-id="cc3e8-371">Innymi słowy ponowi wykonanie ostatniego modułu cofnięcia na stos cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-371">In other words, redoes the most recent undo unit on the undo stack.</span></span></summary>
        <returns>
          <span data-ttu-id="cc3e8-372"><see langword="true" /> Jeśli operację powtórzenia zakończyło się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-372"><see langword="true" /> if the redo operation was successful; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cc3e8-373">Ta metoda zwraca <see langword="false" /> Jeśli nie ma żadnego polecenia Cofnij dostępne (stos cofania jest pusty).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-373">This method returns <see langword="false" /> if there is no undo command available (the undo stack is empty).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-374">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-374">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToEnd">
      <MemberSignature Language="C#" Value="public void ScrollToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-375">Przewija widok edycji kontrolek na końcu zawartości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-375">Scrolls the view of the editing control to the end of the content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-376">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-376">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase22)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHome">
      <MemberSignature Language="C#" Value="public void ScrollToHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHome();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-377">Przewija widok edycji kontrolek na początku okienka ekranu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-377">Scrolls the view of the editing control to the beginning of the viewport.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-378">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> metody o przewinięcie zawartości <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-378">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase21)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHorizontalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHorizontalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="cc3e8-379">Podwójna wartość określa przesunięcie przewinięcia w poziomie.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-379">A double value that specifies the horizontal offset to scroll to.</span></span></param>
        <summary><span data-ttu-id="cc3e8-380">Przewija zawartość formantu edycji określony przesunięcie w poziomie.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-380">Scrolls the contents of the editing control to the specified horizontal offset.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToVerticalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToVerticalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="cc3e8-381">Podwójna wartość określa przesunięcie przewinięcia w pionie.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-381">A double value that specifies the vertical offset to scroll to.</span></span></param>
        <summary><span data-ttu-id="cc3e8-382">Przewija zawartość formantu edycji określony przesunięcie w pionie.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-382">Scrolls the contents of the editing control to the specified vertical offset.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-383">Zaznacza zawartość kontrolki edycji tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-383">Selects all the contents of the text editing control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-384">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> metody, aby wybrać całą zawartość <xref:System.Windows.Controls.TextBox> formantu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-384">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> method to select all the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase7)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-385">Pobiera lub ustawia pędzel wyróżnia zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-385">Gets or sets the brush that highlights selected text.</span></span></summary>
        <value><span data-ttu-id="cc3e8-386">Pędzel wyróżnia zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-386">The brush that highlights selected text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-387">Można określić pędzla, który prezentuje zaznaczonego tekstu przez ustawienie <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> i <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-387">You can specify the brush that highlights selected text by setting the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> properties.</span></span> <span data-ttu-id="cc3e8-388"><xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> Właściwość określa przezroczystość <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-388">The <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property specifies the opacity of the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-389">Poniższy przykład tworzy <xref:System.Windows.Controls.TextBox> i dodaje tekst "Jest tekstem".</span><span class="sxs-lookup"><span data-stu-id="cc3e8-389">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="cc3e8-390">Ustawia przykład <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> właściwości czerwony i <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> właściwości 0,5, aby dostosować wygląd zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-390">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="cc3e8-391">Na poniższej ilustracji pokazano <xref:System.Windows.Controls.TextBox> z poprzedniego przykładu z jego zaznaczonym tekstem.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-391">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="cc3e8-392">![Pole tekstowe z czerwonym SelectionBrush](~/add/media/textboxselectionbrush.png "pole tekstowe z czerwonym SelectionBrush")</span><span class="sxs-lookup"><span data-stu-id="cc3e8-392">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="cc3e8-393">Ustaw zaznaczony tekst w polu tekstowym z SelectionBrush na czerwony</span><span class="sxs-lookup"><span data-stu-id="cc3e8-393">Selected text in a TextBox with SelectionBrush set to red</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-394">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-394">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-395">Występuje, gdy zmienia się zaznaczenie tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-395">Occurs when the text selection has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SelectionChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="cc3e8-396">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="cc3e8-396">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-397">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-397">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent>|  
|<span data-ttu-id="cc3e8-398">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="cc3e8-398">Routing strategy</span></span>|<span data-ttu-id="cc3e8-399">Propagacji</span><span class="sxs-lookup"><span data-stu-id="cc3e8-399">Bubbling</span></span>|  
|<span data-ttu-id="cc3e8-400">Delegate</span><span class="sxs-lookup"><span data-stu-id="cc3e8-400">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-401">W poniższym przykładzie pokazano sposób obsługi <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> zdarzeń przy użyciu kodu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-401">The following example demonstrates how to handle the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event by using code.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase10)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectionChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectionChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectionChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-402">Identyfikuje <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-402">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacity">
      <MemberSignature Language="C#" Value="public double SelectionOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionOpacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-403">Pobiera lub ustawia nieprzezroczystość <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-403">Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span></span></summary>
        <value><span data-ttu-id="cc3e8-404">Nieprzezroczystość <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-404">The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span></span> <span data-ttu-id="cc3e8-405">Wartość domyślna to 0,4.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-405">The default is 0.4.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-406">Jeśli <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> jest ustawiona na 0, <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> działa w sposób niewidoczny i nie jest widoczny.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-406">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 0, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is transparent and is not visible.</span></span> <span data-ttu-id="cc3e8-407">Jeśli <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> ustawiono 1.0 lub większa, <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> nieprzezroczyste i zaznaczony tekst nie jest widoczny.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-407">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 1.0 or greater, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is opaque and the selected text is not visible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-408">Poniższy przykład tworzy <xref:System.Windows.Controls.TextBox> i dodaje tekst "Jest tekstem".</span><span class="sxs-lookup"><span data-stu-id="cc3e8-408">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="cc3e8-409">Ustawia przykład <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> właściwości czerwony i <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> właściwości 0,5, aby dostosować wygląd zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-409">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="cc3e8-410">Na poniższej ilustracji pokazano <xref:System.Windows.Controls.TextBox> z poprzedniego przykładu z jego zaznaczonym tekstem.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-410">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="cc3e8-411">![Pole tekstowe z czerwonym SelectionBrush](~/add/media/textboxselectionbrush.png "pole tekstowe z czerwonym SelectionBrush")</span><span class="sxs-lookup"><span data-stu-id="cc3e8-411">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="cc3e8-412">Zaznaczony tekst w polu tekstowym z ustawioną 0,5 SelectionOpacity</span><span class="sxs-lookup"><span data-stu-id="cc3e8-412">Selected text in a TextBox with SelectionOpacity set to 0.5</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionOpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionOpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionOpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionOpacityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-413">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-413">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheck">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellCheck SpellCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SpellCheck SpellCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellCheck As SpellCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellCheck ^ SpellCheck { System::Windows::Controls::SpellCheck ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-414">Pobiera <see cref="T:System.Windows.Controls.SpellCheck" /> obiekt, który zapewnia dostęp do błędów pisowni w zawartość tekstową <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> lub <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-414">Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></summary>
        <value><span data-ttu-id="cc3e8-415">A <see cref="T:System.Windows.Controls.SpellCheck" /> obiekt, który zapewnia dostęp do błędów pisowni w zawartość tekstową <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> lub <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-415">A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span>  
  
 <span data-ttu-id="cc3e8-416">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-416">This property has no default value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.SpellingError" />
        <altmember cref="T:System.Windows.Controls.SpellingReform" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.TextChangedEventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.TextChangedEventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As TextChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::TextChangedEventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.TextChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-417">Występuje, gdy zmienia się zawartość w elemencie tekstowym.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-417">Occurs when content changes in the text element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-418">Aby uzyskać <xref:System.Windows.Controls.TextBox>, to zdarzenie występuje, gdy jego tekstu; dla <xref:System.Windows.Controls.RichTextBox>, to zdarzenie występuje, gdy dowolne zawartości lub formatowania zmiany (na przykład, obrazy, tabeli lub kolor tła).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-418">For a <xref:System.Windows.Controls.TextBox>, this event occurs when its text changes; for a <xref:System.Windows.Controls.RichTextBox>, this event occurs when any content or formatting changes (for example, images, table, or background color).</span></span>  
  
<a name="routedEventInfo_TextChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="cc3e8-419">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="cc3e8-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-420">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-420">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent>|  
|<span data-ttu-id="cc3e8-421">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="cc3e8-421">Routing strategy</span></span>|<span data-ttu-id="cc3e8-422">Propagacji</span><span class="sxs-lookup"><span data-stu-id="cc3e8-422">Bubbling</span></span>|  
|<span data-ttu-id="cc3e8-423">Delegate</span><span class="sxs-lookup"><span data-stu-id="cc3e8-423">Delegate</span></span>|<xref:System.Windows.Controls.TextChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.TextChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TextChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-424">Identyfikuje <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-424">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc3e8-425">Cofa ostatnio polecenie cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-425">Undoes the most recent undo command.</span></span> <span data-ttu-id="cc3e8-426">Innymi słowy cofa najnowszych modułu cofnięcia na stos cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-426">In other words, undoes the most recent undo unit on the undo stack.</span></span></summary>
        <returns>
          <span data-ttu-id="cc3e8-427"><see langword="true" /> Jeśli operacja cofania zakończyło się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-427"><see langword="true" /> if the undo operation was successful; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cc3e8-428">Ta metoda zwraca <see langword="false" /> Jeśli stos cofania jest pusty.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-428">This method returns <see langword="false" /> if the undo stack is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-429">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-429">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="UndoLimit">
      <MemberSignature Language="C#" Value="public int UndoLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UndoLimit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property UndoLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UndoLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-430">Pobiera lub ustawia liczbę akcji przechowywane w kolejce operacji cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-430">Gets or sets the number of actions stored in the undo queue.</span></span></summary>
        <value><span data-ttu-id="cc3e8-431">Liczba akcji przechowywane w kolejce operacji cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-431">The number of actions stored in the undo queue.</span></span> <span data-ttu-id="cc3e8-432">Wartość domyślna to 1, co oznacza, że kolejka cofania jest ograniczona do pamięci, która jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-432">The default is –1, which means the undo queue is limited to the memory that is available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-433">Ustawienie <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> czyści kolejki cofania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-433">Setting <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> clears the undo queue.</span></span> <span data-ttu-id="cc3e8-434">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> jest ustawiona na -1, kolejki cofania jest ograniczony tylko ilością pamięci, która jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-434">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to –1, the undo queue is limited only by the memory that is available.</span></span> <span data-ttu-id="cc3e8-435">Gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> jest ustawiony na wartość 0, cofania jest wyłączona na <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-435">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to 0, undo is disabled on the <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span></span>  
  
 <span data-ttu-id="cc3e8-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> wprowadzono w programie .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="cc3e8-437">Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-437">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cc3e8-438"><see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> ustawiono po wywołaniu <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> i przed wywołaniem <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-438"><see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UndoLimitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UndoLimitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UndoLimitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoLimitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UndoLimitProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-439">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-439">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> wprowadzono w programie .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> is introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="cc3e8-441">Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="cc3e8-441">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-442">Pobiera lub Ustawia położenie przewijania pionowego.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-442">Gets or sets the vertical scroll position.</span></span></summary>
        <value><span data-ttu-id="cc3e8-443">Wartość zmiennoprzecinkowa, który określa położenie przewijania pionowego, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3e8-443">A floating-point value that specifies the vertical scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
 <span data-ttu-id="cc3e8-444">Ustawienie tej właściwości powoduje, że tekst kontrolki do przewiń do określonego przesunięcie w pionie edycji.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-444">Setting this property causes the text editing control to scroll to the specified vertical offset.</span></span> <span data-ttu-id="cc3e8-445">Odczytywanie ta właściwość zwraca bieżące przesunięcie w pionie.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-445">Reading this property returns the current vertical offset.</span></span>  
  
 <span data-ttu-id="cc3e8-446">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji tekstu nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-446">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
 <span data-ttu-id="cc3e8-447">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-447">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3e8-448">Przesunięcie w pionie jest mierzony od górnej krawędzi obszaru tekstu widoczne.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-448">The vertical offset is measured from the top of the visible text area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3e8-449">W poniższym przykładzie pokazano sposób odczytywania wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-449">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc3e8-450">Aby ustawić tę właściwość na wartość ujemna jest podejmowana próba.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-450">An attempt is made to set this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-451">Pobiera lub ustawia wartość wskazującą, czy jest wyświetlany pionowy pasek przewijania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-451">Gets or sets a value that indicates whether a vertical scroll bar is shown.</span></span></summary>
        <value><span data-ttu-id="cc3e8-452">Wartość, która jest definiowana za pomocą <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-452">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span></span>  
  
 <span data-ttu-id="cc3e8-453">Wartość domyślna to <see cref="F:System.Windows.Visibility.Hidden" />.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-453">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_VerticalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="cc3e8-454">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="cc3e8-454">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="cc3e8-455">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="cc3e8-455">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty>|  
|<span data-ttu-id="cc3e8-456">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="cc3e8-456">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="T:System.Windows.Controls.ScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-457">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-457">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-458">Pobiera pionowy rozmiar przewijany obszar zawartości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-458">Gets the vertical size of the scrollable content area.</span></span></summary>
        <value><span data-ttu-id="cc3e8-459">Wartość zmiennoprzecinkowa, określająca rozmiar pionowy przewijany obszar zawartości, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3e8-459">A floating-point value that specifies the vertical size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
 <span data-ttu-id="cc3e8-460">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji tekstu nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-460">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
 <span data-ttu-id="cc3e8-461">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-461">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-462">W poniższym przykładzie pokazano sposób odczytywania wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-462">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc3e8-463">Pobiera poziomy rozmiar przewijany obszar zawartości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-463">Gets the horizontal size of the scrollable content area.</span></span></summary>
        <value><span data-ttu-id="cc3e8-464">Wartość zmiennoprzecinkowa, określająca poziomy rozmiar przewijany obszar zawartości, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3e8-464">A floating-point value that specifies the horizontal size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
 <span data-ttu-id="cc3e8-465">Wartość tej właściwości jest 0,0, jeśli kontrolka edycji tekstu nie jest skonfigurowany do obsługi przewijania.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-465">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
 <span data-ttu-id="cc3e8-466">Ta właściwość nie ma wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-466">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc3e8-467">W poniższym przykładzie pokazano sposób odczytywania wartości <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc3e8-467">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
  </Members>
</Type>