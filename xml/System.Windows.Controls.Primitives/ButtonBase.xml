<Type Name="ButtonBase" FullName="System.Windows.Controls.Primitives.ButtonBase">
  <TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Controls.ContentControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ButtonBase extends System.Windows.Controls.ContentControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits ContentControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Controls::ContentControl, System::Windows::Input::ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Button)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="13e6d-101">Reprezentuje klasę podstawową dla wszystkich <see cref="T:System.Windows.Controls.Button" /> kontrolki.</span><span class="sxs-lookup"><span data-stu-id="13e6d-101">Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-102">Obsługa <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń odpowiadać, gdy użytkownik kliknie <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-102">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="13e6d-103">Użytkownik może zgłaszać <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń za pomocą <xref:System.Windows.Controls.AccessText> lub naciskając klawisz ENTER lub spację, gdy formant ma fokus.</span><span class="sxs-lookup"><span data-stu-id="13e6d-103">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="13e6d-104">Gdy użytkownik naciśnie spację, ustawia sterowania <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> do `true` i przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="13e6d-104">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="13e6d-105">W związku z tym formant będzie wywoływanie zdarzeń myszy takich jak <xref:System.Windows.UIElement.MouseEnter> i <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-105">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="13e6d-106">Należy pamiętać, że przy użyciu <xref:System.Windows.Controls.AccessText> lub ENTER nie powoduje zmiany <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> lub przechwytywanie myszy, ale także podnieść go <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-106">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="13e6d-107"><xref:System.Windows.Controls.Primitives.ButtonBase> Ustawia <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> dołączona właściwość do `true`.</span><span class="sxs-lookup"><span data-stu-id="13e6d-107">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.</span></span>  
  
 <span data-ttu-id="13e6d-108"><xref:System.Windows.Controls.Primitives.ButtonBase> Ustawia <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="13e6d-108">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="13e6d-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> jest <xref:System.Windows.Controls.ContentControl>, co oznacza, że może zawierać pojedynczy obiekt dowolnego typu (np. ciąg, obrazu lub panelu).</span><span class="sxs-lookup"><span data-stu-id="13e6d-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="13e6d-110">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ContentControl> klasy.</span><span class="sxs-lookup"><span data-stu-id="13e6d-110">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13e6d-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="13e6d-111">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-112">Występuje, gdy <see cref="T:System.Windows.Controls.Button" /> zostanie kliknięty.</span><span class="sxs-lookup"><span data-stu-id="13e6d-112">Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-113">Użytkownik może zgłaszać <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń za pomocą <xref:System.Windows.Controls.AccessText> lub naciskając klawisz ENTER lub spację, gdy formant ma fokus.</span><span class="sxs-lookup"><span data-stu-id="13e6d-113">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="13e6d-114">Gdy użytkownik naciśnie spację, ustawia sterowania <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> do `true` i przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="13e6d-114">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="13e6d-115">W związku z tym formant będzie wywoływanie zdarzeń myszy takich jak <xref:System.Windows.UIElement.MouseEnter> i <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-115">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="13e6d-116">Należy pamiętać, że przy użyciu <xref:System.Windows.Controls.AccessText> lub ENTER nie powoduje zmiany <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> lub przechwytywanie myszy, ale także podnieść go <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-116">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="13e6d-117"><xref:System.Windows.Controls.Primitives.ButtonBase> Znaczniki <xref:System.Windows.UIElement.MouseLeftButtonDown> zdarzeń jako obsługiwane w <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> — metoda i zgłasza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-117">The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span> <span data-ttu-id="13e6d-118">W związku z tym <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> nigdy nie wystąpi zdarzenie dla formantu, który dziedziczy z <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-118">Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="13e6d-119">Zamiast tego należy dołączyć program obsługi zdarzeń do <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zdarzenia lub wywołanie <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` ustawioną `true`.</span><span class="sxs-lookup"><span data-stu-id="13e6d-119">Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="13e6d-120">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="13e6d-120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13e6d-121">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13e6d-121">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|  
|<span data-ttu-id="13e6d-122">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="13e6d-122">Routing strategy</span></span>|<span data-ttu-id="13e6d-123">Bubbling</span><span class="sxs-lookup"><span data-stu-id="13e6d-123">Bubbling</span></span>|  
|<span data-ttu-id="13e6d-124">Delegate</span><span class="sxs-lookup"><span data-stu-id="13e6d-124">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="13e6d-125">W poniższym przykładzie przedstawiono trzy przyciski, które odpowiadanie na kliknięcia na trzy różne sposoby.</span><span class="sxs-lookup"><span data-stu-id="13e6d-125">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="13e6d-126">Hover - przycisku pierwszej zmiany kolorów, gdy użytkownik znajduje się za pomocą myszy nad przycisku</span><span class="sxs-lookup"><span data-stu-id="13e6d-126">Hover - the first button changes colors when the user hovers with the mouse over the button</span></span>  
  
-   <span data-ttu-id="13e6d-127">Naciśnij klawisz - drugiego przycisku wymaga nacisnąć przycisk myszy, gdy wskaźnik myszy znajduje się przycisk.</span><span class="sxs-lookup"><span data-stu-id="13e6d-127">Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.</span></span>  
  
-   <span data-ttu-id="13e6d-128">Release - trzeci nie powoduje resetowania kolor tła przycisków, dopóki wskaźnik myszy jest wciśnięty i wydane w ramach przycisku.</span><span class="sxs-lookup"><span data-stu-id="13e6d-128">Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-129">Identyfikuje <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-129">Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-130">To zdarzenie odnosi się po lewej stronie kliknięcie przycisku.</span><span class="sxs-lookup"><span data-stu-id="13e6d-130">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ClickMode ClickMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ClickMode ClickMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClickMode As ClickMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ClickMode ClickMode { System::Windows::Controls::ClickMode get(); void set(System::Windows::Controls::ClickMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ClickMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-131">Pobiera lub ustawia, kiedy <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13e6d-131">Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span></span></summary>
        <value><span data-ttu-id="13e6d-132">Gdy <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13e6d-132">When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span></span> <span data-ttu-id="13e6d-133">Wartość domyślna to <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span><span class="sxs-lookup"><span data-stu-id="13e6d-133">The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ClickMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13e6d-134">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13e6d-134">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13e6d-135">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13e6d-135">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|  
|<span data-ttu-id="13e6d-136">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="13e6d-136">Metadata properties set to `true`</span></span>|<span data-ttu-id="13e6d-137">Brak</span><span class="sxs-lookup"><span data-stu-id="13e6d-137">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClickModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClickModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClickModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-138">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="13e6d-138">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-139">Pobiera lub ustawia polecenie wywoływane po kliknięciu przycisku.</span><span class="sxs-lookup"><span data-stu-id="13e6d-139">Gets or sets the command to invoke when this button is pressed.</span></span></summary>
        <value><span data-ttu-id="13e6d-140">Polecenie wywoływane po kliknięciu przycisku.</span><span class="sxs-lookup"><span data-stu-id="13e6d-140">A command to invoke when this button is pressed.</span></span> <span data-ttu-id="13e6d-141">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13e6d-141">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-142">Ta właściwość jest używana do skojarzenia z wystąpieniem określonego przycisku polecenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-142">This property is used to associate a command with a particular button instance.</span></span>  
  
 <span data-ttu-id="13e6d-143">W [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], ta właściwość ma najczęściej wartość jako wartość polecenia statyczne z jednego z istniejących bibliotek polecenia, takich jak <xref:System.Windows.Input.ApplicationCommands> lub <xref:System.Windows.Input.NavigationCommands>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>.</span></span> <span data-ttu-id="13e6d-144">Aby uzyskać więcej informacji, zobacz [droższe omówienie](~/docs/framework/wpf/advanced/commanding-overview.md) lub <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-144">For details, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md) or <xref:System.Windows.Input.ICommand>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="13e6d-145">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="13e6d-145">XAML Attribute Usage</span></span>  
  
```  
<object Command="commandName"/>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="13e6d-146">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="13e6d-146">XAML Values</span></span>  
 <span data-ttu-id="13e6d-147">*commandName*</span><span class="sxs-lookup"><span data-stu-id="13e6d-147">*commandName*</span></span>  
 <span data-ttu-id="13e6d-148">Polecenie wywoływane po kliknięciu przycisku.</span><span class="sxs-lookup"><span data-stu-id="13e6d-148">The command to invoke when this button is pressed.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13e6d-149">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13e6d-149">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13e6d-150">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13e6d-150">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|  
|<span data-ttu-id="13e6d-151">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="13e6d-151">Metadata properties set to `true`</span></span>|<span data-ttu-id="13e6d-152">Brak</span><span class="sxs-lookup"><span data-stu-id="13e6d-152">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-153">Pobiera lub Ustawia parametr do przekazania do <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="13e6d-153">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span></span></summary>
        <value><span data-ttu-id="13e6d-154">Parametr do przekazania do <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="13e6d-154">Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-155">Większość istniejących poleceń z bibliotek polecenia należy używać parametru polecenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-155">Most existing commands from the command libraries do not use a command parameter.</span></span> <span data-ttu-id="13e6d-156">Poleceń, które korzystają z parametrem polecenia większość z nich zająć parametr o niektórych wartości typu pierwotnego, takie jak liczba całkowita lub ciąg.</span><span class="sxs-lookup"><span data-stu-id="13e6d-156">Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</span></span> <span data-ttu-id="13e6d-157">Jednak można tworzyć niestandardowe polecenia jest, gdzie to polecenie oczekuje typu nonprimitive jako jego parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-157">However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</span></span> <span data-ttu-id="13e6d-158">W przypadku polecenia niestandardowych, takich jak to ustawienie <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> kodu może wymagać wystąpienie nowego lub istniejącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="13e6d-158">For a custom command case like this, setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in code might require a new or existing object instance.</span></span> <span data-ttu-id="13e6d-159">Ustawienie <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> w znaczniku może wymagać składni elementu właściwości, gdzie element object wypełnianie składni elementu właściwości to nowy element w typ oczekiwany przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="13e6d-159">Setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</span></span> <span data-ttu-id="13e6d-160">Możesz też ustawienie w znaczniku może wymagać odwołanie za pośrednictwem rozszerzenia znaczników do istniejącego obiektu (zwykle te odwołania są wykonywane przy [powiązanie — rozszerzenie znaczników](~/docs/framework/wpf/advanced/binding-markup-extension.md) lub [StaticResource — rozszerzenie znaczników ](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span><span class="sxs-lookup"><span data-stu-id="13e6d-160">Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="13e6d-161">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="13e6d-161">XAML Attribute Usage</span></span>  
  
```  
<object CommandParameter="commandParameter" />  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="13e6d-162">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="13e6d-162">XAML Values</span></span>  
 <span data-ttu-id="13e6d-163">*commandParameter*</span><span class="sxs-lookup"><span data-stu-id="13e6d-163">*commandParameter*</span></span>  
 <span data-ttu-id="13e6d-164">Wartość tego samego typu co konkretnego polecenia określone w <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> oczekuje właściwości.</span><span class="sxs-lookup"><span data-stu-id="13e6d-164">A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects.</span></span> <span data-ttu-id="13e6d-165">Jeśli używasz istniejącego polecenia biblioteki polecenia, zobacz dokumentację tej biblioteki polecenia dla [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacje dotyczące użycia typu w tym <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> polecenie oczekuje.</span><span class="sxs-lookup"><span data-stu-id="13e6d-165">If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage information, including which type of <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> the command expects.</span></span> <span data-ttu-id="13e6d-166">Jeśli używasz polecenia niestandardowych, zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="13e6d-166">If you use a custom command, see Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13e6d-167">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13e6d-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13e6d-168">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13e6d-168">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|  
|<span data-ttu-id="13e6d-169">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="13e6d-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="13e6d-170">Brak</span><span class="sxs-lookup"><span data-stu-id="13e6d-170">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-171">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="13e6d-171">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-172">Identyfikuje routingiem <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="13e6d-172">Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-173">Pobiera lub ustawia element, dla którego zostanie wywołane określone polecenie.</span><span class="sxs-lookup"><span data-stu-id="13e6d-173">Gets or sets the element on which to raise the specified command.</span></span></summary>
        <value><span data-ttu-id="13e6d-174">Element, na którym należy wywołać polecenie.</span><span class="sxs-lookup"><span data-stu-id="13e6d-174">Element on which to raise a command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-175"><xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> Właściwości nie można użyć do zdefiniowania <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-175">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property cannot be used to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="13e6d-176"><xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> Właściwość zawiera odwołanie do elementu, który jest już zdefiniowany gdzieś w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-176">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property provides a reference to an element that is already defined somewhere in your application.</span></span>  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="13e6d-177">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="13e6d-177">XAML Attribute Usage</span></span>  
  
```  
<ButtonBase CommandTarget="{Binding ElementName= elementName }"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="13e6d-178">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="13e6d-178">XAML Values</span></span>  
 <span data-ttu-id="13e6d-179">*elementName*</span><span class="sxs-lookup"><span data-stu-id="13e6d-179">*elementName*</span></span>  
 <span data-ttu-id="13e6d-180">Nazwa <xref:System.Windows.IInputElement> który odbierze polecenie.</span><span class="sxs-lookup"><span data-stu-id="13e6d-180">The name of <xref:System.Windows.IInputElement> that receives the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13e6d-181">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13e6d-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13e6d-182">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13e6d-182">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|  
|<span data-ttu-id="13e6d-183">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="13e6d-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="13e6d-184">Brak</span><span class="sxs-lookup"><span data-stu-id="13e6d-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-185">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="13e6d-185">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-186">Pobiera wartość <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="13e6d-186">Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="13e6d-187"><see langword="true" /> Jeśli formant jest włączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13e6d-187"><see langword="true" /> if the control is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-188">Jeśli chcesz przesłonić tę implementację, należy upewnić się, że należy wywołać metodę podstawową.</span><span class="sxs-lookup"><span data-stu-id="13e6d-188">If you choose to override this implementation, make certain that you call the base method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-189">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> jest aktywowany.</span><span class="sxs-lookup"><span data-stu-id="13e6d-189">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.</span></span></summary>
        <value>
          <span data-ttu-id="13e6d-190"><see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> jest aktywowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13e6d-190"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise <see langword="false" />.</span></span> <span data-ttu-id="13e6d-191">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13e6d-191">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> jest w stanie przycisku, który wskazuje lewego przycisku myszy lub naciśnięciu spacja na przycisku.</span><span class="sxs-lookup"><span data-stu-id="13e6d-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</span></span> <span data-ttu-id="13e6d-193">Gdy <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> jest `true`, formantu przechwytuje mysz.</span><span class="sxs-lookup"><span data-stu-id="13e6d-193">When <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, the control captures the mouse.</span></span>  <span data-ttu-id="13e6d-194">W związku z tym formant będzie wywoływanie zdarzeń myszy takich jak <xref:System.Windows.UIElement.MouseEnter> i <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-194">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="13e6d-195">Należy pamiętać, że przy użyciu <xref:System.Windows.Controls.AccessText> lub ENTER nie powoduje zmiany <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> lub przechwytywanie myszy, ale jest Zgłoś ma <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-195">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="13e6d-196">Począwszy od programu .NET Framework w wersji 3.0 z dodatkiem Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ma chronione metody ustawiającej.</span><span class="sxs-lookup"><span data-stu-id="13e6d-196">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> has a protected setter.</span></span> <span data-ttu-id="13e6d-197">Aby używać tej funkcji, aplikacja powinna wskazywać .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="13e6d-197">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="13e6d-198">Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="13e6d-198">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13e6d-199">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13e6d-199">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13e6d-200">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13e6d-200">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|  
|<span data-ttu-id="13e6d-201">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="13e6d-201">Metadata properties set to `true`</span></span>|<span data-ttu-id="13e6d-202">Brak</span><span class="sxs-lookup"><span data-stu-id="13e6d-202">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="13e6d-203">Ten przykład przedstawia sposób użycia <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> właściwości stylu wyzwalacza.</span><span class="sxs-lookup"><span data-stu-id="13e6d-203">This example shows how to use the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property in a trigger style.</span></span>  
  
 [!code-xaml[BtnColor#9](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnColor/CSharp/Pane1.xaml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e6d-204">Identyfikuje <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="13e6d-204">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-205">Dane zdarzenia <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-205">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span></span></param>
        <summary><span data-ttu-id="13e6d-206">Odpowiada podczas <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> jest nazywana tego formantu.</span><span class="sxs-lookup"><span data-stu-id="13e6d-206">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-207">Jeśli <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> jest `true`, ta metoda wywołuje Podstawowa implementacja przenosi fokus tego formantu.</span><span class="sxs-lookup"><span data-stu-id="13e6d-207">If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.</span></span>  <span data-ttu-id="13e6d-208">W przeciwnym razie ta metoda zgłasza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-208">Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13e6d-209">Zgłasza <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-209">Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-210">Kontrolka wywołuje <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzenia przez wywołanie metody <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-210">The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="13e6d-211">Aby uzyskać więcej informacji, zobacz [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="13e6d-211">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="13e6d-212">W przypadku przesłaniania <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-212">When overriding <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsPressedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsPressedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsPressedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsPressedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsPressedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-213">Dane <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="13e6d-213">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="13e6d-214">Wywoływane, gdy <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="13e6d-214">Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-215">Dane dotyczące zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-215">The event data.</span></span></param>
        <summary><span data-ttu-id="13e6d-216">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.KeyDown" /> kierowanego zdarzenia, który występuje, gdy użytkownik naciśnie klawisza, gdy formant ma fokus.</span><span class="sxs-lookup"><span data-stu-id="13e6d-216">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-217">Ta implementacja oznacza <xref:System.Windows.UIElement.KeyDown> zdarzeń jako obsługiwany dzięki ustawieniu <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości danych zdarzenia `true` podczas <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nie jest ustawiony na <xref:System.Windows.Controls.ClickMode.Hover> i spełnione są jednym z następujących przypadków:</span><span class="sxs-lookup"><span data-stu-id="13e6d-217">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and one of the following cases are true:</span></span>  
  
-   <span data-ttu-id="13e6d-218">Użytkownik naciska klawisz spacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-218">The user presses the SPACEBAR.</span></span>  
  
-   <span data-ttu-id="13e6d-219">Użytkownik naciśnie ENTER i <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> jest `true` dla tego formantu.</span><span class="sxs-lookup"><span data-stu-id="13e6d-219">The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.</span></span>  
  
 <span data-ttu-id="13e6d-220">We wszystkich innych przypadkach ta implementacja nie zmienia obsługiwanego stanu ( <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości) z <xref:System.Windows.UIElement.KeyDown> danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-220">In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="13e6d-221">Jeśli można zastąpić <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-221">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="13e6d-222">Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych.</span><span class="sxs-lookup"><span data-stu-id="13e6d-222">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="13e6d-223">W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</span><span class="sxs-lookup"><span data-stu-id="13e6d-223">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-224">Dane zdarzenia <see cref="E:System.Windows.UIElement.KeyUp" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-224">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span></span></param>
        <summary><span data-ttu-id="13e6d-225">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.KeyUp" /> kierowanego zdarzenia, który występuje, gdy użytkownik zwolni klawisz, gdy formant ma fokus.</span><span class="sxs-lookup"><span data-stu-id="13e6d-225">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-226">Ta implementacja oznacza <xref:System.Windows.UIElement.KeyUp> zdarzeń jako obsługiwany dzięki ustawieniu <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości danych zdarzenia `true` gdy użytkownik zwolni klawisz spacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-226">This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR.</span></span> <span data-ttu-id="13e6d-227">W przeciwnym razie ta implementacja nie zmienia obsługiwanego stanu ( <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości) z <xref:System.Windows.UIElement.KeyUp> danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-227">Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="13e6d-228">Jeśli można zastąpić <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-228">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="13e6d-229">Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych.</span><span class="sxs-lookup"><span data-stu-id="13e6d-229">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="13e6d-230">W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</span><span class="sxs-lookup"><span data-stu-id="13e6d-230">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-231">Dane zdarzenia <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-231">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="13e6d-232">Wywoływane, gdy element utraci fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="13e6d-232">Called when an element loses keyboard focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-233">Dane zdarzenia <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-233">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</span></span></param>
        <summary><span data-ttu-id="13e6d-234">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.LostMouseCapture" /> kierowanego zdarzenia, gdy ten formant nie jest otrzymują komunikaty zdarzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="13e6d-234">Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-235">Ta implementacja nie zmienia stanu obsługiwany ( <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości) z <xref:System.Windows.UIElement.LostMouseCapture> danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-235">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="13e6d-236">Jeśli można zastąpić <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-236">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="13e6d-237">Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych.</span><span class="sxs-lookup"><span data-stu-id="13e6d-237">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="13e6d-238">W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</span><span class="sxs-lookup"><span data-stu-id="13e6d-238">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-239">Dane zdarzenia <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-239">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span></span></param>
        <summary><span data-ttu-id="13e6d-240">Udostępnia klasę obsługi <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> kierowanego zdarzenia, który występuje, gdy mysz przejdzie tego formantu.</span><span class="sxs-lookup"><span data-stu-id="13e6d-240">Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-241">Podczas <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> ma ustawioną wartość <xref:System.Windows.Controls.ClickMode.Hover>, oznacza to implementacja <xref:System.Windows.UIElement.MouseEnter> zdarzeń jako obsługiwany dzięki ustawieniu <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości danych zdarzenia `true` i zgłasza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-241">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="13e6d-242">Jeśli można zastąpić <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-242">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="13e6d-243">Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych.</span><span class="sxs-lookup"><span data-stu-id="13e6d-243">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="13e6d-244">W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</span><span class="sxs-lookup"><span data-stu-id="13e6d-244">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-245">Dane zdarzenia <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-245">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span></span></param>
        <summary><span data-ttu-id="13e6d-246">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.MouseLeave" /> kierowanego zdarzenia, który występuje, gdy mysz opuści elementu.</span><span class="sxs-lookup"><span data-stu-id="13e6d-246">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-247">Ta implementacja oznacza <xref:System.Windows.UIElement.MouseLeave> zdarzeń jako obsługiwany dzięki ustawieniu <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości danych zdarzenia `true` podczas <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> ma ustawioną wartość <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-247">This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="13e6d-248">Jeśli można zastąpić <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-248">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="13e6d-249">Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych.</span><span class="sxs-lookup"><span data-stu-id="13e6d-249">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="13e6d-250">W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</span><span class="sxs-lookup"><span data-stu-id="13e6d-250">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-251">Dane dotyczące zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-251">The event data.</span></span></param>
        <summary><span data-ttu-id="13e6d-252">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> kierowanego zdarzenia, która występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tego formantu.</span><span class="sxs-lookup"><span data-stu-id="13e6d-252">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-253">Ta implementacja oznacza <xref:System.Windows.UIElement.MouseLeftButtonDown> zdarzeń jako obsługiwany dzięki ustawieniu <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości danych zdarzenia `true` podczas <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nie jest ustawiony na <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-253">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="13e6d-254">Aby odpowiedzieć na <xref:System.Windows.UIElement.MouseLeftButtonDown> zdarzeń, dołączyć program obsługi zdarzeń do <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zdarzenia lub wywołanie <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` ustawioną `true`.</span><span class="sxs-lookup"><span data-stu-id="13e6d-254">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="13e6d-255">Gdy <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> ustawiono <xref:System.Windows.Controls.ClickMode.Press>, ta metoda zgłasza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-255">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Press>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="13e6d-256">Jeśli można zastąpić <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-256">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span></span> <span data-ttu-id="13e6d-257">Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych.</span><span class="sxs-lookup"><span data-stu-id="13e6d-257">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="13e6d-258">W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</span><span class="sxs-lookup"><span data-stu-id="13e6d-258">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-259">Dane dotyczące zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-259">The event data.</span></span></param>
        <summary><span data-ttu-id="13e6d-260">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> kierowanego zdarzenia, która występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tego formantu.</span><span class="sxs-lookup"><span data-stu-id="13e6d-260">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-261">Ta implementacja oznacza <xref:System.Windows.UIElement.MouseLeftButtonUp> zdarzeń jako obsługiwany dzięki ustawieniu <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości danych zdarzenia `true` podczas <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nie jest ustawiony na <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-261">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="13e6d-262">Aby odpowiedzieć na <xref:System.Windows.UIElement.MouseLeftButtonUp> zdarzeń, dołączyć program obsługi zdarzeń do <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> zdarzenia lub wywołanie <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` ustawioną `true`.</span><span class="sxs-lookup"><span data-stu-id="13e6d-262">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="13e6d-263">Gdy <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> ustawiono <xref:System.Windows.Controls.ClickMode.Release> jest <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> jest `true`, ta metoda zgłasza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="13e6d-263">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Release> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="13e6d-264">Jeśli można zastąpić <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-264">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span></span> <span data-ttu-id="13e6d-265">Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych.</span><span class="sxs-lookup"><span data-stu-id="13e6d-265">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="13e6d-266">W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</span><span class="sxs-lookup"><span data-stu-id="13e6d-266">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13e6d-267">Dane dotyczące zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13e6d-267">The event data.</span></span></param>
        <summary><span data-ttu-id="13e6d-268">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.MouseMove" /> kierowanego zdarzenia, który występuje, gdy wskaźnik myszy porusza się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="13e6d-268">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-269">Ta implementacja oznacza <xref:System.Windows.UIElement.MouseMove> zdarzeń jako obsługiwany dzięki ustawieniu <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości danych zdarzenia `true` podczas <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nie jest ustawiony na <xref:System.Windows.Controls.ClickMode.Hover> i <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> jest `true`.</span><span class="sxs-lookup"><span data-stu-id="13e6d-269">This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`.</span></span> <span data-ttu-id="13e6d-270">Aby odpowiedzieć na <xref:System.Windows.UIElement.MouseMove> zdarzeń, dołączyć program obsługi zdarzeń do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzenia lub wywołanie <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` ustawioną `true`.</span><span class="sxs-lookup"><span data-stu-id="13e6d-270">To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="13e6d-271">Jeśli można zastąpić <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="13e6d-271">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="13e6d-272">Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych.</span><span class="sxs-lookup"><span data-stu-id="13e6d-272">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="13e6d-273">W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</span><span class="sxs-lookup"><span data-stu-id="13e6d-273">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo"><span data-ttu-id="13e6d-274">Określa zmiany rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="13e6d-274">Specifies the size changes.</span></span></param>
        <summary><span data-ttu-id="13e6d-275">Wywoływane, gdy zmieni się rozmiar renderowanych formantu.</span><span class="sxs-lookup"><span data-stu-id="13e6d-275">Called when the rendered size of a control changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e6d-276">Zastępuje <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> metody <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="13e6d-276">Overrides the <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> method of the <xref:System.Windows.UIElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>