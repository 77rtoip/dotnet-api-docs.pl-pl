<Type Name="MenuBase" FullName="System.Windows.Controls.Primitives.MenuBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbe42da7f5b65a33bbcf8860ace8fc84564d7c4b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69220923" /></Metadata><TypeSignature Language="C#" Value="public abstract class MenuBase : System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract MenuBase extends System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MenuBase&#xA;Inherits ItemsControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuBase abstract : System::Windows::Controls::ItemsControl" />
  <TypeSignature Language="F#" Value="type MenuBase = class&#xA;    inherit ItemsControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ItemsControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="319e1-101">Reprezentuje kontrolkę, która definiuje wybór dla użytkowników do wybrania.</span><span class="sxs-lookup"><span data-stu-id="319e1-101">Represents a control that defines choices for users to select.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="319e1-102"><xref:System.Windows.Controls.Primitives.MenuBase> Jest klasą bazową dla formantów, które definiują wybór dla użytkowników do wybrania.</span><span class="sxs-lookup"><span data-stu-id="319e1-102">The <xref:System.Windows.Controls.Primitives.MenuBase> is the base class for controls that define choices for users to select.</span></span> <span data-ttu-id="319e1-103"><xref:System.Windows.Controls.Menu> I Dziedzicz<xref:System.Windows.Controls.ContextMenu> od iZezwalajużytkownikowi<xref:System.Windows.Controls.Primitives.MenuBase> na wybranie elementu do wywołania niektórych akcji.</span><span class="sxs-lookup"><span data-stu-id="319e1-103">The <xref:System.Windows.Controls.Menu> and <xref:System.Windows.Controls.ContextMenu> inherit from <xref:System.Windows.Controls.Primitives.MenuBase> and allow the user to select an item to invoke some action.</span></span>  
  
 <span data-ttu-id="319e1-104"><xref:System.Windows.Controls.Primitives.MenuBase><xref:System.Windows.Controls.ItemsControl>jest, co oznacza, że może zawierać kolekcję obiektów dowolnego typu (na przykład ciąg, obraz lub panel).</span><span class="sxs-lookup"><span data-stu-id="319e1-104"><xref:System.Windows.Controls.Primitives.MenuBase> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="319e1-105">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ItemsControl> Klasa.</span><span class="sxs-lookup"><span data-stu-id="319e1-105">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MenuBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MenuBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="319e1-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="319e1-106">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="menuBase.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="319e1-107">Tworzy lub identyfikuje element używany do wyświetlania określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="319e1-107">Creates or identifies the element used to display the specified item.</span></span></summary>
        <returns><span data-ttu-id="319e1-108">Element służący do wyświetlania określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="319e1-108">The element used to display the specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected virtual void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuBase.HandleMouseButton e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="319e1-109">Dane zdarzenia dla zdarzenia myszy.</span><span class="sxs-lookup"><span data-stu-id="319e1-109">The event data for a mouse event.</span></span></param>
        <summary><span data-ttu-id="319e1-110">Wywoływana po naciśnięciu lub zwolnienia przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="319e1-110">Called when a mouse button is pressed or released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="menuBase.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="319e1-111">Element, aby sprawdzić, czy jest kontenerem elementu.</span><span class="sxs-lookup"><span data-stu-id="319e1-111">The item to check whether it is an item container.</span></span></param>
        <summary><span data-ttu-id="319e1-112">Określa, czy określony element jest, czy może być, jego własny kontener elementów.</span><span class="sxs-lookup"><span data-stu-id="319e1-112">Determines whether the specified item is, or is eligible to be, its own item container.</span></span></summary>
        <returns><span data-ttu-id="319e1-113"><see langword="true" />Jeśli element jest <see cref="T:System.Windows.Controls.MenuItem" /> lub a <see cref="T:System.Windows.Controls.Separator" />; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="319e1-113"><see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerTemplateSelector As ItemContainerTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemContainerTemplateSelector ^ ItemContainerTemplateSelector { System::Windows::Controls::ItemContainerTemplateSelector ^ get(); void set(System::Windows::Controls::ItemContainerTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerTemplateSelector : System.Windows.Controls.ItemContainerTemplateSelector with get, set" Usage="System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="319e1-114">Pobiera lub ustawia logikę niestandardową służącą do wybierania szablonu używanego do wyświetlania każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="319e1-114">Gets or sets the custom logic for choosing a template used to display each item.</span></span></summary>
        <value><span data-ttu-id="319e1-115">Obiekt niestandardowy, który udostępnia logikę i zwraca kontener elementów.</span><span class="sxs-lookup"><span data-stu-id="319e1-115">A custom object that provides logic and returns an item container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="319e1-116"><xref:System.Windows.Controls.ItemContainerTemplateSelector> Użyj do wybierania różnych kontenerów elementów, jeśli elementy w kolekcji są tego samego typu, a musisz dostarczyć logikę niestandardową, aby wybrać kontener elementów.</span><span class="sxs-lookup"><span data-stu-id="319e1-116">Use an <xref:System.Windows.Controls.ItemContainerTemplateSelector> to choose different item containers if the items in your collection are the same type and you need to provide custom logic to choose the item container.</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="319e1-117">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="319e1-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="319e1-118">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="319e1-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty>|  
|<span data-ttu-id="319e1-119">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="319e1-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="319e1-120">Brak</span><span class="sxs-lookup"><span data-stu-id="319e1-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemContainerTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="319e1-121">Identyfikuje właściwość <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="319e1-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="menuBase.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="319e1-122">Dane zdarzenia dla <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="319e1-122">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="319e1-123">Reaguje na zmianę <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="319e1-123">Responds to a change to the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menuBase.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="319e1-124">Dane zdarzenia dla <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="319e1-124">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></param>
        <summary><span data-ttu-id="319e1-125">Zapewnia obsługę klas dla <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzenia kierowanego, które występuje, gdy użytkownik naciśnie klawisz.</span><span class="sxs-lookup"><span data-stu-id="319e1-125">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="319e1-126">Jeśli użytkownik naciśnie klawisz ESC, Alt + Alt lub ALT + F10, ta implementacja oznacza <xref:System.Windows.UIElement.KeyDown> zdarzenie jako obsługiwane przez <xref:System.Windows.RoutedEventArgs.Handled%2A> ustawienie właściwości danych zdarzenia na `true`.</span><span class="sxs-lookup"><span data-stu-id="319e1-126">If the user presses ESC, ALT+ALT, or ALT+F10, this implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="319e1-127">Jeśli przesłonisz <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, zawsze Wywołaj implementację podstawową <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> w implementacji.</span><span class="sxs-lookup"><span data-stu-id="319e1-127">If you override <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="319e1-128">Niepowodzenie wywołania podstawowej implementacji uniemożliwia klasom bazowym obsługiwanie zdarzenia za pomocą procedury obsługi klasy, co może zmienić zachowanie klasy końcowej w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="319e1-128">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="319e1-129">Implementację podstawową można wywołać przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="319e1-129">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="menuBase.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="319e1-130">Dane zdarzenia dla <see cref="E:System.Windows.UIElement.MouseLeave" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="319e1-130">The event data for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</span></span></param>
        <summary><span data-ttu-id="319e1-131">Zapewnia obsługę klas dla <see cref="E:System.Windows.UIElement.MouseLeave" /> zdarzenia kierowanego, gdy mysz opuszcza formant.</span><span class="sxs-lookup"><span data-stu-id="319e1-131">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="319e1-132">Ta implementacja nie zmienia stanu obsługi ( <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości) <xref:System.Windows.UIElement.MouseLeave> danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="319e1-132">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.MouseLeave> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="319e1-133">Jeśli przesłonisz <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, zawsze Wywołaj implementację podstawową <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> w implementacji.</span><span class="sxs-lookup"><span data-stu-id="319e1-133">If you override <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="319e1-134">Niepowodzenie wywołania podstawowej implementacji uniemożliwia klasom bazowym obsługiwanie zdarzenia za pomocą procedury obsługi klasy, co może zmienić zachowanie klasy końcowej w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="319e1-134">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="319e1-135">Implementację podstawową można wywołać przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="319e1-135">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplate">
      <MemberSignature Language="C#" Value="public bool UsesItemContainerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesItemContainerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesItemContainerTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesItemContainerTemplate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesItemContainerTemplate : bool with get, set" Usage="System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="319e1-136">Pobiera lub ustawia wartość wskazującą, czy menu wybiera różne kontenery elementów, w zależności od typu elementu w źródłowej kolekcji lub innego algorytmu heurystycznego.</span><span class="sxs-lookup"><span data-stu-id="319e1-136">Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</span></span></summary>
        <value><span data-ttu-id="319e1-137"><see langword="true" />menu wybiera różne kontenery elementów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="319e1-137"><see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="319e1-138">Zarejestrowana wartość domyślna <see langword="false" />to.</span><span class="sxs-lookup"><span data-stu-id="319e1-138">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="319e1-139">Aby uzyskać więcej informacji o tym, co może mieć wpływ na tę wartość, zobacz [pierwszeństwo wartości właściwości zależności](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="319e1-139">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="319e1-140">Ta właściwość jest przydatna, jeśli chcesz utworzyć menu przez powiązanie z kolekcją.</span><span class="sxs-lookup"><span data-stu-id="319e1-140">This property is useful if you want to create a menu by binding to a collection.</span></span>  <span data-ttu-id="319e1-141">Kontener elementu jest elementem interfejsu użytkownika, który wyświetla obiekt w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="319e1-141">The item container is the UI element that displays the object in a collection.</span></span> <span data-ttu-id="319e1-142">Jeśli chcesz powiązać <xref:System.Windows.Controls.MenuItem> z kolekcją w celu utworzenia menu zawierającego obiekty i <xref:System.Windows.Controls.Separator> obiekty, ustaw <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> właściwość na true i Utwórz <xref:System.Windows.Controls.ItemContainerTemplate> dla każdego typu obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="319e1-142">If you want to bind to a collection to create a menu that contains <xref:System.Windows.Controls.MenuItem> objects and <xref:System.Windows.Controls.Separator> objects, set the <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> property to true and create an <xref:System.Windows.Controls.ItemContainerTemplate> for each type of object in your collection.</span></span>  <span data-ttu-id="319e1-143">Każdy <xref:System.Windows.Controls.ItemContainerTemplate> z <xref:System.Windows.Controls.MenuItem> nich musi zawierać albo lub <xref:System.Windows.Controls.Separator>.</span><span class="sxs-lookup"><span data-stu-id="319e1-143">Each <xref:System.Windows.Controls.ItemContainerTemplate> must contain either a <xref:System.Windows.Controls.MenuItem> or a <xref:System.Windows.Controls.Separator>.</span></span>  
  
<a name="dependencyPropertyInfo_UsesItemContainerTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="319e1-144">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="319e1-144">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="319e1-145">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="319e1-145">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty>|  
|<span data-ttu-id="319e1-146">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="319e1-146">Metadata properties set to `true`</span></span>|<span data-ttu-id="319e1-147">Brak</span><span class="sxs-lookup"><span data-stu-id="319e1-147">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UsesItemContainerTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UsesItemContainerTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UsesItemContainerTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="319e1-148">Identyfikuje właściwość <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="319e1-148">Identifies the <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
