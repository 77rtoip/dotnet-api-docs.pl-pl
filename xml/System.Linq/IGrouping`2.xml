<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="3c689-101">Typ klucza <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="3c689-101">The type of the key of the <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
    <typeparam name="TElement"><span data-ttu-id="3c689-102">Typ wartości w <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="3c689-102">The type of the values in the <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
    <summary><span data-ttu-id="3c689-103">Reprezentuje kolekcję obiektów, które mają wspólny klucz.</span><span class="sxs-lookup"><span data-stu-id="3c689-103">Represents a collection of objects that have a common key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c689-104"><xref:System.Linq.IGrouping%602> Jest <xref:System.Collections.Generic.IEnumerable%601> Ponadto mający klucz.</span><span class="sxs-lookup"><span data-stu-id="3c689-104">An <xref:System.Linq.IGrouping%602> is an <xref:System.Collections.Generic.IEnumerable%601> that additionally has a key.</span></span> <span data-ttu-id="3c689-105">Klucz reprezentuje atrybut, który jest wspólny dla każdej wartości w <xref:System.Linq.IGrouping%602>.</span><span class="sxs-lookup"><span data-stu-id="3c689-105">The key represents the attribute that is common to each value in the <xref:System.Linq.IGrouping%602>.</span></span>  
  
 <span data-ttu-id="3c689-106">Wartości <xref:System.Linq.IGrouping%602> są znacznie dostępne elementy <xref:System.Collections.Generic.IEnumerable%601> są dostępne.</span><span class="sxs-lookup"><span data-stu-id="3c689-106">The values of an <xref:System.Linq.IGrouping%602> are accessed much as the elements of an <xref:System.Collections.Generic.IEnumerable%601> are accessed.</span></span> <span data-ttu-id="3c689-107">Na przykład mogą korzystać wartości za pomocą `foreach` języka Visual C# lub `For Each` in Visual Basic do iterowania po <xref:System.Linq.IGrouping%602> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3c689-107">For example, you can access the values by using a `foreach` in Visual C# or `For Each` in Visual Basic loop to iterate through the <xref:System.Linq.IGrouping%602> object.</span></span> <span data-ttu-id="3c689-108">Przykład zawiera przykładowy kod, pokazujący sposób dostępu zarówno klucza i wartości <xref:System.Linq.IGrouping%602> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3c689-108">The Example section contains a code example that shows you how to access both the key and the values of an <xref:System.Linq.IGrouping%602> object.</span></span>  
  
 <span data-ttu-id="3c689-109"><xref:System.Linq.IGrouping%602> Typ jest używany przez <xref:System.Linq.Enumerable.GroupBy%2A> metody operator standardowej kwerendy, które zwraca sekwencję elementów typu <xref:System.Linq.IGrouping%602>.</span><span class="sxs-lookup"><span data-stu-id="3c689-109">The <xref:System.Linq.IGrouping%602> type is used by the <xref:System.Linq.Enumerable.GroupBy%2A> standard query operator methods, which return a sequence of elements of type <xref:System.Linq.IGrouping%602>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c689-110">W poniższym przykładzie pokazano sposób pracy z <xref:System.Linq.IGrouping%602> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3c689-110">The following example demonstrates how to work with an <xref:System.Linq.IGrouping%602> object.</span></span>  
  
 <span data-ttu-id="3c689-111">W tym przykładzie <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> jest wywoływana dla tablicy <xref:System.Reflection.MemberInfo> obiekty zwrócone przez <xref:System.Type.GetMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c689-111">In this example, <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> is called on the array of <xref:System.Reflection.MemberInfo> objects returned by <xref:System.Type.GetMembers%2A>.</span></span> <span data-ttu-id="3c689-112"><xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> grupuje obiekty na podstawie wartości z ich <xref:System.Reflection.MemberInfo.MemberType%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="3c689-112"><xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> groups the objects based on the value of their <xref:System.Reflection.MemberInfo.MemberType%2A> property.</span></span> <span data-ttu-id="3c689-113">Każdej unikatowej wartości dla <xref:System.Reflection.MemberInfo.MemberType%2A> w tablicy <xref:System.Reflection.MemberInfo> obiektów staje się kluczem nowej <xref:System.Linq.IGrouping%602> obiektu i <xref:System.Reflection.MemberInfo> obiektów, które mają kluczowe formularza <xref:System.Linq.IGrouping%602> wartości obiektu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="3c689-113">Each unique value for <xref:System.Reflection.MemberInfo.MemberType%2A> in the array of <xref:System.Reflection.MemberInfo> objects becomes a key for a new <xref:System.Linq.IGrouping%602> object, and the <xref:System.Reflection.MemberInfo> objects that have that key form the <xref:System.Linq.IGrouping%602> object's sequence of values.</span></span>  
  
 <span data-ttu-id="3c689-114">Na koniec <xref:System.Linq.Enumerable.First%2A> metoda jest wywoływana w sekwencji <xref:System.Linq.IGrouping%602> obiektów można uzyskać tylko w pierwszym <xref:System.Linq.IGrouping%602> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3c689-114">Finally, the <xref:System.Linq.Enumerable.First%2A> method is called on the sequence of <xref:System.Linq.IGrouping%602> objects to obtain just the first <xref:System.Linq.IGrouping%602> object.</span></span>  
  
 <span data-ttu-id="3c689-115">Przykład danych wyjściowych następnie klucz <xref:System.Linq.IGrouping%602> obiektu i <xref:System.Reflection.MemberInfo.Name%2A> właściwości każdej wartości w <xref:System.Linq.IGrouping%602> wartości obiektu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="3c689-115">The example then outputs the key of the <xref:System.Linq.IGrouping%602> object and the <xref:System.Reflection.MemberInfo.Name%2A> property of each value in the <xref:System.Linq.IGrouping%602> object's sequence of values.</span></span> <span data-ttu-id="3c689-116">Zwróć uwagę, że dostęp do <xref:System.Linq.IGrouping%602> obiektu sekwencji wartości, należy po prostu użyć <xref:System.Linq.IGrouping%602> samej zmiennej.</span><span class="sxs-lookup"><span data-stu-id="3c689-116">Notice that to access an <xref:System.Linq.IGrouping%602> object's sequence of values, you simply use the <xref:System.Linq.IGrouping%602> variable itself.</span></span>  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c689-117">Pobiera klucz <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="3c689-117">Gets the key of the <see cref="T:System.Linq.IGrouping`2" />.</span></span></summary>
        <value><span data-ttu-id="3c689-118">Klucz <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="3c689-118">The key of the <see cref="T:System.Linq.IGrouping`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c689-119">Klucz <xref:System.Linq.IGrouping%602> reprezentuje atrybut, który jest wspólny dla każdej wartości w <xref:System.Linq.IGrouping%602>.</span><span class="sxs-lookup"><span data-stu-id="3c689-119">The key of an <xref:System.Linq.IGrouping%602> represents the attribute that is common to each value in the <xref:System.Linq.IGrouping%602>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c689-120">W poniższym przykładzie pokazano sposób użycia <xref:System.Linq.IGrouping%602.Key%2A> właściwości do każdej etykiety <xref:System.Linq.IGrouping%602> obiektu w sekwencji <xref:System.Linq.IGrouping%602> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3c689-120">The following example demonstrates how to use the <xref:System.Linq.IGrouping%602.Key%2A> property to label each <xref:System.Linq.IGrouping%602> object in a sequence of <xref:System.Linq.IGrouping%602> objects.</span></span> <span data-ttu-id="3c689-121"><xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> Metoda jest używana do uzyskania sekwencji <xref:System.Linq.IGrouping%602> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3c689-121">The <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> method is used to obtain a sequence of <xref:System.Linq.IGrouping%602> objects.</span></span> <span data-ttu-id="3c689-122">`foreach` Języka Visual C# lub `For Each` w języku Visual Basic pętli następnie iteruje po każdym <xref:System.Linq.IGrouping%602> obiektu dla swojego klucza i wartości, które zawiera.</span><span class="sxs-lookup"><span data-stu-id="3c689-122">The `foreach` in Visual C# or `For Each` in Visual Basic loop then iterates through each <xref:System.Linq.IGrouping%602> object, outputting its key and the number of values it contains.</span></span>  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>