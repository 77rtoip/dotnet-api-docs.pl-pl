<Type Name="ParallelMergeOptions" FullName="System.Linq.ParallelMergeOptions">
  <TypeSignature Language="C#" Value="public enum ParallelMergeOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParallelMergeOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelMergeOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParallelMergeOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParallelMergeOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="b21b4-101">Określa preferowany typ *wyjścia scalania* do użycia w zapytaniu.</span><span class="sxs-lookup"><span data-stu-id="b21b4-101">Specifies the preferred type of *output merge* to use in a query.</span></span> <span data-ttu-id="b21b4-102">Innymi słowy wskazuje, jak PLINQ należy scalić wyników z różnych partycji do sekwencji pojedynczego wyniku.</span><span class="sxs-lookup"><span data-stu-id="b21b4-102">In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence.</span></span> <span data-ttu-id="b21b4-103">Jest to tylko wskazówkę i może nie być wzięty pod uwagę przez system podczas parallelizing wszystkie zapytania.</span><span class="sxs-lookup"><span data-stu-id="b21b4-103">This is a hint only, and may not be respected by the system when parallelizing all queries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b21b4-104">Użyj `NotBuffered` dla zapytań, które będą używane i dane wyjściowe jako strumienie, to ma uzyskać najmniejsze opóźnienia między początku wykonywania zapytań i elementy są zwróciło.</span><span class="sxs-lookup"><span data-stu-id="b21b4-104">Use `NotBuffered` for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded.</span></span> <span data-ttu-id="b21b4-105">Dla niektórych kwerend takich jak dotyczące sortowania (OrderBy, OrderByDescending), ważne jest buforowanie i wskazówkę dotyczącą NotBuffered lub AutoBuffered zostaną zignorowane.</span><span class="sxs-lookup"><span data-stu-id="b21b4-105">For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored.</span></span> <span data-ttu-id="b21b4-106">Jednak zapytań, które są tworzone za pomocą operatora operator AsOrdered może przesyłane strumieniowo, pod warunkiem dalszego sortowania nie jest wykonywane w ramach samego zapytania.</span><span class="sxs-lookup"><span data-stu-id="b21b4-106">However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.</span></span>  
  
 <span data-ttu-id="b21b4-107">Użyj `AutoBuffered` w większości przypadków; jest to wartość domyślna.</span><span class="sxs-lookup"><span data-stu-id="b21b4-107">Use `AutoBuffered` for most cases; this is the default.</span></span> <span data-ttu-id="b21b4-108">Ustala on równowagę między opóźnienia i ogólną wydajność.</span><span class="sxs-lookup"><span data-stu-id="b21b4-108">It strikes a balance between latency and overall performance.</span></span>  
  
 <span data-ttu-id="b21b4-109">Użyj `FullyBuffered` zapytań podczas całej danych wyjściowych może zostać przetworzona, aby informacje te są wymagane.</span><span class="sxs-lookup"><span data-stu-id="b21b4-109">Use `FullyBuffered` for queries when the entire output can be processed before the information is needed.</span></span> <span data-ttu-id="b21b4-110">Ta opcja oferuje najlepszą wydajność, gdy wszystkie dane wyjściowe można zgromadzonych przed reaguje wszelkie informacje, że nie jest odpowiedni dla strumienia przetwarzania lub przedstawiający częściowe wyniki zapytania pośredniej.</span><span class="sxs-lookup"><span data-stu-id="b21b4-110">This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoBuffered">
      <MemberSignature Language="C#" Value="AutoBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions AutoBuffered = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.AutoBuffered" />
      <MemberSignature Language="VB.NET" Value="AutoBuffered" />
      <MemberSignature Language="C++ CLI" Value="AutoBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b21b4-111">Za pomocą scalania danych wyjściowych buforów o rozmiarze wybrany przez system.</span><span class="sxs-lookup"><span data-stu-id="b21b4-111">Use a merge with output buffers of a size chosen by the system.</span></span> <span data-ttu-id="b21b4-112">Wyniki będą gromadzone w buforze danych wyjściowych, zanim staną się dostępne dla konsumentów zapytania.</span><span class="sxs-lookup"><span data-stu-id="b21b4-112">Results will accumulate into an output buffer before they are available to the consumer of the query.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b21b4-113">Użyj domyślnego typu scalania, co jest AutoBuffered.</span><span class="sxs-lookup"><span data-stu-id="b21b4-113">Use the default merge type, which is AutoBuffered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FullyBuffered">
      <MemberSignature Language="C#" Value="FullyBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions FullyBuffered = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.FullyBuffered" />
      <MemberSignature Language="VB.NET" Value="FullyBuffered" />
      <MemberSignature Language="C++ CLI" Value="FullyBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b21b4-114">Za pomocą scalania buforów pełne dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="b21b4-114">Use a merge with full output buffers.</span></span> <span data-ttu-id="b21b4-115">System wszystkie wyniki będą gromadzone przed udostępnieniem ich konsumenta zapytania.</span><span class="sxs-lookup"><span data-stu-id="b21b4-115">The system will accumulate all of the results before making any of them available to the consumer of the query.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NotBuffered">
      <MemberSignature Language="C#" Value="NotBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions NotBuffered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.NotBuffered" />
      <MemberSignature Language="VB.NET" Value="NotBuffered" />
      <MemberSignature Language="C++ CLI" Value="NotBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b21b4-116">Za pomocą scalania bez buforów danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="b21b4-116">Use a merge without output buffers.</span></span> <span data-ttu-id="b21b4-117">Zaraz po obliczeniu wynik elementy, udostępnić ten element konsumenta zapytania.</span><span class="sxs-lookup"><span data-stu-id="b21b4-117">As soon as result elements have been computed, make that element available to the consumer of the query.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>