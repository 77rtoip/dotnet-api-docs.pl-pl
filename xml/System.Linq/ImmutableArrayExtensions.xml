<Type Name="ImmutableArrayExtensions" FullName="System.Linq.ImmutableArrayExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0fa06b8b78c28e1b5fd916455b66fec856c097a2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36555121" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableArrayExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArrayExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ImmutableArrayExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArrayExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArrayExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableArrayExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f07da-101">Przesłonięcia metod rozszerzenia LINQ, oferujących większą wydajność dla <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> niż standardowe metody LINQ \*\* pakietu NuGet \*\*: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">o kolekcjach niezmienialnych oraz instrukcje dotyczące instalowania </see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="f07da-101">LINQ extension method overrides that offer greater efficiency for <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> than the standard LINQ methods  **NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Aggregate&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,T,T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Aggregate&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`3&lt;!!T, !!T, !!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of T) (immutableArray As ImmutableArray(Of T), func As Func(Of T, T, T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, T, T&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'T, 'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Aggregate (immutableArray, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;T,T,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-102">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-102">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-103">Kolekcja do zastosowania funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-103">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="f07da-104">Funkcja do wywołania dla każdego elementu w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-104">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-105">Dotyczy funkcji sekwencję elementów w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-105">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-106">Końcowa wartość po zastosowaniu funkcji zbiorczą do wszystkich elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-106">The final value after the cumulative function has been applied to all elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f07da-107"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Metoda ułatwia wykonywanie obliczeń w sekwencji wartości.</span><span class="sxs-lookup"><span data-stu-id="f07da-107"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="f07da-108">Ta metoda działa przez wywołanie metody `func` jeden raz dla każdego elementu w źródle.</span><span class="sxs-lookup"><span data-stu-id="f07da-108">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="f07da-109">Zawsze `func` jest nazywany <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> przekazuje zarówno element sekwencji i zagregowane wartości (jako pierwszy argument func).</span><span class="sxs-lookup"><span data-stu-id="f07da-109">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="f07da-110">Wartość `seed` parametr jest używany jako początkowa wartość zagregowaną.</span><span class="sxs-lookup"><span data-stu-id="f07da-110">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="f07da-111">Wynik `func` zastępuje poprzedniej wartości zagregowanej.</span><span class="sxs-lookup"><span data-stu-id="f07da-111">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="f07da-112"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Zwraca wynik końcowy `func`.</span><span class="sxs-lookup"><span data-stu-id="f07da-112"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,T&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TAccumulate,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TAccumulate, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'Accumulate * Func&lt;'Accumulate, 'T, 'Accumulate&gt; -&gt; 'Accumulate" Usage="System.Linq.ImmutableArrayExtensions.Aggregate (immutableArray, seed, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="f07da-113">Typ wartości skumulowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-113">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="f07da-114">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-114">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-115">Kolekcja do zastosowania funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-115">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="f07da-116">Wartość początkowa akumulatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-116">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="f07da-117">Funkcja do wywołania dla każdego elementu w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-117">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-118">Dotyczy funkcji sekwencję elementów w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-118">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-119">Wartość akumulatora końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-119">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f07da-120"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Metoda ułatwia wykonywanie obliczeń w sekwencji wartości.</span><span class="sxs-lookup"><span data-stu-id="f07da-120"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="f07da-121">Ta metoda działa przez wywołanie metody `func` jeden raz dla każdego elementu w źródle.</span><span class="sxs-lookup"><span data-stu-id="f07da-121">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="f07da-122">Zawsze `func` jest nazywany <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> przekazuje zarówno element sekwencji i zagregowane wartości (jako pierwszy argument func).</span><span class="sxs-lookup"><span data-stu-id="f07da-122">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="f07da-123">Wartość `seed` parametr jest używany jako początkowa wartość zagregowaną.</span><span class="sxs-lookup"><span data-stu-id="f07da-123">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="f07da-124">Wynik `func` zastępuje poprzedniej wartości zagregowanej.</span><span class="sxs-lookup"><span data-stu-id="f07da-124">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="f07da-125"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Zwraca wynik końcowy `func`.</span><span class="sxs-lookup"><span data-stu-id="f07da-125"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,TResult,T&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TAccumulate,TResult,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TAccumulate, TResult, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, TResult, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename TResult, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'Accumulate * Func&lt;'Accumulate, 'T, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ImmutableArrayExtensions.Aggregate (immutableArray, seed, func, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="f07da-126">Typ wartości skumulowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-126">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="f07da-127">Typ wyniku zwracanego przez selektor wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-127">The type of result returned by the result selector.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="f07da-128">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-128">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-129">Kolekcja do zastosowania funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-129">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="f07da-130">Wartość początkowa akumulatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-130">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="f07da-131">Funkcja do wywołania dla każdego elementu w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-131">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <param name="resultSelector">To be added.</param>
        <summary>
          <span data-ttu-id="f07da-132">Dotyczy funkcji sekwencję elementów w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-132">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-133">Wartość akumulatora końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-133">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f07da-134"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Metoda ułatwia wykonywanie obliczeń w sekwencji wartości.</span><span class="sxs-lookup"><span data-stu-id="f07da-134"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="f07da-135">Ta metoda działa przez wywołanie metody `func` jeden raz dla każdego elementu w źródle.</span><span class="sxs-lookup"><span data-stu-id="f07da-135">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="f07da-136">Zawsze `func` jest nazywany <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> przekazuje zarówno element sekwencji i zagregowane wartości (jako pierwszy argument func).</span><span class="sxs-lookup"><span data-stu-id="f07da-136">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="f07da-137">Wartość `seed` parametr jest używany jako początkowa wartość zagregowaną.</span><span class="sxs-lookup"><span data-stu-id="f07da-137">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="f07da-138">Wynik `func` zastępuje poprzedniej wartości zagregowanej.</span><span class="sxs-lookup"><span data-stu-id="f07da-138">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="f07da-139"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Zwraca wynik końcowy `func`.</span><span class="sxs-lookup"><span data-stu-id="f07da-139"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="All&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.All (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-140">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-140">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-141">Dopasowuje tablicy do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-141">The array to check for matches.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="f07da-142">Predykat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-142">The predicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-143">Pobiera wartość wskazującą, czy wszystkie elementy w tej macierzy zgodne dany warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-143">Gets a value indicating whether all elements in this array match a given condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-144">
            <see langword="true" /> Jeśli wszystkie elementy sekwencji źródłowej przekazuje testu w określony predykat; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-144">
              <see langword="true" /> if every element of the source sequence passes the test in the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member Any : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.Any immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-145">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-145">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-146">Aby wyszukać elementy tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-146">The array to check for elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-147">Pobiera wartość wskazującą, czy tablica zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-147">Gets a value indicating whether the array contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-148">
            <see langword="true" /> Jeśli tablica zawiera elementy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-148">
              <see langword="true" /> if the array contains an elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Any : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.Any builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-149">Typ elementów w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-149">The type of elements in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="f07da-150">Reprezentuje konstruktora do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-150">The builder to check for matches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-151">Zwraca wartość wskazującą, czy ta kolekcja zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-151">Returns a value indicating whether this collection contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-152">
            <see langword="true" /> Jeśli konstruktora tablica zawiera wszystkie elementy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-152">
              <see langword="true" /> if the array builder contains any elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.Any (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-153">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-153">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-154">Aby wyszukać elementy tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-154">The array to check for elements.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="f07da-155">Delegat definiujący warunek do dopasowania do elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-155">The delegate that defines the condition to match to an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-156">Pobiera wartość wskazującą, czy tablica zawiera wszystkie elementy spełniające określony warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-156">Gets a value indicating whether the array contains any elements that match a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-157">
            <see langword="true" /> Jeśli element spełnia określony warunek; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-157">
              <see langword="true" /> if an element matches the specified condition; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAt&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAt&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAt(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAt : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.ElementAt (immutableArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-158">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-158">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-159">Można znaleźć elementu w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-159">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f07da-160">Indeks elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-160">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-161">Zwraca element od określonego indeksu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-161">Returns the element at a specified index in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-162">Element pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-162">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAtOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAtOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAtOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAtOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.ElementAtOrDefault (immutableArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-163">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-163">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-164">Można znaleźć elementu w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-164">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f07da-165">Indeks elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-165">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-166">Zwraca element pod określonym indeksem w sekwencji lub wartość domyślną, jeśli indeks jest poza zakresem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-166">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-167">Element pod określonym indeksem lub wartość domyślną, jeśli nie można odnaleźć indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-167">The item at the specified index, or the default value if the index is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member First : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.First immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-168">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-168">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-169">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-169">The array to get an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-170">Zwraca pierwszy element w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-170">Returns the first element in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-171">Pierwszy element w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-171">The first item in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f07da-172">Jeśli tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-172">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member First : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.First builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-173">Typ elementów w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-173">The type of items in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="f07da-174">Konstruktor, który można pobrać element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-174">The builder to retrieve an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-175">Zwraca pierwszy element w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-175">Returns the first element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-176">Pierwszy element na liście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-176">The first item in the list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f07da-177">Jeśli tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-177">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member First : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.First (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-178">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-178">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-179">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-179">The array to get an item from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="f07da-180">Delegat definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-180">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-181">Zwraca pierwszy element w kolejności, która spełnia określony warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-181">Returns the first element in a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-182">Pierwszy element na liście, jeśli spełnia warunek określony przez <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-182">The first item in the list if it meets the condition specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f07da-183">Jeśli tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-183">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.FirstOrDefault immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-184">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-184">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-185">Tablica pobierania elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-185">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-186">Zwraca pierwszy element sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-186">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-187">Pierwszy element na liście, jeśli znaleziono; w przeciwnym razie wpisz wartość domyślna dla elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-187">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.FirstOrDefault builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-188">Typ elementu w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-188">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="f07da-189">Konstruktor, który można pobrać elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-189">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-190">Zwraca pierwszy element w kolekcji lub wartość domyślną, jeśli kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-190">Returns the first element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-191">Pierwszy element na liście, jeśli znaleziono; w przeciwnym razie wpisz wartość domyślna dla elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-191">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.FirstOrDefault (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-192">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-192">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-193">Tablica do pobierania elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-193">The array to retrieve elments from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="f07da-194">Delegat definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-194">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-195">Zwraca pierwszy element sekwencji, która spełnia warunek lub wartość domyślną, jeśli zostanie znaleziony żaden taki element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-195">Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-196">Pierwszy element na liście, jeśli znaleziono; w przeciwnym razie wpisz wartość domyślna dla elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-196">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member Last : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Last immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-197">Typ elementu zawarty w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-197">The type of element contained by the array.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-198">Tablica pobierania elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-198">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-199">Zwraca ostatni element w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-199">Returns the last element of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-200">Ostatni element w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-200">The last element in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f07da-201">Element zgłaszany, gdy kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-201">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Last : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Last builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-202">Typ elementu w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-202">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="f07da-203">Konstruktor, który można pobrać elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-203">The builder to retrieve elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-204">Zwraca ostatni element w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-204">Returns the last element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-205">Ostatnim elementem w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-205">The last element in the builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f07da-206">Element zgłaszany, gdy kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-206">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Last : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Last (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-207">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-207">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-208">Tablica można pobrać elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-208">The array to retrieve elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="f07da-209">Delegat definiujący warunki elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-209">The delegate that defines the conditions of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-210">Zwraca ostatni element sekwencji, która spełnia określony warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-210">Returns the last element of a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-211">Ostatnim elemencie tablicy, która spełnia <paramref name="predicate" /> warunku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-211">The last element of the array that satisfies the <paramref name="predicate" /> condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f07da-212">Element zgłaszany, gdy kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-212">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.LastOrDefault immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-213">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-213">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-214">Tablica pobierania elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-214">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-215">Zwraca ostatni element sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-215">Returns the last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-216">Ostatnim elementem sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-216">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.LastOrDefault builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-217">Typ elementu w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-217">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="f07da-218">Konstruktor, który można pobrać elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-218">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-219">Zwraca ostatni element w kolekcji lub wartość domyślną, jeśli kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-219">Returns the last element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-220">Ostatnim elementem sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-220">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.LastOrDefault (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-221">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-221">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-222">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-222">The array to retrieve an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="f07da-223">Delegat definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-223">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-224">Zwraca ostatni element sekwencji, która spełnia warunek lub wartość domyślną, jeśli zostanie znaleziony żaden taki element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-224">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-225">Ostatnim elementem sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-225">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; Select&lt;T,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Select&lt;T, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of T, TResult) (immutableArray As ImmutableArray(Of T), selector As Func(Of T, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Select(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="System.Linq.ImmutableArrayExtensions.Select (immutableArray, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;T,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-226">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-226">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="f07da-227">Typ elementu wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-227">The type of the result element.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-228">Niezmienne tablicy, tak aby wybrać elementy z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-228">The immutable array to select items from.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="f07da-229">Funkcja transformacji do zastosowania do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-229">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-230">Projektów każdy element sekwencji do nowego formularza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-230">Projects each element of a sequence into a new form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-231">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Której elementy są wynik wywołania funkcji przekształcenia dla każdego elementu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-231">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result of invoking the transform function on each element of source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; immutableArray, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (immutableArray As ImmutableArray(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ SelectMany(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, seq&lt;'Collection&gt;&gt; * Func&lt;'Source, 'Collection, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="System.Linq.ImmutableArrayExtensions.SelectMany (immutableArray, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="f07da-232">Typ elementów <c>element immutableArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-232">The type of the elements of <c>immutableArray</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="f07da-233">Typ elementów pośrednich zebrane przez <c>collectionSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-233">The type of the intermediate elements collected by <c>collectionSelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="f07da-234">Typ elementów wynikowa sekwencja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-234">The type of the elements of the resulting sequence.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-235">Niezmienne tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-235">The immutable array.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="f07da-236">Funkcja przekształcenie do zastosowania do każdego elementu wejściowego sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-236">A transform function to apply to each element of the input sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="f07da-237">Funkcja przekształcenie do zastosowania do każdego elementu pośredniego sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-237">A transform function to apply to each element of the intermediate sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-238">Projektów każdy element sekwencję <see cref="T:System.Collections.Generic.IEnumerable`1" />spłaszcza wynikowy sekwencje w jedną sekwencję i tam wywołuje funkcję selektora wyników dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-238">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-239">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Której elementy są wynik wywołania funkcji przekształcenia jeden do wielu <paramref name="collectionSelector" /> na każdym elemencie <paramref name="immutableArray" /> i mapowanie każdego z tych elementów sekwencji i ich odpowiadającego mu elementu źródłowego do środowiska odzyskiwania element STU.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-239">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result             of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each             element of <paramref name="immutableArray" /> and then mapping each of those sequence elements and their             corresponding source element to a result element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Generic.IEnumerable&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, class System.Collections.Generic.IEnumerable`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As IEnumerable(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Collections.Immutable.ImmutableArray&lt;'Base&gt; * seq&lt;#'Base&gt; * System.Collections.Generic.IEqualityComparer&lt;'Base&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.SequenceEqual (immutableArray, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="f07da-240">Typ elementu w porównaniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-240">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="f07da-241">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-241">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-242">Tablica do użycia na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-242">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="f07da-243">Elementy na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-243">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f07da-244">Moduł porównujący użyty do sprawdzenia pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-244">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-245">Określa, czy dwie sekwencje są takie same, zgodnie z porównania równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-245">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-246">
            <see langword="true" /> Aby wskazać, że sekwencje są takie same; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-246">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Collections.Immutable.ImmutableArray&lt;'Base&gt; * System.Collections.Immutable.ImmutableArray&lt;#'Base&gt; * System.Collections.Generic.IEqualityComparer&lt;'Base&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.SequenceEqual (immutableArray, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="f07da-247">Typ elementu w porównaniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-247">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="f07da-248">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-248">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-249">Tablica do użycia na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-249">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="f07da-250">Elementy na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-250">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f07da-251">Moduł porównujący użyty do sprawdzenia pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-251">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-252">Określa, czy dwie sekwencje są takie same, zgodnie z porównania równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-252">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-253">
            <see langword="true" /> Aby wskazać, że sekwencje są takie same; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-253">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase,TBase,bool&gt; predicate) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Func`3&lt;!!TBase, !!TBase, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), predicate As Func(Of TBase, TBase, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived, typename TBase&gt;&#xA; where TDerived : TBase[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Collections::Immutable::ImmutableArray&lt;TBase&gt; immutableArray, System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase, TBase, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Collections.Immutable.ImmutableArray&lt;'Base&gt; * System.Collections.Immutable.ImmutableArray&lt;#'Base&gt; * Func&lt;'Base, 'Base, bool&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.SequenceEqual (immutableArray, items, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="predicate" Type="System.Func&lt;TBase,TBase,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="f07da-254">Typ elementu w porównaniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-254">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="f07da-255">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-255">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-256">Tablica do użycia na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-256">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="f07da-257">Elementy na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-257">The items to use for comparison.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="f07da-258">Moduł porównujący użyty do sprawdzenia pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-258">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-259">Określa, czy dwie sekwencje są takie same, zgodnie z porównania równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-259">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-260">
            <see langword="true" /> Aby wskazać, że sekwencje są takie same; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-260">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member Single : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Single immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-261">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-261">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-262">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-262">The array to retrieve the element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-263">Zwraca tylko element sekwencji i zgłasza wyjątek, jeśli nie istnieje dokładnie jeden element w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-263">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-264">Element w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-264">The element in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Single : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Single (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-265">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-265">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary>
          <span data-ttu-id="f07da-266">Zwraca jedynym elementem sekwencję, która spełnia określony warunek i zgłasza wyjątek, jeśli istnieje więcej niż jeden taki element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-266">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-267">Zwraca <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-267">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.SingleOrDefault immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-268">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-268">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-269">Tablica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-269">The array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-270">Zwraca tylko element tablicy lub wartość domyślną, jeśli sekwencja jest pusta. Ta metoda zgłasza wyjątek, jeśli istnieje więcej niż jeden element w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-270">Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-271">Element tablicy lub wartość domyślną, jeśli tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-271">The element in the array, or the default value if the array is empty.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f07da-272">
            <paramref name="source" /> zawiera więcej niż jeden element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-272">
              <paramref name="source" /> contains more than one element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.SingleOrDefault (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-273">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-273">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-274">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-274">The array to get the element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="f07da-275">Spełniają warunek elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-275">The condition the element must satisfy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-276">Zwraca tylko element sekwencji, która spełnia określony warunek lub wartość domyślną, jeśli żaden taki element istnieje; Ta metoda zgłasza wyjątek, jeśli więcej niż jeden element spełnia warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-276">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-277">Element spełnia określony warunek; w przeciwnym razie element domyślny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-277">The element if it satisfies the specified condition; otherwise the default element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f07da-278">Więcej niż jeden element spełnia warunek w <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-278">More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] ToArray&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] ToArray&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of T) (immutableArray As ImmutableArray(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ ToArray(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member ToArray : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T[]" Usage="System.Linq.ImmutableArrayExtensions.ToArray immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-279">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-279">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <summary>
          <span data-ttu-id="f07da-280">Kopiuje zawartość tej tablicy do modyfikowalnej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-280">Copies the contents of this array to a mutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-281">Tablica nowo skonkretyzowanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-281">The newly instantiated array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'T&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="f07da-282">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-282">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="f07da-283">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-283">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-284">Można utworzyć słownika z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-284">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="f07da-285">Selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-285">The key selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-286">Tworzy słownik na podstawie zawartości tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-286">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-287">Słownik nowo zainicjowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-287">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'T&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="f07da-288">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-288">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="f07da-289">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-289">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-290">Można utworzyć słownika z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-290">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="f07da-291">Selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-291">The key selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f07da-292">Moduł porównujący zainicjować słownik z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-292">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-293">Tworzy słownik na podstawie zawartości tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-293">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-294">Słownik nowo zainicjowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-294">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; * Func&lt;'T, 'Element&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="f07da-295">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-295">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="f07da-296">Typ elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-296">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="f07da-297">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-297">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-298">Można utworzyć słownika z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-298">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="f07da-299">Selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-299">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="f07da-300">Selektor elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-300">The element selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-301">Tworzy słownik na podstawie zawartości tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-301">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-302">Słownik nowo zainicjowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-302">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; * Func&lt;'T, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="f07da-303">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-303">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="f07da-304">Typ elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-304">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="f07da-305">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-305">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-306">Można utworzyć słownika z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-306">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="f07da-307">Selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-307">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="f07da-308">Selektor elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-308">The element selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f07da-309">Moduł porównujący zainicjować słownik z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-309">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-310">Tworzy słownik na podstawie zawartości tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-310">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-311">Słownik nowo zainicjowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-311">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Where&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Where&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ Where(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; seq&lt;'T&gt;" Usage="System.Linq.ImmutableArrayExtensions.Where (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f07da-312">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-312">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="f07da-313">Tablica do filtrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-313">The array to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="f07da-314">Warunek, którego chcesz użyć do filtrowania zawartości tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-314">The condition to use for filtering the array content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f07da-315">Filtruje sekwencję wartości na podstawie predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-315">Filters a sequence of values based on a predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f07da-316">Zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> zawiera elementy, które spełniają warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07da-316">Returns <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements that meet the condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>