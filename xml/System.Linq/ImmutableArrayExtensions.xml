<Type Name="ImmutableArrayExtensions" FullName="System.Linq.ImmutableArrayExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3111110917a4df409d40ad718073f26e0bdcf5df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableArrayExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArrayExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ImmutableArrayExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArrayExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArrayExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="af4ac-101">Przesłonięcia metod rozszerzenia LINQ, oferujących większą wydajność dla <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> niż standardowe metody LINQ</span>
      <span class="sxs-lookup">
        <span data-stu-id="af4ac-101">LINQ extension method overrides that offer greater efficiency for <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> than the standard LINQ methods</span>
      </span>
      <span data-ttu-id="af4ac-102">**Pakiet NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">o kolekcjach niezmienialnych oraz instrukcje dotyczące instalowania</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="af4ac-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Aggregate&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,T,T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Aggregate&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`3&lt;!!T, !!T, !!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of T) (immutableArray As ImmutableArray(Of T), func As Func(Of T, T, T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, T, T&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;T,T,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-103">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-103">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-104">Kolekcja do zastosowania funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-104">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="af4ac-105">Funkcja do wywołania dla każdego elementu w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-105">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-106">Dotyczy funkcji sekwencję elementów w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-106">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-107">Końcowa wartość po zastosowaniu funkcji zbiorczą do wszystkich elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-107">The final value after the cumulative function has been applied to all elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af4ac-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Metoda ułatwia wykonywanie obliczeń w sekwencji wartości.</span><span class="sxs-lookup"><span data-stu-id="af4ac-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="af4ac-109">Ta metoda działa przez wywołanie metody `func` jeden raz dla każdego elementu w źródle.</span><span class="sxs-lookup"><span data-stu-id="af4ac-109">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="af4ac-110">Zawsze `func` jest nazywany <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> przekazuje zarówno element sekwencji i zagregowane wartości (jako pierwszy argument func).</span><span class="sxs-lookup"><span data-stu-id="af4ac-110">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="af4ac-111">Wartość `seed` parametr jest używany jako początkowa wartość zagregowaną.</span><span class="sxs-lookup"><span data-stu-id="af4ac-111">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="af4ac-112">Wynik `func` zastępuje poprzedniej wartości zagregowanej.</span><span class="sxs-lookup"><span data-stu-id="af4ac-112">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="af4ac-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Zwraca wynik końcowy `func`.</span><span class="sxs-lookup"><span data-stu-id="af4ac-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,T&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TAccumulate,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TAccumulate, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="af4ac-114">Typ wartości skumulowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-114">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="af4ac-115">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-115">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-116">Kolekcja do zastosowania funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-116">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="af4ac-117">Wartość początkowa akumulatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-117">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="af4ac-118">Funkcja do wywołania dla każdego elementu w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-118">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-119">Dotyczy funkcji sekwencję elementów w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-119">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-120">Wartość akumulatora końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-120">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af4ac-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Metoda ułatwia wykonywanie obliczeń w sekwencji wartości.</span><span class="sxs-lookup"><span data-stu-id="af4ac-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="af4ac-122">Ta metoda działa przez wywołanie metody `func` jeden raz dla każdego elementu w źródle.</span><span class="sxs-lookup"><span data-stu-id="af4ac-122">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="af4ac-123">Zawsze `func` jest nazywany <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> przekazuje zarówno element sekwencji i zagregowane wartości (jako pierwszy argument func).</span><span class="sxs-lookup"><span data-stu-id="af4ac-123">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="af4ac-124">Wartość `seed` parametr jest używany jako początkowa wartość zagregowaną.</span><span class="sxs-lookup"><span data-stu-id="af4ac-124">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="af4ac-125">Wynik `func` zastępuje poprzedniej wartości zagregowanej.</span><span class="sxs-lookup"><span data-stu-id="af4ac-125">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="af4ac-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Zwraca wynik końcowy `func`.</span><span class="sxs-lookup"><span data-stu-id="af4ac-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,TResult,T&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TAccumulate,TResult,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TAccumulate, TResult, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, TResult, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename TResult, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="af4ac-127">Typ wartości skumulowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-127">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="af4ac-128">Typ wyniku zwracanego przez selektor wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-128">The type of result returned by the result selector.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="af4ac-129">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-129">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-130">Kolekcja do zastosowania funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-130">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="af4ac-131">Wartość początkowa akumulatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-131">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="af4ac-132">Funkcja do wywołania dla każdego elementu w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-132">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <param name="resultSelector">To be added.</param>
        <summary>
          <span data-ttu-id="af4ac-133">Dotyczy funkcji sekwencję elementów w sposób zbiorczą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-133">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-134">Wartość akumulatora końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-134">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af4ac-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Metoda ułatwia wykonywanie obliczeń w sekwencji wartości.</span><span class="sxs-lookup"><span data-stu-id="af4ac-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="af4ac-136">Ta metoda działa przez wywołanie metody `func` jeden raz dla każdego elementu w źródle.</span><span class="sxs-lookup"><span data-stu-id="af4ac-136">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="af4ac-137">Zawsze `func` jest nazywany <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> przekazuje zarówno element sekwencji i zagregowane wartości (jako pierwszy argument func).</span><span class="sxs-lookup"><span data-stu-id="af4ac-137">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="af4ac-138">Wartość `seed` parametr jest używany jako początkowa wartość zagregowaną.</span><span class="sxs-lookup"><span data-stu-id="af4ac-138">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="af4ac-139">Wynik `func` zastępuje poprzedniej wartości zagregowanej.</span><span class="sxs-lookup"><span data-stu-id="af4ac-139">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="af4ac-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Zwraca wynik końcowy `func`.</span><span class="sxs-lookup"><span data-stu-id="af4ac-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="All&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-141">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-141">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-142">Dopasowuje tablicy do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-142">The array to check for matches.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="af4ac-143">Predykat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-143">The predicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-144">Pobiera wartość wskazującą, czy wszystkie elementy w tej macierzy zgodne dany warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-144">Gets a value indicating whether all elements in this array match a given condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-145">
            <see langword="true" /> Jeśli wszystkie elementy sekwencji źródłowej przekazuje testu w określony predykat; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-145">
              <see langword="true" /> if every element of the source sequence passes the test in the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-146">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-146">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-147">Aby wyszukać elementy tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-147">The array to check for elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-148">Pobiera wartość wskazującą, czy tablica zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-148">Gets a value indicating whether the array contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-149">
            <see langword="true" /> Jeśli tablica zawiera elementy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-149">
              <see langword="true" /> if the array contains an elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-150">Typ elementów w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-150">The type of elements in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="af4ac-151">Reprezentuje konstruktora do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-151">The builder to check for matches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-152">Zwraca wartość wskazującą, czy ta kolekcja zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-152">Returns a value indicating whether this collection contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-153">
            <see langword="true" /> Jeśli konstruktora tablica zawiera wszystkie elementy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-153">
              <see langword="true" /> if the array builder contains any elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-154">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-154">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-155">Aby wyszukać elementy tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-155">The array to check for elements.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="af4ac-156">Delegat definiujący warunek do dopasowania do elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-156">The delegate that defines the condition to match to an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-157">Pobiera wartość wskazującą, czy tablica zawiera wszystkie elementy spełniające określony warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-157">Gets a value indicating whether the array contains any elements that match a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-158">
            <see langword="true" /> Jeśli element spełnia określony warunek; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-158">
              <see langword="true" /> if an element matches the specified condition; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAt&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAt&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAt(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-159">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-159">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-160">Można znaleźć elementu w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-160">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="af4ac-161">Indeks elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-161">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-162">Zwraca element od określonego indeksu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-162">Returns the element at a specified index in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-163">Element pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-163">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAtOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAtOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAtOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-164">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-164">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-165">Można znaleźć elementu w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-165">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="af4ac-166">Indeks elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-166">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-167">Zwraca element pod określonym indeksem w sekwencji lub wartość domyślną, jeśli indeks jest poza zakresem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-167">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-168">Element pod określonym indeksem lub wartość domyślną, jeśli nie można odnaleźć indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-168">The item at the specified index, or the default value if the index is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-169">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-169">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-170">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-170">The array to get an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-171">Zwraca pierwszy element w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-171">Returns the first element in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-172">Pierwszy element w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-172">The first item in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="af4ac-173">Jeśli tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-173">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-174">Typ elementów w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-174">The type of items in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="af4ac-175">Konstruktor, który można pobrać element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-175">The builder to retrieve an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-176">Zwraca pierwszy element w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-176">Returns the first element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-177">Pierwszy element na liście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-177">The first item in the list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="af4ac-178">Jeśli tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-178">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-179">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-179">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-180">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-180">The array to get an item from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="af4ac-181">Delegat definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-181">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-182">Zwraca pierwszy element w kolejności, która spełnia określony warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-182">Returns the first element in a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-183">Pierwszy element na liście, jeśli spełnia warunek określony przez <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-183">The first item in the list if it meets the condition specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="af4ac-184">Jeśli tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-184">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-185">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-185">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-186">Tablica pobierania elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-186">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-187">Zwraca pierwszy element sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-187">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-188">Pierwszy element na liście, jeśli znaleziono; w przeciwnym razie wpisz wartość domyślna dla elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-188">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-189">Typ elementu w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-189">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="af4ac-190">Konstruktor, który można pobrać elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-190">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-191">Zwraca pierwszy element w kolekcji lub wartość domyślną, jeśli kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-191">Returns the first element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-192">Pierwszy element na liście, jeśli znaleziono; w przeciwnym razie wpisz wartość domyślna dla elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-192">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-193">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-193">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-194">Tablica do pobierania elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-194">The array to retrieve elments from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="af4ac-195">Delegat definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-195">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-196">Zwraca pierwszy element sekwencji, która spełnia warunek lub wartość domyślną, jeśli zostanie znaleziony żaden taki element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-196">Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-197">Pierwszy element na liście, jeśli znaleziono; w przeciwnym razie wpisz wartość domyślna dla elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-197">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-198">Typ elementu zawarty w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-198">The type of element contained by the array.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-199">Tablica pobierania elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-199">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-200">Zwraca ostatni element w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-200">Returns the last element of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-201">Ostatni element w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-201">The last element in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="af4ac-202">Element zgłaszany, gdy kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-202">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-203">Typ elementu w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-203">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="af4ac-204">Konstruktor, który można pobrać elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-204">The builder to retrieve elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-205">Zwraca ostatni element w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-205">Returns the last element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-206">Ostatnim elementem w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-206">The last element in the builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="af4ac-207">Element zgłaszany, gdy kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-207">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-208">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-208">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-209">Tablica można pobrać elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-209">The array to retrieve elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="af4ac-210">Delegat definiujący warunki elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-210">The delegate that defines the conditions of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-211">Zwraca ostatni element sekwencji, która spełnia określony warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-211">Returns the last element of a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-212">Ostatnim elemencie tablicy, która spełnia <paramref name="predicate" /> warunku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-212">The last element of the array that satisfies the <paramref name="predicate" /> condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="af4ac-213">Element zgłaszany, gdy kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-213">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-214">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-214">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-215">Tablica pobierania elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-215">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-216">Zwraca ostatni element sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-216">Returns the last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-217">Ostatnim elementem sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-217">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-218">Typ elementu w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-218">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="af4ac-219">Konstruktor, który można pobrać elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-219">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-220">Zwraca ostatni element w kolekcji lub wartość domyślną, jeśli kolekcja jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-220">Returns the last element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-221">Ostatnim elementem sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-221">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-222">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-222">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-223">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-223">The array to retrieve an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="af4ac-224">Delegat definiujący warunki elementu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-224">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-225">Zwraca ostatni element sekwencji, która spełnia warunek lub wartość domyślną, jeśli zostanie znaleziony żaden taki element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-225">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-226">Ostatnim elementem sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-226">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; Select&lt;T,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Select&lt;T, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of T, TResult) (immutableArray As ImmutableArray(Of T), selector As Func(Of T, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Select(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TResult&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;T,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-227">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-227">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="af4ac-228">Typ elementu wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-228">The type of the result element.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-229">Niezmienne tablicy, tak aby wybrać elementy z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-229">The immutable array to select items from.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="af4ac-230">Funkcja transformacji do zastosowania do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-230">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-231">Projektów każdy element sekwencji do nowego formularza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-231">Projects each element of a sequence into a new form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-232">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Której elementy są wynik wywołania funkcji przekształcenia dla każdego elementu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-232">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result of invoking the transform function on each element of source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; immutableArray, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (immutableArray As ImmutableArray(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ SelectMany(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="af4ac-233">Typ elementów <c>element immutableArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-233">The type of the elements of <c>immutableArray</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="af4ac-234">Typ elementów pośrednich zebrane przez <c>collectionSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-234">The type of the intermediate elements collected by <c>collectionSelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="af4ac-235">Typ elementów wynikowa sekwencja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-235">The type of the elements of the resulting sequence.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-236">Niezmienne tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-236">The immutable array.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="af4ac-237">Funkcja przekształcenie do zastosowania do każdego elementu wejściowego sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-237">A transform function to apply to each element of the input sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="af4ac-238">Funkcja przekształcenie do zastosowania do każdego elementu pośredniego sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-238">A transform function to apply to each element of the intermediate sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-239">Projektów każdy element sekwencję <see cref="T:System.Collections.Generic.IEnumerable`1" />spłaszcza wynikowy sekwencje w jedną sekwencję i tam wywołuje funkcję selektora wyników dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-239">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-240">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Której elementy są wynik wywołania funkcji przekształcenia jeden do wielu <paramref name="collectionSelector" /> na każdym elemencie <paramref name="immutableArray" /> i mapowanie każdego z tych elementów sekwencji i ich odpowiadającego mu elementu źródłowego do środowiska odzyskiwania element STU.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-240">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result             of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each             element of <paramref name="immutableArray" /> and then mapping each of those sequence elements and their             corresponding source element to a result element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Generic.IEnumerable&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, class System.Collections.Generic.IEnumerable`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As IEnumerable(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="af4ac-241">Typ elementu w porównaniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-241">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="af4ac-242">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-242">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-243">Tablica do użycia na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-243">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="af4ac-244">Elementy na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-244">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="af4ac-245">Moduł porównujący użyty do sprawdzenia pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-245">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-246">Określa, czy dwie sekwencje są takie same, zgodnie z porównania równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-246">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-247">
            <see langword="true" /> Aby wskazać, że sekwencje są takie same; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-247">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="af4ac-248">Typ elementu w porównaniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-248">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="af4ac-249">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-249">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-250">Tablica do użycia na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-250">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="af4ac-251">Elementy na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-251">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="af4ac-252">Moduł porównujący użyty do sprawdzenia pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-252">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-253">Określa, czy dwie sekwencje są takie same, zgodnie z porównania równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-253">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-254">
            <see langword="true" /> Aby wskazać, że sekwencje są takie same; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-254">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase,TBase,bool&gt; predicate) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Func`3&lt;!!TBase, !!TBase, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), predicate As Func(Of TBase, TBase, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived, typename TBase&gt;&#xA; where TDerived : TBase[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Collections::Immutable::ImmutableArray&lt;TBase&gt; immutableArray, System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase, TBase, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="predicate" Type="System.Func&lt;TBase,TBase,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="af4ac-255">Typ elementu w porównaniu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-255">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="af4ac-256">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-256">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-257">Tablica do użycia na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-257">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="af4ac-258">Elementy na potrzeby porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-258">The items to use for comparison.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="af4ac-259">Moduł porównujący użyty do sprawdzenia pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-259">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-260">Określa, czy dwie sekwencje są takie same, zgodnie z porównania równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-260">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-261">
            <see langword="true" /> Aby wskazać, że sekwencje są takie same; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-261">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-262">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-262">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-263">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-263">The array to retrieve the element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-264">Zwraca tylko element sekwencji i zgłasza wyjątek, jeśli nie istnieje dokładnie jeden element w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-264">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-265">Element w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-265">The element in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-266">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-266">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary>
          <span data-ttu-id="af4ac-267">Zwraca jedynym elementem sekwencję, która spełnia określony warunek i zgłasza wyjątek, jeśli istnieje więcej niż jeden taki element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-267">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-268">Zwraca <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-268">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-269">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-269">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-270">Tablica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-270">The array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-271">Zwraca tylko element tablicy lub wartość domyślną, jeśli sekwencja jest pusta. Ta metoda zgłasza wyjątek, jeśli istnieje więcej niż jeden element w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-271">Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-272">Element tablicy lub wartość domyślną, jeśli tablica jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-272">The element in the array, or the default value if the array is empty.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="af4ac-273">
            <paramref name="source" /> zawiera więcej niż jeden element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-273">
              <paramref name="source" /> contains more than one element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-274">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-274">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-275">Można pobrać elementu z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-275">The array to get the element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="af4ac-276">Spełniają warunek elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-276">The condition the element must satisfy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-277">Zwraca tylko element sekwencji, która spełnia określony warunek lub wartość domyślną, jeśli żaden taki element istnieje; Ta metoda zgłasza wyjątek, jeśli więcej niż jeden element spełnia warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-277">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-278">Element spełnia określony warunek; w przeciwnym razie element domyślny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-278">The element if it satisfies the specified condition; otherwise the default element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="af4ac-279">Więcej niż jeden element spełnia warunek w <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-279">More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] ToArray&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] ToArray&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of T) (immutableArray As ImmutableArray(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ ToArray(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-280">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-280">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <summary>
          <span data-ttu-id="af4ac-281">Kopiuje zawartość tej tablicy do modyfikowalnej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-281">Copies the contents of this array to a mutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-282">Tablica nowo skonkretyzowanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-282">The newly instantiated array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="af4ac-283">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-283">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="af4ac-284">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-284">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-285">Można utworzyć słownika z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-285">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="af4ac-286">Selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-286">The key selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-287">Tworzy słownik na podstawie zawartości tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-287">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-288">Słownik nowo zainicjowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-288">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="af4ac-289">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-289">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="af4ac-290">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-290">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-291">Można utworzyć słownika z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-291">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="af4ac-292">Selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-292">The key selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="af4ac-293">Moduł porównujący zainicjować słownik z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-293">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-294">Tworzy słownik na podstawie zawartości tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-294">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-295">Słownik nowo zainicjowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-295">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="af4ac-296">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-296">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="af4ac-297">Typ elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-297">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="af4ac-298">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-298">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-299">Można utworzyć słownika z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-299">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="af4ac-300">Selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-300">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="af4ac-301">Selektor elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-301">The element selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-302">Tworzy słownik na podstawie zawartości tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-302">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-303">Słownik nowo zainicjowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-303">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="af4ac-304">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-304">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="af4ac-305">Typ elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-305">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="af4ac-306">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-306">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-307">Można utworzyć słownika z tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-307">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="af4ac-308">Selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-308">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="af4ac-309">Selektor elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-309">The element selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="af4ac-310">Moduł porównujący zainicjować słownik z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-310">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-311">Tworzy słownik na podstawie zawartości tej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-311">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-312">Słownik nowo zainicjowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-312">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Where&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Where&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ Where(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="af4ac-313">Typ elementu zawarty w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-313">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="af4ac-314">Tablica do filtrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-314">The array to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="af4ac-315">Warunek, którego chcesz użyć do filtrowania zawartości tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-315">The condition to use for filtering the array content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af4ac-316">Filtruje sekwencję wartości na podstawie predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-316">Filters a sequence of values based on a predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af4ac-317">Zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> zawiera elementy, które spełniają warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af4ac-317">Returns <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements that meet the condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>