<Type Name="IQueryProvider" FullName="System.Linq.IQueryProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="400f2c222d4ff91281d1e32fe0c157ce184e9bbe" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58696114" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IQueryProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryProvider" />
  <TypeSignature Language="F#" Value="type IQueryProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody służące do tworzenia i wykonywanie zapytań, które są opisane przez <see cref="T:System.Linq.IQueryable" /> obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IQueryProvider> Interfejsu jest przeznaczony do wdrażania przez dostawców zapytania.  
  
 Aby uzyskać więcej informacji na temat tworzenia własnego dostawcy LINQ, zobacz [LINQ: Konstruowania modułu dostawcy IQueryable](https://go.microsoft.com/fwlink/?LinkID=112370) na blogi MSDN.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Linq.Queryable" />
    <altmember cref="T:System.Linq.IQueryable`1" />
  </Docs>
  <Members>
    <Member MemberName="CreateQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable CreateQuery (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable CreateQuery(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::IQueryable ^ CreateQuery(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable" Usage="iQueryProvider.CreateQuery expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">Drzewo wyrażenia, który reprezentuje [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania.</param>
        <summary>Konstruuje <see cref="T:System.Linq.IQueryable" /> obiekt, który może służyć do oceny zapytanie, reprezentowane przez określone wyrażenie drzewa.</summary>
        <returns><see cref="T:System.Linq.IQueryable" /> , Ocenić zapytanie, reprezentowane przez określone wyrażenie drzewa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Linq.IQueryable.Expression%2A> Właściwości zwracanego <xref:System.Linq.IQueryable> obiekt jest równy `expression`.  
  
 <xref:System.Linq.IQueryProvider.CreateQuery%2A> Metoda jest używana do tworzenia nowych <xref:System.Linq.IQueryable> obiektów, biorąc pod uwagę drzewa wyrażenie. Zapytania, który jest reprezentowany przez zwracany obiekt jest skojarzony z określonego dostawcy LINQ.  
  
 Niektóre metody standardowego operatora zapytań zdefiniowanych w <xref:System.Linq.Queryable>, takich jak <xref:System.Linq.Queryable.OfType%2A> i <xref:System.Linq.Queryable.Cast%2A>, wywołanie tej metody. Przekaż go <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable&lt;TElement&gt; CreateQuery&lt;TElement&gt; (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!TElement&gt; CreateQuery&lt;TElement&gt;(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Linq::IQueryable&lt;TElement&gt; ^ CreateQuery(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable&lt;'Element&gt;" Usage="iQueryProvider.CreateQuery expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Typ elementów <see cref="T:System.Linq.IQueryable`1" /> zwracanym.</typeparam>
        <param name="expression">Drzewo wyrażenia, który reprezentuje [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania.</param>
        <summary>Konstruuje <see cref="T:System.Linq.IQueryable`1" /> obiekt, który może służyć do oceny zapytanie, reprezentowane przez określone wyrażenie drzewa.</summary>
        <returns><see cref="T:System.Linq.IQueryable`1" /> , Ocenić zapytanie, reprezentowane przez określone wyrażenie drzewa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Linq.IQueryable.Expression%2A> Właściwości zwracanego <xref:System.Linq.IQueryable%601> obiekt jest równy `expression`.  
  
 <xref:System.Linq.IQueryProvider.CreateQuery%2A> Metoda jest używana do tworzenia nowych <xref:System.Linq.IQueryable%601> obiektów, biorąc pod uwagę drzewa wyrażenie. Zapytania, który jest reprezentowany przez zwracany obiekt jest skojarzony z określonego dostawcy LINQ.  
  
 Większość <xref:System.Linq.Queryable> tę metodę należy wywołać metody standardowego operatora zapytań, które zwracają wartości wyliczenia. Przekaż go <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public object Execute (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Execute(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Execute(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Linq.Expressions.Expression -&gt; obj" Usage="iQueryProvider.Execute expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">Drzewo wyrażenia, który reprezentuje [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania.</param>
        <summary>Wykonuje zapytanie, reprezentowane przez określone wyrażenie drzewa.</summary>
        <returns>Wartość będącą wynikiem wykonania określonego zapytania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IQueryProvider.Execute%2A> Metoda jest wykonywana zapytań zwracających pojedynczą wartość (zamiast wyliczalny sekwencję wartości). Drzew wyrażeń, które reprezentują zapytań, które zwracają wartości wyliczenia są wykonywane podczas ich skojarzone <xref:System.Linq.IQueryable> obiekt jest zostanie wyliczonly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Execute&lt;TResult&gt; (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Execute&lt;TResult&gt;(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Execute(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Linq.Expressions.Expression -&gt; 'Result" Usage="iQueryProvider.Execute expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Typ wartości, która wynika z wykonaniem zapytania.</typeparam>
        <param name="expression">Drzewo wyrażenia, który reprezentuje [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania.</param>
        <summary>Wykonuje zapytanie silnie typizowane reprezentowanego przez określone wyrażenie drzewa.</summary>
        <returns>Wartość będącą wynikiem wykonania określonego zapytania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IQueryProvider.Execute%2A> Metoda jest wykonywana zapytań zwracających pojedynczą wartość (zamiast wyliczalny sekwencję wartości). Drzew wyrażeń, które reprezentują zapytań, które zwracają wartości wyliczenia są wykonywane podczas <xref:System.Linq.IQueryable%601> obiekt, który zawiera drzewo wyrażenia jest zostanie wyliczonly.  
  
 <xref:System.Linq.Queryable> Metod standardowych operatorów zapytań, które zwracają pojedyncze wyniki wywołania <xref:System.Linq.IQueryProvider.Execute%2A>. Przekaż go <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>