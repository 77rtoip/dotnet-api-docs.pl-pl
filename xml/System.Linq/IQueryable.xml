<Type Name="IQueryable" FullName="System.Linq.IQueryable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1484bcd923a7e67d78f51d415df7eaacfaf37f3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30457233" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IQueryable : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryable implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IQueryable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryable&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryable : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zapewnia funkcje do oceny zapytania względem źródła danych, którym nie określono typu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IQueryable> Interfejsu jest przeznaczony do implementacji przez dostawców zapytania. Tylko powinien być implementowana przez dostawców, które również implementują <xref:System.Linq.IQueryable%601>. Jeśli dostawca nie obsługuje również <xref:System.Linq.IQueryable%601>, nie można używać standardowych operatorów zapytań w źródle danych dostawcy.  
  
 <xref:System.Linq.IQueryable> Dziedziczy interfejs <xref:System.Collections.IEnumerable> interfejsu, dzięki czemu Jeśli termin reprezentuje kwerendy, mogą być wyliczane wyniki tego zapytania. Wyliczenie powoduje, że skojarzone z drzewa wyrażenia <xref:System.Linq.IQueryable> obiektu do wykonania. Definicja "wykonywanych na drzewo wyrażenia" jest specyficzne dla dostawcy zapytania. Na przykład może obejmować tłumaczenia drzewo wyrażeń języka odpowiednie zapytania dla źródła danych. Zapytania, które nie zwracają wartości wyliczenia są wykonywane po <xref:System.Linq.IQueryProvider.Execute%2A> metoda jest wywoływana.  
  
 Aby uzyskać więcej informacji na temat tworzenia własnego dostawcę LINQ zobacz [LINQ: Tworzenie dostawcy IQueryable](http://go.microsoft.com/fwlink/?LinkID=112370) na blogi MSDN.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Linq.Queryable" />
    <altmember cref="T:System.Linq.IQueryable`1" />
  </Docs>
  <Members>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ElementType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ elementów, które są zwracane, gdy drzewa wyrażenia skojarzonego z tym wystąpieniem programu <see cref="T:System.Linq.IQueryable" /> jest wykonywana.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujący typ elementów, z którego są zwracane, gdy jest wykonywana drzewa wyrażenia skojarzonego z tym obiektem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IQueryable.ElementType%2A> Właściwość reprezentuje "T" w `IQueryable<T>` lub `IQueryable(Of T)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera drzewo wyrażeń, który jest skojarzony z wystąpieniem <see cref="T:System.Linq.IQueryable" />.</summary>
        <value>
          <see cref="T:System.Linq.Expressions.Expression" /> Skojarzonego z tym wystąpieniem <see cref="T:System.Linq.IQueryable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wystąpienie <xref:System.Linq.IQueryable> reprezentuje [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania względem źródła danych, drzewa skojarzone wyrażenie reprezentuje tego zapytania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As IQueryProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::IQueryProvider ^ Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dostawcę zapytania, który jest skojarzony z tym źródłem danych.</summary>
        <value>
          <see cref="T:System.Linq.IQueryProvider" /> Skojarzonego z tym źródłem danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wystąpienie <xref:System.Linq.IQueryable> reprezentuje [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania względem źródła danych, skojarzonych zapytanie do dostawcy jest dostawcą, który utworzył <xref:System.Linq.IQueryable> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>