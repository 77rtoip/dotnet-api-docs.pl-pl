<Type Name="IQueryable" FullName="System.Linq.IQueryable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3339c6d7c0152b55afcc4ce0862baf66abde3479" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69117842" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryable : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryable implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IQueryable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryable&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryable : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type IQueryable = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zapewnia funkcję do szacowania zapytań względem określonego źródła danych, w którym nie określono typu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IQueryable> Interfejs jest przeznaczony do implementacji przez dostawców zapytań. Należy ją zaimplementować tylko przez dostawców, które również implementują <xref:System.Linq.IQueryable%601>. Jeśli dostawca nie implementuje <xref:System.Linq.IQueryable%601>również standardowych operatorów zapytań, nie można używać w źródle danych dostawcy.  
  
 <xref:System.Linq.IQueryable> Interfejs<xref:System.Collections.IEnumerable> dziedziczy interfejs tak, aby w przypadku, gdy reprezentuje zapytanie, wyniki tego zapytania można wyliczyć. Wyliczenie powoduje, że drzewo wyrażenia skojarzone z <xref:System.Linq.IQueryable> obiektem do wykonania. Definicja "wykonywania drzewa wyrażenia" jest specyficzna dla dostawcy zapytań. Na przykład może zaistnieć potrzeba przetłumaczenia drzewa wyrażenia na odpowiedni język zapytania dla bazowego źródła danych. Zapytania, które nie zwracają wyliczalnych wyników, <xref:System.Linq.IQueryProvider.Execute%2A> są wykonywane, gdy wywoływana jest metoda.  
  
 Aby uzyskać więcej informacji na temat tworzenia własnego dostawcy LINQ, zobacz [LINQ: Tworzenie dostawcy](https://go.microsoft.com/fwlink/?LinkID=112370) IQueryable na blogach MSDN.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Linq.Queryable" />
    <altmember cref="T:System.Linq.IQueryable`1" />
  </Docs>
  <Members>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementType : Type" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ elementów, które są zwracane, gdy <see cref="T:System.Linq.IQueryable" /> jest wykonywane drzewo wyrażenia skojarzone z tym wystąpieniem.</summary>
        <value><see cref="T:System.Type" /> Reprezentuje typ elementów, które są zwracane, gdy jest wykonywane drzewo wyrażenia skojarzone z tym obiektem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość reprezentuje "T" w `IQueryable<T>` lub `IQueryable(Of T)`. <xref:System.Linq.IQueryable.ElementType%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Linq.Expressions.Expression" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera drzewo wyrażenia skojarzone z wystąpieniem <see cref="T:System.Linq.IQueryable" />.</summary>
        <value>Jest skojarzona z tym <see cref="T:System.Linq.IQueryable" />wystąpieniem. <see cref="T:System.Linq.Expressions.Expression" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wystąpienie programu <xref:System.Linq.IQueryable> [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] reprezentuje zapytanie względem źródła danych, skojarzone drzewo wyrażenia reprezentuje to zapytanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As IQueryProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::IQueryProvider ^ Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Linq.IQueryProvider" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dostawcę zapytań, który jest skojarzony z tym źródłem danych.</summary>
        <value><see cref="T:System.Linq.IQueryProvider" /> Jest skojarzony z tym źródłem danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wystąpienie <xref:System.Linq.IQueryable> [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] reprezentuje zapytanie względem źródła danych, skojarzony dostawca zapytań jest dostawcą, który utworzył <xref:System.Linq.IQueryable> wystąpienie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
